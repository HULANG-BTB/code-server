{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/protocol/src/browser/modules/stream.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/browser/modules/stream.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"util\");\nvar proxy_1 = require(\"../../common/proxy\");\n// tslint:disable completed-docs\nvar Writable = /** @class */ (function (_super) {\n    tslib_1.__extends(Writable, _super);\n    function Writable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Writable.prototype, \"writable\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Writable.prototype, \"writableHighWaterMark\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Writable.prototype, \"writableLength\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Writable.prototype._write = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype._destroy = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype._final = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype.pipe = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype.cork = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype.uncork = function () {\n        throw new Error(\"not implemented\");\n    };\n    Writable.prototype.destroy = function () {\n        this.catch(this.proxy.destroy());\n    };\n    Writable.prototype.setDefaultEncoding = function (encoding) {\n        return this.catch(this.proxy.setDefaultEncoding(encoding));\n    };\n    // tslint:disable-next-line no-any\n    Writable.prototype.write = function (chunk, encoding, callback) {\n        if (typeof encoding === \"function\") {\n            callback = encoding;\n            encoding = undefined;\n        }\n        util_1.callbackify(this.proxy.write)(chunk, encoding, function (error) {\n            if (callback) {\n                callback(error);\n            }\n        });\n        return true; // Always true since we can't get this synchronously.\n    };\n    // tslint:disable-next-line no-any\n    Writable.prototype.end = function (data, encoding, callback) {\n        if (typeof data === \"function\") {\n            callback = data;\n            data = undefined;\n        }\n        if (typeof encoding === \"function\") {\n            callback = encoding;\n            encoding = undefined;\n        }\n        util_1.callbackify(this.proxy.end)(data, encoding, function () {\n            if (callback) {\n                callback();\n            }\n        });\n    };\n    Writable.prototype.handleDisconnect = function () {\n        this.emit(\"close\");\n        this.emit(\"finish\");\n    };\n    return Writable;\n}(proxy_1.ClientProxy));\nexports.Writable = Writable;\nvar Readable = /** @class */ (function (_super) {\n    tslib_1.__extends(Readable, _super);\n    function Readable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Readable.prototype, \"readable\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Readable.prototype, \"readableHighWaterMark\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Readable.prototype, \"readableLength\", {\n        get: function () {\n            throw new Error(\"not implemented\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Readable.prototype._read = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.read = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype._destroy = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.unpipe = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.pause = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.resume = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.isPaused = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.wrap = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.push = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.unshift = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.pipe = function () {\n        throw new Error(\"not implemented\");\n    };\n    // tslint:disable-next-line no-any\n    Readable.prototype[Symbol.asyncIterator] = function () {\n        throw new Error(\"not implemented\");\n    };\n    Readable.prototype.destroy = function () {\n        this.catch(this.proxy.destroy());\n    };\n    Readable.prototype.setEncoding = function (encoding) {\n        return this.catch(this.proxy.setEncoding(encoding));\n    };\n    Readable.prototype.handleDisconnect = function () {\n        this.emit(\"close\");\n        this.emit(\"end\");\n    };\n    return Readable;\n}(proxy_1.ClientProxy));\nexports.Readable = Readable;\nvar Duplex = /** @class */ (function (_super) {\n    tslib_1.__extends(Duplex, _super);\n    function Duplex(proxyPromise) {\n        var _this = _super.call(this, proxyPromise) || this;\n        _this._readable = new Readable(proxyPromise, false);\n        return _this;\n    }\n    Object.defineProperty(Duplex.prototype, \"readable\", {\n        get: function () {\n            return this._readable.readable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Duplex.prototype, \"readableHighWaterMark\", {\n        get: function () {\n            return this._readable.readableHighWaterMark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Duplex.prototype, \"readableLength\", {\n        get: function () {\n            return this._readable.readableLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Duplex.prototype._read = function () {\n        this._readable._read();\n    };\n    Duplex.prototype.read = function () {\n        this._readable.read();\n    };\n    Duplex.prototype.unpipe = function () {\n        this._readable.unpipe();\n        return this;\n    };\n    Duplex.prototype.pause = function () {\n        this._readable.unpipe();\n        return this;\n    };\n    Duplex.prototype.resume = function () {\n        this._readable.resume();\n        return this;\n    };\n    Duplex.prototype.isPaused = function () {\n        return this._readable.isPaused();\n    };\n    Duplex.prototype.wrap = function () {\n        this._readable.wrap();\n        return this;\n    };\n    Duplex.prototype.push = function () {\n        return this._readable.push();\n    };\n    Duplex.prototype.unshift = function () {\n        this._readable.unshift();\n    };\n    // tslint:disable-next-line no-any\n    Duplex.prototype[Symbol.asyncIterator] = function () {\n        return this._readable[Symbol.asyncIterator]();\n    };\n    Duplex.prototype.setEncoding = function (encoding) {\n        return this.catch(this.proxy.setEncoding(encoding));\n    };\n    Duplex.prototype.handleDisconnect = function () {\n        _super.prototype.handleDisconnect.call(this);\n        this.emit(\"end\");\n    };\n    return Duplex;\n}(Writable));\nexports.Duplex = Duplex;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/browser/modules/stream.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/browser/modules/stream.ts"],"names":[],"mappings":"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","sourcesContent":["import * as stream from \"stream\";\nimport { callbackify } from \"util\";\nimport { ClientProxy } from \"../../common/proxy\";\nimport { DuplexProxy, IReadableProxy, WritableProxy } from \"../../node/modules/stream\";\n\n// tslint:disable completed-docs\n\nexport class Writable<T extends WritableProxy = WritableProxy> extends ClientProxy<T> implements stream.Writable {\n\tpublic get writable(): boolean {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic get writableHighWaterMark(): number {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic get writableLength(): number {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic _write(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic _destroy(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic _final(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic pipe<T>(): T {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic cork(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic uncork(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.catch(this.proxy.destroy());\n\t}\n\n\tpublic setDefaultEncoding(encoding: string): this {\n\t\treturn this.catch(this.proxy.setDefaultEncoding(encoding));\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic write(chunk: any, encoding?: string | ((error?: Error | null) => void), callback?: (error?: Error | null) => void): boolean {\n\t\tif (typeof encoding === \"function\") {\n\t\t\tcallback = encoding;\n\t\t\tencoding = undefined;\n\t\t}\n\t\tcallbackify(this.proxy.write)(chunk, encoding, (error) => {\n\t\t\tif (callback) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\t\t});\n\n\t\treturn true; // Always true since we can't get this synchronously.\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic end(data?: any | (() => void), encoding?: string | (() => void), callback?: (() => void)): void {\n\t\tif (typeof data === \"function\") {\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\t\tif (typeof encoding === \"function\") {\n\t\t\tcallback = encoding;\n\t\t\tencoding = undefined;\n\t\t}\n\t\tcallbackify(this.proxy.end)(data, encoding, () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected handleDisconnect(): void {\n\t\tthis.emit(\"close\");\n\t\tthis.emit(\"finish\");\n\t}\n}\n\nexport class Readable<T extends IReadableProxy = IReadableProxy> extends ClientProxy<T> implements stream.Readable {\n\tpublic get readable(): boolean {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic get readableHighWaterMark(): number {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic get readableLength(): number {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic _read(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic read(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic _destroy(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic unpipe(): this {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic pause(): this {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic resume(): this {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic isPaused(): boolean {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic wrap(): this {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic push(): boolean {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic unshift(): void {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic pipe<T>(): T {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic [Symbol.asyncIterator](): AsyncIterableIterator<any> {\n\t\tthrow new Error(\"not implemented\");\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.catch(this.proxy.destroy());\n\t}\n\n\tpublic setEncoding(encoding: string): this {\n\t\treturn this.catch(this.proxy.setEncoding(encoding));\n\t}\n\n\tprotected handleDisconnect(): void {\n\t\tthis.emit(\"close\");\n\t\tthis.emit(\"end\");\n\t}\n}\n\nexport class Duplex<T extends DuplexProxy = DuplexProxy> extends Writable<T> implements stream.Duplex, stream.Readable {\n\tprivate readonly _readable: Readable;\n\n\tpublic constructor(proxyPromise: Promise<T> | T) {\n\t\tsuper(proxyPromise);\n\t\tthis._readable = new Readable(proxyPromise, false);\n\t}\n\n\tpublic get readable(): boolean {\n\t\treturn this._readable.readable;\n\t}\n\n\tpublic get readableHighWaterMark(): number {\n\t\treturn this._readable.readableHighWaterMark;\n\t}\n\n\tpublic get readableLength(): number {\n\t\treturn this._readable.readableLength;\n\t}\n\n\tpublic _read(): void {\n\t\tthis._readable._read();\n\t}\n\n\tpublic read(): void {\n\t\tthis._readable.read();\n\t}\n\n\tpublic unpipe(): this {\n\t\tthis._readable.unpipe();\n\n\t\treturn this;\n\t}\n\n\tpublic pause(): this {\n\t\tthis._readable.unpipe();\n\n\t\treturn this;\n\t}\n\n\tpublic resume(): this {\n\t\tthis._readable.resume();\n\n\t\treturn this;\n\t}\n\n\tpublic isPaused(): boolean {\n\t\treturn this._readable.isPaused();\n\t}\n\n\tpublic wrap(): this {\n\t\tthis._readable.wrap();\n\n\t\treturn this;\n\t}\n\n\tpublic push(): boolean {\n\t\treturn this._readable.push();\n\t}\n\n\tpublic unshift(): void {\n\t\tthis._readable.unshift();\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic [Symbol.asyncIterator](): AsyncIterableIterator<any> {\n\t\treturn this._readable[Symbol.asyncIterator]();\n\t}\n\n\tpublic setEncoding(encoding: string): this {\n\t\treturn this.catch(this.proxy.setEncoding(encoding));\n\t}\n\n\tprotected handleDisconnect(): void {\n\t\tsuper.handleDisconnect();\n\t\tthis.emit(\"end\");\n\t}\n}\n"]}]}