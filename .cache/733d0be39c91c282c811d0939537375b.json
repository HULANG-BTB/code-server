{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/core/rgba.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/core/rgba.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * A very VM friendly rgba datastructure.\n     * Please don't touch unless you take a look at the IR.\n     */\n    class RGBA8 {\n        constructor(r, g, b, a) {\n            this.r = RGBA8._clamp(r);\n            this.g = RGBA8._clamp(g);\n            this.b = RGBA8._clamp(b);\n            this.a = RGBA8._clamp(a);\n        }\n        static _clamp(c) {\n            if (c < 0) {\n                return 0;\n            }\n            if (c > 255) {\n                return 255;\n            }\n            return c | 0;\n        }\n    }\n    RGBA8.Empty = new RGBA8(0, 0, 0, 0);\n    exports.RGBA8 = RGBA8;\n});\n",null]}