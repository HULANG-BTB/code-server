{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/node/zip\", \"vs/nls\"], function (require, exports, zip_1, nls_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getManifest(vsix) {\n        return zip_1.buffer(vsix, 'extension/package.json')\n            .then(buffer => {\n            try {\n                return JSON.parse(buffer.toString('utf8'));\n            }\n            catch (err) {\n                throw new Error(nls_1.localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n            }\n        });\n    }\n    exports.getManifest = getManifest;\n});\n",null]}