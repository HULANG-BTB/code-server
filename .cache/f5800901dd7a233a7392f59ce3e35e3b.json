{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAgentFileSystemChannel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAgentFileSystemChannel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar uuid_1 = require(\"vs/base/common/uuid\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar buffer_1 = require(\"vs/base/common/buffer\");\nvar platform_1 = require(\"vs/base/common/platform\");\nexports.REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\nvar RemoteExtensionsFileSystemProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoteExtensionsFileSystemProvider, _super);\n    function RemoteExtensionsFileSystemProvider(channel, environment) {\n        var _this = _super.call(this) || this;\n        _this._onDidChange = _this._register(new event_1.Emitter());\n        _this.onDidChangeFile = _this._onDidChange.event;\n        _this._onDidChangeCapabilities = _this._register(new event_1.Emitter());\n        _this.onDidChangeCapabilities = _this._onDidChangeCapabilities.event;\n        _this._session = uuid_1.generateUuid();\n        _this._channel = channel;\n        _this.setCaseSensitive(true);\n        environment.then(function (remoteAgentEnvironment) { return _this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === platform_1.OperatingSystem.Linux)); });\n        _this._channel.listen('filechange', [_this._session])(function (events) {\n            _this._onDidChange.fire(events.map(RemoteExtensionsFileSystemProvider._createFileChange));\n        });\n        return _this;\n    }\n    RemoteExtensionsFileSystemProvider.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.setCaseSensitive = function (isCaseSensitive) {\n        var capabilities = (files_1.FileSystemProviderCapabilities.FileReadWrite\n            | files_1.FileSystemProviderCapabilities.FileFolderCopy);\n        if (isCaseSensitive) {\n            capabilities |= files_1.FileSystemProviderCapabilities.PathCaseSensitive;\n        }\n        this.capabilities = capabilities;\n        this._onDidChangeCapabilities.fire(undefined);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.watch = function (resource, opts) {\n        var _this = this;\n        var req = Math.random();\n        this._channel.call('watch', [this._session, req, resource, opts]);\n        return lifecycle_1.toDisposable(function () {\n            _this._channel.call('unwatch', [_this._session, req]);\n        });\n    };\n    RemoteExtensionsFileSystemProvider._createFileChange = function (dto) {\n        return { resource: uri_1.URI.revive(dto.resource), type: dto.type };\n    };\n    // --- forwarding calls\n    RemoteExtensionsFileSystemProvider.prototype.stat = function (resource) {\n        return this._channel.call('stat', [resource]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.readFile = function (resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var buff;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._channel.call('readFile', [resource])];\n                    case 1:\n                        buff = _a.sent();\n                        return [2 /*return*/, buff.buffer];\n                }\n            });\n        });\n    };\n    RemoteExtensionsFileSystemProvider.prototype.writeFile = function (resource, content, opts) {\n        var contents = buffer_1.VSBuffer.wrap(content);\n        return this._channel.call('writeFile', [resource, contents, opts]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.delete = function (resource, opts) {\n        return this._channel.call('delete', [resource, opts]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.mkdir = function (resource) {\n        return this._channel.call('mkdir', [resource]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.readdir = function (resource) {\n        return this._channel.call('readdir', [resource]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.rename = function (resource, target, opts) {\n        return this._channel.call('rename', [resource, target, opts]);\n    };\n    RemoteExtensionsFileSystemProvider.prototype.copy = function (resource, target, opts) {\n        return this._channel.call('copy', [resource, target, opts]);\n    };\n    return RemoteExtensionsFileSystemProvider;\n}(lifecycle_1.Disposable));\nexports.RemoteExtensionsFileSystemProvider = RemoteExtensionsFileSystemProvider;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAgentFileSystemChannel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAgentFileSystemChannel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, FileWriteOptions, IFileChange, IFileSystemProvider, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteExtensionsFileSystemProvider extends Disposable implements IFileSystemProvider {\n\n\tprivate readonly _session: string;\n\tprivate readonly _channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<IFileChange[]>());\n\treadonly onDidChangeFile: Event<IFileChange[]> = this._onDidChange.event;\n\n\tpublic capabilities: FileSystemProviderCapabilities;\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities: Event<void> = this._onDidChangeCapabilities.event;\n\n\tconstructor(channel: IChannel, environment: Promise<IRemoteAgentEnvironment | null>) {\n\t\tsuper();\n\t\tthis._session = generateUuid();\n\t\tthis._channel = channel;\n\n\t\tthis.setCaseSensitive(true);\n\t\tenvironment.then(remoteAgentEnvironment => this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === OperatingSystem.Linux)));\n\n\t\tthis._channel.listen<IFileChangeDto[]>('filechange', [this._session])((events) => {\n\t\t\tthis._onDidChange.fire(events.map(RemoteExtensionsFileSystemProvider._createFileChange));\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tthis.capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis._channel.call('watch', [this._session, req, resource, opts]);\n\t\treturn toDisposable(() => {\n\t\t\tthis._channel.call('unwatch', [this._session, req]);\n\t\t});\n\t}\n\n\tprivate static _createFileChange(dto: IFileChangeDto): IFileChange {\n\t\treturn { resource: URI.revive(dto.resource), type: dto.type };\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this._channel.call('stat', [resource]);\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this._channel.call('readFile', [resource]);\n\t\treturn buff.buffer;\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tconst contents = VSBuffer.wrap(content);\n\t\treturn this._channel.call('writeFile', [resource, contents, opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this._channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this._channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this._channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this._channel.call('copy', [resource, target, opts]);\n\t}\n}\n"]}]}