{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/ide/src/fill/os.ts","dependencies":[{"path":"/home/coding/workspace/packages/ide/src/fill/os.ts","mtime":1555841535682},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nvar protocol_1 = require(\"@coder/protocol\");\nvar client_1 = require(\"./client\");\nvar OS = /** @class */ (function () {\n    function OS() {\n        var _this = this;\n        client_1.client.initData.then(function (d) { return _this.initialize(d); });\n    }\n    OS.prototype.homedir = function () {\n        if (typeof this._homedir === \"undefined\") {\n            throw new Error(\"trying to access homedir before it has been set\");\n        }\n        return this._homedir;\n    };\n    OS.prototype.tmpdir = function () {\n        if (typeof this._tmpdir === \"undefined\") {\n            throw new Error(\"trying to access tmpdir before it has been set\");\n        }\n        return this._tmpdir;\n    };\n    OS.prototype.initialize = function (data) {\n        this._homedir = data.homeDirectory;\n        this._tmpdir = data.tmpDirectory;\n        switch (data.os) {\n            case protocol_1.OperatingSystem.Windows:\n                this._platform = \"win32\";\n                break;\n            case protocol_1.OperatingSystem.Mac:\n                this._platform = \"darwin\";\n                break;\n            default:\n                this._platform = \"linux\";\n                break;\n        }\n        process.platform = this._platform;\n    };\n    OS.prototype.release = function () {\n        return \"Unknown\";\n    };\n    OS.prototype.platform = function () {\n        if (typeof this._platform === \"undefined\") {\n            throw new Error(\"trying to access platform before it has been set\");\n        }\n        return this._platform;\n    };\n    return OS;\n}());\nmodule.exports = new OS();\n",{"version":3,"file":"/home/coding/workspace/packages/ide/src/fill/os.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/ide/src/fill/os.ts"],"names":[],"mappings":";AAAA,4CAA4D;AAC5D,mCAAkC;AAElC;IAKC;QAAA,iBAEC;QADA,eAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACjD,CAAC;IAEM,oBAAO,GAAd;QACC,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACnE;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEM,mBAAM,GAAb;QACC,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,uBAAU,GAAjB,UAAkB,IAAc;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QACjC,QAAQ,IAAI,CAAC,EAAE,EAAE;YAChB,KAAK,0BAAe,CAAC,OAAO;gBAAE,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;gBAAC,MAAM;YAC9D,KAAK,0BAAe,CAAC,GAAG;gBAAE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAAC,MAAM;YAC3D;gBAAS,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;gBAAC,MAAM;SACzC;QACD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAEM,oBAAO,GAAd;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAEM,qBAAQ,GAAf;QACC,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACpE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IACF,SAAC;AAAD,CAAC,AA/CD,IA+CC;AAED,iBAAS,IAAI,EAAE,EAAE,CAAC","sourcesContent":["import { OperatingSystem, InitData } from \"@coder/protocol\";\nimport { client } from \"./client\";\n\nclass OS {\n\tprivate _homedir: string | undefined;\n\tprivate _tmpdir: string | undefined;\n\tprivate _platform: NodeJS.Platform | undefined;\n\n\tpublic constructor() {\n\t\tclient.initData.then((d) => this.initialize(d));\n\t}\n\n\tpublic homedir(): string {\n\t\tif (typeof this._homedir === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access homedir before it has been set\");\n\t\t}\n\n\t\treturn this._homedir;\n\t}\n\n\tpublic tmpdir(): string {\n\t\tif (typeof this._tmpdir === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access tmpdir before it has been set\");\n\t\t}\n\n\t\treturn this._tmpdir;\n\t}\n\n\tpublic initialize(data: InitData): void {\n\t\tthis._homedir = data.homeDirectory;\n\t\tthis._tmpdir = data.tmpDirectory;\n\t\tswitch (data.os) {\n\t\t\tcase OperatingSystem.Windows: this._platform = \"win32\"; break;\n\t\t\tcase OperatingSystem.Mac: this._platform = \"darwin\"; break;\n\t\t\tdefault: this._platform = \"linux\"; break;\n\t\t}\n\t\tprocess.platform = this._platform;\n\t}\n\n\tpublic release(): string {\n\t\treturn \"Unknown\";\n\t}\n\n\tpublic platform(): NodeJS.Platform {\n\t\tif (typeof this._platform === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access platform before it has been set\");\n\t\t}\n\n\t\treturn this._platform;\n\t}\n}\n\nexport = new OS();\n"]}]}