{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/parts/contextmenu/electron-browser/contextmenu.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/parts/contextmenu/electron-browser/contextmenu.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar electron_1 = require(\"electron\");\nvar contextmenu_1 = require(\"vs/base/parts/contextmenu/common/contextmenu\");\nvar contextMenuIdPool = 0;\nfunction popup(items, options) {\n    var processedItems = [];\n    var contextMenuId = contextMenuIdPool++;\n    var onClickChannel = \"vscode:onContextMenu\" + contextMenuId;\n    var onClickChannelHandler = function (_event, itemId, context) {\n        var item = processedItems[itemId];\n        if (item.click) {\n            item.click(context);\n        }\n    };\n    electron_1.ipcRenderer.once(onClickChannel, onClickChannelHandler);\n    electron_1.ipcRenderer.once(contextmenu_1.CONTEXT_MENU_CLOSE_CHANNEL, function (_event, closedContextMenuId) {\n        if (closedContextMenuId !== contextMenuId) {\n            return;\n        }\n        electron_1.ipcRenderer.removeListener(onClickChannel, onClickChannelHandler);\n        if (options && options.onHide) {\n            options.onHide();\n        }\n    });\n    electron_1.ipcRenderer.send(contextmenu_1.CONTEXT_MENU_CHANNEL, contextMenuId, items.map(function (item) { return createItem(item, processedItems); }), onClickChannel, options);\n}\nexports.popup = popup;\nfunction createItem(item, processedItems) {\n    var serializableItem = {\n        id: processedItems.length,\n        label: item.label,\n        type: item.type,\n        accelerator: item.accelerator,\n        checked: item.checked,\n        enabled: typeof item.enabled === 'boolean' ? item.enabled : true,\n        visible: typeof item.visible === 'boolean' ? item.visible : true\n    };\n    processedItems.push(item);\n    // Submenu\n    if (Array.isArray(item.submenu)) {\n        serializableItem.submenu = item.submenu.map(function (submenuItem) { return createItem(submenuItem, processedItems); });\n    }\n    return serializableItem;\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/parts/contextmenu/electron-browser/contextmenu.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/parts/contextmenu/electron-browser/contextmenu.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,qCAA8C;AAC9C,4EAAkM;AAElM,IAAI,iBAAiB,GAAG,CAAC,CAAC;AAE1B,SAAgB,KAAK,CAAC,KAAyB,EAAE,OAAuB;IACvE,IAAM,cAAc,GAAuB,EAAE,CAAC;IAE9C,IAAM,aAAa,GAAG,iBAAiB,EAAE,CAAC;IAC1C,IAAM,cAAc,GAAG,yBAAuB,aAAe,CAAC;IAC9D,IAAM,qBAAqB,GAAG,UAAC,MAAa,EAAE,MAAc,EAAE,OAA0B;QACvF,IAAM,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpB;IACF,CAAC,CAAC;IAEF,sBAAW,CAAC,IAAI,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;IACxD,sBAAW,CAAC,IAAI,CAAC,wCAA0B,EAAE,UAAC,MAAa,EAAE,mBAA2B;QACvF,IAAI,mBAAmB,KAAK,aAAa,EAAE;YAC1C,OAAO;SACP;QAED,sBAAW,CAAC,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;QAElE,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YAC9B,OAAO,CAAC,MAAM,EAAE,CAAC;SACjB;IACF,CAAC,CAAC,CAAC;IAEH,sBAAW,CAAC,IAAI,CAAC,kCAAoB,EAAE,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,EAAhC,CAAgC,CAAC,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;AACrI,CAAC;AA1BD,sBA0BC;AAED,SAAS,UAAU,CAAC,IAAsB,EAAE,cAAkC;IAC7E,IAAM,gBAAgB,GAAG;QACxB,EAAE,EAAE,cAAc,CAAC,MAAM;QACzB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,WAAW,EAAE,IAAI,CAAC,WAAW;QAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,OAAO,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;QAChE,OAAO,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;KAChC,CAAC;IAElC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE1B,UAAU;IACV,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QAChC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,WAAW,IAAI,OAAA,UAAU,CAAC,WAAW,EAAE,cAAc,CAAC,EAAvC,CAAuC,CAAC,CAAC;KACpG;IAED,OAAO,gBAAgB,CAAC;AACzB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer, Event } from 'electron';\nimport { IContextMenuItem, ISerializableContextMenuItem, CONTEXT_MENU_CLOSE_CHANNEL, CONTEXT_MENU_CHANNEL, IPopupOptions, IContextMenuEvent } from 'vs/base/parts/contextmenu/common/contextmenu';\n\nlet contextMenuIdPool = 0;\n\nexport function popup(items: IContextMenuItem[], options?: IPopupOptions): void {\n\tconst processedItems: IContextMenuItem[] = [];\n\n\tconst contextMenuId = contextMenuIdPool++;\n\tconst onClickChannel = `vscode:onContextMenu${contextMenuId}`;\n\tconst onClickChannelHandler = (_event: Event, itemId: number, context: IContextMenuEvent) => {\n\t\tconst item = processedItems[itemId];\n\t\tif (item.click) {\n\t\t\titem.click(context);\n\t\t}\n\t};\n\n\tipcRenderer.once(onClickChannel, onClickChannelHandler);\n\tipcRenderer.once(CONTEXT_MENU_CLOSE_CHANNEL, (_event: Event, closedContextMenuId: number) => {\n\t\tif (closedContextMenuId !== contextMenuId) {\n\t\t\treturn;\n\t\t}\n\n\t\tipcRenderer.removeListener(onClickChannel, onClickChannelHandler);\n\n\t\tif (options && options.onHide) {\n\t\t\toptions.onHide();\n\t\t}\n\t});\n\n\tipcRenderer.send(CONTEXT_MENU_CHANNEL, contextMenuId, items.map(item => createItem(item, processedItems)), onClickChannel, options);\n}\n\nfunction createItem(item: IContextMenuItem, processedItems: IContextMenuItem[]): ISerializableContextMenuItem {\n\tconst serializableItem = {\n\t\tid: processedItems.length,\n\t\tlabel: item.label,\n\t\ttype: item.type,\n\t\taccelerator: item.accelerator,\n\t\tchecked: item.checked,\n\t\tenabled: typeof item.enabled === 'boolean' ? item.enabled : true,\n\t\tvisible: typeof item.visible === 'boolean' ? item.visible : true\n\t} as ISerializableContextMenuItem;\n\n\tprocessedItems.push(item);\n\n\t// Submenu\n\tif (Array.isArray(item.submenu)) {\n\t\tserializableItem.submenu = item.submenu.map(submenuItem => createItem(submenuItem, processedItems));\n\t}\n\n\treturn serializableItem;\n}"]}]}