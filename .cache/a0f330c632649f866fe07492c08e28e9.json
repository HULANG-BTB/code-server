{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/standalone/standaloneBase.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/standalone/standaloneBase.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/editor/common/standalone/promise-polyfill/polyfill\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar selection_1 = require(\"vs/editor/common/core/selection\");\nvar token_1 = require(\"vs/editor/common/core/token\");\nvar standaloneEnums = require(\"vs/editor/common/standalone/standaloneEnums\");\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return keyCodes_1.KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = keyCodes_1.KeyMod.CtrlCmd;\n    KeyMod.Shift = keyCodes_1.KeyMod.Shift;\n    KeyMod.Alt = keyCodes_1.KeyMod.Alt;\n    KeyMod.WinCtrl = keyCodes_1.KeyMod.WinCtrl;\n    return KeyMod;\n}());\nexports.KeyMod = KeyMod;\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: cancellation_1.CancellationTokenSource,\n        Emitter: event_1.Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: position_1.Position,\n        Range: range_1.Range,\n        Selection: selection_1.Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: uri_1.URI,\n        Token: token_1.Token\n    };\n}\nexports.createMonacoBaseAPI = createMonacoBaseAPI;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/standalone/standaloneBase.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/standalone/standaloneBase.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,iEAA+D;AAC/D,4DAAsE;AACtE,8CAA+C;AAC/C,oDAA0E;AAC1E,0CAAyC;AACzC,2DAA0D;AAC1D,qDAAoD;AACpD,6DAA4D;AAC5D,qDAAoD;AACpD,6EAA+E;AAE/E;IAAA;IASA,CAAC;IAHc,YAAK,GAAnB,UAAoB,SAAiB,EAAE,UAAkB;QACxD,OAAO,mBAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC;IAPsB,cAAO,GAAW,iBAAW,CAAC,OAAO,CAAC;IACtC,YAAK,GAAW,iBAAW,CAAC,KAAK,CAAC;IAClC,UAAG,GAAW,iBAAW,CAAC,GAAG,CAAC;IAC9B,cAAO,GAAW,iBAAW,CAAC,OAAO,CAAC;IAK9D,aAAC;CAAA,AATD,IASC;AATY,wBAAM;AAWnB,SAAgB,mBAAmB;IAClC,OAAO;QACN,MAAM,EAAE,SAAU;QAClB,SAAS,EAAE,SAAU;QACrB,uBAAuB,EAAE,sCAAuB;QAChD,OAAO,EAAE,eAAO;QAChB,OAAO,EAAE,eAAe,CAAC,OAAO;QAChC,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,mBAAQ;QAClB,KAAK,EAAE,aAAK;QACZ,SAAS,EAAO,qBAAS;QACzB,kBAAkB,EAAE,eAAe,CAAC,kBAAkB;QACtD,cAAc,EAAE,eAAe,CAAC,cAAc;QAC9C,SAAS,EAAE,eAAe,CAAC,SAAS;QACpC,GAAG,EAAO,SAAG;QACb,KAAK,EAAE,aAAK;KACZ,CAAC;AACH,CAAC;AAjBD,kDAiBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/editor/common/standalone/promise-polyfill/polyfill';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n"]}]}