{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/assert.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/assert.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nfunction ok(value, message) {\n    if (!value) {\n        throw new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n    }\n}\nexports.ok = ok;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/assert.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/assert.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG;;GAEG;AACH,SAAgB,EAAE,CAAC,KAAW,EAAE,OAAgB;IAC/C,IAAI,CAAC,KAAK,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;KACrF;AACF,CAAC;AAJD,gBAIC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n"]}]}