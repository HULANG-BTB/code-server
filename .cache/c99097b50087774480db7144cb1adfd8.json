{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/electron-browser/remoteAgentServiceImpl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/electron-browser/remoteAgentServiceImpl.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar remoteAuthorityResolver_1 = require(\"vs/platform/remote/common/remoteAuthorityResolver\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar nodeWebSocketFactory_1 = require(\"vs/platform/remote/node/nodeWebSocketFactory\");\nvar abstractRemoteAgentService_1 = require(\"vs/workbench/services/remote/common/abstractRemoteAgentService\");\nvar RemoteAgentService = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoteAgentService, _super);\n    function RemoteAgentService(_a, environmentService, remoteAuthorityResolverService) {\n        var remoteAuthority = _a.remoteAuthority;\n        var _this = _super.call(this, environmentService) || this;\n        _this._connection = null;\n        if (remoteAuthority) {\n            _this._connection = _this._register(new abstractRemoteAgentService_1.RemoteAgentConnection(remoteAuthority, product_1.default.commit, nodeWebSocketFactory_1.nodeWebSocketFactory, environmentService, remoteAuthorityResolverService));\n        }\n        return _this;\n    }\n    RemoteAgentService.prototype.getConnection = function () {\n        return this._connection;\n    };\n    RemoteAgentService = tslib_1.__decorate([\n        tslib_1.__param(1, environment_1.IEnvironmentService),\n        tslib_1.__param(2, remoteAuthorityResolver_1.IRemoteAuthorityResolverService)\n    ], RemoteAgentService);\n    return RemoteAgentService;\n}(abstractRemoteAgentService_1.AbstractRemoteAgentService));\nexports.RemoteAgentService = RemoteAgentService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/electron-browser/remoteAgentServiceImpl.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/electron-browser/remoteAgentServiceImpl.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,0EAAiF;AAGjF,6FAAoG;AACpG,4DAAuD;AACvD,qFAAoF;AACpF,6GAAmI;AAEnI;IAAwC,8CAA0B;IAIjE,4BAAY,EAAyC,EAC/B,kBAAuC,EAC3B,8BAA+D;YAFnF,oCAAe;QAA7B,YAIC,kBAAM,kBAAkB,CAAC,SAIzB;QAVgB,iBAAW,GAAkC,IAAI,CAAC;QAOlE,IAAI,eAAe,EAAE;YACpB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,kDAAqB,CAAC,eAAe,EAAE,iBAAO,CAAC,MAAM,EAAE,2CAAoB,EAAE,kBAAkB,EAAE,8BAA8B,CAAC,CAAC,CAAC;SACxK;;IACF,CAAC;IAED,0CAAa,GAAb;QACC,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAhBW,kBAAkB;QAK5B,mBAAA,iCAAmB,CAAA;QACnB,mBAAA,yDAA+B,CAAA;OANrB,kBAAkB,CAiB9B;IAAD,yBAAC;CAAA,AAjBD,CAAwC,uDAA0B,GAiBjE;AAjBY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWindowConfiguration } from 'vs/platform/windows/common/windows';\nimport { IRemoteAgentConnection } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport product from 'vs/platform/product/node/product';\nimport { nodeWebSocketFactory } from 'vs/platform/remote/node/nodeWebSocketFactory';\nimport { AbstractRemoteAgentService, RemoteAgentConnection } from 'vs/workbench/services/remote/common/abstractRemoteAgentService';\n\nexport class RemoteAgentService extends AbstractRemoteAgentService {\n\n\tprivate readonly _connection: IRemoteAgentConnection | null = null;\n\n\tconstructor({ remoteAuthority }: IWindowConfiguration,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService\n\t) {\n\t\tsuper(environmentService);\n\t\tif (remoteAuthority) {\n\t\t\tthis._connection = this._register(new RemoteAgentConnection(remoteAuthority, product.commit, nodeWebSocketFactory, environmentService, remoteAuthorityResolverService));\n\t\t}\n\t}\n\n\tgetConnection(): IRemoteAgentConnection | null {\n\t\treturn this._connection;\n\t}\n}\n"]}]}