{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostDialogs.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostDialogs.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/uri\", \"vs/workbench/api/common/extHost.protocol\"], function (require, exports, uri_1, extHost_protocol_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ExtHostDialogs {\n        constructor(mainContext) {\n            this._proxy = mainContext.getProxy(extHost_protocol_1.MainContext.MainThreadDialogs);\n        }\n        showOpenDialog(options) {\n            return this._proxy.$showOpenDialog(options).then(filepaths => {\n                return filepaths ? filepaths.map(uri_1.URI.revive) : undefined;\n            });\n        }\n        showSaveDialog(options) {\n            return this._proxy.$showSaveDialog(options).then(filepath => {\n                return filepath ? uri_1.URI.revive(filepath) : undefined;\n            });\n        }\n    }\n    exports.ExtHostDialogs = ExtHostDialogs;\n});\n",null]}