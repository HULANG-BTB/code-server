{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingWidgets.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/keybindings\");\nvar nls = require(\"vs/nls\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keybindingLabel_1 = require(\"vs/base/browser/ui/keybindingLabel/keybindingLabel\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar dom = require(\"vs/base/browser/dom\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar preferencesWidgets_1 = require(\"vs/workbench/contrib/preferences/browser/preferencesWidgets\");\nvar KeybindingsSearchWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(KeybindingsSearchWidget, _super);\n    function KeybindingsSearchWidget(parent, options, contextViewService, keybindingService, instantiationService, themeService) {\n        var _this = _super.call(this, parent, options, contextViewService, instantiationService, themeService) || this;\n        _this.keybindingService = keybindingService;\n        _this.recordDisposables = [];\n        _this._onKeybinding = _this._register(new event_1.Emitter());\n        _this.onKeybinding = _this._onKeybinding.event;\n        _this._onEnter = _this._register(new event_1.Emitter());\n        _this.onEnter = _this._onEnter.event;\n        _this._onEscape = _this._register(new event_1.Emitter());\n        _this.onEscape = _this._onEscape.event;\n        _this._onBlur = _this._register(new event_1.Emitter());\n        _this.onBlur = _this._onBlur.event;\n        _this._register(styler_1.attachInputBoxStyler(_this.inputBox, themeService));\n        _this._register(lifecycle_1.toDisposable(function () { return _this.stopRecordingKeys(); }));\n        _this._reset();\n        return _this;\n    }\n    KeybindingsSearchWidget.prototype.clear = function () {\n        this._reset();\n        _super.prototype.clear.call(this);\n    };\n    KeybindingsSearchWidget.prototype.startRecordingKeys = function () {\n        var _this = this;\n        this.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, function (e) { return _this._onKeyDown(new keyboardEvent_1.StandardKeyboardEvent(e)); }));\n        this.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.BLUR, function () { return _this._onBlur.fire(); }));\n        this.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.INPUT, function () {\n            // Prevent other characters from showing up\n            _this.setInputValue(_this._inputValue);\n        }));\n    };\n    KeybindingsSearchWidget.prototype.stopRecordingKeys = function () {\n        this._reset();\n        lifecycle_1.dispose(this.recordDisposables);\n    };\n    KeybindingsSearchWidget.prototype.setInputValue = function (value) {\n        this._inputValue = value;\n        this.inputBox.value = this._inputValue;\n    };\n    KeybindingsSearchWidget.prototype._reset = function () {\n        this._firstPart = null;\n        this._chordPart = null;\n    };\n    KeybindingsSearchWidget.prototype._onKeyDown = function (keyboardEvent) {\n        keyboardEvent.preventDefault();\n        keyboardEvent.stopPropagation();\n        var options = this.options;\n        if (!options.recordEnter && keyboardEvent.equals(keyCodes_1.KeyCode.Enter)) {\n            this._onEnter.fire();\n            return;\n        }\n        if (keyboardEvent.equals(keyCodes_1.KeyCode.Escape)) {\n            this._onEscape.fire();\n            return;\n        }\n        this.printKeybinding(keyboardEvent);\n    };\n    KeybindingsSearchWidget.prototype.printKeybinding = function (keyboardEvent) {\n        var keybinding = this.keybindingService.resolveKeyboardEvent(keyboardEvent);\n        var info = \"code: \" + keyboardEvent.browserEvent.code + \", keyCode: \" + keyboardEvent.browserEvent.keyCode + \", key: \" + keyboardEvent.browserEvent.key + \" => UI: \" + keybinding.getAriaLabel() + \", user settings: \" + keybinding.getUserSettingsLabel() + \", dispatch: \" + keybinding.getDispatchParts()[0];\n        var options = this.options;\n        var hasFirstPart = (this._firstPart && this._firstPart.getDispatchParts()[0] !== null);\n        var hasChordPart = (this._chordPart && this._chordPart.getDispatchParts()[0] !== null);\n        if (hasFirstPart && hasChordPart) {\n            // Reset\n            this._firstPart = keybinding;\n            this._chordPart = null;\n        }\n        else if (!hasFirstPart) {\n            this._firstPart = keybinding;\n        }\n        else {\n            this._chordPart = keybinding;\n        }\n        var value = '';\n        if (this._firstPart) {\n            value = (this._firstPart.getUserSettingsLabel() || '');\n        }\n        if (this._chordPart) {\n            value = value + ' ' + this._chordPart.getUserSettingsLabel();\n        }\n        this.setInputValue(options.quoteRecordedKeys ? \"\\\"\" + value + \"\\\"\" : value);\n        this.inputBox.inputElement.title = info;\n        this._onKeybinding.fire([this._firstPart, this._chordPart]);\n    };\n    KeybindingsSearchWidget = tslib_1.__decorate([\n        tslib_1.__param(2, contextView_1.IContextViewService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, themeService_1.IThemeService)\n    ], KeybindingsSearchWidget);\n    return KeybindingsSearchWidget;\n}(preferencesWidgets_1.SearchWidget));\nexports.KeybindingsSearchWidget = KeybindingsSearchWidget;\nvar DefineKeybindingWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(DefineKeybindingWidget, _super);\n    function DefineKeybindingWidget(parent, instantiationService, themeService) {\n        var _this = _super.call(this) || this;\n        _this.instantiationService = instantiationService;\n        _this.themeService = themeService;\n        _this._firstPart = null;\n        _this._chordPart = null;\n        _this._isVisible = false;\n        _this._onHide = _this._register(new event_1.Emitter());\n        _this._onDidChange = _this._register(new event_1.Emitter());\n        _this.onDidChange = _this._onDidChange.event;\n        _this._onShowExistingKeybindings = _this._register(new event_1.Emitter());\n        _this.onShowExistingKeybidings = _this._onShowExistingKeybindings.event;\n        _this.create();\n        if (parent) {\n            dom.append(parent, _this._domNode.domNode);\n        }\n        return _this;\n    }\n    Object.defineProperty(DefineKeybindingWidget.prototype, \"domNode\", {\n        get: function () {\n            return this._domNode.domNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefineKeybindingWidget.prototype.define = function () {\n        var _this = this;\n        this._keybindingInputWidget.clear();\n        return new Promise(function (c) {\n            if (!_this._isVisible) {\n                _this._isVisible = true;\n                _this._domNode.setDisplay('block');\n                _this._firstPart = null;\n                _this._chordPart = null;\n                _this._keybindingInputWidget.setInputValue('');\n                dom.clearNode(_this._outputNode);\n                dom.clearNode(_this._showExistingKeybindingsNode);\n                _this._keybindingInputWidget.focus();\n            }\n            var disposable = _this._onHide.event(function () {\n                c(_this.getUserSettingsLabel());\n                disposable.dispose();\n            });\n        });\n    };\n    DefineKeybindingWidget.prototype.layout = function (layout) {\n        var top = Math.round((layout.height - DefineKeybindingWidget.HEIGHT) / 2);\n        this._domNode.setTop(top);\n        var left = Math.round((layout.width - DefineKeybindingWidget.WIDTH) / 2);\n        this._domNode.setLeft(left);\n    };\n    DefineKeybindingWidget.prototype.printExisting = function (numberOfExisting) {\n        var _this = this;\n        if (numberOfExisting > 0) {\n            var existingElement = dom.$('span.existingText');\n            var text = numberOfExisting === 1 ? nls.localize('defineKeybinding.oneExists', \"1 existing command has this keybinding\", numberOfExisting) : nls.localize('defineKeybinding.existing', \"{0} existing commands have this keybinding\", numberOfExisting);\n            dom.append(existingElement, document.createTextNode(text));\n            this._showExistingKeybindingsNode.appendChild(existingElement);\n            existingElement.onmousedown = function (e) { e.preventDefault(); };\n            existingElement.onmouseup = function (e) { e.preventDefault(); };\n            existingElement.onclick = function () { _this._onShowExistingKeybindings.fire(_this.getUserSettingsLabel()); };\n        }\n    };\n    DefineKeybindingWidget.prototype.create = function () {\n        var _this = this;\n        this._domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        this._domNode.setDisplay('none');\n        this._domNode.setClassName('defineKeybindingWidget');\n        this._domNode.setWidth(DefineKeybindingWidget.WIDTH);\n        this._domNode.setHeight(DefineKeybindingWidget.HEIGHT);\n        var message = nls.localize('defineKeybinding.initial', \"Press desired key combination and then press ENTER.\");\n        dom.append(this._domNode.domNode, dom.$('.message', undefined, message));\n        this._register(styler_1.attachStylerCallback(this.themeService, { editorWidgetBackground: colorRegistry_1.editorWidgetBackground, widgetShadow: colorRegistry_1.widgetShadow }, function (colors) {\n            if (colors.editorWidgetBackground) {\n                _this._domNode.domNode.style.backgroundColor = colors.editorWidgetBackground.toString();\n            }\n            else {\n                _this._domNode.domNode.style.backgroundColor = null;\n            }\n            if (colors.widgetShadow) {\n                _this._domNode.domNode.style.boxShadow = \"0 2px 8px \" + colors.widgetShadow;\n            }\n            else {\n                _this._domNode.domNode.style.boxShadow = null;\n            }\n        }));\n        this._keybindingInputWidget = this._register(this.instantiationService.createInstance(KeybindingsSearchWidget, this._domNode.domNode, { ariaLabel: message }));\n        this._keybindingInputWidget.startRecordingKeys();\n        this._register(this._keybindingInputWidget.onKeybinding(function (keybinding) { return _this.onKeybinding(keybinding); }));\n        this._register(this._keybindingInputWidget.onEnter(function () { return _this.hide(); }));\n        this._register(this._keybindingInputWidget.onEscape(function () { return _this.onCancel(); }));\n        this._register(this._keybindingInputWidget.onBlur(function () { return _this.onCancel(); }));\n        this._outputNode = dom.append(this._domNode.domNode, dom.$('.output'));\n        this._showExistingKeybindingsNode = dom.append(this._domNode.domNode, dom.$('.existing'));\n    };\n    DefineKeybindingWidget.prototype.onKeybinding = function (keybinding) {\n        var firstPart = keybinding[0], chordPart = keybinding[1];\n        this._firstPart = firstPart;\n        this._chordPart = chordPart;\n        dom.clearNode(this._outputNode);\n        dom.clearNode(this._showExistingKeybindingsNode);\n        new keybindingLabel_1.KeybindingLabel(this._outputNode, platform_1.OS).set(this._firstPart);\n        if (this._chordPart) {\n            this._outputNode.appendChild(document.createTextNode(nls.localize('defineKeybinding.chordsTo', \"chord to\")));\n            new keybindingLabel_1.KeybindingLabel(this._outputNode, platform_1.OS).set(this._chordPart);\n        }\n        var label = this.getUserSettingsLabel();\n        if (label) {\n            this._onDidChange.fire(label);\n        }\n    };\n    DefineKeybindingWidget.prototype.getUserSettingsLabel = function () {\n        var label = null;\n        if (this._firstPart) {\n            label = this._firstPart.getUserSettingsLabel();\n            if (this._chordPart) {\n                label = label + ' ' + this._chordPart.getUserSettingsLabel();\n            }\n        }\n        return label;\n    };\n    DefineKeybindingWidget.prototype.onCancel = function () {\n        this._firstPart = null;\n        this._chordPart = null;\n        this.hide();\n    };\n    DefineKeybindingWidget.prototype.hide = function () {\n        this._domNode.setDisplay('none');\n        this._isVisible = false;\n        this._onHide.fire();\n    };\n    DefineKeybindingWidget.WIDTH = 400;\n    DefineKeybindingWidget.HEIGHT = 110;\n    DefineKeybindingWidget = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, themeService_1.IThemeService)\n    ], DefineKeybindingWidget);\n    return DefineKeybindingWidget;\n}(widget_1.Widget));\nexports.DefineKeybindingWidget = DefineKeybindingWidget;\nvar DefineKeybindingOverlayWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(DefineKeybindingOverlayWidget, _super);\n    function DefineKeybindingOverlayWidget(_editor, instantiationService) {\n        var _this = _super.call(this) || this;\n        _this._editor = _editor;\n        _this._widget = instantiationService.createInstance(DefineKeybindingWidget, null);\n        _this._editor.addOverlayWidget(_this);\n        return _this;\n    }\n    DefineKeybindingOverlayWidget.prototype.getId = function () {\n        return DefineKeybindingOverlayWidget.ID;\n    };\n    DefineKeybindingOverlayWidget.prototype.getDomNode = function () {\n        return this._widget.domNode;\n    };\n    DefineKeybindingOverlayWidget.prototype.getPosition = function () {\n        return {\n            preference: null\n        };\n    };\n    DefineKeybindingOverlayWidget.prototype.dispose = function () {\n        this._editor.removeOverlayWidget(this);\n        _super.prototype.dispose.call(this);\n    };\n    DefineKeybindingOverlayWidget.prototype.start = function () {\n        if (this._editor.hasModel()) {\n            this._editor.revealPositionInCenterIfOutsideViewport(this._editor.getPosition(), editorCommon_1.ScrollType.Smooth);\n        }\n        var layoutInfo = this._editor.getLayoutInfo();\n        this._widget.layout(new dom.Dimension(layoutInfo.width, layoutInfo.height));\n        return this._widget.define();\n    };\n    DefineKeybindingOverlayWidget.ID = 'editor.contrib.defineKeybindingWidget';\n    DefineKeybindingOverlayWidget = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService)\n    ], DefineKeybindingOverlayWidget);\n    return DefineKeybindingOverlayWidget;\n}(lifecycle_1.Disposable));\nexports.DefineKeybindingOverlayWidget = DefineKeybindingOverlayWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingWidgets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/keybindings';\nimport * as nls from 'vs/nls';\nimport { OS } from 'vs/base/common/platform';\nimport { Disposable, dispose, toDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { KeybindingLabel } from 'vs/base/browser/ui/keybindingLabel/keybindingLabel';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { ResolvedKeybinding, KeyCode } from 'vs/base/common/keyCodes';\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent, StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { attachInputBoxStyler, attachStylerCallback } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { editorWidgetBackground, widgetShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { SearchWidget, SearchOptions } from 'vs/workbench/contrib/preferences/browser/preferencesWidgets';\n\nexport interface KeybindingsSearchOptions extends SearchOptions {\n\trecordEnter?: boolean;\n\tquoteRecordedKeys?: boolean;\n}\n\nexport class KeybindingsSearchWidget extends SearchWidget {\n\n\tprivate _firstPart: ResolvedKeybinding | null;\n\tprivate _chordPart: ResolvedKeybinding | null;\n\tprivate _inputValue: string;\n\n\tprivate recordDisposables: IDisposable[] = [];\n\n\tprivate _onKeybinding = this._register(new Emitter<[ResolvedKeybinding | null, ResolvedKeybinding | null]>());\n\treadonly onKeybinding: Event<[ResolvedKeybinding | null, ResolvedKeybinding | null]> = this._onKeybinding.event;\n\n\tprivate _onEnter = this._register(new Emitter<void>());\n\treadonly onEnter: Event<void> = this._onEnter.event;\n\n\tprivate _onEscape = this._register(new Emitter<void>());\n\treadonly onEscape: Event<void> = this._onEscape.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\treadonly onBlur: Event<void> = this._onBlur.event;\n\n\tconstructor(parent: HTMLElement, options: SearchOptions,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(parent, options, contextViewService, instantiationService, themeService);\n\t\tthis._register(attachInputBoxStyler(this.inputBox, themeService));\n\t\tthis._register(toDisposable(() => this.stopRecordingKeys()));\n\n\t\tthis._reset();\n\t}\n\n\tclear(): void {\n\t\tthis._reset();\n\t\tsuper.clear();\n\t}\n\n\tstartRecordingKeys(): void {\n\t\tthis.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => this._onKeyDown(new StandardKeyboardEvent(e))));\n\t\tthis.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.BLUR, () => this._onBlur.fire()));\n\t\tthis.recordDisposables.push(dom.addDisposableListener(this.inputBox.inputElement, dom.EventType.INPUT, () => {\n\t\t\t// Prevent other characters from showing up\n\t\t\tthis.setInputValue(this._inputValue);\n\t\t}));\n\t}\n\n\tstopRecordingKeys(): void {\n\t\tthis._reset();\n\t\tdispose(this.recordDisposables);\n\t}\n\n\tsetInputValue(value: string): void {\n\t\tthis._inputValue = value;\n\t\tthis.inputBox.value = this._inputValue;\n\t}\n\n\tprivate _reset() {\n\t\tthis._firstPart = null;\n\t\tthis._chordPart = null;\n\t}\n\n\tprivate _onKeyDown(keyboardEvent: IKeyboardEvent): void {\n\t\tkeyboardEvent.preventDefault();\n\t\tkeyboardEvent.stopPropagation();\n\t\tconst options = this.options as KeybindingsSearchOptions;\n\t\tif (!options.recordEnter && keyboardEvent.equals(KeyCode.Enter)) {\n\t\t\tthis._onEnter.fire();\n\t\t\treturn;\n\t\t}\n\t\tif (keyboardEvent.equals(KeyCode.Escape)) {\n\t\t\tthis._onEscape.fire();\n\t\t\treturn;\n\t\t}\n\t\tthis.printKeybinding(keyboardEvent);\n\t}\n\n\tprivate printKeybinding(keyboardEvent: IKeyboardEvent): void {\n\t\tconst keybinding = this.keybindingService.resolveKeyboardEvent(keyboardEvent);\n\t\tconst info = `code: ${keyboardEvent.browserEvent.code}, keyCode: ${keyboardEvent.browserEvent.keyCode}, key: ${keyboardEvent.browserEvent.key} => UI: ${keybinding.getAriaLabel()}, user settings: ${keybinding.getUserSettingsLabel()}, dispatch: ${keybinding.getDispatchParts()[0]}`;\n\t\tconst options = this.options as KeybindingsSearchOptions;\n\n\t\tconst hasFirstPart = (this._firstPart && this._firstPart.getDispatchParts()[0] !== null);\n\t\tconst hasChordPart = (this._chordPart && this._chordPart.getDispatchParts()[0] !== null);\n\t\tif (hasFirstPart && hasChordPart) {\n\t\t\t// Reset\n\t\t\tthis._firstPart = keybinding;\n\t\t\tthis._chordPart = null;\n\t\t} else if (!hasFirstPart) {\n\t\t\tthis._firstPart = keybinding;\n\t\t} else {\n\t\t\tthis._chordPart = keybinding;\n\t\t}\n\n\t\tlet value = '';\n\t\tif (this._firstPart) {\n\t\t\tvalue = (this._firstPart.getUserSettingsLabel() || '');\n\t\t}\n\t\tif (this._chordPart) {\n\t\t\tvalue = value + ' ' + this._chordPart.getUserSettingsLabel();\n\t\t}\n\t\tthis.setInputValue(options.quoteRecordedKeys ? `\"${value}\"` : value);\n\n\t\tthis.inputBox.inputElement.title = info;\n\t\tthis._onKeybinding.fire([this._firstPart, this._chordPart]);\n\t}\n}\n\nexport class DefineKeybindingWidget extends Widget {\n\n\tprivate static readonly WIDTH = 400;\n\tprivate static readonly HEIGHT = 110;\n\n\tprivate _domNode: FastDomNode<HTMLElement>;\n\tprivate _keybindingInputWidget: KeybindingsSearchWidget;\n\tprivate _outputNode: HTMLElement;\n\tprivate _showExistingKeybindingsNode: HTMLElement;\n\n\tprivate _firstPart: ResolvedKeybinding | null = null;\n\tprivate _chordPart: ResolvedKeybinding | null = null;\n\tprivate _isVisible: boolean = false;\n\n\tprivate _onHide = this._register(new Emitter<void>());\n\n\tprivate _onDidChange = this._register(new Emitter<string>());\n\tonDidChange: Event<string> = this._onDidChange.event;\n\n\tprivate _onShowExistingKeybindings = this._register(new Emitter<string | null>());\n\treadonly onShowExistingKeybidings: Event<string | null> = this._onShowExistingKeybindings.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper();\n\t\tthis.create();\n\t\tif (parent) {\n\t\t\tdom.append(parent, this._domNode.domNode);\n\t\t}\n\t}\n\n\tget domNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tdefine(): Promise<string | null> {\n\t\tthis._keybindingInputWidget.clear();\n\t\treturn new Promise<string | null>((c) => {\n\t\t\tif (!this._isVisible) {\n\t\t\t\tthis._isVisible = true;\n\t\t\t\tthis._domNode.setDisplay('block');\n\n\t\t\t\tthis._firstPart = null;\n\t\t\t\tthis._chordPart = null;\n\t\t\t\tthis._keybindingInputWidget.setInputValue('');\n\t\t\t\tdom.clearNode(this._outputNode);\n\t\t\t\tdom.clearNode(this._showExistingKeybindingsNode);\n\t\t\t\tthis._keybindingInputWidget.focus();\n\t\t\t}\n\t\t\tconst disposable = this._onHide.event(() => {\n\t\t\t\tc(this.getUserSettingsLabel());\n\t\t\t\tdisposable.dispose();\n\t\t\t});\n\t\t});\n\t}\n\n\tlayout(layout: dom.Dimension): void {\n\t\tconst top = Math.round((layout.height - DefineKeybindingWidget.HEIGHT) / 2);\n\t\tthis._domNode.setTop(top);\n\n\t\tconst left = Math.round((layout.width - DefineKeybindingWidget.WIDTH) / 2);\n\t\tthis._domNode.setLeft(left);\n\t}\n\n\tprintExisting(numberOfExisting: number): void {\n\t\tif (numberOfExisting > 0) {\n\t\t\tconst existingElement = dom.$('span.existingText');\n\t\t\tconst text = numberOfExisting === 1 ? nls.localize('defineKeybinding.oneExists', \"1 existing command has this keybinding\", numberOfExisting) : nls.localize('defineKeybinding.existing', \"{0} existing commands have this keybinding\", numberOfExisting);\n\t\t\tdom.append(existingElement, document.createTextNode(text));\n\t\t\tthis._showExistingKeybindingsNode.appendChild(existingElement);\n\t\t\texistingElement.onmousedown = (e) => { e.preventDefault(); };\n\t\t\texistingElement.onmouseup = (e) => { e.preventDefault(); };\n\t\t\texistingElement.onclick = () => { this._onShowExistingKeybindings.fire(this.getUserSettingsLabel()); };\n\t\t}\n\t}\n\n\tprivate create(): void {\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setDisplay('none');\n\t\tthis._domNode.setClassName('defineKeybindingWidget');\n\t\tthis._domNode.setWidth(DefineKeybindingWidget.WIDTH);\n\t\tthis._domNode.setHeight(DefineKeybindingWidget.HEIGHT);\n\n\t\tconst message = nls.localize('defineKeybinding.initial', \"Press desired key combination and then press ENTER.\");\n\t\tdom.append(this._domNode.domNode, dom.$('.message', undefined, message));\n\n\t\tthis._register(attachStylerCallback(this.themeService, { editorWidgetBackground, widgetShadow }, colors => {\n\t\t\tif (colors.editorWidgetBackground) {\n\t\t\t\tthis._domNode.domNode.style.backgroundColor = colors.editorWidgetBackground.toString();\n\t\t\t} else {\n\t\t\t\tthis._domNode.domNode.style.backgroundColor = null;\n\t\t\t}\n\n\t\t\tif (colors.widgetShadow) {\n\t\t\t\tthis._domNode.domNode.style.boxShadow = `0 2px 8px ${colors.widgetShadow}`;\n\t\t\t} else {\n\t\t\t\tthis._domNode.domNode.style.boxShadow = null;\n\t\t\t}\n\t\t}));\n\n\t\tthis._keybindingInputWidget = this._register(this.instantiationService.createInstance(KeybindingsSearchWidget, this._domNode.domNode, { ariaLabel: message }));\n\t\tthis._keybindingInputWidget.startRecordingKeys();\n\t\tthis._register(this._keybindingInputWidget.onKeybinding(keybinding => this.onKeybinding(keybinding)));\n\t\tthis._register(this._keybindingInputWidget.onEnter(() => this.hide()));\n\t\tthis._register(this._keybindingInputWidget.onEscape(() => this.onCancel()));\n\t\tthis._register(this._keybindingInputWidget.onBlur(() => this.onCancel()));\n\n\t\tthis._outputNode = dom.append(this._domNode.domNode, dom.$('.output'));\n\t\tthis._showExistingKeybindingsNode = dom.append(this._domNode.domNode, dom.$('.existing'));\n\t}\n\n\tprivate onKeybinding(keybinding: [ResolvedKeybinding | null, ResolvedKeybinding | null]): void {\n\t\tconst [firstPart, chordPart] = keybinding;\n\t\tthis._firstPart = firstPart;\n\t\tthis._chordPart = chordPart;\n\t\tdom.clearNode(this._outputNode);\n\t\tdom.clearNode(this._showExistingKeybindingsNode);\n\t\tnew KeybindingLabel(this._outputNode, OS).set(this._firstPart);\n\t\tif (this._chordPart) {\n\t\t\tthis._outputNode.appendChild(document.createTextNode(nls.localize('defineKeybinding.chordsTo', \"chord to\")));\n\t\t\tnew KeybindingLabel(this._outputNode, OS).set(this._chordPart);\n\t\t}\n\t\tconst label = this.getUserSettingsLabel();\n\t\tif (label) {\n\t\t\tthis._onDidChange.fire(label);\n\t\t}\n\t}\n\n\tprivate getUserSettingsLabel(): string | null {\n\t\tlet label: string | null = null;\n\t\tif (this._firstPart) {\n\t\t\tlabel = this._firstPart.getUserSettingsLabel();\n\t\t\tif (this._chordPart) {\n\t\t\t\tlabel = label + ' ' + this._chordPart.getUserSettingsLabel();\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate onCancel(): void {\n\t\tthis._firstPart = null;\n\t\tthis._chordPart = null;\n\t\tthis.hide();\n\t}\n\n\tprivate hide(): void {\n\t\tthis._domNode.setDisplay('none');\n\t\tthis._isVisible = false;\n\t\tthis._onHide.fire();\n\t}\n}\n\nexport class DefineKeybindingOverlayWidget extends Disposable implements IOverlayWidget {\n\n\tprivate static readonly ID = 'editor.contrib.defineKeybindingWidget';\n\n\tprivate readonly _widget: DefineKeybindingWidget;\n\n\tconstructor(private _editor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis._widget = instantiationService.createInstance(DefineKeybindingWidget, null);\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn DefineKeybindingOverlayWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._widget.domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: null\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tstart(): Promise<string | null> {\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._editor.revealPositionInCenterIfOutsideViewport(this._editor.getPosition(), ScrollType.Smooth);\n\t\t}\n\t\tconst layoutInfo = this._editor.getLayoutInfo();\n\t\tthis._widget.layout(new dom.Dimension(layoutInfo.width, layoutInfo.height));\n\t\treturn this._widget.define();\n\t}\n}\n"]}]}