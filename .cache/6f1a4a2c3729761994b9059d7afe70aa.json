{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/find/findDecorations.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/find/findDecorations.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar FindDecorations = /** @class */ (function () {\n    function FindDecorations(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationId = null;\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    FindDecorations.prototype.dispose = function () {\n        this._editor.deltaDecorations(this._allDecorations(), []);\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationId = null;\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    };\n    FindDecorations.prototype.reset = function () {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationId = null;\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    };\n    FindDecorations.prototype.getCount = function () {\n        return this._decorations.length;\n    };\n    FindDecorations.prototype.getFindScope = function () {\n        if (this._findScopeDecorationId) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationId);\n        }\n        return null;\n    };\n    FindDecorations.prototype.getStartPosition = function () {\n        return this._startPosition;\n    };\n    FindDecorations.prototype.setStartPosition = function (newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    };\n    FindDecorations.prototype._getDecorationIndex = function (decorationId) {\n        var index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    };\n    FindDecorations.prototype.getCurrentMatchesPosition = function (desiredRange) {\n        var candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {\n            var candidate = candidates_1[_i];\n            var candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        return 1;\n    };\n    FindDecorations.prototype.setCurrentFindMatch = function (nextMatch) {\n        var _this = this;\n        var newCurrentDecorationId = null;\n        var matchPosition = 0;\n        if (nextMatch) {\n            for (var i = 0, len = this._decorations.length; i < len; i++) {\n                var range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations(function (changeAccessor) {\n                if (_this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(_this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    _this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    _this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(_this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (_this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(_this._rangeHighlightDecorationId);\n                    _this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    var rng = _this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        var lineBeforeEnd = rng.endLineNumber - 1;\n                        var lineBeforeEndMaxColumn = _this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new range_1.Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    _this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    };\n    FindDecorations.prototype.set = function (findMatches, findScope) {\n        var _this = this;\n        this._editor.changeDecorations(function (accessor) {\n            var findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            var newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                var lineCount = _this._editor.getModel().getLineCount();\n                var height = _this._editor.getLayoutInfo().height;\n                var approxPixelsPerLine = height / lineCount;\n                var mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                var prevStartLineNumber = findMatches[0].range.startLineNumber;\n                var prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (var i = 1, len = findMatches.length; i < len; i++) {\n                    var range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new range_1.Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new range_1.Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            var newFindMatchesDecorations = new Array(findMatches.length);\n            for (var i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            _this._decorations = accessor.deltaDecorations(_this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            _this._overviewRulerApproximateDecorations = accessor.deltaDecorations(_this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (_this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(_this._rangeHighlightDecorationId);\n                _this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (_this._findScopeDecorationId) {\n                accessor.removeDecoration(_this._findScopeDecorationId);\n                _this._findScopeDecorationId = null;\n            }\n            if (findScope) {\n                _this._findScopeDecorationId = accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION);\n            }\n        });\n    };\n    FindDecorations.prototype.matchBeforePosition = function (position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (var i = this._decorations.length - 1; i >= 0; i--) {\n            var decorationId = this._decorations[i];\n            var r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    };\n    FindDecorations.prototype.matchAfterPosition = function (position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (var i = 0, len = this._decorations.length; i < len; i++) {\n            var decorationId = this._decorations[i];\n            var r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    };\n    FindDecorations.prototype._allDecorations = function () {\n        var result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationId) {\n            result.push(this._findScopeDecorationId);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    };\n    FindDecorations._CURRENT_FIND_MATCH_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        zIndex: 13,\n        className: 'currentFindMatch',\n        showIfCollapsed: true,\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(colorRegistry_1.overviewRulerFindMatchForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    FindDecorations._FIND_MATCH_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'findMatch',\n        showIfCollapsed: true,\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(colorRegistry_1.overviewRulerFindMatchForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'findMatch',\n        showIfCollapsed: true\n    });\n    FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(colorRegistry_1.overviewRulerFindMatchForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    FindDecorations._RANGE_HIGHLIGHT_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'rangeHighlight',\n        isWholeLine: true\n    });\n    FindDecorations._FIND_SCOPE_DECORATION = textModel_1.ModelDecorationOptions.register({\n        className: 'findScope',\n        isWholeLine: true\n    });\n    return FindDecorations;\n}());\nexports.FindDecorations = FindDecorations;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/find/findDecorations.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/find/findDecorations.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, IModelDecorationsChangeAccessor, IModelDeltaDecoration, OverviewRulerLane, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { overviewRulerFindMatchForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\n\nexport class FindDecorations implements IDisposable {\n\n\tprivate readonly _editor: IActiveCodeEditor;\n\tprivate _decorations: string[];\n\tprivate _overviewRulerApproximateDecorations: string[];\n\tprivate _findScopeDecorationId: string | null;\n\tprivate _rangeHighlightDecorationId: string | null;\n\tprivate _highlightedDecorationId: string | null;\n\tprivate _startPosition: Position;\n\n\tconstructor(editor: IActiveCodeEditor) {\n\t\tthis._editor = editor;\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationId = null;\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t\tthis._startPosition = this._editor.getPosition();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.deltaDecorations(this._allDecorations(), []);\n\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationId = null;\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorations = [];\n\t\tthis._overviewRulerApproximateDecorations = [];\n\t\tthis._findScopeDecorationId = null;\n\t\tthis._rangeHighlightDecorationId = null;\n\t\tthis._highlightedDecorationId = null;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._decorations.length;\n\t}\n\n\tpublic getFindScope(): Range | null {\n\t\tif (this._findScopeDecorationId) {\n\t\t\treturn this._editor.getModel().getDecorationRange(this._findScopeDecorationId);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getStartPosition(): Position {\n\t\treturn this._startPosition;\n\t}\n\n\tpublic setStartPosition(newStartPosition: Position): void {\n\t\tthis._startPosition = newStartPosition;\n\t\tthis.setCurrentFindMatch(null);\n\t}\n\n\tprivate _getDecorationIndex(decorationId: string): number {\n\t\tconst index = this._decorations.indexOf(decorationId);\n\t\tif (index >= 0) {\n\t\t\treturn index + 1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tpublic getCurrentMatchesPosition(desiredRange: Range): number {\n\t\tlet candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n\t\tfor (const candidate of candidates) {\n\t\t\tconst candidateOpts = candidate.options;\n\t\t\tif (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n\t\t\t\treturn this._getDecorationIndex(candidate.id);\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t}\n\n\tpublic setCurrentFindMatch(nextMatch: Range | null): number {\n\t\tlet newCurrentDecorationId: string | null = null;\n\t\tlet matchPosition = 0;\n\t\tif (nextMatch) {\n\t\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\t\tlet range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n\t\t\t\tif (nextMatch.equalsRange(range)) {\n\t\t\t\t\tnewCurrentDecorationId = this._decorations[i];\n\t\t\t\t\tmatchPosition = (i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n\t\t\tthis._editor.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\tif (this._highlightedDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n\t\t\t\t\tthis._highlightedDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tthis._highlightedDecorationId = newCurrentDecorationId;\n\t\t\t\t\tchangeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n\t\t\t\t}\n\t\t\t\tif (this._rangeHighlightDecorationId !== null) {\n\t\t\t\t\tchangeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t\t}\n\t\t\t\tif (newCurrentDecorationId !== null) {\n\t\t\t\t\tlet rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId)!;\n\t\t\t\t\tif (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n\t\t\t\t\t\tlet lineBeforeEnd = rng.endLineNumber - 1;\n\t\t\t\t\t\tlet lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n\t\t\t\t\t\trng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n\t\t\t\t\t}\n\t\t\t\t\tthis._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn matchPosition;\n\t}\n\n\tpublic set(findMatches: FindMatch[], findScope: Range | null): void {\n\t\tthis._editor.changeDecorations((accessor) => {\n\n\t\t\tlet findMatchesOptions: ModelDecorationOptions = FindDecorations._FIND_MATCH_DECORATION;\n\t\t\tlet newOverviewRulerApproximateDecorations: IModelDeltaDecoration[] = [];\n\n\t\t\tif (findMatches.length > 1000) {\n\t\t\t\t// we go into a mode where the overview ruler gets \"approximate\" decorations\n\t\t\t\t// the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n\t\t\t\tfindMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n\n\t\t\t\t// approximate a distance in lines where matches should be merged\n\t\t\t\tconst lineCount = this._editor.getModel().getLineCount();\n\t\t\t\tconst height = this._editor.getLayoutInfo().height;\n\t\t\t\tconst approxPixelsPerLine = height / lineCount;\n\t\t\t\tconst mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n\n\t\t\t\t// merge decorations as much as possible\n\t\t\t\tlet prevStartLineNumber = findMatches[0].range.startLineNumber;\n\t\t\t\tlet prevEndLineNumber = findMatches[0].range.endLineNumber;\n\t\t\t\tfor (let i = 1, len = findMatches.length; i < len; i++) {\n\t\t\t\t\tconst range = findMatches[i].range;\n\t\t\t\t\tif (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n\t\t\t\t\t\tif (range.endLineNumber > prevEndLineNumber) {\n\t\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprevStartLineNumber = range.startLineNumber;\n\t\t\t\t\t\tprevEndLineNumber = range.endLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewOverviewRulerApproximateDecorations.push({\n\t\t\t\t\trange: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n\t\t\t\t\toptions: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Find matches\n\t\t\tlet newFindMatchesDecorations: IModelDeltaDecoration[] = new Array<IModelDeltaDecoration>(findMatches.length);\n\t\t\tfor (let i = 0, len = findMatches.length; i < len; i++) {\n\t\t\t\tnewFindMatchesDecorations[i] = {\n\t\t\t\t\trange: findMatches[i].range,\n\t\t\t\t\toptions: findMatchesOptions\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n\n\t\t\t// Overview ruler approximate decorations\n\t\t\tthis._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n\n\t\t\t// Range highlight\n\t\t\tif (this._rangeHighlightDecorationId) {\n\t\t\t\taccessor.removeDecoration(this._rangeHighlightDecorationId);\n\t\t\t\tthis._rangeHighlightDecorationId = null;\n\t\t\t}\n\n\t\t\t// Find scope\n\t\t\tif (this._findScopeDecorationId) {\n\t\t\t\taccessor.removeDecoration(this._findScopeDecorationId);\n\t\t\t\tthis._findScopeDecorationId = null;\n\t\t\t}\n\t\t\tif (findScope) {\n\t\t\t\tthis._findScopeDecorationId = accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic matchBeforePosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = this._decorations.length - 1; i >= 0; i--) {\n\t\t\tlet decorationId = this._decorations[i];\n\t\t\tlet r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.endLineNumber > position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.endLineNumber < position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.endColumn > position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n\t}\n\n\tpublic matchAfterPosition(position: Position): Range | null {\n\t\tif (this._decorations.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (let i = 0, len = this._decorations.length; i < len; i++) {\n\t\t\tlet decorationId = this._decorations[i];\n\t\t\tlet r = this._editor.getModel().getDecorationRange(decorationId);\n\t\t\tif (!r || r.startLineNumber < position.lineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (r.startLineNumber > position.lineNumber) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (r.startColumn < position.column) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\treturn this._editor.getModel().getDecorationRange(this._decorations[0]);\n\t}\n\n\tprivate _allDecorations(): string[] {\n\t\tlet result: string[] = [];\n\t\tresult = result.concat(this._decorations);\n\t\tresult = result.concat(this._overviewRulerApproximateDecorations);\n\t\tif (this._findScopeDecorationId) {\n\t\t\tresult.push(this._findScopeDecorationId);\n\t\t}\n\t\tif (this._rangeHighlightDecorationId) {\n\t\t\tresult.push(this._rangeHighlightDecorationId);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static readonly _CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tzIndex: 13,\n\t\tclassName: 'currentFindMatch',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\tshowIfCollapsed: true,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch',\n\t\tshowIfCollapsed: true\n\t});\n\n\tprivate static readonly _FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerFindMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'rangeHighlight',\n\t\tisWholeLine: true\n\t});\n\n\tprivate static readonly _FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n\t\tclassName: 'findScope',\n\t\tisWholeLine: true\n\t});\n}\n"]}]}