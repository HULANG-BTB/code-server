{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/platform/theme/common/colorRegistry\", \"vs/workbench/common/theme\"], function (require, exports, nls, colorRegistry_1, theme_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n     * of the color in the terminal color table.\n     */\n    exports.ansiColorIdentifiers = [];\n    exports.TERMINAL_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminal.background', {\n        dark: theme_1.PANEL_BACKGROUND,\n        light: theme_1.PANEL_BACKGROUND,\n        hc: theme_1.PANEL_BACKGROUND\n    }, nls.localize('terminal.background', 'The background color of the terminal, this allows coloring the terminal differently to the panel.'));\n    exports.TERMINAL_FOREGROUND_COLOR = colorRegistry_1.registerColor('terminal.foreground', {\n        light: '#333333',\n        dark: '#CCCCCC',\n        hc: '#FFFFFF'\n    }, nls.localize('terminal.foreground', 'The foreground color of the terminal.'));\n    exports.TERMINAL_CURSOR_FOREGROUND_COLOR = colorRegistry_1.registerColor('terminalCursor.foreground', null, nls.localize('terminalCursor.foreground', 'The foreground color of the terminal cursor.'));\n    exports.TERMINAL_CURSOR_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminalCursor.background', null, nls.localize('terminalCursor.background', 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'));\n    exports.TERMINAL_SELECTION_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminal.selectionBackground', {\n        light: '#00000040',\n        dark: '#FFFFFF40',\n        hc: '#FFFFFF80'\n    }, nls.localize('terminal.selectionBackground', 'The selection background color of the terminal.'));\n    exports.TERMINAL_BORDER_COLOR = colorRegistry_1.registerColor('terminal.border', {\n        dark: theme_1.PANEL_BORDER,\n        light: theme_1.PANEL_BORDER,\n        hc: theme_1.PANEL_BORDER\n    }, nls.localize('terminal.border', 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'));\n    const ansiColorMap = {\n        'terminal.ansiBlack': {\n            index: 0,\n            defaults: {\n                light: '#000000',\n                dark: '#000000',\n                hc: '#000000'\n            }\n        },\n        'terminal.ansiRed': {\n            index: 1,\n            defaults: {\n                light: '#cd3131',\n                dark: '#cd3131',\n                hc: '#cd0000'\n            }\n        },\n        'terminal.ansiGreen': {\n            index: 2,\n            defaults: {\n                light: '#00BC00',\n                dark: '#0DBC79',\n                hc: '#00cd00'\n            }\n        },\n        'terminal.ansiYellow': {\n            index: 3,\n            defaults: {\n                light: '#949800',\n                dark: '#e5e510',\n                hc: '#cdcd00'\n            }\n        },\n        'terminal.ansiBlue': {\n            index: 4,\n            defaults: {\n                light: '#0451a5',\n                dark: '#2472c8',\n                hc: '#0000ee'\n            }\n        },\n        'terminal.ansiMagenta': {\n            index: 5,\n            defaults: {\n                light: '#bc05bc',\n                dark: '#bc3fbc',\n                hc: '#cd00cd'\n            }\n        },\n        'terminal.ansiCyan': {\n            index: 6,\n            defaults: {\n                light: '#0598bc',\n                dark: '#11a8cd',\n                hc: '#00cdcd'\n            }\n        },\n        'terminal.ansiWhite': {\n            index: 7,\n            defaults: {\n                light: '#555555',\n                dark: '#e5e5e5',\n                hc: '#e5e5e5'\n            }\n        },\n        'terminal.ansiBrightBlack': {\n            index: 8,\n            defaults: {\n                light: '#666666',\n                dark: '#666666',\n                hc: '#7f7f7f'\n            }\n        },\n        'terminal.ansiBrightRed': {\n            index: 9,\n            defaults: {\n                light: '#cd3131',\n                dark: '#f14c4c',\n                hc: '#ff0000'\n            }\n        },\n        'terminal.ansiBrightGreen': {\n            index: 10,\n            defaults: {\n                light: '#14CE14',\n                dark: '#23d18b',\n                hc: '#00ff00'\n            }\n        },\n        'terminal.ansiBrightYellow': {\n            index: 11,\n            defaults: {\n                light: '#b5ba00',\n                dark: '#f5f543',\n                hc: '#ffff00'\n            }\n        },\n        'terminal.ansiBrightBlue': {\n            index: 12,\n            defaults: {\n                light: '#0451a5',\n                dark: '#3b8eea',\n                hc: '#5c5cff'\n            }\n        },\n        'terminal.ansiBrightMagenta': {\n            index: 13,\n            defaults: {\n                light: '#bc05bc',\n                dark: '#d670d6',\n                hc: '#ff00ff'\n            }\n        },\n        'terminal.ansiBrightCyan': {\n            index: 14,\n            defaults: {\n                light: '#0598bc',\n                dark: '#29b8db',\n                hc: '#00ffff'\n            }\n        },\n        'terminal.ansiBrightWhite': {\n            index: 15,\n            defaults: {\n                light: '#a5a5a5',\n                dark: '#e5e5e5',\n                hc: '#ffffff'\n            }\n        }\n    };\n    function registerColors() {\n        for (const id in ansiColorMap) {\n            const entry = ansiColorMap[id];\n            const colorName = id.substring(13);\n            exports.ansiColorIdentifiers[entry.index] = colorRegistry_1.registerColor(id, entry.defaults, nls.localize('terminal.ansiColor', '\\'{0}\\' ANSI color in the terminal.', colorName));\n        }\n    }\n    exports.registerColors = registerColors;\n});\n",null]}