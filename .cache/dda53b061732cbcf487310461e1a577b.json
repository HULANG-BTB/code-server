{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/watcher/nsfw/watcherIpc.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/watcher/nsfw/watcherIpc.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WatcherChannel = /** @class */ (function () {\n    function WatcherChannel(service) {\n        this.service = service;\n    }\n    WatcherChannel.prototype.listen = function (_, event, arg) {\n        switch (event) {\n            case 'watch': return this.service.watch(arg);\n        }\n        throw new Error(\"Event not found: \" + event);\n    };\n    WatcherChannel.prototype.call = function (_, command, arg) {\n        switch (command) {\n            case 'setRoots': return this.service.setRoots(arg);\n            case 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n            case 'stop': return this.service.stop();\n        }\n        throw new Error(\"Call not found: \" + command);\n    };\n    return WatcherChannel;\n}());\nexports.WatcherChannel = WatcherChannel;\nvar WatcherChannelClient = /** @class */ (function () {\n    function WatcherChannelClient(channel) {\n        this.channel = channel;\n    }\n    WatcherChannelClient.prototype.watch = function (options) {\n        return this.channel.listen('watch', options);\n    };\n    WatcherChannelClient.prototype.setVerboseLogging = function (enable) {\n        return this.channel.call('setVerboseLogging', enable);\n    };\n    WatcherChannelClient.prototype.setRoots = function (roots) {\n        return this.channel.call('setRoots', roots);\n    };\n    WatcherChannelClient.prototype.stop = function () {\n        return this.channel.call('stop');\n    };\n    return WatcherChannelClient;\n}());\nexports.WatcherChannelClient = WatcherChannelClient;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/watcher/nsfw/watcherIpc.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/watcher/nsfw/watcherIpc.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAOhG;IAEC,wBAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAEjD,+BAAM,GAAN,UAAO,CAAU,EAAE,KAAa,EAAE,GAAS;QAC1C,QAAQ,KAAK,EAAE;YACd,KAAK,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC7C;QAED,MAAM,IAAI,KAAK,CAAC,sBAAoB,KAAO,CAAC,CAAC;IAC9C,CAAC;IAED,6BAAI,GAAJ,UAAK,CAAU,EAAE,OAAe,EAAE,GAAS;QAC1C,QAAQ,OAAO,EAAE;YAChB,KAAK,UAAU,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnD,KAAK,mBAAmB,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACrE,KAAK,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACxC;QAED,MAAM,IAAI,KAAK,CAAC,qBAAmB,OAAS,CAAC,CAAC;IAC/C,CAAC;IACF,qBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,wCAAc;AAuB3B;IAEC,8BAAoB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;IAAI,CAAC;IAE1C,oCAAK,GAAL,UAAM,OAAwB;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,gDAAiB,GAAjB,UAAkB,MAAe;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,uCAAQ,GAAR,UAAS,KAAwB;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,mCAAI,GAAJ;QACC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IACF,2BAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions, IWatchError } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IRawFileChange } from 'vs/workbench/services/files/node/watcher/common';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IRawFileChange[] | IWatchError> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}"]}]}