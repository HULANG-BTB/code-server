{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/protocol/src/browser/modules/child_process.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/browser/modules/child_process.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"util\");\nvar proxy_1 = require(\"../../common/proxy\");\nvar stream_1 = require(\"./stream\");\n// tslint:disable completed-docs\nvar ChildProcess = /** @class */ (function (_super) {\n    tslib_1.__extends(ChildProcess, _super);\n    function ChildProcess(proxyPromises) {\n        var _this = _super.call(this, proxyPromises.then(function (p) { return p.childProcess; })) || this;\n        _this._connected = false;\n        _this._killed = false;\n        _this._pid = -1;\n        _this.stdin = new stream_1.Writable(proxyPromises.then(function (p) { return p.stdin; }));\n        _this.stdout = new stream_1.Readable(proxyPromises.then(function (p) { return p.stdout; }));\n        _this.stderr = new stream_1.Readable(proxyPromises.then(function (p) { return p.stderr; }));\n        _this.stdio = [_this.stdin, _this.stdout, _this.stderr];\n        _this.catch(_this.proxy.getPid().then(function (pid) {\n            _this._pid = pid;\n            _this._connected = true;\n        }));\n        _this.on(\"disconnect\", function () { return _this._connected = false; });\n        _this.on(\"exit\", function () {\n            _this._connected = false;\n            _this._killed = true;\n        });\n        return _this;\n    }\n    Object.defineProperty(ChildProcess.prototype, \"pid\", {\n        get: function () {\n            return this._pid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChildProcess.prototype, \"connected\", {\n        get: function () {\n            return this._connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChildProcess.prototype, \"killed\", {\n        get: function () {\n            return this._killed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChildProcess.prototype.kill = function () {\n        this._killed = true;\n        this.catch(this.proxy.kill());\n    };\n    ChildProcess.prototype.disconnect = function () {\n        this.catch(this.proxy.disconnect());\n    };\n    ChildProcess.prototype.ref = function () {\n        this.catch(this.proxy.ref());\n    };\n    ChildProcess.prototype.unref = function () {\n        this.catch(this.proxy.unref());\n    };\n    ChildProcess.prototype.send = function (message, // tslint:disable-line no-any\n    sendHandle, options, callback) {\n        if (typeof sendHandle === \"function\") {\n            callback = sendHandle;\n            sendHandle = undefined;\n        }\n        else if (typeof options === \"function\") {\n            callback = options;\n            options = undefined;\n        }\n        if (sendHandle || options) {\n            throw new Error(\"sendHandle and options are not supported\");\n        }\n        util_1.callbackify(this.proxy.send)(message, function (error) {\n            if (callback) {\n                callback(error);\n            }\n        });\n        return true; // Always true since we can't get this synchronously.\n    };\n    /**\n     * Exit and close the process when disconnected.\n     */\n    ChildProcess.prototype.handleDisconnect = function () {\n        this.emit(\"exit\", 1);\n        this.emit(\"close\");\n    };\n    return ChildProcess;\n}(proxy_1.ClientProxy));\nexports.ChildProcess = ChildProcess;\nvar ChildProcessModule = /** @class */ (function () {\n    function ChildProcessModule(proxy) {\n        var _this = this;\n        this.proxy = proxy;\n        this.exec = function (command, options, callback) {\n            if (typeof options === \"function\") {\n                callback = options;\n                options = undefined;\n            }\n            return new ChildProcess(_this.proxy.exec(command, options, callback));\n        };\n        this.fork = function (modulePath, args, options) {\n            if (!Array.isArray(args)) {\n                options = args;\n                args = undefined;\n            }\n            return new ChildProcess(_this.proxy.fork(modulePath, args, options));\n        };\n        this.spawn = function (command, args, options) {\n            if (!Array.isArray(args)) {\n                options = args;\n                args = undefined;\n            }\n            return new ChildProcess(_this.proxy.spawn(command, args, options));\n        };\n    }\n    return ChildProcessModule;\n}());\nexports.ChildProcessModule = ChildProcessModule;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/browser/modules/child_process.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/browser/modules/child_process.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cp from \"child_process\";\nimport * as net from \"net\";\nimport * as stream from \"stream\";\nimport { callbackify } from \"util\";\nimport { ClientProxy } from \"../../common/proxy\";\nimport { ChildProcessModuleProxy, ChildProcessProxy, ChildProcessProxies } from \"../../node/modules/child_process\";\nimport { Readable, Writable } from \"./stream\";\n\n// tslint:disable completed-docs\n\nexport class ChildProcess extends ClientProxy<ChildProcessProxy> implements cp.ChildProcess {\n\tpublic readonly stdin: stream.Writable;\n\tpublic readonly stdout: stream.Readable;\n\tpublic readonly stderr: stream.Readable;\n\tpublic readonly stdio: [stream.Writable, stream.Readable, stream.Readable];\n\n\tprivate _connected: boolean = false;\n\tprivate _killed: boolean = false;\n\tprivate _pid = -1;\n\n\tpublic constructor(proxyPromises: Promise<ChildProcessProxies>) {\n\t\tsuper(proxyPromises.then((p) => p.childProcess));\n\t\tthis.stdin = new Writable(proxyPromises.then((p) => p.stdin!));\n\t\tthis.stdout = new Readable(proxyPromises.then((p) => p.stdout!));\n\t\tthis.stderr = new Readable(proxyPromises.then((p) => p.stderr!));\n\t\tthis.stdio = [this.stdin, this.stdout, this.stderr];\n\n\t\tthis.catch(this.proxy.getPid().then((pid) => {\n\t\t\tthis._pid = pid;\n\t\t\tthis._connected = true;\n\t\t}));\n\t\tthis.on(\"disconnect\", () => this._connected = false);\n\t\tthis.on(\"exit\", () => {\n\t\t\tthis._connected = false;\n\t\t\tthis._killed = true;\n\t\t});\n\t}\n\n\tpublic get pid(): number {\n\t\treturn this._pid;\n\t}\n\n\tpublic get connected(): boolean {\n\t\treturn this._connected;\n\t}\n\n\tpublic get killed(): boolean {\n\t\treturn this._killed;\n\t}\n\n\tpublic kill(): void {\n\t\tthis._killed = true;\n\t\tthis.catch(this.proxy.kill());\n\t}\n\n\tpublic disconnect(): void {\n\t\tthis.catch(this.proxy.disconnect());\n\t}\n\n\tpublic ref(): void {\n\t\tthis.catch(this.proxy.ref());\n\t}\n\n\tpublic unref(): void {\n\t\tthis.catch(this.proxy.unref());\n\t}\n\n\tpublic send(\n\t\tmessage: any, // tslint:disable-line no-any\n\t\tsendHandle?: net.Socket | net.Server | ((error: Error) => void),\n\t\toptions?: cp.MessageOptions | ((error: Error) => void),\n\t\tcallback?: (error: Error) => void): boolean {\n\t\tif (typeof sendHandle === \"function\") {\n\t\t\tcallback = sendHandle;\n\t\t\tsendHandle = undefined;\n\t\t} else if (typeof options === \"function\") {\n\t\t\tcallback = options;\n\t\t\toptions = undefined;\n\t\t}\n\t\tif (sendHandle || options) {\n\t\t\tthrow new Error(\"sendHandle and options are not supported\");\n\t\t}\n\n\t\tcallbackify(this.proxy.send)(message, (error) => {\n\t\t\tif (callback) {\n\t\t\t\tcallback(error);\n\t\t\t}\n\t\t});\n\n\t\treturn true; // Always true since we can't get this synchronously.\n\t}\n\n\t/**\n\t * Exit and close the process when disconnected.\n\t */\n\tprotected handleDisconnect(): void {\n\t\tthis.emit(\"exit\", 1);\n\t\tthis.emit(\"close\");\n\t}\n}\n\nexport class ChildProcessModule {\n\tpublic constructor(private readonly proxy: ChildProcessModuleProxy) {}\n\n\tpublic exec = (\n\t\tcommand: string,\n\t\toptions?: { encoding?: string | null } & cp.ExecOptions | null\n\t\t\t| ((error: cp.ExecException | null, stdout: string | Buffer, stderr: string | Buffer) => void),\n\t\tcallback?: ((error: cp.ExecException | null, stdout: string | Buffer, stderr: string | Buffer) => void),\n\t): cp.ChildProcess => {\n\t\tif (typeof options === \"function\") {\n\t\t\tcallback = options;\n\t\t\toptions = undefined;\n\t\t}\n\n\t\treturn new ChildProcess(this.proxy.exec(command, options, callback));\n\t}\n\n\tpublic fork = (modulePath: string, args?: string[] | cp.ForkOptions, options?: cp.ForkOptions): cp.ChildProcess => {\n\t\tif (!Array.isArray(args)) {\n\t\t\toptions = args;\n\t\t\targs = undefined;\n\t\t}\n\n\t\treturn new ChildProcess(this.proxy.fork(modulePath, args, options));\n\t}\n\n\tpublic spawn = (command: string, args?: string[] | cp.SpawnOptions, options?: cp.SpawnOptions): cp.ChildProcess => {\n\t\tif (!Array.isArray(args)) {\n\t\t\toptions = args;\n\t\t\targs = undefined;\n\t\t}\n\n\t\treturn new ChildProcess(this.proxy.spawn(command, args, options));\n\t}\n}\n"]}]}