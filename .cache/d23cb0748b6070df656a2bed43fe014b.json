{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/commands/surroundSelectionCommand.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/commands/surroundSelectionCommand.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar selection_1 = require(\"vs/editor/common/core/selection\");\nvar SurroundSelectionCommand = /** @class */ (function () {\n    function SurroundSelectionCommand(range, charBeforeSelection, charAfterSelection) {\n        this._range = range;\n        this._charBeforeSelection = charBeforeSelection;\n        this._charAfterSelection = charAfterSelection;\n    }\n    SurroundSelectionCommand.prototype.getEditOperations = function (model, builder) {\n        builder.addTrackedEditOperation(new range_1.Range(this._range.startLineNumber, this._range.startColumn, this._range.startLineNumber, this._range.startColumn), this._charBeforeSelection);\n        builder.addTrackedEditOperation(new range_1.Range(this._range.endLineNumber, this._range.endColumn, this._range.endLineNumber, this._range.endColumn), this._charAfterSelection);\n    };\n    SurroundSelectionCommand.prototype.computeCursorState = function (model, helper) {\n        var inverseEditOperations = helper.getInverseEditOperations();\n        var firstOperationRange = inverseEditOperations[0].range;\n        var secondOperationRange = inverseEditOperations[1].range;\n        return new selection_1.Selection(firstOperationRange.endLineNumber, firstOperationRange.endColumn, secondOperationRange.endLineNumber, secondOperationRange.endColumn - this._charAfterSelection.length);\n    };\n    return SurroundSelectionCommand;\n}());\nexports.SurroundSelectionCommand = SurroundSelectionCommand;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/commands/surroundSelectionCommand.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/commands/surroundSelectionCommand.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,qDAAoD;AACpD,6DAA4D;AAI5D;IAKC,kCAAY,KAAgB,EAAE,mBAA2B,EAAE,kBAA0B;QACpF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;QAChD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;IAEM,oDAAiB,GAAxB,UAAyB,KAAiB,EAAE,OAA8B;QACzE,OAAO,CAAC,uBAAuB,CAAC,IAAI,aAAK,CACxC,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,MAAM,CAAC,WAAW,EACvB,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,MAAM,CAAC,WAAW,CACvB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE9B,OAAO,CAAC,uBAAuB,CAAC,IAAI,aAAK,CACxC,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,IAAI,CAAC,MAAM,CAAC,SAAS,EACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,IAAI,CAAC,MAAM,CAAC,SAAS,CACrB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9B,CAAC;IAEM,qDAAkB,GAAzB,UAA0B,KAAiB,EAAE,MAAgC;QAC5E,IAAI,qBAAqB,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;QAC9D,IAAI,mBAAmB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,oBAAoB,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE1D,OAAO,IAAI,qBAAS,CACnB,mBAAmB,CAAC,aAAa,EACjC,mBAAmB,CAAC,SAAS,EAC7B,oBAAoB,CAAC,aAAa,EAClC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAChE,CAAC;IACH,CAAC;IACF,+BAAC;AAAD,CAAC,AAvCD,IAuCC;AAvCY,4DAAwB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ICommand, ICursorStateComputerData, IEditOperationBuilder } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\n\nexport class SurroundSelectionCommand implements ICommand {\n\tprivate readonly _range: Selection;\n\tprivate readonly _charBeforeSelection: string;\n\tprivate readonly _charAfterSelection: string;\n\n\tconstructor(range: Selection, charBeforeSelection: string, charAfterSelection: string) {\n\t\tthis._range = range;\n\t\tthis._charBeforeSelection = charBeforeSelection;\n\t\tthis._charAfterSelection = charAfterSelection;\n\t}\n\n\tpublic getEditOperations(model: ITextModel, builder: IEditOperationBuilder): void {\n\t\tbuilder.addTrackedEditOperation(new Range(\n\t\t\tthis._range.startLineNumber,\n\t\t\tthis._range.startColumn,\n\t\t\tthis._range.startLineNumber,\n\t\t\tthis._range.startColumn\n\t\t), this._charBeforeSelection);\n\n\t\tbuilder.addTrackedEditOperation(new Range(\n\t\t\tthis._range.endLineNumber,\n\t\t\tthis._range.endColumn,\n\t\t\tthis._range.endLineNumber,\n\t\t\tthis._range.endColumn\n\t\t), this._charAfterSelection);\n\t}\n\n\tpublic computeCursorState(model: ITextModel, helper: ICursorStateComputerData): Selection {\n\t\tlet inverseEditOperations = helper.getInverseEditOperations();\n\t\tlet firstOperationRange = inverseEditOperations[0].range;\n\t\tlet secondOperationRange = inverseEditOperations[1].range;\n\n\t\treturn new Selection(\n\t\t\tfirstOperationRange.endLineNumber,\n\t\t\tfirstOperationRange.endColumn,\n\t\t\tsecondOperationRange.endLineNumber,\n\t\t\tsecondOperationRange.endColumn - this._charAfterSelection.length\n\t\t);\n\t}\n}\n"]}]}