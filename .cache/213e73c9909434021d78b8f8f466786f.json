{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/rpcProtocol.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/rpcProtocol.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"vs/base/common/async\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar charCode_1 = require(\"vs/base/common/charCode\");\nvar errors = require(\"vs/base/common/errors\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar uriIpc_1 = require(\"vs/base/common/uriIpc\");\nvar lazyPromise_1 = require(\"vs/workbench/services/extensions/node/lazyPromise\");\nvar proxyIdentifier_1 = require(\"vs/workbench/services/extensions/common/proxyIdentifier\");\nvar buffer_1 = require(\"vs/base/common/buffer\");\nfunction safeStringify(obj, replacer) {\n    try {\n        return JSON.stringify(obj, replacer);\n    }\n    catch (err) {\n        return 'null';\n    }\n}\nfunction createURIReplacer(transformer) {\n    if (!transformer) {\n        return null;\n    }\n    return function (key, value) {\n        if (value && value.$mid === 1) {\n            return transformer.transformOutgoing(value);\n        }\n        return value;\n    };\n}\nvar RequestInitiator;\n(function (RequestInitiator) {\n    RequestInitiator[RequestInitiator[\"LocalSide\"] = 0] = \"LocalSide\";\n    RequestInitiator[RequestInitiator[\"OtherSide\"] = 1] = \"OtherSide\";\n})(RequestInitiator = exports.RequestInitiator || (exports.RequestInitiator = {}));\nvar ResponsiveState;\n(function (ResponsiveState) {\n    ResponsiveState[ResponsiveState[\"Responsive\"] = 0] = \"Responsive\";\n    ResponsiveState[ResponsiveState[\"Unresponsive\"] = 1] = \"Unresponsive\";\n})(ResponsiveState = exports.ResponsiveState || (exports.ResponsiveState = {}));\nvar noop = function () { };\nvar RPCProtocol = /** @class */ (function (_super) {\n    tslib_1.__extends(RPCProtocol, _super);\n    function RPCProtocol(protocol, logger, transformer) {\n        if (logger === void 0) { logger = null; }\n        if (transformer === void 0) { transformer = null; }\n        var _this = _super.call(this) || this;\n        _this._onDidChangeResponsiveState = _this._register(new event_1.Emitter());\n        _this.onDidChangeResponsiveState = _this._onDidChangeResponsiveState.event;\n        _this._protocol = protocol;\n        _this._logger = logger;\n        _this._uriTransformer = transformer;\n        _this._uriReplacer = createURIReplacer(_this._uriTransformer);\n        _this._isDisposed = false;\n        _this._locals = [];\n        _this._proxies = [];\n        for (var i = 0, len = proxyIdentifier_1.ProxyIdentifier.count; i < len; i++) {\n            _this._locals[i] = null;\n            _this._proxies[i] = null;\n        }\n        _this._lastMessageId = 0;\n        _this._cancelInvokedHandlers = Object.create(null);\n        _this._pendingRPCReplies = {};\n        _this._responsiveState = ResponsiveState.Responsive;\n        _this._unacknowledgedCount = 0;\n        _this._unresponsiveTime = 0;\n        _this._asyncCheckUresponsive = _this._register(new async_1.RunOnceScheduler(function () { return _this._checkUnresponsive(); }, 1000));\n        _this._protocol.onMessage(function (msg) { return _this._receiveOneMessage(msg); });\n        return _this;\n    }\n    RPCProtocol.prototype.dispose = function () {\n        var _this = this;\n        this._isDisposed = true;\n        // Release all outstanding promises with a canceled error\n        Object.keys(this._pendingRPCReplies).forEach(function (msgId) {\n            var pending = _this._pendingRPCReplies[msgId];\n            pending.resolveErr(errors.canceled());\n        });\n    };\n    RPCProtocol.prototype._onWillSendRequest = function (req) {\n        if (this._unacknowledgedCount === 0) {\n            // Since this is the first request we are sending in a while,\n            // mark this moment as the start for the countdown to unresponsive time\n            this._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n        }\n        this._unacknowledgedCount++;\n        if (!this._asyncCheckUresponsive.isScheduled()) {\n            this._asyncCheckUresponsive.schedule();\n        }\n    };\n    RPCProtocol.prototype._onDidReceiveAcknowledge = function (req) {\n        // The next possible unresponsive time is now + delta.\n        this._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n        this._unacknowledgedCount--;\n        if (this._unacknowledgedCount === 0) {\n            // No more need to check for unresponsive\n            this._asyncCheckUresponsive.cancel();\n        }\n        // The ext host is responsive!\n        this._setResponsiveState(ResponsiveState.Responsive);\n    };\n    RPCProtocol.prototype._checkUnresponsive = function () {\n        if (this._unacknowledgedCount === 0) {\n            // Not waiting for anything => cannot say if it is responsive or not\n            return;\n        }\n        if (Date.now() > this._unresponsiveTime) {\n            // Unresponsive!!\n            this._setResponsiveState(ResponsiveState.Unresponsive);\n        }\n        else {\n            // Not (yet) unresponsive, be sure to check again soon\n            this._asyncCheckUresponsive.schedule();\n        }\n    };\n    RPCProtocol.prototype._setResponsiveState = function (newResponsiveState) {\n        if (this._responsiveState === newResponsiveState) {\n            // no change\n            return;\n        }\n        this._responsiveState = newResponsiveState;\n        this._onDidChangeResponsiveState.fire(this._responsiveState);\n    };\n    Object.defineProperty(RPCProtocol.prototype, \"responsiveState\", {\n        get: function () {\n            return this._responsiveState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RPCProtocol.prototype.transformIncomingURIs = function (obj) {\n        if (!this._uriTransformer) {\n            return obj;\n        }\n        return uriIpc_1.transformIncomingURIs(obj, this._uriTransformer);\n    };\n    RPCProtocol.prototype.getProxy = function (identifier) {\n        var rpcId = identifier.nid;\n        if (!this._proxies[rpcId]) {\n            this._proxies[rpcId] = this._createProxy(rpcId);\n        }\n        return this._proxies[rpcId];\n    };\n    RPCProtocol.prototype._createProxy = function (rpcId) {\n        var _this = this;\n        var handler = {\n            get: function (target, name) {\n                if (!target[name] && name.charCodeAt(0) === charCode_1.CharCode.DollarSign) {\n                    target[name] = function () {\n                        var myArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            myArgs[_i] = arguments[_i];\n                        }\n                        return _this._remoteCall(rpcId, name, myArgs);\n                    };\n                }\n                return target[name];\n            }\n        };\n        return new Proxy(Object.create(null), handler);\n    };\n    RPCProtocol.prototype.set = function (identifier, value) {\n        this._locals[identifier.nid] = value;\n        return value;\n    };\n    RPCProtocol.prototype.assertRegistered = function (identifiers) {\n        for (var i = 0, len = identifiers.length; i < len; i++) {\n            var identifier = identifiers[i];\n            if (!this._locals[identifier.nid]) {\n                throw new Error(\"Missing actor \" + identifier.sid + \" (isMain: \" + identifier.isMain + \")\");\n            }\n        }\n    };\n    RPCProtocol.prototype._receiveOneMessage = function (rawmsg) {\n        if (this._isDisposed) {\n            return;\n        }\n        var msgLength = rawmsg.byteLength;\n        var buff = MessageBuffer.read(rawmsg, 0);\n        var messageType = buff.readUInt8();\n        var req = buff.readUInt32();\n        switch (messageType) {\n            case MessageType.RequestJSONArgs:\n            case MessageType.RequestJSONArgsWithCancellation: {\n                var _a = MessageIO.deserializeRequestJSONArgs(buff), rpcId = _a.rpcId, method = _a.method, args = _a.args;\n                if (this._uriTransformer) {\n                    args = uriIpc_1.transformIncomingURIs(args, this._uriTransformer);\n                }\n                this._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestJSONArgsWithCancellation));\n                break;\n            }\n            case MessageType.RequestMixedArgs:\n            case MessageType.RequestMixedArgsWithCancellation: {\n                var _b = MessageIO.deserializeRequestMixedArgs(buff), rpcId = _b.rpcId, method = _b.method, args = _b.args;\n                if (this._uriTransformer) {\n                    args = uriIpc_1.transformIncomingURIs(args, this._uriTransformer);\n                }\n                this._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestMixedArgsWithCancellation));\n                break;\n            }\n            case MessageType.Acknowledged: {\n                if (this._logger) {\n                    this._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, \"ack\");\n                }\n                this._onDidReceiveAcknowledge(req);\n                break;\n            }\n            case MessageType.Cancel: {\n                this._receiveCancel(msgLength, req);\n                break;\n            }\n            case MessageType.ReplyOKEmpty: {\n                this._receiveReply(msgLength, req, undefined);\n                break;\n            }\n            case MessageType.ReplyOKJSON: {\n                var value = MessageIO.deserializeReplyOKJSON(buff);\n                if (this._uriTransformer) {\n                    value = uriIpc_1.transformIncomingURIs(value, this._uriTransformer);\n                }\n                this._receiveReply(msgLength, req, value);\n                break;\n            }\n            case MessageType.ReplyOKBuffer: {\n                var value = MessageIO.deserializeReplyOKBuffer(buff);\n                this._receiveReply(msgLength, req, value);\n                break;\n            }\n            case MessageType.ReplyOKVSBuffer: {\n                var value = MessageIO.deserializeReplyOKVSBuffer(buff);\n                this._receiveReply(msgLength, req, value);\n                break;\n            }\n            case MessageType.ReplyErrError: {\n                var err = MessageIO.deserializeReplyErrError(buff);\n                if (this._uriTransformer) {\n                    err = uriIpc_1.transformIncomingURIs(err, this._uriTransformer);\n                }\n                this._receiveReplyErr(msgLength, req, err);\n                break;\n            }\n            case MessageType.ReplyErrEmpty: {\n                this._receiveReplyErr(msgLength, req, undefined);\n                break;\n            }\n            default:\n                console.error(\"received unexpected message\");\n                console.error(rawmsg);\n        }\n    };\n    RPCProtocol.prototype._receiveRequest = function (msgLength, req, rpcId, method, args, usesCancellationToken) {\n        var _this = this;\n        if (this._logger) {\n            this._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, \"receiveRequest \" + proxyIdentifier_1.getStringIdentifierForProxy(rpcId) + \".\" + method + \"(\", args);\n        }\n        var callId = String(req);\n        var promise;\n        var cancel;\n        if (usesCancellationToken) {\n            var cancellationTokenSource_1 = new cancellation_1.CancellationTokenSource();\n            args.push(cancellationTokenSource_1.token);\n            promise = this._invokeHandler(rpcId, method, args);\n            cancel = function () { return cancellationTokenSource_1.cancel(); };\n        }\n        else {\n            // cannot be cancelled\n            promise = this._invokeHandler(rpcId, method, args);\n            cancel = noop;\n        }\n        this._cancelInvokedHandlers[callId] = cancel;\n        // Acknowledge the request\n        var msg = MessageIO.serializeAcknowledged(req);\n        if (this._logger) {\n            this._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, \"ack\");\n        }\n        this._protocol.send(msg);\n        promise.then(function (r) {\n            delete _this._cancelInvokedHandlers[callId];\n            var msg = MessageIO.serializeReplyOK(req, r, _this._uriReplacer);\n            if (_this._logger) {\n                _this._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, \"reply:\", r);\n            }\n            _this._protocol.send(msg);\n        }, function (err) {\n            delete _this._cancelInvokedHandlers[callId];\n            var msg = MessageIO.serializeReplyErr(req, err);\n            if (_this._logger) {\n                _this._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, \"replyErr:\", err);\n            }\n            _this._protocol.send(msg);\n        });\n    };\n    RPCProtocol.prototype._receiveCancel = function (msgLength, req) {\n        if (this._logger) {\n            this._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, \"receiveCancel\");\n        }\n        var callId = String(req);\n        if (this._cancelInvokedHandlers[callId]) {\n            this._cancelInvokedHandlers[callId]();\n        }\n    };\n    RPCProtocol.prototype._receiveReply = function (msgLength, req, value) {\n        if (this._logger) {\n            this._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, \"receiveReply:\", value);\n        }\n        var callId = String(req);\n        if (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n            return;\n        }\n        var pendingReply = this._pendingRPCReplies[callId];\n        delete this._pendingRPCReplies[callId];\n        pendingReply.resolveOk(value);\n    };\n    RPCProtocol.prototype._receiveReplyErr = function (msgLength, req, value) {\n        if (this._logger) {\n            this._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, \"receiveReplyErr:\", value);\n        }\n        var callId = String(req);\n        if (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n            return;\n        }\n        var pendingReply = this._pendingRPCReplies[callId];\n        delete this._pendingRPCReplies[callId];\n        var err = null;\n        if (value && value.$isError) {\n            err = new Error();\n            err.name = value.name;\n            err.message = value.message;\n            err.stack = value.stack;\n        }\n        pendingReply.resolveErr(err);\n    };\n    RPCProtocol.prototype._invokeHandler = function (rpcId, methodName, args) {\n        try {\n            return Promise.resolve(this._doInvokeHandler(rpcId, methodName, args));\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    };\n    RPCProtocol.prototype._doInvokeHandler = function (rpcId, methodName, args) {\n        var actor = this._locals[rpcId];\n        if (!actor) {\n            throw new Error('Unknown actor ' + proxyIdentifier_1.getStringIdentifierForProxy(rpcId));\n        }\n        var method = actor[methodName];\n        if (typeof method !== 'function') {\n            throw new Error('Unknown method ' + methodName + ' on actor ' + proxyIdentifier_1.getStringIdentifierForProxy(rpcId));\n        }\n        return method.apply(actor, args);\n    };\n    RPCProtocol.prototype._remoteCall = function (rpcId, methodName, args) {\n        var _this = this;\n        if (this._isDisposed) {\n            return Promise.reject(errors.canceled());\n        }\n        var cancellationToken = null;\n        if (args.length > 0 && cancellation_1.CancellationToken.isCancellationToken(args[args.length - 1])) {\n            cancellationToken = args.pop();\n        }\n        if (cancellationToken && cancellationToken.isCancellationRequested) {\n            // No need to do anything...\n            return Promise.reject(errors.canceled());\n        }\n        var req = ++this._lastMessageId;\n        var callId = String(req);\n        var result = new lazyPromise_1.LazyPromise();\n        if (cancellationToken) {\n            cancellationToken.onCancellationRequested(function () {\n                var msg = MessageIO.serializeCancel(req);\n                if (_this._logger) {\n                    _this._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, \"cancel\");\n                }\n                _this._protocol.send(MessageIO.serializeCancel(req));\n            });\n        }\n        this._pendingRPCReplies[callId] = result;\n        this._onWillSendRequest(req);\n        var msg = MessageIO.serializeRequest(req, rpcId, methodName, args, !!cancellationToken, this._uriReplacer);\n        if (this._logger) {\n            this._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, \"request: \" + proxyIdentifier_1.getStringIdentifierForProxy(rpcId) + \".\" + methodName + \"(\", args);\n        }\n        this._protocol.send(msg);\n        return result;\n    };\n    RPCProtocol.UNRESPONSIVE_TIME = 3 * 1000; // 3s\n    return RPCProtocol;\n}(lifecycle_1.Disposable));\nexports.RPCProtocol = RPCProtocol;\nvar MessageBuffer = /** @class */ (function () {\n    function MessageBuffer(buff, offset) {\n        this._buff = buff;\n        this._offset = offset;\n    }\n    MessageBuffer.alloc = function (type, req, messageSize) {\n        var result = new MessageBuffer(buffer_1.VSBuffer.alloc(messageSize + 1 /* type */ + 4 /* req */), 0);\n        result.writeUInt8(type);\n        result.writeUInt32(req);\n        return result;\n    };\n    MessageBuffer.read = function (buff, offset) {\n        return new MessageBuffer(buff, offset);\n    };\n    Object.defineProperty(MessageBuffer.prototype, \"buffer\", {\n        get: function () {\n            return this._buff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MessageBuffer.sizeUInt8 = function () {\n        return 1;\n    };\n    MessageBuffer.prototype.writeUInt8 = function (n) {\n        this._buff.writeUint8(n, this._offset);\n        this._offset += 1;\n    };\n    MessageBuffer.prototype.readUInt8 = function () {\n        var n = this._buff.readUint8(this._offset);\n        this._offset += 1;\n        return n;\n    };\n    MessageBuffer.prototype.writeUInt32 = function (n) {\n        this._buff.writeUint32BE(n, this._offset);\n        this._offset += 4;\n    };\n    MessageBuffer.prototype.readUInt32 = function () {\n        var n = this._buff.readUint32BE(this._offset);\n        this._offset += 4;\n        return n;\n    };\n    MessageBuffer.sizeShortString = function (str) {\n        return 1 /* string length */ + str.byteLength /* actual string */;\n    };\n    MessageBuffer.prototype.writeShortString = function (str) {\n        this._buff.writeUint8(str.byteLength, this._offset);\n        this._offset += 1;\n        this._buff.set(str, this._offset);\n        this._offset += str.byteLength;\n    };\n    MessageBuffer.prototype.readShortString = function () {\n        var strByteLength = this._buff.readUint8(this._offset);\n        this._offset += 1;\n        var strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n        var str = strBuff.toString();\n        this._offset += strByteLength;\n        return str;\n    };\n    MessageBuffer.sizeLongString = function (str) {\n        return 4 /* string length */ + str.byteLength /* actual string */;\n    };\n    MessageBuffer.prototype.writeLongString = function (str) {\n        this._buff.writeUint32BE(str.byteLength, this._offset);\n        this._offset += 4;\n        this._buff.set(str, this._offset);\n        this._offset += str.byteLength;\n    };\n    MessageBuffer.prototype.readLongString = function () {\n        var strByteLength = this._buff.readUint32BE(this._offset);\n        this._offset += 4;\n        var strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n        var str = strBuff.toString();\n        this._offset += strByteLength;\n        return str;\n    };\n    MessageBuffer.sizeBuffer = function (buff) {\n        return 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n    };\n    MessageBuffer.prototype.writeBuffer = function (buff) {\n        this._buff.writeUint32BE(buff.byteLength, this._offset);\n        this._offset += 4;\n        this._buff.set(buff, this._offset);\n        this._offset += buff.byteLength;\n    };\n    MessageBuffer.prototype.readBuffer = function () {\n        var buffLength = this._buff.readUint32BE(this._offset);\n        this._offset += 4;\n        var buff = this._buff.slice(this._offset, this._offset + buffLength);\n        this._offset += buffLength;\n        return buff.buffer;\n    };\n    MessageBuffer.sizeVSBuffer = function (buff) {\n        return 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n    };\n    MessageBuffer.prototype.writeVSBuffer = function (buff) {\n        this._buff.writeUint32BE(buff.byteLength, this._offset);\n        this._offset += 4;\n        this._buff.set(buff, this._offset);\n        this._offset += buff.byteLength;\n    };\n    MessageBuffer.prototype.readVSBuffer = function () {\n        var buffLength = this._buff.readUint32BE(this._offset);\n        this._offset += 4;\n        var buff = this._buff.slice(this._offset, this._offset + buffLength);\n        this._offset += buffLength;\n        return buff;\n    };\n    MessageBuffer.sizeMixedArray = function (arr, arrType) {\n        var size = 0;\n        size += 1; // arr length\n        for (var i = 0, len = arr.length; i < len; i++) {\n            var el = arr[i];\n            var elType = arrType[i];\n            size += 1; // arg type\n            if (elType === ArgType.String) {\n                size += this.sizeLongString(el);\n            }\n            else if (elType === ArgType.Buffer) {\n                size += this.sizeBuffer(el);\n            }\n            else {\n                size += this.sizeVSBuffer(el);\n            }\n        }\n        return size;\n    };\n    MessageBuffer.prototype.writeMixedArray = function (arr, arrType) {\n        this._buff.writeUint8(arr.length, this._offset);\n        this._offset += 1;\n        for (var i = 0, len = arr.length; i < len; i++) {\n            var el = arr[i];\n            var elType = arrType[i];\n            if (elType === ArgType.String) {\n                this.writeUInt8(ArgType.String);\n                this.writeLongString(el);\n            }\n            else if (elType === ArgType.Buffer) {\n                this.writeUInt8(ArgType.Buffer);\n                this.writeVSBuffer(el);\n            }\n            else {\n                this.writeUInt8(ArgType.VSBuffer);\n                this.writeVSBuffer(el);\n            }\n        }\n    };\n    MessageBuffer.prototype.readMixedArray = function () {\n        var arrLen = this._buff.readUint8(this._offset);\n        this._offset += 1;\n        var arr = new Array(arrLen);\n        for (var i = 0; i < arrLen; i++) {\n            var argType = this.readUInt8();\n            switch (argType) {\n                case ArgType.String:\n                    arr[i] = this.readLongString();\n                    break;\n                case ArgType.Buffer:\n                    arr[i] = this.readBuffer();\n                    break;\n                case ArgType.VSBuffer:\n                    arr[i] = this.readVSBuffer();\n                    break;\n            }\n        }\n        return arr;\n    };\n    return MessageBuffer;\n}());\nvar MessageIO = /** @class */ (function () {\n    function MessageIO() {\n    }\n    MessageIO._arrayContainsBuffer = function (arr) {\n        for (var i = 0, len = arr.length; i < len; i++) {\n            if (Buffer.isBuffer(arr[i])) {\n                return true;\n            }\n            if (arr[i] instanceof buffer_1.VSBuffer) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MessageIO.serializeRequest = function (req, rpcId, method, args, usesCancellationToken, replacer) {\n        if (this._arrayContainsBuffer(args)) {\n            var massagedArgs = [];\n            var massagedArgsType = [];\n            for (var i = 0, len = args.length; i < len; i++) {\n                var arg = args[i];\n                if (Buffer.isBuffer(arg)) {\n                    massagedArgs[i] = buffer_1.VSBuffer.wrap(arg);\n                    massagedArgsType[i] = ArgType.Buffer;\n                }\n                else if (arg instanceof buffer_1.VSBuffer) {\n                    massagedArgs[i] = arg;\n                    massagedArgsType[i] = ArgType.VSBuffer;\n                }\n                else {\n                    massagedArgs[i] = buffer_1.VSBuffer.fromString(safeStringify(arg, replacer));\n                    massagedArgsType[i] = ArgType.String;\n                }\n            }\n            return this._requestMixedArgs(req, rpcId, method, massagedArgs, massagedArgsType, usesCancellationToken);\n        }\n        return this._requestJSONArgs(req, rpcId, method, safeStringify(args, replacer), usesCancellationToken);\n    };\n    MessageIO._requestJSONArgs = function (req, rpcId, method, args, usesCancellationToken) {\n        var methodBuff = buffer_1.VSBuffer.fromString(method);\n        var argsBuff = buffer_1.VSBuffer.fromString(args);\n        var len = 0;\n        len += MessageBuffer.sizeUInt8();\n        len += MessageBuffer.sizeShortString(methodBuff);\n        len += MessageBuffer.sizeLongString(argsBuff);\n        var result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestJSONArgsWithCancellation : MessageType.RequestJSONArgs, req, len);\n        result.writeUInt8(rpcId);\n        result.writeShortString(methodBuff);\n        result.writeLongString(argsBuff);\n        return result.buffer;\n    };\n    MessageIO.deserializeRequestJSONArgs = function (buff) {\n        var rpcId = buff.readUInt8();\n        var method = buff.readShortString();\n        var args = buff.readLongString();\n        return {\n            rpcId: rpcId,\n            method: method,\n            args: JSON.parse(args)\n        };\n    };\n    MessageIO._requestMixedArgs = function (req, rpcId, method, args, argsType, usesCancellationToken) {\n        var methodBuff = buffer_1.VSBuffer.fromString(method);\n        var len = 0;\n        len += MessageBuffer.sizeUInt8();\n        len += MessageBuffer.sizeShortString(methodBuff);\n        len += MessageBuffer.sizeMixedArray(args, argsType);\n        var result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestMixedArgsWithCancellation : MessageType.RequestMixedArgs, req, len);\n        result.writeUInt8(rpcId);\n        result.writeShortString(methodBuff);\n        result.writeMixedArray(args, argsType);\n        return result.buffer;\n    };\n    MessageIO.deserializeRequestMixedArgs = function (buff) {\n        var rpcId = buff.readUInt8();\n        var method = buff.readShortString();\n        var rawargs = buff.readMixedArray();\n        var args = new Array(rawargs.length);\n        for (var i = 0, len = rawargs.length; i < len; i++) {\n            var rawarg = rawargs[i];\n            if (typeof rawarg === 'string') {\n                args[i] = JSON.parse(rawarg);\n            }\n            else {\n                args[i] = rawarg;\n            }\n        }\n        return {\n            rpcId: rpcId,\n            method: method,\n            args: args\n        };\n    };\n    MessageIO.serializeAcknowledged = function (req) {\n        return MessageBuffer.alloc(MessageType.Acknowledged, req, 0).buffer;\n    };\n    MessageIO.serializeCancel = function (req) {\n        return MessageBuffer.alloc(MessageType.Cancel, req, 0).buffer;\n    };\n    MessageIO.serializeReplyOK = function (req, res, replacer) {\n        if (typeof res === 'undefined') {\n            return this._serializeReplyOKEmpty(req);\n        }\n        if (Buffer.isBuffer(res)) {\n            return this._serializeReplyOKBuffer(req, res);\n        }\n        if (res instanceof buffer_1.VSBuffer) {\n            return this._serializeReplyOKVSBuffer(req, res);\n        }\n        return this._serializeReplyOKJSON(req, safeStringify(res, replacer));\n    };\n    MessageIO._serializeReplyOKEmpty = function (req) {\n        return MessageBuffer.alloc(MessageType.ReplyOKEmpty, req, 0).buffer;\n    };\n    MessageIO._serializeReplyOKBuffer = function (req, res) {\n        var buff = buffer_1.VSBuffer.wrap(res);\n        var len = 0;\n        len += MessageBuffer.sizeBuffer(buff);\n        var result = MessageBuffer.alloc(MessageType.ReplyOKBuffer, req, len);\n        result.writeBuffer(buff);\n        return result.buffer;\n    };\n    MessageIO._serializeReplyOKVSBuffer = function (req, res) {\n        var len = 0;\n        len += MessageBuffer.sizeVSBuffer(res);\n        var result = MessageBuffer.alloc(MessageType.ReplyOKVSBuffer, req, len);\n        result.writeVSBuffer(res);\n        return result.buffer;\n    };\n    MessageIO.deserializeReplyOKBuffer = function (buff) {\n        return buff.readBuffer();\n    };\n    MessageIO.deserializeReplyOKVSBuffer = function (buff) {\n        return buff.readVSBuffer();\n    };\n    MessageIO._serializeReplyOKJSON = function (req, res) {\n        var resBuff = buffer_1.VSBuffer.fromString(res);\n        var len = 0;\n        len += MessageBuffer.sizeLongString(resBuff);\n        var result = MessageBuffer.alloc(MessageType.ReplyOKJSON, req, len);\n        result.writeLongString(resBuff);\n        return result.buffer;\n    };\n    MessageIO.deserializeReplyOKJSON = function (buff) {\n        var res = buff.readLongString();\n        return JSON.parse(res);\n    };\n    MessageIO.serializeReplyErr = function (req, err) {\n        if (err instanceof Error) {\n            return this._serializeReplyErrEror(req, err);\n        }\n        return this._serializeReplyErrEmpty(req);\n    };\n    MessageIO._serializeReplyErrEror = function (req, _err) {\n        var errBuff = buffer_1.VSBuffer.fromString(safeStringify(errors.transformErrorForSerialization(_err), null));\n        var len = 0;\n        len += MessageBuffer.sizeLongString(errBuff);\n        var result = MessageBuffer.alloc(MessageType.ReplyErrError, req, len);\n        result.writeLongString(errBuff);\n        return result.buffer;\n    };\n    MessageIO.deserializeReplyErrError = function (buff) {\n        var err = buff.readLongString();\n        return JSON.parse(err);\n    };\n    MessageIO._serializeReplyErrEmpty = function (req) {\n        return MessageBuffer.alloc(MessageType.ReplyErrEmpty, req, 0).buffer;\n    };\n    return MessageIO;\n}());\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"RequestJSONArgs\"] = 1] = \"RequestJSONArgs\";\n    MessageType[MessageType[\"RequestJSONArgsWithCancellation\"] = 2] = \"RequestJSONArgsWithCancellation\";\n    MessageType[MessageType[\"RequestMixedArgs\"] = 3] = \"RequestMixedArgs\";\n    MessageType[MessageType[\"RequestMixedArgsWithCancellation\"] = 4] = \"RequestMixedArgsWithCancellation\";\n    MessageType[MessageType[\"Acknowledged\"] = 5] = \"Acknowledged\";\n    MessageType[MessageType[\"Cancel\"] = 6] = \"Cancel\";\n    MessageType[MessageType[\"ReplyOKEmpty\"] = 7] = \"ReplyOKEmpty\";\n    MessageType[MessageType[\"ReplyOKBuffer\"] = 8] = \"ReplyOKBuffer\";\n    MessageType[MessageType[\"ReplyOKVSBuffer\"] = 8] = \"ReplyOKVSBuffer\";\n    MessageType[MessageType[\"ReplyOKJSON\"] = 9] = \"ReplyOKJSON\";\n    MessageType[MessageType[\"ReplyErrError\"] = 10] = \"ReplyErrError\";\n    MessageType[MessageType[\"ReplyErrEmpty\"] = 11] = \"ReplyErrEmpty\";\n})(MessageType || (MessageType = {}));\nvar ArgType;\n(function (ArgType) {\n    ArgType[ArgType[\"String\"] = 1] = \"String\";\n    ArgType[ArgType[\"Buffer\"] = 2] = \"Buffer\";\n    ArgType[ArgType[\"VSBuffer\"] = 3] = \"VSBuffer\";\n})(ArgType || (ArgType = {}));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/rpcProtocol.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/rpcProtocol.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IURITransformer, transformIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\nimport { LazyPromise } from 'vs/workbench/services/extensions/node/lazyPromise';\nimport { IRPCProtocol, ProxyIdentifier, getStringIdentifierForProxy } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface JSONStringifyReplacer {\n\t(key: string, value: any): any;\n}\n\nfunction safeStringify(obj: any, replacer: JSONStringifyReplacer | null): string {\n\ttry {\n\t\treturn JSON.stringify(obj, <(key: string, value: any) => any>replacer);\n\t} catch (err) {\n\t\treturn 'null';\n\t}\n}\n\nfunction createURIReplacer(transformer: IURITransformer | null): JSONStringifyReplacer | null {\n\tif (!transformer) {\n\t\treturn null;\n\t}\n\treturn (key: string, value: any): any => {\n\t\tif (value && value.$mid === 1) {\n\t\t\treturn transformer.transformOutgoing(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport const enum ResponsiveState {\n\tResponsive = 0,\n\tUnresponsive = 1\n}\n\nexport interface IRPCProtocolLogger {\n\tlogIncoming(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, req: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nconst noop = () => { };\n\nexport class RPCProtocol extends Disposable implements IRPCProtocol {\n\n\tprivate static UNRESPONSIVE_TIME = 3 * 1000; // 3s\n\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\tprivate readonly _protocol: IMessagePassingProtocol;\n\tprivate readonly _logger: IRPCProtocolLogger | null;\n\tprivate readonly _uriTransformer: IURITransformer | null;\n\tprivate readonly _uriReplacer: JSONStringifyReplacer | null;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _locals: any[];\n\tprivate readonly _proxies: any[];\n\tprivate _lastMessageId: number;\n\tprivate readonly _cancelInvokedHandlers: { [req: string]: () => void; };\n\tprivate readonly _pendingRPCReplies: { [msgId: string]: LazyPromise; };\n\tprivate _responsiveState: ResponsiveState;\n\tprivate _unacknowledgedCount: number;\n\tprivate _unresponsiveTime: number;\n\tprivate _asyncCheckUresponsive: RunOnceScheduler;\n\n\tconstructor(protocol: IMessagePassingProtocol, logger: IRPCProtocolLogger | null = null, transformer: IURITransformer | null = null) {\n\t\tsuper();\n\t\tthis._protocol = protocol;\n\t\tthis._logger = logger;\n\t\tthis._uriTransformer = transformer;\n\t\tthis._uriReplacer = createURIReplacer(this._uriTransformer);\n\t\tthis._isDisposed = false;\n\t\tthis._locals = [];\n\t\tthis._proxies = [];\n\t\tfor (let i = 0, len = ProxyIdentifier.count; i < len; i++) {\n\t\t\tthis._locals[i] = null;\n\t\t\tthis._proxies[i] = null;\n\t\t}\n\t\tthis._lastMessageId = 0;\n\t\tthis._cancelInvokedHandlers = Object.create(null);\n\t\tthis._pendingRPCReplies = {};\n\t\tthis._responsiveState = ResponsiveState.Responsive;\n\t\tthis._unacknowledgedCount = 0;\n\t\tthis._unresponsiveTime = 0;\n\t\tthis._asyncCheckUresponsive = this._register(new RunOnceScheduler(() => this._checkUnresponsive(), 1000));\n\t\tthis._protocol.onMessage((msg) => this._receiveOneMessage(msg));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\n\t\t// Release all outstanding promises with a canceled error\n\t\tObject.keys(this._pendingRPCReplies).forEach((msgId) => {\n\t\t\tconst pending = this._pendingRPCReplies[msgId];\n\t\t\tpending.resolveErr(errors.canceled());\n\t\t});\n\t}\n\n\tprivate _onWillSendRequest(req: number): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Since this is the first request we are sending in a while,\n\t\t\t// mark this moment as the start for the countdown to unresponsive time\n\t\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\t}\n\t\tthis._unacknowledgedCount++;\n\t\tif (!this._asyncCheckUresponsive.isScheduled()) {\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _onDidReceiveAcknowledge(req: number): void {\n\t\t// The next possible unresponsive time is now + delta.\n\t\tthis._unresponsiveTime = Date.now() + RPCProtocol.UNRESPONSIVE_TIME;\n\t\tthis._unacknowledgedCount--;\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// No more need to check for unresponsive\n\t\t\tthis._asyncCheckUresponsive.cancel();\n\t\t}\n\t\t// The ext host is responsive!\n\t\tthis._setResponsiveState(ResponsiveState.Responsive);\n\t}\n\n\tprivate _checkUnresponsive(): void {\n\t\tif (this._unacknowledgedCount === 0) {\n\t\t\t// Not waiting for anything => cannot say if it is responsive or not\n\t\t\treturn;\n\t\t}\n\n\t\tif (Date.now() > this._unresponsiveTime) {\n\t\t\t// Unresponsive!!\n\t\t\tthis._setResponsiveState(ResponsiveState.Unresponsive);\n\t\t} else {\n\t\t\t// Not (yet) unresponsive, be sure to check again soon\n\t\t\tthis._asyncCheckUresponsive.schedule();\n\t\t}\n\t}\n\n\tprivate _setResponsiveState(newResponsiveState: ResponsiveState): void {\n\t\tif (this._responsiveState === newResponsiveState) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._responsiveState = newResponsiveState;\n\t\tthis._onDidChangeResponsiveState.fire(this._responsiveState);\n\t}\n\n\tpublic get responsiveState(): ResponsiveState {\n\t\treturn this._responsiveState;\n\t}\n\n\tpublic transformIncomingURIs<T>(obj: T): T {\n\t\tif (!this._uriTransformer) {\n\t\t\treturn obj;\n\t\t}\n\t\treturn transformIncomingURIs(obj, this._uriTransformer);\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): T {\n\t\tconst rpcId = identifier.nid;\n\t\tif (!this._proxies[rpcId]) {\n\t\t\tthis._proxies[rpcId] = this._createProxy(rpcId);\n\t\t}\n\t\treturn this._proxies[rpcId];\n\t}\n\n\tprivate _createProxy<T>(rpcId: number): T {\n\t\tlet handler = {\n\t\t\tget: (target: any, name: string) => {\n\t\t\t\tif (!target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(rpcId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.nid] = value;\n\t\treturn value;\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tfor (let i = 0, len = identifiers.length; i < len; i++) {\n\t\t\tconst identifier = identifiers[i];\n\t\t\tif (!this._locals[identifier.nid]) {\n\t\t\t\tthrow new Error(`Missing actor ${identifier.sid} (isMain: ${identifier.isMain})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _receiveOneMessage(rawmsg: VSBuffer): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msgLength = rawmsg.byteLength;\n\t\tconst buff = MessageBuffer.read(rawmsg, 0);\n\t\tconst messageType = <MessageType>buff.readUInt8();\n\t\tconst req = buff.readUInt32();\n\n\t\tswitch (messageType) {\n\t\t\tcase MessageType.RequestJSONArgs:\n\t\t\tcase MessageType.RequestJSONArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestJSONArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestJSONArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.RequestMixedArgs:\n\t\t\tcase MessageType.RequestMixedArgsWithCancellation: {\n\t\t\t\tlet { rpcId, method, args } = MessageIO.deserializeRequestMixedArgs(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\targs = transformIncomingURIs(args, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveRequest(msgLength, req, rpcId, method, args, (messageType === MessageType.RequestMixedArgsWithCancellation));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Acknowledged: {\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `ack`);\n\t\t\t\t}\n\t\t\t\tthis._onDidReceiveAcknowledge(req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.Cancel: {\n\t\t\t\tthis._receiveCancel(msgLength, req);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKEmpty: {\n\t\t\t\tthis._receiveReply(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKJSON: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKJSON(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\tvalue = transformIncomingURIs(value, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKBuffer: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKBuffer(buff);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyOKVSBuffer: {\n\t\t\t\tlet value = MessageIO.deserializeReplyOKVSBuffer(buff);\n\t\t\t\tthis._receiveReply(msgLength, req, value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrError: {\n\t\t\t\tlet err = MessageIO.deserializeReplyErrError(buff);\n\t\t\t\tif (this._uriTransformer) {\n\t\t\t\t\terr = transformIncomingURIs(err, this._uriTransformer);\n\t\t\t\t}\n\t\t\t\tthis._receiveReplyErr(msgLength, req, err);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MessageType.ReplyErrEmpty: {\n\t\t\t\tthis._receiveReplyErr(msgLength, req, undefined);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.error(`received unexpected message`);\n\t\t\t\tconsole.error(rawmsg);\n\t\t}\n\t}\n\n\tprivate _receiveRequest(msgLength: number, req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveRequest ${getStringIdentifierForProxy(rpcId)}.${method}(`, args);\n\t\t}\n\t\tconst callId = String(req);\n\n\t\tlet promise: Promise<any>;\n\t\tlet cancel: () => void;\n\t\tif (usesCancellationToken) {\n\t\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\t\targs.push(cancellationTokenSource.token);\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = () => cancellationTokenSource.cancel();\n\t\t} else {\n\t\t\t// cannot be cancelled\n\t\t\tpromise = this._invokeHandler(rpcId, method, args);\n\t\t\tcancel = noop;\n\t\t}\n\n\t\tthis._cancelInvokedHandlers[callId] = cancel;\n\n\t\t// Acknowledge the request\n\t\tconst msg = MessageIO.serializeAcknowledged(req);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `ack`);\n\t\t}\n\t\tthis._protocol.send(msg);\n\n\t\tpromise.then((r) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyOK(req, r, this._uriReplacer);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `reply:`, r);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t}, (err) => {\n\t\t\tdelete this._cancelInvokedHandlers[callId];\n\t\t\tconst msg = MessageIO.serializeReplyErr(req, err);\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.OtherSide, `replyErr:`, err);\n\t\t\t}\n\t\t\tthis._protocol.send(msg);\n\t\t});\n\t}\n\n\tprivate _receiveCancel(msgLength: number, req: number): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.OtherSide, `receiveCancel`);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (this._cancelInvokedHandlers[callId]) {\n\t\t\tthis._cancelInvokedHandlers[callId]();\n\t\t}\n\t}\n\n\tprivate _receiveReply(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReply:`, value);\n\t\t}\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tpendingReply.resolveOk(value);\n\t}\n\n\tprivate _receiveReplyErr(msgLength: number, req: number, value: any): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.logIncoming(msgLength, req, RequestInitiator.LocalSide, `receiveReplyErr:`, value);\n\t\t}\n\n\t\tconst callId = String(req);\n\t\tif (!this._pendingRPCReplies.hasOwnProperty(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingReply = this._pendingRPCReplies[callId];\n\t\tdelete this._pendingRPCReplies[callId];\n\n\t\tlet err: Error | null = null;\n\t\tif (value && value.$isError) {\n\t\t\terr = new Error();\n\t\t\terr.name = value.name;\n\t\t\terr.message = value.message;\n\t\t\terr.stack = value.stack;\n\t\t}\n\t\tpendingReply.resolveErr(err);\n\t}\n\n\tprivate _invokeHandler(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\ttry {\n\t\t\treturn Promise.resolve(this._doInvokeHandler(rpcId, methodName, args));\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tprivate _doInvokeHandler(rpcId: number, methodName: string, args: any[]): any {\n\t\tconst actor = this._locals[rpcId];\n\t\tif (!actor) {\n\t\t\tthrow new Error('Unknown actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\tlet method = actor[methodName];\n\t\tif (typeof method !== 'function') {\n\t\t\tthrow new Error('Unknown method ' + methodName + ' on actor ' + getStringIdentifierForProxy(rpcId));\n\t\t}\n\t\treturn method.apply(actor, args);\n\t}\n\n\tprivate _remoteCall(rpcId: number, methodName: string, args: any[]): Promise<any> {\n\t\tif (this._isDisposed) {\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\t\tlet cancellationToken: CancellationToken | null = null;\n\t\tif (args.length > 0 && CancellationToken.isCancellationToken(args[args.length - 1])) {\n\t\t\tcancellationToken = args.pop();\n\t\t}\n\n\t\tif (cancellationToken && cancellationToken.isCancellationRequested) {\n\t\t\t// No need to do anything...\n\t\t\treturn Promise.reject<any>(errors.canceled());\n\t\t}\n\n\t\tconst req = ++this._lastMessageId;\n\t\tconst callId = String(req);\n\t\tconst result = new LazyPromise();\n\n\t\tif (cancellationToken) {\n\t\t\tcancellationToken.onCancellationRequested(() => {\n\t\t\t\tconst msg = MessageIO.serializeCancel(req);\n\t\t\t\tif (this._logger) {\n\t\t\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `cancel`);\n\t\t\t\t}\n\t\t\t\tthis._protocol.send(MessageIO.serializeCancel(req));\n\t\t\t});\n\t\t}\n\n\t\tthis._pendingRPCReplies[callId] = result;\n\t\tthis._onWillSendRequest(req);\n\t\tconst msg = MessageIO.serializeRequest(req, rpcId, methodName, args, !!cancellationToken, this._uriReplacer);\n\t\tif (this._logger) {\n\t\t\tthis._logger.logOutgoing(msg.byteLength, req, RequestInitiator.LocalSide, `request: ${getStringIdentifierForProxy(rpcId)}.${methodName}(`, args);\n\t\t}\n\t\tthis._protocol.send(msg);\n\t\treturn result;\n\t}\n}\n\nclass MessageBuffer {\n\n\tpublic static alloc(type: MessageType, req: number, messageSize: number): MessageBuffer {\n\t\tlet result = new MessageBuffer(VSBuffer.alloc(messageSize + 1 /* type */ + 4 /* req */), 0);\n\t\tresult.writeUInt8(type);\n\t\tresult.writeUInt32(req);\n\t\treturn result;\n\t}\n\n\tpublic static read(buff: VSBuffer, offset: number): MessageBuffer {\n\t\treturn new MessageBuffer(buff, offset);\n\t}\n\n\tprivate _buff: VSBuffer;\n\tprivate _offset: number;\n\n\tpublic get buffer(): VSBuffer {\n\t\treturn this._buff;\n\t}\n\n\tprivate constructor(buff: VSBuffer, offset: number) {\n\t\tthis._buff = buff;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic static sizeUInt8(): number {\n\t\treturn 1;\n\t}\n\n\tpublic writeUInt8(n: number): void {\n\t\tthis._buff.writeUint8(n, this._offset); this._offset += 1;\n\t}\n\n\tpublic readUInt8(): number {\n\t\tconst n = this._buff.readUint8(this._offset); this._offset += 1;\n\t\treturn n;\n\t}\n\n\tpublic writeUInt32(n: number): void {\n\t\tthis._buff.writeUint32BE(n, this._offset); this._offset += 4;\n\t}\n\n\tpublic readUInt32(): number {\n\t\tconst n = this._buff.readUint32BE(this._offset); this._offset += 4;\n\t\treturn n;\n\t}\n\n\tpublic static sizeShortString(str: VSBuffer): number {\n\t\treturn 1 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeShortString(str: VSBuffer): void {\n\t\tthis._buff.writeUint8(str.byteLength, this._offset); this._offset += 1;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readShortString(): string {\n\t\tconst strByteLength = this._buff.readUint8(this._offset); this._offset += 1;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeLongString(str: VSBuffer): number {\n\t\treturn 4 /* string length */ + str.byteLength /* actual string */;\n\t}\n\n\tpublic writeLongString(str: VSBuffer): void {\n\t\tthis._buff.writeUint32BE(str.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(str, this._offset); this._offset += str.byteLength;\n\t}\n\n\tpublic readLongString(): string {\n\t\tconst strByteLength = this._buff.readUint32BE(this._offset); this._offset += 4;\n\t\tconst strBuff = this._buff.slice(this._offset, this._offset + strByteLength);\n\t\tconst str = strBuff.toString(); this._offset += strByteLength;\n\t\treturn str;\n\t}\n\n\tpublic static sizeBuffer(buff: VSBuffer): number {\n\t\treturn 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n\t}\n\n\tpublic writeBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUint32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic readBuffer(): Buffer {\n\t\tconst buffLength = this._buff.readUint32BE(this._offset); this._offset += 4;\n\t\tconst buff = this._buff.slice(this._offset, this._offset + buffLength); this._offset += buffLength;\n\t\treturn <Buffer>buff.buffer;\n\t}\n\n\tpublic static sizeVSBuffer(buff: VSBuffer): number {\n\t\treturn 4 /* buffer length */ + buff.byteLength /* actual buffer */;\n\t}\n\n\tpublic writeVSBuffer(buff: VSBuffer): void {\n\t\tthis._buff.writeUint32BE(buff.byteLength, this._offset); this._offset += 4;\n\t\tthis._buff.set(buff, this._offset); this._offset += buff.byteLength;\n\t}\n\n\tpublic readVSBuffer(): VSBuffer {\n\t\tconst buffLength = this._buff.readUint32BE(this._offset); this._offset += 4;\n\t\tconst buff = this._buff.slice(this._offset, this._offset + buffLength); this._offset += buffLength;\n\t\treturn buff;\n\t}\n\n\tpublic static sizeMixedArray(arr: VSBuffer[], arrType: ArgType[]): number {\n\t\tlet size = 0;\n\t\tsize += 1; // arr length\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elType = arrType[i];\n\t\t\tsize += 1; // arg type\n\t\t\tif (elType === ArgType.String) {\n\t\t\t\tsize += this.sizeLongString(el);\n\t\t\t} else if (elType === ArgType.Buffer) {\n\t\t\t\tsize += this.sizeBuffer(el);\n\t\t\t} else {\n\t\t\t\tsize += this.sizeVSBuffer(el);\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t}\n\n\tpublic writeMixedArray(arr: VSBuffer[], arrType: ArgType[]): void {\n\t\tthis._buff.writeUint8(arr.length, this._offset); this._offset += 1;\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tconst el = arr[i];\n\t\t\tconst elType = arrType[i];\n\t\t\tif (elType === ArgType.String) {\n\t\t\t\tthis.writeUInt8(ArgType.String);\n\t\t\t\tthis.writeLongString(el);\n\t\t\t} else if (elType === ArgType.Buffer) {\n\t\t\t\tthis.writeUInt8(ArgType.Buffer);\n\t\t\t\tthis.writeVSBuffer(el);\n\t\t\t} else {\n\t\t\t\tthis.writeUInt8(ArgType.VSBuffer);\n\t\t\t\tthis.writeVSBuffer(el);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readMixedArray(): Array<string | Buffer | VSBuffer> {\n\t\tconst arrLen = this._buff.readUint8(this._offset); this._offset += 1;\n\t\tlet arr: Array<string | Buffer | VSBuffer> = new Array(arrLen);\n\t\tfor (let i = 0; i < arrLen; i++) {\n\t\t\tconst argType = <ArgType>this.readUInt8();\n\t\t\tswitch (argType) {\n\t\t\t\tcase ArgType.String:\n\t\t\t\t\tarr[i] = this.readLongString();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.Buffer:\n\t\t\t\t\tarr[i] = this.readBuffer();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ArgType.VSBuffer:\n\t\t\t\t\tarr[i] = this.readVSBuffer();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n}\n\nclass MessageIO {\n\n\tprivate static _arrayContainsBuffer(arr: any[]): boolean {\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (Buffer.isBuffer(arr[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (arr[i] instanceof VSBuffer) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static serializeRequest(req: number, rpcId: number, method: string, args: any[], usesCancellationToken: boolean, replacer: JSONStringifyReplacer | null): VSBuffer {\n\t\tif (this._arrayContainsBuffer(args)) {\n\t\t\tlet massagedArgs: VSBuffer[] = [];\n\t\t\tlet massagedArgsType: ArgType[] = [];\n\t\t\tfor (let i = 0, len = args.length; i < len; i++) {\n\t\t\t\tconst arg = args[i];\n\t\t\t\tif (Buffer.isBuffer(arg)) {\n\t\t\t\t\tmassagedArgs[i] = VSBuffer.wrap(arg);\n\t\t\t\t\tmassagedArgsType[i] = ArgType.Buffer;\n\t\t\t\t} else if (arg instanceof VSBuffer) {\n\t\t\t\t\tmassagedArgs[i] = arg;\n\t\t\t\t\tmassagedArgsType[i] = ArgType.VSBuffer;\n\t\t\t\t} else {\n\t\t\t\t\tmassagedArgs[i] = VSBuffer.fromString(safeStringify(arg, replacer));\n\t\t\t\t\tmassagedArgsType[i] = ArgType.String;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._requestMixedArgs(req, rpcId, method, massagedArgs, massagedArgsType, usesCancellationToken);\n\t\t}\n\t\treturn this._requestJSONArgs(req, rpcId, method, safeStringify(args, replacer), usesCancellationToken);\n\t}\n\n\tprivate static _requestJSONArgs(req: number, rpcId: number, method: string, args: string, usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\t\tconst argsBuff = VSBuffer.fromString(args);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeLongString(argsBuff);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestJSONArgsWithCancellation : MessageType.RequestJSONArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeLongString(argsBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestJSONArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst args = buff.readLongString();\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: JSON.parse(args)\n\t\t};\n\t}\n\n\tprivate static _requestMixedArgs(req: number, rpcId: number, method: string, args: VSBuffer[], argsType: ArgType[], usesCancellationToken: boolean): VSBuffer {\n\t\tconst methodBuff = VSBuffer.fromString(method);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeUInt8();\n\t\tlen += MessageBuffer.sizeShortString(methodBuff);\n\t\tlen += MessageBuffer.sizeMixedArray(args, argsType);\n\n\t\tlet result = MessageBuffer.alloc(usesCancellationToken ? MessageType.RequestMixedArgsWithCancellation : MessageType.RequestMixedArgs, req, len);\n\t\tresult.writeUInt8(rpcId);\n\t\tresult.writeShortString(methodBuff);\n\t\tresult.writeMixedArray(args, argsType);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeRequestMixedArgs(buff: MessageBuffer): { rpcId: number; method: string; args: any[]; } {\n\t\tconst rpcId = buff.readUInt8();\n\t\tconst method = buff.readShortString();\n\t\tconst rawargs = buff.readMixedArray();\n\t\tconst args: any[] = new Array(rawargs.length);\n\t\tfor (let i = 0, len = rawargs.length; i < len; i++) {\n\t\t\tconst rawarg = rawargs[i];\n\t\t\tif (typeof rawarg === 'string') {\n\t\t\t\targs[i] = JSON.parse(rawarg);\n\t\t\t} else {\n\t\t\t\targs[i] = rawarg;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t};\n\t}\n\n\tpublic static serializeAcknowledged(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Acknowledged, req, 0).buffer;\n\t}\n\n\tpublic static serializeCancel(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.Cancel, req, 0).buffer;\n\t}\n\n\tpublic static serializeReplyOK(req: number, res: any, replacer: JSONStringifyReplacer | null): VSBuffer {\n\t\tif (typeof res === 'undefined') {\n\t\t\treturn this._serializeReplyOKEmpty(req);\n\t\t}\n\t\tif (Buffer.isBuffer(res)) {\n\t\t\treturn this._serializeReplyOKBuffer(req, res);\n\t\t}\n\t\tif (res instanceof VSBuffer) {\n\t\t\treturn this._serializeReplyOKVSBuffer(req, res);\n\t\t}\n\t\treturn this._serializeReplyOKJSON(req, safeStringify(res, replacer));\n\t}\n\n\tprivate static _serializeReplyOKEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyOKEmpty, req, 0).buffer;\n\t}\n\n\tprivate static _serializeReplyOKBuffer(req: number, res: Buffer): VSBuffer {\n\t\tconst buff = VSBuffer.wrap(res);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeBuffer(buff);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKBuffer, req, len);\n\t\tresult.writeBuffer(buff);\n\t\treturn result.buffer;\n\t}\n\n\tprivate static _serializeReplyOKVSBuffer(req: number, res: VSBuffer): VSBuffer {\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeVSBuffer(res);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKVSBuffer, req, len);\n\t\tresult.writeVSBuffer(res);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKBuffer(buff: MessageBuffer): Buffer {\n\t\treturn buff.readBuffer();\n\t}\n\n\tpublic static deserializeReplyOKVSBuffer(buff: MessageBuffer): VSBuffer {\n\t\treturn buff.readVSBuffer();\n\t}\n\n\tprivate static _serializeReplyOKJSON(req: number, res: string): VSBuffer {\n\t\tconst resBuff = VSBuffer.fromString(res);\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(resBuff);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyOKJSON, req, len);\n\t\tresult.writeLongString(resBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyOKJSON(buff: MessageBuffer): any {\n\t\tconst res = buff.readLongString();\n\t\treturn JSON.parse(res);\n\t}\n\n\tpublic static serializeReplyErr(req: number, err: any): VSBuffer {\n\t\tif (err instanceof Error) {\n\t\t\treturn this._serializeReplyErrEror(req, err);\n\t\t}\n\t\treturn this._serializeReplyErrEmpty(req);\n\t}\n\n\tprivate static _serializeReplyErrEror(req: number, _err: Error): VSBuffer {\n\t\tconst errBuff = VSBuffer.fromString(safeStringify(errors.transformErrorForSerialization(_err), null));\n\n\t\tlet len = 0;\n\t\tlen += MessageBuffer.sizeLongString(errBuff);\n\n\t\tlet result = MessageBuffer.alloc(MessageType.ReplyErrError, req, len);\n\t\tresult.writeLongString(errBuff);\n\t\treturn result.buffer;\n\t}\n\n\tpublic static deserializeReplyErrError(buff: MessageBuffer): Error {\n\t\tconst err = buff.readLongString();\n\t\treturn JSON.parse(err);\n\t}\n\n\tprivate static _serializeReplyErrEmpty(req: number): VSBuffer {\n\t\treturn MessageBuffer.alloc(MessageType.ReplyErrEmpty, req, 0).buffer;\n\t}\n}\n\nconst enum MessageType {\n\tRequestJSONArgs = 1,\n\tRequestJSONArgsWithCancellation = 2,\n\tRequestMixedArgs = 3,\n\tRequestMixedArgsWithCancellation = 4,\n\tAcknowledged = 5,\n\tCancel = 6,\n\tReplyOKEmpty = 7,\n\tReplyOKBuffer = 8,\n\tReplyOKVSBuffer = 8,\n\tReplyOKJSON = 9,\n\tReplyErrError = 10,\n\tReplyErrEmpty = 11,\n}\n\nconst enum ArgType {\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3\n}\n"]}]}