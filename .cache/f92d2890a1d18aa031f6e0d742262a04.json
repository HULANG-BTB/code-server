{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar scrollableElement_1 = require(\"vs/base/browser/ui/scrollbar/scrollableElement\");\nvar viewPart_1 = require(\"vs/editor/browser/view/viewPart\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar EditorScrollbar = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorScrollbar, _super);\n    function EditorScrollbar(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        var _this = _super.call(this, context) || this;\n        var editor = _this._context.configuration.editor;\n        var configScrollbarOpts = editor.viewInfo.scrollbar;\n        var scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + themeService_1.getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: configScrollbarOpts.vertical,\n            horizontal: configScrollbarOpts.horizontal,\n            verticalHasArrows: configScrollbarOpts.verticalHasArrows,\n            horizontalHasArrows: configScrollbarOpts.horizontalHasArrows,\n            verticalScrollbarSize: configScrollbarOpts.verticalScrollbarSize,\n            verticalSliderSize: configScrollbarOpts.verticalSliderSize,\n            horizontalScrollbarSize: configScrollbarOpts.horizontalScrollbarSize,\n            horizontalSliderSize: configScrollbarOpts.horizontalSliderSize,\n            handleMouseWheel: configScrollbarOpts.handleMouseWheel,\n            arrowSize: configScrollbarOpts.arrowSize,\n            mouseWheelScrollSensitivity: configScrollbarOpts.mouseWheelScrollSensitivity,\n            fastScrollSensitivity: configScrollbarOpts.fastScrollSensitivity,\n        };\n        _this.scrollbar = _this._register(new scrollableElement_1.SmoothScrollableElement(linesContent.domNode, scrollbarOptions, _this._context.viewLayout.scrollable));\n        viewPart_1.PartFingerprints.write(_this.scrollbar.getDomNode(), viewPart_1.PartFingerprint.ScrollableElement);\n        _this.scrollbarDomNode = fastDomNode_1.createFastDomNode(_this.scrollbar.getDomNode());\n        _this.scrollbarDomNode.setPosition('absolute');\n        _this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        var onBrowserDesperateReveal = function (domNode, lookAtScrollTop, lookAtScrollLeft) {\n            var newScrollPosition = {};\n            if (lookAtScrollTop) {\n                var deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = _this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                var deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = _this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            _this._context.viewLayout.setScrollPositionNow(newScrollPosition);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        _this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(viewDomNode.domNode, true, true); }));\n        _this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(linesContent.domNode, true, false); }));\n        _this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false); }));\n        _this._register(dom.addDisposableListener(_this.scrollbarDomNode.domNode, 'scroll', function (e) { return onBrowserDesperateReveal(_this.scrollbarDomNode.domNode, true, false); }));\n        return _this;\n    }\n    EditorScrollbar.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    EditorScrollbar.prototype._setLayout = function () {\n        var layoutInfo = this._context.configuration.editor.layoutInfo;\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        var side = this._context.configuration.editor.viewInfo.minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.contentHeight);\n    };\n    EditorScrollbar.prototype.getOverviewRulerLayoutInfo = function () {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    };\n    EditorScrollbar.prototype.getDomNode = function () {\n        return this.scrollbarDomNode;\n    };\n    EditorScrollbar.prototype.delegateVerticalScrollbarMouseDown = function (browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n    };\n    // --- begin event handlers\n    EditorScrollbar.prototype.onConfigurationChanged = function (e) {\n        if (e.viewInfo) {\n            var editor = this._context.configuration.editor;\n            var newOpts = {\n                handleMouseWheel: editor.viewInfo.scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: editor.viewInfo.scrollbar.mouseWheelScrollSensitivity,\n                fastScrollSensitivity: editor.viewInfo.scrollbar.fastScrollSensitivity\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.layoutInfo) {\n            this._setLayout();\n        }\n        return true;\n    };\n    EditorScrollbar.prototype.onScrollChanged = function (e) {\n        return true;\n    };\n    EditorScrollbar.prototype.onThemeChanged = function (e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + themeService_1.getThemeTypeSelector(this._context.theme.type));\n        return true;\n    };\n    // --- end event handlers\n    EditorScrollbar.prototype.prepareRender = function (ctx) {\n        // Nothing to do\n    };\n    EditorScrollbar.prototype.render = function (ctx) {\n        this.scrollbar.renderNow();\n    };\n    return EditorScrollbar;\n}(viewPart_1.ViewPart));\nexports.EditorScrollbar = EditorScrollbar;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IOverviewRulerLayoutInfo, SmoothScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { ScrollableElementChangeOptions, ScrollableElementCreationOptions } from 'vs/base/browser/ui/scrollbar/scrollableElementOptions';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { INewScrollPosition } from 'vs/editor/common/editorCommon';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { getThemeTypeSelector } from 'vs/platform/theme/common/themeService';\n\nexport class EditorScrollbar extends ViewPart {\n\n\tprivate readonly scrollbar: SmoothScrollableElement;\n\tprivate readonly scrollbarDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tlinesContent: FastDomNode<HTMLElement>,\n\t\tviewDomNode: FastDomNode<HTMLElement>,\n\t\toverflowGuardDomNode: FastDomNode<HTMLElement>\n\t) {\n\t\tsuper(context);\n\n\t\tconst editor = this._context.configuration.editor;\n\t\tconst configScrollbarOpts = editor.viewInfo.scrollbar;\n\n\t\tconst scrollbarOptions: ScrollableElementCreationOptions = {\n\t\t\tlistenOnDomNode: viewDomNode.domNode,\n\t\t\tclassName: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n\t\t\tuseShadows: false,\n\t\t\tlazyRender: true,\n\n\t\t\tvertical: configScrollbarOpts.vertical,\n\t\t\thorizontal: configScrollbarOpts.horizontal,\n\t\t\tverticalHasArrows: configScrollbarOpts.verticalHasArrows,\n\t\t\thorizontalHasArrows: configScrollbarOpts.horizontalHasArrows,\n\t\t\tverticalScrollbarSize: configScrollbarOpts.verticalScrollbarSize,\n\t\t\tverticalSliderSize: configScrollbarOpts.verticalSliderSize,\n\t\t\thorizontalScrollbarSize: configScrollbarOpts.horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: configScrollbarOpts.horizontalSliderSize,\n\t\t\thandleMouseWheel: configScrollbarOpts.handleMouseWheel,\n\t\t\tarrowSize: configScrollbarOpts.arrowSize,\n\t\t\tmouseWheelScrollSensitivity: configScrollbarOpts.mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: configScrollbarOpts.fastScrollSensitivity,\n\t\t};\n\n\t\tthis.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.scrollable));\n\t\tPartFingerprints.write(this.scrollbar.getDomNode(), PartFingerprint.ScrollableElement);\n\n\t\tthis.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n\t\tthis.scrollbarDomNode.setPosition('absolute');\n\t\tthis._setLayout();\n\n\t\t// When having a zone widget that calls .focus() on one of its dom elements,\n\t\t// the browser will try desperately to reveal that dom node, unexpectedly\n\t\t// changing the .scrollTop of this.linesContent\n\n\t\tconst onBrowserDesperateReveal = (domNode: HTMLElement, lookAtScrollTop: boolean, lookAtScrollLeft: boolean) => {\n\t\t\tconst newScrollPosition: INewScrollPosition = {};\n\n\t\t\tif (lookAtScrollTop) {\n\t\t\t\tconst deltaTop = domNode.scrollTop;\n\t\t\t\tif (deltaTop) {\n\t\t\t\t\tnewScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n\t\t\t\t\tdomNode.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lookAtScrollLeft) {\n\t\t\t\tconst deltaLeft = domNode.scrollLeft;\n\t\t\t\tif (deltaLeft) {\n\t\t\t\t\tnewScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n\t\t\t\t\tdomNode.scrollLeft = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._context.viewLayout.setScrollPositionNow(newScrollPosition);\n\t\t};\n\n\t\t// I've seen this happen both on the view dom node & on the lines content dom node.\n\t\tthis._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n\t\tthis._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst layoutInfo = this._context.configuration.editor.layoutInfo;\n\n\t\tthis.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n\n\t\tconst side = this._context.configuration.editor.viewInfo.minimap.side;\n\t\tif (side === 'right') {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimapWidth);\n\t\t} else {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n\t\t}\n\t\tthis.scrollbarDomNode.setHeight(layoutInfo.contentHeight);\n\t}\n\n\tpublic getOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo {\n\t\treturn this.scrollbar.getOverviewRulerLayoutInfo();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.scrollbarDomNode;\n\t}\n\n\tpublic delegateVerticalScrollbarMouseDown(browserEvent: IMouseEvent): void {\n\t\tthis.scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.viewInfo) {\n\t\t\tconst editor = this._context.configuration.editor;\n\t\t\tconst newOpts: ScrollableElementChangeOptions = {\n\t\t\t\thandleMouseWheel: editor.viewInfo.scrollbar.handleMouseWheel,\n\t\t\t\tmouseWheelScrollSensitivity: editor.viewInfo.scrollbar.mouseWheelScrollSensitivity,\n\t\t\t\tfastScrollSensitivity: editor.viewInfo.scrollbar.fastScrollSensitivity\n\t\t\t};\n\t\t\tthis.scrollbar.updateOptions(newOpts);\n\t\t}\n\t\tif (e.layoutInfo) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to do\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis.scrollbar.renderNow();\n\t}\n}\n"]}]}