{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/fill/dom.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/dom.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dom = require(\"vs/base/browser/dom\");\n// Firefox has no implementation of toElement.\nif (!(\"toElement\" in MouseEvent.prototype)) {\n    Object.defineProperty(MouseEvent.prototype, \"toElement\", {\n        get: function () {\n            // @ts-ignore\n            var event = this;\n            switch (event.type) {\n                case \"mouseup\":\n                case \"focusin\":\n                case \"mousenter\":\n                case \"mouseover\":\n                case \"dragenter\":\n                    return event.target;\n                default:\n                    return event.relatedTarget;\n            }\n        },\n    });\n}\nvar _addDisposableListener = dom.addDisposableListener;\n// tslint:disable-next-line no-any\nvar addDisposableListener = function (node, type, handler, useCapture) {\n    return _addDisposableListener(node, type === \"mousewheel\" ? \"wheel\" : type, handler, useCapture);\n};\nvar target = dom;\ntarget.addDisposableListener = addDisposableListener;\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/fill/dom.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/fill/dom.ts"],"names":[],"mappings":";;AAAA,yCAA2C;AAG3C,8CAA8C;AAC9C,IAAI,CAAC,CAAC,WAAW,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;IAC3C,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE;QACxD,GAAG,EAAE;YACJ,aAAa;YACb,IAAM,KAAK,GAAG,IAAkB,CAAC;YACjC,QAAQ,KAAK,CAAC,IAAI,EAAE;gBACnB,KAAK,SAAS,CAAC;gBACf,KAAK,SAAS,CAAC;gBACf,KAAK,WAAW,CAAC;gBACjB,KAAK,WAAW,CAAC;gBACjB,KAAK,WAAW;oBACf,OAAO,KAAK,CAAC,MAAM,CAAC;gBACrB;oBACC,OAAO,KAAK,CAAC,aAAa,CAAC;aAC5B;QACF,CAAC;KACD,CAAC,CAAC;CACH;AAED,IAAM,sBAAsB,GAAG,GAAG,CAAC,qBAAqB,CAAC;AACzD,kCAAkC;AAClC,IAAM,qBAAqB,GAAG,UAAC,IAAiC,EAAE,IAAY,EAAE,OAA6B,EAAE,UAAoB;IAClI,OAAO,sBAAsB,CAAC,IAAI,EAAE,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AAClG,CAAC,CAAC;AAEF,IAAM,MAAM,GAAG,GAAiB,CAAC;AACjC,MAAM,CAAC,qBAAqB,GAAG,qBAAqB,CAAC","sourcesContent":["import * as dom from \"vs/base/browser/dom\";\nimport { IDisposable } from \"vs/base/common/lifecycle\";\n\n// Firefox has no implementation of toElement.\nif (!(\"toElement\" in MouseEvent.prototype)) {\n\tObject.defineProperty(MouseEvent.prototype, \"toElement\", {\n\t\tget: function (): EventTarget | null {\n\t\t\t// @ts-ignore\n\t\t\tconst event = this as MouseEvent;\n\t\t\tswitch (event.type) {\n\t\t\t\tcase \"mouseup\":\n\t\t\t\tcase \"focusin\":\n\t\t\t\tcase \"mousenter\":\n\t\t\t\tcase \"mouseover\":\n\t\t\t\tcase \"dragenter\":\n\t\t\t\t\treturn event.target;\n\t\t\t\tdefault:\n\t\t\t\t\treturn event.relatedTarget;\n\t\t\t}\n\t\t},\n\t});\n}\n\nconst _addDisposableListener = dom.addDisposableListener;\n// tslint:disable-next-line no-any\nconst addDisposableListener = (node: Element | Window | Document, type: string, handler: (event: any) => void, useCapture?: boolean): IDisposable => {\n\treturn _addDisposableListener(node, type === \"mousewheel\" ? \"wheel\" : type, handler, useCapture);\n};\n\nconst target = dom as typeof dom;\ntarget.addDisposableListener = addDisposableListener;\n"]}]}