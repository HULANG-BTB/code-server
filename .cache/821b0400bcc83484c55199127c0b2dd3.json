{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/part.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/part.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/part\");\nvar component_1 = require(\"vs/workbench/common/component\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar event_1 = require(\"vs/base/common/event\");\n/**\n * Parts are layed out in the workbench and have their own layout that\n * arranges an optional title and mandatory content area to show content.\n */\nvar Part = /** @class */ (function (_super) {\n    tslib_1.__extends(Part, _super);\n    function Part(id, options, themeService, storageService, layoutService) {\n        var _this = _super.call(this, id, themeService, storageService) || this;\n        _this.options = options;\n        //#region ISerializableView\n        _this._onDidChange = _this._register(new event_1.Emitter());\n        layoutService.registerPart(_this);\n        return _this;\n    }\n    Part.prototype.onThemeChange = function (theme) {\n        // only call if our create() method has been called\n        if (this.parent) {\n            _super.prototype.onThemeChange.call(this, theme);\n        }\n    };\n    Part.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n    };\n    /**\n     * Note: Clients should not call this method, the workbench calls this\n     * method. Calling it otherwise may result in unexpected behavior.\n     *\n     * Called to create title and content area of the part.\n     */\n    Part.prototype.create = function (parent, options) {\n        this.parent = parent;\n        this.titleArea = this.createTitleArea(parent, options);\n        this.contentArea = this.createContentArea(parent, options);\n        this.partLayout = new PartLayout(this.options, this.contentArea);\n        this.updateStyles();\n    };\n    /**\n     * Returns the overall part container.\n     */\n    Part.prototype.getContainer = function () {\n        return this.parent;\n    };\n    /**\n     * Subclasses override to provide a title area implementation.\n     */\n    Part.prototype.createTitleArea = function (parent, options) {\n        return null;\n    };\n    /**\n     * Returns the title area container.\n     */\n    Part.prototype.getTitleArea = function () {\n        return this.titleArea;\n    };\n    /**\n     * Subclasses override to provide a content area implementation.\n     */\n    Part.prototype.createContentArea = function (parent, options) {\n        return null;\n    };\n    /**\n     * Returns the content area container.\n     */\n    Part.prototype.getContentArea = function () {\n        return this.contentArea;\n    };\n    /**\n     * Layout title and content area in the given dimension.\n     */\n    Part.prototype.layoutContents = function (width, height) {\n        return this.partLayout.layout(width, height);\n    };\n    Object.defineProperty(Part.prototype, \"onDidChange\", {\n        get: function () { return this._onDidChange.event; },\n        enumerable: true,\n        configurable: true\n    });\n    return Part;\n}(component_1.Component));\nexports.Part = Part;\nvar PartLayout = /** @class */ (function () {\n    function PartLayout(options, contentArea) {\n        this.options = options;\n        this.contentArea = contentArea;\n    }\n    PartLayout.prototype.layout = function (width, height) {\n        // Title Size: Width (Fill), Height (Variable)\n        var titleSize;\n        if (this.options && this.options.hasTitle) {\n            titleSize = new dom_1.Dimension(width, Math.min(height, PartLayout.TITLE_HEIGHT));\n        }\n        else {\n            titleSize = new dom_1.Dimension(0, 0);\n        }\n        // Content Size: Width (Fill), Height (Variable)\n        var contentSize = new dom_1.Dimension(width, height - titleSize.height);\n        if (this.options && typeof this.options.borderWidth === 'function') {\n            contentSize.width -= this.options.borderWidth(); // adjust for border size\n        }\n        // Content\n        if (this.contentArea) {\n            dom_1.size(this.contentArea, contentSize.width, contentSize.height);\n        }\n        return { titleSize: titleSize, contentSize: contentSize };\n    };\n    PartLayout.TITLE_HEIGHT = 35;\n    return PartLayout;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/part.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/part.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/part';\nimport { Component } from 'vs/workbench/common/component';\nimport { IThemeService, ITheme } from 'vs/platform/theme/common/themeService';\nimport { Dimension, size } from 'vs/base/browser/dom';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IDimension } from 'vs/platform/layout/browser/layoutService';\nimport { ISerializableView, Orientation } from 'vs/base/browser/ui/grid/grid';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\n\nexport interface IPartOptions {\n\thasTitle?: boolean;\n\tborderWidth?: () => number;\n}\n\nexport interface ILayoutContentResult {\n\ttitleSize: IDimension;\n\tcontentSize: IDimension;\n}\n\n/**\n * Parts are layed out in the workbench and have their own layout that\n * arranges an optional title and mandatory content area to show content.\n */\nexport abstract class Part extends Component implements ISerializableView {\n\tprivate parent: HTMLElement;\n\tprivate titleArea: HTMLElement | null;\n\tprivate contentArea: HTMLElement | null;\n\tprivate partLayout: PartLayout;\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate options: IPartOptions,\n\t\tthemeService: IThemeService,\n\t\tstorageService: IStorageService,\n\t\tlayoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, themeService, storageService);\n\n\t\tlayoutService.registerPart(this);\n\t}\n\n\tprotected onThemeChange(theme: ITheme): void {\n\n\t\t// only call if our create() method has been called\n\t\tif (this.parent) {\n\t\t\tsuper.onThemeChange(theme);\n\t\t}\n\t}\n\n\tupdateStyles(): void {\n\t\tsuper.updateStyles();\n\t}\n\n\t/**\n\t * Note: Clients should not call this method, the workbench calls this\n\t * method. Calling it otherwise may result in unexpected behavior.\n\t *\n\t * Called to create title and content area of the part.\n\t */\n\tcreate(parent: HTMLElement, options?: object): void {\n\t\tthis.parent = parent;\n\t\tthis.titleArea = this.createTitleArea(parent, options);\n\t\tthis.contentArea = this.createContentArea(parent, options);\n\n\t\tthis.partLayout = new PartLayout(this.options, this.contentArea);\n\n\t\tthis.updateStyles();\n\t}\n\n\t/**\n\t * Returns the overall part container.\n\t */\n\tgetContainer(): HTMLElement {\n\t\treturn this.parent;\n\t}\n\n\t/**\n\t * Subclasses override to provide a title area implementation.\n\t */\n\tprotected createTitleArea(parent: HTMLElement, options?: object): HTMLElement | null {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the title area container.\n\t */\n\tprotected getTitleArea(): HTMLElement | null {\n\t\treturn this.titleArea;\n\t}\n\n\t/**\n\t * Subclasses override to provide a content area implementation.\n\t */\n\tprotected createContentArea(parent: HTMLElement, options?: object): HTMLElement | null {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the content area container.\n\t */\n\tprotected getContentArea(): HTMLElement | null {\n\t\treturn this.contentArea;\n\t}\n\n\t/**\n\t * Layout title and content area in the given dimension.\n\t */\n\tprotected layoutContents(width: number, height: number): ILayoutContentResult {\n\t\treturn this.partLayout.layout(width, height);\n\t}\n\n\t//#region ISerializableView\n\n\tprivate _onDidChange = this._register(new Emitter<{ width: number; height: number; }>());\n\tget onDidChange(): Event<{ width: number, height: number }> { return this._onDidChange.event; }\n\n\telement: HTMLElement;\n\n\tabstract minimumWidth: number;\n\tabstract maximumWidth: number;\n\tabstract minimumHeight: number;\n\tabstract maximumHeight: number;\n\n\tabstract layout(width: number, height: number, orientation: Orientation): void;\n\tabstract toJSON(): object;\n\n\t//#endregion\n}\n\nclass PartLayout {\n\n\tprivate static readonly TITLE_HEIGHT = 35;\n\n\tconstructor(private options: IPartOptions, private contentArea: HTMLElement | null) { }\n\n\tlayout(width: number, height: number): ILayoutContentResult {\n\n\t\t// Title Size: Width (Fill), Height (Variable)\n\t\tlet titleSize: Dimension;\n\t\tif (this.options && this.options.hasTitle) {\n\t\t\ttitleSize = new Dimension(width, Math.min(height, PartLayout.TITLE_HEIGHT));\n\t\t} else {\n\t\t\ttitleSize = new Dimension(0, 0);\n\t\t}\n\n\t\t// Content Size: Width (Fill), Height (Variable)\n\t\tconst contentSize = new Dimension(width, height - titleSize.height);\n\n\t\tif (this.options && typeof this.options.borderWidth === 'function') {\n\t\t\tcontentSize.width -= this.options.borderWidth(); // adjust for border size\n\t\t}\n\n\t\t// Content\n\t\tif (this.contentArea) {\n\t\t\tsize(this.contentArea, contentSize.width, contentSize.height);\n\t\t}\n\n\t\treturn { titleSize, contentSize };\n\t}\n}"]}]}