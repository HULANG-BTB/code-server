{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBarActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBarActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar activity_1 = require(\"vs/workbench/services/activity/common/activity\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar dnd_1 = require(\"vs/base/browser/dnd\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar event_1 = require(\"vs/base/common/event\");\nvar dnd_2 = require(\"vs/workbench/browser/dnd\");\nvar ActivityAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ActivityAction, _super);\n    function ActivityAction(_activity) {\n        var _this = _super.call(this, _activity.id, _activity.name, _activity.cssClass) || this;\n        _this._activity = _activity;\n        _this._onDidChangeActivity = new event_1.Emitter();\n        _this._onDidChangeBadge = new event_1.Emitter();\n        return _this;\n    }\n    Object.defineProperty(ActivityAction.prototype, \"onDidChangeActivity\", {\n        get: function () { return this._onDidChangeActivity.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivityAction.prototype, \"onDidChangeBadge\", {\n        get: function () { return this._onDidChangeBadge.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivityAction.prototype, \"activity\", {\n        get: function () {\n            return this._activity;\n        },\n        set: function (activity) {\n            this._activity = activity;\n            this._onDidChangeActivity.fire(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivityAction.prototype.activate = function () {\n        if (!this.checked) {\n            this._setChecked(true);\n        }\n    };\n    ActivityAction.prototype.deactivate = function () {\n        if (this.checked) {\n            this._setChecked(false);\n        }\n    };\n    ActivityAction.prototype.getBadge = function () {\n        return this.badge;\n    };\n    ActivityAction.prototype.getClass = function () {\n        return this.clazz;\n    };\n    ActivityAction.prototype.setBadge = function (badge, clazz) {\n        this.badge = badge;\n        this.clazz = clazz;\n        this._onDidChangeBadge.fire(this);\n    };\n    ActivityAction.prototype.dispose = function () {\n        this._onDidChangeActivity.dispose();\n        this._onDidChangeBadge.dispose();\n        _super.prototype.dispose.call(this);\n    };\n    return ActivityAction;\n}(actions_1.Action));\nexports.ActivityAction = ActivityAction;\nvar ActivityActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(ActivityActionItem, _super);\n    function ActivityActionItem(action, options, themeService) {\n        var _this = _super.call(this, null, action, options) || this;\n        _this.themeService = themeService;\n        _this.badgeDisposable = lifecycle_1.Disposable.None;\n        _this._register(_this.themeService.onThemeChange(_this.onThemeChange, _this));\n        _this._register(action.onDidChangeActivity(_this.updateActivity, _this));\n        _this._register(action.onDidChangeBadge(_this.updateBadge, _this));\n        return _this;\n    }\n    Object.defineProperty(ActivityActionItem.prototype, \"activity\", {\n        get: function () {\n            return this._action.activity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivityActionItem.prototype.updateStyles = function () {\n        var theme = this.themeService.getTheme();\n        var colors = this.options.colors(theme);\n        if (this.label) {\n            if (this.options.icon) {\n                var foreground = this._action.checked ? colors.activeBackgroundColor || colors.activeForegroundColor : colors.inactiveBackgroundColor || colors.inactiveForegroundColor;\n                this.label.style.backgroundColor = foreground ? foreground.toString() : null;\n            }\n            else {\n                var foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n                var borderBottomColor = this._action.checked ? colors.activeBorderBottomColor : null;\n                this.label.style.color = foreground ? foreground.toString() : null;\n                this.label.style.borderBottomColor = borderBottomColor ? borderBottomColor.toString() : null;\n            }\n        }\n        // Badge\n        if (this.badgeContent) {\n            var badgeForeground = colors.badgeForeground;\n            var badgeBackground = colors.badgeBackground;\n            var contrastBorderColor = theme.getColor(colorRegistry_1.contrastBorder);\n            this.badgeContent.style.color = badgeForeground ? badgeForeground.toString() : null;\n            this.badgeContent.style.backgroundColor = badgeBackground ? badgeBackground.toString() : null;\n            this.badgeContent.style.borderStyle = contrastBorderColor ? 'solid' : null;\n            this.badgeContent.style.borderWidth = contrastBorderColor ? '1px' : null;\n            this.badgeContent.style.borderColor = contrastBorderColor ? contrastBorderColor.toString() : null;\n        }\n    };\n    ActivityActionItem.prototype.render = function (container) {\n        var _this = this;\n        _super.prototype.render.call(this, container);\n        this.container = container;\n        // Make the container tab-able for keyboard navigation\n        this.container.tabIndex = 0;\n        this.container.setAttribute('role', this.options.icon ? 'button' : 'tab');\n        // Try hard to prevent keyboard only focus feedback when using mouse\n        this._register(dom.addDisposableListener(this.container, dom.EventType.MOUSE_DOWN, function () {\n            dom.addClass(_this.container, 'clicked');\n        }));\n        this._register(dom.addDisposableListener(this.container, dom.EventType.MOUSE_UP, function () {\n            if (_this.mouseUpTimeout) {\n                clearTimeout(_this.mouseUpTimeout);\n            }\n            _this.mouseUpTimeout = setTimeout(function () {\n                dom.removeClass(_this.container, 'clicked');\n            }, 800); // delayed to prevent focus feedback from showing on mouse up\n        }));\n        // Label\n        this.label = dom.append(this.element, dom.$('a'));\n        // Badge\n        this.badge = dom.append(this.element, dom.$('.badge'));\n        this.badgeContent = dom.append(this.badge, dom.$('.badge-content'));\n        dom.hide(this.badge);\n        this.updateActivity();\n        this.updateStyles();\n    };\n    ActivityActionItem.prototype.onThemeChange = function (theme) {\n        this.updateStyles();\n    };\n    ActivityActionItem.prototype.updateActivity = function () {\n        this.updateLabel();\n        this.updateTitle(this.activity.name);\n        this.updateBadge();\n    };\n    ActivityActionItem.prototype.updateBadge = function () {\n        var _this = this;\n        var action = this.getAction();\n        if (!this.badge || !this.badgeContent || !(action instanceof ActivityAction)) {\n            return;\n        }\n        var badge = action.getBadge();\n        var clazz = action.getClass();\n        this.badgeDisposable.dispose();\n        this.badgeDisposable = lifecycle_1.Disposable.None;\n        dom.clearNode(this.badgeContent);\n        dom.hide(this.badge);\n        if (badge) {\n            // Number\n            if (badge instanceof activity_1.NumberBadge) {\n                if (badge.number) {\n                    var number = badge.number.toString();\n                    if (badge.number > 999) {\n                        var noOfThousands = badge.number / 1000;\n                        var floor = Math.floor(noOfThousands);\n                        if (noOfThousands > floor) {\n                            number = floor + \"K+\";\n                        }\n                        else {\n                            number = noOfThousands + \"K\";\n                        }\n                    }\n                    this.badgeContent.textContent = number;\n                    dom.show(this.badge);\n                }\n            }\n            // Text\n            else if (badge instanceof activity_1.TextBadge) {\n                this.badgeContent.textContent = badge.text;\n                dom.show(this.badge);\n            }\n            // Text\n            else if (badge instanceof activity_1.IconBadge) {\n                dom.show(this.badge);\n            }\n            // Progress\n            else if (badge instanceof activity_1.ProgressBadge) {\n                dom.show(this.badge);\n            }\n            if (clazz) {\n                dom.addClasses(this.badge, clazz);\n                this.badgeDisposable = lifecycle_1.toDisposable(function () { return dom.removeClasses(_this.badge, clazz); });\n            }\n        }\n        // Title\n        var title;\n        if (badge && badge.getDescription()) {\n            if (this.activity.name) {\n                title = nls.localize('badgeTitle', \"{0} - {1}\", this.activity.name, badge.getDescription());\n            }\n            else {\n                title = badge.getDescription();\n            }\n        }\n        else {\n            title = this.activity.name;\n        }\n        this.updateTitle(title);\n    };\n    ActivityActionItem.prototype.updateLabel = function () {\n        this.label.className = 'action-label';\n        if (this.activity.cssClass) {\n            dom.addClass(this.label, this.activity.cssClass);\n        }\n        if (!this.options.icon) {\n            this.label.textContent = this.getAction().label;\n        }\n    };\n    ActivityActionItem.prototype.updateTitle = function (title) {\n        [this.label, this.badge, this.container].forEach(function (element) {\n            if (element) {\n                element.setAttribute('aria-label', title);\n                element.title = title;\n            }\n        });\n    };\n    ActivityActionItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.mouseUpTimeout) {\n            clearTimeout(this.mouseUpTimeout);\n        }\n        this.badge.remove();\n    };\n    ActivityActionItem = tslib_1.__decorate([\n        tslib_1.__param(2, themeService_1.IThemeService)\n    ], ActivityActionItem);\n    return ActivityActionItem;\n}(actionbar_1.BaseActionItem));\nexports.ActivityActionItem = ActivityActionItem;\nvar CompositeOverflowActivityAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CompositeOverflowActivityAction, _super);\n    function CompositeOverflowActivityAction(showMenu) {\n        var _this = _super.call(this, {\n            id: 'additionalComposites.action',\n            name: nls.localize('additionalViews', \"Additional Views\"),\n            cssClass: 'toggle-more'\n        }) || this;\n        _this.showMenu = showMenu;\n        return _this;\n    }\n    CompositeOverflowActivityAction.prototype.run = function (event) {\n        this.showMenu();\n        return Promise.resolve(true);\n    };\n    return CompositeOverflowActivityAction;\n}(ActivityAction));\nexports.CompositeOverflowActivityAction = CompositeOverflowActivityAction;\nvar CompositeOverflowActivityActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(CompositeOverflowActivityActionItem, _super);\n    function CompositeOverflowActivityActionItem(action, getOverflowingComposites, getActiveCompositeId, getBadge, getCompositeOpenAction, colors, contextMenuService, themeService) {\n        var _this = _super.call(this, action, { icon: true, colors: colors }, themeService) || this;\n        _this.getOverflowingComposites = getOverflowingComposites;\n        _this.getActiveCompositeId = getActiveCompositeId;\n        _this.getBadge = getBadge;\n        _this.getCompositeOpenAction = getCompositeOpenAction;\n        _this.contextMenuService = contextMenuService;\n        return _this;\n    }\n    CompositeOverflowActivityActionItem.prototype.showMenu = function () {\n        var _this = this;\n        if (this.actions) {\n            lifecycle_1.dispose(this.actions);\n        }\n        this.actions = this.getActions();\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return _this.element; },\n            getActions: function () { return _this.actions; },\n            onHide: function () { return lifecycle_1.dispose(_this.actions); }\n        });\n    };\n    CompositeOverflowActivityActionItem.prototype.getActions = function () {\n        var _this = this;\n        return this.getOverflowingComposites().map(function (composite) {\n            var action = _this.getCompositeOpenAction(composite.id);\n            action.radio = _this.getActiveCompositeId() === action.id;\n            var badge = _this.getBadge(composite.id);\n            var suffix;\n            if (badge instanceof activity_1.NumberBadge) {\n                suffix = badge.number;\n            }\n            else if (badge instanceof activity_1.TextBadge) {\n                suffix = badge.text;\n            }\n            if (suffix) {\n                action.label = nls.localize('numberBadge', \"{0} ({1})\", composite.name, suffix);\n            }\n            else {\n                action.label = composite.name;\n            }\n            return action;\n        });\n    };\n    CompositeOverflowActivityActionItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.actions = lifecycle_1.dispose(this.actions);\n    };\n    CompositeOverflowActivityActionItem = tslib_1.__decorate([\n        tslib_1.__param(6, contextView_1.IContextMenuService),\n        tslib_1.__param(7, themeService_1.IThemeService)\n    ], CompositeOverflowActivityActionItem);\n    return CompositeOverflowActivityActionItem;\n}(ActivityActionItem));\nexports.CompositeOverflowActivityActionItem = CompositeOverflowActivityActionItem;\nvar ManageExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ManageExtensionAction, _super);\n    function ManageExtensionAction(commandService) {\n        var _this = _super.call(this, 'activitybar.manage.extension', nls.localize('manageExtension', \"Manage Extension\")) || this;\n        _this.commandService = commandService;\n        return _this;\n    }\n    ManageExtensionAction.prototype.run = function (id) {\n        return this.commandService.executeCommand('_extensions.manage', id);\n    };\n    ManageExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(0, commands_1.ICommandService)\n    ], ManageExtensionAction);\n    return ManageExtensionAction;\n}(actions_1.Action));\nvar DraggedCompositeIdentifier = /** @class */ (function () {\n    function DraggedCompositeIdentifier(_compositeId) {\n        this._compositeId = _compositeId;\n    }\n    Object.defineProperty(DraggedCompositeIdentifier.prototype, \"id\", {\n        get: function () {\n            return this._compositeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DraggedCompositeIdentifier;\n}());\nexports.DraggedCompositeIdentifier = DraggedCompositeIdentifier;\nvar CompositeActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(CompositeActionItem, _super);\n    function CompositeActionItem(compositeActivityAction, toggleCompositePinnedAction, contextMenuActionsProvider, colors, icon, compositeBar, contextMenuService, keybindingService, instantiationService, themeService) {\n        var _this = _super.call(this, compositeActivityAction, { draggable: true, colors: colors, icon: icon }, themeService) || this;\n        _this.compositeActivityAction = compositeActivityAction;\n        _this.toggleCompositePinnedAction = toggleCompositePinnedAction;\n        _this.contextMenuActionsProvider = contextMenuActionsProvider;\n        _this.compositeBar = compositeBar;\n        _this.contextMenuService = contextMenuService;\n        _this.keybindingService = keybindingService;\n        _this.compositeTransfer = dnd_2.LocalSelectionTransfer.getInstance();\n        if (!CompositeActionItem.manageExtensionAction) {\n            CompositeActionItem.manageExtensionAction = instantiationService.createInstance(ManageExtensionAction);\n        }\n        _this._register(compositeActivityAction.onDidChangeActivity(function () { _this.compositeActivity = null; _this.updateActivity(); }, _this));\n        return _this;\n    }\n    Object.defineProperty(CompositeActionItem.prototype, \"activity\", {\n        get: function () {\n            if (!this.compositeActivity) {\n                var activityName = void 0;\n                var keybinding = typeof this.compositeActivityAction.activity.keybindingId === 'string' ? this.getKeybindingLabel(this.compositeActivityAction.activity.keybindingId) : null;\n                if (keybinding) {\n                    activityName = nls.localize('titleKeybinding', \"{0} ({1})\", this.compositeActivityAction.activity.name, keybinding);\n                }\n                else {\n                    activityName = this.compositeActivityAction.activity.name;\n                }\n                this.compositeActivity = {\n                    id: this.compositeActivityAction.activity.id,\n                    cssClass: this.compositeActivityAction.activity.cssClass,\n                    name: activityName\n                };\n            }\n            return this.compositeActivity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompositeActionItem.prototype.getKeybindingLabel = function (id) {\n        var kb = this.keybindingService.lookupKeybinding(id);\n        if (kb) {\n            return kb.getLabel();\n        }\n        return null;\n    };\n    CompositeActionItem.prototype.render = function (container) {\n        var _this = this;\n        _super.prototype.render.call(this, container);\n        this.updateChecked();\n        this.updateEnabled();\n        this._register(dom.addDisposableListener(this.container, dom.EventType.CONTEXT_MENU, function (e) {\n            dom.EventHelper.stop(e, true);\n            _this.showContextMenu(container);\n        }));\n        // Allow to drag\n        this._register(dom.addDisposableListener(this.container, dom.EventType.DRAG_START, function (e) {\n            e.dataTransfer.effectAllowed = 'move';\n            // Registe as dragged to local transfer\n            _this.compositeTransfer.setData([new DraggedCompositeIdentifier(_this.activity.id)], DraggedCompositeIdentifier.prototype);\n            // Trigger the action even on drag start to prevent clicks from failing that started a drag\n            if (!_this.getAction().checked) {\n                _this.getAction().run();\n            }\n        }));\n        this._register(new dnd_2.DragAndDropObserver(this.container, {\n            onDragEnter: function (e) {\n                if (_this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype) && _this.compositeTransfer.getData(DraggedCompositeIdentifier.prototype)[0].id !== _this.activity.id) {\n                    _this.updateFromDragging(container, true);\n                }\n            },\n            onDragLeave: function (e) {\n                if (_this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n                    _this.updateFromDragging(container, false);\n                }\n            },\n            onDragEnd: function (e) {\n                if (_this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n                    _this.updateFromDragging(container, false);\n                    _this.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n                }\n            },\n            onDrop: function (e) {\n                dom.EventHelper.stop(e, true);\n                if (_this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n                    var draggedCompositeId = _this.compositeTransfer.getData(DraggedCompositeIdentifier.prototype)[0].id;\n                    if (draggedCompositeId !== _this.activity.id) {\n                        _this.updateFromDragging(container, false);\n                        _this.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n                        _this.compositeBar.move(draggedCompositeId, _this.activity.id);\n                    }\n                }\n            }\n        }));\n        // Activate on drag over to reveal targets\n        [this.badge, this.label].forEach(function (b) { return new dnd_1.DelayedDragHandler(b, function () {\n            if (!_this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype) && !_this.getAction().checked) {\n                _this.getAction().run();\n            }\n        }); });\n        this.updateStyles();\n    };\n    CompositeActionItem.prototype.updateFromDragging = function (element, isDragging) {\n        var theme = this.themeService.getTheme();\n        var dragBackground = this.options.colors(theme).dragAndDropBackground;\n        element.style.backgroundColor = isDragging && dragBackground ? dragBackground.toString() : null;\n    };\n    CompositeActionItem.prototype.showContextMenu = function (container) {\n        var _this = this;\n        var actions = [this.toggleCompositePinnedAction];\n        if (this.compositeActivityAction.activity.extensionId) {\n            actions.push(new actionbar_1.Separator());\n            actions.push(CompositeActionItem.manageExtensionAction);\n        }\n        var isPinned = this.compositeBar.isPinned(this.activity.id);\n        if (isPinned) {\n            this.toggleCompositePinnedAction.label = nls.localize('hide', \"Hide\");\n            this.toggleCompositePinnedAction.checked = false;\n        }\n        else {\n            this.toggleCompositePinnedAction.label = nls.localize('keep', \"Keep\");\n        }\n        var otherActions = this.contextMenuActionsProvider();\n        if (otherActions.length) {\n            actions.push(new actionbar_1.Separator());\n            actions.push.apply(actions, otherActions);\n        }\n        var elementPosition = dom.getDomNodePagePosition(container);\n        var anchor = {\n            x: Math.floor(elementPosition.left + (elementPosition.width / 2)),\n            y: elementPosition.top + elementPosition.height\n        };\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActionsContext: function () { return _this.activity.id; },\n            getActions: function () { return actions; }\n        });\n    };\n    CompositeActionItem.prototype.focus = function () {\n        this.container.focus();\n    };\n    CompositeActionItem.prototype.updateChecked = function () {\n        if (this.getAction().checked) {\n            dom.addClass(this.container, 'checked');\n            this.container.setAttribute('aria-label', nls.localize('compositeActive', \"{0} active\", this.container.title));\n        }\n        else {\n            dom.removeClass(this.container, 'checked');\n            this.container.setAttribute('aria-label', this.container.title);\n        }\n        this.updateStyles();\n    };\n    CompositeActionItem.prototype.updateEnabled = function () {\n        if (!this.element) {\n            return;\n        }\n        if (this.getAction().enabled) {\n            dom.removeClass(this.element, 'disabled');\n        }\n        else {\n            dom.addClass(this.element, 'disabled');\n        }\n    };\n    CompositeActionItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n        this.label.remove();\n    };\n    CompositeActionItem = tslib_1.__decorate([\n        tslib_1.__param(6, contextView_1.IContextMenuService),\n        tslib_1.__param(7, keybinding_1.IKeybindingService),\n        tslib_1.__param(8, instantiation_1.IInstantiationService),\n        tslib_1.__param(9, themeService_1.IThemeService)\n    ], CompositeActionItem);\n    return CompositeActionItem;\n}(ActivityActionItem));\nexports.CompositeActionItem = CompositeActionItem;\nvar ToggleCompositePinnedAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleCompositePinnedAction, _super);\n    function ToggleCompositePinnedAction(activity, compositeBar) {\n        var _this = _super.call(this, 'show.toggleCompositePinned', activity ? activity.name : nls.localize('toggle', \"Toggle View Pinned\")) || this;\n        _this.activity = activity;\n        _this.compositeBar = compositeBar;\n        _this.checked = !!_this.activity && _this.compositeBar.isPinned(_this.activity.id);\n        return _this;\n    }\n    ToggleCompositePinnedAction.prototype.run = function (context) {\n        var id = this.activity ? this.activity.id : context;\n        if (this.compositeBar.isPinned(id)) {\n            this.compositeBar.unpin(id);\n        }\n        else {\n            this.compositeBar.pin(id);\n        }\n        return Promise.resolve(true);\n    };\n    return ToggleCompositePinnedAction;\n}(actions_1.Action));\nexports.ToggleCompositePinnedAction = ToggleCompositePinnedAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBarActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBarActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport * as dom from 'vs/base/browser/dom';\nimport { BaseActionItem, IBaseActionItemOptions, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { dispose, IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IThemeService, ITheme } from 'vs/platform/theme/common/themeService';\nimport { TextBadge, NumberBadge, IBadge, IconBadge, ProgressBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { DelayedDragHandler } from 'vs/base/browser/dnd';\nimport { IActivity } from 'vs/workbench/common/activity';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { DragAndDropObserver, LocalSelectionTransfer } from 'vs/workbench/browser/dnd';\nimport { Color } from 'vs/base/common/color';\n\nexport interface ICompositeActivity {\n\tbadge: IBadge;\n\tclazz?: string;\n\tpriority: number;\n}\n\nexport interface ICompositeBar {\n\t/**\n\t * Unpins a composite from the composite bar.\n\t */\n\tunpin(compositeId: string): void;\n\n\t/**\n\t * Pin a composite inside the composite bar.\n\t */\n\tpin(compositeId: string): void;\n\n\t/**\n\t * Find out if a composite is pinned in the composite bar.\n\t */\n\tisPinned(compositeId: string): boolean;\n\n\t/**\n\t * Reorder composite ordering by moving a composite to the location of another composite.\n\t */\n\tmove(compositeId: string, tocompositeId: string): void;\n}\n\nexport class ActivityAction extends Action {\n\n\tprivate _onDidChangeActivity = new Emitter<this>();\n\tget onDidChangeActivity(): Event<this> { return this._onDidChangeActivity.event; }\n\n\tprivate _onDidChangeBadge = new Emitter<this>();\n\tget onDidChangeBadge(): Event<this> { return this._onDidChangeBadge.event; }\n\n\tprivate badge?: IBadge;\n\tprivate clazz: string | undefined;\n\n\tconstructor(private _activity: IActivity) {\n\t\tsuper(_activity.id, _activity.name, _activity.cssClass);\n\t}\n\n\tget activity(): IActivity {\n\t\treturn this._activity;\n\t}\n\n\tset activity(activity: IActivity) {\n\t\tthis._activity = activity;\n\t\tthis._onDidChangeActivity.fire(this);\n\t}\n\n\tactivate(): void {\n\t\tif (!this.checked) {\n\t\t\tthis._setChecked(true);\n\t\t}\n\t}\n\n\tdeactivate(): void {\n\t\tif (this.checked) {\n\t\t\tthis._setChecked(false);\n\t\t}\n\t}\n\n\tgetBadge(): IBadge | undefined {\n\t\treturn this.badge;\n\t}\n\n\tgetClass(): string | undefined {\n\t\treturn this.clazz;\n\t}\n\n\tsetBadge(badge: IBadge | undefined, clazz?: string): void {\n\t\tthis.badge = badge;\n\t\tthis.clazz = clazz;\n\t\tthis._onDidChangeBadge.fire(this);\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChangeActivity.dispose();\n\t\tthis._onDidChangeBadge.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface ICompositeBarColors {\n\tactiveBackgroundColor?: Color;\n\tinactiveBackgroundColor?: Color;\n\tactiveBorderBottomColor?: Color;\n\tactiveForegroundColor?: Color;\n\tinactiveForegroundColor?: Color;\n\tbadgeBackground?: Color;\n\tbadgeForeground?: Color;\n\tdragAndDropBackground?: Color;\n}\n\nexport interface IActivityActionItemOptions extends IBaseActionItemOptions {\n\ticon?: boolean;\n\tcolors: (theme: ITheme) => ICompositeBarColors;\n}\n\nexport class ActivityActionItem extends BaseActionItem {\n\tprotected container: HTMLElement;\n\tprotected label: HTMLElement;\n\tprotected badge: HTMLElement;\n\tprotected options: IActivityActionItemOptions;\n\n\tprivate badgeContent: HTMLElement;\n\tprivate badgeDisposable: IDisposable = Disposable.None;\n\tprivate mouseUpTimeout: any;\n\n\tconstructor(\n\t\taction: ActivityAction,\n\t\toptions: IActivityActionItemOptions,\n\t\t@IThemeService protected themeService: IThemeService\n\t) {\n\t\tsuper(null, action, options);\n\n\t\tthis._register(this.themeService.onThemeChange(this.onThemeChange, this));\n\t\tthis._register(action.onDidChangeActivity(this.updateActivity, this));\n\t\tthis._register(action.onDidChangeBadge(this.updateBadge, this));\n\t}\n\n\tprotected get activity(): IActivity {\n\t\treturn (this._action as ActivityAction).activity;\n\t}\n\n\tprotected updateStyles(): void {\n\t\tconst theme = this.themeService.getTheme();\n\t\tconst colors = this.options.colors(theme);\n\n\t\tif (this.label) {\n\t\t\tif (this.options.icon) {\n\t\t\t\tconst foreground = this._action.checked ? colors.activeBackgroundColor || colors.activeForegroundColor : colors.inactiveBackgroundColor || colors.inactiveForegroundColor;\n\t\t\t\tthis.label.style.backgroundColor = foreground ? foreground.toString() : null;\n\t\t\t} else {\n\t\t\t\tconst foreground = this._action.checked ? colors.activeForegroundColor : colors.inactiveForegroundColor;\n\t\t\t\tconst borderBottomColor = this._action.checked ? colors.activeBorderBottomColor : null;\n\t\t\t\tthis.label.style.color = foreground ? foreground.toString() : null;\n\t\t\t\tthis.label.style.borderBottomColor = borderBottomColor ? borderBottomColor.toString() : null;\n\t\t\t}\n\t\t}\n\n\t\t// Badge\n\t\tif (this.badgeContent) {\n\t\t\tconst badgeForeground = colors.badgeForeground;\n\t\t\tconst badgeBackground = colors.badgeBackground;\n\t\t\tconst contrastBorderColor = theme.getColor(contrastBorder);\n\n\t\t\tthis.badgeContent.style.color = badgeForeground ? badgeForeground.toString() : null;\n\t\t\tthis.badgeContent.style.backgroundColor = badgeBackground ? badgeBackground.toString() : null;\n\n\t\t\tthis.badgeContent.style.borderStyle = contrastBorderColor ? 'solid' : null;\n\t\t\tthis.badgeContent.style.borderWidth = contrastBorderColor ? '1px' : null;\n\t\t\tthis.badgeContent.style.borderColor = contrastBorderColor ? contrastBorderColor.toString() : null;\n\t\t}\n\t}\n\n\trender(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.container = container;\n\n\t\t// Make the container tab-able for keyboard navigation\n\t\tthis.container.tabIndex = 0;\n\t\tthis.container.setAttribute('role', this.options.icon ? 'button' : 'tab');\n\n\t\t// Try hard to prevent keyboard only focus feedback when using mouse\n\t\tthis._register(dom.addDisposableListener(this.container, dom.EventType.MOUSE_DOWN, () => {\n\t\t\tdom.addClass(this.container, 'clicked');\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this.container, dom.EventType.MOUSE_UP, () => {\n\t\t\tif (this.mouseUpTimeout) {\n\t\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t\t}\n\n\t\t\tthis.mouseUpTimeout = setTimeout(() => {\n\t\t\t\tdom.removeClass(this.container, 'clicked');\n\t\t\t}, 800); // delayed to prevent focus feedback from showing on mouse up\n\t\t}));\n\n\t\t// Label\n\t\tthis.label = dom.append(this.element!, dom.$('a'));\n\n\t\t// Badge\n\t\tthis.badge = dom.append(this.element!, dom.$('.badge'));\n\t\tthis.badgeContent = dom.append(this.badge, dom.$('.badge-content'));\n\n\t\tdom.hide(this.badge);\n\n\t\tthis.updateActivity();\n\t\tthis.updateStyles();\n\t}\n\n\tprivate onThemeChange(theme: ITheme): void {\n\t\tthis.updateStyles();\n\t}\n\n\tprotected updateActivity(): void {\n\t\tthis.updateLabel();\n\t\tthis.updateTitle(this.activity.name);\n\t\tthis.updateBadge();\n\t}\n\n\tprotected updateBadge(): void {\n\t\tconst action = this.getAction();\n\t\tif (!this.badge || !this.badgeContent || !(action instanceof ActivityAction)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst badge = action.getBadge();\n\t\tconst clazz = action.getClass();\n\n\t\tthis.badgeDisposable.dispose();\n\t\tthis.badgeDisposable = Disposable.None;\n\n\t\tdom.clearNode(this.badgeContent);\n\t\tdom.hide(this.badge);\n\n\t\tif (badge) {\n\n\t\t\t// Number\n\t\t\tif (badge instanceof NumberBadge) {\n\t\t\t\tif (badge.number) {\n\t\t\t\t\tlet number = badge.number.toString();\n\t\t\t\t\tif (badge.number > 999) {\n\t\t\t\t\t\tconst noOfThousands = badge.number / 1000;\n\t\t\t\t\t\tconst floor = Math.floor(noOfThousands);\n\t\t\t\t\t\tif (noOfThousands > floor) {\n\t\t\t\t\t\t\tnumber = `${floor}K+`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnumber = `${noOfThousands}K`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.badgeContent.textContent = number;\n\t\t\t\t\tdom.show(this.badge);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Text\n\t\t\telse if (badge instanceof TextBadge) {\n\t\t\t\tthis.badgeContent.textContent = badge.text;\n\t\t\t\tdom.show(this.badge);\n\t\t\t}\n\n\t\t\t// Text\n\t\t\telse if (badge instanceof IconBadge) {\n\t\t\t\tdom.show(this.badge);\n\t\t\t}\n\n\t\t\t// Progress\n\t\t\telse if (badge instanceof ProgressBadge) {\n\t\t\t\tdom.show(this.badge);\n\t\t\t}\n\n\t\t\tif (clazz) {\n\t\t\t\tdom.addClasses(this.badge, clazz);\n\t\t\t\tthis.badgeDisposable = toDisposable(() => dom.removeClasses(this.badge, clazz));\n\t\t\t}\n\t\t}\n\n\t\t// Title\n\t\tlet title: string;\n\t\tif (badge && badge.getDescription()) {\n\t\t\tif (this.activity.name) {\n\t\t\t\ttitle = nls.localize('badgeTitle', \"{0} - {1}\", this.activity.name, badge.getDescription());\n\t\t\t} else {\n\t\t\t\ttitle = badge.getDescription();\n\t\t\t}\n\t\t} else {\n\t\t\ttitle = this.activity.name;\n\t\t}\n\t\tthis.updateTitle(title);\n\t}\n\n\tprotected updateLabel(): void {\n\t\tthis.label.className = 'action-label';\n\t\tif (this.activity.cssClass) {\n\t\t\tdom.addClass(this.label, this.activity.cssClass);\n\t\t}\n\t\tif (!this.options.icon) {\n\t\t\tthis.label.textContent = this.getAction().label;\n\t\t}\n\t}\n\n\tprivate updateTitle(title: string): void {\n\t\t[this.label, this.badge, this.container].forEach(element => {\n\t\t\tif (element) {\n\t\t\t\telement.setAttribute('aria-label', title);\n\t\t\t\telement.title = title;\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.mouseUpTimeout) {\n\t\t\tclearTimeout(this.mouseUpTimeout);\n\t\t}\n\n\t\tthis.badge.remove();\n\t}\n}\n\nexport class CompositeOverflowActivityAction extends ActivityAction {\n\n\tconstructor(\n\t\tprivate showMenu: () => void\n\t) {\n\t\tsuper({\n\t\t\tid: 'additionalComposites.action',\n\t\t\tname: nls.localize('additionalViews', \"Additional Views\"),\n\t\t\tcssClass: 'toggle-more'\n\t\t});\n\t}\n\n\trun(event: any): Promise<any> {\n\t\tthis.showMenu();\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class CompositeOverflowActivityActionItem extends ActivityActionItem {\n\tprivate actions: Action[];\n\n\tconstructor(\n\t\taction: ActivityAction,\n\t\tprivate getOverflowingComposites: () => { id: string, name: string }[],\n\t\tprivate getActiveCompositeId: () => string,\n\t\tprivate getBadge: (compositeId: string) => IBadge,\n\t\tprivate getCompositeOpenAction: (compositeId: string) => Action,\n\t\tcolors: (theme: ITheme) => ICompositeBarColors,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(action, { icon: true, colors }, themeService);\n\t}\n\n\tshowMenu(): void {\n\t\tif (this.actions) {\n\t\t\tdispose(this.actions);\n\t\t}\n\n\t\tthis.actions = this.getActions();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.element!,\n\t\t\tgetActions: () => this.actions,\n\t\t\tonHide: () => dispose(this.actions)\n\t\t});\n\t}\n\n\tprivate getActions(): Action[] {\n\t\treturn this.getOverflowingComposites().map(composite => {\n\t\t\tconst action = this.getCompositeOpenAction(composite.id);\n\t\t\taction.radio = this.getActiveCompositeId() === action.id;\n\n\t\t\tconst badge = this.getBadge(composite.id);\n\t\t\tlet suffix: string | number | undefined;\n\t\t\tif (badge instanceof NumberBadge) {\n\t\t\t\tsuffix = badge.number;\n\t\t\t} else if (badge instanceof TextBadge) {\n\t\t\t\tsuffix = badge.text;\n\t\t\t}\n\n\t\t\tif (suffix) {\n\t\t\t\taction.label = nls.localize('numberBadge', \"{0} ({1})\", composite.name, suffix);\n\t\t\t} else {\n\t\t\t\taction.label = composite.name;\n\t\t\t}\n\n\t\t\treturn action;\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.actions = dispose(this.actions);\n\t}\n}\n\nclass ManageExtensionAction extends Action {\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper('activitybar.manage.extension', nls.localize('manageExtension', \"Manage Extension\"));\n\t}\n\n\trun(id: string): Promise<any> {\n\t\treturn this.commandService.executeCommand('_extensions.manage', id);\n\t}\n}\n\nexport class DraggedCompositeIdentifier {\n\tconstructor(private _compositeId: string) { }\n\n\tget id(): string {\n\t\treturn this._compositeId;\n\t}\n}\n\nexport class CompositeActionItem extends ActivityActionItem {\n\n\tprivate static manageExtensionAction: ManageExtensionAction;\n\n\tprivate compositeActivity: IActivity | null;\n\tprivate compositeTransfer: LocalSelectionTransfer<DraggedCompositeIdentifier>;\n\n\tconstructor(\n\t\tprivate compositeActivityAction: ActivityAction,\n\t\tprivate toggleCompositePinnedAction: Action,\n\t\tprivate contextMenuActionsProvider: () => Action[],\n\t\tcolors: (theme: ITheme) => ICompositeBarColors,\n\t\ticon: boolean,\n\t\tprivate compositeBar: ICompositeBar,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tsuper(compositeActivityAction, { draggable: true, colors, icon }, themeService);\n\n\t\tthis.compositeTransfer = LocalSelectionTransfer.getInstance<DraggedCompositeIdentifier>();\n\n\t\tif (!CompositeActionItem.manageExtensionAction) {\n\t\t\tCompositeActionItem.manageExtensionAction = instantiationService.createInstance(ManageExtensionAction);\n\t\t}\n\n\t\tthis._register(compositeActivityAction.onDidChangeActivity(() => { this.compositeActivity = null; this.updateActivity(); }, this));\n\t}\n\n\tprotected get activity(): IActivity {\n\t\tif (!this.compositeActivity) {\n\t\t\tlet activityName: string;\n\t\t\tconst keybinding = typeof this.compositeActivityAction.activity.keybindingId === 'string' ? this.getKeybindingLabel(this.compositeActivityAction.activity.keybindingId) : null;\n\t\t\tif (keybinding) {\n\t\t\t\tactivityName = nls.localize('titleKeybinding', \"{0} ({1})\", this.compositeActivityAction.activity.name, keybinding);\n\t\t\t} else {\n\t\t\t\tactivityName = this.compositeActivityAction.activity.name;\n\t\t\t}\n\n\t\t\tthis.compositeActivity = {\n\t\t\t\tid: this.compositeActivityAction.activity.id,\n\t\t\t\tcssClass: this.compositeActivityAction.activity.cssClass,\n\t\t\t\tname: activityName\n\t\t\t};\n\t\t}\n\n\t\treturn this.compositeActivity;\n\t}\n\n\tprivate getKeybindingLabel(id: string): string | null {\n\t\tconst kb = this.keybindingService.lookupKeybinding(id);\n\t\tif (kb) {\n\t\t\treturn kb.getLabel();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trender(container: HTMLElement): void {\n\t\tsuper.render(container);\n\n\t\tthis.updateChecked();\n\t\tthis.updateEnabled();\n\n\t\tthis._register(dom.addDisposableListener(this.container, dom.EventType.CONTEXT_MENU, e => {\n\t\t\tdom.EventHelper.stop(e, true);\n\n\t\t\tthis.showContextMenu(container);\n\t\t}));\n\n\t\t// Allow to drag\n\t\tthis._register(dom.addDisposableListener(this.container, dom.EventType.DRAG_START, (e: DragEvent) => {\n\t\t\te.dataTransfer!.effectAllowed = 'move';\n\n\t\t\t// Registe as dragged to local transfer\n\t\t\tthis.compositeTransfer.setData([new DraggedCompositeIdentifier(this.activity.id)], DraggedCompositeIdentifier.prototype);\n\n\t\t\t// Trigger the action even on drag start to prevent clicks from failing that started a drag\n\t\t\tif (!this.getAction().checked) {\n\t\t\t\tthis.getAction().run();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(new DragAndDropObserver(this.container, {\n\t\t\tonDragEnter: e => {\n\t\t\t\tif (this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype) && this.compositeTransfer.getData(DraggedCompositeIdentifier.prototype)![0].id !== this.activity.id) {\n\t\t\t\t\tthis.updateFromDragging(container, true);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDragLeave: e => {\n\t\t\t\tif (this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n\t\t\t\t\tthis.updateFromDragging(container, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDragEnd: e => {\n\t\t\t\tif (this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n\t\t\t\t\tthis.updateFromDragging(container, false);\n\n\t\t\t\t\tthis.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDrop: e => {\n\t\t\t\tdom.EventHelper.stop(e, true);\n\n\t\t\t\tif (this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n\t\t\t\t\tconst draggedCompositeId = this.compositeTransfer.getData(DraggedCompositeIdentifier.prototype)![0].id;\n\t\t\t\t\tif (draggedCompositeId !== this.activity.id) {\n\t\t\t\t\t\tthis.updateFromDragging(container, false);\n\t\t\t\t\t\tthis.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n\n\t\t\t\t\t\tthis.compositeBar.move(draggedCompositeId, this.activity.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Activate on drag over to reveal targets\n\t\t[this.badge, this.label].forEach(b => new DelayedDragHandler(b, () => {\n\t\t\tif (!this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype) && !this.getAction().checked) {\n\t\t\t\tthis.getAction().run();\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateStyles();\n\t}\n\n\tprivate updateFromDragging(element: HTMLElement, isDragging: boolean): void {\n\t\tconst theme = this.themeService.getTheme();\n\t\tconst dragBackground = this.options.colors(theme).dragAndDropBackground;\n\n\t\telement.style.backgroundColor = isDragging && dragBackground ? dragBackground.toString() : null;\n\t}\n\n\tprivate showContextMenu(container: HTMLElement): void {\n\t\tconst actions: Action[] = [this.toggleCompositePinnedAction];\n\t\tif ((<any>this.compositeActivityAction.activity).extensionId) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(CompositeActionItem.manageExtensionAction);\n\t\t}\n\n\t\tconst isPinned = this.compositeBar.isPinned(this.activity.id);\n\t\tif (isPinned) {\n\t\t\tthis.toggleCompositePinnedAction.label = nls.localize('hide', \"Hide\");\n\t\t\tthis.toggleCompositePinnedAction.checked = false;\n\t\t} else {\n\t\t\tthis.toggleCompositePinnedAction.label = nls.localize('keep', \"Keep\");\n\t\t}\n\n\t\tconst otherActions = this.contextMenuActionsProvider();\n\t\tif (otherActions.length) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(...otherActions);\n\t\t}\n\n\t\tconst elementPosition = dom.getDomNodePagePosition(container);\n\t\tconst anchor = {\n\t\t\tx: Math.floor(elementPosition.left + (elementPosition.width / 2)),\n\t\t\ty: elementPosition.top + elementPosition.height\n\t\t};\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActionsContext: () => this.activity.id,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\tfocus(): void {\n\t\tthis.container.focus();\n\t}\n\n\tprotected updateChecked(): void {\n\t\tif (this.getAction().checked) {\n\t\t\tdom.addClass(this.container, 'checked');\n\t\t\tthis.container.setAttribute('aria-label', nls.localize('compositeActive', \"{0} active\", this.container.title));\n\t\t} else {\n\t\t\tdom.removeClass(this.container, 'checked');\n\t\t\tthis.container.setAttribute('aria-label', this.container.title);\n\t\t}\n\t\tthis.updateStyles();\n\t}\n\n\tprotected updateEnabled(): void {\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.getAction().enabled) {\n\t\t\tdom.removeClass(this.element, 'disabled');\n\t\t} else {\n\t\t\tdom.addClass(this.element, 'disabled');\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n\n\t\tthis.label.remove();\n\t}\n}\n\nexport class ToggleCompositePinnedAction extends Action {\n\n\tconstructor(\n\t\tprivate activity: IActivity | undefined,\n\t\tprivate compositeBar: ICompositeBar\n\t) {\n\t\tsuper('show.toggleCompositePinned', activity ? activity.name : nls.localize('toggle', \"Toggle View Pinned\"));\n\n\t\tthis.checked = !!this.activity && this.compositeBar.isPinned(this.activity.id);\n\t}\n\n\trun(context: string): Promise<any> {\n\t\tconst id = this.activity ? this.activity.id : context;\n\n\t\tif (this.compositeBar.isPinned(id)) {\n\t\t\tthis.compositeBar.unpin(id);\n\t\t} else {\n\t\t\tthis.compositeBar.pin(id);\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n"]}]}