{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar quickOpenModel_1 = require(\"vs/base/parts/quickopen/browser/quickOpenModel\");\nvar quickopen_1 = require(\"vs/workbench/browser/quickopen\");\nvar quickOpen_1 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar history_1 = require(\"vs/workbench/services/history/common/history\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar editorCommands_1 = require(\"vs/workbench/browser/parts/editor/editorCommands\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar ExecuteCommandAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExecuteCommandAction, _super);\n    function ExecuteCommandAction(id, label, commandId, commandService, commandArgs) {\n        var _this = _super.call(this, id, label) || this;\n        _this.commandId = commandId;\n        _this.commandService = commandService;\n        _this.commandArgs = commandArgs;\n        return _this;\n    }\n    ExecuteCommandAction.prototype.run = function () {\n        return this.commandService.executeCommand(this.commandId, this.commandArgs);\n    };\n    return ExecuteCommandAction;\n}(actions_1.Action));\nexports.ExecuteCommandAction = ExecuteCommandAction;\nvar BaseSplitEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseSplitEditorAction, _super);\n    function BaseSplitEditorAction(id, label, editorGroupService, configurationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        _this.configurationService = configurationService;\n        _this.toDispose = [];\n        _this.direction = _this.getDirection();\n        _this.registerListeners();\n        return _this;\n    }\n    BaseSplitEditorAction.prototype.getDirection = function () {\n        return editorGroupsService_1.preferredSideBySideGroupDirection(this.configurationService);\n    };\n    BaseSplitEditorAction.prototype.registerListeners = function () {\n        var _this = this;\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('workbench.editor.openSideBySideDirection')) {\n                _this.direction = editorGroupsService_1.preferredSideBySideGroupDirection(_this.configurationService);\n            }\n        }));\n    };\n    BaseSplitEditorAction.prototype.run = function (context) {\n        editorCommands_1.splitEditor(this.editorGroupService, this.direction, context);\n        return Promise.resolve(true);\n    };\n    BaseSplitEditorAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.toDispose = lifecycle_1.dispose(this.toDispose);\n    };\n    return BaseSplitEditorAction;\n}(actions_1.Action));\nexports.BaseSplitEditorAction = BaseSplitEditorAction;\nvar SplitEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorAction, _super);\n    function SplitEditorAction(id, label, editorGroupService, configurationService) {\n        return _super.call(this, id, label, editorGroupService, configurationService) || this;\n    }\n    SplitEditorAction.ID = 'workbench.action.splitEditor';\n    SplitEditorAction.LABEL = nls.localize('splitEditor', \"Split Editor\");\n    SplitEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, configuration_1.IConfigurationService)\n    ], SplitEditorAction);\n    return SplitEditorAction;\n}(BaseSplitEditorAction));\nexports.SplitEditorAction = SplitEditorAction;\nvar SplitEditorOrthogonalAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorOrthogonalAction, _super);\n    function SplitEditorOrthogonalAction(id, label, editorGroupService, configurationService) {\n        return _super.call(this, id, label, editorGroupService, configurationService) || this;\n    }\n    SplitEditorOrthogonalAction.prototype.getDirection = function () {\n        var direction = editorGroupsService_1.preferredSideBySideGroupDirection(this.configurationService);\n        return direction === editorGroupsService_1.GroupDirection.RIGHT ? editorGroupsService_1.GroupDirection.DOWN : editorGroupsService_1.GroupDirection.RIGHT;\n    };\n    SplitEditorOrthogonalAction.ID = 'workbench.action.splitEditorOrthogonal';\n    SplitEditorOrthogonalAction.LABEL = nls.localize('splitEditorOrthogonal', \"Split Editor Orthogonal\");\n    SplitEditorOrthogonalAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, configuration_1.IConfigurationService)\n    ], SplitEditorOrthogonalAction);\n    return SplitEditorOrthogonalAction;\n}(BaseSplitEditorAction));\nexports.SplitEditorOrthogonalAction = SplitEditorOrthogonalAction;\nvar SplitEditorLeftAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorLeftAction, _super);\n    function SplitEditorLeftAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.SPLIT_EDITOR_LEFT, commandService) || this;\n    }\n    SplitEditorLeftAction.ID = editorCommands_1.SPLIT_EDITOR_LEFT;\n    SplitEditorLeftAction.LABEL = nls.localize('splitEditorGroupLeft', \"Split Editor Left\");\n    SplitEditorLeftAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], SplitEditorLeftAction);\n    return SplitEditorLeftAction;\n}(ExecuteCommandAction));\nexports.SplitEditorLeftAction = SplitEditorLeftAction;\nvar SplitEditorRightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorRightAction, _super);\n    function SplitEditorRightAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.SPLIT_EDITOR_RIGHT, commandService) || this;\n    }\n    SplitEditorRightAction.ID = editorCommands_1.SPLIT_EDITOR_RIGHT;\n    SplitEditorRightAction.LABEL = nls.localize('splitEditorGroupRight', \"Split Editor Right\");\n    SplitEditorRightAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], SplitEditorRightAction);\n    return SplitEditorRightAction;\n}(ExecuteCommandAction));\nexports.SplitEditorRightAction = SplitEditorRightAction;\nvar SplitEditorUpAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorUpAction, _super);\n    function SplitEditorUpAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.SPLIT_EDITOR_UP, commandService) || this;\n    }\n    SplitEditorUpAction.ID = editorCommands_1.SPLIT_EDITOR_UP;\n    SplitEditorUpAction.LABEL = nls.localize('splitEditorGroupUp', \"Split Editor Up\");\n    SplitEditorUpAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], SplitEditorUpAction);\n    return SplitEditorUpAction;\n}(ExecuteCommandAction));\nexports.SplitEditorUpAction = SplitEditorUpAction;\nvar SplitEditorDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitEditorDownAction, _super);\n    function SplitEditorDownAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.SPLIT_EDITOR_DOWN, commandService) || this;\n    }\n    SplitEditorDownAction.ID = editorCommands_1.SPLIT_EDITOR_DOWN;\n    SplitEditorDownAction.LABEL = nls.localize('splitEditorGroupDown', \"Split Editor Down\");\n    SplitEditorDownAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], SplitEditorDownAction);\n    return SplitEditorDownAction;\n}(ExecuteCommandAction));\nexports.SplitEditorDownAction = SplitEditorDownAction;\nvar JoinTwoGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(JoinTwoGroupsAction, _super);\n    function JoinTwoGroupsAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    JoinTwoGroupsAction.prototype.run = function (context) {\n        var sourceGroup;\n        if (context && typeof context.groupId === 'number') {\n            sourceGroup = this.editorGroupService.getGroup(context.groupId);\n        }\n        else {\n            sourceGroup = this.editorGroupService.activeGroup;\n        }\n        if (sourceGroup) {\n            var targetGroupDirections = [editorGroupsService_1.GroupDirection.RIGHT, editorGroupsService_1.GroupDirection.DOWN, editorGroupsService_1.GroupDirection.LEFT, editorGroupsService_1.GroupDirection.UP];\n            for (var _i = 0, targetGroupDirections_1 = targetGroupDirections; _i < targetGroupDirections_1.length; _i++) {\n                var targetGroupDirection = targetGroupDirections_1[_i];\n                var targetGroup = this.editorGroupService.findGroup({ direction: targetGroupDirection }, sourceGroup);\n                if (targetGroup && sourceGroup !== targetGroup) {\n                    this.editorGroupService.mergeGroup(sourceGroup, targetGroup);\n                    return Promise.resolve(true);\n                }\n            }\n        }\n        return Promise.resolve(true);\n    };\n    JoinTwoGroupsAction.ID = 'workbench.action.joinTwoGroups';\n    JoinTwoGroupsAction.LABEL = nls.localize('joinTwoGroups', \"Join Editor Group with Next Group\");\n    JoinTwoGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], JoinTwoGroupsAction);\n    return JoinTwoGroupsAction;\n}(actions_1.Action));\nexports.JoinTwoGroupsAction = JoinTwoGroupsAction;\nvar JoinAllGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(JoinAllGroupsAction, _super);\n    function JoinAllGroupsAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    JoinAllGroupsAction.prototype.run = function (context) {\n        editorCommands_1.mergeAllGroups(this.editorGroupService);\n        return Promise.resolve(true);\n    };\n    JoinAllGroupsAction.ID = 'workbench.action.joinAllGroups';\n    JoinAllGroupsAction.LABEL = nls.localize('joinAllGroups', \"Join All Editor Groups\");\n    JoinAllGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], JoinAllGroupsAction);\n    return JoinAllGroupsAction;\n}(actions_1.Action));\nexports.JoinAllGroupsAction = JoinAllGroupsAction;\nvar NavigateBetweenGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateBetweenGroupsAction, _super);\n    function NavigateBetweenGroupsAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    NavigateBetweenGroupsAction.prototype.run = function () {\n        var nextGroup = this.editorGroupService.findGroup({ location: editorGroupsService_1.GroupLocation.NEXT }, this.editorGroupService.activeGroup, true);\n        nextGroup.focus();\n        return Promise.resolve(true);\n    };\n    NavigateBetweenGroupsAction.ID = 'workbench.action.navigateEditorGroups';\n    NavigateBetweenGroupsAction.LABEL = nls.localize('navigateEditorGroups', \"Navigate Between Editor Groups\");\n    NavigateBetweenGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], NavigateBetweenGroupsAction);\n    return NavigateBetweenGroupsAction;\n}(actions_1.Action));\nexports.NavigateBetweenGroupsAction = NavigateBetweenGroupsAction;\nvar FocusActiveGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusActiveGroupAction, _super);\n    function FocusActiveGroupAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    FocusActiveGroupAction.prototype.run = function () {\n        this.editorGroupService.activeGroup.focus();\n        return Promise.resolve(true);\n    };\n    FocusActiveGroupAction.ID = 'workbench.action.focusActiveEditorGroup';\n    FocusActiveGroupAction.LABEL = nls.localize('focusActiveEditorGroup', \"Focus Active Editor Group\");\n    FocusActiveGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusActiveGroupAction);\n    return FocusActiveGroupAction;\n}(actions_1.Action));\nexports.FocusActiveGroupAction = FocusActiveGroupAction;\nvar BaseFocusGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseFocusGroupAction, _super);\n    function BaseFocusGroupAction(id, label, scope, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.scope = scope;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    BaseFocusGroupAction.prototype.run = function () {\n        var group = this.editorGroupService.findGroup(this.scope, this.editorGroupService.activeGroup, true);\n        if (group) {\n            group.focus();\n        }\n        return Promise.resolve(true);\n    };\n    BaseFocusGroupAction = tslib_1.__decorate([\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService)\n    ], BaseFocusGroupAction);\n    return BaseFocusGroupAction;\n}(actions_1.Action));\nexports.BaseFocusGroupAction = BaseFocusGroupAction;\nvar FocusFirstGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusFirstGroupAction, _super);\n    function FocusFirstGroupAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, { location: editorGroupsService_1.GroupLocation.FIRST }, editorGroupService) || this;\n    }\n    FocusFirstGroupAction.ID = 'workbench.action.focusFirstEditorGroup';\n    FocusFirstGroupAction.LABEL = nls.localize('focusFirstEditorGroup', \"Focus First Editor Group\");\n    FocusFirstGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusFirstGroupAction);\n    return FocusFirstGroupAction;\n}(BaseFocusGroupAction));\nexports.FocusFirstGroupAction = FocusFirstGroupAction;\nvar FocusLastGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusLastGroupAction, _super);\n    function FocusLastGroupAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, { location: editorGroupsService_1.GroupLocation.LAST }, editorGroupService) || this;\n    }\n    FocusLastGroupAction.ID = 'workbench.action.focusLastEditorGroup';\n    FocusLastGroupAction.LABEL = nls.localize('focusLastEditorGroup', \"Focus Last Editor Group\");\n    FocusLastGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusLastGroupAction);\n    return FocusLastGroupAction;\n}(BaseFocusGroupAction));\nexports.FocusLastGroupAction = FocusLastGroupAction;\nvar FocusNextGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusNextGroup, _super);\n    function FocusNextGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { location: editorGroupsService_1.GroupLocation.NEXT }, editorGroupService) || this;\n    }\n    FocusNextGroup.ID = 'workbench.action.focusNextGroup';\n    FocusNextGroup.LABEL = nls.localize('focusNextGroup', \"Focus Next Editor Group\");\n    FocusNextGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusNextGroup);\n    return FocusNextGroup;\n}(BaseFocusGroupAction));\nexports.FocusNextGroup = FocusNextGroup;\nvar FocusPreviousGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusPreviousGroup, _super);\n    function FocusPreviousGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { location: editorGroupsService_1.GroupLocation.PREVIOUS }, editorGroupService) || this;\n    }\n    FocusPreviousGroup.ID = 'workbench.action.focusPreviousGroup';\n    FocusPreviousGroup.LABEL = nls.localize('focusPreviousGroup', \"Focus Previous Editor Group\");\n    FocusPreviousGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusPreviousGroup);\n    return FocusPreviousGroup;\n}(BaseFocusGroupAction));\nexports.FocusPreviousGroup = FocusPreviousGroup;\nvar FocusLeftGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusLeftGroup, _super);\n    function FocusLeftGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { direction: editorGroupsService_1.GroupDirection.LEFT }, editorGroupService) || this;\n    }\n    FocusLeftGroup.ID = 'workbench.action.focusLeftGroup';\n    FocusLeftGroup.LABEL = nls.localize('focusLeftGroup', \"Focus Left Editor Group\");\n    FocusLeftGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusLeftGroup);\n    return FocusLeftGroup;\n}(BaseFocusGroupAction));\nexports.FocusLeftGroup = FocusLeftGroup;\nvar FocusRightGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusRightGroup, _super);\n    function FocusRightGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { direction: editorGroupsService_1.GroupDirection.RIGHT }, editorGroupService) || this;\n    }\n    FocusRightGroup.ID = 'workbench.action.focusRightGroup';\n    FocusRightGroup.LABEL = nls.localize('focusRightGroup', \"Focus Right Editor Group\");\n    FocusRightGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusRightGroup);\n    return FocusRightGroup;\n}(BaseFocusGroupAction));\nexports.FocusRightGroup = FocusRightGroup;\nvar FocusAboveGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusAboveGroup, _super);\n    function FocusAboveGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { direction: editorGroupsService_1.GroupDirection.UP }, editorGroupService) || this;\n    }\n    FocusAboveGroup.ID = 'workbench.action.focusAboveGroup';\n    FocusAboveGroup.LABEL = nls.localize('focusAboveGroup', \"Focus Above Editor Group\");\n    FocusAboveGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusAboveGroup);\n    return FocusAboveGroup;\n}(BaseFocusGroupAction));\nexports.FocusAboveGroup = FocusAboveGroup;\nvar FocusBelowGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusBelowGroup, _super);\n    function FocusBelowGroup(id, label, editorGroupService) {\n        return _super.call(this, id, label, { direction: editorGroupsService_1.GroupDirection.DOWN }, editorGroupService) || this;\n    }\n    FocusBelowGroup.ID = 'workbench.action.focusBelowGroup';\n    FocusBelowGroup.LABEL = nls.localize('focusBelowGroup', \"Focus Below Editor Group\");\n    FocusBelowGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], FocusBelowGroup);\n    return FocusBelowGroup;\n}(BaseFocusGroupAction));\nexports.FocusBelowGroup = FocusBelowGroup;\nvar OpenToSideFromQuickOpenAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenToSideFromQuickOpenAction, _super);\n    function OpenToSideFromQuickOpenAction(editorService, configurationService) {\n        var _this = _super.call(this, OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_ID, OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_LABEL) || this;\n        _this.editorService = editorService;\n        _this.configurationService = configurationService;\n        _this.updateClass();\n        return _this;\n    }\n    OpenToSideFromQuickOpenAction.prototype.updateClass = function () {\n        var preferredDirection = editorGroupsService_1.preferredSideBySideGroupDirection(this.configurationService);\n        this.class = (preferredDirection === editorGroupsService_1.GroupDirection.RIGHT) ? 'quick-open-sidebyside-vertical' : 'quick-open-sidebyside-horizontal';\n    };\n    OpenToSideFromQuickOpenAction.prototype.run = function (context) {\n        var entry = toEditorQuickOpenEntry(context);\n        if (entry) {\n            var input = entry.getInput();\n            if (input instanceof editor_1.EditorInput) {\n                return this.editorService.openEditor(input, entry.getOptions() || undefined, editorService_1.SIDE_GROUP);\n            }\n            var resourceInput = input;\n            resourceInput.options = objects_1.mixin(resourceInput.options, entry.getOptions());\n            return this.editorService.openEditor(resourceInput, editorService_1.SIDE_GROUP);\n        }\n        return Promise.resolve(false);\n    };\n    OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_ID = 'workbench.action.openToSide';\n    OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_LABEL = nls.localize('openToSide', \"Open to the Side\");\n    OpenToSideFromQuickOpenAction = tslib_1.__decorate([\n        tslib_1.__param(0, editorService_1.IEditorService),\n        tslib_1.__param(1, configuration_1.IConfigurationService)\n    ], OpenToSideFromQuickOpenAction);\n    return OpenToSideFromQuickOpenAction;\n}(actions_1.Action));\nexports.OpenToSideFromQuickOpenAction = OpenToSideFromQuickOpenAction;\nfunction toEditorQuickOpenEntry(element) {\n    // QuickOpenEntryGroup\n    if (element instanceof quickOpenModel_1.QuickOpenEntryGroup) {\n        var group = element;\n        if (group.getEntry()) {\n            element = group.getEntry();\n        }\n    }\n    // EditorQuickOpenEntry or EditorQuickOpenEntryGroup both implement IEditorQuickOpenEntry\n    if (element instanceof quickopen_1.EditorQuickOpenEntry || element instanceof quickopen_1.EditorQuickOpenEntryGroup) {\n        return element;\n    }\n    return null;\n}\nexports.toEditorQuickOpenEntry = toEditorQuickOpenEntry;\nvar CloseEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseEditorAction, _super);\n    function CloseEditorAction(id, label, commandService) {\n        var _this = _super.call(this, id, label, 'close-editor-action') || this;\n        _this.commandService = commandService;\n        return _this;\n    }\n    CloseEditorAction.prototype.run = function (context) {\n        return this.commandService.executeCommand(editorCommands_1.CLOSE_EDITOR_COMMAND_ID, undefined, context);\n    };\n    CloseEditorAction.ID = 'workbench.action.closeActiveEditor';\n    CloseEditorAction.LABEL = nls.localize('closeEditor', \"Close Editor\");\n    CloseEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], CloseEditorAction);\n    return CloseEditorAction;\n}(actions_1.Action));\nexports.CloseEditorAction = CloseEditorAction;\nvar CloseOneEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseOneEditorAction, _super);\n    function CloseOneEditorAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label, 'close-editor-action') || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    CloseOneEditorAction.prototype.run = function (context) {\n        var group;\n        var editorIndex;\n        if (context) {\n            group = this.editorGroupService.getGroup(context.groupId);\n            if (group) {\n                editorIndex = context.editorIndex; // only allow editor at index if group is valid\n            }\n        }\n        if (!group) {\n            group = this.editorGroupService.activeGroup;\n        }\n        // Close specific editor in group\n        if (typeof editorIndex === 'number') {\n            var editorAtIndex = group.getEditor(editorIndex);\n            if (editorAtIndex) {\n                return group.closeEditor(editorAtIndex);\n            }\n        }\n        // Otherwise close active editor in group\n        if (group.activeEditor) {\n            return group.closeEditor(group.activeEditor);\n        }\n        return Promise.resolve(false);\n    };\n    CloseOneEditorAction.ID = 'workbench.action.closeActiveEditor';\n    CloseOneEditorAction.LABEL = nls.localize('closeOneEditor', \"Close\");\n    CloseOneEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], CloseOneEditorAction);\n    return CloseOneEditorAction;\n}(actions_1.Action));\nexports.CloseOneEditorAction = CloseOneEditorAction;\nvar RevertAndCloseEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(RevertAndCloseEditorAction, _super);\n    function RevertAndCloseEditorAction(id, label, editorService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        return _this;\n    }\n    RevertAndCloseEditorAction.prototype.run = function () {\n        var activeControl = this.editorService.activeControl;\n        if (activeControl) {\n            var editor_2 = activeControl.input;\n            var group_1 = activeControl.group;\n            // first try a normal revert where the contents of the editor are restored\n            return editor_2.revert().then(function () { return group_1.closeEditor(editor_2); }, function (error) {\n                // if that fails, since we are about to close the editor, we accept that\n                // the editor cannot be reverted and instead do a soft revert that just\n                // enables us to close the editor. With this, a user can always close a\n                // dirty editor even when reverting fails.\n                return editor_2.revert({ soft: true }).then(function () { return group_1.closeEditor(editor_2); });\n            });\n        }\n        return Promise.resolve(false);\n    };\n    RevertAndCloseEditorAction.ID = 'workbench.action.revertAndCloseActiveEditor';\n    RevertAndCloseEditorAction.LABEL = nls.localize('revertAndCloseActiveEditor', \"Revert and Close Editor\");\n    RevertAndCloseEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService)\n    ], RevertAndCloseEditorAction);\n    return RevertAndCloseEditorAction;\n}(actions_1.Action));\nexports.RevertAndCloseEditorAction = RevertAndCloseEditorAction;\nvar CloseLeftEditorsInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseLeftEditorsInGroupAction, _super);\n    function CloseLeftEditorsInGroupAction(id, label, editorService, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    CloseLeftEditorsInGroupAction.prototype.run = function (context) {\n        var _a = getTarget(this.editorService, this.editorGroupService, context), group = _a.group, editor = _a.editor;\n        if (group && editor) {\n            return group.closeEditors({ direction: editor_1.CloseDirection.LEFT, except: editor });\n        }\n        return Promise.resolve(false);\n    };\n    CloseLeftEditorsInGroupAction.ID = 'workbench.action.closeEditorsToTheLeft';\n    CloseLeftEditorsInGroupAction.LABEL = nls.localize('closeEditorsToTheLeft', \"Close Editors to the Left in Group\");\n    CloseLeftEditorsInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService)\n    ], CloseLeftEditorsInGroupAction);\n    return CloseLeftEditorsInGroupAction;\n}(actions_1.Action));\nexports.CloseLeftEditorsInGroupAction = CloseLeftEditorsInGroupAction;\nfunction getTarget(editorService, editorGroupService, context) {\n    if (context) {\n        return { editor: context.editor, group: editorGroupService.getGroup(context.groupId) };\n    }\n    // Fallback to active group\n    return { group: editorGroupService.activeGroup, editor: editorGroupService.activeGroup.activeEditor };\n}\nvar BaseCloseAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseCloseAllAction, _super);\n    function BaseCloseAllAction(id, label, clazz, textFileService, editorGroupService) {\n        var _this = _super.call(this, id, label, clazz) || this;\n        _this.textFileService = textFileService;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    Object.defineProperty(BaseCloseAllAction.prototype, \"groupsToClose\", {\n        get: function () {\n            var groupsToClose = [];\n            // Close editors in reverse order of their grid appearance so that the editor\n            // group that is the first (top-left) remains. This helps to keep view state\n            // for editors around that have been opened in this visually first group.\n            var groups = this.editorGroupService.getGroups(editorGroupsService_1.GroupsOrder.GRID_APPEARANCE);\n            for (var i = groups.length - 1; i >= 0; i--) {\n                groupsToClose.push(groups[i]);\n            }\n            return groupsToClose;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseCloseAllAction.prototype.run = function () {\n        var _this = this;\n        // Just close all if there are no or one dirty editor\n        if (this.textFileService.getDirty().length < 2) {\n            return this.doCloseAll();\n        }\n        // Otherwise ask for combined confirmation\n        return this.textFileService.confirmSave().then(function (confirm) {\n            if (confirm === editor_1.ConfirmResult.CANCEL) {\n                return undefined;\n            }\n            var saveOrRevertPromise;\n            if (confirm === editor_1.ConfirmResult.DONT_SAVE) {\n                saveOrRevertPromise = _this.textFileService.revertAll(undefined, { soft: true }).then(function () { return true; });\n            }\n            else {\n                saveOrRevertPromise = _this.textFileService.saveAll(true).then(function (res) { return res.results.every(function (r) { return !!r.success; }); });\n            }\n            return saveOrRevertPromise.then(function (success) {\n                if (success) {\n                    return _this.doCloseAll();\n                }\n                return undefined;\n            });\n        });\n    };\n    return BaseCloseAllAction;\n}(actions_1.Action));\nexports.BaseCloseAllAction = BaseCloseAllAction;\nvar CloseAllEditorsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseAllEditorsAction, _super);\n    function CloseAllEditorsAction(id, label, textFileService, editorGroupService) {\n        return _super.call(this, id, label, 'action-close-all-files', textFileService, editorGroupService) || this;\n    }\n    CloseAllEditorsAction.prototype.doCloseAll = function () {\n        return Promise.all(this.groupsToClose.map(function (g) { return g.closeAllEditors(); }));\n    };\n    CloseAllEditorsAction.ID = 'workbench.action.closeAllEditors';\n    CloseAllEditorsAction.LABEL = nls.localize('closeAllEditors', \"Close All Editors\");\n    CloseAllEditorsAction = tslib_1.__decorate([\n        tslib_1.__param(2, textfiles_1.ITextFileService),\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService)\n    ], CloseAllEditorsAction);\n    return CloseAllEditorsAction;\n}(BaseCloseAllAction));\nexports.CloseAllEditorsAction = CloseAllEditorsAction;\nvar CloseAllEditorGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseAllEditorGroupsAction, _super);\n    function CloseAllEditorGroupsAction(id, label, textFileService, editorGroupService) {\n        return _super.call(this, id, label, undefined, textFileService, editorGroupService) || this;\n    }\n    CloseAllEditorGroupsAction.prototype.doCloseAll = function () {\n        var _this = this;\n        return Promise.all(this.groupsToClose.map(function (g) { return g.closeAllEditors(); })).then(function () {\n            _this.groupsToClose.forEach(function (group) { return _this.editorGroupService.removeGroup(group); });\n        });\n    };\n    CloseAllEditorGroupsAction.ID = 'workbench.action.closeAllGroups';\n    CloseAllEditorGroupsAction.LABEL = nls.localize('closeAllGroups', \"Close All Editor Groups\");\n    CloseAllEditorGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, textfiles_1.ITextFileService),\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService)\n    ], CloseAllEditorGroupsAction);\n    return CloseAllEditorGroupsAction;\n}(BaseCloseAllAction));\nexports.CloseAllEditorGroupsAction = CloseAllEditorGroupsAction;\nvar CloseEditorsInOtherGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseEditorsInOtherGroupsAction, _super);\n    function CloseEditorsInOtherGroupsAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    CloseEditorsInOtherGroupsAction.prototype.run = function (context) {\n        var groupToSkip = context ? this.editorGroupService.getGroup(context.groupId) : this.editorGroupService.activeGroup;\n        return Promise.all(this.editorGroupService.getGroups(editorGroupsService_1.GroupsOrder.MOST_RECENTLY_ACTIVE).map(function (g) {\n            if (groupToSkip && g.id === groupToSkip.id) {\n                return Promise.resolve();\n            }\n            return g.closeAllEditors();\n        }));\n    };\n    CloseEditorsInOtherGroupsAction.ID = 'workbench.action.closeEditorsInOtherGroups';\n    CloseEditorsInOtherGroupsAction.LABEL = nls.localize('closeEditorsInOtherGroups', \"Close Editors in Other Groups\");\n    CloseEditorsInOtherGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], CloseEditorsInOtherGroupsAction);\n    return CloseEditorsInOtherGroupsAction;\n}(actions_1.Action));\nexports.CloseEditorsInOtherGroupsAction = CloseEditorsInOtherGroupsAction;\nvar CloseEditorInAllGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseEditorInAllGroupsAction, _super);\n    function CloseEditorInAllGroupsAction(id, label, editorGroupService, editorService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        _this.editorService = editorService;\n        return _this;\n    }\n    CloseEditorInAllGroupsAction.prototype.run = function () {\n        var activeEditor = this.editorService.activeEditor;\n        if (activeEditor) {\n            return Promise.all(this.editorGroupService.getGroups(editorGroupsService_1.GroupsOrder.MOST_RECENTLY_ACTIVE).map(function (g) { return g.closeEditor(activeEditor); }));\n        }\n        return Promise.resolve();\n    };\n    CloseEditorInAllGroupsAction.ID = 'workbench.action.closeEditorInAllGroups';\n    CloseEditorInAllGroupsAction.LABEL = nls.localize('closeEditorInAllGroups', \"Close Editor in All Groups\");\n    CloseEditorInAllGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], CloseEditorInAllGroupsAction);\n    return CloseEditorInAllGroupsAction;\n}(actions_1.Action));\nexports.CloseEditorInAllGroupsAction = CloseEditorInAllGroupsAction;\nvar BaseMoveGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseMoveGroupAction, _super);\n    function BaseMoveGroupAction(id, label, direction, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.direction = direction;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    BaseMoveGroupAction.prototype.run = function (context) {\n        var sourceGroup;\n        if (context && typeof context.groupId === 'number') {\n            sourceGroup = this.editorGroupService.getGroup(context.groupId);\n        }\n        else {\n            sourceGroup = this.editorGroupService.activeGroup;\n        }\n        if (sourceGroup) {\n            var targetGroup = this.findTargetGroup(sourceGroup);\n            if (targetGroup) {\n                this.editorGroupService.moveGroup(sourceGroup, targetGroup, this.direction);\n            }\n        }\n        return Promise.resolve(true);\n    };\n    BaseMoveGroupAction.prototype.findTargetGroup = function (sourceGroup) {\n        var targetNeighbours = [this.direction];\n        // Allow the target group to be in alternative locations to support more\n        // scenarios of moving the group to the taret location.\n        // Helps for https://github.com/Microsoft/vscode/issues/50741\n        switch (this.direction) {\n            case editorGroupsService_1.GroupDirection.LEFT:\n            case editorGroupsService_1.GroupDirection.RIGHT:\n                targetNeighbours.push(editorGroupsService_1.GroupDirection.UP, editorGroupsService_1.GroupDirection.DOWN);\n                break;\n            case editorGroupsService_1.GroupDirection.UP:\n            case editorGroupsService_1.GroupDirection.DOWN:\n                targetNeighbours.push(editorGroupsService_1.GroupDirection.LEFT, editorGroupsService_1.GroupDirection.RIGHT);\n                break;\n        }\n        for (var _i = 0, targetNeighbours_1 = targetNeighbours; _i < targetNeighbours_1.length; _i++) {\n            var targetNeighbour = targetNeighbours_1[_i];\n            var targetNeighbourGroup = this.editorGroupService.findGroup({ direction: targetNeighbour }, sourceGroup);\n            if (targetNeighbourGroup) {\n                return targetNeighbourGroup;\n            }\n        }\n        return undefined;\n    };\n    return BaseMoveGroupAction;\n}(actions_1.Action));\nexports.BaseMoveGroupAction = BaseMoveGroupAction;\nvar MoveGroupLeftAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveGroupLeftAction, _super);\n    function MoveGroupLeftAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.LEFT, editorGroupService) || this;\n    }\n    MoveGroupLeftAction.ID = 'workbench.action.moveActiveEditorGroupLeft';\n    MoveGroupLeftAction.LABEL = nls.localize('moveActiveGroupLeft', \"Move Editor Group Left\");\n    MoveGroupLeftAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], MoveGroupLeftAction);\n    return MoveGroupLeftAction;\n}(BaseMoveGroupAction));\nexports.MoveGroupLeftAction = MoveGroupLeftAction;\nvar MoveGroupRightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveGroupRightAction, _super);\n    function MoveGroupRightAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.RIGHT, editorGroupService) || this;\n    }\n    MoveGroupRightAction.ID = 'workbench.action.moveActiveEditorGroupRight';\n    MoveGroupRightAction.LABEL = nls.localize('moveActiveGroupRight', \"Move Editor Group Right\");\n    MoveGroupRightAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], MoveGroupRightAction);\n    return MoveGroupRightAction;\n}(BaseMoveGroupAction));\nexports.MoveGroupRightAction = MoveGroupRightAction;\nvar MoveGroupUpAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveGroupUpAction, _super);\n    function MoveGroupUpAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.UP, editorGroupService) || this;\n    }\n    MoveGroupUpAction.ID = 'workbench.action.moveActiveEditorGroupUp';\n    MoveGroupUpAction.LABEL = nls.localize('moveActiveGroupUp', \"Move Editor Group Up\");\n    MoveGroupUpAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], MoveGroupUpAction);\n    return MoveGroupUpAction;\n}(BaseMoveGroupAction));\nexports.MoveGroupUpAction = MoveGroupUpAction;\nvar MoveGroupDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveGroupDownAction, _super);\n    function MoveGroupDownAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.DOWN, editorGroupService) || this;\n    }\n    MoveGroupDownAction.ID = 'workbench.action.moveActiveEditorGroupDown';\n    MoveGroupDownAction.LABEL = nls.localize('moveActiveGroupDown', \"Move Editor Group Down\");\n    MoveGroupDownAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], MoveGroupDownAction);\n    return MoveGroupDownAction;\n}(BaseMoveGroupAction));\nexports.MoveGroupDownAction = MoveGroupDownAction;\nvar MinimizeOtherGroupsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MinimizeOtherGroupsAction, _super);\n    function MinimizeOtherGroupsAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    MinimizeOtherGroupsAction.prototype.run = function () {\n        this.editorGroupService.arrangeGroups(editorGroupsService_1.GroupsArrangement.MINIMIZE_OTHERS);\n        return Promise.resolve(false);\n    };\n    MinimizeOtherGroupsAction.ID = 'workbench.action.minimizeOtherEditors';\n    MinimizeOtherGroupsAction.LABEL = nls.localize('minimizeOtherEditorGroups', \"Maximize Editor Group\");\n    MinimizeOtherGroupsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], MinimizeOtherGroupsAction);\n    return MinimizeOtherGroupsAction;\n}(actions_1.Action));\nexports.MinimizeOtherGroupsAction = MinimizeOtherGroupsAction;\nvar ResetGroupSizesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ResetGroupSizesAction, _super);\n    function ResetGroupSizesAction(id, label, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    ResetGroupSizesAction.prototype.run = function () {\n        this.editorGroupService.arrangeGroups(editorGroupsService_1.GroupsArrangement.EVEN);\n        return Promise.resolve(false);\n    };\n    ResetGroupSizesAction.ID = 'workbench.action.evenEditorWidths';\n    ResetGroupSizesAction.LABEL = nls.localize('evenEditorGroups', \"Reset Editor Group Sizes\");\n    ResetGroupSizesAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], ResetGroupSizesAction);\n    return ResetGroupSizesAction;\n}(actions_1.Action));\nexports.ResetGroupSizesAction = ResetGroupSizesAction;\nvar MaximizeGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MaximizeGroupAction, _super);\n    function MaximizeGroupAction(id, label, editorService, editorGroupService, layoutService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        _this.editorGroupService = editorGroupService;\n        _this.layoutService = layoutService;\n        return _this;\n    }\n    MaximizeGroupAction.prototype.run = function () {\n        if (this.editorService.activeEditor) {\n            this.editorGroupService.arrangeGroups(editorGroupsService_1.GroupsArrangement.MINIMIZE_OTHERS);\n            this.layoutService.setSideBarHidden(true);\n        }\n        return Promise.resolve(false);\n    };\n    MaximizeGroupAction.ID = 'workbench.action.maximizeEditor';\n    MaximizeGroupAction.LABEL = nls.localize('maximizeEditor', \"Maximize Editor Group and Hide Side Bar\");\n    MaximizeGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService)\n    ], MaximizeGroupAction);\n    return MaximizeGroupAction;\n}(actions_1.Action));\nexports.MaximizeGroupAction = MaximizeGroupAction;\nvar BaseNavigateEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseNavigateEditorAction, _super);\n    function BaseNavigateEditorAction(id, label, editorGroupService, editorService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        _this.editorService = editorService;\n        return _this;\n    }\n    BaseNavigateEditorAction.prototype.run = function () {\n        var result = this.navigate();\n        if (!result) {\n            return Promise.resolve(false);\n        }\n        var groupId = result.groupId, editor = result.editor;\n        if (!editor) {\n            return Promise.resolve(false);\n        }\n        var group = this.editorGroupService.getGroup(groupId);\n        if (group) {\n            return group.openEditor(editor);\n        }\n        return Promise.resolve();\n    };\n    return BaseNavigateEditorAction;\n}(actions_1.Action));\nexports.BaseNavigateEditorAction = BaseNavigateEditorAction;\nvar OpenNextEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenNextEditor, _super);\n    function OpenNextEditor(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenNextEditor.prototype.navigate = function () {\n        // Navigate in active group if possible\n        var activeGroup = this.editorGroupService.activeGroup;\n        var activeGroupEditors = activeGroup.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        var activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n        if (activeEditorIndex + 1 < activeGroupEditors.length) {\n            return { editor: activeGroupEditors[activeEditorIndex + 1], groupId: activeGroup.id };\n        }\n        // Otherwise try in next group\n        var nextGroup = this.editorGroupService.findGroup({ location: editorGroupsService_1.GroupLocation.NEXT }, this.editorGroupService.activeGroup, true);\n        if (nextGroup) {\n            var previousGroupEditors = nextGroup.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n            return { editor: previousGroupEditors[0], groupId: nextGroup.id };\n        }\n        return undefined;\n    };\n    OpenNextEditor.ID = 'workbench.action.nextEditor';\n    OpenNextEditor.LABEL = nls.localize('openNextEditor', \"Open Next Editor\");\n    OpenNextEditor = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenNextEditor);\n    return OpenNextEditor;\n}(BaseNavigateEditorAction));\nexports.OpenNextEditor = OpenNextEditor;\nvar OpenPreviousEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenPreviousEditor, _super);\n    function OpenPreviousEditor(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenPreviousEditor.prototype.navigate = function () {\n        // Navigate in active group if possible\n        var activeGroup = this.editorGroupService.activeGroup;\n        var activeGroupEditors = activeGroup.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        var activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n        if (activeEditorIndex > 0) {\n            return { editor: activeGroupEditors[activeEditorIndex - 1], groupId: activeGroup.id };\n        }\n        // Otherwise try in previous group\n        var previousGroup = this.editorGroupService.findGroup({ location: editorGroupsService_1.GroupLocation.PREVIOUS }, this.editorGroupService.activeGroup, true);\n        if (previousGroup) {\n            var previousGroupEditors = previousGroup.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n            return { editor: previousGroupEditors[previousGroupEditors.length - 1], groupId: previousGroup.id };\n        }\n        return undefined;\n    };\n    OpenPreviousEditor.ID = 'workbench.action.previousEditor';\n    OpenPreviousEditor.LABEL = nls.localize('openPreviousEditor', \"Open Previous Editor\");\n    OpenPreviousEditor = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenPreviousEditor);\n    return OpenPreviousEditor;\n}(BaseNavigateEditorAction));\nexports.OpenPreviousEditor = OpenPreviousEditor;\nvar OpenNextEditorInGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenNextEditorInGroup, _super);\n    function OpenNextEditorInGroup(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenNextEditorInGroup.prototype.navigate = function () {\n        var group = this.editorGroupService.activeGroup;\n        var editors = group.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        var index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n        return { editor: index + 1 < editors.length ? editors[index + 1] : editors[0], groupId: group.id };\n    };\n    OpenNextEditorInGroup.ID = 'workbench.action.nextEditorInGroup';\n    OpenNextEditorInGroup.LABEL = nls.localize('nextEditorInGroup', \"Open Next Editor in Group\");\n    OpenNextEditorInGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenNextEditorInGroup);\n    return OpenNextEditorInGroup;\n}(BaseNavigateEditorAction));\nexports.OpenNextEditorInGroup = OpenNextEditorInGroup;\nvar OpenPreviousEditorInGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenPreviousEditorInGroup, _super);\n    function OpenPreviousEditorInGroup(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenPreviousEditorInGroup.prototype.navigate = function () {\n        var group = this.editorGroupService.activeGroup;\n        var editors = group.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        var index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n        return { editor: index > 0 ? editors[index - 1] : editors[editors.length - 1], groupId: group.id };\n    };\n    OpenPreviousEditorInGroup.ID = 'workbench.action.previousEditorInGroup';\n    OpenPreviousEditorInGroup.LABEL = nls.localize('openPreviousEditorInGroup', \"Open Previous Editor in Group\");\n    OpenPreviousEditorInGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenPreviousEditorInGroup);\n    return OpenPreviousEditorInGroup;\n}(BaseNavigateEditorAction));\nexports.OpenPreviousEditorInGroup = OpenPreviousEditorInGroup;\nvar OpenFirstEditorInGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenFirstEditorInGroup, _super);\n    function OpenFirstEditorInGroup(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenFirstEditorInGroup.prototype.navigate = function () {\n        var group = this.editorGroupService.activeGroup;\n        var editors = group.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        return { editor: editors[0], groupId: group.id };\n    };\n    OpenFirstEditorInGroup.ID = 'workbench.action.firstEditorInGroup';\n    OpenFirstEditorInGroup.LABEL = nls.localize('firstEditorInGroup', \"Open First Editor in Group\");\n    OpenFirstEditorInGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenFirstEditorInGroup);\n    return OpenFirstEditorInGroup;\n}(BaseNavigateEditorAction));\nexports.OpenFirstEditorInGroup = OpenFirstEditorInGroup;\nvar OpenLastEditorInGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenLastEditorInGroup, _super);\n    function OpenLastEditorInGroup(id, label, editorGroupService, editorService) {\n        return _super.call(this, id, label, editorGroupService, editorService) || this;\n    }\n    OpenLastEditorInGroup.prototype.navigate = function () {\n        var group = this.editorGroupService.activeGroup;\n        var editors = group.getEditors(editorGroupsService_1.EditorsOrder.SEQUENTIAL);\n        return { editor: editors[editors.length - 1], groupId: group.id };\n    };\n    OpenLastEditorInGroup.ID = 'workbench.action.lastEditorInGroup';\n    OpenLastEditorInGroup.LABEL = nls.localize('lastEditorInGroup', \"Open Last Editor in Group\");\n    OpenLastEditorInGroup = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, editorService_1.IEditorService)\n    ], OpenLastEditorInGroup);\n    return OpenLastEditorInGroup;\n}(BaseNavigateEditorAction));\nexports.OpenLastEditorInGroup = OpenLastEditorInGroup;\nvar NavigateForwardAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateForwardAction, _super);\n    function NavigateForwardAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    NavigateForwardAction.prototype.run = function () {\n        this.historyService.forward();\n        return Promise.resolve();\n    };\n    NavigateForwardAction.ID = 'workbench.action.navigateForward';\n    NavigateForwardAction.LABEL = nls.localize('navigateNext', \"Go Forward\");\n    NavigateForwardAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], NavigateForwardAction);\n    return NavigateForwardAction;\n}(actions_1.Action));\nexports.NavigateForwardAction = NavigateForwardAction;\nvar NavigateBackwardsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateBackwardsAction, _super);\n    function NavigateBackwardsAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    NavigateBackwardsAction.prototype.run = function () {\n        this.historyService.back();\n        return Promise.resolve();\n    };\n    NavigateBackwardsAction.ID = 'workbench.action.navigateBack';\n    NavigateBackwardsAction.LABEL = nls.localize('navigatePrevious', \"Go Back\");\n    NavigateBackwardsAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], NavigateBackwardsAction);\n    return NavigateBackwardsAction;\n}(actions_1.Action));\nexports.NavigateBackwardsAction = NavigateBackwardsAction;\nvar NavigateToLastEditLocationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateToLastEditLocationAction, _super);\n    function NavigateToLastEditLocationAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    NavigateToLastEditLocationAction.prototype.run = function () {\n        this.historyService.openLastEditLocation();\n        return Promise.resolve();\n    };\n    NavigateToLastEditLocationAction.ID = 'workbench.action.navigateToLastEditLocation';\n    NavigateToLastEditLocationAction.LABEL = nls.localize('navigateToLastEditLocation', \"Go to Last Edit Location\");\n    NavigateToLastEditLocationAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], NavigateToLastEditLocationAction);\n    return NavigateToLastEditLocationAction;\n}(actions_1.Action));\nexports.NavigateToLastEditLocationAction = NavigateToLastEditLocationAction;\nvar NavigateLastAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateLastAction, _super);\n    function NavigateLastAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    NavigateLastAction.prototype.run = function () {\n        this.historyService.last();\n        return Promise.resolve();\n    };\n    NavigateLastAction.ID = 'workbench.action.navigateLast';\n    NavigateLastAction.LABEL = nls.localize('navigateLast', \"Go Last\");\n    NavigateLastAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], NavigateLastAction);\n    return NavigateLastAction;\n}(actions_1.Action));\nexports.NavigateLastAction = NavigateLastAction;\nvar ReopenClosedEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReopenClosedEditorAction, _super);\n    function ReopenClosedEditorAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    ReopenClosedEditorAction.prototype.run = function () {\n        this.historyService.reopenLastClosedEditor();\n        return Promise.resolve(false);\n    };\n    ReopenClosedEditorAction.ID = 'workbench.action.reopenClosedEditor';\n    ReopenClosedEditorAction.LABEL = nls.localize('reopenClosedEditor', \"Reopen Closed Editor\");\n    ReopenClosedEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], ReopenClosedEditorAction);\n    return ReopenClosedEditorAction;\n}(actions_1.Action));\nexports.ReopenClosedEditorAction = ReopenClosedEditorAction;\nvar ClearRecentFilesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ClearRecentFilesAction, _super);\n    function ClearRecentFilesAction(id, label, windowsService, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.windowsService = windowsService;\n        _this.historyService = historyService;\n        return _this;\n    }\n    ClearRecentFilesAction.prototype.run = function () {\n        // Clear global recently opened\n        this.windowsService.clearRecentlyOpened();\n        // Clear workspace specific recently opened\n        this.historyService.clearRecentlyOpened();\n        return Promise.resolve(false);\n    };\n    ClearRecentFilesAction.ID = 'workbench.action.clearRecentFiles';\n    ClearRecentFilesAction.LABEL = nls.localize('clearRecentFiles', \"Clear Recently Opened\");\n    ClearRecentFilesAction = tslib_1.__decorate([\n        tslib_1.__param(2, windows_1.IWindowsService),\n        tslib_1.__param(3, history_1.IHistoryService)\n    ], ClearRecentFilesAction);\n    return ClearRecentFilesAction;\n}(actions_1.Action));\nexports.ClearRecentFilesAction = ClearRecentFilesAction;\nvar ShowEditorsInActiveGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowEditorsInActiveGroupAction, _super);\n    function ShowEditorsInActiveGroupAction(actionId, actionLabel, quickOpenService) {\n        return _super.call(this, actionId, actionLabel, editorCommands_1.NAVIGATE_IN_ACTIVE_GROUP_PREFIX, quickOpenService) || this;\n    }\n    ShowEditorsInActiveGroupAction.ID = 'workbench.action.showEditorsInActiveGroup';\n    ShowEditorsInActiveGroupAction.LABEL = nls.localize('showEditorsInActiveGroup', \"Show Editors in Active Group\");\n    ShowEditorsInActiveGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService)\n    ], ShowEditorsInActiveGroupAction);\n    return ShowEditorsInActiveGroupAction;\n}(quickopen_1.QuickOpenAction));\nexports.ShowEditorsInActiveGroupAction = ShowEditorsInActiveGroupAction;\nvar ShowAllEditorsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowAllEditorsAction, _super);\n    function ShowAllEditorsAction(actionId, actionLabel, quickOpenService) {\n        return _super.call(this, actionId, actionLabel, editorCommands_1.NAVIGATE_ALL_EDITORS_GROUP_PREFIX, quickOpenService) || this;\n    }\n    ShowAllEditorsAction.ID = 'workbench.action.showAllEditors';\n    ShowAllEditorsAction.LABEL = nls.localize('showAllEditors', \"Show All Editors\");\n    ShowAllEditorsAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService)\n    ], ShowAllEditorsAction);\n    return ShowAllEditorsAction;\n}(quickopen_1.QuickOpenAction));\nexports.ShowAllEditorsAction = ShowAllEditorsAction;\nvar BaseQuickOpenEditorInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseQuickOpenEditorInGroupAction, _super);\n    function BaseQuickOpenEditorInGroupAction(id, label, quickOpenService, keybindingService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.quickOpenService = quickOpenService;\n        _this.keybindingService = keybindingService;\n        return _this;\n    }\n    BaseQuickOpenEditorInGroupAction.prototype.run = function () {\n        var keys = this.keybindingService.lookupKeybindings(this.id);\n        this.quickOpenService.show(editorCommands_1.NAVIGATE_IN_ACTIVE_GROUP_PREFIX, { quickNavigateConfiguration: { keybindings: keys } });\n        return Promise.resolve(true);\n    };\n    BaseQuickOpenEditorInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService)\n    ], BaseQuickOpenEditorInGroupAction);\n    return BaseQuickOpenEditorInGroupAction;\n}(actions_1.Action));\nexports.BaseQuickOpenEditorInGroupAction = BaseQuickOpenEditorInGroupAction;\nvar OpenPreviousRecentlyUsedEditorInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenPreviousRecentlyUsedEditorInGroupAction, _super);\n    function OpenPreviousRecentlyUsedEditorInGroupAction(id, label, quickOpenService, keybindingService) {\n        return _super.call(this, id, label, quickOpenService, keybindingService) || this;\n    }\n    OpenPreviousRecentlyUsedEditorInGroupAction.ID = 'workbench.action.openPreviousRecentlyUsedEditorInGroup';\n    OpenPreviousRecentlyUsedEditorInGroupAction.LABEL = nls.localize('openPreviousRecentlyUsedEditorInGroup', \"Open Previous Recently Used Editor in Group\");\n    OpenPreviousRecentlyUsedEditorInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService)\n    ], OpenPreviousRecentlyUsedEditorInGroupAction);\n    return OpenPreviousRecentlyUsedEditorInGroupAction;\n}(BaseQuickOpenEditorInGroupAction));\nexports.OpenPreviousRecentlyUsedEditorInGroupAction = OpenPreviousRecentlyUsedEditorInGroupAction;\nvar OpenNextRecentlyUsedEditorInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenNextRecentlyUsedEditorInGroupAction, _super);\n    function OpenNextRecentlyUsedEditorInGroupAction(id, label, quickOpenService, keybindingService) {\n        return _super.call(this, id, label, quickOpenService, keybindingService) || this;\n    }\n    OpenNextRecentlyUsedEditorInGroupAction.ID = 'workbench.action.openNextRecentlyUsedEditorInGroup';\n    OpenNextRecentlyUsedEditorInGroupAction.LABEL = nls.localize('openNextRecentlyUsedEditorInGroup', \"Open Next Recently Used Editor in Group\");\n    OpenNextRecentlyUsedEditorInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService)\n    ], OpenNextRecentlyUsedEditorInGroupAction);\n    return OpenNextRecentlyUsedEditorInGroupAction;\n}(BaseQuickOpenEditorInGroupAction));\nexports.OpenNextRecentlyUsedEditorInGroupAction = OpenNextRecentlyUsedEditorInGroupAction;\nvar OpenPreviousEditorFromHistoryAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenPreviousEditorFromHistoryAction, _super);\n    function OpenPreviousEditorFromHistoryAction(id, label, quickOpenService, keybindingService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.quickOpenService = quickOpenService;\n        _this.keybindingService = keybindingService;\n        return _this;\n    }\n    OpenPreviousEditorFromHistoryAction.prototype.run = function () {\n        var keys = this.keybindingService.lookupKeybindings(this.id);\n        this.quickOpenService.show(undefined, { quickNavigateConfiguration: { keybindings: keys } });\n        return Promise.resolve(true);\n    };\n    OpenPreviousEditorFromHistoryAction.ID = 'workbench.action.openPreviousEditorFromHistory';\n    OpenPreviousEditorFromHistoryAction.LABEL = nls.localize('navigateEditorHistoryByInput', \"Open Previous Editor from History\");\n    OpenPreviousEditorFromHistoryAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService)\n    ], OpenPreviousEditorFromHistoryAction);\n    return OpenPreviousEditorFromHistoryAction;\n}(actions_1.Action));\nexports.OpenPreviousEditorFromHistoryAction = OpenPreviousEditorFromHistoryAction;\nvar OpenNextRecentlyUsedEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenNextRecentlyUsedEditorAction, _super);\n    function OpenNextRecentlyUsedEditorAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    OpenNextRecentlyUsedEditorAction.prototype.run = function () {\n        this.historyService.forward(true);\n        return Promise.resolve();\n    };\n    OpenNextRecentlyUsedEditorAction.ID = 'workbench.action.openNextRecentlyUsedEditor';\n    OpenNextRecentlyUsedEditorAction.LABEL = nls.localize('openNextRecentlyUsedEditor', \"Open Next Recently Used Editor\");\n    OpenNextRecentlyUsedEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], OpenNextRecentlyUsedEditorAction);\n    return OpenNextRecentlyUsedEditorAction;\n}(actions_1.Action));\nexports.OpenNextRecentlyUsedEditorAction = OpenNextRecentlyUsedEditorAction;\nvar OpenPreviousRecentlyUsedEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenPreviousRecentlyUsedEditorAction, _super);\n    function OpenPreviousRecentlyUsedEditorAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    OpenPreviousRecentlyUsedEditorAction.prototype.run = function () {\n        this.historyService.back(true);\n        return Promise.resolve();\n    };\n    OpenPreviousRecentlyUsedEditorAction.ID = 'workbench.action.openPreviousRecentlyUsedEditor';\n    OpenPreviousRecentlyUsedEditorAction.LABEL = nls.localize('openPreviousRecentlyUsedEditor', \"Open Previous Recently Used Editor\");\n    OpenPreviousRecentlyUsedEditorAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], OpenPreviousRecentlyUsedEditorAction);\n    return OpenPreviousRecentlyUsedEditorAction;\n}(actions_1.Action));\nexports.OpenPreviousRecentlyUsedEditorAction = OpenPreviousRecentlyUsedEditorAction;\nvar ClearEditorHistoryAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ClearEditorHistoryAction, _super);\n    function ClearEditorHistoryAction(id, label, historyService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.historyService = historyService;\n        return _this;\n    }\n    ClearEditorHistoryAction.prototype.run = function () {\n        // Editor history\n        this.historyService.clear();\n        return Promise.resolve(true);\n    };\n    ClearEditorHistoryAction.ID = 'workbench.action.clearEditorHistory';\n    ClearEditorHistoryAction.LABEL = nls.localize('clearEditorHistory', \"Clear Editor History\");\n    ClearEditorHistoryAction = tslib_1.__decorate([\n        tslib_1.__param(2, history_1.IHistoryService)\n    ], ClearEditorHistoryAction);\n    return ClearEditorHistoryAction;\n}(actions_1.Action));\nexports.ClearEditorHistoryAction = ClearEditorHistoryAction;\nvar MoveEditorLeftInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorLeftInGroupAction, _super);\n    function MoveEditorLeftInGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'left' }) || this;\n    }\n    MoveEditorLeftInGroupAction.ID = 'workbench.action.moveEditorLeftInGroup';\n    MoveEditorLeftInGroupAction.LABEL = nls.localize('moveEditorLeft', \"Move Editor Left\");\n    MoveEditorLeftInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorLeftInGroupAction);\n    return MoveEditorLeftInGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorLeftInGroupAction = MoveEditorLeftInGroupAction;\nvar MoveEditorRightInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorRightInGroupAction, _super);\n    function MoveEditorRightInGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'right' }) || this;\n    }\n    MoveEditorRightInGroupAction.ID = 'workbench.action.moveEditorRightInGroup';\n    MoveEditorRightInGroupAction.LABEL = nls.localize('moveEditorRight', \"Move Editor Right\");\n    MoveEditorRightInGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorRightInGroupAction);\n    return MoveEditorRightInGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorRightInGroupAction = MoveEditorRightInGroupAction;\nvar MoveEditorToPreviousGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToPreviousGroupAction, _super);\n    function MoveEditorToPreviousGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'previous', by: 'group' }) || this;\n    }\n    MoveEditorToPreviousGroupAction.ID = 'workbench.action.moveEditorToPreviousGroup';\n    MoveEditorToPreviousGroupAction.LABEL = nls.localize('moveEditorToPreviousGroup', \"Move Editor into Previous Group\");\n    MoveEditorToPreviousGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToPreviousGroupAction);\n    return MoveEditorToPreviousGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToPreviousGroupAction = MoveEditorToPreviousGroupAction;\nvar MoveEditorToNextGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToNextGroupAction, _super);\n    function MoveEditorToNextGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'next', by: 'group' }) || this;\n    }\n    MoveEditorToNextGroupAction.ID = 'workbench.action.moveEditorToNextGroup';\n    MoveEditorToNextGroupAction.LABEL = nls.localize('moveEditorToNextGroup', \"Move Editor into Next Group\");\n    MoveEditorToNextGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToNextGroupAction);\n    return MoveEditorToNextGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToNextGroupAction = MoveEditorToNextGroupAction;\nvar MoveEditorToAboveGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToAboveGroupAction, _super);\n    function MoveEditorToAboveGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'up', by: 'group' }) || this;\n    }\n    MoveEditorToAboveGroupAction.ID = 'workbench.action.moveEditorToAboveGroup';\n    MoveEditorToAboveGroupAction.LABEL = nls.localize('moveEditorToAboveGroup', \"Move Editor into Above Group\");\n    MoveEditorToAboveGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToAboveGroupAction);\n    return MoveEditorToAboveGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToAboveGroupAction = MoveEditorToAboveGroupAction;\nvar MoveEditorToBelowGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToBelowGroupAction, _super);\n    function MoveEditorToBelowGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'down', by: 'group' }) || this;\n    }\n    MoveEditorToBelowGroupAction.ID = 'workbench.action.moveEditorToBelowGroup';\n    MoveEditorToBelowGroupAction.LABEL = nls.localize('moveEditorToBelowGroup', \"Move Editor into Below Group\");\n    MoveEditorToBelowGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToBelowGroupAction);\n    return MoveEditorToBelowGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToBelowGroupAction = MoveEditorToBelowGroupAction;\nvar MoveEditorToLeftGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToLeftGroupAction, _super);\n    function MoveEditorToLeftGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'left', by: 'group' }) || this;\n    }\n    MoveEditorToLeftGroupAction.ID = 'workbench.action.moveEditorToLeftGroup';\n    MoveEditorToLeftGroupAction.LABEL = nls.localize('moveEditorToLeftGroup', \"Move Editor into Left Group\");\n    MoveEditorToLeftGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToLeftGroupAction);\n    return MoveEditorToLeftGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToLeftGroupAction = MoveEditorToLeftGroupAction;\nvar MoveEditorToRightGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToRightGroupAction, _super);\n    function MoveEditorToRightGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'right', by: 'group' }) || this;\n    }\n    MoveEditorToRightGroupAction.ID = 'workbench.action.moveEditorToRightGroup';\n    MoveEditorToRightGroupAction.LABEL = nls.localize('moveEditorToRightGroup', \"Move Editor into Right Group\");\n    MoveEditorToRightGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToRightGroupAction);\n    return MoveEditorToRightGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToRightGroupAction = MoveEditorToRightGroupAction;\nvar MoveEditorToFirstGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToFirstGroupAction, _super);\n    function MoveEditorToFirstGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'first', by: 'group' }) || this;\n    }\n    MoveEditorToFirstGroupAction.ID = 'workbench.action.moveEditorToFirstGroup';\n    MoveEditorToFirstGroupAction.LABEL = nls.localize('moveEditorToFirstGroup', \"Move Editor into First Group\");\n    MoveEditorToFirstGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToFirstGroupAction);\n    return MoveEditorToFirstGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToFirstGroupAction = MoveEditorToFirstGroupAction;\nvar MoveEditorToLastGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveEditorToLastGroupAction, _super);\n    function MoveEditorToLastGroupAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'last', by: 'group' }) || this;\n    }\n    MoveEditorToLastGroupAction.ID = 'workbench.action.moveEditorToLastGroup';\n    MoveEditorToLastGroupAction.LABEL = nls.localize('moveEditorToLastGroup', \"Move Editor into Last Group\");\n    MoveEditorToLastGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], MoveEditorToLastGroupAction);\n    return MoveEditorToLastGroupAction;\n}(ExecuteCommandAction));\nexports.MoveEditorToLastGroupAction = MoveEditorToLastGroupAction;\nvar EditorLayoutSingleAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutSingleAction, _super);\n    function EditorLayoutSingleAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}] }) || this;\n    }\n    EditorLayoutSingleAction.ID = 'workbench.action.editorLayoutSingle';\n    EditorLayoutSingleAction.LABEL = nls.localize('editorLayoutSingle', \"Single Column Editor Layout\");\n    EditorLayoutSingleAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutSingleAction);\n    return EditorLayoutSingleAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutSingleAction = EditorLayoutSingleAction;\nvar EditorLayoutTwoColumnsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutTwoColumnsAction, _super);\n    function EditorLayoutTwoColumnsAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}], orientation: editorGroupsService_1.GroupOrientation.HORIZONTAL }) || this;\n    }\n    EditorLayoutTwoColumnsAction.ID = 'workbench.action.editorLayoutTwoColumns';\n    EditorLayoutTwoColumnsAction.LABEL = nls.localize('editorLayoutTwoColumns', \"Two Columns Editor Layout\");\n    EditorLayoutTwoColumnsAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutTwoColumnsAction);\n    return EditorLayoutTwoColumnsAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutTwoColumnsAction = EditorLayoutTwoColumnsAction;\nvar EditorLayoutThreeColumnsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutThreeColumnsAction, _super);\n    function EditorLayoutThreeColumnsAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}, {}], orientation: editorGroupsService_1.GroupOrientation.HORIZONTAL }) || this;\n    }\n    EditorLayoutThreeColumnsAction.ID = 'workbench.action.editorLayoutThreeColumns';\n    EditorLayoutThreeColumnsAction.LABEL = nls.localize('editorLayoutThreeColumns', \"Three Columns Editor Layout\");\n    EditorLayoutThreeColumnsAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutThreeColumnsAction);\n    return EditorLayoutThreeColumnsAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutThreeColumnsAction = EditorLayoutThreeColumnsAction;\nvar EditorLayoutTwoRowsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutTwoRowsAction, _super);\n    function EditorLayoutTwoRowsAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}], orientation: editorGroupsService_1.GroupOrientation.VERTICAL }) || this;\n    }\n    EditorLayoutTwoRowsAction.ID = 'workbench.action.editorLayoutTwoRows';\n    EditorLayoutTwoRowsAction.LABEL = nls.localize('editorLayoutTwoRows', \"Two Rows Editor Layout\");\n    EditorLayoutTwoRowsAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutTwoRowsAction);\n    return EditorLayoutTwoRowsAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutTwoRowsAction = EditorLayoutTwoRowsAction;\nvar EditorLayoutThreeRowsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutThreeRowsAction, _super);\n    function EditorLayoutThreeRowsAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}, {}], orientation: editorGroupsService_1.GroupOrientation.VERTICAL }) || this;\n    }\n    EditorLayoutThreeRowsAction.ID = 'workbench.action.editorLayoutThreeRows';\n    EditorLayoutThreeRowsAction.LABEL = nls.localize('editorLayoutThreeRows', \"Three Rows Editor Layout\");\n    EditorLayoutThreeRowsAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutThreeRowsAction);\n    return EditorLayoutThreeRowsAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutThreeRowsAction = EditorLayoutThreeRowsAction;\nvar EditorLayoutTwoByTwoGridAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutTwoByTwoGridAction, _super);\n    function EditorLayoutTwoByTwoGridAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }] }) || this;\n    }\n    EditorLayoutTwoByTwoGridAction.ID = 'workbench.action.editorLayoutTwoByTwoGrid';\n    EditorLayoutTwoByTwoGridAction.LABEL = nls.localize('editorLayoutTwoByTwoGrid', \"Grid Editor Layout (2x2)\");\n    EditorLayoutTwoByTwoGridAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutTwoByTwoGridAction);\n    return EditorLayoutTwoByTwoGridAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutTwoByTwoGridAction = EditorLayoutTwoByTwoGridAction;\nvar EditorLayoutTwoColumnsBottomAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutTwoColumnsBottomAction, _super);\n    function EditorLayoutTwoColumnsBottomAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, { groups: [{}, {}] }], orientation: editorGroupsService_1.GroupOrientation.VERTICAL }) || this;\n    }\n    EditorLayoutTwoColumnsBottomAction.ID = 'workbench.action.editorLayoutTwoColumnsBottom';\n    EditorLayoutTwoColumnsBottomAction.LABEL = nls.localize('editorLayoutTwoColumnsBottom', \"Two Columns Bottom Editor Layout\");\n    EditorLayoutTwoColumnsBottomAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutTwoColumnsBottomAction);\n    return EditorLayoutTwoColumnsBottomAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutTwoColumnsBottomAction = EditorLayoutTwoColumnsBottomAction;\nvar EditorLayoutTwoRowsRightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorLayoutTwoRowsRightAction, _super);\n    function EditorLayoutTwoRowsRightAction(id, label, commandService) {\n        return _super.call(this, id, label, editorCommands_1.LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, { groups: [{}, {}] }], orientation: editorGroupsService_1.GroupOrientation.HORIZONTAL }) || this;\n    }\n    EditorLayoutTwoRowsRightAction.ID = 'workbench.action.editorLayoutTwoRowsRight';\n    EditorLayoutTwoRowsRightAction.LABEL = nls.localize('editorLayoutTwoRowsRight', \"Two Rows Right Editor Layout\");\n    EditorLayoutTwoRowsRightAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], EditorLayoutTwoRowsRightAction);\n    return EditorLayoutTwoRowsRightAction;\n}(ExecuteCommandAction));\nexports.EditorLayoutTwoRowsRightAction = EditorLayoutTwoRowsRightAction;\nvar BaseCreateEditorGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseCreateEditorGroupAction, _super);\n    function BaseCreateEditorGroupAction(id, label, direction, editorGroupService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.direction = direction;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    BaseCreateEditorGroupAction.prototype.run = function () {\n        this.editorGroupService.addGroup(this.editorGroupService.activeGroup, this.direction, { activate: true });\n        return Promise.resolve(true);\n    };\n    return BaseCreateEditorGroupAction;\n}(actions_1.Action));\nexports.BaseCreateEditorGroupAction = BaseCreateEditorGroupAction;\nvar NewEditorGroupLeftAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewEditorGroupLeftAction, _super);\n    function NewEditorGroupLeftAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.LEFT, editorGroupService) || this;\n    }\n    NewEditorGroupLeftAction.ID = 'workbench.action.newGroupLeft';\n    NewEditorGroupLeftAction.LABEL = nls.localize('newEditorLeft', \"New Editor Group to the Left\");\n    NewEditorGroupLeftAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], NewEditorGroupLeftAction);\n    return NewEditorGroupLeftAction;\n}(BaseCreateEditorGroupAction));\nexports.NewEditorGroupLeftAction = NewEditorGroupLeftAction;\nvar NewEditorGroupRightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewEditorGroupRightAction, _super);\n    function NewEditorGroupRightAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.RIGHT, editorGroupService) || this;\n    }\n    NewEditorGroupRightAction.ID = 'workbench.action.newGroupRight';\n    NewEditorGroupRightAction.LABEL = nls.localize('newEditorRight', \"New Editor Group to the Right\");\n    NewEditorGroupRightAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], NewEditorGroupRightAction);\n    return NewEditorGroupRightAction;\n}(BaseCreateEditorGroupAction));\nexports.NewEditorGroupRightAction = NewEditorGroupRightAction;\nvar NewEditorGroupAboveAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewEditorGroupAboveAction, _super);\n    function NewEditorGroupAboveAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.UP, editorGroupService) || this;\n    }\n    NewEditorGroupAboveAction.ID = 'workbench.action.newGroupAbove';\n    NewEditorGroupAboveAction.LABEL = nls.localize('newEditorAbove', \"New Editor Group Above\");\n    NewEditorGroupAboveAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], NewEditorGroupAboveAction);\n    return NewEditorGroupAboveAction;\n}(BaseCreateEditorGroupAction));\nexports.NewEditorGroupAboveAction = NewEditorGroupAboveAction;\nvar NewEditorGroupBelowAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewEditorGroupBelowAction, _super);\n    function NewEditorGroupBelowAction(id, label, editorGroupService) {\n        return _super.call(this, id, label, editorGroupsService_1.GroupDirection.DOWN, editorGroupService) || this;\n    }\n    NewEditorGroupBelowAction.ID = 'workbench.action.newGroupBelow';\n    NewEditorGroupBelowAction.LABEL = nls.localize('newEditorBelow', \"New Editor Group Below\");\n    NewEditorGroupBelowAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService)\n    ], NewEditorGroupBelowAction);\n    return NewEditorGroupBelowAction;\n}(BaseCreateEditorGroupAction));\nexports.NewEditorGroupBelowAction = NewEditorGroupBelowAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { mixin } from 'vs/base/common/objects';\nimport { IEditorInput, EditorInput, IEditorIdentifier, ConfirmResult, IEditorCommandsContext, CloseDirection } from 'vs/workbench/common/editor';\nimport { QuickOpenEntryGroup } from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport { EditorQuickOpenEntry, EditorQuickOpenEntryGroup, IEditorQuickOpenEntry, QuickOpenAction } from 'vs/workbench/browser/quickopen';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IResourceInput } from 'vs/platform/editor/common/editor';\nimport { IHistoryService } from 'vs/workbench/services/history/common/history';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IWindowsService } from 'vs/platform/windows/common/windows';\nimport { CLOSE_EDITOR_COMMAND_ID, NAVIGATE_ALL_EDITORS_GROUP_PREFIX, MOVE_ACTIVE_EDITOR_COMMAND_ID, NAVIGATE_IN_ACTIVE_GROUP_PREFIX, ActiveEditorMoveArguments, SPLIT_EDITOR_LEFT, SPLIT_EDITOR_RIGHT, SPLIT_EDITOR_UP, SPLIT_EDITOR_DOWN, splitEditor, LAYOUT_EDITOR_GROUPS_COMMAND_ID, mergeAllGroups } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { IEditorGroupsService, IEditorGroup, GroupsArrangement, EditorsOrder, GroupLocation, GroupDirection, preferredSideBySideGroupDirection, IFindGroupScope, GroupOrientation, EditorGroupLayout, GroupsOrder } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nexport class ExecuteCommandAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate commandId: string,\n\t\tprivate commandService: ICommandService,\n\t\tprivate commandArgs?: any\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.commandService.executeCommand(this.commandId, this.commandArgs);\n\t}\n}\n\nexport class BaseSplitEditorAction extends Action {\n\tprivate toDispose: IDisposable[] = [];\n\tprivate direction: GroupDirection;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprotected editorGroupService: IEditorGroupsService,\n\t\tprotected configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.direction = this.getDirection();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected getDirection(): GroupDirection {\n\t\treturn preferredSideBySideGroupDirection(this.configurationService);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.editor.openSideBySideDirection')) {\n\t\t\t\tthis.direction = preferredSideBySideGroupDirection(this.configurationService);\n\t\t\t}\n\t\t}));\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tsplitEditor(this.editorGroupService, this.direction, context);\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.toDispose = dispose(this.toDispose);\n\t}\n}\n\nexport class SplitEditorAction extends BaseSplitEditorAction {\n\n\tstatic readonly ID = 'workbench.action.splitEditor';\n\tstatic readonly LABEL = nls.localize('splitEditor', \"Split Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, editorGroupService, configurationService);\n\t}\n}\n\nexport class SplitEditorOrthogonalAction extends BaseSplitEditorAction {\n\n\tstatic readonly ID = 'workbench.action.splitEditorOrthogonal';\n\tstatic readonly LABEL = nls.localize('splitEditorOrthogonal', \"Split Editor Orthogonal\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, editorGroupService, configurationService);\n\t}\n\n\tprotected getDirection(): GroupDirection {\n\t\tconst direction = preferredSideBySideGroupDirection(this.configurationService);\n\n\t\treturn direction === GroupDirection.RIGHT ? GroupDirection.DOWN : GroupDirection.RIGHT;\n\t}\n}\n\nexport class SplitEditorLeftAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = SPLIT_EDITOR_LEFT;\n\tstatic readonly LABEL = nls.localize('splitEditorGroupLeft', \"Split Editor Left\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, SPLIT_EDITOR_LEFT, commandService);\n\t}\n}\n\nexport class SplitEditorRightAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = SPLIT_EDITOR_RIGHT;\n\tstatic readonly LABEL = nls.localize('splitEditorGroupRight', \"Split Editor Right\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, SPLIT_EDITOR_RIGHT, commandService);\n\t}\n}\n\nexport class SplitEditorUpAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = SPLIT_EDITOR_UP;\n\tstatic readonly LABEL = nls.localize('splitEditorGroupUp', \"Split Editor Up\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, SPLIT_EDITOR_UP, commandService);\n\t}\n}\n\nexport class SplitEditorDownAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = SPLIT_EDITOR_DOWN;\n\tstatic readonly LABEL = nls.localize('splitEditorGroupDown', \"Split Editor Down\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, SPLIT_EDITOR_DOWN, commandService);\n\t}\n}\n\nexport class JoinTwoGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.joinTwoGroups';\n\tstatic readonly LABEL = nls.localize('joinTwoGroups', \"Join Editor Group with Next Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === 'number') {\n\t\t\tsourceGroup = this.editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = this.editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tconst targetGroupDirections = [GroupDirection.RIGHT, GroupDirection.DOWN, GroupDirection.LEFT, GroupDirection.UP];\n\t\t\tfor (const targetGroupDirection of targetGroupDirections) {\n\t\t\t\tconst targetGroup = this.editorGroupService.findGroup({ direction: targetGroupDirection }, sourceGroup);\n\t\t\t\tif (targetGroup && sourceGroup !== targetGroup) {\n\t\t\t\t\tthis.editorGroupService.mergeGroup(sourceGroup, targetGroup);\n\n\t\t\t\t\treturn Promise.resolve(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class JoinAllGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.joinAllGroups';\n\tstatic readonly LABEL = nls.localize('joinAllGroups', \"Join All Editor Groups\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tmergeAllGroups(this.editorGroupService);\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class NavigateBetweenGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.navigateEditorGroups';\n\tstatic readonly LABEL = nls.localize('navigateEditorGroups', \"Navigate Between Editor Groups\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst nextGroup = this.editorGroupService.findGroup({ location: GroupLocation.NEXT }, this.editorGroupService.activeGroup, true);\n\t\tnextGroup.focus();\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class FocusActiveGroupAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.focusActiveEditorGroup';\n\tstatic readonly LABEL = nls.localize('focusActiveEditorGroup', \"Focus Active Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.editorGroupService.activeGroup.focus();\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport abstract class BaseFocusGroupAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate scope: IFindGroupScope,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst group = this.editorGroupService.findGroup(this.scope, this.editorGroupService.activeGroup, true);\n\t\tif (group) {\n\t\t\tgroup.focus();\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class FocusFirstGroupAction extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusFirstEditorGroup';\n\tstatic readonly LABEL = nls.localize('focusFirstEditorGroup', \"Focus First Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { location: GroupLocation.FIRST }, editorGroupService);\n\t}\n}\n\nexport class FocusLastGroupAction extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusLastEditorGroup';\n\tstatic readonly LABEL = nls.localize('focusLastEditorGroup', \"Focus Last Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { location: GroupLocation.LAST }, editorGroupService);\n\t}\n}\n\nexport class FocusNextGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusNextGroup';\n\tstatic readonly LABEL = nls.localize('focusNextGroup', \"Focus Next Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { location: GroupLocation.NEXT }, editorGroupService);\n\t}\n}\n\nexport class FocusPreviousGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusPreviousGroup';\n\tstatic readonly LABEL = nls.localize('focusPreviousGroup', \"Focus Previous Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { location: GroupLocation.PREVIOUS }, editorGroupService);\n\t}\n}\n\nexport class FocusLeftGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusLeftGroup';\n\tstatic readonly LABEL = nls.localize('focusLeftGroup', \"Focus Left Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { direction: GroupDirection.LEFT }, editorGroupService);\n\t}\n}\n\nexport class FocusRightGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusRightGroup';\n\tstatic readonly LABEL = nls.localize('focusRightGroup', \"Focus Right Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { direction: GroupDirection.RIGHT }, editorGroupService);\n\t}\n}\n\nexport class FocusAboveGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusAboveGroup';\n\tstatic readonly LABEL = nls.localize('focusAboveGroup', \"Focus Above Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { direction: GroupDirection.UP }, editorGroupService);\n\t}\n}\n\nexport class FocusBelowGroup extends BaseFocusGroupAction {\n\n\tstatic readonly ID = 'workbench.action.focusBelowGroup';\n\tstatic readonly LABEL = nls.localize('focusBelowGroup', \"Focus Below Editor Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, { direction: GroupDirection.DOWN }, editorGroupService);\n\t}\n}\n\nexport class OpenToSideFromQuickOpenAction extends Action {\n\n\tstatic readonly OPEN_TO_SIDE_ID = 'workbench.action.openToSide';\n\tstatic readonly OPEN_TO_SIDE_LABEL = nls.localize('openToSide', \"Open to the Side\");\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_ID, OpenToSideFromQuickOpenAction.OPEN_TO_SIDE_LABEL);\n\n\t\tthis.updateClass();\n\t}\n\n\tupdateClass(): void {\n\t\tconst preferredDirection = preferredSideBySideGroupDirection(this.configurationService);\n\n\t\tthis.class = (preferredDirection === GroupDirection.RIGHT) ? 'quick-open-sidebyside-vertical' : 'quick-open-sidebyside-horizontal';\n\t}\n\n\trun(context: any): Promise<any> {\n\t\tconst entry = toEditorQuickOpenEntry(context);\n\t\tif (entry) {\n\t\t\tconst input = entry.getInput();\n\t\t\tif (input instanceof EditorInput) {\n\t\t\t\treturn this.editorService.openEditor(input, entry.getOptions() || undefined, SIDE_GROUP);\n\t\t\t}\n\n\t\t\tconst resourceInput = input as IResourceInput;\n\t\t\tresourceInput.options = mixin(resourceInput.options, entry.getOptions());\n\n\t\t\treturn this.editorService.openEditor(resourceInput, SIDE_GROUP);\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport function toEditorQuickOpenEntry(element: any): IEditorQuickOpenEntry | null {\n\n\t// QuickOpenEntryGroup\n\tif (element instanceof QuickOpenEntryGroup) {\n\t\tconst group = <QuickOpenEntryGroup>element;\n\t\tif (group.getEntry()) {\n\t\t\telement = group.getEntry();\n\t\t}\n\t}\n\n\t// EditorQuickOpenEntry or EditorQuickOpenEntryGroup both implement IEditorQuickOpenEntry\n\tif (element instanceof EditorQuickOpenEntry || element instanceof EditorQuickOpenEntryGroup) {\n\t\treturn element;\n\t}\n\n\treturn null;\n}\n\nexport class CloseEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeActiveEditor';\n\tstatic readonly LABEL = nls.localize('closeEditor', \"Close Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, 'close-editor-action');\n\t}\n\n\trun(context?: IEditorCommandsContext): Promise<any> {\n\t\treturn this.commandService.executeCommand(CLOSE_EDITOR_COMMAND_ID, undefined, context);\n\t}\n}\n\nexport class CloseOneEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeActiveEditor';\n\tstatic readonly LABEL = nls.localize('closeOneEditor', \"Close\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, 'close-editor-action');\n\t}\n\n\trun(context?: IEditorCommandsContext): Promise<any> {\n\t\tlet group: IEditorGroup | undefined;\n\t\tlet editorIndex: number | undefined;\n\t\tif (context) {\n\t\t\tgroup = this.editorGroupService.getGroup(context.groupId);\n\n\t\t\tif (group) {\n\t\t\t\teditorIndex = context.editorIndex!; // only allow editor at index if group is valid\n\t\t\t}\n\t\t}\n\n\t\tif (!group) {\n\t\t\tgroup = this.editorGroupService.activeGroup;\n\t\t}\n\n\t\t// Close specific editor in group\n\t\tif (typeof editorIndex === 'number') {\n\t\t\tconst editorAtIndex = group.getEditor(editorIndex);\n\t\t\tif (editorAtIndex) {\n\t\t\t\treturn group.closeEditor(editorAtIndex);\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise close active editor in group\n\t\tif (group.activeEditor) {\n\t\t\treturn group.closeEditor(group.activeEditor);\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class RevertAndCloseEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.revertAndCloseActiveEditor';\n\tstatic readonly LABEL = nls.localize('revertAndCloseActiveEditor', \"Revert and Close Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst activeControl = this.editorService.activeControl;\n\t\tif (activeControl) {\n\t\t\tconst editor = activeControl.input;\n\t\t\tconst group = activeControl.group;\n\n\t\t\t// first try a normal revert where the contents of the editor are restored\n\t\t\treturn editor.revert().then(() => group.closeEditor(editor), error => {\n\t\t\t\t// if that fails, since we are about to close the editor, we accept that\n\t\t\t\t// the editor cannot be reverted and instead do a soft revert that just\n\t\t\t\t// enables us to close the editor. With this, a user can always close a\n\t\t\t\t// dirty editor even when reverting fails.\n\t\t\t\treturn editor.revert({ soft: true }).then(() => group.closeEditor(editor));\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class CloseLeftEditorsInGroupAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeEditorsToTheLeft';\n\tstatic readonly LABEL = nls.localize('closeEditorsToTheLeft', \"Close Editors to the Left in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tconst { group, editor } = getTarget(this.editorService, this.editorGroupService, context);\n\t\tif (group && editor) {\n\t\t\treturn group.closeEditors({ direction: CloseDirection.LEFT, except: editor });\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nfunction getTarget(editorService: IEditorService, editorGroupService: IEditorGroupsService, context?: IEditorIdentifier): { editor: IEditorInput | null, group: IEditorGroup | undefined } {\n\tif (context) {\n\t\treturn { editor: context.editor, group: editorGroupService.getGroup(context.groupId) };\n\t}\n\n\t// Fallback to active group\n\treturn { group: editorGroupService.activeGroup, editor: editorGroupService.activeGroup.activeEditor };\n}\n\nexport abstract class BaseCloseAllAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tclazz: string | undefined,\n\t\tprivate textFileService: ITextFileService,\n\t\tprotected editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, clazz);\n\t}\n\n\tprotected get groupsToClose(): IEditorGroup[] {\n\t\tconst groupsToClose: IEditorGroup[] = [];\n\n\t\t// Close editors in reverse order of their grid appearance so that the editor\n\t\t// group that is the first (top-left) remains. This helps to keep view state\n\t\t// for editors around that have been opened in this visually first group.\n\t\tconst groups = this.editorGroupService.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\tfor (let i = groups.length - 1; i >= 0; i--) {\n\t\t\tgroupsToClose.push(groups[i]);\n\t\t}\n\n\t\treturn groupsToClose;\n\t}\n\n\trun(): Promise<any> {\n\n\t\t// Just close all if there are no or one dirty editor\n\t\tif (this.textFileService.getDirty().length < 2) {\n\t\t\treturn this.doCloseAll();\n\t\t}\n\n\t\t// Otherwise ask for combined confirmation\n\t\treturn this.textFileService.confirmSave().then(confirm => {\n\t\t\tif (confirm === ConfirmResult.CANCEL) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tlet saveOrRevertPromise: Promise<boolean>;\n\t\t\tif (confirm === ConfirmResult.DONT_SAVE) {\n\t\t\t\tsaveOrRevertPromise = this.textFileService.revertAll(undefined, { soft: true }).then(() => true);\n\t\t\t} else {\n\t\t\t\tsaveOrRevertPromise = this.textFileService.saveAll(true).then(res => res.results.every(r => !!r.success));\n\t\t\t}\n\n\t\t\treturn saveOrRevertPromise.then(success => {\n\t\t\t\tif (success) {\n\t\t\t\t\treturn this.doCloseAll();\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected abstract doCloseAll(): Promise<any>;\n}\n\nexport class CloseAllEditorsAction extends BaseCloseAllAction {\n\n\tstatic readonly ID = 'workbench.action.closeAllEditors';\n\tstatic readonly LABEL = nls.localize('closeAllEditors', \"Close All Editors\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, 'action-close-all-files', textFileService, editorGroupService);\n\t}\n\n\tprotected doCloseAll(): Promise<any> {\n\t\treturn Promise.all(this.groupsToClose.map(g => g.closeAllEditors()));\n\t}\n}\n\nexport class CloseAllEditorGroupsAction extends BaseCloseAllAction {\n\n\tstatic readonly ID = 'workbench.action.closeAllGroups';\n\tstatic readonly LABEL = nls.localize('closeAllGroups', \"Close All Editor Groups\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, undefined, textFileService, editorGroupService);\n\t}\n\n\tprotected doCloseAll(): Promise<any> {\n\t\treturn Promise.all(this.groupsToClose.map(g => g.closeAllEditors())).then(() => {\n\t\t\tthis.groupsToClose.forEach(group => this.editorGroupService.removeGroup(group));\n\t\t});\n\t}\n}\n\nexport class CloseEditorsInOtherGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeEditorsInOtherGroups';\n\tstatic readonly LABEL = nls.localize('closeEditorsInOtherGroups', \"Close Editors in Other Groups\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tconst groupToSkip = context ? this.editorGroupService.getGroup(context.groupId) : this.editorGroupService.activeGroup;\n\t\treturn Promise.all(this.editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE).map(g => {\n\t\t\tif (groupToSkip && g.id === groupToSkip.id) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn g.closeAllEditors();\n\t\t}));\n\t}\n}\n\nexport class CloseEditorInAllGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.closeEditorInAllGroups';\n\tstatic readonly LABEL = nls.localize('closeEditorInAllGroups', \"Close Editor in All Groups\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor) {\n\t\t\treturn Promise.all(this.editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE).map(g => g.closeEditor(activeEditor)));\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class BaseMoveGroupAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate direction: GroupDirection,\n\t\tprivate editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(context?: IEditorIdentifier): Promise<any> {\n\t\tlet sourceGroup: IEditorGroup | undefined;\n\t\tif (context && typeof context.groupId === 'number') {\n\t\t\tsourceGroup = this.editorGroupService.getGroup(context.groupId);\n\t\t} else {\n\t\t\tsourceGroup = this.editorGroupService.activeGroup;\n\t\t}\n\n\t\tif (sourceGroup) {\n\t\t\tconst targetGroup = this.findTargetGroup(sourceGroup);\n\t\t\tif (targetGroup) {\n\t\t\t\tthis.editorGroupService.moveGroup(sourceGroup, targetGroup, this.direction);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprivate findTargetGroup(sourceGroup: IEditorGroup): IEditorGroup | undefined {\n\t\tconst targetNeighbours: GroupDirection[] = [this.direction];\n\n\t\t// Allow the target group to be in alternative locations to support more\n\t\t// scenarios of moving the group to the taret location.\n\t\t// Helps for https://github.com/Microsoft/vscode/issues/50741\n\t\tswitch (this.direction) {\n\t\t\tcase GroupDirection.LEFT:\n\t\t\tcase GroupDirection.RIGHT:\n\t\t\t\ttargetNeighbours.push(GroupDirection.UP, GroupDirection.DOWN);\n\t\t\t\tbreak;\n\t\t\tcase GroupDirection.UP:\n\t\t\tcase GroupDirection.DOWN:\n\t\t\t\ttargetNeighbours.push(GroupDirection.LEFT, GroupDirection.RIGHT);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tfor (const targetNeighbour of targetNeighbours) {\n\t\t\tconst targetNeighbourGroup = this.editorGroupService.findGroup({ direction: targetNeighbour }, sourceGroup);\n\t\t\tif (targetNeighbourGroup) {\n\t\t\t\treturn targetNeighbourGroup;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class MoveGroupLeftAction extends BaseMoveGroupAction {\n\n\tstatic readonly ID = 'workbench.action.moveActiveEditorGroupLeft';\n\tstatic readonly LABEL = nls.localize('moveActiveGroupLeft', \"Move Editor Group Left\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.LEFT, editorGroupService);\n\t}\n}\n\nexport class MoveGroupRightAction extends BaseMoveGroupAction {\n\n\tstatic readonly ID = 'workbench.action.moveActiveEditorGroupRight';\n\tstatic readonly LABEL = nls.localize('moveActiveGroupRight', \"Move Editor Group Right\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.RIGHT, editorGroupService);\n\t}\n}\n\nexport class MoveGroupUpAction extends BaseMoveGroupAction {\n\n\tstatic readonly ID = 'workbench.action.moveActiveEditorGroupUp';\n\tstatic readonly LABEL = nls.localize('moveActiveGroupUp', \"Move Editor Group Up\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.UP, editorGroupService);\n\t}\n}\n\nexport class MoveGroupDownAction extends BaseMoveGroupAction {\n\n\tstatic readonly ID = 'workbench.action.moveActiveEditorGroupDown';\n\tstatic readonly LABEL = nls.localize('moveActiveGroupDown', \"Move Editor Group Down\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.DOWN, editorGroupService);\n\t}\n}\n\nexport class MinimizeOtherGroupsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.minimizeOtherEditors';\n\tstatic readonly LABEL = nls.localize('minimizeOtherEditorGroups', \"Maximize Editor Group\");\n\n\tconstructor(id: string, label: string, @IEditorGroupsService private readonly editorGroupService: IEditorGroupsService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.editorGroupService.arrangeGroups(GroupsArrangement.MINIMIZE_OTHERS);\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class ResetGroupSizesAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.evenEditorWidths';\n\tstatic readonly LABEL = nls.localize('evenEditorGroups', \"Reset Editor Group Sizes\");\n\n\tconstructor(id: string, label: string, @IEditorGroupsService private readonly editorGroupService: IEditorGroupsService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.editorGroupService.arrangeGroups(GroupsArrangement.EVEN);\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class MaximizeGroupAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.maximizeEditor';\n\tstatic readonly LABEL = nls.localize('maximizeEditor', \"Maximize Editor Group and Hide Side Bar\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tif (this.editorService.activeEditor) {\n\t\t\tthis.editorGroupService.arrangeGroups(GroupsArrangement.MINIMIZE_OTHERS);\n\t\t\tthis.layoutService.setSideBarHidden(true);\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport abstract class BaseNavigateEditorAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprotected editorGroupService: IEditorGroupsService,\n\t\tprotected editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst result = this.navigate();\n\t\tif (!result) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tconst { groupId, editor } = result;\n\t\tif (!editor) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tconst group = this.editorGroupService.getGroup(groupId);\n\t\tif (group) {\n\t\t\treturn group.openEditor(editor);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprotected abstract navigate(): IEditorIdentifier | undefined;\n}\n\nexport class OpenNextEditor extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.nextEditor';\n\tstatic readonly LABEL = nls.localize('openNextEditor', \"Open Next Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier | undefined {\n\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n\t\tif (activeEditorIndex + 1 < activeGroupEditors.length) {\n\t\t\treturn { editor: activeGroupEditors[activeEditorIndex + 1], groupId: activeGroup.id };\n\t\t}\n\n\t\t// Otherwise try in next group\n\t\tconst nextGroup = this.editorGroupService.findGroup({ location: GroupLocation.NEXT }, this.editorGroupService.activeGroup, true);\n\t\tif (nextGroup) {\n\t\t\tconst previousGroupEditors = nextGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\t\treturn { editor: previousGroupEditors[0], groupId: nextGroup.id };\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenPreviousEditor extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.previousEditor';\n\tstatic readonly LABEL = nls.localize('openPreviousEditor', \"Open Previous Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier | undefined {\n\n\t\t// Navigate in active group if possible\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\t\tconst activeGroupEditors = activeGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst activeEditorIndex = activeGroup.activeEditor ? activeGroupEditors.indexOf(activeGroup.activeEditor) : -1;\n\t\tif (activeEditorIndex > 0) {\n\t\t\treturn { editor: activeGroupEditors[activeEditorIndex - 1], groupId: activeGroup.id };\n\t\t}\n\n\t\t// Otherwise try in previous group\n\t\tconst previousGroup = this.editorGroupService.findGroup({ location: GroupLocation.PREVIOUS }, this.editorGroupService.activeGroup, true);\n\t\tif (previousGroup) {\n\t\t\tconst previousGroupEditors = previousGroup.getEditors(EditorsOrder.SEQUENTIAL);\n\t\t\treturn { editor: previousGroupEditors[previousGroupEditors.length - 1], groupId: previousGroup.id };\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport class OpenNextEditorInGroup extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.nextEditorInGroup';\n\tstatic readonly LABEL = nls.localize('nextEditorInGroup', \"Open Next Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier {\n\t\tconst group = this.editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n\n\t\treturn { editor: index + 1 < editors.length ? editors[index + 1] : editors[0], groupId: group.id };\n\t}\n}\n\nexport class OpenPreviousEditorInGroup extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.previousEditorInGroup';\n\tstatic readonly LABEL = nls.localize('openPreviousEditorInGroup', \"Open Previous Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier {\n\t\tconst group = this.editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tconst index = group.activeEditor ? editors.indexOf(group.activeEditor) : -1;\n\n\t\treturn { editor: index > 0 ? editors[index - 1] : editors[editors.length - 1], groupId: group.id };\n\t}\n}\n\nexport class OpenFirstEditorInGroup extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.firstEditorInGroup';\n\tstatic readonly LABEL = nls.localize('firstEditorInGroup', \"Open First Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier {\n\t\tconst group = this.editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[0], groupId: group.id };\n\t}\n}\n\nexport class OpenLastEditorInGroup extends BaseNavigateEditorAction {\n\n\tstatic readonly ID = 'workbench.action.lastEditorInGroup';\n\tstatic readonly LABEL = nls.localize('lastEditorInGroup', \"Open Last Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper(id, label, editorGroupService, editorService);\n\t}\n\n\tprotected navigate(): IEditorIdentifier {\n\t\tconst group = this.editorGroupService.activeGroup;\n\t\tconst editors = group.getEditors(EditorsOrder.SEQUENTIAL);\n\n\t\treturn { editor: editors[editors.length - 1], groupId: group.id };\n\t}\n}\n\nexport class NavigateForwardAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.navigateForward';\n\tstatic readonly LABEL = nls.localize('navigateNext', \"Go Forward\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.forward();\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class NavigateBackwardsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.navigateBack';\n\tstatic readonly LABEL = nls.localize('navigatePrevious', \"Go Back\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.back();\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class NavigateToLastEditLocationAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.navigateToLastEditLocation';\n\tstatic readonly LABEL = nls.localize('navigateToLastEditLocation', \"Go to Last Edit Location\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.openLastEditLocation();\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class NavigateLastAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.navigateLast';\n\tstatic readonly LABEL = nls.localize('navigateLast', \"Go Last\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.last();\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class ReopenClosedEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.reopenClosedEditor';\n\tstatic readonly LABEL = nls.localize('reopenClosedEditor', \"Reopen Closed Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IHistoryService private readonly historyService: IHistoryService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.reopenLastClosedEditor();\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class ClearRecentFilesAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.clearRecentFiles';\n\tstatic readonly LABEL = nls.localize('clearRecentFiles', \"Clear Recently Opened\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWindowsService private readonly windowsService: IWindowsService,\n\t\t@IHistoryService private readonly historyService: IHistoryService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\n\t\t// Clear global recently opened\n\t\tthis.windowsService.clearRecentlyOpened();\n\n\t\t// Clear workspace specific recently opened\n\t\tthis.historyService.clearRecentlyOpened();\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nexport class ShowEditorsInActiveGroupAction extends QuickOpenAction {\n\n\tstatic readonly ID = 'workbench.action.showEditorsInActiveGroup';\n\tstatic readonly LABEL = nls.localize('showEditorsInActiveGroup', \"Show Editors in Active Group\");\n\n\tconstructor(\n\t\tactionId: string,\n\t\tactionLabel: string,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService\n\t) {\n\t\tsuper(actionId, actionLabel, NAVIGATE_IN_ACTIVE_GROUP_PREFIX, quickOpenService);\n\t}\n}\n\nexport class ShowAllEditorsAction extends QuickOpenAction {\n\n\tstatic readonly ID = 'workbench.action.showAllEditors';\n\tstatic readonly LABEL = nls.localize('showAllEditors', \"Show All Editors\");\n\n\tconstructor(actionId: string, actionLabel: string, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tsuper(actionId, actionLabel, NAVIGATE_ALL_EDITORS_GROUP_PREFIX, quickOpenService);\n\t}\n}\n\nexport class BaseQuickOpenEditorInGroupAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickOpenService private readonly quickOpenService: IQuickOpenService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst keys = this.keybindingService.lookupKeybindings(this.id);\n\n\n\n\t\tthis.quickOpenService.show(NAVIGATE_IN_ACTIVE_GROUP_PREFIX, { quickNavigateConfiguration: { keybindings: keys } });\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorInGroupAction extends BaseQuickOpenEditorInGroupAction {\n\n\tstatic readonly ID = 'workbench.action.openPreviousRecentlyUsedEditorInGroup';\n\tstatic readonly LABEL = nls.localize('openPreviousRecentlyUsedEditorInGroup', \"Open Previous Recently Used Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService,\n\t\t@IKeybindingService keybindingService: IKeybindingService\n\t) {\n\t\tsuper(id, label, quickOpenService, keybindingService);\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorInGroupAction extends BaseQuickOpenEditorInGroupAction {\n\n\tstatic readonly ID = 'workbench.action.openNextRecentlyUsedEditorInGroup';\n\tstatic readonly LABEL = nls.localize('openNextRecentlyUsedEditorInGroup', \"Open Next Recently Used Editor in Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService,\n\t\t@IKeybindingService keybindingService: IKeybindingService\n\t) {\n\t\tsuper(id, label, quickOpenService, keybindingService);\n\t}\n}\n\nexport class OpenPreviousEditorFromHistoryAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openPreviousEditorFromHistory';\n\tstatic readonly LABEL = nls.localize('navigateEditorHistoryByInput', \"Open Previous Editor from History\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickOpenService private readonly quickOpenService: IQuickOpenService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst keys = this.keybindingService.lookupKeybindings(this.id);\n\n\t\tthis.quickOpenService.show(undefined, { quickNavigateConfiguration: { keybindings: keys } });\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class OpenNextRecentlyUsedEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openNextRecentlyUsedEditor';\n\tstatic readonly LABEL = nls.localize('openNextRecentlyUsedEditor', \"Open Next Recently Used Editor\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.forward(true);\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class OpenPreviousRecentlyUsedEditorAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.openPreviousRecentlyUsedEditor';\n\tstatic readonly LABEL = nls.localize('openPreviousRecentlyUsedEditor', \"Open Previous Recently Used Editor\");\n\n\tconstructor(id: string, label: string, @IHistoryService private readonly historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.historyService.back(true);\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class ClearEditorHistoryAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.clearEditorHistory';\n\tstatic readonly LABEL = nls.localize('clearEditorHistory', \"Clear Editor History\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IHistoryService private readonly historyService: IHistoryService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\n\t\t// Editor history\n\t\tthis.historyService.clear();\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class MoveEditorLeftInGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorLeftInGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorLeft', \"Move Editor Left\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'left' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorRightInGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorRightInGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorRight', \"Move Editor Right\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'right' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToPreviousGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToPreviousGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToPreviousGroup', \"Move Editor into Previous Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'previous', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToNextGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToNextGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToNextGroup', \"Move Editor into Next Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'next', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToAboveGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToAboveGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToAboveGroup', \"Move Editor into Above Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'up', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToBelowGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToBelowGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToBelowGroup', \"Move Editor into Below Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'down', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToLeftGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToLeftGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToLeftGroup', \"Move Editor into Left Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'left', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToRightGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToRightGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToRightGroup', \"Move Editor into Right Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'right', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToFirstGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToFirstGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToFirstGroup', \"Move Editor into First Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'first', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class MoveEditorToLastGroupAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.moveEditorToLastGroup';\n\tstatic readonly LABEL = nls.localize('moveEditorToLastGroup', \"Move Editor into Last Group\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, MOVE_ACTIVE_EDITOR_COMMAND_ID, commandService, { to: 'last', by: 'group' } as ActiveEditorMoveArguments);\n\t}\n}\n\nexport class EditorLayoutSingleAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutSingle';\n\tstatic readonly LABEL = nls.localize('editorLayoutSingle', \"Single Column Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}] } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoColumns';\n\tstatic readonly LABEL = nls.localize('editorLayoutTwoColumns', \"Two Columns Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}], orientation: GroupOrientation.HORIZONTAL } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutThreeColumnsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutThreeColumns';\n\tstatic readonly LABEL = nls.localize('editorLayoutThreeColumns', \"Three Columns Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}, {}], orientation: GroupOrientation.HORIZONTAL } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoRowsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoRows';\n\tstatic readonly LABEL = nls.localize('editorLayoutTwoRows', \"Two Rows Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}], orientation: GroupOrientation.VERTICAL } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutThreeRowsAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutThreeRows';\n\tstatic readonly LABEL = nls.localize('editorLayoutThreeRows', \"Three Rows Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, {}, {}], orientation: GroupOrientation.VERTICAL } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoByTwoGridAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoByTwoGrid';\n\tstatic readonly LABEL = nls.localize('editorLayoutTwoByTwoGrid', \"Grid Editor Layout (2x2)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }] } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoColumnsBottomAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoColumnsBottom';\n\tstatic readonly LABEL = nls.localize('editorLayoutTwoColumnsBottom', \"Two Columns Bottom Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, { groups: [{}, {}] }], orientation: GroupOrientation.VERTICAL } as EditorGroupLayout);\n\t}\n}\n\nexport class EditorLayoutTwoRowsRightAction extends ExecuteCommandAction {\n\n\tstatic readonly ID = 'workbench.action.editorLayoutTwoRowsRight';\n\tstatic readonly LABEL = nls.localize('editorLayoutTwoRowsRight', \"Two Rows Right Editor Layout\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\tsuper(id, label, LAYOUT_EDITOR_GROUPS_COMMAND_ID, commandService, { groups: [{}, { groups: [{}, {}] }], orientation: GroupOrientation.HORIZONTAL } as EditorGroupLayout);\n\t}\n}\n\nexport class BaseCreateEditorGroupAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate direction: GroupDirection,\n\t\tprivate editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.editorGroupService.addGroup(this.editorGroupService.activeGroup, this.direction, { activate: true });\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class NewEditorGroupLeftAction extends BaseCreateEditorGroupAction {\n\n\tstatic readonly ID = 'workbench.action.newGroupLeft';\n\tstatic readonly LABEL = nls.localize('newEditorLeft', \"New Editor Group to the Left\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.LEFT, editorGroupService);\n\t}\n}\n\nexport class NewEditorGroupRightAction extends BaseCreateEditorGroupAction {\n\n\tstatic readonly ID = 'workbench.action.newGroupRight';\n\tstatic readonly LABEL = nls.localize('newEditorRight', \"New Editor Group to the Right\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.RIGHT, editorGroupService);\n\t}\n}\n\nexport class NewEditorGroupAboveAction extends BaseCreateEditorGroupAction {\n\n\tstatic readonly ID = 'workbench.action.newGroupAbove';\n\tstatic readonly LABEL = nls.localize('newEditorAbove', \"New Editor Group Above\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.UP, editorGroupService);\n\t}\n}\n\nexport class NewEditorGroupBelowAction extends BaseCreateEditorGroupAction {\n\n\tstatic readonly ID = 'workbench.action.newGroupBelow';\n\tstatic readonly LABEL = nls.localize('newEditorBelow', \"New Editor Group Below\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(id, label, GroupDirection.DOWN, editorGroupService);\n\t}\n}\n"]}]}