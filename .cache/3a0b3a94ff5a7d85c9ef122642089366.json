{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issueActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issueActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/common/actions\", \"vs/nls\", \"vs/platform/issue/common/issue\", \"vs/workbench/contrib/issue/electron-browser/issue\"], function (require, exports, actions_1, nls, issue_1, issue_2) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let OpenIssueReporterAction = class OpenIssueReporterAction extends actions_1.Action {\n        constructor(id, label, issueService) {\n            super(id, label);\n            this.issueService = issueService;\n        }\n        run() {\n            return this.issueService.openReporter().then(() => true);\n        }\n    };\n    OpenIssueReporterAction.ID = 'workbench.action.openIssueReporter';\n    OpenIssueReporterAction.LABEL = nls.localize({ key: 'reportIssueInEnglish', comment: ['Translate this to \"Report Issue in English\" in all languages please!'] }, \"Report Issue\");\n    OpenIssueReporterAction = __decorate([\n        __param(2, issue_2.IWorkbenchIssueService)\n    ], OpenIssueReporterAction);\n    exports.OpenIssueReporterAction = OpenIssueReporterAction;\n    let OpenProcessExplorer = class OpenProcessExplorer extends actions_1.Action {\n        constructor(id, label, issueService) {\n            super(id, label);\n            this.issueService = issueService;\n        }\n        run() {\n            return this.issueService.openProcessExplorer().then(() => true);\n        }\n    };\n    OpenProcessExplorer.ID = 'workbench.action.openProcessExplorer';\n    OpenProcessExplorer.LABEL = nls.localize('openProcessExplorer', \"Open Process Explorer\");\n    OpenProcessExplorer = __decorate([\n        __param(2, issue_2.IWorkbenchIssueService)\n    ], OpenProcessExplorer);\n    exports.OpenProcessExplorer = OpenProcessExplorer;\n    let ReportPerformanceIssueUsingReporterAction = class ReportPerformanceIssueUsingReporterAction extends actions_1.Action {\n        constructor(id, label, issueService) {\n            super(id, label);\n            this.issueService = issueService;\n        }\n        run() {\n            return this.issueService.openReporter({ issueType: issue_1.IssueType.PerformanceIssue }).then(() => true);\n        }\n    };\n    ReportPerformanceIssueUsingReporterAction.ID = 'workbench.action.reportPerformanceIssueUsingReporter';\n    ReportPerformanceIssueUsingReporterAction.LABEL = nls.localize('reportPerformanceIssue', \"Report Performance Issue\");\n    ReportPerformanceIssueUsingReporterAction = __decorate([\n        __param(2, issue_2.IWorkbenchIssueService)\n    ], ReportPerformanceIssueUsingReporterAction);\n    exports.ReportPerformanceIssueUsingReporterAction = ReportPerformanceIssueUsingReporterAction;\n});\n",null]}