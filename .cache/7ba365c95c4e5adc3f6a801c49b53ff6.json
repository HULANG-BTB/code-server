{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalPanel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalPanel.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar nls = require(\"vs/nls\");\nvar browser = require(\"vs/base/browser/browser\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar terminal_1 = require(\"vs/workbench/contrib/terminal/common/terminal\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar terminalFindWidget_1 = require(\"vs/workbench/contrib/terminal/browser/terminalFindWidget\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar terminalActions_1 = require(\"vs/workbench/contrib/terminal/browser/terminalActions\");\nvar panel_1 = require(\"vs/workbench/browser/panel\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar terminalColorRegistry_1 = require(\"vs/workbench/contrib/terminal/common/terminalColorRegistry\");\nvar dnd_1 = require(\"vs/base/browser/dnd\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar FIND_FOCUS_CLASS = 'find-focused';\nvar TerminalPanel = /** @class */ (function (_super) {\n    tslib_1.__extends(TerminalPanel, _super);\n    function TerminalPanel(_configurationService, _contextMenuService, _instantiationService, _terminalService, _themeService, telemetryService, _notificationService, storageService) {\n        var _this = _super.call(this, terminal_1.TERMINAL_PANEL_ID, telemetryService, _themeService, storageService) || this;\n        _this._configurationService = _configurationService;\n        _this._contextMenuService = _contextMenuService;\n        _this._instantiationService = _instantiationService;\n        _this._terminalService = _terminalService;\n        _this._themeService = _themeService;\n        _this._notificationService = _notificationService;\n        _this._cancelContextMenu = false;\n        return _this;\n    }\n    TerminalPanel.prototype.create = function (parent) {\n        var _this = this;\n        _super.prototype.create.call(this, parent);\n        this._parentDomElement = parent;\n        dom.addClass(this._parentDomElement, 'integrated-terminal');\n        this._fontStyleElement = document.createElement('style');\n        this._terminalContainer = document.createElement('div');\n        dom.addClass(this._terminalContainer, 'terminal-outer-container');\n        this._findWidget = this._instantiationService.createInstance(terminalFindWidget_1.TerminalFindWidget, this._terminalService.getFindState());\n        this._findWidget.focusTracker.onDidFocus(function () { return _this._terminalContainer.classList.add(FIND_FOCUS_CLASS); });\n        this._findWidget.focusTracker.onDidBlur(function () { return _this._terminalContainer.classList.remove(FIND_FOCUS_CLASS); });\n        this._parentDomElement.appendChild(this._fontStyleElement);\n        this._parentDomElement.appendChild(this._terminalContainer);\n        this._parentDomElement.appendChild(this._findWidget.getDomNode());\n        this._attachEventListeners();\n        this._terminalService.setContainers(this.getContainer(), this._terminalContainer);\n        this._register(this.themeService.onThemeChange(function (theme) { return _this._updateTheme(theme); }));\n        this._register(this._configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('terminal.integrated') || e.affectsConfiguration('editor.fontFamily')) {\n                _this._updateFont();\n            }\n            if (e.affectsConfiguration('terminal.integrated.fontFamily') || e.affectsConfiguration('editor.fontFamily')) {\n                var configHelper = _this._terminalService.configHelper;\n                if (!configHelper.configFontIsMonospace()) {\n                    var choices = [{\n                            label: nls.localize('terminal.useMonospace', \"Use 'monospace'\"),\n                            run: function () { return _this._configurationService.updateValue('terminal.integrated.fontFamily', 'monospace'); },\n                        }];\n                    _this._notificationService.prompt(notification_1.Severity.Warning, nls.localize('terminal.monospaceOnly', \"The terminal only supports monospace fonts.\"), choices);\n                }\n            }\n        }));\n        this._updateFont();\n        this._updateTheme();\n        this._register(this.onDidChangeVisibility(function (visible) {\n            if (visible) {\n                if (_this._terminalService.terminalInstances.length > 0) {\n                    _this._updateFont();\n                    _this._updateTheme();\n                }\n                else {\n                    // Check if instances were already restored as part of workbench restore\n                    if (_this._terminalService.terminalInstances.length === 0) {\n                        _this._terminalService.createTerminal();\n                    }\n                    if (_this._terminalService.terminalInstances.length > 0) {\n                        _this._updateFont();\n                        _this._updateTheme();\n                    }\n                }\n            }\n        }));\n        // Force another layout (first is setContainers) since config has changed\n        this.layout(new dom.Dimension(this._terminalContainer.offsetWidth, this._terminalContainer.offsetHeight));\n    };\n    TerminalPanel.prototype.layout = function (dimension) {\n        if (!dimension) {\n            return;\n        }\n        this._terminalService.terminalTabs.forEach(function (t) { return t.layout(dimension.width, dimension.height); });\n    };\n    TerminalPanel.prototype.getActions = function () {\n        var _this = this;\n        if (!this._actions) {\n            this._actions = [\n                this._instantiationService.createInstance(terminalActions_1.SwitchTerminalAction, terminalActions_1.SwitchTerminalAction.ID, terminalActions_1.SwitchTerminalAction.LABEL),\n                this._instantiationService.createInstance(terminalActions_1.CreateNewTerminalAction, terminalActions_1.CreateNewTerminalAction.ID, terminalActions_1.CreateNewTerminalAction.SHORT_LABEL),\n                this._instantiationService.createInstance(terminalActions_1.SplitTerminalAction, terminalActions_1.SplitTerminalAction.ID, terminalActions_1.SplitTerminalAction.LABEL),\n                this._instantiationService.createInstance(terminalActions_1.KillTerminalAction, terminalActions_1.KillTerminalAction.ID, terminalActions_1.KillTerminalAction.PANEL_LABEL)\n            ];\n            this._actions.forEach(function (a) {\n                _this._register(a);\n            });\n        }\n        return this._actions;\n    };\n    TerminalPanel.prototype._getContextMenuActions = function () {\n        var _this = this;\n        if (!this._contextMenuActions) {\n            this._copyContextMenuAction = this._instantiationService.createInstance(terminalActions_1.CopyTerminalSelectionAction, terminalActions_1.CopyTerminalSelectionAction.ID, terminalActions_1.CopyTerminalSelectionAction.SHORT_LABEL);\n            this._contextMenuActions = [\n                this._instantiationService.createInstance(terminalActions_1.CreateNewTerminalAction, terminalActions_1.CreateNewTerminalAction.ID, terminalActions_1.CreateNewTerminalAction.SHORT_LABEL),\n                this._instantiationService.createInstance(terminalActions_1.SplitTerminalAction, terminalActions_1.SplitTerminalAction.ID, terminalActions_1.SplitTerminalAction.SHORT_LABEL),\n                new actionbar_1.Separator(),\n                this._copyContextMenuAction,\n                this._instantiationService.createInstance(terminalActions_1.TerminalPasteAction, terminalActions_1.TerminalPasteAction.ID, terminalActions_1.TerminalPasteAction.SHORT_LABEL),\n                this._instantiationService.createInstance(terminalActions_1.SelectAllTerminalAction, terminalActions_1.SelectAllTerminalAction.ID, terminalActions_1.SelectAllTerminalAction.LABEL),\n                new actionbar_1.Separator(),\n                this._instantiationService.createInstance(terminalActions_1.ClearTerminalAction, terminalActions_1.ClearTerminalAction.ID, terminalActions_1.ClearTerminalAction.LABEL),\n                new actionbar_1.Separator(),\n                this._instantiationService.createInstance(terminalActions_1.KillTerminalAction, terminalActions_1.KillTerminalAction.ID, terminalActions_1.KillTerminalAction.PANEL_LABEL)\n            ];\n            this._contextMenuActions.forEach(function (a) {\n                _this._register(a);\n            });\n        }\n        var activeInstance = this._terminalService.getActiveInstance();\n        this._copyContextMenuAction.enabled = !!activeInstance && activeInstance.hasSelection();\n        return this._contextMenuActions;\n    };\n    TerminalPanel.prototype.getActionItem = function (action) {\n        if (action.id === terminalActions_1.SwitchTerminalAction.ID) {\n            return this._instantiationService.createInstance(terminalActions_1.SwitchTerminalActionItem, action);\n        }\n        return _super.prototype.getActionItem.call(this, action);\n    };\n    TerminalPanel.prototype.focus = function () {\n        var activeInstance = this._terminalService.getActiveInstance();\n        if (activeInstance) {\n            activeInstance.focusWhenReady(true);\n        }\n    };\n    TerminalPanel.prototype.focusFindWidget = function () {\n        var activeInstance = this._terminalService.getActiveInstance();\n        if (activeInstance && activeInstance.hasSelection() && activeInstance.selection.indexOf('\\n') === -1) {\n            this._findWidget.reveal(activeInstance.selection);\n        }\n        else {\n            this._findWidget.reveal();\n        }\n    };\n    TerminalPanel.prototype.hideFindWidget = function () {\n        this._findWidget.hide();\n    };\n    TerminalPanel.prototype.showFindWidget = function () {\n        var activeInstance = this._terminalService.getActiveInstance();\n        if (activeInstance && activeInstance.hasSelection() && activeInstance.selection.indexOf('\\n') === -1) {\n            this._findWidget.show(activeInstance.selection);\n        }\n        else {\n            this._findWidget.show();\n        }\n    };\n    TerminalPanel.prototype.getFindWidget = function () {\n        return this._findWidget;\n    };\n    TerminalPanel.prototype._attachEventListeners = function () {\n        var _this = this;\n        this._register(dom.addDisposableListener(this._parentDomElement, 'mousedown', function (event) {\n            if (_this._terminalService.terminalInstances.length === 0) {\n                return;\n            }\n            if (event.which === 2 && browser.isLinux) {\n                // Drop selection and focus terminal on Linux to enable middle button paste when click\n                // occurs on the selection itself.\n                var terminal = _this._terminalService.getActiveInstance();\n                if (terminal) {\n                    terminal.focus();\n                }\n            }\n            else if (event.which === 3) {\n                if (_this._terminalService.configHelper.config.rightClickBehavior === 'copyPaste') {\n                    var terminal_2 = _this._terminalService.getActiveInstance();\n                    if (!terminal_2) {\n                        return;\n                    }\n                    if (terminal_2.hasSelection()) {\n                        terminal_2.copySelection();\n                        terminal_2.clearSelection();\n                    }\n                    else {\n                        terminal_2.paste();\n                    }\n                    // Clear selection after all click event bubbling is finished on Mac to prevent\n                    // right-click selecting a word which is seemed cannot be disabled. There is a\n                    // flicker when pasting but this appears to give the best experience if the\n                    // setting is enabled.\n                    if (browser.isMacintosh) {\n                        setTimeout(function () {\n                            terminal_2.clearSelection();\n                        }, 0);\n                    }\n                    _this._cancelContextMenu = true;\n                }\n            }\n        }));\n        this._register(dom.addDisposableListener(this._parentDomElement, 'mouseup', function (event) {\n            if (_this._configurationService.getValue('terminal.integrated.copyOnSelection')) {\n                if (_this._terminalService.terminalInstances.length === 0) {\n                    return;\n                }\n                if (event.which === 1) {\n                    var terminal = _this._terminalService.getActiveInstance();\n                    if (terminal && terminal.hasSelection()) {\n                        terminal.copySelection();\n                    }\n                }\n            }\n        }));\n        this._register(dom.addDisposableListener(this._parentDomElement, 'contextmenu', function (event) {\n            if (!_this._cancelContextMenu) {\n                var standardEvent = new mouseEvent_1.StandardMouseEvent(event);\n                var anchor_1 = { x: standardEvent.posx, y: standardEvent.posy };\n                _this._contextMenuService.showContextMenu({\n                    getAnchor: function () { return anchor_1; },\n                    getActions: function () { return _this._getContextMenuActions(); },\n                    getActionsContext: function () { return _this._parentDomElement; }\n                });\n            }\n            else {\n                event.stopImmediatePropagation();\n            }\n            _this._cancelContextMenu = false;\n        }));\n        this._register(dom.addDisposableListener(document, 'keydown', function (event) {\n            _this._terminalContainer.classList.toggle('alt-active', !!event.altKey);\n        }));\n        this._register(dom.addDisposableListener(document, 'keyup', function (event) {\n            _this._terminalContainer.classList.toggle('alt-active', !!event.altKey);\n        }));\n        this._register(dom.addDisposableListener(this._parentDomElement, 'keyup', function (event) {\n            if (event.keyCode === 27) {\n                // Keep terminal open on escape\n                event.stopPropagation();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._parentDomElement, dom.EventType.DROP, function (e) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var path, resources, terminal_3;\n            return tslib_1.__generator(this, function (_a) {\n                if (e.target === this._parentDomElement || dom.isAncestor(e.target, this._parentDomElement)) {\n                    if (!e.dataTransfer) {\n                        return [2 /*return*/];\n                    }\n                    path = void 0;\n                    resources = e.dataTransfer.getData(dnd_1.DataTransfers.RESOURCES);\n                    if (resources) {\n                        path = uri_1.URI.parse(JSON.parse(resources)[0]).fsPath;\n                    }\n                    else if (e.dataTransfer.files.length > 0) {\n                        // Check if the file was dragged from the filesystem\n                        path = uri_1.URI.file(e.dataTransfer.files[0].path).fsPath;\n                    }\n                    if (!path) {\n                        return [2 /*return*/];\n                    }\n                    terminal_3 = this._terminalService.getActiveInstance();\n                    if (terminal_3) {\n                        return [2 /*return*/, this._terminalService.preparePathForTerminalAsync(path, terminal_3.shellLaunchConfig.executable, terminal_3.title).then(function (preparedPath) {\n                                terminal_3.sendText(preparedPath, false);\n                            })];\n                    }\n                }\n                return [2 /*return*/];\n            });\n        }); }));\n    };\n    TerminalPanel.prototype._updateTheme = function (theme) {\n        if (!theme) {\n            theme = this.themeService.getTheme();\n        }\n        this._findWidget.updateTheme(theme);\n    };\n    TerminalPanel.prototype._updateFont = function () {\n        if (this._terminalService.terminalInstances.length === 0) {\n            return;\n        }\n        // TODO: Can we support ligatures?\n        // dom.toggleClass(this._parentDomElement, 'enable-ligatures', this._terminalService.configHelper.config.fontLigatures);\n        this.layout(new dom.Dimension(this._parentDomElement.offsetWidth, this._parentDomElement.offsetHeight));\n    };\n    TerminalPanel = tslib_1.__decorate([\n        tslib_1.__param(0, configuration_1.IConfigurationService),\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, terminal_1.ITerminalService),\n        tslib_1.__param(4, themeService_1.IThemeService),\n        tslib_1.__param(5, telemetry_1.ITelemetryService),\n        tslib_1.__param(6, notification_1.INotificationService),\n        tslib_1.__param(7, storage_1.IStorageService)\n    ], TerminalPanel);\n    return TerminalPanel;\n}(panel_1.Panel));\nexports.TerminalPanel = TerminalPanel;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var backgroundColor = theme.getColor(terminalColorRegistry_1.TERMINAL_BACKGROUND_COLOR);\n    collector.addRule(\".monaco-workbench .panel.integrated-terminal .terminal-outer-container { background-color: \" + (backgroundColor ? backgroundColor.toString() : '') + \"; }\");\n    var borderColor = theme.getColor(terminalColorRegistry_1.TERMINAL_BORDER_COLOR);\n    if (borderColor) {\n        collector.addRule(\".monaco-workbench .panel.integrated-terminal .split-view-view:not(:first-child) { border-color: \" + borderColor.toString() + \"; }\");\n    }\n    // Borrow the editor's hover background for now\n    var hoverBackground = theme.getColor(colorRegistry_1.editorHoverBackground);\n    if (hoverBackground) {\n        collector.addRule(\".monaco-workbench .panel.integrated-terminal .terminal-message-widget { background-color: \" + hoverBackground + \"; }\");\n    }\n    var hoverBorder = theme.getColor(colorRegistry_1.editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(\".monaco-workbench .panel.integrated-terminal .terminal-message-widget { border: 1px solid \" + hoverBorder + \"; }\");\n    }\n    var hoverForeground = theme.getColor(colorRegistry_1.editorForeground);\n    if (hoverForeground) {\n        collector.addRule(\".monaco-workbench .panel.integrated-terminal .terminal-message-widget { color: \" + hoverForeground + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalPanel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalPanel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport * as nls from 'vs/nls';\nimport * as platform from 'vs/base/common/platform';\nimport * as browser from 'vs/base/browser/browser';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { IActionItem, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ITerminalService, TERMINAL_PANEL_ID } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IThemeService, ITheme, registerThemingParticipant, ICssStyleCollector } from 'vs/platform/theme/common/themeService';\nimport { TerminalFindWidget } from 'vs/workbench/contrib/terminal/browser/terminalFindWidget';\nimport { editorHoverBackground, editorHoverBorder, editorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { KillTerminalAction, SwitchTerminalAction, SwitchTerminalActionItem, CopyTerminalSelectionAction, TerminalPasteAction, ClearTerminalAction, SelectAllTerminalAction, CreateNewTerminalAction, SplitTerminalAction } from 'vs/workbench/contrib/terminal/browser/terminalActions';\nimport { Panel } from 'vs/workbench/browser/panel';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { URI } from 'vs/base/common/uri';\nimport { TERMINAL_BACKGROUND_COLOR, TERMINAL_BORDER_COLOR } from 'vs/workbench/contrib/terminal/common/terminalColorRegistry';\nimport { DataTransfers } from 'vs/base/browser/dnd';\nimport { INotificationService, IPromptChoice, Severity } from 'vs/platform/notification/common/notification';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\n\nconst FIND_FOCUS_CLASS = 'find-focused';\n\nexport class TerminalPanel extends Panel {\n\n\tprivate _actions: IAction[];\n\tprivate _copyContextMenuAction: IAction;\n\tprivate _contextMenuActions: IAction[];\n\tprivate _cancelContextMenu: boolean = false;\n\tprivate _fontStyleElement: HTMLElement;\n\tprivate _parentDomElement: HTMLElement;\n\tprivate _terminalContainer: HTMLElement;\n\tprivate _findWidget: TerminalFindWidget;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IThemeService protected readonly _themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(TERMINAL_PANEL_ID, telemetryService, _themeService, storageService);\n\t}\n\n\tpublic create(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\t\tthis._parentDomElement = parent;\n\t\tdom.addClass(this._parentDomElement, 'integrated-terminal');\n\t\tthis._fontStyleElement = document.createElement('style');\n\n\t\tthis._terminalContainer = document.createElement('div');\n\t\tdom.addClass(this._terminalContainer, 'terminal-outer-container');\n\n\t\tthis._findWidget = this._instantiationService.createInstance(TerminalFindWidget, this._terminalService.getFindState());\n\t\tthis._findWidget.focusTracker.onDidFocus(() => this._terminalContainer.classList.add(FIND_FOCUS_CLASS));\n\t\tthis._findWidget.focusTracker.onDidBlur(() => this._terminalContainer.classList.remove(FIND_FOCUS_CLASS));\n\n\t\tthis._parentDomElement.appendChild(this._fontStyleElement);\n\t\tthis._parentDomElement.appendChild(this._terminalContainer);\n\t\tthis._parentDomElement.appendChild(this._findWidget.getDomNode());\n\n\t\tthis._attachEventListeners();\n\n\t\tthis._terminalService.setContainers(this.getContainer(), this._terminalContainer);\n\n\t\tthis._register(this.themeService.onThemeChange(theme => this._updateTheme(theme)));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('terminal.integrated') || e.affectsConfiguration('editor.fontFamily')) {\n\t\t\t\tthis._updateFont();\n\t\t\t}\n\n\t\t\tif (e.affectsConfiguration('terminal.integrated.fontFamily') || e.affectsConfiguration('editor.fontFamily')) {\n\t\t\t\tconst configHelper = this._terminalService.configHelper;\n\t\t\t\tif (!configHelper.configFontIsMonospace()) {\n\t\t\t\t\tconst choices: IPromptChoice[] = [{\n\t\t\t\t\t\tlabel: nls.localize('terminal.useMonospace', \"Use 'monospace'\"),\n\t\t\t\t\t\trun: () => this._configurationService.updateValue('terminal.integrated.fontFamily', 'monospace'),\n\t\t\t\t\t}];\n\t\t\t\t\tthis._notificationService.prompt(Severity.Warning, nls.localize('terminal.monospaceOnly', \"The terminal only supports monospace fonts.\"), choices);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._updateFont();\n\t\tthis._updateTheme();\n\n\t\tthis._register(this.onDidChangeVisibility(visible => {\n\t\t\tif (visible) {\n\t\t\t\tif (this._terminalService.terminalInstances.length > 0) {\n\t\t\t\t\tthis._updateFont();\n\t\t\t\t\tthis._updateTheme();\n\t\t\t\t} else {\n\t\t\t\t\t// Check if instances were already restored as part of workbench restore\n\t\t\t\t\tif (this._terminalService.terminalInstances.length === 0) {\n\t\t\t\t\t\tthis._terminalService.createTerminal();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._terminalService.terminalInstances.length > 0) {\n\t\t\t\t\t\tthis._updateFont();\n\t\t\t\t\t\tthis._updateTheme();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Force another layout (first is setContainers) since config has changed\n\t\tthis.layout(new dom.Dimension(this._terminalContainer.offsetWidth, this._terminalContainer.offsetHeight));\n\t}\n\n\tpublic layout(dimension?: dom.Dimension): void {\n\t\tif (!dimension) {\n\t\t\treturn;\n\t\t}\n\t\tthis._terminalService.terminalTabs.forEach(t => t.layout(dimension.width, dimension.height));\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\tif (!this._actions) {\n\t\t\tthis._actions = [\n\t\t\t\tthis._instantiationService.createInstance(SwitchTerminalAction, SwitchTerminalAction.ID, SwitchTerminalAction.LABEL),\n\t\t\t\tthis._instantiationService.createInstance(CreateNewTerminalAction, CreateNewTerminalAction.ID, CreateNewTerminalAction.SHORT_LABEL),\n\t\t\t\tthis._instantiationService.createInstance(SplitTerminalAction, SplitTerminalAction.ID, SplitTerminalAction.LABEL),\n\t\t\t\tthis._instantiationService.createInstance(KillTerminalAction, KillTerminalAction.ID, KillTerminalAction.PANEL_LABEL)\n\t\t\t];\n\t\t\tthis._actions.forEach(a => {\n\t\t\t\tthis._register(a);\n\t\t\t});\n\t\t}\n\t\treturn this._actions;\n\t}\n\n\tprivate _getContextMenuActions(): IAction[] {\n\t\tif (!this._contextMenuActions) {\n\t\t\tthis._copyContextMenuAction = this._instantiationService.createInstance(CopyTerminalSelectionAction, CopyTerminalSelectionAction.ID, CopyTerminalSelectionAction.SHORT_LABEL);\n\t\t\tthis._contextMenuActions = [\n\t\t\t\tthis._instantiationService.createInstance(CreateNewTerminalAction, CreateNewTerminalAction.ID, CreateNewTerminalAction.SHORT_LABEL),\n\t\t\t\tthis._instantiationService.createInstance(SplitTerminalAction, SplitTerminalAction.ID, SplitTerminalAction.SHORT_LABEL),\n\t\t\t\tnew Separator(),\n\t\t\t\tthis._copyContextMenuAction,\n\t\t\t\tthis._instantiationService.createInstance(TerminalPasteAction, TerminalPasteAction.ID, TerminalPasteAction.SHORT_LABEL),\n\t\t\t\tthis._instantiationService.createInstance(SelectAllTerminalAction, SelectAllTerminalAction.ID, SelectAllTerminalAction.LABEL),\n\t\t\t\tnew Separator(),\n\t\t\t\tthis._instantiationService.createInstance(ClearTerminalAction, ClearTerminalAction.ID, ClearTerminalAction.LABEL),\n\t\t\t\tnew Separator(),\n\t\t\t\tthis._instantiationService.createInstance(KillTerminalAction, KillTerminalAction.ID, KillTerminalAction.PANEL_LABEL)\n\n\t\t\t];\n\t\t\tthis._contextMenuActions.forEach(a => {\n\t\t\t\tthis._register(a);\n\t\t\t});\n\t\t}\n\t\tconst activeInstance = this._terminalService.getActiveInstance();\n\t\tthis._copyContextMenuAction.enabled = !!activeInstance && activeInstance.hasSelection();\n\t\treturn this._contextMenuActions;\n\t}\n\n\tpublic getActionItem(action: Action): IActionItem | undefined {\n\t\tif (action.id === SwitchTerminalAction.ID) {\n\t\t\treturn this._instantiationService.createInstance(SwitchTerminalActionItem, action);\n\t\t}\n\n\t\treturn super.getActionItem(action);\n\t}\n\n\tpublic focus(): void {\n\t\tconst activeInstance = this._terminalService.getActiveInstance();\n\t\tif (activeInstance) {\n\t\t\tactiveInstance.focusWhenReady(true);\n\t\t}\n\t}\n\n\tpublic focusFindWidget() {\n\t\tconst activeInstance = this._terminalService.getActiveInstance();\n\t\tif (activeInstance && activeInstance.hasSelection() && activeInstance.selection!.indexOf('\\n') === -1) {\n\t\t\tthis._findWidget.reveal(activeInstance.selection);\n\t\t} else {\n\t\t\tthis._findWidget.reveal();\n\t\t}\n\t}\n\n\tpublic hideFindWidget() {\n\t\tthis._findWidget.hide();\n\t}\n\n\tpublic showFindWidget() {\n\t\tconst activeInstance = this._terminalService.getActiveInstance();\n\t\tif (activeInstance && activeInstance.hasSelection() && activeInstance.selection!.indexOf('\\n') === -1) {\n\t\t\tthis._findWidget.show(activeInstance.selection);\n\t\t} else {\n\t\t\tthis._findWidget.show();\n\t\t}\n\t}\n\n\tpublic getFindWidget(): TerminalFindWidget {\n\t\treturn this._findWidget;\n\t}\n\n\tprivate _attachEventListeners(): void {\n\t\tthis._register(dom.addDisposableListener(this._parentDomElement, 'mousedown', (event: MouseEvent) => {\n\t\t\tif (this._terminalService.terminalInstances.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (event.which === 2 && browser.isLinux) {\n\t\t\t\t// Drop selection and focus terminal on Linux to enable middle button paste when click\n\t\t\t\t// occurs on the selection itself.\n\t\t\t\tconst terminal = this._terminalService.getActiveInstance();\n\t\t\t\tif (terminal) {\n\t\t\t\t\tterminal.focus();\n\t\t\t\t}\n\t\t\t} else if (event.which === 3) {\n\t\t\t\tif (this._terminalService.configHelper.config.rightClickBehavior === 'copyPaste') {\n\t\t\t\t\tconst terminal = this._terminalService.getActiveInstance();\n\t\t\t\t\tif (!terminal) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (terminal.hasSelection()) {\n\t\t\t\t\t\tterminal.copySelection();\n\t\t\t\t\t\tterminal.clearSelection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tterminal.paste();\n\t\t\t\t\t}\n\t\t\t\t\t// Clear selection after all click event bubbling is finished on Mac to prevent\n\t\t\t\t\t// right-click selecting a word which is seemed cannot be disabled. There is a\n\t\t\t\t\t// flicker when pasting but this appears to give the best experience if the\n\t\t\t\t\t// setting is enabled.\n\t\t\t\t\tif (browser.isMacintosh) {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tterminal.clearSelection();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t\tthis._cancelContextMenu = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._parentDomElement, 'mouseup', (event: MouseEvent) => {\n\t\t\tif (this._configurationService.getValue('terminal.integrated.copyOnSelection')) {\n\t\t\t\tif (this._terminalService.terminalInstances.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.which === 1) {\n\t\t\t\t\tconst terminal = this._terminalService.getActiveInstance();\n\t\t\t\t\tif (terminal && terminal.hasSelection()) {\n\t\t\t\t\t\tterminal.copySelection();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._parentDomElement, 'contextmenu', (event: MouseEvent) => {\n\t\t\tif (!this._cancelContextMenu) {\n\t\t\t\tconst standardEvent = new StandardMouseEvent(event);\n\t\t\t\tconst anchor: { x: number, y: number } = { x: standardEvent.posx, y: standardEvent.posy };\n\t\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\t\tgetActions: () => this._getContextMenuActions(),\n\t\t\t\t\tgetActionsContext: () => this._parentDomElement\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t\tthis._cancelContextMenu = false;\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(document, 'keydown', (event: KeyboardEvent) => {\n\t\t\tthis._terminalContainer.classList.toggle('alt-active', !!event.altKey);\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(document, 'keyup', (event: KeyboardEvent) => {\n\t\t\tthis._terminalContainer.classList.toggle('alt-active', !!event.altKey);\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._parentDomElement, 'keyup', (event: KeyboardEvent) => {\n\t\t\tif (event.keyCode === 27) {\n\t\t\t\t// Keep terminal open on escape\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._parentDomElement, dom.EventType.DROP, async (e: DragEvent) => {\n\t\t\tif (e.target === this._parentDomElement || dom.isAncestor(e.target as HTMLElement, this._parentDomElement)) {\n\t\t\t\tif (!e.dataTransfer) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if files were dragged from the tree explorer\n\t\t\t\tlet path: string | undefined;\n\t\t\t\tconst resources = e.dataTransfer.getData(DataTransfers.RESOURCES);\n\t\t\t\tif (resources) {\n\t\t\t\t\tpath = URI.parse(JSON.parse(resources)[0]).fsPath;\n\t\t\t\t} else if (e.dataTransfer.files.length > 0) {\n\t\t\t\t\t// Check if the file was dragged from the filesystem\n\t\t\t\t\tpath = URI.file(e.dataTransfer.files[0].path).fsPath;\n\t\t\t\t}\n\n\t\t\t\tif (!path) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst terminal = this._terminalService.getActiveInstance();\n\t\t\t\tif (terminal) {\n\t\t\t\t\treturn this._terminalService.preparePathForTerminalAsync(path, terminal.shellLaunchConfig.executable, terminal.title).then(preparedPath => {\n\t\t\t\t\t\tterminal.sendText(preparedPath, false);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _updateTheme(theme?: ITheme): void {\n\t\tif (!theme) {\n\t\t\ttheme = this.themeService.getTheme();\n\t\t}\n\n\t\tthis._findWidget.updateTheme(theme);\n\t}\n\n\tprivate _updateFont(): void {\n\t\tif (this._terminalService.terminalInstances.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: Can we support ligatures?\n\t\t// dom.toggleClass(this._parentDomElement, 'enable-ligatures', this._terminalService.configHelper.config.fontLigatures);\n\t\tthis.layout(new dom.Dimension(this._parentDomElement.offsetWidth, this._parentDomElement.offsetHeight));\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst backgroundColor = theme.getColor(TERMINAL_BACKGROUND_COLOR);\n\tcollector.addRule(`.monaco-workbench .panel.integrated-terminal .terminal-outer-container { background-color: ${backgroundColor ? backgroundColor.toString() : ''}; }`);\n\n\tconst borderColor = theme.getColor(TERMINAL_BORDER_COLOR);\n\tif (borderColor) {\n\t\tcollector.addRule(`.monaco-workbench .panel.integrated-terminal .split-view-view:not(:first-child) { border-color: ${borderColor.toString()}; }`);\n\t}\n\n\t// Borrow the editor's hover background for now\n\tconst hoverBackground = theme.getColor(editorHoverBackground);\n\tif (hoverBackground) {\n\t\tcollector.addRule(`.monaco-workbench .panel.integrated-terminal .terminal-message-widget { background-color: ${hoverBackground}; }`);\n\t}\n\tconst hoverBorder = theme.getColor(editorHoverBorder);\n\tif (hoverBorder) {\n\t\tcollector.addRule(`.monaco-workbench .panel.integrated-terminal .terminal-message-widget { border: 1px solid ${hoverBorder}; }`);\n\t}\n\tconst hoverForeground = theme.getColor(editorForeground);\n\tif (hoverForeground) {\n\t\tcollector.addRule(`.monaco-workbench .panel.integrated-terminal .terminal-message-widget { color: ${hoverForeground}; }`);\n\t}\n});\n"]}]}