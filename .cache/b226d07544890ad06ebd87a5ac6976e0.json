{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/globalMouseMoveMonitor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/globalMouseMoveMonitor.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar iframe_1 = require(\"vs/base/browser/iframe\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nfunction standardMouseMoveMerger(lastEvent, currentEvent) {\n    var ev = new mouseEvent_1.StandardMouseEvent(currentEvent);\n    ev.preventDefault();\n    return {\n        leftButton: ev.leftButton,\n        posx: ev.posx,\n        posy: ev.posy\n    };\n}\nexports.standardMouseMoveMerger = standardMouseMoveMerger;\nvar GlobalMouseMoveMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(GlobalMouseMoveMonitor, _super);\n    function GlobalMouseMoveMonitor() {\n        var _this = _super.call(this) || this;\n        _this.hooks = [];\n        _this.mouseMoveEventMerger = null;\n        _this.mouseMoveCallback = null;\n        _this.onStopCallback = null;\n        return _this;\n    }\n    GlobalMouseMoveMonitor.prototype.dispose = function () {\n        this.stopMonitoring(false);\n        _super.prototype.dispose.call(this);\n    };\n    GlobalMouseMoveMonitor.prototype.stopMonitoring = function (invokeStopCallback) {\n        if (!this.isMonitoring()) {\n            // Not monitoring\n            return;\n        }\n        // Unhook\n        this.hooks = lifecycle_1.dispose(this.hooks);\n        this.mouseMoveEventMerger = null;\n        this.mouseMoveCallback = null;\n        var onStopCallback = this.onStopCallback;\n        this.onStopCallback = null;\n        if (invokeStopCallback && onStopCallback) {\n            onStopCallback();\n        }\n    };\n    GlobalMouseMoveMonitor.prototype.isMonitoring = function () {\n        return this.hooks.length > 0;\n    };\n    GlobalMouseMoveMonitor.prototype.startMonitoring = function (mouseMoveEventMerger, mouseMoveCallback, onStopCallback) {\n        var _this = this;\n        if (this.isMonitoring()) {\n            // I am already hooked\n            return;\n        }\n        this.mouseMoveEventMerger = mouseMoveEventMerger;\n        this.mouseMoveCallback = mouseMoveCallback;\n        this.onStopCallback = onStopCallback;\n        var windowChain = iframe_1.IframeUtils.getSameOriginWindowChain();\n        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\n            var element = windowChain_1[_i];\n            this.hooks.push(dom.addDisposableThrottledListener(element.window.document, 'mousemove', function (data) { return _this.mouseMoveCallback(data); }, function (lastEvent, currentEvent) { return _this.mouseMoveEventMerger(lastEvent, currentEvent); }));\n            this.hooks.push(dom.addDisposableListener(element.window.document, 'mouseup', function (e) { return _this.stopMonitoring(true); }));\n        }\n        if (iframe_1.IframeUtils.hasDifferentOriginAncestor()) {\n            var lastSameOriginAncestor = windowChain[windowChain.length - 1];\n            // We might miss a mouse up if it happens outside the iframe\n            // This one is for Chrome\n            this.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseout', function (browserEvent) {\n                var e = new mouseEvent_1.StandardMouseEvent(browserEvent);\n                if (e.target.tagName.toLowerCase() === 'html') {\n                    _this.stopMonitoring(true);\n                }\n            }));\n            // This one is for FF\n            this.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseover', function (browserEvent) {\n                var e = new mouseEvent_1.StandardMouseEvent(browserEvent);\n                if (e.target.tagName.toLowerCase() === 'html') {\n                    _this.stopMonitoring(true);\n                }\n            }));\n            // This one is for IE\n            this.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document.body, 'mouseleave', function (browserEvent) {\n                _this.stopMonitoring(true);\n            }));\n        }\n    };\n    return GlobalMouseMoveMonitor;\n}(lifecycle_1.Disposable));\nexports.GlobalMouseMoveMonitor = GlobalMouseMoveMonitor;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/globalMouseMoveMonitor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/globalMouseMoveMonitor.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,yCAA2C;AAC3C,iDAAqD;AACrD,yDAAgE;AAChE,sDAA4E;AAoB5E,SAAgB,uBAAuB,CAAC,SAAsC,EAAE,YAAwB;IACvG,IAAI,EAAE,GAAG,IAAI,+BAAkB,CAAC,YAAY,CAAC,CAAC;IAC9C,EAAE,CAAC,cAAc,EAAE,CAAC;IACpB,OAAO;QACN,UAAU,EAAE,EAAE,CAAC,UAAU;QACzB,IAAI,EAAE,EAAE,CAAC,IAAI;QACb,IAAI,EAAE,EAAE,CAAC,IAAI;KACb,CAAC;AACH,CAAC;AARD,0DAQC;AAED;IAA+C,kDAAU;IAOxD;QAAA,YACC,iBAAO,SAKP;QAJA,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;IAC5B,CAAC;IAEM,wCAAO,GAAd;QACC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC3B,iBAAM,OAAO,WAAE,CAAC;IACjB,CAAC;IAEM,+CAAc,GAArB,UAAsB,kBAA2B;QAChD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YACzB,iBAAiB;YACjB,OAAO;SACP;QAED,SAAS;QACT,IAAI,CAAC,KAAK,GAAG,mBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,kBAAkB,IAAI,cAAc,EAAE;YACzC,cAAc,EAAE,CAAC;SACjB;IACF,CAAC;IAEM,6CAAY,GAAnB;QACC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,gDAAe,GAAtB,UACC,oBAAqC,EACrC,iBAAwC,EACxC,cAA+B;QAHhC,iBA4CC;QAvCA,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACxB,sBAAsB;YACtB,OAAO;SACP;QACD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,WAAW,GAAG,oBAAW,CAAC,wBAAwB,EAAE,CAAC;QACzD,KAAsB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAA9B,IAAM,OAAO,oBAAA;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,EACtF,UAAC,IAAO,IAAK,OAAA,KAAI,CAAC,iBAAkB,CAAC,IAAI,CAAC,EAA7B,CAA6B,EAC1C,UAAC,SAAY,EAAE,YAAY,IAAK,OAAA,KAAI,CAAC,oBAAqB,CAAC,SAAS,EAAE,YAA0B,CAAC,EAAjE,CAAiE,CACjG,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;SAC7H;QAED,IAAI,oBAAW,CAAC,0BAA0B,EAAE,EAAE;YAC7C,IAAI,sBAAsB,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjE,4DAA4D;YAC5D,yBAAyB;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,UAAC,YAAwB;gBACtH,IAAI,CAAC,GAAG,IAAI,+BAAkB,CAAC,YAAY,CAAC,CAAC;gBAC7C,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;oBAC9C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC1B;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,qBAAqB;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAC,YAAwB;gBACvH,IAAI,CAAC,GAAG,IAAI,+BAAkB,CAAC,YAAY,CAAC,CAAC;gBAC7C,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;oBAC9C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBAC1B;YACF,CAAC,CAAC,CAAC,CAAC;YACJ,qBAAqB;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,UAAC,YAAwB;gBAC7H,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC;SACJ;IACF,CAAC;IACF,6BAAC;AAAD,CAAC,AAvFD,CAA+C,sBAAU,GAuFxD;AAvFY,wDAAsB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IframeUtils } from 'vs/base/browser/iframe';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nexport interface IStandardMouseMoveEventData {\n\tleftButton: boolean;\n\tposx: number;\n\tposy: number;\n}\n\nexport interface IEventMerger<R> {\n\t(lastEvent: R, currentEvent: MouseEvent): R;\n}\n\nexport interface IMouseMoveCallback<R> {\n\t(mouseMoveData: R): void;\n}\n\nexport interface IOnStopCallback {\n\t(): void;\n}\n\nexport function standardMouseMoveMerger(lastEvent: IStandardMouseMoveEventData, currentEvent: MouseEvent): IStandardMouseMoveEventData {\n\tlet ev = new StandardMouseEvent(currentEvent);\n\tev.preventDefault();\n\treturn {\n\t\tleftButton: ev.leftButton,\n\t\tposx: ev.posx,\n\t\tposy: ev.posy\n\t};\n}\n\nexport class GlobalMouseMoveMonitor<R> extends Disposable {\n\n\tprivate hooks: IDisposable[];\n\tprivate mouseMoveEventMerger: IEventMerger<R> | null;\n\tprivate mouseMoveCallback: IMouseMoveCallback<R> | null;\n\tprivate onStopCallback: IOnStopCallback | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = [];\n\t\tthis.mouseMoveEventMerger = null;\n\t\tthis.mouseMoveCallback = null;\n\t\tthis.onStopCallback = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.stopMonitoring(false);\n\t\tsuper.dispose();\n\t}\n\n\tpublic stopMonitoring(invokeStopCallback: boolean): void {\n\t\tif (!this.isMonitoring()) {\n\t\t\t// Not monitoring\n\t\t\treturn;\n\t\t}\n\n\t\t// Unhook\n\t\tthis.hooks = dispose(this.hooks);\n\t\tthis.mouseMoveEventMerger = null;\n\t\tthis.mouseMoveCallback = null;\n\t\tlet onStopCallback = this.onStopCallback;\n\t\tthis.onStopCallback = null;\n\n\t\tif (invokeStopCallback && onStopCallback) {\n\t\t\tonStopCallback();\n\t\t}\n\t}\n\n\tpublic isMonitoring() {\n\t\treturn this.hooks.length > 0;\n\t}\n\n\tpublic startMonitoring(\n\t\tmouseMoveEventMerger: IEventMerger<R>,\n\t\tmouseMoveCallback: IMouseMoveCallback<R>,\n\t\tonStopCallback: IOnStopCallback\n\t): void {\n\t\tif (this.isMonitoring()) {\n\t\t\t// I am already hooked\n\t\t\treturn;\n\t\t}\n\t\tthis.mouseMoveEventMerger = mouseMoveEventMerger;\n\t\tthis.mouseMoveCallback = mouseMoveCallback;\n\t\tthis.onStopCallback = onStopCallback;\n\n\t\tlet windowChain = IframeUtils.getSameOriginWindowChain();\n\t\tfor (const element of windowChain) {\n\t\t\tthis.hooks.push(dom.addDisposableThrottledListener(element.window.document, 'mousemove',\n\t\t\t\t(data: R) => this.mouseMoveCallback!(data),\n\t\t\t\t(lastEvent: R, currentEvent) => this.mouseMoveEventMerger!(lastEvent, currentEvent as MouseEvent)\n\t\t\t));\n\t\t\tthis.hooks.push(dom.addDisposableListener(element.window.document, 'mouseup', (e: MouseEvent) => this.stopMonitoring(true)));\n\t\t}\n\n\t\tif (IframeUtils.hasDifferentOriginAncestor()) {\n\t\t\tlet lastSameOriginAncestor = windowChain[windowChain.length - 1];\n\t\t\t// We might miss a mouse up if it happens outside the iframe\n\t\t\t// This one is for Chrome\n\t\t\tthis.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseout', (browserEvent: MouseEvent) => {\n\t\t\t\tlet e = new StandardMouseEvent(browserEvent);\n\t\t\t\tif (e.target.tagName.toLowerCase() === 'html') {\n\t\t\t\t\tthis.stopMonitoring(true);\n\t\t\t\t}\n\t\t\t}));\n\t\t\t// This one is for FF\n\t\t\tthis.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseover', (browserEvent: MouseEvent) => {\n\t\t\t\tlet e = new StandardMouseEvent(browserEvent);\n\t\t\t\tif (e.target.tagName.toLowerCase() === 'html') {\n\t\t\t\t\tthis.stopMonitoring(true);\n\t\t\t\t}\n\t\t\t}));\n\t\t\t// This one is for IE\n\t\t\tthis.hooks.push(dom.addDisposableListener(lastSameOriginAncestor.window.document.body, 'mouseleave', (browserEvent: MouseEvent) => {\n\t\t\t\tthis.stopMonitoring(true);\n\t\t\t}));\n\t\t}\n\t}\n}\n"]}]}