{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/checkbox/checkbox.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/checkbox/checkbox.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./checkbox\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar objects = require(\"vs/base/common/objects\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar defaultOpts = {\n    inputActiveOptionBorder: color_1.Color.fromHex('#007ACC')\n};\nvar CheckboxActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(CheckboxActionItem, _super);\n    function CheckboxActionItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disposables = [];\n        return _this;\n    }\n    CheckboxActionItem.prototype.render = function (container) {\n        var _this = this;\n        this.element = container;\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        this.checkbox = new Checkbox({\n            actionClassName: this._action.class,\n            isChecked: this._action.checked,\n            title: this._action.label\n        });\n        this.disposables.push(this.checkbox);\n        this.checkbox.onChange(function () { return _this._action.checked = _this.checkbox.checked; }, this, this.disposables);\n        this.element.appendChild(this.checkbox.domNode);\n    };\n    CheckboxActionItem.prototype.updateEnabled = function () {\n        if (this.checkbox) {\n            if (this.isEnabled()) {\n                this.checkbox.enable();\n            }\n            else {\n                this.checkbox.disable();\n            }\n        }\n    };\n    CheckboxActionItem.prototype.updateChecked = function () {\n        if (this.checkbox) {\n            this.checkbox.checked = this._action.checked;\n        }\n    };\n    CheckboxActionItem.prototype.dipsose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    return CheckboxActionItem;\n}(actionbar_1.BaseActionItem));\nexports.CheckboxActionItem = CheckboxActionItem;\nvar Checkbox = /** @class */ (function (_super) {\n    tslib_1.__extends(Checkbox, _super);\n    function Checkbox(opts) {\n        var _this = _super.call(this) || this;\n        _this._onChange = _this._register(new event_1.Emitter());\n        _this._onKeyDown = _this._register(new event_1.Emitter());\n        _this._opts = objects.deepClone(opts);\n        objects.mixin(_this._opts, defaultOpts, false);\n        _this._checked = _this._opts.isChecked;\n        _this.domNode = document.createElement('div');\n        _this.domNode.title = _this._opts.title;\n        _this.domNode.className = 'monaco-custom-checkbox ' + (_this._opts.actionClassName || '') + ' ' + (_this._checked ? 'checked' : 'unchecked');\n        _this.domNode.tabIndex = 0;\n        _this.domNode.setAttribute('role', 'checkbox');\n        _this.domNode.setAttribute('aria-checked', String(_this._checked));\n        _this.domNode.setAttribute('aria-label', _this._opts.title);\n        _this.applyStyles();\n        _this.onclick(_this.domNode, function (ev) {\n            _this.checked = !_this._checked;\n            _this._onChange.fire(false);\n            ev.preventDefault();\n        });\n        _this.onkeydown(_this.domNode, function (keyboardEvent) {\n            if (keyboardEvent.keyCode === keyCodes_1.KeyCode.Space || keyboardEvent.keyCode === keyCodes_1.KeyCode.Enter) {\n                _this.checked = !_this._checked;\n                _this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                return;\n            }\n            _this._onKeyDown.fire(keyboardEvent);\n        });\n        return _this;\n    }\n    Object.defineProperty(Checkbox.prototype, \"onChange\", {\n        get: function () { return this._onChange.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox.prototype, \"onKeyDown\", {\n        get: function () { return this._onKeyDown.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox.prototype, \"enabled\", {\n        get: function () {\n            return this.domNode.getAttribute('aria-disabled') !== 'true';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Checkbox.prototype.focus = function () {\n        this.domNode.focus();\n    };\n    Object.defineProperty(Checkbox.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (newIsChecked) {\n            this._checked = newIsChecked;\n            this.domNode.setAttribute('aria-checked', String(this._checked));\n            if (this._checked) {\n                this.domNode.classList.add('checked');\n            }\n            else {\n                this.domNode.classList.remove('checked');\n            }\n            this.applyStyles();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Checkbox.prototype.width = function () {\n        return 2 /*marginleft*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    };\n    Checkbox.prototype.style = function (styles) {\n        if (styles.inputActiveOptionBorder) {\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        }\n        this.applyStyles();\n    };\n    Checkbox.prototype.applyStyles = function () {\n        if (this.domNode) {\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\n        }\n    };\n    Checkbox.prototype.enable = function () {\n        this.domNode.tabIndex = 0;\n        this.domNode.setAttribute('aria-disabled', String(false));\n    };\n    Checkbox.prototype.disable = function () {\n        DOM.removeTabIndexAndUpdateFocus(this.domNode);\n        this.domNode.setAttribute('aria-disabled', String(true));\n    };\n    return Checkbox;\n}(widget_1.Widget));\nexports.Checkbox = Checkbox;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/checkbox/checkbox.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/checkbox/checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./checkbox';\nimport * as DOM from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport * as objects from 'vs/base/common/objects';\nimport { BaseActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nexport interface ICheckboxOpts extends ICheckboxStyles {\n\treadonly actionClassName?: string;\n\treadonly title: string;\n\treadonly isChecked: boolean;\n}\n\nexport interface ICheckboxStyles {\n\tinputActiveOptionBorder?: Color;\n}\n\nconst defaultOpts = {\n\tinputActiveOptionBorder: Color.fromHex('#007ACC')\n};\n\nexport class CheckboxActionItem extends BaseActionItem {\n\n\tprivate checkbox: Checkbox;\n\tprivate disposables: IDisposable[] = [];\n\n\trender(container: HTMLElement): void {\n\t\tthis.element = container;\n\n\t\tthis.disposables = dispose(this.disposables);\n\t\tthis.checkbox = new Checkbox({\n\t\t\tactionClassName: this._action.class,\n\t\t\tisChecked: this._action.checked,\n\t\t\ttitle: this._action.label\n\t\t});\n\t\tthis.disposables.push(this.checkbox);\n\t\tthis.checkbox.onChange(() => this._action.checked = this.checkbox.checked, this, this.disposables);\n\t\tthis.element.appendChild(this.checkbox.domNode);\n\t}\n\n\tupdateEnabled(): void {\n\t\tif (this.checkbox) {\n\t\t\tif (this.isEnabled()) {\n\t\t\t\tthis.checkbox.enable();\n\t\t\t} else {\n\t\t\t\tthis.checkbox.disable();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateChecked(): void {\n\t\tif (this.checkbox) {\n\t\t\tthis.checkbox.checked = this._action.checked;\n\t\t}\n\t}\n\n\tdipsose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n\n}\n\nexport class Checkbox extends Widget {\n\n\tprivate readonly _onChange = this._register(new Emitter<boolean>());\n\tget onChange(): Event<boolean /* via keyboard */> { return this._onChange.event; }\n\n\tprivate readonly _onKeyDown = this._register(new Emitter<IKeyboardEvent>());\n\tget onKeyDown(): Event<IKeyboardEvent> { return this._onKeyDown.event; }\n\n\tprivate readonly _opts: ICheckboxOpts;\n\treadonly domNode: HTMLElement;\n\n\tprivate _checked: boolean;\n\n\tconstructor(opts: ICheckboxOpts) {\n\t\tsuper();\n\n\t\tthis._opts = objects.deepClone(opts);\n\t\tobjects.mixin(this._opts, defaultOpts, false);\n\t\tthis._checked = this._opts.isChecked;\n\n\t\tthis.domNode = document.createElement('div');\n\t\tthis.domNode.title = this._opts.title;\n\t\tthis.domNode.className = 'monaco-custom-checkbox ' + (this._opts.actionClassName || '') + ' ' + (this._checked ? 'checked' : 'unchecked');\n\t\tthis.domNode.tabIndex = 0;\n\t\tthis.domNode.setAttribute('role', 'checkbox');\n\t\tthis.domNode.setAttribute('aria-checked', String(this._checked));\n\t\tthis.domNode.setAttribute('aria-label', this._opts.title);\n\n\t\tthis.applyStyles();\n\n\t\tthis.onclick(this.domNode, (ev) => {\n\t\t\tthis.checked = !this._checked;\n\t\t\tthis._onChange.fire(false);\n\t\t\tev.preventDefault();\n\t\t});\n\n\t\tthis.onkeydown(this.domNode, (keyboardEvent) => {\n\t\t\tif (keyboardEvent.keyCode === KeyCode.Space || keyboardEvent.keyCode === KeyCode.Enter) {\n\t\t\t\tthis.checked = !this._checked;\n\t\t\t\tthis._onChange.fire(true);\n\t\t\t\tkeyboardEvent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._onKeyDown.fire(keyboardEvent);\n\t\t});\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this.domNode.getAttribute('aria-disabled') !== 'true';\n\t}\n\n\tfocus(): void {\n\t\tthis.domNode.focus();\n\t}\n\n\tget checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tset checked(newIsChecked: boolean) {\n\t\tthis._checked = newIsChecked;\n\t\tthis.domNode.setAttribute('aria-checked', String(this._checked));\n\t\tif (this._checked) {\n\t\t\tthis.domNode.classList.add('checked');\n\t\t} else {\n\t\t\tthis.domNode.classList.remove('checked');\n\t\t}\n\n\t\tthis.applyStyles();\n\t}\n\n\twidth(): number {\n\t\treturn 2 /*marginleft*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n\t}\n\n\tstyle(styles: ICheckboxStyles): void {\n\t\tif (styles.inputActiveOptionBorder) {\n\t\t\tthis._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n\t\t}\n\t\tthis.applyStyles();\n\t}\n\n\tprotected applyStyles(): void {\n\t\tif (this.domNode) {\n\t\t\tthis.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\n\t\t}\n\t}\n\n\tenable(): void {\n\t\tthis.domNode.tabIndex = 0;\n\t\tthis.domNode.setAttribute('aria-disabled', String(false));\n\t}\n\n\tdisable(): void {\n\t\tDOM.removeTabIndexAndUpdateFocus(this.domNode);\n\t\tthis.domNode.setAttribute('aria-disabled', String(true));\n\t}\n}\n"]}]}