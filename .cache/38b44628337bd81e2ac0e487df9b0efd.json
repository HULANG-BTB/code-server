{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["define([\"require\", \"exports\", \"vs/platform/actions/common/actions\", \"vs/workbench/browser/actions/workspaceActions\", \"vs/workbench/contrib/issue/electron-browser/issueActions\", \"vs/workbench/electron-browser/actions/developerActions\", \"vs/workbench/electron-browser/actions/helpActions\", \"vs/workbench/electron-browser/actions/windowActions\"], function (require, exports, actions, workspaceActions_1, issueActions_1, developerActions_1, helpActions_1, windowActions_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const toSkip = [\n        developerActions_1.ToggleDevToolsAction.ID,\n        helpActions_1.OpenTwitterUrlAction.ID,\n        helpActions_1.OpenPrivacyStatementUrlAction.ID,\n        windowActions_1.ShowAboutDialogAction.ID,\n        issueActions_1.OpenProcessExplorer.ID,\n        helpActions_1.OpenRequestFeatureUrlAction.ID,\n        windowActions_1.NewWindowAction.ID,\n        windowActions_1.CloseCurrentWindowAction.ID,\n        workspaceActions_1.CloseWorkspaceAction.ID,\n        // Unfortunately referenced as a string\n        \"update.showCurrentReleaseNotes\",\n        \"workbench.action.openIssueReporter\",\n    ];\n    // Intercept appending menu items so we can skip items that won't work.\n    const originalAppend = actions.MenuRegistry.appendMenuItem.bind(actions.MenuRegistry);\n    actions.MenuRegistry.appendMenuItem = (id, item) => {\n        if (actions.isIMenuItem(item)) {\n            if (toSkip.indexOf(item.command.id) !== -1) {\n                // Skip instantiation\n                return {\n                    dispose: () => undefined,\n                };\n            }\n        }\n        return originalAppend(id, item);\n    };\n});\n",null]}