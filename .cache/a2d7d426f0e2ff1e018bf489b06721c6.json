{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\"], function (require, exports, nls) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const dotnetBuild = {\n        id: 'dotnetCore',\n        label: '.NET Core',\n        sort: 'NET Core',\n        autoDetect: false,\n        description: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n        content: [\n            '{',\n            '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n            '\\t// for the documentation about the tasks.json format',\n            '\\t\"version\": \"2.0.0\",',\n            '\\t\"tasks\": [',\n            '\\t\\t{',\n            '\\t\\t\\t\"label\": \"build\",',\n            '\\t\\t\\t\"command\": \"dotnet build\",',\n            '\\t\\t\\t\"type\": \"shell\",',\n            '\\t\\t\\t\"group\": \"build\",',\n            '\\t\\t\\t\"presentation\": {',\n            '\\t\\t\\t\\t\"reveal\": \"silent\"',\n            '\\t\\t\\t},',\n            '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n            '\\t\\t}',\n            '\\t]',\n            '}'\n        ].join('\\n')\n    };\n    const msbuild = {\n        id: 'msbuild',\n        label: 'MSBuild',\n        autoDetect: false,\n        description: nls.localize('msbuild', 'Executes the build target'),\n        content: [\n            '{',\n            '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n            '\\t// for the documentation about the tasks.json format',\n            '\\t\"version\": \"2.0.0\",',\n            '\\t\"tasks\": [',\n            '\\t\\t{',\n            '\\t\\t\\t\"label\": \"build\",',\n            '\\t\\t\\t\"type\": \"shell\",',\n            '\\t\\t\\t\"command\": \"msbuild\",',\n            '\\t\\t\\t\"args\": [',\n            '\\t\\t\\t\\t// Ask msbuild to generate full paths for file names.',\n            '\\t\\t\\t\\t\"/property:GenerateFullPaths=true\",',\n            '\\t\\t\\t\\t\"/t:build\"',\n            '\\t\\t\\t],',\n            '\\t\\t\\t\"group\": \"build\",',\n            '\\t\\t\\t\"presentation\": {',\n            '\\t\\t\\t\\t// Reveal the output only if unrecognized errors occur.',\n            '\\t\\t\\t\\t\"reveal\": \"silent\"',\n            '\\t\\t\\t},',\n            '\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n            '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n            '\\t\\t}',\n            '\\t]',\n            '}'\n        ].join('\\n')\n    };\n    const command = {\n        id: 'externalCommand',\n        label: 'Others',\n        autoDetect: false,\n        description: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n        content: [\n            '{',\n            '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n            '\\t// for the documentation about the tasks.json format',\n            '\\t\"version\": \"2.0.0\",',\n            '\\t\"tasks\": [',\n            '\\t\\t{',\n            '\\t\\t\\t\"label\": \"echo\",',\n            '\\t\\t\\t\"type\": \"shell\",',\n            '\\t\\t\\t\"command\": \"echo Hello\"',\n            '\\t\\t}',\n            '\\t]',\n            '}'\n        ].join('\\n')\n    };\n    const maven = {\n        id: 'maven',\n        label: 'maven',\n        sort: 'MVN',\n        autoDetect: false,\n        description: nls.localize('Maven', 'Executes common maven commands'),\n        content: [\n            '{',\n            '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n            '\\t// for the documentation about the tasks.json format',\n            '\\t\"version\": \"2.0.0\",',\n            '\\t\"tasks\": [',\n            '\\t\\t{',\n            '\\t\\t\\t\"label\": \"verify\",',\n            '\\t\\t\\t\"type\": \"shell\",',\n            '\\t\\t\\t\"command\": \"mvn -B verify\",',\n            '\\t\\t\\t\"group\": \"build\"',\n            '\\t\\t},',\n            '\\t\\t{',\n            '\\t\\t\\t\"label\": \"test\",',\n            '\\t\\t\\t\"type\": \"shell\",',\n            '\\t\\t\\t\"command\": \"mvn -B test\",',\n            '\\t\\t\\t\"group\": \"test\"',\n            '\\t\\t}',\n            '\\t]',\n            '}'\n        ].join('\\n')\n    };\n    let _templates = null;\n    function getTemplates() {\n        if (!_templates) {\n            _templates = [dotnetBuild, msbuild, maven].sort((a, b) => {\n                return (a.sort || a.label).localeCompare(b.sort || b.label);\n            });\n            _templates.push(command);\n        }\n        return _templates;\n    }\n    exports.getTemplates = getTemplates;\n});\n/** Version 1.0 templates\n *\nconst gulp: TaskEntry = {\n    id: 'gulp',\n    label: 'Gulp',\n    autoDetect: true,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"gulp\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"--no-color\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst grunt: TaskEntry = {\n    id: 'grunt',\n    label: 'Grunt',\n    autoDetect: true,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"grunt\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"--no-color\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst npm: TaskEntry = {\n    id: 'npm',\n    label: 'npm',\n    sort: 'NPM',\n    autoDetect: false,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"npm\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"showOutput\": \"always\",',\n        '\\t\"suppressTaskName\": true,',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"install\",',\n        '\\t\\t\\t\"args\": [\"install\"]',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"update\",',\n        '\\t\\t\\t\"args\": [\"update\"]',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"test\",',\n        '\\t\\t\\t\"args\": [\"run\", \"test\"]',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst tscConfig: TaskEntry = {\n    id: 'tsc.config',\n    label: 'TypeScript - tsconfig.json',\n    autoDetect: false,\n    description: nls.localize('tsc.config', 'Compiles a TypeScript project'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"tsc\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"-p\", \".\"],',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"problemMatcher\": \"$tsc\"',\n        '}'\n    ].join('\\n')\n};\n\nconst tscWatch: TaskEntry = {\n    id: 'tsc.watch',\n    label: 'TypeScript - Watch Mode',\n    autoDetect: false,\n    description: nls.localize('tsc.watch', 'Compiles a TypeScript project in watch mode'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"tsc\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"-w\", \"-p\", \".\"],',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"isBackground\": true,',\n        '\\t\"problemMatcher\": \"$tsc-watch\"',\n        '}'\n    ].join('\\n')\n};\n\nconst dotnetBuild: TaskEntry = {\n    id: 'dotnetCore',\n    label: '.NET Core',\n    sort: 'NET Core',\n    autoDetect: false,\n    description: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"dotnet\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [],',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"build\",',\n        '\\t\\t\\t\"args\": [ ],',\n        '\\t\\t\\t\"isBuildCommand\": true,',\n        '\\t\\t\\t\"showOutput\": \"silent\",',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n    id: 'msbuild',\n    label: 'MSBuild',\n    autoDetect: false,\n    description: nls.localize('msbuild', 'Executes the build target'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"msbuild\",',\n        '\\t\"args\": [',\n        '\\t\\t// Ask msbuild to generate full paths for file names.',\n        '\\t\\t\"/property:GenerateFullPaths=true\"',\n        '\\t],',\n        '\\t\"taskSelector\": \"/t:\",',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"build\",',\n        '\\t\\t\\t// Show the output window only if unrecognized errors occur.',\n        '\\t\\t\\t\"showOutput\": \"silent\",',\n        '\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst command: TaskEntry = {\n    id: 'externalCommand',\n    label: 'Others',\n    autoDetect: false,\n    description: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"echo\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"Hello World\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst maven: TaskEntry = {\n    id: 'maven',\n    label: 'maven',\n    sort: 'MVN',\n    autoDetect: false,\n    description: nls.localize('Maven', 'Executes common maven commands'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"mvn\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"showOutput\": \"always\",',\n        '\\t\"suppressTaskName\": true,',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"verify\",',\n        '\\t\\t\\t\"args\": [\"-B\", \"verify\"],',\n        '\\t\\t\\t\"isBuildCommand\": true',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"test\",',\n        '\\t\\t\\t\"args\": [\"-B\", \"test\"],',\n        '\\t\\t\\t\"isTestCommand\": true',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nexport let templates: TaskEntry[] = [gulp, grunt, tscConfig, tscWatch, dotnetBuild, msbuild, npm, maven].sort((a, b) => {\n    return (a.sort || a.label).localeCompare(b.sort || b.label);\n});\ntemplates.push(command);\n*/\n",null]}