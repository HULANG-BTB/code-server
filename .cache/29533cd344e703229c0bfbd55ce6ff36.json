{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/parts/quickopen/browser/quickOpenViewer.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/parts/quickopen/browser/quickOpenViewer.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"vs/base/common/types\");\nvar DataSource = /** @class */ (function () {\n    function DataSource(arg) {\n        this.modelProvider = types_1.isFunction(arg.getModel) ? arg : { getModel: function () { return arg; } };\n    }\n    DataSource.prototype.getId = function (tree, element) {\n        if (!element) {\n            return null;\n        }\n        var model = this.modelProvider.getModel();\n        return model === element ? '__root__' : model.dataSource.getId(element);\n    };\n    DataSource.prototype.hasChildren = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        return !!(model && model === element && model.entries.length > 0);\n    };\n    DataSource.prototype.getChildren = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        return Promise.resolve(model === element ? model.entries : []);\n    };\n    DataSource.prototype.getParent = function (tree, element) {\n        return Promise.resolve(null);\n    };\n    return DataSource;\n}());\nexports.DataSource = DataSource;\nvar AccessibilityProvider = /** @class */ (function () {\n    function AccessibilityProvider(modelProvider) {\n        this.modelProvider = modelProvider;\n    }\n    AccessibilityProvider.prototype.getAriaLabel = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        return model.accessibilityProvider ? model.accessibilityProvider.getAriaLabel(element) : null;\n    };\n    AccessibilityProvider.prototype.getPosInSet = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        var i = 0;\n        if (model.filter) {\n            for (var _i = 0, _a = model.entries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (model.filter.isVisible(entry)) {\n                    i++;\n                }\n                if (entry === element) {\n                    break;\n                }\n            }\n        }\n        else {\n            i = model.entries.indexOf(element) + 1;\n        }\n        return String(i);\n    };\n    AccessibilityProvider.prototype.getSetSize = function () {\n        var model = this.modelProvider.getModel();\n        var n = 0;\n        if (model.filter) {\n            for (var _i = 0, _a = model.entries; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                if (model.filter.isVisible(entry)) {\n                    n++;\n                }\n            }\n        }\n        else {\n            n = model.entries.length;\n        }\n        return String(n);\n    };\n    return AccessibilityProvider;\n}());\nexports.AccessibilityProvider = AccessibilityProvider;\nvar Filter = /** @class */ (function () {\n    function Filter(modelProvider) {\n        this.modelProvider = modelProvider;\n    }\n    Filter.prototype.isVisible = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        if (!model.filter) {\n            return true;\n        }\n        return model.filter.isVisible(element);\n    };\n    return Filter;\n}());\nexports.Filter = Filter;\nvar Renderer = /** @class */ (function () {\n    function Renderer(modelProvider, styles) {\n        this.modelProvider = modelProvider;\n        this.styles = styles;\n    }\n    Renderer.prototype.updateStyles = function (styles) {\n        this.styles = styles;\n    };\n    Renderer.prototype.getHeight = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        return model.renderer.getHeight(element);\n    };\n    Renderer.prototype.getTemplateId = function (tree, element) {\n        var model = this.modelProvider.getModel();\n        return model.renderer.getTemplateId(element);\n    };\n    Renderer.prototype.renderTemplate = function (tree, templateId, container) {\n        var model = this.modelProvider.getModel();\n        return model.renderer.renderTemplate(templateId, container, this.styles);\n    };\n    Renderer.prototype.renderElement = function (tree, element, templateId, templateData) {\n        var model = this.modelProvider.getModel();\n        model.renderer.renderElement(element, templateId, templateData, this.styles);\n    };\n    Renderer.prototype.disposeTemplate = function (tree, templateId, templateData) {\n        var model = this.modelProvider.getModel();\n        model.renderer.disposeTemplate(templateId, templateData);\n    };\n    return Renderer;\n}());\nexports.Renderer = Renderer;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/parts/quickopen/browser/quickOpenViewer.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/parts/quickopen/browser/quickOpenViewer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFunction } from 'vs/base/common/types';\nimport { ITree, IRenderer, IFilter, IDataSource, IAccessibilityProvider } from 'vs/base/parts/tree/browser/tree';\nimport { IModel } from 'vs/base/parts/quickopen/common/quickOpen';\nimport { IQuickOpenStyles } from 'vs/base/parts/quickopen/browser/quickOpenWidget';\n\nexport interface IModelProvider {\n\tgetModel<T>(): IModel<T>;\n}\n\nexport class DataSource implements IDataSource {\n\n\tprivate modelProvider: IModelProvider;\n\n\tconstructor(model: IModel<any>);\n\tconstructor(modelProvider: IModelProvider);\n\tconstructor(arg: any) {\n\t\tthis.modelProvider = isFunction(arg.getModel) ? arg : { getModel: () => arg };\n\t}\n\n\tgetId(tree: ITree, element: any): string {\n\t\tif (!element) {\n\t\t\treturn null!;\n\t\t}\n\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model === element ? '__root__' : model.dataSource.getId(element);\n\t}\n\n\thasChildren(tree: ITree, element: any): boolean {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn !!(model && model === element && model.entries.length > 0);\n\t}\n\n\tgetChildren(tree: ITree, element: any): Promise<any[]> {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn Promise.resolve(model === element ? model.entries : []);\n\t}\n\n\tgetParent(tree: ITree, element: any): Promise<any> {\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class AccessibilityProvider implements IAccessibilityProvider {\n\tconstructor(private modelProvider: IModelProvider) { }\n\n\tgetAriaLabel(tree: ITree, element: any): string | null {\n\t\tconst model = this.modelProvider.getModel();\n\n\t\treturn model.accessibilityProvider ? model.accessibilityProvider.getAriaLabel(element) : null;\n\t}\n\n\tgetPosInSet(tree: ITree, element: any): string {\n\t\tconst model = this.modelProvider.getModel();\n\t\tlet i = 0;\n\t\tif (model.filter) {\n\t\t\tfor (const entry of model.entries) {\n\t\t\t\tif (model.filter.isVisible(entry)) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif (entry === element) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ti = model.entries.indexOf(element) + 1;\n\t\t}\n\t\treturn String(i);\n\t}\n\n\tgetSetSize(): string {\n\t\tconst model = this.modelProvider.getModel();\n\t\tlet n = 0;\n\t\tif (model.filter) {\n\t\t\tfor (const entry of model.entries) {\n\t\t\t\tif (model.filter.isVisible(entry)) {\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tn = model.entries.length;\n\t\t}\n\t\treturn String(n);\n\t}\n}\n\nexport class Filter implements IFilter {\n\n\tconstructor(private modelProvider: IModelProvider) { }\n\n\tisVisible(tree: ITree, element: any): boolean {\n\t\tconst model = this.modelProvider.getModel();\n\n\t\tif (!model.filter) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn model.filter.isVisible(element);\n\t}\n}\n\nexport class Renderer implements IRenderer {\n\tprivate styles: IQuickOpenStyles;\n\n\tconstructor(private modelProvider: IModelProvider, styles: IQuickOpenStyles) {\n\t\tthis.styles = styles;\n\t}\n\n\tupdateStyles(styles: IQuickOpenStyles): void {\n\t\tthis.styles = styles;\n\t}\n\n\tgetHeight(tree: ITree, element: any): number {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.getHeight(element);\n\t}\n\n\tgetTemplateId(tree: ITree, element: any): string {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.getTemplateId(element);\n\t}\n\n\trenderTemplate(tree: ITree, templateId: string, container: HTMLElement): any {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.renderTemplate(templateId, container, this.styles);\n\t}\n\n\trenderElement(tree: ITree, element: any, templateId: string, templateData: any): void {\n\t\tconst model = this.modelProvider.getModel();\n\t\tmodel.renderer.renderElement(element, templateId, templateData, this.styles);\n\t}\n\n\tdisposeTemplate(tree: ITree, templateId: string, templateData: any): void {\n\t\tconst model = this.modelProvider.getModel();\n\t\tmodel.renderer.disposeTemplate(templateId, templateData);\n\t}\n}\n"]}]}