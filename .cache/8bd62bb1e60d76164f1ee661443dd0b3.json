{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionWidget.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\ndefine([\"require\", \"exports\", \"vs/base/browser/dom\", \"vs/base/common/actions\", \"vs/base/common/errors\", \"vs/base/common/event\", \"vs/editor/common/core/position\", \"vs/editor/common/editorCommon\"], function (require, exports, dom_1, actions_1, errors_1, event_1, position_1, editorCommon_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class CodeActionContextMenu {\n        constructor(_editor, _contextMenuService, _onApplyCodeAction) {\n            this._editor = _editor;\n            this._contextMenuService = _contextMenuService;\n            this._onApplyCodeAction = _onApplyCodeAction;\n            this._onDidExecuteCodeAction = new event_1.Emitter();\n            this.onDidExecuteCodeAction = this._onDidExecuteCodeAction.event;\n        }\n        show(actionsToShow, at) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const codeActions = yield actionsToShow;\n                if (!this._editor.getDomNode()) {\n                    // cancel when editor went off-dom\n                    return Promise.reject(errors_1.canceled());\n                }\n                this._visible = true;\n                const actions = codeActions.actions.map(action => this.codeActionToAction(action));\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => {\n                        if (position_1.Position.isIPosition(at)) {\n                            at = this._toCoords(at);\n                        }\n                        return at || { x: 0, y: 0 };\n                    },\n                    getActions: () => actions,\n                    onHide: () => {\n                        this._visible = false;\n                        this._editor.focus();\n                    },\n                    autoSelectFirstItem: true\n                });\n            });\n        }\n        codeActionToAction(action) {\n            const id = action.command ? action.command.id : action.title;\n            const title = action.title;\n            return new actions_1.Action(id, title, undefined, true, () => this._onApplyCodeAction(action)\n                .finally(() => this._onDidExecuteCodeAction.fire(undefined)));\n        }\n        get isVisible() {\n            return this._visible;\n        }\n        _toCoords(position) {\n            if (!this._editor.hasModel()) {\n                return { x: 0, y: 0 };\n            }\n            this._editor.revealPosition(position, editorCommon_1.ScrollType.Immediate);\n            this._editor.render();\n            // Translate to absolute editor position\n            const cursorCoords = this._editor.getScrolledVisiblePosition(position);\n            const editorCoords = dom_1.getDomNodePagePosition(this._editor.getDomNode());\n            const x = editorCoords.left + cursorCoords.left;\n            const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n            return { x, y };\n        }\n    }\n    exports.CodeActionContextMenu = CodeActionContextMenu;\n});\n",null]}