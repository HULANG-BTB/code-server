{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/button/button.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/button/button.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./button\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar color_1 = require(\"vs/base/common/color\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar touch_1 = require(\"vs/base/browser/touch\");\nvar defaultOptions = {\n    buttonBackground: color_1.Color.fromHex('#0E639C'),\n    buttonHoverBackground: color_1.Color.fromHex('#006BB3'),\n    buttonForeground: color_1.Color.white\n};\nvar Button = /** @class */ (function (_super) {\n    tslib_1.__extends(Button, _super);\n    function Button(container, options) {\n        var _this = _super.call(this) || this;\n        _this._onDidClick = _this._register(new event_1.Emitter());\n        _this.options = options || Object.create(null);\n        objects_1.mixin(_this.options, defaultOptions, false);\n        _this.buttonBackground = _this.options.buttonBackground;\n        _this.buttonHoverBackground = _this.options.buttonHoverBackground;\n        _this.buttonForeground = _this.options.buttonForeground;\n        _this.buttonBorder = _this.options.buttonBorder;\n        _this._element = document.createElement('a');\n        DOM.addClass(_this._element, 'monaco-button');\n        _this._element.tabIndex = 0;\n        _this._element.setAttribute('role', 'button');\n        container.appendChild(_this._element);\n        touch_1.Gesture.addTarget(_this._element);\n        [DOM.EventType.CLICK, touch_1.EventType.Tap].forEach(function (eventType) {\n            _this._register(DOM.addDisposableListener(_this._element, eventType, function (e) {\n                if (!_this.enabled) {\n                    DOM.EventHelper.stop(e);\n                    return;\n                }\n                _this._onDidClick.fire(e);\n            }));\n        });\n        _this._register(DOM.addDisposableListener(_this._element, DOM.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            var eventHandled = false;\n            if (_this.enabled && event.equals(keyCodes_1.KeyCode.Enter) || event.equals(keyCodes_1.KeyCode.Space)) {\n                _this._onDidClick.fire(e);\n                eventHandled = true;\n            }\n            else if (event.equals(keyCodes_1.KeyCode.Escape)) {\n                _this._element.blur();\n                eventHandled = true;\n            }\n            if (eventHandled) {\n                DOM.EventHelper.stop(event, true);\n            }\n        }));\n        _this._register(DOM.addDisposableListener(_this._element, DOM.EventType.MOUSE_OVER, function (e) {\n            if (!DOM.hasClass(_this._element, 'disabled')) {\n                _this.setHoverBackground();\n            }\n        }));\n        _this._register(DOM.addDisposableListener(_this._element, DOM.EventType.MOUSE_OUT, function (e) {\n            _this.applyStyles(); // restore standard styles\n        }));\n        // Also set hover background when button is focused for feedback\n        _this.focusTracker = _this._register(DOM.trackFocus(_this._element));\n        _this._register(_this.focusTracker.onDidFocus(function () { return _this.setHoverBackground(); }));\n        _this._register(_this.focusTracker.onDidBlur(function () { return _this.applyStyles(); })); // restore standard styles\n        _this.applyStyles();\n        return _this;\n    }\n    Object.defineProperty(Button.prototype, \"onDidClick\", {\n        get: function () { return this._onDidClick.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Button.prototype.setHoverBackground = function () {\n        var hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n        if (hoverBackground) {\n            this._element.style.backgroundColor = hoverBackground;\n        }\n    };\n    Button.prototype.style = function (styles) {\n        this.buttonForeground = styles.buttonForeground;\n        this.buttonBackground = styles.buttonBackground;\n        this.buttonHoverBackground = styles.buttonHoverBackground;\n        this.buttonBorder = styles.buttonBorder;\n        this.applyStyles();\n    };\n    Button.prototype.applyStyles = function () {\n        if (this._element) {\n            var background = this.buttonBackground ? this.buttonBackground.toString() : null;\n            var foreground = this.buttonForeground ? this.buttonForeground.toString() : null;\n            var border = this.buttonBorder ? this.buttonBorder.toString() : null;\n            this._element.style.color = foreground;\n            this._element.style.backgroundColor = background;\n            this._element.style.borderWidth = border ? '1px' : null;\n            this._element.style.borderStyle = border ? 'solid' : null;\n            this._element.style.borderColor = border;\n        }\n    };\n    Object.defineProperty(Button.prototype, \"element\", {\n        get: function () {\n            return this._element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Button.prototype, \"label\", {\n        set: function (value) {\n            if (!DOM.hasClass(this._element, 'monaco-text-button')) {\n                DOM.addClass(this._element, 'monaco-text-button');\n            }\n            this._element.textContent = value;\n            if (this.options.title) {\n                this._element.title = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Button.prototype, \"icon\", {\n        set: function (iconClassName) {\n            DOM.addClass(this._element, iconClassName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Button.prototype, \"enabled\", {\n        get: function () {\n            return !DOM.hasClass(this._element, 'disabled');\n        },\n        set: function (value) {\n            if (value) {\n                DOM.removeClass(this._element, 'disabled');\n                this._element.setAttribute('aria-disabled', String(false));\n                this._element.tabIndex = 0;\n            }\n            else {\n                DOM.addClass(this._element, 'disabled');\n                this._element.setAttribute('aria-disabled', String(true));\n                DOM.removeTabIndexAndUpdateFocus(this._element);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Button.prototype.focus = function () {\n        this._element.focus();\n    };\n    return Button;\n}(lifecycle_1.Disposable));\nexports.Button = Button;\nvar ButtonGroup = /** @class */ (function (_super) {\n    tslib_1.__extends(ButtonGroup, _super);\n    function ButtonGroup(container, count, options) {\n        var _this = _super.call(this) || this;\n        _this._buttons = [];\n        _this.create(container, count, options);\n        return _this;\n    }\n    Object.defineProperty(ButtonGroup.prototype, \"buttons\", {\n        get: function () {\n            return this._buttons;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ButtonGroup.prototype.create = function (container, count, options) {\n        var _this = this;\n        var _loop_1 = function (index) {\n            var button = this_1._register(new Button(container, options));\n            this_1._buttons.push(button);\n            // Implement keyboard access in buttons if there are multiple\n            if (count > 1) {\n                this_1._register(DOM.addDisposableListener(button.element, DOM.EventType.KEY_DOWN, function (e) {\n                    var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n                    var eventHandled = true;\n                    // Next / Previous Button\n                    var buttonIndexToFocus;\n                    if (event.equals(keyCodes_1.KeyCode.LeftArrow)) {\n                        buttonIndexToFocus = index > 0 ? index - 1 : _this._buttons.length - 1;\n                    }\n                    else if (event.equals(keyCodes_1.KeyCode.RightArrow)) {\n                        buttonIndexToFocus = index === _this._buttons.length - 1 ? 0 : index + 1;\n                    }\n                    else {\n                        eventHandled = false;\n                    }\n                    if (eventHandled && typeof buttonIndexToFocus === 'number') {\n                        _this._buttons[buttonIndexToFocus].focus();\n                        DOM.EventHelper.stop(e, true);\n                    }\n                }));\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < count; index++) {\n            _loop_1(index);\n        }\n    };\n    return ButtonGroup;\n}(lifecycle_1.Disposable));\nexports.ButtonGroup = ButtonGroup;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/button/button.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/button/button.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,2BAAyB;AACzB,yCAA2C;AAC3C,+DAAsE;AACtE,oDAAkD;AAClD,8CAA6C;AAC7C,kDAA+C;AAC/C,8CAAmE;AACnE,sDAAsD;AACtD,+CAA2D;AAa3D,IAAM,cAAc,GAAkB;IACrC,gBAAgB,EAAE,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC;IAC1C,qBAAqB,EAAE,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC;IAC/C,gBAAgB,EAAE,aAAK,CAAC,KAAK;CAC7B,CAAC;AAEF;IAA4B,kCAAU;IAerC,gBAAY,SAAsB,EAAE,OAAwB;QAA5D,YACC,iBAAO,SA8DP;QApEO,iBAAW,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAO,CAAC,CAAC;QAQxD,KAAI,CAAC,OAAO,GAAG,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9C,eAAK,CAAC,KAAI,CAAC,OAAO,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QAE3C,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACtD,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAChE,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACtD,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAE9C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC5C,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC7C,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC3B,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE7C,SAAS,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,eAAO,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAEjC,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,iBAAS,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS;YACrD,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAA,CAAC;gBACnE,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE;oBAClB,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxB,OAAO;iBACP;gBAED,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAA,CAAC;YAChF,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IAAI,KAAI,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,KAAK,CAAC,EAAE;gBAC/E,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,YAAY,GAAG,IAAI,CAAC;aACpB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,MAAM,CAAC,EAAE;gBACxC,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACrB,YAAY,GAAG,IAAI,CAAC;aACpB;YAED,IAAI,YAAY,EAAE;gBACjB,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAClC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,UAAA,CAAC;YAClF,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE;gBAC7C,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC1B;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,UAAA,CAAC;YACjF,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,0BAA0B;QAC/C,CAAC,CAAC,CAAC,CAAC;QAEJ,gEAAgE;QAChE,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClE,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,EAAE,EAAzB,CAAyB,CAAC,CAAC,CAAC;QAC9E,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC,CAAC,CAAC,0BAA0B;QAEjG,KAAI,CAAC,WAAW,EAAE,CAAC;;IACpB,CAAC;IAnED,sBAAI,8BAAU;aAAd,cAAqC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAqE7D,mCAAkB,GAA1B;QACC,IAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAClG,IAAI,eAAe,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;SACtD;IACF,CAAC;IAED,sBAAK,GAAL,UAAM,MAAqB;QAC1B,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAEO,4BAAW,GAAnB;QACC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACnF,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACnF,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAEvE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC;YAEjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;SACzC;IACF,CAAC;IAED,sBAAI,2BAAO;aAAX;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,yBAAK;aAAT,UAAU,KAAa;YACtB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,oBAAoB,CAAC,EAAE;gBACvD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YAClC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;aAC5B;QACF,CAAC;;;OAAA;IAED,sBAAI,wBAAI;aAAR,UAAS,aAAqB;YAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAI,2BAAO;aAYX;YACC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACjD,CAAC;aAdD,UAAY,KAAc;YACzB,IAAI,KAAK,EAAE;gBACV,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3D,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACN,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1D,GAAG,CAAC,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;QACF,CAAC;;;OAAA;IAMD,sBAAK,GAAL;QACC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IACF,aAAC;AAAD,CAAC,AApJD,CAA4B,sBAAU,GAoJrC;AApJY,wBAAM;AAsJnB;IAAiC,uCAAU;IAG1C,qBAAY,SAAsB,EAAE,KAAa,EAAE,OAAwB;QAA3E,YACC,iBAAO,SAGP;QANO,cAAQ,GAAa,EAAE,CAAC;QAK/B,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;IACxC,CAAC;IAED,sBAAI,gCAAO;aAAX;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;;;OAAA;IAEO,4BAAM,GAAd,UAAe,SAAsB,EAAE,KAAa,EAAE,OAAwB;QAA9E,iBA6BC;gCA5BS,KAAK;YACb,IAAM,MAAM,GAAG,OAAK,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;YAC9D,OAAK,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,6DAA6D;YAC7D,IAAI,KAAK,GAAG,CAAC,EAAE;gBACd,OAAK,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAA,CAAC;oBACjF,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,IAAI,YAAY,GAAG,IAAI,CAAC;oBAExB,yBAAyB;oBACzB,IAAI,kBAAsC,CAAC;oBAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,EAAE;wBACpC,kBAAkB,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;qBACtE;yBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,UAAU,CAAC,EAAE;wBAC5C,kBAAkB,GAAG,KAAK,KAAK,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;qBACxE;yBAAM;wBACN,YAAY,GAAG,KAAK,CAAC;qBACrB;oBAED,IAAI,YAAY,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;wBAC3D,KAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAC;wBAC1C,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;qBAC9B;gBAEF,CAAC,CAAC,CAAC,CAAC;aACJ;;;QA1BF,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE;oBAAjC,KAAK;SA2Bb;IACF,CAAC;IACF,kBAAC;AAAD,CAAC,AA3CD,CAAiC,sBAAU,GA2C1C;AA3CY,kCAAW","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./button';\nimport * as DOM from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Color } from 'vs/base/common/color';\nimport { mixin } from 'vs/base/common/objects';\nimport { Event as BaseEvent, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Gesture, EventType } from 'vs/base/browser/touch';\n\nexport interface IButtonOptions extends IButtonStyles {\n\ttitle?: boolean;\n}\n\nexport interface IButtonStyles {\n\tbuttonBackground?: Color;\n\tbuttonHoverBackground?: Color;\n\tbuttonForeground?: Color;\n\tbuttonBorder?: Color;\n}\n\nconst defaultOptions: IButtonStyles = {\n\tbuttonBackground: Color.fromHex('#0E639C'),\n\tbuttonHoverBackground: Color.fromHex('#006BB3'),\n\tbuttonForeground: Color.white\n};\n\nexport class Button extends Disposable {\n\n\tprivate _element: HTMLElement;\n\tprivate options: IButtonOptions;\n\n\tprivate buttonBackground: Color | undefined;\n\tprivate buttonHoverBackground: Color | undefined;\n\tprivate buttonForeground: Color | undefined;\n\tprivate buttonBorder: Color | undefined;\n\n\tprivate _onDidClick = this._register(new Emitter<any>());\n\tget onDidClick(): BaseEvent<Event> { return this._onDidClick.event; }\n\n\tprivate focusTracker: DOM.IFocusTracker;\n\n\tconstructor(container: HTMLElement, options?: IButtonOptions) {\n\t\tsuper();\n\n\t\tthis.options = options || Object.create(null);\n\t\tmixin(this.options, defaultOptions, false);\n\n\t\tthis.buttonBackground = this.options.buttonBackground;\n\t\tthis.buttonHoverBackground = this.options.buttonHoverBackground;\n\t\tthis.buttonForeground = this.options.buttonForeground;\n\t\tthis.buttonBorder = this.options.buttonBorder;\n\n\t\tthis._element = document.createElement('a');\n\t\tDOM.addClass(this._element, 'monaco-button');\n\t\tthis._element.tabIndex = 0;\n\t\tthis._element.setAttribute('role', 'button');\n\n\t\tcontainer.appendChild(this._element);\n\n\t\tGesture.addTarget(this._element);\n\n\t\t[DOM.EventType.CLICK, EventType.Tap].forEach(eventType => {\n\t\t\tthis._register(DOM.addDisposableListener(this._element, eventType, e => {\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\tDOM.EventHelper.stop(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._onDidClick.fire(e);\n\t\t\t}));\n\t\t});\n\n\t\tthis._register(DOM.addDisposableListener(this._element, DOM.EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tlet eventHandled = false;\n\t\t\tif (this.enabled && event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tthis._onDidClick.fire(e);\n\t\t\t\teventHandled = true;\n\t\t\t} else if (event.equals(KeyCode.Escape)) {\n\t\t\t\tthis._element.blur();\n\t\t\t\teventHandled = true;\n\t\t\t}\n\n\t\t\tif (eventHandled) {\n\t\t\t\tDOM.EventHelper.stop(event, true);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(this._element, DOM.EventType.MOUSE_OVER, e => {\n\t\t\tif (!DOM.hasClass(this._element, 'disabled')) {\n\t\t\t\tthis.setHoverBackground();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(this._element, DOM.EventType.MOUSE_OUT, e => {\n\t\t\tthis.applyStyles(); // restore standard styles\n\t\t}));\n\n\t\t// Also set hover background when button is focused for feedback\n\t\tthis.focusTracker = this._register(DOM.trackFocus(this._element));\n\t\tthis._register(this.focusTracker.onDidFocus(() => this.setHoverBackground()));\n\t\tthis._register(this.focusTracker.onDidBlur(() => this.applyStyles())); // restore standard styles\n\n\t\tthis.applyStyles();\n\t}\n\n\tprivate setHoverBackground(): void {\n\t\tconst hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n\t\tif (hoverBackground) {\n\t\t\tthis._element.style.backgroundColor = hoverBackground;\n\t\t}\n\t}\n\n\tstyle(styles: IButtonStyles): void {\n\t\tthis.buttonForeground = styles.buttonForeground;\n\t\tthis.buttonBackground = styles.buttonBackground;\n\t\tthis.buttonHoverBackground = styles.buttonHoverBackground;\n\t\tthis.buttonBorder = styles.buttonBorder;\n\n\t\tthis.applyStyles();\n\t}\n\n\tprivate applyStyles(): void {\n\t\tif (this._element) {\n\t\t\tconst background = this.buttonBackground ? this.buttonBackground.toString() : null;\n\t\t\tconst foreground = this.buttonForeground ? this.buttonForeground.toString() : null;\n\t\t\tconst border = this.buttonBorder ? this.buttonBorder.toString() : null;\n\n\t\t\tthis._element.style.color = foreground;\n\t\t\tthis._element.style.backgroundColor = background;\n\n\t\t\tthis._element.style.borderWidth = border ? '1px' : null;\n\t\t\tthis._element.style.borderStyle = border ? 'solid' : null;\n\t\t\tthis._element.style.borderColor = border;\n\t\t}\n\t}\n\n\tget element(): HTMLElement {\n\t\treturn this._element;\n\t}\n\n\tset label(value: string) {\n\t\tif (!DOM.hasClass(this._element, 'monaco-text-button')) {\n\t\t\tDOM.addClass(this._element, 'monaco-text-button');\n\t\t}\n\t\tthis._element.textContent = value;\n\t\tif (this.options.title) {\n\t\t\tthis._element.title = value;\n\t\t}\n\t}\n\n\tset icon(iconClassName: string) {\n\t\tDOM.addClass(this._element, iconClassName);\n\t}\n\n\tset enabled(value: boolean) {\n\t\tif (value) {\n\t\t\tDOM.removeClass(this._element, 'disabled');\n\t\t\tthis._element.setAttribute('aria-disabled', String(false));\n\t\t\tthis._element.tabIndex = 0;\n\t\t} else {\n\t\t\tDOM.addClass(this._element, 'disabled');\n\t\t\tthis._element.setAttribute('aria-disabled', String(true));\n\t\t\tDOM.removeTabIndexAndUpdateFocus(this._element);\n\t\t}\n\t}\n\n\tget enabled() {\n\t\treturn !DOM.hasClass(this._element, 'disabled');\n\t}\n\n\tfocus(): void {\n\t\tthis._element.focus();\n\t}\n}\n\nexport class ButtonGroup extends Disposable {\n\tprivate _buttons: Button[] = [];\n\n\tconstructor(container: HTMLElement, count: number, options?: IButtonOptions) {\n\t\tsuper();\n\n\t\tthis.create(container, count, options);\n\t}\n\n\tget buttons(): Button[] {\n\t\treturn this._buttons;\n\t}\n\n\tprivate create(container: HTMLElement, count: number, options?: IButtonOptions): void {\n\t\tfor (let index = 0; index < count; index++) {\n\t\t\tconst button = this._register(new Button(container, options));\n\t\t\tthis._buttons.push(button);\n\n\t\t\t// Implement keyboard access in buttons if there are multiple\n\t\t\tif (count > 1) {\n\t\t\t\tthis._register(DOM.addDisposableListener(button.element, DOM.EventType.KEY_DOWN, e => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tlet eventHandled = true;\n\n\t\t\t\t\t// Next / Previous Button\n\t\t\t\t\tlet buttonIndexToFocus: number | undefined;\n\t\t\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\t\tbuttonIndexToFocus = index > 0 ? index - 1 : this._buttons.length - 1;\n\t\t\t\t\t} else if (event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\t\tbuttonIndexToFocus = index === this._buttons.length - 1 ? 0 : index + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\teventHandled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (eventHandled && typeof buttonIndexToFocus === 'number') {\n\t\t\t\t\t\tthis._buttons[buttonIndexToFocus].focus();\n\t\t\t\t\t\tDOM.EventHelper.stop(e, true);\n\t\t\t\t\t}\n\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n}"]}]}