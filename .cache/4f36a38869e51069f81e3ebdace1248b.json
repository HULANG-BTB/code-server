{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/platform\", \"vs/platform/registry/common/platform\", \"vs/workbench/common/contributions\", \"vs/workbench/common/activity\", \"vs/workbench/common/actions\", \"vs/platform/actions/common/actions\", \"./update\", \"vs/platform/lifecycle/common/lifecycle\", \"vs/css!./media/update.contribution\", \"vs/platform/update/node/update.config.contribution\"], function (require, exports, platform, platform_1, contributions_1, activity_1, actions_1, actions_2, update_1, lifecycle_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const workbench = platform_1.Registry.as(contributions_1.Extensions.Workbench);\n    workbench.registerWorkbenchContribution(update_1.ProductContribution, lifecycle_1.LifecyclePhase.Restored);\n    if (platform.isWindows) {\n        if (process.arch === 'ia32') {\n            workbench.registerWorkbenchContribution(update_1.Win3264BitContribution, lifecycle_1.LifecyclePhase.Restored);\n        }\n    }\n    // TODO@ben remove me after a while\n    if (platform.isLinux) {\n        if (process.arch === 'ia32') {\n            workbench.registerWorkbenchContribution(update_1.Linux32BitContribution, lifecycle_1.LifecyclePhase.Restored);\n        }\n    }\n    platform_1.Registry.as(activity_1.GlobalActivityExtensions)\n        .registerActivity(update_1.UpdateContribution);\n    // Editor\n    platform_1.Registry.as(actions_1.Extensions.WorkbenchActions)\n        .registerWorkbenchAction(new actions_2.SyncActionDescriptor(update_1.ShowCurrentReleaseNotesAction, update_1.ShowCurrentReleaseNotesAction.ID, update_1.ShowCurrentReleaseNotesAction.LABEL), 'Show Release Notes');\n});\n",null]}