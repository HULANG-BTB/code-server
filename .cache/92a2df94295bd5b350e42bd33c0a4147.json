{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorOptions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorOptions.ts","mtime":1555846338032},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser = require(\"vs/base/browser/browser\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar objects = require(\"vs/base/common/objects\");\nvar platform = require(\"vs/base/common/platform\");\nvar scrollable_1 = require(\"vs/base/common/scrollable\");\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar wordHelper_1 = require(\"vs/editor/common/model/wordHelper\");\nvar nls = require(\"vs/nls\");\nvar accessibility_1 = require(\"vs/platform/accessibility/common/accessibility\");\nvar types_1 = require(\"vs/base/common/types\");\nvar RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap = exports.RenderMinimap || (exports.RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nvar WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent = exports.WrappingIndent || (exports.WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle = exports.TextEditorCursorBlinkingStyle || (exports.TextEditorCursorBlinkingStyle = {}));\n/**\n * @internal\n */\nfunction blinkingStyleToString(blinkingStyle) {\n    if (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n        return 'blink';\n    }\n    else if (blinkingStyle === TextEditorCursorBlinkingStyle.Expand) {\n        return 'expand';\n    }\n    else if (blinkingStyle === TextEditorCursorBlinkingStyle.Phase) {\n        return 'phase';\n    }\n    else if (blinkingStyle === TextEditorCursorBlinkingStyle.Smooth) {\n        return 'smooth';\n    }\n    else if (blinkingStyle === TextEditorCursorBlinkingStyle.Solid) {\n        return 'solid';\n    }\n    else {\n        throw new Error('blinkingStyleToString: Unknown blinkingStyle');\n    }\n}\nexports.blinkingStyleToString = blinkingStyleToString;\n/**\n * The style in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle = exports.TextEditorCursorStyle || (exports.TextEditorCursorStyle = {}));\n/**\n * @internal\n */\nfunction cursorStyleToString(cursorStyle) {\n    if (cursorStyle === TextEditorCursorStyle.Line) {\n        return 'line';\n    }\n    else if (cursorStyle === TextEditorCursorStyle.Block) {\n        return 'block';\n    }\n    else if (cursorStyle === TextEditorCursorStyle.Underline) {\n        return 'underline';\n    }\n    else if (cursorStyle === TextEditorCursorStyle.LineThin) {\n        return 'line-thin';\n    }\n    else if (cursorStyle === TextEditorCursorStyle.BlockOutline) {\n        return 'block-outline';\n    }\n    else if (cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n        return 'underline-thin';\n    }\n    else {\n        throw new Error('cursorStyleToString: Unknown cursorStyle');\n    }\n}\nexports.cursorStyleToString = cursorStyleToString;\nfunction _cursorStyleFromString(cursorStyle, defaultValue) {\n    if (typeof cursorStyle !== 'string') {\n        return defaultValue;\n    }\n    if (cursorStyle === 'line') {\n        return TextEditorCursorStyle.Line;\n    }\n    else if (cursorStyle === 'block') {\n        return TextEditorCursorStyle.Block;\n    }\n    else if (cursorStyle === 'underline') {\n        return TextEditorCursorStyle.Underline;\n    }\n    else if (cursorStyle === 'line-thin') {\n        return TextEditorCursorStyle.LineThin;\n    }\n    else if (cursorStyle === 'block-outline') {\n        return TextEditorCursorStyle.BlockOutline;\n    }\n    else if (cursorStyle === 'underline-thin') {\n        return TextEditorCursorStyle.UnderlineThin;\n    }\n    return TextEditorCursorStyle.Line;\n}\nvar RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType = exports.RenderLineNumbersType || (exports.RenderLineNumbersType = {}));\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nvar InternalEditorOptions = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function InternalEditorOptions(source) {\n        this.canUseLayerHinting = source.canUseLayerHinting;\n        this.pixelRatio = source.pixelRatio;\n        this.editorClassName = source.editorClassName;\n        this.lineHeight = source.lineHeight | 0;\n        this.readOnly = source.readOnly;\n        this.accessibilitySupport = source.accessibilitySupport;\n        this.multiCursorModifier = source.multiCursorModifier;\n        this.multiCursorMergeOverlapping = source.multiCursorMergeOverlapping;\n        this.wordSeparators = source.wordSeparators;\n        this.autoClosingBrackets = source.autoClosingBrackets;\n        this.autoClosingQuotes = source.autoClosingQuotes;\n        this.autoSurround = source.autoSurround;\n        this.autoIndent = source.autoIndent;\n        this.useTabStops = source.useTabStops;\n        this.tabFocusMode = source.tabFocusMode;\n        this.dragAndDrop = source.dragAndDrop;\n        this.emptySelectionClipboard = source.emptySelectionClipboard;\n        this.copyWithSyntaxHighlighting = source.copyWithSyntaxHighlighting;\n        this.layoutInfo = source.layoutInfo;\n        this.fontInfo = source.fontInfo;\n        this.viewInfo = source.viewInfo;\n        this.wrappingInfo = source.wrappingInfo;\n        this.contribInfo = source.contribInfo;\n        this.showUnused = source.showUnused;\n    }\n    /**\n     * @internal\n     */\n    InternalEditorOptions.prototype.equals = function (other) {\n        return (this.canUseLayerHinting === other.canUseLayerHinting\n            && this.pixelRatio === other.pixelRatio\n            && this.editorClassName === other.editorClassName\n            && this.lineHeight === other.lineHeight\n            && this.readOnly === other.readOnly\n            && this.accessibilitySupport === other.accessibilitySupport\n            && this.multiCursorModifier === other.multiCursorModifier\n            && this.multiCursorMergeOverlapping === other.multiCursorMergeOverlapping\n            && this.wordSeparators === other.wordSeparators\n            && this.autoClosingBrackets === other.autoClosingBrackets\n            && this.autoClosingQuotes === other.autoClosingQuotes\n            && this.autoSurround === other.autoSurround\n            && this.autoIndent === other.autoIndent\n            && this.useTabStops === other.useTabStops\n            && this.tabFocusMode === other.tabFocusMode\n            && this.dragAndDrop === other.dragAndDrop\n            && this.showUnused === other.showUnused\n            && this.emptySelectionClipboard === other.emptySelectionClipboard\n            && this.copyWithSyntaxHighlighting === other.copyWithSyntaxHighlighting\n            && InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, other.layoutInfo)\n            && this.fontInfo.equals(other.fontInfo)\n            && InternalEditorOptions._equalsViewOptions(this.viewInfo, other.viewInfo)\n            && InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, other.wrappingInfo)\n            && InternalEditorOptions._equalsContribOptions(this.contribInfo, other.contribInfo));\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions.prototype.createChangeEvent = function (newOpts) {\n        return {\n            canUseLayerHinting: (this.canUseLayerHinting !== newOpts.canUseLayerHinting),\n            pixelRatio: (this.pixelRatio !== newOpts.pixelRatio),\n            editorClassName: (this.editorClassName !== newOpts.editorClassName),\n            lineHeight: (this.lineHeight !== newOpts.lineHeight),\n            readOnly: (this.readOnly !== newOpts.readOnly),\n            accessibilitySupport: (this.accessibilitySupport !== newOpts.accessibilitySupport),\n            multiCursorModifier: (this.multiCursorModifier !== newOpts.multiCursorModifier),\n            multiCursorMergeOverlapping: (this.multiCursorMergeOverlapping !== newOpts.multiCursorMergeOverlapping),\n            wordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n            autoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n            autoClosingQuotes: (this.autoClosingQuotes !== newOpts.autoClosingQuotes),\n            autoSurround: (this.autoSurround !== newOpts.autoSurround),\n            autoIndent: (this.autoIndent !== newOpts.autoIndent),\n            useTabStops: (this.useTabStops !== newOpts.useTabStops),\n            tabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n            dragAndDrop: (this.dragAndDrop !== newOpts.dragAndDrop),\n            emptySelectionClipboard: (this.emptySelectionClipboard !== newOpts.emptySelectionClipboard),\n            copyWithSyntaxHighlighting: (this.copyWithSyntaxHighlighting !== newOpts.copyWithSyntaxHighlighting),\n            layoutInfo: (!InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, newOpts.layoutInfo)),\n            fontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n            viewInfo: (!InternalEditorOptions._equalsViewOptions(this.viewInfo, newOpts.viewInfo)),\n            wrappingInfo: (!InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, newOpts.wrappingInfo)),\n            contribInfo: (!InternalEditorOptions._equalsContribOptions(this.contribInfo, newOpts.contribInfo))\n        };\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsLayoutInfo = function (a, b) {\n        return (a.width === b.width\n            && a.height === b.height\n            && a.glyphMarginLeft === b.glyphMarginLeft\n            && a.glyphMarginWidth === b.glyphMarginWidth\n            && a.glyphMarginHeight === b.glyphMarginHeight\n            && a.lineNumbersLeft === b.lineNumbersLeft\n            && a.lineNumbersWidth === b.lineNumbersWidth\n            && a.lineNumbersHeight === b.lineNumbersHeight\n            && a.decorationsLeft === b.decorationsLeft\n            && a.decorationsWidth === b.decorationsWidth\n            && a.decorationsHeight === b.decorationsHeight\n            && a.contentLeft === b.contentLeft\n            && a.contentWidth === b.contentWidth\n            && a.contentHeight === b.contentHeight\n            && a.renderMinimap === b.renderMinimap\n            && a.minimapLeft === b.minimapLeft\n            && a.minimapWidth === b.minimapWidth\n            && a.viewportColumn === b.viewportColumn\n            && a.verticalScrollbarWidth === b.verticalScrollbarWidth\n            && a.horizontalScrollbarHeight === b.horizontalScrollbarHeight\n            && this._equalsOverviewRuler(a.overviewRuler, b.overviewRuler));\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsOverviewRuler = function (a, b) {\n        return (a.width === b.width\n            && a.height === b.height\n            && a.top === b.top\n            && a.right === b.right);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsViewOptions = function (a, b) {\n        return (a.extraEditorClassName === b.extraEditorClassName\n            && a.disableMonospaceOptimizations === b.disableMonospaceOptimizations\n            && arrays.equals(a.rulers, b.rulers)\n            && a.ariaLabel === b.ariaLabel\n            && a.renderLineNumbers === b.renderLineNumbers\n            && a.renderCustomLineNumbers === b.renderCustomLineNumbers\n            && a.renderFinalNewline === b.renderFinalNewline\n            && a.selectOnLineNumbers === b.selectOnLineNumbers\n            && a.glyphMargin === b.glyphMargin\n            && a.revealHorizontalRightPadding === b.revealHorizontalRightPadding\n            && a.roundedSelection === b.roundedSelection\n            && a.overviewRulerLanes === b.overviewRulerLanes\n            && a.overviewRulerBorder === b.overviewRulerBorder\n            && a.cursorBlinking === b.cursorBlinking\n            && a.mouseWheelZoom === b.mouseWheelZoom\n            && a.cursorSmoothCaretAnimation === b.cursorSmoothCaretAnimation\n            && a.cursorStyle === b.cursorStyle\n            && a.cursorWidth === b.cursorWidth\n            && a.hideCursorInOverviewRuler === b.hideCursorInOverviewRuler\n            && a.scrollBeyondLastLine === b.scrollBeyondLastLine\n            && a.scrollBeyondLastColumn === b.scrollBeyondLastColumn\n            && a.smoothScrolling === b.smoothScrolling\n            && a.stopRenderingLineAfter === b.stopRenderingLineAfter\n            && a.renderWhitespace === b.renderWhitespace\n            && a.renderControlCharacters === b.renderControlCharacters\n            && a.fontLigatures === b.fontLigatures\n            && a.renderIndentGuides === b.renderIndentGuides\n            && a.highlightActiveIndentGuide === b.highlightActiveIndentGuide\n            && a.renderLineHighlight === b.renderLineHighlight\n            && this._equalsScrollbarOptions(a.scrollbar, b.scrollbar)\n            && this._equalsMinimapOptions(a.minimap, b.minimap)\n            && a.fixedOverflowWidgets === b.fixedOverflowWidgets);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsScrollbarOptions = function (a, b) {\n        return (a.arrowSize === b.arrowSize\n            && a.vertical === b.vertical\n            && a.horizontal === b.horizontal\n            && a.useShadows === b.useShadows\n            && a.verticalHasArrows === b.verticalHasArrows\n            && a.horizontalHasArrows === b.horizontalHasArrows\n            && a.handleMouseWheel === b.handleMouseWheel\n            && a.horizontalScrollbarSize === b.horizontalScrollbarSize\n            && a.horizontalSliderSize === b.horizontalSliderSize\n            && a.verticalScrollbarSize === b.verticalScrollbarSize\n            && a.verticalSliderSize === b.verticalSliderSize\n            && a.mouseWheelScrollSensitivity === b.mouseWheelScrollSensitivity\n            && a.fastScrollSensitivity === b.fastScrollSensitivity);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsMinimapOptions = function (a, b) {\n        return (a.enabled === b.enabled\n            && a.side === b.side\n            && a.showSlider === b.showSlider\n            && a.renderCharacters === b.renderCharacters\n            && a.maxColumn === b.maxColumn);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalFindOptions = function (a, b) {\n        return (a.seedSearchStringFromSelection === b.seedSearchStringFromSelection\n            && a.autoFindInSelection === b.autoFindInSelection\n            && a.globalFindClipboard === b.globalFindClipboard\n            && a.addExtraSpaceOnTop === b.addExtraSpaceOnTop);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsParameterHintOptions = function (a, b) {\n        return (a.enabled === b.enabled\n            && a.cycle === b.cycle);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsHoverOptions = function (a, b) {\n        return (a.enabled === b.enabled\n            && a.delay === b.delay\n            && a.sticky === b.sticky);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsSuggestOptions = function (a, b) {\n        if (a === b) {\n            return true;\n        }\n        else if (!a || !b) {\n            return false;\n        }\n        else {\n            return a.filterGraceful === b.filterGraceful\n                && a.snippets === b.snippets\n                && a.snippetsPreventQuickSuggestions === b.snippetsPreventQuickSuggestions\n                && a.localityBonus === b.localityBonus\n                && a.shareSuggestSelections === b.shareSuggestSelections\n                && a.showIcons === b.showIcons\n                && a.maxVisibleSuggestions === b.maxVisibleSuggestions\n                && objects.equals(a.filteredTypes, b.filteredTypes);\n        }\n    };\n    InternalEditorOptions._equalsGotoLocationOptions = function (a, b) {\n        if (a === b) {\n            return true;\n        }\n        else if (!a || !b) {\n            return false;\n        }\n        else {\n            return a.multiple === b.multiple;\n        }\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsWrappingInfo = function (a, b) {\n        return (a.inDiffEditor === b.inDiffEditor\n            && a.isDominatedByLongLines === b.isDominatedByLongLines\n            && a.isWordWrapMinified === b.isWordWrapMinified\n            && a.isViewportWrapping === b.isViewportWrapping\n            && a.wrappingColumn === b.wrappingColumn\n            && a.wrappingIndent === b.wrappingIndent\n            && a.wordWrapBreakBeforeCharacters === b.wordWrapBreakBeforeCharacters\n            && a.wordWrapBreakAfterCharacters === b.wordWrapBreakAfterCharacters\n            && a.wordWrapBreakObtrusiveCharacters === b.wordWrapBreakObtrusiveCharacters);\n    };\n    /**\n     * @internal\n     */\n    InternalEditorOptions._equalsContribOptions = function (a, b) {\n        return (a.selectionClipboard === b.selectionClipboard\n            && this._equalsHoverOptions(a.hover, b.hover)\n            && a.links === b.links\n            && a.contextmenu === b.contextmenu\n            && InternalEditorOptions._equalsQuickSuggestions(a.quickSuggestions, b.quickSuggestions)\n            && a.quickSuggestionsDelay === b.quickSuggestionsDelay\n            && this._equalsParameterHintOptions(a.parameterHints, b.parameterHints)\n            && a.formatOnType === b.formatOnType\n            && a.formatOnPaste === b.formatOnPaste\n            && a.suggestOnTriggerCharacters === b.suggestOnTriggerCharacters\n            && a.acceptSuggestionOnEnter === b.acceptSuggestionOnEnter\n            && a.acceptSuggestionOnCommitCharacter === b.acceptSuggestionOnCommitCharacter\n            && a.wordBasedSuggestions === b.wordBasedSuggestions\n            && a.suggestSelection === b.suggestSelection\n            && a.suggestFontSize === b.suggestFontSize\n            && a.suggestLineHeight === b.suggestLineHeight\n            && a.tabCompletion === b.tabCompletion\n            && this._equalsSuggestOptions(a.suggest, b.suggest)\n            && InternalEditorOptions._equalsGotoLocationOptions(a.gotoLocation, b.gotoLocation)\n            && a.selectionHighlight === b.selectionHighlight\n            && a.occurrencesHighlight === b.occurrencesHighlight\n            && a.codeLens === b.codeLens\n            && a.folding === b.folding\n            && a.foldingStrategy === b.foldingStrategy\n            && a.showFoldingControls === b.showFoldingControls\n            && a.matchBrackets === b.matchBrackets\n            && this._equalFindOptions(a.find, b.find)\n            && a.colorDecorators === b.colorDecorators\n            && objects.equals(a.codeActionsOnSave, b.codeActionsOnSave)\n            && a.codeActionsOnSaveTimeout === b.codeActionsOnSaveTimeout\n            && a.lightbulbEnabled === b.lightbulbEnabled);\n    };\n    InternalEditorOptions._equalsQuickSuggestions = function (a, b) {\n        if (typeof a === 'boolean') {\n            if (typeof b !== 'boolean') {\n                return false;\n            }\n            return a === b;\n        }\n        if (typeof b === 'boolean') {\n            return false;\n        }\n        return (a.comments === b.comments\n            && a.other === b.other\n            && a.strings === b.strings);\n    };\n    return InternalEditorOptions;\n}());\nexports.InternalEditorOptions = InternalEditorOptions;\nfunction _boolean(value, defaultValue) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    if (value === 'false') {\n        // treat the string 'false' as false\n        return false;\n    }\n    return Boolean(value);\n}\nfunction _booleanMap(value, defaultValue) {\n    if (!value) {\n        return defaultValue;\n    }\n    var out = Object.create(null);\n    for (var _i = 0, _a = Object.keys(value); _i < _a.length; _i++) {\n        var k = _a[_i];\n        var v = value[k];\n        if (typeof v === 'boolean') {\n            out[k] = v;\n        }\n    }\n    return out;\n}\nfunction _string(value, defaultValue) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    return value;\n}\nfunction _stringSet(value, defaultValue, allowedValues) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    if (allowedValues.indexOf(value) === -1) {\n        return defaultValue;\n    }\n    return value;\n}\nfunction _clampedInt(value, defaultValue, minimum, maximum) {\n    var r;\n    if (typeof value === 'undefined') {\n        r = defaultValue;\n    }\n    else {\n        r = parseInt(value, 10);\n        if (isNaN(r)) {\n            r = defaultValue;\n        }\n    }\n    r = Math.max(minimum, r);\n    r = Math.min(maximum, r);\n    return r | 0;\n}\nfunction _float(value, defaultValue) {\n    var r = parseFloat(value);\n    if (isNaN(r)) {\n        r = defaultValue;\n    }\n    return r;\n}\nfunction _wrappingIndentFromString(wrappingIndent, defaultValue) {\n    if (typeof wrappingIndent !== 'string') {\n        return defaultValue;\n    }\n    if (wrappingIndent === 'same') {\n        return WrappingIndent.Same;\n    }\n    else if (wrappingIndent === 'indent') {\n        return WrappingIndent.Indent;\n    }\n    else if (wrappingIndent === 'deepIndent') {\n        return WrappingIndent.DeepIndent;\n    }\n    else {\n        return WrappingIndent.None;\n    }\n}\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle, defaultValue) {\n    if (typeof cursorBlinkingStyle !== 'string') {\n        return defaultValue;\n    }\n    switch (cursorBlinkingStyle) {\n        case 'blink':\n            return TextEditorCursorBlinkingStyle.Blink;\n        case 'smooth':\n            return TextEditorCursorBlinkingStyle.Smooth;\n        case 'phase':\n            return TextEditorCursorBlinkingStyle.Phase;\n        case 'expand':\n            return TextEditorCursorBlinkingStyle.Expand;\n        case 'visible': // maintain compatibility\n        case 'solid':\n            return TextEditorCursorBlinkingStyle.Solid;\n    }\n    return TextEditorCursorBlinkingStyle.Blink;\n}\nfunction _scrollbarVisibilityFromString(visibility, defaultValue) {\n    if (typeof visibility !== 'string') {\n        return defaultValue;\n    }\n    switch (visibility) {\n        case 'hidden':\n            return scrollable_1.ScrollbarVisibility.Hidden;\n        case 'visible':\n            return scrollable_1.ScrollbarVisibility.Visible;\n        default:\n            return scrollable_1.ScrollbarVisibility.Auto;\n    }\n}\n/**\n * @internal\n */\nvar EditorOptionsValidator = /** @class */ (function () {\n    function EditorOptionsValidator() {\n    }\n    /**\n     * Validate raw editor options.\n     * i.e. since they can be defined by the user, they might be invalid.\n     */\n    EditorOptionsValidator.validate = function (opts, defaults) {\n        var wordWrap = opts.wordWrap;\n        {\n            // Compatibility with old true or false values\n            if (wordWrap === true) {\n                wordWrap = 'on';\n            }\n            else if (wordWrap === false) {\n                wordWrap = 'off';\n            }\n            wordWrap = _stringSet(wordWrap, defaults.wordWrap, ['off', 'on', 'wordWrapColumn', 'bounded']);\n        }\n        var viewInfo = this._sanitizeViewInfo(opts, defaults.viewInfo);\n        var contribInfo = this._sanitizeContribInfo(opts, defaults.contribInfo);\n        var configuredMulticursorModifier = undefined;\n        if (typeof opts.multiCursorModifier === 'string') {\n            if (opts.multiCursorModifier === 'ctrlCmd') {\n                configuredMulticursorModifier = browser.isMacintosh ? 'metaKey' : 'ctrlKey';\n            }\n            else {\n                configuredMulticursorModifier = 'altKey';\n            }\n        }\n        var multiCursorModifier = _stringSet(configuredMulticursorModifier, defaults.multiCursorModifier, ['altKey', 'metaKey', 'ctrlKey']);\n        var autoClosingBrackets;\n        var autoClosingQuotes;\n        var autoSurround;\n        if (typeof opts.autoClosingBrackets === 'boolean' && opts.autoClosingBrackets === false) {\n            // backwards compatibility: disable all on boolean false\n            autoClosingBrackets = 'never';\n            autoClosingQuotes = 'never';\n            autoSurround = 'never';\n        }\n        else {\n            autoClosingBrackets = _stringSet(opts.autoClosingBrackets, defaults.autoClosingBrackets, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n            autoClosingQuotes = _stringSet(opts.autoClosingQuotes, defaults.autoClosingQuotes, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n            autoSurround = _stringSet(opts.autoSurround, defaults.autoSurround, ['languageDefined', 'brackets', 'quotes', 'never']);\n        }\n        return {\n            inDiffEditor: _boolean(opts.inDiffEditor, defaults.inDiffEditor),\n            wordSeparators: _string(opts.wordSeparators, defaults.wordSeparators),\n            lineNumbersMinChars: _clampedInt(opts.lineNumbersMinChars, defaults.lineNumbersMinChars, 1, 10),\n            lineDecorationsWidth: (typeof opts.lineDecorationsWidth === 'undefined' ? defaults.lineDecorationsWidth : opts.lineDecorationsWidth),\n            readOnly: _boolean(opts.readOnly, defaults.readOnly),\n            mouseStyle: _stringSet(opts.mouseStyle, defaults.mouseStyle, ['text', 'default', 'copy']),\n            disableLayerHinting: _boolean(opts.disableLayerHinting, defaults.disableLayerHinting),\n            automaticLayout: _boolean(opts.automaticLayout, defaults.automaticLayout),\n            wordWrap: wordWrap,\n            wordWrapColumn: _clampedInt(opts.wordWrapColumn, defaults.wordWrapColumn, 1, uint_1.Constants.MAX_SAFE_SMALL_INTEGER),\n            wordWrapMinified: _boolean(opts.wordWrapMinified, defaults.wordWrapMinified),\n            wrappingIndent: _wrappingIndentFromString(opts.wrappingIndent, defaults.wrappingIndent),\n            wordWrapBreakBeforeCharacters: _string(opts.wordWrapBreakBeforeCharacters, defaults.wordWrapBreakBeforeCharacters),\n            wordWrapBreakAfterCharacters: _string(opts.wordWrapBreakAfterCharacters, defaults.wordWrapBreakAfterCharacters),\n            wordWrapBreakObtrusiveCharacters: _string(opts.wordWrapBreakObtrusiveCharacters, defaults.wordWrapBreakObtrusiveCharacters),\n            autoClosingBrackets: autoClosingBrackets,\n            autoClosingQuotes: autoClosingQuotes,\n            autoSurround: autoSurround,\n            autoIndent: _boolean(opts.autoIndent, defaults.autoIndent),\n            dragAndDrop: _boolean(opts.dragAndDrop, defaults.dragAndDrop),\n            emptySelectionClipboard: _boolean(opts.emptySelectionClipboard, defaults.emptySelectionClipboard),\n            copyWithSyntaxHighlighting: _boolean(opts.copyWithSyntaxHighlighting, defaults.copyWithSyntaxHighlighting),\n            useTabStops: _boolean(opts.useTabStops, defaults.useTabStops),\n            multiCursorModifier: multiCursorModifier,\n            multiCursorMergeOverlapping: _boolean(opts.multiCursorMergeOverlapping, defaults.multiCursorMergeOverlapping),\n            accessibilitySupport: _stringSet(opts.accessibilitySupport, defaults.accessibilitySupport, ['auto', 'on', 'off']),\n            showUnused: _boolean(opts.showUnused, defaults.showUnused),\n            viewInfo: viewInfo,\n            contribInfo: contribInfo,\n        };\n    };\n    EditorOptionsValidator._sanitizeScrollbarOpts = function (opts, defaults, mouseWheelScrollSensitivity, fastScrollSensitivity) {\n        if (typeof opts !== 'object') {\n            return defaults;\n        }\n        var horizontalScrollbarSize = _clampedInt(opts.horizontalScrollbarSize, defaults.horizontalScrollbarSize, 0, 1000);\n        var verticalScrollbarSize = _clampedInt(opts.verticalScrollbarSize, defaults.verticalScrollbarSize, 0, 1000);\n        return {\n            vertical: _scrollbarVisibilityFromString(opts.vertical, defaults.vertical),\n            horizontal: _scrollbarVisibilityFromString(opts.horizontal, defaults.horizontal),\n            arrowSize: _clampedInt(opts.arrowSize, defaults.arrowSize, 0, 1000),\n            useShadows: _boolean(opts.useShadows, defaults.useShadows),\n            verticalHasArrows: _boolean(opts.verticalHasArrows, defaults.verticalHasArrows),\n            horizontalHasArrows: _boolean(opts.horizontalHasArrows, defaults.horizontalHasArrows),\n            horizontalScrollbarSize: horizontalScrollbarSize,\n            horizontalSliderSize: _clampedInt(opts.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n            verticalScrollbarSize: verticalScrollbarSize,\n            verticalSliderSize: _clampedInt(opts.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n            handleMouseWheel: _boolean(opts.handleMouseWheel, defaults.handleMouseWheel),\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n        };\n    };\n    EditorOptionsValidator._sanitizeMinimapOpts = function (opts, defaults) {\n        if (typeof opts !== 'object') {\n            return defaults;\n        }\n        return {\n            enabled: _boolean(opts.enabled, defaults.enabled),\n            side: _stringSet(opts.side, defaults.side, ['right', 'left']),\n            showSlider: _stringSet(opts.showSlider, defaults.showSlider, ['always', 'mouseover']),\n            renderCharacters: _boolean(opts.renderCharacters, defaults.renderCharacters),\n            maxColumn: _clampedInt(opts.maxColumn, defaults.maxColumn, 1, 10000),\n        };\n    };\n    EditorOptionsValidator._sanitizeFindOpts = function (opts, defaults) {\n        if (typeof opts !== 'object') {\n            return defaults;\n        }\n        return {\n            seedSearchStringFromSelection: _boolean(opts.seedSearchStringFromSelection, defaults.seedSearchStringFromSelection),\n            autoFindInSelection: _boolean(opts.autoFindInSelection, defaults.autoFindInSelection),\n            globalFindClipboard: _boolean(opts.globalFindClipboard, defaults.globalFindClipboard),\n            addExtraSpaceOnTop: _boolean(opts.addExtraSpaceOnTop, defaults.addExtraSpaceOnTop)\n        };\n    };\n    EditorOptionsValidator._sanitizeParameterHintOpts = function (opts, defaults) {\n        if (typeof opts !== 'object') {\n            return defaults;\n        }\n        return {\n            enabled: _boolean(opts.enabled, defaults.enabled),\n            cycle: _boolean(opts.cycle, defaults.cycle)\n        };\n    };\n    EditorOptionsValidator._sanitizeHoverOpts = function (_opts, defaults) {\n        var opts;\n        if (typeof _opts === 'boolean') {\n            opts = {\n                enabled: _opts\n            };\n        }\n        else if (typeof _opts === 'object') {\n            opts = _opts;\n        }\n        else {\n            return defaults;\n        }\n        return {\n            enabled: _boolean(opts.enabled, defaults.enabled),\n            delay: _clampedInt(opts.delay, defaults.delay, 0, 10000),\n            sticky: _boolean(opts.sticky, defaults.sticky)\n        };\n    };\n    EditorOptionsValidator._sanitizeSuggestOpts = function (opts, defaults) {\n        var suggestOpts = opts.suggest || {};\n        return {\n            filterGraceful: _boolean(suggestOpts.filterGraceful, defaults.filterGraceful),\n            snippets: _stringSet(opts.snippetSuggestions, defaults.snippets, ['top', 'bottom', 'inline', 'none']),\n            snippetsPreventQuickSuggestions: _boolean(suggestOpts.snippetsPreventQuickSuggestions, defaults.filterGraceful),\n            localityBonus: _boolean(suggestOpts.localityBonus, defaults.localityBonus),\n            shareSuggestSelections: _boolean(suggestOpts.shareSuggestSelections, defaults.shareSuggestSelections),\n            showIcons: _boolean(suggestOpts.showIcons, defaults.showIcons),\n            maxVisibleSuggestions: _clampedInt(suggestOpts.maxVisibleSuggestions, defaults.maxVisibleSuggestions, 1, 15),\n            filteredTypes: types_1.isObject(suggestOpts.filteredTypes) ? suggestOpts.filteredTypes : Object.create(null)\n        };\n    };\n    EditorOptionsValidator._santizeGotoLocationOpts = function (opts, defaults) {\n        var gotoOpts = opts.gotoLocation || {};\n        return {\n            multiple: _stringSet(gotoOpts.multiple, defaults.multiple, ['peek', 'gotoAndPeek', 'goto'])\n        };\n    };\n    EditorOptionsValidator._sanitizeTabCompletionOpts = function (opts, defaults) {\n        if (opts === false) {\n            return 'off';\n        }\n        else if (opts === true) {\n            return 'onlySnippets';\n        }\n        else {\n            return _stringSet(opts, defaults, ['on', 'off', 'onlySnippets']);\n        }\n    };\n    EditorOptionsValidator._sanitizeViewInfo = function (opts, defaults) {\n        var rulers = [];\n        if (Array.isArray(opts.rulers)) {\n            for (var i = 0, len = opts.rulers.length; i < len; i++) {\n                rulers.push(_clampedInt(opts.rulers[i], 0, 0, 10000));\n            }\n            rulers.sort();\n        }\n        var renderLineNumbers = defaults.renderLineNumbers;\n        var renderCustomLineNumbers = defaults.renderCustomLineNumbers;\n        if (typeof opts.lineNumbers !== 'undefined') {\n            var lineNumbers = opts.lineNumbers;\n            // Compatibility with old true or false values\n            if (lineNumbers === true) {\n                lineNumbers = 'on';\n            }\n            else if (lineNumbers === false) {\n                lineNumbers = 'off';\n            }\n            if (typeof lineNumbers === 'function') {\n                renderLineNumbers = RenderLineNumbersType.Custom;\n                renderCustomLineNumbers = lineNumbers;\n            }\n            else if (lineNumbers === 'interval') {\n                renderLineNumbers = RenderLineNumbersType.Interval;\n            }\n            else if (lineNumbers === 'relative') {\n                renderLineNumbers = RenderLineNumbersType.Relative;\n            }\n            else if (lineNumbers === 'on') {\n                renderLineNumbers = RenderLineNumbersType.On;\n            }\n            else {\n                renderLineNumbers = RenderLineNumbersType.Off;\n            }\n        }\n        var fontLigatures = _boolean(opts.fontLigatures, defaults.fontLigatures);\n        var disableMonospaceOptimizations = _boolean(opts.disableMonospaceOptimizations, defaults.disableMonospaceOptimizations) || fontLigatures;\n        var renderWhitespace = opts.renderWhitespace;\n        {\n            // Compatibility with old true or false values\n            if (renderWhitespace === true) {\n                renderWhitespace = 'boundary';\n            }\n            else if (renderWhitespace === false) {\n                renderWhitespace = 'none';\n            }\n            renderWhitespace = _stringSet(renderWhitespace, defaults.renderWhitespace, ['none', 'boundary', 'all']);\n        }\n        var renderLineHighlight = opts.renderLineHighlight;\n        {\n            // Compatibility with old true or false values\n            if (renderLineHighlight === true) {\n                renderLineHighlight = 'line';\n            }\n            else if (renderLineHighlight === false) {\n                renderLineHighlight = 'none';\n            }\n            renderLineHighlight = _stringSet(renderLineHighlight, defaults.renderLineHighlight, ['none', 'gutter', 'line', 'all']);\n        }\n        var mouseWheelScrollSensitivity = _float(opts.mouseWheelScrollSensitivity, defaults.scrollbar.mouseWheelScrollSensitivity);\n        if (mouseWheelScrollSensitivity === 0) {\n            // Disallow 0, as it would prevent/block scrolling\n            mouseWheelScrollSensitivity = 1;\n        }\n        var fastScrollSensitivity = _float(opts.fastScrollSensitivity, defaults.scrollbar.fastScrollSensitivity);\n        if (fastScrollSensitivity <= 0) {\n            fastScrollSensitivity = defaults.scrollbar.fastScrollSensitivity;\n        }\n        var scrollbar = this._sanitizeScrollbarOpts(opts.scrollbar, defaults.scrollbar, mouseWheelScrollSensitivity, fastScrollSensitivity);\n        var minimap = this._sanitizeMinimapOpts(opts.minimap, defaults.minimap);\n        return {\n            extraEditorClassName: _string(opts.extraEditorClassName, defaults.extraEditorClassName),\n            disableMonospaceOptimizations: disableMonospaceOptimizations,\n            rulers: rulers,\n            ariaLabel: _string(opts.ariaLabel, defaults.ariaLabel),\n            renderLineNumbers: renderLineNumbers,\n            renderCustomLineNumbers: renderCustomLineNumbers,\n            renderFinalNewline: _boolean(opts.renderFinalNewline, defaults.renderFinalNewline),\n            selectOnLineNumbers: _boolean(opts.selectOnLineNumbers, defaults.selectOnLineNumbers),\n            glyphMargin: _boolean(opts.glyphMargin, defaults.glyphMargin),\n            revealHorizontalRightPadding: _clampedInt(opts.revealHorizontalRightPadding, defaults.revealHorizontalRightPadding, 0, 1000),\n            roundedSelection: _boolean(opts.roundedSelection, defaults.roundedSelection),\n            overviewRulerLanes: _clampedInt(opts.overviewRulerLanes, defaults.overviewRulerLanes, 0, 3),\n            overviewRulerBorder: _boolean(opts.overviewRulerBorder, defaults.overviewRulerBorder),\n            cursorBlinking: _cursorBlinkingStyleFromString(opts.cursorBlinking, defaults.cursorBlinking),\n            mouseWheelZoom: _boolean(opts.mouseWheelZoom, defaults.mouseWheelZoom),\n            cursorSmoothCaretAnimation: _boolean(opts.cursorSmoothCaretAnimation, defaults.cursorSmoothCaretAnimation),\n            cursorStyle: _cursorStyleFromString(opts.cursorStyle, defaults.cursorStyle),\n            cursorWidth: _clampedInt(opts.cursorWidth, defaults.cursorWidth, 0, Number.MAX_VALUE),\n            hideCursorInOverviewRuler: _boolean(opts.hideCursorInOverviewRuler, defaults.hideCursorInOverviewRuler),\n            scrollBeyondLastLine: _boolean(opts.scrollBeyondLastLine, defaults.scrollBeyondLastLine),\n            scrollBeyondLastColumn: _clampedInt(opts.scrollBeyondLastColumn, defaults.scrollBeyondLastColumn, 0, uint_1.Constants.MAX_SAFE_SMALL_INTEGER),\n            smoothScrolling: _boolean(opts.smoothScrolling, defaults.smoothScrolling),\n            stopRenderingLineAfter: _clampedInt(opts.stopRenderingLineAfter, defaults.stopRenderingLineAfter, -1, uint_1.Constants.MAX_SAFE_SMALL_INTEGER),\n            renderWhitespace: renderWhitespace,\n            renderControlCharacters: _boolean(opts.renderControlCharacters, defaults.renderControlCharacters),\n            fontLigatures: fontLigatures,\n            renderIndentGuides: _boolean(opts.renderIndentGuides, defaults.renderIndentGuides),\n            highlightActiveIndentGuide: _boolean(opts.highlightActiveIndentGuide, defaults.highlightActiveIndentGuide),\n            renderLineHighlight: renderLineHighlight,\n            scrollbar: scrollbar,\n            minimap: minimap,\n            fixedOverflowWidgets: _boolean(opts.fixedOverflowWidgets, defaults.fixedOverflowWidgets),\n        };\n    };\n    EditorOptionsValidator._sanitizeContribInfo = function (opts, defaults) {\n        var quickSuggestions;\n        if (typeof opts.quickSuggestions === 'object') {\n            quickSuggestions = tslib_1.__assign({ other: true }, opts.quickSuggestions);\n        }\n        else {\n            quickSuggestions = _boolean(opts.quickSuggestions, defaults.quickSuggestions);\n        }\n        // Compatibility support for acceptSuggestionOnEnter\n        if (typeof opts.acceptSuggestionOnEnter === 'boolean') {\n            opts.acceptSuggestionOnEnter = opts.acceptSuggestionOnEnter ? 'on' : 'off';\n        }\n        var find = this._sanitizeFindOpts(opts.find, defaults.find);\n        return {\n            selectionClipboard: _boolean(opts.selectionClipboard, defaults.selectionClipboard),\n            hover: this._sanitizeHoverOpts(opts.hover, defaults.hover),\n            links: _boolean(opts.links, defaults.links),\n            contextmenu: _boolean(opts.contextmenu, defaults.contextmenu),\n            quickSuggestions: quickSuggestions,\n            quickSuggestionsDelay: _clampedInt(opts.quickSuggestionsDelay, defaults.quickSuggestionsDelay, uint_1.Constants.MIN_SAFE_SMALL_INTEGER, uint_1.Constants.MAX_SAFE_SMALL_INTEGER),\n            parameterHints: this._sanitizeParameterHintOpts(opts.parameterHints, defaults.parameterHints),\n            formatOnType: _boolean(opts.formatOnType, defaults.formatOnType),\n            formatOnPaste: _boolean(opts.formatOnPaste, defaults.formatOnPaste),\n            suggestOnTriggerCharacters: _boolean(opts.suggestOnTriggerCharacters, defaults.suggestOnTriggerCharacters),\n            acceptSuggestionOnEnter: _stringSet(opts.acceptSuggestionOnEnter, defaults.acceptSuggestionOnEnter, ['on', 'smart', 'off']),\n            acceptSuggestionOnCommitCharacter: _boolean(opts.acceptSuggestionOnCommitCharacter, defaults.acceptSuggestionOnCommitCharacter),\n            wordBasedSuggestions: _boolean(opts.wordBasedSuggestions, defaults.wordBasedSuggestions),\n            suggestSelection: _stringSet(opts.suggestSelection, defaults.suggestSelection, ['first', 'recentlyUsed', 'recentlyUsedByPrefix']),\n            suggestFontSize: _clampedInt(opts.suggestFontSize, defaults.suggestFontSize, 0, 1000),\n            suggestLineHeight: _clampedInt(opts.suggestLineHeight, defaults.suggestLineHeight, 0, 1000),\n            tabCompletion: this._sanitizeTabCompletionOpts(opts.tabCompletion, defaults.tabCompletion),\n            suggest: this._sanitizeSuggestOpts(opts, defaults.suggest),\n            gotoLocation: this._santizeGotoLocationOpts(opts, defaults.gotoLocation),\n            selectionHighlight: _boolean(opts.selectionHighlight, defaults.selectionHighlight),\n            occurrencesHighlight: _boolean(opts.occurrencesHighlight, defaults.occurrencesHighlight),\n            codeLens: _boolean(opts.codeLens, defaults.codeLens),\n            folding: _boolean(opts.folding, defaults.folding),\n            foldingStrategy: _stringSet(opts.foldingStrategy, defaults.foldingStrategy, ['auto', 'indentation']),\n            showFoldingControls: _stringSet(opts.showFoldingControls, defaults.showFoldingControls, ['always', 'mouseover']),\n            matchBrackets: _boolean(opts.matchBrackets, defaults.matchBrackets),\n            find: find,\n            colorDecorators: _boolean(opts.colorDecorators, defaults.colorDecorators),\n            lightbulbEnabled: _boolean(opts.lightbulb ? opts.lightbulb.enabled : false, defaults.lightbulbEnabled),\n            codeActionsOnSave: _booleanMap(opts.codeActionsOnSave, {}),\n            codeActionsOnSaveTimeout: _clampedInt(opts.codeActionsOnSaveTimeout, defaults.codeActionsOnSaveTimeout, 1, 10000)\n        };\n    };\n    return EditorOptionsValidator;\n}());\nexports.EditorOptionsValidator = EditorOptionsValidator;\n/**\n * @internal\n */\nvar InternalEditorOptionsFactory = /** @class */ (function () {\n    function InternalEditorOptionsFactory() {\n    }\n    InternalEditorOptionsFactory._tweakValidatedOptions = function (opts, accessibilitySupport) {\n        var accessibilityIsOn = (accessibilitySupport === accessibility_1.AccessibilitySupport.Enabled);\n        var accessibilityIsOff = (accessibilitySupport === accessibility_1.AccessibilitySupport.Disabled);\n        return {\n            inDiffEditor: opts.inDiffEditor,\n            wordSeparators: opts.wordSeparators,\n            lineNumbersMinChars: opts.lineNumbersMinChars,\n            lineDecorationsWidth: opts.lineDecorationsWidth,\n            readOnly: opts.readOnly,\n            mouseStyle: opts.mouseStyle,\n            disableLayerHinting: opts.disableLayerHinting,\n            automaticLayout: opts.automaticLayout,\n            wordWrap: opts.wordWrap,\n            wordWrapColumn: opts.wordWrapColumn,\n            wordWrapMinified: opts.wordWrapMinified,\n            wrappingIndent: opts.wrappingIndent,\n            wordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n            wordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n            wordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n            autoClosingBrackets: opts.autoClosingBrackets,\n            autoClosingQuotes: opts.autoClosingQuotes,\n            autoSurround: opts.autoSurround,\n            autoIndent: opts.autoIndent,\n            dragAndDrop: opts.dragAndDrop,\n            emptySelectionClipboard: opts.emptySelectionClipboard,\n            copyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n            useTabStops: opts.useTabStops,\n            multiCursorModifier: opts.multiCursorModifier,\n            multiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n            accessibilitySupport: opts.accessibilitySupport,\n            showUnused: opts.showUnused,\n            viewInfo: {\n                extraEditorClassName: opts.viewInfo.extraEditorClassName,\n                disableMonospaceOptimizations: opts.viewInfo.disableMonospaceOptimizations,\n                rulers: opts.viewInfo.rulers,\n                ariaLabel: (accessibilityIsOff ? nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\") : opts.viewInfo.ariaLabel),\n                renderLineNumbers: opts.viewInfo.renderLineNumbers,\n                renderCustomLineNumbers: opts.viewInfo.renderCustomLineNumbers,\n                renderFinalNewline: opts.viewInfo.renderFinalNewline,\n                selectOnLineNumbers: opts.viewInfo.selectOnLineNumbers,\n                glyphMargin: opts.viewInfo.glyphMargin,\n                revealHorizontalRightPadding: opts.viewInfo.revealHorizontalRightPadding,\n                roundedSelection: (accessibilityIsOn ? false : opts.viewInfo.roundedSelection),\n                overviewRulerLanes: opts.viewInfo.overviewRulerLanes,\n                overviewRulerBorder: opts.viewInfo.overviewRulerBorder,\n                cursorBlinking: opts.viewInfo.cursorBlinking,\n                mouseWheelZoom: opts.viewInfo.mouseWheelZoom,\n                cursorSmoothCaretAnimation: opts.viewInfo.cursorSmoothCaretAnimation,\n                cursorStyle: opts.viewInfo.cursorStyle,\n                cursorWidth: opts.viewInfo.cursorWidth,\n                hideCursorInOverviewRuler: opts.viewInfo.hideCursorInOverviewRuler,\n                scrollBeyondLastLine: opts.viewInfo.scrollBeyondLastLine,\n                scrollBeyondLastColumn: opts.viewInfo.scrollBeyondLastColumn,\n                smoothScrolling: opts.viewInfo.smoothScrolling,\n                stopRenderingLineAfter: opts.viewInfo.stopRenderingLineAfter,\n                renderWhitespace: (accessibilityIsOn ? 'none' : opts.viewInfo.renderWhitespace),\n                renderControlCharacters: (accessibilityIsOn ? false : opts.viewInfo.renderControlCharacters),\n                fontLigatures: (accessibilityIsOn ? false : opts.viewInfo.fontLigatures),\n                renderIndentGuides: (accessibilityIsOn ? false : opts.viewInfo.renderIndentGuides),\n                highlightActiveIndentGuide: opts.viewInfo.highlightActiveIndentGuide,\n                renderLineHighlight: opts.viewInfo.renderLineHighlight,\n                scrollbar: opts.viewInfo.scrollbar,\n                minimap: {\n                    enabled: (accessibilityIsOn ? false : opts.viewInfo.minimap.enabled),\n                    side: opts.viewInfo.minimap.side,\n                    renderCharacters: opts.viewInfo.minimap.renderCharacters,\n                    showSlider: opts.viewInfo.minimap.showSlider,\n                    maxColumn: opts.viewInfo.minimap.maxColumn\n                },\n                fixedOverflowWidgets: opts.viewInfo.fixedOverflowWidgets\n            },\n            contribInfo: {\n                selectionClipboard: opts.contribInfo.selectionClipboard,\n                hover: opts.contribInfo.hover,\n                links: (accessibilityIsOn ? false : opts.contribInfo.links),\n                contextmenu: opts.contribInfo.contextmenu,\n                quickSuggestions: opts.contribInfo.quickSuggestions,\n                quickSuggestionsDelay: opts.contribInfo.quickSuggestionsDelay,\n                parameterHints: opts.contribInfo.parameterHints,\n                formatOnType: opts.contribInfo.formatOnType,\n                formatOnPaste: opts.contribInfo.formatOnPaste,\n                suggestOnTriggerCharacters: opts.contribInfo.suggestOnTriggerCharacters,\n                acceptSuggestionOnEnter: opts.contribInfo.acceptSuggestionOnEnter,\n                acceptSuggestionOnCommitCharacter: opts.contribInfo.acceptSuggestionOnCommitCharacter,\n                wordBasedSuggestions: opts.contribInfo.wordBasedSuggestions,\n                suggestSelection: opts.contribInfo.suggestSelection,\n                suggestFontSize: opts.contribInfo.suggestFontSize,\n                suggestLineHeight: opts.contribInfo.suggestLineHeight,\n                tabCompletion: opts.contribInfo.tabCompletion,\n                suggest: opts.contribInfo.suggest,\n                gotoLocation: opts.contribInfo.gotoLocation,\n                selectionHighlight: (accessibilityIsOn ? false : opts.contribInfo.selectionHighlight),\n                occurrencesHighlight: (accessibilityIsOn ? false : opts.contribInfo.occurrencesHighlight),\n                codeLens: (accessibilityIsOn ? false : opts.contribInfo.codeLens),\n                folding: (accessibilityIsOn ? false : opts.contribInfo.folding),\n                foldingStrategy: opts.contribInfo.foldingStrategy,\n                showFoldingControls: opts.contribInfo.showFoldingControls,\n                matchBrackets: (accessibilityIsOn ? false : opts.contribInfo.matchBrackets),\n                find: opts.contribInfo.find,\n                colorDecorators: opts.contribInfo.colorDecorators,\n                lightbulbEnabled: opts.contribInfo.lightbulbEnabled,\n                codeActionsOnSave: opts.contribInfo.codeActionsOnSave,\n                codeActionsOnSaveTimeout: opts.contribInfo.codeActionsOnSaveTimeout\n            }\n        };\n    };\n    InternalEditorOptionsFactory.createInternalEditorOptions = function (env, _opts) {\n        var accessibilitySupport;\n        if (_opts.accessibilitySupport === 'auto') {\n            // The editor reads the `accessibilitySupport` from the environment\n            accessibilitySupport = env.accessibilitySupport;\n        }\n        else if (_opts.accessibilitySupport === 'on') {\n            accessibilitySupport = accessibility_1.AccessibilitySupport.Enabled;\n        }\n        else {\n            accessibilitySupport = accessibility_1.AccessibilitySupport.Disabled;\n        }\n        // Disable some non critical features to get as best performance as possible\n        // See https://github.com/Microsoft/vscode/issues/26730\n        var opts = this._tweakValidatedOptions(_opts, accessibilitySupport);\n        var lineDecorationsWidth;\n        if (typeof opts.lineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(opts.lineDecorationsWidth)) {\n            var multiple = parseFloat(opts.lineDecorationsWidth.substr(0, opts.lineDecorationsWidth.length - 2));\n            lineDecorationsWidth = multiple * env.fontInfo.typicalHalfwidthCharacterWidth;\n        }\n        else {\n            lineDecorationsWidth = _clampedInt(opts.lineDecorationsWidth, 0, 0, 1000);\n        }\n        if (opts.contribInfo.folding) {\n            lineDecorationsWidth += 16;\n        }\n        var layoutInfo = EditorLayoutProvider.compute({\n            outerWidth: env.outerWidth,\n            outerHeight: env.outerHeight,\n            showGlyphMargin: opts.viewInfo.glyphMargin,\n            lineHeight: env.fontInfo.lineHeight,\n            showLineNumbers: (opts.viewInfo.renderLineNumbers !== RenderLineNumbersType.Off),\n            lineNumbersMinChars: opts.lineNumbersMinChars,\n            lineNumbersDigitCount: env.lineNumbersDigitCount,\n            lineDecorationsWidth: lineDecorationsWidth,\n            typicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n            maxDigitWidth: env.fontInfo.maxDigitWidth,\n            verticalScrollbarWidth: opts.viewInfo.scrollbar.verticalScrollbarSize,\n            horizontalScrollbarHeight: opts.viewInfo.scrollbar.horizontalScrollbarSize,\n            scrollbarArrowSize: opts.viewInfo.scrollbar.arrowSize,\n            verticalScrollbarHasArrows: opts.viewInfo.scrollbar.verticalHasArrows,\n            minimap: opts.viewInfo.minimap.enabled,\n            minimapSide: opts.viewInfo.minimap.side,\n            minimapRenderCharacters: opts.viewInfo.minimap.renderCharacters,\n            minimapMaxColumn: opts.viewInfo.minimap.maxColumn,\n            pixelRatio: env.pixelRatio\n        });\n        var bareWrappingInfo = null;\n        {\n            var wordWrap = opts.wordWrap;\n            var wordWrapColumn = opts.wordWrapColumn;\n            var wordWrapMinified = opts.wordWrapMinified;\n            if (accessibilitySupport === accessibility_1.AccessibilitySupport.Enabled) {\n                // See https://github.com/Microsoft/vscode/issues/27766\n                // Never enable wrapping when a screen reader is attached\n                // because arrow down etc. will not move the cursor in the way\n                // a screen reader expects.\n                bareWrappingInfo = {\n                    isWordWrapMinified: false,\n                    isViewportWrapping: false,\n                    wrappingColumn: -1\n                };\n            }\n            else if (wordWrapMinified && env.isDominatedByLongLines) {\n                // Force viewport width wrapping if model is dominated by long lines\n                bareWrappingInfo = {\n                    isWordWrapMinified: true,\n                    isViewportWrapping: true,\n                    wrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n                };\n            }\n            else if (wordWrap === 'on') {\n                bareWrappingInfo = {\n                    isWordWrapMinified: false,\n                    isViewportWrapping: true,\n                    wrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n                };\n            }\n            else if (wordWrap === 'bounded') {\n                bareWrappingInfo = {\n                    isWordWrapMinified: false,\n                    isViewportWrapping: true,\n                    wrappingColumn: Math.min(Math.max(1, layoutInfo.viewportColumn), wordWrapColumn)\n                };\n            }\n            else if (wordWrap === 'wordWrapColumn') {\n                bareWrappingInfo = {\n                    isWordWrapMinified: false,\n                    isViewportWrapping: false,\n                    wrappingColumn: wordWrapColumn\n                };\n            }\n            else {\n                bareWrappingInfo = {\n                    isWordWrapMinified: false,\n                    isViewportWrapping: false,\n                    wrappingColumn: -1\n                };\n            }\n        }\n        var wrappingInfo = {\n            inDiffEditor: opts.inDiffEditor,\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            isWordWrapMinified: bareWrappingInfo.isWordWrapMinified,\n            isViewportWrapping: bareWrappingInfo.isViewportWrapping,\n            wrappingColumn: bareWrappingInfo.wrappingColumn,\n            wrappingIndent: opts.wrappingIndent,\n            wordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n            wordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n            wordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n        };\n        var className = 'monaco-editor';\n        if (opts.viewInfo.extraEditorClassName) {\n            className += ' ' + opts.viewInfo.extraEditorClassName;\n        }\n        if (env.extraEditorClassName) {\n            className += ' ' + env.extraEditorClassName;\n        }\n        if (opts.viewInfo.fontLigatures) {\n            className += ' enable-ligatures';\n        }\n        if (opts.mouseStyle === 'default') {\n            className += ' mouse-default';\n        }\n        else if (opts.mouseStyle === 'copy') {\n            className += ' mouse-copy';\n        }\n        return new InternalEditorOptions({\n            canUseLayerHinting: opts.disableLayerHinting ? false : true,\n            pixelRatio: env.pixelRatio,\n            editorClassName: className,\n            lineHeight: env.fontInfo.lineHeight,\n            readOnly: opts.readOnly,\n            accessibilitySupport: accessibilitySupport,\n            multiCursorModifier: opts.multiCursorModifier,\n            multiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n            wordSeparators: opts.wordSeparators,\n            autoClosingBrackets: opts.autoClosingBrackets,\n            autoClosingQuotes: opts.autoClosingQuotes,\n            autoSurround: opts.autoSurround,\n            autoIndent: opts.autoIndent,\n            useTabStops: opts.useTabStops,\n            tabFocusMode: opts.readOnly ? true : env.tabFocusMode,\n            dragAndDrop: opts.dragAndDrop,\n            emptySelectionClipboard: opts.emptySelectionClipboard && env.emptySelectionClipboard,\n            copyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n            layoutInfo: layoutInfo,\n            fontInfo: env.fontInfo,\n            viewInfo: opts.viewInfo,\n            wrappingInfo: wrappingInfo,\n            contribInfo: opts.contribInfo,\n            showUnused: opts.showUnused,\n        });\n    };\n    return InternalEditorOptionsFactory;\n}());\nexports.InternalEditorOptionsFactory = InternalEditorOptionsFactory;\n/**\n * @internal\n */\nvar EditorLayoutProvider = /** @class */ (function () {\n    function EditorLayoutProvider() {\n    }\n    EditorLayoutProvider.compute = function (_opts) {\n        var outerWidth = _opts.outerWidth | 0;\n        var outerHeight = _opts.outerHeight | 0;\n        var showGlyphMargin = _opts.showGlyphMargin;\n        var lineHeight = _opts.lineHeight | 0;\n        var showLineNumbers = _opts.showLineNumbers;\n        var lineNumbersMinChars = _opts.lineNumbersMinChars | 0;\n        var lineNumbersDigitCount = _opts.lineNumbersDigitCount | 0;\n        var lineDecorationsWidth = _opts.lineDecorationsWidth | 0;\n        var typicalHalfwidthCharacterWidth = _opts.typicalHalfwidthCharacterWidth;\n        var maxDigitWidth = _opts.maxDigitWidth;\n        var verticalScrollbarWidth = _opts.verticalScrollbarWidth | 0;\n        var verticalScrollbarHasArrows = _opts.verticalScrollbarHasArrows;\n        var scrollbarArrowSize = _opts.scrollbarArrowSize | 0;\n        var horizontalScrollbarHeight = _opts.horizontalScrollbarHeight | 0;\n        var minimap = _opts.minimap;\n        var minimapSide = _opts.minimapSide;\n        var minimapRenderCharacters = _opts.minimapRenderCharacters;\n        var minimapMaxColumn = _opts.minimapMaxColumn | 0;\n        var pixelRatio = _opts.pixelRatio;\n        var lineNumbersWidth = 0;\n        if (showLineNumbers) {\n            var digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n            lineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n        }\n        var glyphMarginWidth = 0;\n        if (showGlyphMargin) {\n            glyphMarginWidth = lineHeight;\n        }\n        var glyphMarginLeft = 0;\n        var lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n        var decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n        var contentLeft = decorationsLeft + lineDecorationsWidth;\n        var remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n        var renderMinimap;\n        var minimapLeft;\n        var minimapWidth;\n        var contentWidth;\n        if (!minimap) {\n            minimapLeft = 0;\n            minimapWidth = 0;\n            renderMinimap = RenderMinimap.None;\n            contentWidth = remainingWidth;\n        }\n        else {\n            var minimapCharWidth = void 0;\n            if (pixelRatio >= 2) {\n                renderMinimap = minimapRenderCharacters ? RenderMinimap.Large : RenderMinimap.LargeBlocks;\n                minimapCharWidth = 2 / pixelRatio;\n            }\n            else {\n                renderMinimap = minimapRenderCharacters ? RenderMinimap.Small : RenderMinimap.SmallBlocks;\n                minimapCharWidth = 1 / pixelRatio;\n            }\n            // Given:\n            // (leaving 2px for the cursor to have space after the last character)\n            // viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n            // minimapWidth = viewportColumn * minimapCharWidth\n            // contentWidth = remainingWidth - minimapWidth\n            // What are good values for contentWidth and minimapWidth ?\n            // minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n            // typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n            // typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n            // (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n            // minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n            minimapWidth = Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)));\n            var minimapColumns = minimapWidth / minimapCharWidth;\n            if (minimapColumns > minimapMaxColumn) {\n                minimapWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n            }\n            contentWidth = remainingWidth - minimapWidth;\n            if (minimapSide === 'left') {\n                minimapLeft = 0;\n                glyphMarginLeft += minimapWidth;\n                lineNumbersLeft += minimapWidth;\n                decorationsLeft += minimapWidth;\n                contentLeft += minimapWidth;\n            }\n            else {\n                minimapLeft = outerWidth - minimapWidth - verticalScrollbarWidth;\n            }\n        }\n        // (leaving 2px for the cursor to have space after the last character)\n        var viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n        var verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n        return {\n            width: outerWidth,\n            height: outerHeight,\n            glyphMarginLeft: glyphMarginLeft,\n            glyphMarginWidth: glyphMarginWidth,\n            glyphMarginHeight: outerHeight,\n            lineNumbersLeft: lineNumbersLeft,\n            lineNumbersWidth: lineNumbersWidth,\n            lineNumbersHeight: outerHeight,\n            decorationsLeft: decorationsLeft,\n            decorationsWidth: lineDecorationsWidth,\n            decorationsHeight: outerHeight,\n            contentLeft: contentLeft,\n            contentWidth: contentWidth,\n            contentHeight: outerHeight,\n            renderMinimap: renderMinimap,\n            minimapLeft: minimapLeft,\n            minimapWidth: minimapWidth,\n            viewportColumn: viewportColumn,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            horizontalScrollbarHeight: horizontalScrollbarHeight,\n            overviewRuler: {\n                top: verticalArrowSize,\n                width: verticalScrollbarWidth,\n                height: (outerHeight - 2 * verticalArrowSize),\n                right: 0\n            }\n        };\n    };\n    return EditorLayoutProvider;\n}());\nexports.EditorLayoutProvider = EditorLayoutProvider;\nvar DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nvar DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nvar DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n/**\n * @internal\n */\nexports.EDITOR_FONT_DEFAULTS = {\n    fontFamily: (browser.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\n    fontWeight: 'normal',\n    fontSize: (browser.isMacintosh ? 12 : 14),\n    lineHeight: 0,\n    letterSpacing: 0,\n};\n/**\n * @internal\n */\nexports.EDITOR_MODEL_DEFAULTS = {\n    tabSize: 4,\n    indentSize: 4,\n    insertSpaces: true,\n    detectIndentation: true,\n    trimAutoWhitespace: true,\n    largeFileOptimizations: true\n};\n/**\n * @internal\n */\nexports.EDITOR_DEFAULTS = {\n    inDiffEditor: false,\n    wordSeparators: wordHelper_1.USUAL_WORD_SEPARATORS,\n    lineNumbersMinChars: 5,\n    lineDecorationsWidth: 10,\n    readOnly: false,\n    mouseStyle: 'text',\n    disableLayerHinting: false,\n    automaticLayout: false,\n    wordWrap: 'off',\n    wordWrapColumn: 80,\n    wordWrapMinified: true,\n    wrappingIndent: WrappingIndent.Same,\n    wordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n    wordWrapBreakAfterCharacters: ' \\t})]?|/&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣',\n    wordWrapBreakObtrusiveCharacters: '.',\n    autoClosingBrackets: 'languageDefined',\n    autoClosingQuotes: 'languageDefined',\n    autoSurround: 'languageDefined',\n    autoIndent: true,\n    dragAndDrop: true,\n    emptySelectionClipboard: true,\n    copyWithSyntaxHighlighting: true,\n    useTabStops: true,\n    multiCursorModifier: 'altKey',\n    multiCursorMergeOverlapping: true,\n    accessibilitySupport: 'auto',\n    showUnused: true,\n    viewInfo: {\n        extraEditorClassName: '',\n        disableMonospaceOptimizations: false,\n        rulers: [],\n        ariaLabel: nls.localize('editorViewAccessibleLabel', \"Editor content\"),\n        renderLineNumbers: RenderLineNumbersType.On,\n        renderCustomLineNumbers: null,\n        renderFinalNewline: true,\n        selectOnLineNumbers: true,\n        glyphMargin: true,\n        revealHorizontalRightPadding: 30,\n        roundedSelection: true,\n        overviewRulerLanes: 2,\n        overviewRulerBorder: true,\n        cursorBlinking: TextEditorCursorBlinkingStyle.Blink,\n        mouseWheelZoom: false,\n        cursorSmoothCaretAnimation: false,\n        cursorStyle: TextEditorCursorStyle.Line,\n        cursorWidth: 0,\n        hideCursorInOverviewRuler: false,\n        scrollBeyondLastLine: true,\n        scrollBeyondLastColumn: 5,\n        smoothScrolling: false,\n        stopRenderingLineAfter: 10000,\n        renderWhitespace: 'none',\n        renderControlCharacters: false,\n        fontLigatures: false,\n        renderIndentGuides: true,\n        highlightActiveIndentGuide: true,\n        renderLineHighlight: 'line',\n        scrollbar: {\n            vertical: scrollable_1.ScrollbarVisibility.Auto,\n            horizontal: scrollable_1.ScrollbarVisibility.Auto,\n            arrowSize: 11,\n            useShadows: true,\n            verticalHasArrows: false,\n            horizontalHasArrows: false,\n            horizontalScrollbarSize: 10,\n            horizontalSliderSize: 10,\n            verticalScrollbarSize: 14,\n            verticalSliderSize: 14,\n            handleMouseWheel: true,\n            mouseWheelScrollSensitivity: 1,\n            fastScrollSensitivity: 5,\n        },\n        minimap: {\n            enabled: true,\n            side: 'right',\n            showSlider: 'mouseover',\n            renderCharacters: true,\n            maxColumn: 120\n        },\n        fixedOverflowWidgets: false,\n    },\n    contribInfo: {\n        selectionClipboard: false,\n        hover: {\n            enabled: true,\n            delay: 300,\n            sticky: true\n        },\n        links: true,\n        contextmenu: true,\n        quickSuggestions: { other: true, comments: false, strings: false },\n        quickSuggestionsDelay: 10,\n        parameterHints: {\n            enabled: true,\n            cycle: false\n        },\n        formatOnType: false,\n        formatOnPaste: false,\n        suggestOnTriggerCharacters: true,\n        acceptSuggestionOnEnter: 'on',\n        acceptSuggestionOnCommitCharacter: true,\n        wordBasedSuggestions: true,\n        suggestSelection: 'recentlyUsed',\n        suggestFontSize: 0,\n        suggestLineHeight: 0,\n        tabCompletion: 'off',\n        suggest: {\n            filterGraceful: true,\n            snippets: 'inline',\n            snippetsPreventQuickSuggestions: true,\n            localityBonus: false,\n            shareSuggestSelections: false,\n            showIcons: true,\n            maxVisibleSuggestions: 12,\n            filteredTypes: Object.create(null)\n        },\n        gotoLocation: {\n            multiple: 'peek'\n        },\n        selectionHighlight: true,\n        occurrencesHighlight: true,\n        codeLens: true,\n        folding: true,\n        foldingStrategy: 'auto',\n        showFoldingControls: 'mouseover',\n        matchBrackets: true,\n        find: {\n            seedSearchStringFromSelection: true,\n            autoFindInSelection: false,\n            globalFindClipboard: false,\n            addExtraSpaceOnTop: true\n        },\n        colorDecorators: true,\n        lightbulbEnabled: true,\n        codeActionsOnSave: {},\n        codeActionsOnSaveTimeout: 750\n    },\n};\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorOptions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorOptions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as objects from 'vs/base/common/objects';\nimport * as platform from 'vs/base/common/platform';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { USUAL_WORD_SEPARATORS } from 'vs/editor/common/model/wordHelper';\nimport * as nls from 'vs/nls';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { isObject } from 'vs/base/common/types';\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Render horizontal scrollbar.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: 'auto' | 'visible' | 'hidden';\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to true.\n\t */\n\tuseShadows?: boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical slider.\n\t * Defaults to `verticalScrollbarSize`.\n\t */\n\tverticalSliderSize?: number;\n\t/**\n\t * Height in pixels for the horizontal slider.\n\t * Defaults to `horizontalScrollbarSize`.\n\t */\n\thorizontalSliderSize?: number;\n}\n\n/**\n * Configuration options for editor find widget\n */\nexport interface IEditorFindOptions {\n\t/**\n\t * Controls if we seed search string in the Find Widget with editor selection.\n\t */\n\tseedSearchStringFromSelection?: boolean;\n\t/**\n\t * Controls if Find in Selection flag is turned on when multiple lines of text are selected in the editor.\n\t */\n\tautoFindInSelection: boolean;\n\t/*\n\t * Controls whether the Find Widget should add extra lines on top of the editor.\n\t */\n\taddExtraSpaceOnTop?: boolean;\n\t/**\n\t * @internal\n\t * Controls if the Find Widget should read or modify the shared find clipboard on macOS\n\t */\n\tglobalFindClipboard: boolean;\n}\n\n/**\n * Configuration options for auto closing quotes and brackets\n */\nexport type EditorAutoClosingStrategy = 'always' | 'languageDefined' | 'beforeWhitespace' | 'never';\n\n/**\n * Configuration options for auto wrapping quotes and brackets\n */\nexport type EditorAutoSurroundStrategy = 'languageDefined' | 'quotes' | 'brackets' | 'never';\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorMinimapOptions {\n\t/**\n\t * Enable the rendering of the minimap.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Control the side of the minimap in editor.\n\t * Defaults to 'right'.\n\t */\n\tside?: 'right' | 'left';\n\t/**\n\t * Control the rendering of the minimap slider.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowSlider?: 'always' | 'mouseover';\n\t/**\n\t * Render the actual text on a line (as opposed to color blocks).\n\t * Defaults to true.\n\t */\n\trenderCharacters?: boolean;\n\t/**\n\t * Limit the width of the minimap to render at most a certain number of columns.\n\t * Defaults to 120.\n\t */\n\tmaxColumn?: number;\n}\n\n/**\n * Configuration options for editor minimap\n */\nexport interface IEditorLightbulbOptions {\n\t/**\n\t * Enable the lightbulb code action.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n}\n\n/**\n * Configuration options for editor hover\n */\nexport interface IEditorHoverOptions {\n\t/**\n\t * Enable the hover.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Delay for showing the hover.\n\t * Defaults to 300.\n\t */\n\tdelay?: number;\n\t/**\n\t * Is the hover sticky such that it can be clicked and its contents selected?\n\t * Defaults to true.\n\t */\n\tsticky?: boolean;\n}\n\n/**\n * Configuration options for parameter hints\n */\nexport interface IEditorParameterHintOptions {\n\t/**\n\t * Enable parameter hints.\n\t * Defaults to true.\n\t */\n\tenabled?: boolean;\n\t/**\n\t * Enable cycling of parameter hints.\n\t * Defaults to false.\n\t */\n\tcycle?: boolean;\n}\n\nexport interface ISuggestOptions {\n\t/**\n\t * Enable graceful matching. Defaults to true.\n\t */\n\tfilterGraceful?: boolean;\n\t/**\n\t * Prevent quick suggestions when a snippet is active. Defaults to true.\n\t */\n\tsnippetsPreventQuickSuggestions?: boolean;\n\t/**\n\t * Favours words that appear close to the cursor.\n\t */\n\tlocalityBonus?: boolean;\n\t/**\n\t * Enable using global storage for remembering suggestions.\n\t */\n\tshareSuggestSelections?: boolean;\n\t/**\n\t * Enable or disable icons in suggestions. Defaults to true.\n\t */\n\tshowIcons?: boolean;\n\t/**\n\t * Max suggestions to show in suggestions. Defaults to 12.\n\t */\n\tmaxVisibleSuggestions?: boolean;\n\t/**\n\t * Names of suggestion types to filter.\n\t */\n\tfilteredTypes?: Record<string, boolean>;\n}\n\nexport interface IGotoLocationOptions {\n\t/**\n\t * Control how goto-command work when having multiple results.\n\t */\n\tmultiple?: 'peek' | 'gotoAndPeek' | 'goto';\n}\n\n/**\n * Configuration map for codeActionsOnSave\n */\nexport interface ICodeActionsOnSaveOptions {\n\t[kind: string]: boolean;\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions {\n\t/**\n\t * This editor is used inside a diff editor.\n\t * @internal\n\t */\n\tinDiffEditor?: boolean;\n\t/**\n\t * The aria label for the editor's textarea (when it is focused).\n\t */\n\tariaLabel?: string;\n\t/**\n\t * Render vertical lines at the specified columns.\n\t * Defaults to empty array.\n\t */\n\trulers?: number[];\n\t/**\n\t * A string containing the word separators used when doing word navigation.\n\t * Defaults to `~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?\n\t */\n\twordSeparators?: string;\n\t/**\n\t * Enable Linux primary clipboard.\n\t * Defaults to true.\n\t */\n\tselectionClipboard?: boolean;\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to true.\n\t */\n\tlineNumbers?: 'on' | 'off' | 'relative' | 'interval' | ((lineNumber: number) => string);\n\t/**\n\t * Render last line number when the file ends with a newline.\n\t * Defaults to true.\n\t*/\n\trenderFinalNewline?: boolean;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?: boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?: number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to true in vscode and to false in monaco-editor.\n\t */\n\tglyphMargin?: boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?: number | string;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?: number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?: boolean;\n\t/**\n\t * Class name to be added to the editor.\n\t */\n\textraEditorClassName?: string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?: boolean;\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?: IEditorScrollbarOptions;\n\t/**\n\t * Control the behavior and rendering of the minimap.\n\t */\n\tminimap?: IEditorMinimapOptions;\n\t/**\n\t * Control the behavior of the find widget.\n\t */\n\tfind?: IEditorFindOptions;\n\t/**\n\t * Display overflow widgets as `fixed`.\n\t * Defaults to `false`.\n\t */\n\tfixedOverflowWidgets?: boolean;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 2.\n\t */\n\toverviewRulerLanes?: number;\n\t/**\n\t * Controls if a border should be drawn around the overview ruler.\n\t * Defaults to `true`.\n\t */\n\toverviewRulerBorder?: boolean;\n\t/**\n\t * Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?: string;\n\t/**\n\t * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n\t * Defaults to false.\n\t */\n\tmouseWheelZoom?: boolean;\n\t/**\n\t * Control the mouse pointer style, either 'text' or 'default' or 'copy'\n\t * Defaults to 'text'\n\t * @internal\n\t */\n\tmouseStyle?: 'text' | 'default' | 'copy';\n\t/**\n\t * Enable smooth caret animation.\n\t * Defaults to false.\n\t */\n\tcursorSmoothCaretAnimation?: boolean;\n\t/**\n\t * Control the cursor style, either 'block' or 'line'.\n\t * Defaults to 'line'.\n\t */\n\tcursorStyle?: string;\n\t/**\n\t * Control the width of the cursor when cursorStyle is set to 'line'\n\t */\n\tcursorWidth?: number;\n\t/**\n\t * Enable font ligatures.\n\t * Defaults to false.\n\t */\n\tfontLigatures?: boolean;\n\t/**\n\t * Disable the use of `will-change` for the editor margin and lines layers.\n\t * The usage of `will-change` acts as a hint for browsers to create an extra layer.\n\t * Defaults to false.\n\t */\n\tdisableLayerHinting?: boolean;\n\t/**\n\t * Disable the optimizations for monospace fonts.\n\t * Defaults to false.\n\t */\n\tdisableMonospaceOptimizations?: boolean;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?: boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?: boolean;\n\t/**\n\t * Enable that scrolling can go beyond the last column by a number of columns.\n\t * Defaults to 5.\n\t */\n\tscrollBeyondLastColumn?: number;\n\t/**\n\t * Enable that the editor animates scrolling to a position.\n\t * Defaults to false.\n\t */\n\tsmoothScrolling?: boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?: boolean;\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to \"off\".\n\t */\n\twordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\t/**\n\t * Control the wrapping of the editor.\n\t * When `wordWrap` = \"off\", the lines will never wrap.\n\t * When `wordWrap` = \"on\", the lines will wrap at the viewport width.\n\t * When `wordWrap` = \"wordWrapColumn\", the lines will wrap at `wordWrapColumn`.\n\t * When `wordWrap` = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn).\n\t * Defaults to 80.\n\t */\n\twordWrapColumn?: number;\n\t/**\n\t * Force word wrapping when the text appears to be of a minified/generated file.\n\t * Defaults to true.\n\t */\n\twordWrapMinified?: boolean;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'.\n\t * Defaults to 'same' in vscode and to 'none' in monaco-editor.\n\t */\n\twrappingIndent?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '{([+'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|&,;'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n\t * Defaults to '.'.\n\t */\n\twordWrapBreakObtrusiveCharacters?: string;\n\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?: number;\n\t/**\n\t * Configure the editor's hover.\n\t */\n\thover?: IEditorHoverOptions;\n\t/**\n\t * Enable detecting links and making them clickable.\n\t * Defaults to true.\n\t */\n\tlinks?: boolean;\n\t/**\n\t * Enable inline color decorators and color picker rendering.\n\t */\n\tcolorDecorators?: boolean;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?: boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * FastScrolling mulitplier speed when pressing `Alt`\n\t * Defaults to 5.\n\t */\n\tfastScrollSensitivity?: number;\n\t/**\n\t * The modifier to be used to add multiple cursors with the mouse.\n\t * Defaults to 'alt'\n\t */\n\tmultiCursorModifier?: 'ctrlCmd' | 'alt';\n\t/**\n\t * Merge overlapping selections.\n\t * Defaults to true\n\t */\n\tmultiCursorMergeOverlapping?: boolean;\n\t/**\n\t * Configure the editor's accessibility support.\n\t * Defaults to 'auto'. It is best to leave this to 'auto'.\n\t */\n\taccessibilitySupport?: 'auto' | 'off' | 'on';\n\t/**\n\t * Suggest options.\n\t */\n\tsuggest?: ISuggestOptions;\n\t/**\n\t *\n\t */\n\tgotoLocation?: IGotoLocationOptions;\n\t/**\n\t * Enable quick suggestions (shadow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?: boolean | { other: boolean, comments: boolean, strings: boolean };\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 500 (ms)\n\t */\n\tquickSuggestionsDelay?: number;\n\t/**\n\t * Parameter hint options.\n\t */\n\tparameterHints?: IEditorParameterHintOptions;\n\t/**\n\t * Options for auto closing brackets.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingBrackets?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto closing quotes.\n\t * Defaults to language defined behavior.\n\t */\n\tautoClosingQuotes?: EditorAutoClosingStrategy;\n\t/**\n\t * Options for auto surrounding.\n\t * Defaults to always allowing auto surrounding.\n\t */\n\tautoSurround?: EditorAutoSurroundStrategy;\n\t/**\n\t * Enable auto indentation adjustment.\n\t * Defaults to false.\n\t */\n\tautoIndent?: boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?: boolean;\n\t/**\n\t * Enable format on paste.\n\t * Defaults to false.\n\t */\n\tformatOnPaste?: boolean;\n\t/**\n\t * Controls if the editor should allow to move selections via drag and drop.\n\t * Defaults to false.\n\t */\n\tdragAndDrop?: boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?: boolean;\n\t/**\n\t * Accept suggestions on ENTER.\n\t * Defaults to 'on'.\n\t */\n\tacceptSuggestionOnEnter?: boolean | 'on' | 'smart' | 'off';\n\t/**\n\t * Accept suggestions on provider defined characters.\n\t * Defaults to true.\n\t */\n\tacceptSuggestionOnCommitCharacter?: boolean;\n\t/**\n\t * Enable snippet suggestions. Default to 'true'.\n\t */\n\tsnippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n\t/**\n\t * Copying without a selection copies the current line.\n\t */\n\temptySelectionClipboard?: boolean;\n\t/**\n\t * Syntax highlighting is copied.\n\t */\n\tcopyWithSyntaxHighlighting?: boolean;\n\t/**\n\t * Enable word based suggestions. Defaults to 'true'\n\t */\n\twordBasedSuggestions?: boolean;\n\t/**\n\t * The history mode for suggestions.\n\t */\n\tsuggestSelection?: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\t/**\n\t * The font size for the suggest widget.\n\t * Defaults to the editor font size.\n\t */\n\tsuggestFontSize?: number;\n\t/**\n\t * The line height for the suggest widget.\n\t * Defaults to the editor line height.\n\t */\n\tsuggestLineHeight?: number;\n\t/**\n\t * Enable tab completion.\n\t */\n\ttabCompletion?: boolean | 'on' | 'off' | 'onlySnippets';\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?: boolean;\n\t/**\n\t * Enable semantic occurrences highlight.\n\t * Defaults to true.\n\t */\n\toccurrencesHighlight?: boolean;\n\t/**\n\t * Show code lens\n\t * Defaults to true.\n\t */\n\tcodeLens?: boolean;\n\t/**\n\t * Control the behavior and rendering of the code action lightbulb.\n\t */\n\tlightbulb?: IEditorLightbulbOptions;\n\t/**\n\t * Code action kinds to be run on save.\n\t */\n\tcodeActionsOnSave?: ICodeActionsOnSaveOptions;\n\t/**\n\t * Timeout for running code actions on save.\n\t */\n\tcodeActionsOnSaveTimeout?: number;\n\t/**\n\t * Enable code folding\n\t * Defaults to true.\n\t */\n\tfolding?: boolean;\n\t/**\n\t * Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy.\n\t * Defaults to 'auto'.\n\t */\n\tfoldingStrategy?: 'auto' | 'indentation';\n\t/**\n\t * Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter.\n\t * Defaults to 'mouseover'.\n\t */\n\tshowFoldingControls?: 'always' | 'mouseover';\n\t/**\n\t * Enable highlighting of matching brackets.\n\t * Defaults to true.\n\t */\n\tmatchBrackets?: boolean;\n\t/**\n\t * Enable rendering of whitespace.\n\t * Defaults to none.\n\t */\n\trenderWhitespace?: 'none' | 'boundary' | 'all';\n\t/**\n\t * Enable rendering of control characters.\n\t * Defaults to false.\n\t */\n\trenderControlCharacters?: boolean;\n\t/**\n\t * Enable rendering of indent guides.\n\t * Defaults to true.\n\t */\n\trenderIndentGuides?: boolean;\n\t/**\n\t * Enable highlighting of the active indent guide.\n\t * Defaults to true.\n\t */\n\thighlightActiveIndentGuide?: boolean;\n\t/**\n\t * Enable rendering of current line highlight.\n\t * Defaults to all.\n\t */\n\trenderLineHighlight?: 'none' | 'gutter' | 'line' | 'all';\n\t/**\n\t * Inserting and deleting whitespace follows tab stops.\n\t */\n\tuseTabStops?: boolean;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font weight\n\t */\n\tfontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n\t/**\n\t * The letter spacing\n\t */\n\tletterSpacing?: number;\n\t/**\n\t * Controls fading out of unused variables.\n\t */\n\tshowUnused?: boolean;\n}\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n\t/**\n\t * Render +/- indicators for added/deleted changes.\n\t * Defaults to true.\n\t */\n\trenderIndicators?: boolean;\n\t/**\n\t * Original model should be editable?\n\t * Defaults to false.\n\t */\n\toriginalEditable?: boolean;\n}\n\nexport const enum RenderMinimap {\n\tNone = 0,\n\tSmall = 1,\n\tLarge = 2,\n\tSmallBlocks = 3,\n\tLargeBlocks = 4,\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport const enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport const enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n/**\n * @internal\n */\nexport function blinkingStyleToString(blinkingStyle: TextEditorCursorBlinkingStyle): string {\n\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\treturn 'blink';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Expand) {\n\t\treturn 'expand';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Phase) {\n\t\treturn 'phase';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Smooth) {\n\t\treturn 'smooth';\n\t} else if (blinkingStyle === TextEditorCursorBlinkingStyle.Solid) {\n\t\treturn 'solid';\n\t} else {\n\t\tthrow new Error('blinkingStyleToString: Unknown blinkingStyle');\n\t}\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * @internal\n */\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): string {\n\tif (cursorStyle === TextEditorCursorStyle.Line) {\n\t\treturn 'line';\n\t} else if (cursorStyle === TextEditorCursorStyle.Block) {\n\t\treturn 'block';\n\t} else if (cursorStyle === TextEditorCursorStyle.Underline) {\n\t\treturn 'underline';\n\t} else if (cursorStyle === TextEditorCursorStyle.LineThin) {\n\t\treturn 'line-thin';\n\t} else if (cursorStyle === TextEditorCursorStyle.BlockOutline) {\n\t\treturn 'block-outline';\n\t} else if (cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n\t\treturn 'underline-thin';\n\t} else {\n\t\tthrow new Error('cursorStyleToString: Unknown cursorStyle');\n\t}\n}\n\nfunction _cursorStyleFromString(cursorStyle: string | undefined, defaultValue: TextEditorCursorStyle): TextEditorCursorStyle {\n\tif (typeof cursorStyle !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (cursorStyle === 'line') {\n\t\treturn TextEditorCursorStyle.Line;\n\t} else if (cursorStyle === 'block') {\n\t\treturn TextEditorCursorStyle.Block;\n\t} else if (cursorStyle === 'underline') {\n\t\treturn TextEditorCursorStyle.Underline;\n\t} else if (cursorStyle === 'line-thin') {\n\t\treturn TextEditorCursorStyle.LineThin;\n\t} else if (cursorStyle === 'block-outline') {\n\t\treturn TextEditorCursorStyle.BlockOutline;\n\t} else if (cursorStyle === 'underline-thin') {\n\t\treturn TextEditorCursorStyle.UnderlineThin;\n\t}\n\treturn TextEditorCursorStyle.Line;\n}\n\nexport interface InternalEditorScrollbarOptions {\n\treadonly arrowSize: number;\n\treadonly vertical: ScrollbarVisibility;\n\treadonly horizontal: ScrollbarVisibility;\n\treadonly useShadows: boolean;\n\treadonly verticalHasArrows: boolean;\n\treadonly horizontalHasArrows: boolean;\n\treadonly handleMouseWheel: boolean;\n\treadonly horizontalScrollbarSize: number;\n\treadonly horizontalSliderSize: number;\n\treadonly verticalScrollbarSize: number;\n\treadonly verticalSliderSize: number;\n\treadonly mouseWheelScrollSensitivity: number;\n\treadonly fastScrollSensitivity: number;\n}\n\nexport interface InternalEditorMinimapOptions {\n\treadonly enabled: boolean;\n\treadonly side: 'right' | 'left';\n\treadonly showSlider: 'always' | 'mouseover';\n\treadonly renderCharacters: boolean;\n\treadonly maxColumn: number;\n}\n\nexport interface InternalEditorFindOptions {\n\treadonly seedSearchStringFromSelection: boolean;\n\treadonly autoFindInSelection: boolean;\n\treadonly addExtraSpaceOnTop: boolean;\n\t/**\n\t * @internal\n\t */\n\treadonly globalFindClipboard: boolean;\n}\n\nexport interface InternalEditorHoverOptions {\n\treadonly enabled: boolean;\n\treadonly delay: number;\n\treadonly sticky: boolean;\n}\n\nexport interface InternalGoToLocationOptions {\n\treadonly multiple: 'peek' | 'gotoAndPeek' | 'goto';\n}\n\nexport interface InternalSuggestOptions {\n\treadonly filterGraceful: boolean;\n\treadonly snippets: 'top' | 'bottom' | 'inline' | 'none';\n\treadonly snippetsPreventQuickSuggestions: boolean;\n\treadonly localityBonus: boolean;\n\treadonly shareSuggestSelections: boolean;\n\treadonly showIcons: boolean;\n\treadonly maxVisibleSuggestions: number;\n\treadonly filteredTypes: Record<string, boolean>;\n}\n\nexport interface InternalParameterHintOptions {\n\treadonly enabled: boolean;\n\treadonly cycle: boolean;\n}\n\nexport interface EditorWrappingInfo {\n\treadonly inDiffEditor: boolean;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly isWordWrapMinified: boolean;\n\treadonly isViewportWrapping: boolean;\n\treadonly wrappingColumn: number;\n\treadonly wrappingIndent: WrappingIndent;\n\treadonly wordWrapBreakBeforeCharacters: string;\n\treadonly wordWrapBreakAfterCharacters: string;\n\treadonly wordWrapBreakObtrusiveCharacters: string;\n}\n\nexport const enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport interface InternalEditorViewOptions {\n\treadonly extraEditorClassName: string;\n\treadonly disableMonospaceOptimizations: boolean;\n\treadonly rulers: number[];\n\treadonly ariaLabel: string;\n\treadonly renderLineNumbers: RenderLineNumbersType;\n\treadonly renderCustomLineNumbers: ((lineNumber: number) => string) | null;\n\treadonly renderFinalNewline: boolean;\n\treadonly selectOnLineNumbers: boolean;\n\treadonly glyphMargin: boolean;\n\treadonly revealHorizontalRightPadding: number;\n\treadonly roundedSelection: boolean;\n\treadonly overviewRulerLanes: number;\n\treadonly overviewRulerBorder: boolean;\n\treadonly cursorBlinking: TextEditorCursorBlinkingStyle;\n\treadonly mouseWheelZoom: boolean;\n\treadonly cursorSmoothCaretAnimation: boolean;\n\treadonly cursorStyle: TextEditorCursorStyle;\n\treadonly cursorWidth: number;\n\treadonly hideCursorInOverviewRuler: boolean;\n\treadonly scrollBeyondLastLine: boolean;\n\treadonly scrollBeyondLastColumn: number;\n\treadonly smoothScrolling: boolean;\n\treadonly stopRenderingLineAfter: number;\n\treadonly renderWhitespace: 'none' | 'boundary' | 'all';\n\treadonly renderControlCharacters: boolean;\n\treadonly fontLigatures: boolean;\n\treadonly renderIndentGuides: boolean;\n\treadonly highlightActiveIndentGuide: boolean;\n\treadonly renderLineHighlight: 'none' | 'gutter' | 'line' | 'all';\n\treadonly scrollbar: InternalEditorScrollbarOptions;\n\treadonly minimap: InternalEditorMinimapOptions;\n\treadonly fixedOverflowWidgets: boolean;\n}\n\nexport interface EditorContribOptions {\n\treadonly selectionClipboard: boolean;\n\treadonly hover: InternalEditorHoverOptions;\n\treadonly links: boolean;\n\treadonly contextmenu: boolean;\n\treadonly quickSuggestions: boolean | { other: boolean, comments: boolean, strings: boolean };\n\treadonly quickSuggestionsDelay: number;\n\treadonly parameterHints: InternalParameterHintOptions;\n\treadonly formatOnType: boolean;\n\treadonly formatOnPaste: boolean;\n\treadonly suggestOnTriggerCharacters: boolean;\n\treadonly acceptSuggestionOnEnter: 'on' | 'smart' | 'off';\n\treadonly acceptSuggestionOnCommitCharacter: boolean;\n\treadonly wordBasedSuggestions: boolean;\n\treadonly suggestSelection: 'first' | 'recentlyUsed' | 'recentlyUsedByPrefix';\n\treadonly suggestFontSize: number;\n\treadonly suggestLineHeight: number;\n\treadonly tabCompletion: 'on' | 'off' | 'onlySnippets';\n\treadonly suggest: InternalSuggestOptions;\n\treadonly gotoLocation: InternalGoToLocationOptions;\n\treadonly selectionHighlight: boolean;\n\treadonly occurrencesHighlight: boolean;\n\treadonly codeLens: boolean;\n\treadonly folding: boolean;\n\treadonly foldingStrategy: 'auto' | 'indentation';\n\treadonly showFoldingControls: 'always' | 'mouseover';\n\treadonly matchBrackets: boolean;\n\treadonly find: InternalEditorFindOptions;\n\treadonly colorDecorators: boolean;\n\treadonly lightbulbEnabled: boolean;\n\treadonly codeActionsOnSave: ICodeActionsOnSaveOptions;\n\treadonly codeActionsOnSaveTimeout: number;\n}\n\n/**\n * Validated configuration options for the editor.\n * This is a 1 to 1 validated/parsed version of IEditorOptions merged on top of the defaults.\n * @internal\n */\nexport interface IValidatedEditorOptions {\n\treadonly inDiffEditor: boolean;\n\treadonly wordSeparators: string;\n\treadonly lineNumbersMinChars: number;\n\treadonly lineDecorationsWidth: number | string;\n\treadonly readOnly: boolean;\n\treadonly mouseStyle: 'text' | 'default' | 'copy';\n\treadonly disableLayerHinting: boolean;\n\treadonly automaticLayout: boolean;\n\treadonly wordWrap: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n\treadonly wordWrapColumn: number;\n\treadonly wordWrapMinified: boolean;\n\treadonly wrappingIndent: WrappingIndent;\n\treadonly wordWrapBreakBeforeCharacters: string;\n\treadonly wordWrapBreakAfterCharacters: string;\n\treadonly wordWrapBreakObtrusiveCharacters: string;\n\treadonly autoClosingBrackets: EditorAutoClosingStrategy;\n\treadonly autoClosingQuotes: EditorAutoClosingStrategy;\n\treadonly autoSurround: EditorAutoSurroundStrategy;\n\treadonly autoIndent: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\treadonly useTabStops: boolean;\n\treadonly multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly accessibilitySupport: 'auto' | 'off' | 'on';\n\treadonly showUnused: boolean;\n\n\treadonly viewInfo: InternalEditorViewOptions;\n\treadonly contribInfo: EditorContribOptions;\n}\n\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nexport class InternalEditorOptions {\n\treadonly _internalEditorOptionsBrand: void;\n\n\treadonly canUseLayerHinting: boolean;\n\treadonly pixelRatio: number;\n\treadonly editorClassName: string;\n\treadonly lineHeight: number;\n\treadonly readOnly: boolean;\n\t/**\n\t * @internal\n\t */\n\treadonly accessibilitySupport: AccessibilitySupport;\n\treadonly multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly showUnused: boolean;\n\n\t// ---- cursor options\n\treadonly wordSeparators: string;\n\treadonly autoClosingBrackets: EditorAutoClosingStrategy;\n\treadonly autoClosingQuotes: EditorAutoClosingStrategy;\n\treadonly autoSurround: EditorAutoSurroundStrategy;\n\treadonly autoIndent: boolean;\n\treadonly useTabStops: boolean;\n\treadonly tabFocusMode: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\n\t// ---- grouped options\n\treadonly layoutInfo: EditorLayoutInfo;\n\treadonly fontInfo: FontInfo;\n\treadonly viewInfo: InternalEditorViewOptions;\n\treadonly wrappingInfo: EditorWrappingInfo;\n\treadonly contribInfo: EditorContribOptions;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(source: {\n\t\tcanUseLayerHinting: boolean;\n\t\tpixelRatio: number;\n\t\teditorClassName: string;\n\t\tlineHeight: number;\n\t\treadOnly: boolean;\n\t\taccessibilitySupport: AccessibilitySupport;\n\t\tmultiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey';\n\t\tmultiCursorMergeOverlapping: boolean;\n\t\twordSeparators: string;\n\t\tautoClosingBrackets: EditorAutoClosingStrategy;\n\t\tautoClosingQuotes: EditorAutoClosingStrategy;\n\t\tautoSurround: EditorAutoSurroundStrategy;\n\t\tautoIndent: boolean;\n\t\tuseTabStops: boolean;\n\t\ttabFocusMode: boolean;\n\t\tdragAndDrop: boolean;\n\t\temptySelectionClipboard: boolean;\n\t\tcopyWithSyntaxHighlighting: boolean;\n\t\tlayoutInfo: EditorLayoutInfo;\n\t\tfontInfo: FontInfo;\n\t\tviewInfo: InternalEditorViewOptions;\n\t\twrappingInfo: EditorWrappingInfo;\n\t\tcontribInfo: EditorContribOptions;\n\t\tshowUnused: boolean;\n\t}) {\n\t\tthis.canUseLayerHinting = source.canUseLayerHinting;\n\t\tthis.pixelRatio = source.pixelRatio;\n\t\tthis.editorClassName = source.editorClassName;\n\t\tthis.lineHeight = source.lineHeight | 0;\n\t\tthis.readOnly = source.readOnly;\n\t\tthis.accessibilitySupport = source.accessibilitySupport;\n\t\tthis.multiCursorModifier = source.multiCursorModifier;\n\t\tthis.multiCursorMergeOverlapping = source.multiCursorMergeOverlapping;\n\t\tthis.wordSeparators = source.wordSeparators;\n\t\tthis.autoClosingBrackets = source.autoClosingBrackets;\n\t\tthis.autoClosingQuotes = source.autoClosingQuotes;\n\t\tthis.autoSurround = source.autoSurround;\n\t\tthis.autoIndent = source.autoIndent;\n\t\tthis.useTabStops = source.useTabStops;\n\t\tthis.tabFocusMode = source.tabFocusMode;\n\t\tthis.dragAndDrop = source.dragAndDrop;\n\t\tthis.emptySelectionClipboard = source.emptySelectionClipboard;\n\t\tthis.copyWithSyntaxHighlighting = source.copyWithSyntaxHighlighting;\n\t\tthis.layoutInfo = source.layoutInfo;\n\t\tthis.fontInfo = source.fontInfo;\n\t\tthis.viewInfo = source.viewInfo;\n\t\tthis.wrappingInfo = source.wrappingInfo;\n\t\tthis.contribInfo = source.contribInfo;\n\t\tthis.showUnused = source.showUnused;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: InternalEditorOptions): boolean {\n\t\treturn (\n\t\t\tthis.canUseLayerHinting === other.canUseLayerHinting\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.editorClassName === other.editorClassName\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.readOnly === other.readOnly\n\t\t\t&& this.accessibilitySupport === other.accessibilitySupport\n\t\t\t&& this.multiCursorModifier === other.multiCursorModifier\n\t\t\t&& this.multiCursorMergeOverlapping === other.multiCursorMergeOverlapping\n\t\t\t&& this.wordSeparators === other.wordSeparators\n\t\t\t&& this.autoClosingBrackets === other.autoClosingBrackets\n\t\t\t&& this.autoClosingQuotes === other.autoClosingQuotes\n\t\t\t&& this.autoSurround === other.autoSurround\n\t\t\t&& this.autoIndent === other.autoIndent\n\t\t\t&& this.useTabStops === other.useTabStops\n\t\t\t&& this.tabFocusMode === other.tabFocusMode\n\t\t\t&& this.dragAndDrop === other.dragAndDrop\n\t\t\t&& this.showUnused === other.showUnused\n\t\t\t&& this.emptySelectionClipboard === other.emptySelectionClipboard\n\t\t\t&& this.copyWithSyntaxHighlighting === other.copyWithSyntaxHighlighting\n\t\t\t&& InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, other.layoutInfo)\n\t\t\t&& this.fontInfo.equals(other.fontInfo)\n\t\t\t&& InternalEditorOptions._equalsViewOptions(this.viewInfo, other.viewInfo)\n\t\t\t&& InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, other.wrappingInfo)\n\t\t\t&& InternalEditorOptions._equalsContribOptions(this.contribInfo, other.contribInfo)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: InternalEditorOptions): IConfigurationChangedEvent {\n\t\treturn {\n\t\t\tcanUseLayerHinting: (this.canUseLayerHinting !== newOpts.canUseLayerHinting),\n\t\t\tpixelRatio: (this.pixelRatio !== newOpts.pixelRatio),\n\t\t\teditorClassName: (this.editorClassName !== newOpts.editorClassName),\n\t\t\tlineHeight: (this.lineHeight !== newOpts.lineHeight),\n\t\t\treadOnly: (this.readOnly !== newOpts.readOnly),\n\t\t\taccessibilitySupport: (this.accessibilitySupport !== newOpts.accessibilitySupport),\n\t\t\tmultiCursorModifier: (this.multiCursorModifier !== newOpts.multiCursorModifier),\n\t\t\tmultiCursorMergeOverlapping: (this.multiCursorMergeOverlapping !== newOpts.multiCursorMergeOverlapping),\n\t\t\twordSeparators: (this.wordSeparators !== newOpts.wordSeparators),\n\t\t\tautoClosingBrackets: (this.autoClosingBrackets !== newOpts.autoClosingBrackets),\n\t\t\tautoClosingQuotes: (this.autoClosingQuotes !== newOpts.autoClosingQuotes),\n\t\t\tautoSurround: (this.autoSurround !== newOpts.autoSurround),\n\t\t\tautoIndent: (this.autoIndent !== newOpts.autoIndent),\n\t\t\tuseTabStops: (this.useTabStops !== newOpts.useTabStops),\n\t\t\ttabFocusMode: (this.tabFocusMode !== newOpts.tabFocusMode),\n\t\t\tdragAndDrop: (this.dragAndDrop !== newOpts.dragAndDrop),\n\t\t\temptySelectionClipboard: (this.emptySelectionClipboard !== newOpts.emptySelectionClipboard),\n\t\t\tcopyWithSyntaxHighlighting: (this.copyWithSyntaxHighlighting !== newOpts.copyWithSyntaxHighlighting),\n\t\t\tlayoutInfo: (!InternalEditorOptions._equalsLayoutInfo(this.layoutInfo, newOpts.layoutInfo)),\n\t\t\tfontInfo: (!this.fontInfo.equals(newOpts.fontInfo)),\n\t\t\tviewInfo: (!InternalEditorOptions._equalsViewOptions(this.viewInfo, newOpts.viewInfo)),\n\t\t\twrappingInfo: (!InternalEditorOptions._equalsWrappingInfo(this.wrappingInfo, newOpts.wrappingInfo)),\n\t\t\tcontribInfo: (!InternalEditorOptions._equalsContribOptions(this.contribInfo, newOpts.contribInfo))\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsLayoutInfo(a: EditorLayoutInfo, b: EditorLayoutInfo): boolean {\n\t\treturn (\n\t\t\ta.width === b.width\n\t\t\t&& a.height === b.height\n\t\t\t&& a.glyphMarginLeft === b.glyphMarginLeft\n\t\t\t&& a.glyphMarginWidth === b.glyphMarginWidth\n\t\t\t&& a.glyphMarginHeight === b.glyphMarginHeight\n\t\t\t&& a.lineNumbersLeft === b.lineNumbersLeft\n\t\t\t&& a.lineNumbersWidth === b.lineNumbersWidth\n\t\t\t&& a.lineNumbersHeight === b.lineNumbersHeight\n\t\t\t&& a.decorationsLeft === b.decorationsLeft\n\t\t\t&& a.decorationsWidth === b.decorationsWidth\n\t\t\t&& a.decorationsHeight === b.decorationsHeight\n\t\t\t&& a.contentLeft === b.contentLeft\n\t\t\t&& a.contentWidth === b.contentWidth\n\t\t\t&& a.contentHeight === b.contentHeight\n\t\t\t&& a.renderMinimap === b.renderMinimap\n\t\t\t&& a.minimapLeft === b.minimapLeft\n\t\t\t&& a.minimapWidth === b.minimapWidth\n\t\t\t&& a.viewportColumn === b.viewportColumn\n\t\t\t&& a.verticalScrollbarWidth === b.verticalScrollbarWidth\n\t\t\t&& a.horizontalScrollbarHeight === b.horizontalScrollbarHeight\n\t\t\t&& this._equalsOverviewRuler(a.overviewRuler, b.overviewRuler)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsOverviewRuler(a: OverviewRulerPosition, b: OverviewRulerPosition): boolean {\n\t\treturn (\n\t\t\ta.width === b.width\n\t\t\t&& a.height === b.height\n\t\t\t&& a.top === b.top\n\t\t\t&& a.right === b.right\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsViewOptions(a: InternalEditorViewOptions, b: InternalEditorViewOptions): boolean {\n\t\treturn (\n\t\t\ta.extraEditorClassName === b.extraEditorClassName\n\t\t\t&& a.disableMonospaceOptimizations === b.disableMonospaceOptimizations\n\t\t\t&& arrays.equals(a.rulers, b.rulers)\n\t\t\t&& a.ariaLabel === b.ariaLabel\n\t\t\t&& a.renderLineNumbers === b.renderLineNumbers\n\t\t\t&& a.renderCustomLineNumbers === b.renderCustomLineNumbers\n\t\t\t&& a.renderFinalNewline === b.renderFinalNewline\n\t\t\t&& a.selectOnLineNumbers === b.selectOnLineNumbers\n\t\t\t&& a.glyphMargin === b.glyphMargin\n\t\t\t&& a.revealHorizontalRightPadding === b.revealHorizontalRightPadding\n\t\t\t&& a.roundedSelection === b.roundedSelection\n\t\t\t&& a.overviewRulerLanes === b.overviewRulerLanes\n\t\t\t&& a.overviewRulerBorder === b.overviewRulerBorder\n\t\t\t&& a.cursorBlinking === b.cursorBlinking\n\t\t\t&& a.mouseWheelZoom === b.mouseWheelZoom\n\t\t\t&& a.cursorSmoothCaretAnimation === b.cursorSmoothCaretAnimation\n\t\t\t&& a.cursorStyle === b.cursorStyle\n\t\t\t&& a.cursorWidth === b.cursorWidth\n\t\t\t&& a.hideCursorInOverviewRuler === b.hideCursorInOverviewRuler\n\t\t\t&& a.scrollBeyondLastLine === b.scrollBeyondLastLine\n\t\t\t&& a.scrollBeyondLastColumn === b.scrollBeyondLastColumn\n\t\t\t&& a.smoothScrolling === b.smoothScrolling\n\t\t\t&& a.stopRenderingLineAfter === b.stopRenderingLineAfter\n\t\t\t&& a.renderWhitespace === b.renderWhitespace\n\t\t\t&& a.renderControlCharacters === b.renderControlCharacters\n\t\t\t&& a.fontLigatures === b.fontLigatures\n\t\t\t&& a.renderIndentGuides === b.renderIndentGuides\n\t\t\t&& a.highlightActiveIndentGuide === b.highlightActiveIndentGuide\n\t\t\t&& a.renderLineHighlight === b.renderLineHighlight\n\t\t\t&& this._equalsScrollbarOptions(a.scrollbar, b.scrollbar)\n\t\t\t&& this._equalsMinimapOptions(a.minimap, b.minimap)\n\t\t\t&& a.fixedOverflowWidgets === b.fixedOverflowWidgets\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsScrollbarOptions(a: InternalEditorScrollbarOptions, b: InternalEditorScrollbarOptions): boolean {\n\t\treturn (\n\t\t\ta.arrowSize === b.arrowSize\n\t\t\t&& a.vertical === b.vertical\n\t\t\t&& a.horizontal === b.horizontal\n\t\t\t&& a.useShadows === b.useShadows\n\t\t\t&& a.verticalHasArrows === b.verticalHasArrows\n\t\t\t&& a.horizontalHasArrows === b.horizontalHasArrows\n\t\t\t&& a.handleMouseWheel === b.handleMouseWheel\n\t\t\t&& a.horizontalScrollbarSize === b.horizontalScrollbarSize\n\t\t\t&& a.horizontalSliderSize === b.horizontalSliderSize\n\t\t\t&& a.verticalScrollbarSize === b.verticalScrollbarSize\n\t\t\t&& a.verticalSliderSize === b.verticalSliderSize\n\t\t\t&& a.mouseWheelScrollSensitivity === b.mouseWheelScrollSensitivity\n\t\t\t&& a.fastScrollSensitivity === b.fastScrollSensitivity\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsMinimapOptions(a: InternalEditorMinimapOptions, b: InternalEditorMinimapOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.side === b.side\n\t\t\t&& a.showSlider === b.showSlider\n\t\t\t&& a.renderCharacters === b.renderCharacters\n\t\t\t&& a.maxColumn === b.maxColumn\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalFindOptions(a: InternalEditorFindOptions, b: InternalEditorFindOptions): boolean {\n\t\treturn (\n\t\t\ta.seedSearchStringFromSelection === b.seedSearchStringFromSelection\n\t\t\t&& a.autoFindInSelection === b.autoFindInSelection\n\t\t\t&& a.globalFindClipboard === b.globalFindClipboard\n\t\t\t&& a.addExtraSpaceOnTop === b.addExtraSpaceOnTop\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsParameterHintOptions(a: InternalParameterHintOptions, b: InternalParameterHintOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.cycle === b.cycle\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsHoverOptions(a: InternalEditorHoverOptions, b: InternalEditorHoverOptions): boolean {\n\t\treturn (\n\t\t\ta.enabled === b.enabled\n\t\t\t&& a.delay === b.delay\n\t\t\t&& a.sticky === b.sticky\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsSuggestOptions(a: InternalSuggestOptions, b: InternalSuggestOptions): any {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t} else if (!a || !b) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn a.filterGraceful === b.filterGraceful\n\t\t\t\t&& a.snippets === b.snippets\n\t\t\t\t&& a.snippetsPreventQuickSuggestions === b.snippetsPreventQuickSuggestions\n\t\t\t\t&& a.localityBonus === b.localityBonus\n\t\t\t\t&& a.shareSuggestSelections === b.shareSuggestSelections\n\t\t\t\t&& a.showIcons === b.showIcons\n\t\t\t\t&& a.maxVisibleSuggestions === b.maxVisibleSuggestions\n\t\t\t\t&& objects.equals(a.filteredTypes, b.filteredTypes);\n\t\t}\n\t}\n\n\tprivate static _equalsGotoLocationOptions(a: InternalGoToLocationOptions | undefined, b: InternalGoToLocationOptions | undefined): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t} else if (!a || !b) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn a.multiple === b.multiple;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsWrappingInfo(a: EditorWrappingInfo, b: EditorWrappingInfo): boolean {\n\t\treturn (\n\t\t\ta.inDiffEditor === b.inDiffEditor\n\t\t\t&& a.isDominatedByLongLines === b.isDominatedByLongLines\n\t\t\t&& a.isWordWrapMinified === b.isWordWrapMinified\n\t\t\t&& a.isViewportWrapping === b.isViewportWrapping\n\t\t\t&& a.wrappingColumn === b.wrappingColumn\n\t\t\t&& a.wrappingIndent === b.wrappingIndent\n\t\t\t&& a.wordWrapBreakBeforeCharacters === b.wordWrapBreakBeforeCharacters\n\t\t\t&& a.wordWrapBreakAfterCharacters === b.wordWrapBreakAfterCharacters\n\t\t\t&& a.wordWrapBreakObtrusiveCharacters === b.wordWrapBreakObtrusiveCharacters\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tprivate static _equalsContribOptions(a: EditorContribOptions, b: EditorContribOptions): boolean {\n\t\treturn (\n\t\t\ta.selectionClipboard === b.selectionClipboard\n\t\t\t&& this._equalsHoverOptions(a.hover, b.hover)\n\t\t\t&& a.links === b.links\n\t\t\t&& a.contextmenu === b.contextmenu\n\t\t\t&& InternalEditorOptions._equalsQuickSuggestions(a.quickSuggestions, b.quickSuggestions)\n\t\t\t&& a.quickSuggestionsDelay === b.quickSuggestionsDelay\n\t\t\t&& this._equalsParameterHintOptions(a.parameterHints, b.parameterHints)\n\t\t\t&& a.formatOnType === b.formatOnType\n\t\t\t&& a.formatOnPaste === b.formatOnPaste\n\t\t\t&& a.suggestOnTriggerCharacters === b.suggestOnTriggerCharacters\n\t\t\t&& a.acceptSuggestionOnEnter === b.acceptSuggestionOnEnter\n\t\t\t&& a.acceptSuggestionOnCommitCharacter === b.acceptSuggestionOnCommitCharacter\n\t\t\t&& a.wordBasedSuggestions === b.wordBasedSuggestions\n\t\t\t&& a.suggestSelection === b.suggestSelection\n\t\t\t&& a.suggestFontSize === b.suggestFontSize\n\t\t\t&& a.suggestLineHeight === b.suggestLineHeight\n\t\t\t&& a.tabCompletion === b.tabCompletion\n\t\t\t&& this._equalsSuggestOptions(a.suggest, b.suggest)\n\t\t\t&& InternalEditorOptions._equalsGotoLocationOptions(a.gotoLocation, b.gotoLocation)\n\t\t\t&& a.selectionHighlight === b.selectionHighlight\n\t\t\t&& a.occurrencesHighlight === b.occurrencesHighlight\n\t\t\t&& a.codeLens === b.codeLens\n\t\t\t&& a.folding === b.folding\n\t\t\t&& a.foldingStrategy === b.foldingStrategy\n\t\t\t&& a.showFoldingControls === b.showFoldingControls\n\t\t\t&& a.matchBrackets === b.matchBrackets\n\t\t\t&& this._equalFindOptions(a.find, b.find)\n\t\t\t&& a.colorDecorators === b.colorDecorators\n\t\t\t&& objects.equals(a.codeActionsOnSave, b.codeActionsOnSave)\n\t\t\t&& a.codeActionsOnSaveTimeout === b.codeActionsOnSaveTimeout\n\t\t\t&& a.lightbulbEnabled === b.lightbulbEnabled\n\t\t);\n\t}\n\n\tprivate static _equalsQuickSuggestions(a: boolean | { other: boolean, comments: boolean, strings: boolean }, b: boolean | { other: boolean, comments: boolean, strings: boolean }): boolean {\n\t\tif (typeof a === 'boolean') {\n\t\t\tif (typeof b !== 'boolean') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn a === b;\n\t\t}\n\t\tif (typeof b === 'boolean') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ta.comments === b.comments\n\t\t\t&& a.other === b.other\n\t\t\t&& a.strings === b.strings\n\t\t);\n\t}\n}\n\n/**\n * A description for the overview ruler position.\n */\nexport interface OverviewRulerPosition {\n\t/**\n\t * Width of the overview ruler\n\t */\n\treadonly width: number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\treadonly height: number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\treadonly top: number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\treadonly right: number;\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface EditorLayoutInfo {\n\n\t/**\n\t * Full editor width.\n\t */\n\treadonly width: number;\n\t/**\n\t * Full editor height.\n\t */\n\treadonly height: number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\treadonly glyphMarginLeft: number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\treadonly glyphMarginWidth: number;\n\t/**\n\t * The height of the glyph margin.\n\t */\n\treadonly glyphMarginHeight: number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\treadonly lineNumbersLeft: number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\treadonly lineNumbersWidth: number;\n\t/**\n\t * The height of the line numbers.\n\t */\n\treadonly lineNumbersHeight: number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\treadonly decorationsLeft: number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\treadonly decorationsWidth: number;\n\t/**\n\t * The height of the line decorations.\n\t */\n\treadonly decorationsHeight: number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\treadonly contentLeft: number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\treadonly contentWidth: number;\n\t/**\n\t * The height of the content (actual height)\n\t */\n\treadonly contentHeight: number;\n\n\t/**\n\t * The position for the minimap\n\t */\n\treadonly minimapLeft: number;\n\t/**\n\t * The width of the minimap\n\t */\n\treadonly minimapWidth: number;\n\n\t/**\n\t * Minimap render type\n\t */\n\treadonly renderMinimap: RenderMinimap;\n\n\t/**\n\t * The number of columns (of typical characters) fitting on a viewport line.\n\t */\n\treadonly viewportColumn: number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\treadonly verticalScrollbarWidth: number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\treadonly horizontalScrollbarHeight: number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\treadonly overviewRuler: OverviewRulerPosition;\n}\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport interface IConfigurationChangedEvent {\n\treadonly canUseLayerHinting: boolean;\n\treadonly pixelRatio: boolean;\n\treadonly editorClassName: boolean;\n\treadonly lineHeight: boolean;\n\treadonly readOnly: boolean;\n\treadonly accessibilitySupport: boolean;\n\treadonly multiCursorModifier: boolean;\n\treadonly multiCursorMergeOverlapping: boolean;\n\treadonly wordSeparators: boolean;\n\treadonly autoClosingBrackets: boolean;\n\treadonly autoClosingQuotes: boolean;\n\treadonly autoSurround: boolean;\n\treadonly autoIndent: boolean;\n\treadonly useTabStops: boolean;\n\treadonly tabFocusMode: boolean;\n\treadonly dragAndDrop: boolean;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly copyWithSyntaxHighlighting: boolean;\n\treadonly layoutInfo: boolean;\n\treadonly fontInfo: boolean;\n\treadonly viewInfo: boolean;\n\treadonly wrappingInfo: boolean;\n\treadonly contribInfo: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IEnvironmentalOptions {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\treadonly fontInfo: FontInfo;\n\treadonly extraEditorClassName: string;\n\treadonly isDominatedByLongLines: boolean;\n\treadonly lineNumbersDigitCount: number;\n\treadonly emptySelectionClipboard: boolean;\n\treadonly pixelRatio: number;\n\treadonly tabFocusMode: boolean;\n\treadonly accessibilitySupport: AccessibilitySupport;\n}\n\nfunction _boolean<T>(value: any, defaultValue: T): boolean | T {\n\tif (typeof value === 'undefined') {\n\t\treturn defaultValue;\n\t}\n\tif (value === 'false') {\n\t\t// treat the string 'false' as false\n\t\treturn false;\n\t}\n\treturn Boolean(value);\n}\n\nfunction _booleanMap(value: { [key: string]: boolean } | undefined, defaultValue: { [key: string]: boolean }): { [key: string]: boolean } {\n\tif (!value) {\n\t\treturn defaultValue;\n\t}\n\n\tconst out = Object.create(null);\n\tfor (const k of Object.keys(value)) {\n\t\tconst v = value[k];\n\t\tif (typeof v === 'boolean') {\n\t\t\tout[k] = v;\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction _string(value: any, defaultValue: string): string {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nfunction _stringSet<T>(value: T | undefined, defaultValue: T, allowedValues: T[]): T {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (allowedValues.indexOf(value) === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nfunction _clampedInt(value: any, defaultValue: number, minimum: number, maximum: number): number {\n\tlet r: number;\n\tif (typeof value === 'undefined') {\n\t\tr = defaultValue;\n\t} else {\n\t\tr = parseInt(value, 10);\n\t\tif (isNaN(r)) {\n\t\t\tr = defaultValue;\n\t\t}\n\t}\n\tr = Math.max(minimum, r);\n\tr = Math.min(maximum, r);\n\treturn r | 0;\n}\n\nfunction _float(value: any, defaultValue: number): number {\n\tlet r = parseFloat(value);\n\tif (isNaN(r)) {\n\t\tr = defaultValue;\n\t}\n\treturn r;\n}\n\nfunction _wrappingIndentFromString(wrappingIndent: string | undefined, defaultValue: WrappingIndent): WrappingIndent {\n\tif (typeof wrappingIndent !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tif (wrappingIndent === 'same') {\n\t\treturn WrappingIndent.Same;\n\t} else if (wrappingIndent === 'indent') {\n\t\treturn WrappingIndent.Indent;\n\t} else if (wrappingIndent === 'deepIndent') {\n\t\treturn WrappingIndent.DeepIndent;\n\t} else {\n\t\treturn WrappingIndent.None;\n\t}\n}\n\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle: string | undefined, defaultValue: TextEditorCursorBlinkingStyle): TextEditorCursorBlinkingStyle {\n\tif (typeof cursorBlinkingStyle !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (cursorBlinkingStyle) {\n\t\tcase 'blink':\n\t\t\treturn TextEditorCursorBlinkingStyle.Blink;\n\t\tcase 'smooth':\n\t\t\treturn TextEditorCursorBlinkingStyle.Smooth;\n\t\tcase 'phase':\n\t\t\treturn TextEditorCursorBlinkingStyle.Phase;\n\t\tcase 'expand':\n\t\t\treturn TextEditorCursorBlinkingStyle.Expand;\n\t\tcase 'visible': // maintain compatibility\n\t\tcase 'solid':\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t}\n\treturn TextEditorCursorBlinkingStyle.Blink;\n}\n\nfunction _scrollbarVisibilityFromString(visibility: string | undefined, defaultValue: ScrollbarVisibility): ScrollbarVisibility {\n\tif (typeof visibility !== 'string') {\n\t\treturn defaultValue;\n\t}\n\tswitch (visibility) {\n\t\tcase 'hidden':\n\t\t\treturn ScrollbarVisibility.Hidden;\n\t\tcase 'visible':\n\t\t\treturn ScrollbarVisibility.Visible;\n\t\tdefault:\n\t\t\treturn ScrollbarVisibility.Auto;\n\t}\n}\n\n/**\n * @internal\n */\nexport class EditorOptionsValidator {\n\n\t/**\n\t * Validate raw editor options.\n\t * i.e. since they can be defined by the user, they might be invalid.\n\t */\n\tpublic static validate(opts: IEditorOptions, defaults: IValidatedEditorOptions): IValidatedEditorOptions {\n\t\tlet wordWrap = opts.wordWrap;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>wordWrap === true) {\n\t\t\t\twordWrap = 'on';\n\t\t\t} else if (<any>wordWrap === false) {\n\t\t\t\twordWrap = 'off';\n\t\t\t}\n\n\t\t\twordWrap = _stringSet<'off' | 'on' | 'wordWrapColumn' | 'bounded'>(wordWrap, defaults.wordWrap, ['off', 'on', 'wordWrapColumn', 'bounded']);\n\t\t}\n\n\t\tconst viewInfo = this._sanitizeViewInfo(opts, defaults.viewInfo);\n\t\tconst contribInfo = this._sanitizeContribInfo(opts, defaults.contribInfo);\n\n\t\tlet configuredMulticursorModifier: 'altKey' | 'metaKey' | 'ctrlKey' | undefined = undefined;\n\t\tif (typeof opts.multiCursorModifier === 'string') {\n\t\t\tif (opts.multiCursorModifier === 'ctrlCmd') {\n\t\t\t\tconfiguredMulticursorModifier = browser.isMacintosh ? 'metaKey' : 'ctrlKey';\n\t\t\t} else {\n\t\t\t\tconfiguredMulticursorModifier = 'altKey';\n\t\t\t}\n\t\t}\n\t\tconst multiCursorModifier = _stringSet<'altKey' | 'metaKey' | 'ctrlKey'>(configuredMulticursorModifier, defaults.multiCursorModifier, ['altKey', 'metaKey', 'ctrlKey']);\n\n\t\tlet autoClosingBrackets: EditorAutoClosingStrategy;\n\t\tlet autoClosingQuotes: EditorAutoClosingStrategy;\n\t\tlet autoSurround: EditorAutoSurroundStrategy;\n\t\tif (typeof opts.autoClosingBrackets === 'boolean' && opts.autoClosingBrackets === false) {\n\t\t\t// backwards compatibility: disable all on boolean false\n\t\t\tautoClosingBrackets = 'never';\n\t\t\tautoClosingQuotes = 'never';\n\t\t\tautoSurround = 'never';\n\t\t} else {\n\t\t\tautoClosingBrackets = _stringSet<EditorAutoClosingStrategy>(opts.autoClosingBrackets, defaults.autoClosingBrackets, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n\t\t\tautoClosingQuotes = _stringSet<EditorAutoClosingStrategy>(opts.autoClosingQuotes, defaults.autoClosingQuotes, ['always', 'languageDefined', 'beforeWhitespace', 'never']);\n\t\t\tautoSurround = _stringSet<EditorAutoSurroundStrategy>(opts.autoSurround, defaults.autoSurround, ['languageDefined', 'brackets', 'quotes', 'never']);\n\t\t}\n\n\t\treturn {\n\t\t\tinDiffEditor: _boolean(opts.inDiffEditor, defaults.inDiffEditor),\n\t\t\twordSeparators: _string(opts.wordSeparators, defaults.wordSeparators),\n\t\t\tlineNumbersMinChars: _clampedInt(opts.lineNumbersMinChars, defaults.lineNumbersMinChars, 1, 10),\n\t\t\tlineDecorationsWidth: (typeof opts.lineDecorationsWidth === 'undefined' ? defaults.lineDecorationsWidth : opts.lineDecorationsWidth),\n\t\t\treadOnly: _boolean(opts.readOnly, defaults.readOnly),\n\t\t\tmouseStyle: _stringSet<'text' | 'default' | 'copy'>(opts.mouseStyle, defaults.mouseStyle, ['text', 'default', 'copy']),\n\t\t\tdisableLayerHinting: _boolean(opts.disableLayerHinting, defaults.disableLayerHinting),\n\t\t\tautomaticLayout: _boolean(opts.automaticLayout, defaults.automaticLayout),\n\t\t\twordWrap: wordWrap,\n\t\t\twordWrapColumn: _clampedInt(opts.wordWrapColumn, defaults.wordWrapColumn, 1, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\twordWrapMinified: _boolean(opts.wordWrapMinified, defaults.wordWrapMinified),\n\t\t\twrappingIndent: _wrappingIndentFromString(opts.wrappingIndent, defaults.wrappingIndent),\n\t\t\twordWrapBreakBeforeCharacters: _string(opts.wordWrapBreakBeforeCharacters, defaults.wordWrapBreakBeforeCharacters),\n\t\t\twordWrapBreakAfterCharacters: _string(opts.wordWrapBreakAfterCharacters, defaults.wordWrapBreakAfterCharacters),\n\t\t\twordWrapBreakObtrusiveCharacters: _string(opts.wordWrapBreakObtrusiveCharacters, defaults.wordWrapBreakObtrusiveCharacters),\n\t\t\tautoClosingBrackets,\n\t\t\tautoClosingQuotes,\n\t\t\tautoSurround,\n\t\t\tautoIndent: _boolean(opts.autoIndent, defaults.autoIndent),\n\t\t\tdragAndDrop: _boolean(opts.dragAndDrop, defaults.dragAndDrop),\n\t\t\temptySelectionClipboard: _boolean(opts.emptySelectionClipboard, defaults.emptySelectionClipboard),\n\t\t\tcopyWithSyntaxHighlighting: _boolean(opts.copyWithSyntaxHighlighting, defaults.copyWithSyntaxHighlighting),\n\t\t\tuseTabStops: _boolean(opts.useTabStops, defaults.useTabStops),\n\t\t\tmultiCursorModifier: multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: _boolean(opts.multiCursorMergeOverlapping, defaults.multiCursorMergeOverlapping),\n\t\t\taccessibilitySupport: _stringSet<'auto' | 'on' | 'off'>(opts.accessibilitySupport, defaults.accessibilitySupport, ['auto', 'on', 'off']),\n\t\t\tshowUnused: _boolean(opts.showUnused, defaults.showUnused),\n\t\t\tviewInfo: viewInfo,\n\t\t\tcontribInfo: contribInfo,\n\t\t};\n\t}\n\n\tprivate static _sanitizeScrollbarOpts(opts: IEditorScrollbarOptions | undefined, defaults: InternalEditorScrollbarOptions, mouseWheelScrollSensitivity: number, fastScrollSensitivity: number): InternalEditorScrollbarOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\t\tconst horizontalScrollbarSize = _clampedInt(opts.horizontalScrollbarSize, defaults.horizontalScrollbarSize, 0, 1000);\n\t\tconst verticalScrollbarSize = _clampedInt(opts.verticalScrollbarSize, defaults.verticalScrollbarSize, 0, 1000);\n\t\treturn {\n\t\t\tvertical: _scrollbarVisibilityFromString(opts.vertical, defaults.vertical),\n\t\t\thorizontal: _scrollbarVisibilityFromString(opts.horizontal, defaults.horizontal),\n\n\t\t\tarrowSize: _clampedInt(opts.arrowSize, defaults.arrowSize, 0, 1000),\n\t\t\tuseShadows: _boolean(opts.useShadows, defaults.useShadows),\n\n\t\t\tverticalHasArrows: _boolean(opts.verticalHasArrows, defaults.verticalHasArrows),\n\t\t\thorizontalHasArrows: _boolean(opts.horizontalHasArrows, defaults.horizontalHasArrows),\n\n\t\t\thorizontalScrollbarSize: horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: _clampedInt(opts.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n\n\t\t\tverticalScrollbarSize: verticalScrollbarSize,\n\t\t\tverticalSliderSize: _clampedInt(opts.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n\n\t\t\thandleMouseWheel: _boolean(opts.handleMouseWheel, defaults.handleMouseWheel),\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t};\n\t}\n\n\tprivate static _sanitizeMinimapOpts(opts: IEditorMinimapOptions | undefined, defaults: InternalEditorMinimapOptions): InternalEditorMinimapOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tside: _stringSet<'right' | 'left'>(opts.side, defaults.side, ['right', 'left']),\n\t\t\tshowSlider: _stringSet<'always' | 'mouseover'>(opts.showSlider, defaults.showSlider, ['always', 'mouseover']),\n\t\t\trenderCharacters: _boolean(opts.renderCharacters, defaults.renderCharacters),\n\t\t\tmaxColumn: _clampedInt(opts.maxColumn, defaults.maxColumn, 1, 10000),\n\t\t};\n\t}\n\n\tprivate static _sanitizeFindOpts(opts: IEditorFindOptions | undefined, defaults: InternalEditorFindOptions): InternalEditorFindOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tseedSearchStringFromSelection: _boolean(opts.seedSearchStringFromSelection, defaults.seedSearchStringFromSelection),\n\t\t\tautoFindInSelection: _boolean(opts.autoFindInSelection, defaults.autoFindInSelection),\n\t\t\tglobalFindClipboard: _boolean(opts.globalFindClipboard, defaults.globalFindClipboard),\n\t\t\taddExtraSpaceOnTop: _boolean(opts.addExtraSpaceOnTop, defaults.addExtraSpaceOnTop)\n\t\t};\n\t}\n\n\tprivate static _sanitizeParameterHintOpts(opts: IEditorParameterHintOptions | undefined, defaults: InternalParameterHintOptions): InternalParameterHintOptions {\n\t\tif (typeof opts !== 'object') {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tcycle: _boolean(opts.cycle, defaults.cycle)\n\t\t};\n\t}\n\n\tprivate static _sanitizeHoverOpts(_opts: boolean | IEditorHoverOptions | undefined, defaults: InternalEditorHoverOptions): InternalEditorHoverOptions {\n\t\tlet opts: IEditorHoverOptions;\n\t\tif (typeof _opts === 'boolean') {\n\t\t\topts = {\n\t\t\t\tenabled: _opts\n\t\t\t};\n\t\t} else if (typeof _opts === 'object') {\n\t\t\topts = _opts;\n\t\t} else {\n\t\t\treturn defaults;\n\t\t}\n\n\t\treturn {\n\t\t\tenabled: _boolean(opts.enabled, defaults.enabled),\n\t\t\tdelay: _clampedInt(opts.delay, defaults.delay, 0, 10000),\n\t\t\tsticky: _boolean(opts.sticky, defaults.sticky)\n\t\t};\n\t}\n\n\tprivate static _sanitizeSuggestOpts(opts: IEditorOptions, defaults: InternalSuggestOptions): InternalSuggestOptions {\n\t\tconst suggestOpts = opts.suggest || {};\n\t\treturn {\n\t\t\tfilterGraceful: _boolean(suggestOpts.filterGraceful, defaults.filterGraceful),\n\t\t\tsnippets: _stringSet<'top' | 'bottom' | 'inline' | 'none'>(opts.snippetSuggestions, defaults.snippets, ['top', 'bottom', 'inline', 'none']),\n\t\t\tsnippetsPreventQuickSuggestions: _boolean(suggestOpts.snippetsPreventQuickSuggestions, defaults.filterGraceful),\n\t\t\tlocalityBonus: _boolean(suggestOpts.localityBonus, defaults.localityBonus),\n\t\t\tshareSuggestSelections: _boolean(suggestOpts.shareSuggestSelections, defaults.shareSuggestSelections),\n\t\t\tshowIcons: _boolean(suggestOpts.showIcons, defaults.showIcons),\n\t\t\tmaxVisibleSuggestions: _clampedInt(suggestOpts.maxVisibleSuggestions, defaults.maxVisibleSuggestions, 1, 15),\n\t\t\tfilteredTypes: isObject(suggestOpts.filteredTypes) ? suggestOpts.filteredTypes : Object.create(null)\n\t\t};\n\t}\n\n\tprivate static _santizeGotoLocationOpts(opts: IEditorOptions, defaults: InternalGoToLocationOptions): InternalGoToLocationOptions {\n\t\tconst gotoOpts = opts.gotoLocation || {};\n\t\treturn {\n\t\t\tmultiple: _stringSet<'peek' | 'gotoAndPeek' | 'goto'>(gotoOpts.multiple, defaults.multiple, ['peek', 'gotoAndPeek', 'goto'])\n\t\t};\n\t}\n\n\tprivate static _sanitizeTabCompletionOpts(opts: boolean | 'on' | 'off' | 'onlySnippets' | undefined, defaults: 'on' | 'off' | 'onlySnippets'): 'on' | 'off' | 'onlySnippets' {\n\t\tif (opts === false) {\n\t\t\treturn 'off';\n\t\t} else if (opts === true) {\n\t\t\treturn 'onlySnippets';\n\t\t} else {\n\t\t\treturn _stringSet<'on' | 'off' | 'onlySnippets'>(opts, defaults, ['on', 'off', 'onlySnippets']);\n\t\t}\n\t}\n\n\tprivate static _sanitizeViewInfo(opts: IEditorOptions, defaults: InternalEditorViewOptions): InternalEditorViewOptions {\n\n\t\tlet rulers: number[] = [];\n\t\tif (Array.isArray(opts.rulers)) {\n\t\t\tfor (let i = 0, len = opts.rulers.length; i < len; i++) {\n\t\t\t\trulers.push(_clampedInt(opts.rulers[i], 0, 0, 10000));\n\t\t\t}\n\t\t\trulers.sort();\n\t\t}\n\n\t\tlet renderLineNumbers: RenderLineNumbersType = defaults.renderLineNumbers;\n\t\tlet renderCustomLineNumbers: ((lineNumber: number) => string) | null = defaults.renderCustomLineNumbers;\n\n\t\tif (typeof opts.lineNumbers !== 'undefined') {\n\t\t\tlet lineNumbers = opts.lineNumbers;\n\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>lineNumbers === true) {\n\t\t\t\tlineNumbers = 'on';\n\t\t\t} else if (<any>lineNumbers === false) {\n\t\t\t\tlineNumbers = 'off';\n\t\t\t}\n\n\t\t\tif (typeof lineNumbers === 'function') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Custom;\n\t\t\t\trenderCustomLineNumbers = lineNumbers;\n\t\t\t} else if (lineNumbers === 'interval') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Interval;\n\t\t\t} else if (lineNumbers === 'relative') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Relative;\n\t\t\t} else if (lineNumbers === 'on') {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.On;\n\t\t\t} else {\n\t\t\t\trenderLineNumbers = RenderLineNumbersType.Off;\n\t\t\t}\n\t\t}\n\n\t\tconst fontLigatures = _boolean(opts.fontLigatures, defaults.fontLigatures);\n\t\tconst disableMonospaceOptimizations = _boolean(opts.disableMonospaceOptimizations, defaults.disableMonospaceOptimizations) || fontLigatures;\n\n\t\tlet renderWhitespace = opts.renderWhitespace;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>renderWhitespace === true) {\n\t\t\t\trenderWhitespace = 'boundary';\n\t\t\t} else if (<any>renderWhitespace === false) {\n\t\t\t\trenderWhitespace = 'none';\n\t\t\t}\n\t\t\trenderWhitespace = _stringSet<'none' | 'boundary' | 'all'>(renderWhitespace, defaults.renderWhitespace, ['none', 'boundary', 'all']);\n\t\t}\n\n\t\tlet renderLineHighlight = opts.renderLineHighlight;\n\t\t{\n\t\t\t// Compatibility with old true or false values\n\t\t\tif (<any>renderLineHighlight === true) {\n\t\t\t\trenderLineHighlight = 'line';\n\t\t\t} else if (<any>renderLineHighlight === false) {\n\t\t\t\trenderLineHighlight = 'none';\n\t\t\t}\n\t\t\trenderLineHighlight = _stringSet<'none' | 'gutter' | 'line' | 'all'>(renderLineHighlight, defaults.renderLineHighlight, ['none', 'gutter', 'line', 'all']);\n\t\t}\n\n\t\tlet mouseWheelScrollSensitivity = _float(opts.mouseWheelScrollSensitivity, defaults.scrollbar.mouseWheelScrollSensitivity);\n\t\tif (mouseWheelScrollSensitivity === 0) {\n\t\t\t// Disallow 0, as it would prevent/block scrolling\n\t\t\tmouseWheelScrollSensitivity = 1;\n\t\t}\n\n\t\tlet fastScrollSensitivity = _float(opts.fastScrollSensitivity, defaults.scrollbar.fastScrollSensitivity);\n\t\tif (fastScrollSensitivity <= 0) {\n\t\t\tfastScrollSensitivity = defaults.scrollbar.fastScrollSensitivity;\n\t\t}\n\t\tconst scrollbar = this._sanitizeScrollbarOpts(opts.scrollbar, defaults.scrollbar, mouseWheelScrollSensitivity, fastScrollSensitivity);\n\t\tconst minimap = this._sanitizeMinimapOpts(opts.minimap, defaults.minimap);\n\n\t\treturn {\n\t\t\textraEditorClassName: _string(opts.extraEditorClassName, defaults.extraEditorClassName),\n\t\t\tdisableMonospaceOptimizations: disableMonospaceOptimizations,\n\t\t\trulers: rulers,\n\t\t\tariaLabel: _string(opts.ariaLabel, defaults.ariaLabel),\n\t\t\trenderLineNumbers: renderLineNumbers,\n\t\t\trenderCustomLineNumbers: renderCustomLineNumbers,\n\t\t\trenderFinalNewline: _boolean(opts.renderFinalNewline, defaults.renderFinalNewline),\n\t\t\tselectOnLineNumbers: _boolean(opts.selectOnLineNumbers, defaults.selectOnLineNumbers),\n\t\t\tglyphMargin: _boolean(opts.glyphMargin, defaults.glyphMargin),\n\t\t\trevealHorizontalRightPadding: _clampedInt(opts.revealHorizontalRightPadding, defaults.revealHorizontalRightPadding, 0, 1000),\n\t\t\troundedSelection: _boolean(opts.roundedSelection, defaults.roundedSelection),\n\t\t\toverviewRulerLanes: _clampedInt(opts.overviewRulerLanes, defaults.overviewRulerLanes, 0, 3),\n\t\t\toverviewRulerBorder: _boolean(opts.overviewRulerBorder, defaults.overviewRulerBorder),\n\t\t\tcursorBlinking: _cursorBlinkingStyleFromString(opts.cursorBlinking, defaults.cursorBlinking),\n\t\t\tmouseWheelZoom: _boolean(opts.mouseWheelZoom, defaults.mouseWheelZoom),\n\t\t\tcursorSmoothCaretAnimation: _boolean(opts.cursorSmoothCaretAnimation, defaults.cursorSmoothCaretAnimation),\n\t\t\tcursorStyle: _cursorStyleFromString(opts.cursorStyle, defaults.cursorStyle),\n\t\t\tcursorWidth: _clampedInt(opts.cursorWidth, defaults.cursorWidth, 0, Number.MAX_VALUE),\n\t\t\thideCursorInOverviewRuler: _boolean(opts.hideCursorInOverviewRuler, defaults.hideCursorInOverviewRuler),\n\t\t\tscrollBeyondLastLine: _boolean(opts.scrollBeyondLastLine, defaults.scrollBeyondLastLine),\n\t\t\tscrollBeyondLastColumn: _clampedInt(opts.scrollBeyondLastColumn, defaults.scrollBeyondLastColumn, 0, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\tsmoothScrolling: _boolean(opts.smoothScrolling, defaults.smoothScrolling),\n\t\t\tstopRenderingLineAfter: _clampedInt(opts.stopRenderingLineAfter, defaults.stopRenderingLineAfter, -1, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\trenderWhitespace: renderWhitespace,\n\t\t\trenderControlCharacters: _boolean(opts.renderControlCharacters, defaults.renderControlCharacters),\n\t\t\tfontLigatures: fontLigatures,\n\t\t\trenderIndentGuides: _boolean(opts.renderIndentGuides, defaults.renderIndentGuides),\n\t\t\thighlightActiveIndentGuide: _boolean(opts.highlightActiveIndentGuide, defaults.highlightActiveIndentGuide),\n\t\t\trenderLineHighlight: renderLineHighlight,\n\t\t\tscrollbar: scrollbar,\n\t\t\tminimap: minimap,\n\t\t\tfixedOverflowWidgets: _boolean(opts.fixedOverflowWidgets, defaults.fixedOverflowWidgets),\n\t\t};\n\t}\n\n\tprivate static _sanitizeContribInfo(opts: IEditorOptions, defaults: EditorContribOptions): EditorContribOptions {\n\t\tlet quickSuggestions: boolean | { other: boolean, comments: boolean, strings: boolean };\n\t\tif (typeof opts.quickSuggestions === 'object') {\n\t\t\tquickSuggestions = { other: true, ...opts.quickSuggestions };\n\t\t} else {\n\t\t\tquickSuggestions = _boolean(opts.quickSuggestions, defaults.quickSuggestions);\n\t\t}\n\t\t// Compatibility support for acceptSuggestionOnEnter\n\t\tif (typeof opts.acceptSuggestionOnEnter === 'boolean') {\n\t\t\topts.acceptSuggestionOnEnter = opts.acceptSuggestionOnEnter ? 'on' : 'off';\n\t\t}\n\t\tconst find = this._sanitizeFindOpts(opts.find, defaults.find);\n\t\treturn {\n\t\t\tselectionClipboard: _boolean(opts.selectionClipboard, defaults.selectionClipboard),\n\t\t\thover: this._sanitizeHoverOpts(opts.hover, defaults.hover),\n\t\t\tlinks: _boolean(opts.links, defaults.links),\n\t\t\tcontextmenu: _boolean(opts.contextmenu, defaults.contextmenu),\n\t\t\tquickSuggestions: quickSuggestions,\n\t\t\tquickSuggestionsDelay: _clampedInt(opts.quickSuggestionsDelay, defaults.quickSuggestionsDelay, Constants.MIN_SAFE_SMALL_INTEGER, Constants.MAX_SAFE_SMALL_INTEGER),\n\t\t\tparameterHints: this._sanitizeParameterHintOpts(opts.parameterHints, defaults.parameterHints),\n\t\t\tformatOnType: _boolean(opts.formatOnType, defaults.formatOnType),\n\t\t\tformatOnPaste: _boolean(opts.formatOnPaste, defaults.formatOnPaste),\n\t\t\tsuggestOnTriggerCharacters: _boolean(opts.suggestOnTriggerCharacters, defaults.suggestOnTriggerCharacters),\n\t\t\tacceptSuggestionOnEnter: _stringSet<'on' | 'smart' | 'off'>(opts.acceptSuggestionOnEnter, defaults.acceptSuggestionOnEnter, ['on', 'smart', 'off']),\n\t\t\tacceptSuggestionOnCommitCharacter: _boolean(opts.acceptSuggestionOnCommitCharacter, defaults.acceptSuggestionOnCommitCharacter),\n\t\t\twordBasedSuggestions: _boolean(opts.wordBasedSuggestions, defaults.wordBasedSuggestions),\n\t\t\tsuggestSelection: _stringSet<'first' | 'recentlyUsed' | 'recentlyUsedByPrefix'>(opts.suggestSelection, defaults.suggestSelection, ['first', 'recentlyUsed', 'recentlyUsedByPrefix']),\n\t\t\tsuggestFontSize: _clampedInt(opts.suggestFontSize, defaults.suggestFontSize, 0, 1000),\n\t\t\tsuggestLineHeight: _clampedInt(opts.suggestLineHeight, defaults.suggestLineHeight, 0, 1000),\n\t\t\ttabCompletion: this._sanitizeTabCompletionOpts(opts.tabCompletion, defaults.tabCompletion),\n\t\t\tsuggest: this._sanitizeSuggestOpts(opts, defaults.suggest),\n\t\t\tgotoLocation: this._santizeGotoLocationOpts(opts, defaults.gotoLocation),\n\t\t\tselectionHighlight: _boolean(opts.selectionHighlight, defaults.selectionHighlight),\n\t\t\toccurrencesHighlight: _boolean(opts.occurrencesHighlight, defaults.occurrencesHighlight),\n\t\t\tcodeLens: _boolean(opts.codeLens, defaults.codeLens),\n\t\t\tfolding: _boolean(opts.folding, defaults.folding),\n\t\t\tfoldingStrategy: _stringSet<'auto' | 'indentation'>(opts.foldingStrategy, defaults.foldingStrategy, ['auto', 'indentation']),\n\t\t\tshowFoldingControls: _stringSet<'always' | 'mouseover'>(opts.showFoldingControls, defaults.showFoldingControls, ['always', 'mouseover']),\n\t\t\tmatchBrackets: _boolean(opts.matchBrackets, defaults.matchBrackets),\n\t\t\tfind: find,\n\t\t\tcolorDecorators: _boolean(opts.colorDecorators, defaults.colorDecorators),\n\t\t\tlightbulbEnabled: _boolean(opts.lightbulb ? opts.lightbulb.enabled : false, defaults.lightbulbEnabled),\n\t\t\tcodeActionsOnSave: _booleanMap(opts.codeActionsOnSave, {}),\n\t\t\tcodeActionsOnSaveTimeout: _clampedInt(opts.codeActionsOnSaveTimeout, defaults.codeActionsOnSaveTimeout, 1, 10000)\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport class InternalEditorOptionsFactory {\n\n\tprivate static _tweakValidatedOptions(opts: IValidatedEditorOptions, accessibilitySupport: AccessibilitySupport): IValidatedEditorOptions {\n\t\tconst accessibilityIsOn = (accessibilitySupport === AccessibilitySupport.Enabled);\n\t\tconst accessibilityIsOff = (accessibilitySupport === AccessibilitySupport.Disabled);\n\t\treturn {\n\t\t\tinDiffEditor: opts.inDiffEditor,\n\t\t\twordSeparators: opts.wordSeparators,\n\t\t\tlineNumbersMinChars: opts.lineNumbersMinChars,\n\t\t\tlineDecorationsWidth: opts.lineDecorationsWidth,\n\t\t\treadOnly: opts.readOnly,\n\t\t\tmouseStyle: opts.mouseStyle,\n\t\t\tdisableLayerHinting: opts.disableLayerHinting,\n\t\t\tautomaticLayout: opts.automaticLayout,\n\t\t\twordWrap: opts.wordWrap,\n\t\t\twordWrapColumn: opts.wordWrapColumn,\n\t\t\twordWrapMinified: opts.wordWrapMinified,\n\t\t\twrappingIndent: opts.wrappingIndent,\n\t\t\twordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n\t\t\twordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n\t\t\twordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n\t\t\tautoClosingBrackets: opts.autoClosingBrackets,\n\t\t\tautoClosingQuotes: opts.autoClosingQuotes,\n\t\t\tautoSurround: opts.autoSurround,\n\t\t\tautoIndent: opts.autoIndent,\n\t\t\tdragAndDrop: opts.dragAndDrop,\n\t\t\temptySelectionClipboard: opts.emptySelectionClipboard,\n\t\t\tcopyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n\t\t\tuseTabStops: opts.useTabStops,\n\t\t\tmultiCursorModifier: opts.multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n\t\t\taccessibilitySupport: opts.accessibilitySupport,\n\t\t\tshowUnused: opts.showUnused,\n\n\t\t\tviewInfo: {\n\t\t\t\textraEditorClassName: opts.viewInfo.extraEditorClassName,\n\t\t\t\tdisableMonospaceOptimizations: opts.viewInfo.disableMonospaceOptimizations,\n\t\t\t\trulers: opts.viewInfo.rulers,\n\t\t\t\tariaLabel: (accessibilityIsOff ? nls.localize('accessibilityOffAriaLabel', \"The editor is not accessible at this time. Press Alt+F1 for options.\") : opts.viewInfo.ariaLabel),\n\t\t\t\trenderLineNumbers: opts.viewInfo.renderLineNumbers,\n\t\t\t\trenderCustomLineNumbers: opts.viewInfo.renderCustomLineNumbers,\n\t\t\t\trenderFinalNewline: opts.viewInfo.renderFinalNewline,\n\t\t\t\tselectOnLineNumbers: opts.viewInfo.selectOnLineNumbers,\n\t\t\t\tglyphMargin: opts.viewInfo.glyphMargin,\n\t\t\t\trevealHorizontalRightPadding: opts.viewInfo.revealHorizontalRightPadding,\n\t\t\t\troundedSelection: (accessibilityIsOn ? false : opts.viewInfo.roundedSelection), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\toverviewRulerLanes: opts.viewInfo.overviewRulerLanes,\n\t\t\t\toverviewRulerBorder: opts.viewInfo.overviewRulerBorder,\n\t\t\t\tcursorBlinking: opts.viewInfo.cursorBlinking,\n\t\t\t\tmouseWheelZoom: opts.viewInfo.mouseWheelZoom,\n\t\t\t\tcursorSmoothCaretAnimation: opts.viewInfo.cursorSmoothCaretAnimation,\n\t\t\t\tcursorStyle: opts.viewInfo.cursorStyle,\n\t\t\t\tcursorWidth: opts.viewInfo.cursorWidth,\n\t\t\t\thideCursorInOverviewRuler: opts.viewInfo.hideCursorInOverviewRuler,\n\t\t\t\tscrollBeyondLastLine: opts.viewInfo.scrollBeyondLastLine,\n\t\t\t\tscrollBeyondLastColumn: opts.viewInfo.scrollBeyondLastColumn,\n\t\t\t\tsmoothScrolling: opts.viewInfo.smoothScrolling,\n\t\t\t\tstopRenderingLineAfter: opts.viewInfo.stopRenderingLineAfter,\n\t\t\t\trenderWhitespace: (accessibilityIsOn ? 'none' : opts.viewInfo.renderWhitespace), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\trenderControlCharacters: (accessibilityIsOn ? false : opts.viewInfo.renderControlCharacters), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfontLigatures: (accessibilityIsOn ? false : opts.viewInfo.fontLigatures), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\trenderIndentGuides: (accessibilityIsOn ? false : opts.viewInfo.renderIndentGuides), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\thighlightActiveIndentGuide: opts.viewInfo.highlightActiveIndentGuide,\n\t\t\t\trenderLineHighlight: opts.viewInfo.renderLineHighlight,\n\t\t\t\tscrollbar: opts.viewInfo.scrollbar,\n\t\t\t\tminimap: {\n\t\t\t\t\tenabled: (accessibilityIsOn ? false : opts.viewInfo.minimap.enabled), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\t\tside: opts.viewInfo.minimap.side,\n\t\t\t\t\trenderCharacters: opts.viewInfo.minimap.renderCharacters,\n\t\t\t\t\tshowSlider: opts.viewInfo.minimap.showSlider,\n\t\t\t\t\tmaxColumn: opts.viewInfo.minimap.maxColumn\n\t\t\t\t},\n\t\t\t\tfixedOverflowWidgets: opts.viewInfo.fixedOverflowWidgets\n\t\t\t},\n\n\t\t\tcontribInfo: {\n\t\t\t\tselectionClipboard: opts.contribInfo.selectionClipboard,\n\t\t\t\thover: opts.contribInfo.hover,\n\t\t\t\tlinks: (accessibilityIsOn ? false : opts.contribInfo.links), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tcontextmenu: opts.contribInfo.contextmenu,\n\t\t\t\tquickSuggestions: opts.contribInfo.quickSuggestions,\n\t\t\t\tquickSuggestionsDelay: opts.contribInfo.quickSuggestionsDelay,\n\t\t\t\tparameterHints: opts.contribInfo.parameterHints,\n\t\t\t\tformatOnType: opts.contribInfo.formatOnType,\n\t\t\t\tformatOnPaste: opts.contribInfo.formatOnPaste,\n\t\t\t\tsuggestOnTriggerCharacters: opts.contribInfo.suggestOnTriggerCharacters,\n\t\t\t\tacceptSuggestionOnEnter: opts.contribInfo.acceptSuggestionOnEnter,\n\t\t\t\tacceptSuggestionOnCommitCharacter: opts.contribInfo.acceptSuggestionOnCommitCharacter,\n\t\t\t\twordBasedSuggestions: opts.contribInfo.wordBasedSuggestions,\n\t\t\t\tsuggestSelection: opts.contribInfo.suggestSelection,\n\t\t\t\tsuggestFontSize: opts.contribInfo.suggestFontSize,\n\t\t\t\tsuggestLineHeight: opts.contribInfo.suggestLineHeight,\n\t\t\t\ttabCompletion: opts.contribInfo.tabCompletion,\n\t\t\t\tsuggest: opts.contribInfo.suggest,\n\t\t\t\tgotoLocation: opts.contribInfo.gotoLocation,\n\t\t\t\tselectionHighlight: (accessibilityIsOn ? false : opts.contribInfo.selectionHighlight), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\toccurrencesHighlight: (accessibilityIsOn ? false : opts.contribInfo.occurrencesHighlight), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tcodeLens: (accessibilityIsOn ? false : opts.contribInfo.codeLens), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfolding: (accessibilityIsOn ? false : opts.contribInfo.folding), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfoldingStrategy: opts.contribInfo.foldingStrategy,\n\t\t\t\tshowFoldingControls: opts.contribInfo.showFoldingControls,\n\t\t\t\tmatchBrackets: (accessibilityIsOn ? false : opts.contribInfo.matchBrackets), // DISABLED WHEN SCREEN READER IS ATTACHED\n\t\t\t\tfind: opts.contribInfo.find,\n\t\t\t\tcolorDecorators: opts.contribInfo.colorDecorators,\n\t\t\t\tlightbulbEnabled: opts.contribInfo.lightbulbEnabled,\n\t\t\t\tcodeActionsOnSave: opts.contribInfo.codeActionsOnSave,\n\t\t\t\tcodeActionsOnSaveTimeout: opts.contribInfo.codeActionsOnSaveTimeout\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static createInternalEditorOptions(env: IEnvironmentalOptions, _opts: IValidatedEditorOptions) {\n\n\t\tlet accessibilitySupport: AccessibilitySupport;\n\t\tif (_opts.accessibilitySupport === 'auto') {\n\t\t\t// The editor reads the `accessibilitySupport` from the environment\n\t\t\taccessibilitySupport = env.accessibilitySupport;\n\t\t} else if (_opts.accessibilitySupport === 'on') {\n\t\t\taccessibilitySupport = AccessibilitySupport.Enabled;\n\t\t} else {\n\t\t\taccessibilitySupport = AccessibilitySupport.Disabled;\n\t\t}\n\n\t\t// Disable some non critical features to get as best performance as possible\n\t\t// See https://github.com/Microsoft/vscode/issues/26730\n\t\tconst opts = this._tweakValidatedOptions(_opts, accessibilitySupport);\n\n\t\tlet lineDecorationsWidth: number;\n\t\tif (typeof opts.lineDecorationsWidth === 'string' && /^\\d+(\\.\\d+)?ch$/.test(opts.lineDecorationsWidth)) {\n\t\t\tconst multiple = parseFloat(opts.lineDecorationsWidth.substr(0, opts.lineDecorationsWidth.length - 2));\n\t\t\tlineDecorationsWidth = multiple * env.fontInfo.typicalHalfwidthCharacterWidth;\n\t\t} else {\n\t\t\tlineDecorationsWidth = _clampedInt(opts.lineDecorationsWidth, 0, 0, 1000);\n\t\t}\n\t\tif (opts.contribInfo.folding) {\n\t\t\tlineDecorationsWidth += 16;\n\t\t}\n\n\t\tconst layoutInfo = EditorLayoutProvider.compute({\n\t\t\touterWidth: env.outerWidth,\n\t\t\touterHeight: env.outerHeight,\n\t\t\tshowGlyphMargin: opts.viewInfo.glyphMargin,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\tshowLineNumbers: (opts.viewInfo.renderLineNumbers !== RenderLineNumbersType.Off),\n\t\t\tlineNumbersMinChars: opts.lineNumbersMinChars,\n\t\t\tlineNumbersDigitCount: env.lineNumbersDigitCount,\n\t\t\tlineDecorationsWidth: lineDecorationsWidth,\n\t\t\ttypicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n\t\t\tmaxDigitWidth: env.fontInfo.maxDigitWidth,\n\t\t\tverticalScrollbarWidth: opts.viewInfo.scrollbar.verticalScrollbarSize,\n\t\t\thorizontalScrollbarHeight: opts.viewInfo.scrollbar.horizontalScrollbarSize,\n\t\t\tscrollbarArrowSize: opts.viewInfo.scrollbar.arrowSize,\n\t\t\tverticalScrollbarHasArrows: opts.viewInfo.scrollbar.verticalHasArrows,\n\t\t\tminimap: opts.viewInfo.minimap.enabled,\n\t\t\tminimapSide: opts.viewInfo.minimap.side,\n\t\t\tminimapRenderCharacters: opts.viewInfo.minimap.renderCharacters,\n\t\t\tminimapMaxColumn: opts.viewInfo.minimap.maxColumn,\n\t\t\tpixelRatio: env.pixelRatio\n\t\t});\n\n\t\tlet bareWrappingInfo: { isWordWrapMinified: boolean; isViewportWrapping: boolean; wrappingColumn: number; } | null = null;\n\t\t{\n\t\t\tconst wordWrap = opts.wordWrap;\n\t\t\tconst wordWrapColumn = opts.wordWrapColumn;\n\t\t\tconst wordWrapMinified = opts.wordWrapMinified;\n\n\t\t\tif (accessibilitySupport === AccessibilitySupport.Enabled) {\n\t\t\t\t// See https://github.com/Microsoft/vscode/issues/27766\n\t\t\t\t// Never enable wrapping when a screen reader is attached\n\t\t\t\t// because arrow down etc. will not move the cursor in the way\n\t\t\t\t// a screen reader expects.\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t} else if (wordWrapMinified && env.isDominatedByLongLines) {\n\t\t\t\t// Force viewport width wrapping if model is dominated by long lines\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: true,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'on') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.max(1, layoutInfo.viewportColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'bounded') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: true,\n\t\t\t\t\twrappingColumn: Math.min(Math.max(1, layoutInfo.viewportColumn), wordWrapColumn)\n\t\t\t\t};\n\t\t\t} else if (wordWrap === 'wordWrapColumn') {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: wordWrapColumn\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tbareWrappingInfo = {\n\t\t\t\t\tisWordWrapMinified: false,\n\t\t\t\t\tisViewportWrapping: false,\n\t\t\t\t\twrappingColumn: -1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst wrappingInfo: EditorWrappingInfo = {\n\t\t\tinDiffEditor: opts.inDiffEditor,\n\t\t\tisDominatedByLongLines: env.isDominatedByLongLines,\n\t\t\tisWordWrapMinified: bareWrappingInfo.isWordWrapMinified,\n\t\t\tisViewportWrapping: bareWrappingInfo.isViewportWrapping,\n\t\t\twrappingColumn: bareWrappingInfo.wrappingColumn,\n\t\t\twrappingIndent: opts.wrappingIndent,\n\t\t\twordWrapBreakBeforeCharacters: opts.wordWrapBreakBeforeCharacters,\n\t\t\twordWrapBreakAfterCharacters: opts.wordWrapBreakAfterCharacters,\n\t\t\twordWrapBreakObtrusiveCharacters: opts.wordWrapBreakObtrusiveCharacters,\n\t\t};\n\n\t\tlet className = 'monaco-editor';\n\t\tif (opts.viewInfo.extraEditorClassName) {\n\t\t\tclassName += ' ' + opts.viewInfo.extraEditorClassName;\n\t\t}\n\t\tif (env.extraEditorClassName) {\n\t\t\tclassName += ' ' + env.extraEditorClassName;\n\t\t}\n\t\tif (opts.viewInfo.fontLigatures) {\n\t\t\tclassName += ' enable-ligatures';\n\t\t}\n\t\tif (opts.mouseStyle === 'default') {\n\t\t\tclassName += ' mouse-default';\n\t\t} else if (opts.mouseStyle === 'copy') {\n\t\t\tclassName += ' mouse-copy';\n\t\t}\n\n\t\treturn new InternalEditorOptions({\n\t\t\tcanUseLayerHinting: opts.disableLayerHinting ? false : true,\n\t\t\tpixelRatio: env.pixelRatio,\n\t\t\teditorClassName: className,\n\t\t\tlineHeight: env.fontInfo.lineHeight,\n\t\t\treadOnly: opts.readOnly,\n\t\t\taccessibilitySupport: accessibilitySupport,\n\t\t\tmultiCursorModifier: opts.multiCursorModifier,\n\t\t\tmultiCursorMergeOverlapping: opts.multiCursorMergeOverlapping,\n\t\t\twordSeparators: opts.wordSeparators,\n\t\t\tautoClosingBrackets: opts.autoClosingBrackets,\n\t\t\tautoClosingQuotes: opts.autoClosingQuotes,\n\t\t\tautoSurround: opts.autoSurround,\n\t\t\tautoIndent: opts.autoIndent,\n\t\t\tuseTabStops: opts.useTabStops,\n\t\t\ttabFocusMode: opts.readOnly ? true : env.tabFocusMode,\n\t\t\tdragAndDrop: opts.dragAndDrop,\n\t\t\temptySelectionClipboard: opts.emptySelectionClipboard && env.emptySelectionClipboard,\n\t\t\tcopyWithSyntaxHighlighting: opts.copyWithSyntaxHighlighting,\n\t\t\tlayoutInfo: layoutInfo,\n\t\t\tfontInfo: env.fontInfo,\n\t\t\tviewInfo: opts.viewInfo,\n\t\t\twrappingInfo: wrappingInfo,\n\t\t\tcontribInfo: opts.contribInfo,\n\t\t\tshowUnused: opts.showUnused,\n\t\t});\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IEditorLayoutProviderOpts {\n\treadonly outerWidth: number;\n\treadonly outerHeight: number;\n\n\treadonly showGlyphMargin: boolean;\n\treadonly lineHeight: number;\n\n\treadonly showLineNumbers: boolean;\n\treadonly lineNumbersMinChars: number;\n\treadonly lineNumbersDigitCount: number;\n\n\treadonly lineDecorationsWidth: number;\n\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly maxDigitWidth: number;\n\n\treadonly verticalScrollbarWidth: number;\n\treadonly verticalScrollbarHasArrows: boolean;\n\treadonly scrollbarArrowSize: number;\n\treadonly horizontalScrollbarHeight: number;\n\n\treadonly minimap: boolean;\n\treadonly minimapSide: string;\n\treadonly minimapRenderCharacters: boolean;\n\treadonly minimapMaxColumn: number;\n\treadonly pixelRatio: number;\n}\n\n/**\n * @internal\n */\nexport class EditorLayoutProvider {\n\tpublic static compute(_opts: IEditorLayoutProviderOpts): EditorLayoutInfo {\n\t\tconst outerWidth = _opts.outerWidth | 0;\n\t\tconst outerHeight = _opts.outerHeight | 0;\n\t\tconst showGlyphMargin = _opts.showGlyphMargin;\n\t\tconst lineHeight = _opts.lineHeight | 0;\n\t\tconst showLineNumbers = _opts.showLineNumbers;\n\t\tconst lineNumbersMinChars = _opts.lineNumbersMinChars | 0;\n\t\tconst lineNumbersDigitCount = _opts.lineNumbersDigitCount | 0;\n\t\tconst lineDecorationsWidth = _opts.lineDecorationsWidth | 0;\n\t\tconst typicalHalfwidthCharacterWidth = _opts.typicalHalfwidthCharacterWidth;\n\t\tconst maxDigitWidth = _opts.maxDigitWidth;\n\t\tconst verticalScrollbarWidth = _opts.verticalScrollbarWidth | 0;\n\t\tconst verticalScrollbarHasArrows = _opts.verticalScrollbarHasArrows;\n\t\tconst scrollbarArrowSize = _opts.scrollbarArrowSize | 0;\n\t\tconst horizontalScrollbarHeight = _opts.horizontalScrollbarHeight | 0;\n\t\tconst minimap = _opts.minimap;\n\t\tconst minimapSide = _opts.minimapSide;\n\t\tconst minimapRenderCharacters = _opts.minimapRenderCharacters;\n\t\tconst minimapMaxColumn = _opts.minimapMaxColumn | 0;\n\t\tconst pixelRatio = _opts.pixelRatio;\n\n\t\tlet lineNumbersWidth = 0;\n\t\tif (showLineNumbers) {\n\t\t\tconst digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n\t\t\tlineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n\t\t}\n\n\t\tlet glyphMarginWidth = 0;\n\t\tif (showGlyphMargin) {\n\t\t\tglyphMarginWidth = lineHeight;\n\t\t}\n\n\t\tlet glyphMarginLeft = 0;\n\t\tlet lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n\t\tlet decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n\t\tlet contentLeft = decorationsLeft + lineDecorationsWidth;\n\n\t\tconst remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n\n\t\tlet renderMinimap: RenderMinimap;\n\t\tlet minimapLeft: number;\n\t\tlet minimapWidth: number;\n\t\tlet contentWidth: number;\n\t\tif (!minimap) {\n\t\t\tminimapLeft = 0;\n\t\t\tminimapWidth = 0;\n\t\t\trenderMinimap = RenderMinimap.None;\n\t\t\tcontentWidth = remainingWidth;\n\t\t} else {\n\t\t\tlet minimapCharWidth: number;\n\t\t\tif (pixelRatio >= 2) {\n\t\t\t\trenderMinimap = minimapRenderCharacters ? RenderMinimap.Large : RenderMinimap.LargeBlocks;\n\t\t\t\tminimapCharWidth = 2 / pixelRatio;\n\t\t\t} else {\n\t\t\t\trenderMinimap = minimapRenderCharacters ? RenderMinimap.Small : RenderMinimap.SmallBlocks;\n\t\t\t\tminimapCharWidth = 1 / pixelRatio;\n\t\t\t}\n\n\t\t\t// Given:\n\t\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\t\t// viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n\t\t\t// minimapWidth = viewportColumn * minimapCharWidth\n\t\t\t// contentWidth = remainingWidth - minimapWidth\n\t\t\t// What are good values for contentWidth and minimapWidth ?\n\n\t\t\t// minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n\t\t\t// minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n\n\t\t\tminimapWidth = Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)));\n\t\t\tlet minimapColumns = minimapWidth / minimapCharWidth;\n\t\t\tif (minimapColumns > minimapMaxColumn) {\n\t\t\t\tminimapWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n\t\t\t}\n\t\t\tcontentWidth = remainingWidth - minimapWidth;\n\n\t\t\tif (minimapSide === 'left') {\n\t\t\t\tminimapLeft = 0;\n\t\t\t\tglyphMarginLeft += minimapWidth;\n\t\t\t\tlineNumbersLeft += minimapWidth;\n\t\t\t\tdecorationsLeft += minimapWidth;\n\t\t\t\tcontentLeft += minimapWidth;\n\t\t\t} else {\n\t\t\t\tminimapLeft = outerWidth - minimapWidth - verticalScrollbarWidth;\n\t\t\t}\n\t\t}\n\n\t\t// (leaving 2px for the cursor to have space after the last character)\n\t\tconst viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n\n\t\tconst verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n\n\t\treturn {\n\t\t\twidth: outerWidth,\n\t\t\theight: outerHeight,\n\n\t\t\tglyphMarginLeft: glyphMarginLeft,\n\t\t\tglyphMarginWidth: glyphMarginWidth,\n\t\t\tglyphMarginHeight: outerHeight,\n\n\t\t\tlineNumbersLeft: lineNumbersLeft,\n\t\t\tlineNumbersWidth: lineNumbersWidth,\n\t\t\tlineNumbersHeight: outerHeight,\n\n\t\t\tdecorationsLeft: decorationsLeft,\n\t\t\tdecorationsWidth: lineDecorationsWidth,\n\t\t\tdecorationsHeight: outerHeight,\n\n\t\t\tcontentLeft: contentLeft,\n\t\t\tcontentWidth: contentWidth,\n\t\t\tcontentHeight: outerHeight,\n\n\t\t\trenderMinimap: renderMinimap,\n\t\t\tminimapLeft: minimapLeft,\n\t\t\tminimapWidth: minimapWidth,\n\n\t\t\tviewportColumn: viewportColumn,\n\n\t\t\tverticalScrollbarWidth: verticalScrollbarWidth,\n\t\t\thorizontalScrollbarHeight: horizontalScrollbarHeight,\n\n\t\t\toverviewRuler: {\n\t\t\t\ttop: verticalArrowSize,\n\t\t\t\twidth: verticalScrollbarWidth,\n\t\t\t\theight: (outerHeight - 2 * verticalArrowSize),\n\t\t\t\tright: 0\n\t\t\t}\n\t\t};\n\t}\n}\n\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace, \\'Droid Sans Fallback\\'';\n\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n\tfontFamily: (\n\t\tbrowser.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)\n\t),\n\tfontWeight: 'normal',\n\tfontSize: (\n\t\tbrowser.isMacintosh ? 12 : 14\n\t),\n\tlineHeight: 0,\n\tletterSpacing: 0,\n};\n\n/**\n * @internal\n */\nexport const EDITOR_MODEL_DEFAULTS = {\n\ttabSize: 4,\n\tindentSize: 4,\n\tinsertSpaces: true,\n\tdetectIndentation: true,\n\ttrimAutoWhitespace: true,\n\tlargeFileOptimizations: true\n};\n\n/**\n * @internal\n */\nexport const EDITOR_DEFAULTS: IValidatedEditorOptions = {\n\tinDiffEditor: false,\n\twordSeparators: USUAL_WORD_SEPARATORS,\n\tlineNumbersMinChars: 5,\n\tlineDecorationsWidth: 10,\n\treadOnly: false,\n\tmouseStyle: 'text',\n\tdisableLayerHinting: false,\n\tautomaticLayout: false,\n\twordWrap: 'off',\n\twordWrapColumn: 80,\n\twordWrapMinified: true,\n\twrappingIndent: WrappingIndent.Same,\n\twordWrapBreakBeforeCharacters: '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋',\n\twordWrapBreakAfterCharacters: ' \\t})]?|/&,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣',\n\twordWrapBreakObtrusiveCharacters: '.',\n\tautoClosingBrackets: 'languageDefined',\n\tautoClosingQuotes: 'languageDefined',\n\tautoSurround: 'languageDefined',\n\tautoIndent: true,\n\tdragAndDrop: true,\n\temptySelectionClipboard: true,\n\tcopyWithSyntaxHighlighting: true,\n\tuseTabStops: true,\n\tmultiCursorModifier: 'altKey',\n\tmultiCursorMergeOverlapping: true,\n\taccessibilitySupport: 'auto',\n\tshowUnused: true,\n\n\tviewInfo: {\n\t\textraEditorClassName: '',\n\t\tdisableMonospaceOptimizations: false,\n\t\trulers: [],\n\t\tariaLabel: nls.localize('editorViewAccessibleLabel', \"Editor content\"),\n\t\trenderLineNumbers: RenderLineNumbersType.On,\n\t\trenderCustomLineNumbers: null,\n\t\trenderFinalNewline: true,\n\t\tselectOnLineNumbers: true,\n\t\tglyphMargin: true,\n\t\trevealHorizontalRightPadding: 30,\n\t\troundedSelection: true,\n\t\toverviewRulerLanes: 2,\n\t\toverviewRulerBorder: true,\n\t\tcursorBlinking: TextEditorCursorBlinkingStyle.Blink,\n\t\tmouseWheelZoom: false,\n\t\tcursorSmoothCaretAnimation: false,\n\t\tcursorStyle: TextEditorCursorStyle.Line,\n\t\tcursorWidth: 0,\n\t\thideCursorInOverviewRuler: false,\n\t\tscrollBeyondLastLine: true,\n\t\tscrollBeyondLastColumn: 5,\n\t\tsmoothScrolling: false,\n\t\tstopRenderingLineAfter: 10000,\n\t\trenderWhitespace: 'none',\n\t\trenderControlCharacters: false,\n\t\tfontLigatures: false,\n\t\trenderIndentGuides: true,\n\t\thighlightActiveIndentGuide: true,\n\t\trenderLineHighlight: 'line',\n\t\tscrollbar: {\n\t\t\tvertical: ScrollbarVisibility.Auto,\n\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\tarrowSize: 11,\n\t\t\tuseShadows: true,\n\t\t\tverticalHasArrows: false,\n\t\t\thorizontalHasArrows: false,\n\t\t\thorizontalScrollbarSize: 10,\n\t\t\thorizontalSliderSize: 10,\n\t\t\tverticalScrollbarSize: 14,\n\t\t\tverticalSliderSize: 14,\n\t\t\thandleMouseWheel: true,\n\t\t\tmouseWheelScrollSensitivity: 1,\n\t\t\tfastScrollSensitivity: 5,\n\t\t},\n\t\tminimap: {\n\t\t\tenabled: true,\n\t\t\tside: 'right',\n\t\t\tshowSlider: 'mouseover',\n\t\t\trenderCharacters: true,\n\t\t\tmaxColumn: 120\n\t\t},\n\t\tfixedOverflowWidgets: false,\n\t},\n\n\tcontribInfo: {\n\t\tselectionClipboard: false,\n\t\thover: {\n\t\t\tenabled: true,\n\t\t\tdelay: 300,\n\t\t\tsticky: true\n\t\t},\n\t\tlinks: true,\n\t\tcontextmenu: true,\n\t\tquickSuggestions: { other: true, comments: false, strings: false },\n\t\tquickSuggestionsDelay: 10,\n\t\tparameterHints: {\n\t\t\tenabled: true,\n\t\t\tcycle: false\n\t\t},\n\t\tformatOnType: false,\n\t\tformatOnPaste: false,\n\t\tsuggestOnTriggerCharacters: true,\n\t\tacceptSuggestionOnEnter: 'on',\n\t\tacceptSuggestionOnCommitCharacter: true,\n\t\twordBasedSuggestions: true,\n\t\tsuggestSelection: 'recentlyUsed',\n\t\tsuggestFontSize: 0,\n\t\tsuggestLineHeight: 0,\n\t\ttabCompletion: 'off',\n\t\tsuggest: {\n\t\t\tfilterGraceful: true,\n\t\t\tsnippets: 'inline',\n\t\t\tsnippetsPreventQuickSuggestions: true,\n\t\t\tlocalityBonus: false,\n\t\t\tshareSuggestSelections: false,\n\t\t\tshowIcons: true,\n\t\t\tmaxVisibleSuggestions: 12,\n\t\t\tfilteredTypes: Object.create(null)\n\t\t},\n\t\tgotoLocation: {\n\t\t\tmultiple: 'peek'\n\t\t},\n\t\tselectionHighlight: true,\n\t\toccurrencesHighlight: true,\n\t\tcodeLens: true,\n\t\tfolding: true,\n\t\tfoldingStrategy: 'auto',\n\t\tshowFoldingControls: 'mouseover',\n\t\tmatchBrackets: true,\n\t\tfind: {\n\t\t\tseedSearchStringFromSelection: true,\n\t\t\tautoFindInSelection: false,\n\t\t\tglobalFindClipboard: false,\n\t\t\taddExtraSpaceOnTop: true\n\t\t},\n\t\tcolorDecorators: true,\n\t\tlightbulbEnabled: true,\n\t\tcodeActionsOnSave: {},\n\t\tcodeActionsOnSaveTimeout: 750\n\t},\n};\n"]}]}