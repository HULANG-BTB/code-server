{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionsUtil.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionsUtil.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extensionsRegistry_1 = require(\"vs/workbench/services/extensions/common/extensionsRegistry\");\nvar extensionsUtil_1 = require(\"vs/platform/extensions/node/extensionsUtil\");\nfunction isUIExtension(manifest, configurationService) {\n    var uiExtensionPoints = extensionsRegistry_1.ExtensionsRegistry.getExtensionPoints().filter(function (e) { return e.defaultExtensionKind !== 'workspace'; }).map(function (e) { return e.name; });\n    return extensionsUtil_1.isUIExtension(manifest, uiExtensionPoints, configurationService);\n}\nexports.isUIExtension = isUIExtension;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionsUtil.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionsUtil.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAIhG,iGAAgG;AAChG,6EAA6F;AAE7F,SAAgB,aAAa,CAAC,QAA4B,EAAE,oBAA2C;IACtG,IAAM,iBAAiB,GAAG,uCAAkB,CAAC,kBAAkB,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,oBAAoB,KAAK,WAAW,EAAtC,CAAsC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC;IACvI,OAAO,8BAAc,CAAC,QAAQ,EAAE,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;AAC1E,CAAC;AAHD,sCAGC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { isUIExtension as _isUIExtension } from 'vs/platform/extensions/node/extensionsUtil';\n\nexport function isUIExtension(manifest: IExtensionManifest, configurationService: IConfigurationService): boolean {\n\tconst uiExtensionPoints = ExtensionsRegistry.getExtensionPoints().filter(e => e.defaultExtensionKind !== 'workspace').map(e => e.name);\n\treturn _isUIExtension(manifest, uiExtensionPoints, configurationService);\n}\n"]}]}