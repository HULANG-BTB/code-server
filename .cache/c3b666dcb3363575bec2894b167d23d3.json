{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/splash/electron-browser/partsSplash.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/splash/electron-browser/partsSplash.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar path_1 = require(\"vs/base/common/path\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar broadcast_1 = require(\"vs/workbench/services/broadcast/common/broadcast\");\nvar lifecycle_2 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar editor_1 = require(\"vs/workbench/browser/parts/editor/editor\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar themes = require(\"vs/workbench/common/theme\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar PartsSplash = /** @class */ (function () {\n    function PartsSplash(_themeService, _layoutService, _fileService, _envService, _broadcastService, lifecycleService, editorGroupsService, configService) {\n        var _this = this;\n        this._themeService = _themeService;\n        this._layoutService = _layoutService;\n        this._fileService = _fileService;\n        this._envService = _envService;\n        this._broadcastService = _broadcastService;\n        this._disposables = [];\n        lifecycleService.when(lifecycle_2.LifecyclePhase.Restored).then(function (_) { return _this._removePartsSplash(); });\n        event_1.Event.debounce(event_1.Event.any(browser_1.onDidChangeFullscreen, editorGroupsService.onDidLayout), function () { }, 800)(this._savePartsSplash, this, this._disposables);\n        configService.onDidChangeConfiguration(function (e) {\n            _this._didChangeTitleBarStyle = e.affectsConfiguration('window.titleBarStyle');\n        }, this, this._disposables);\n    }\n    PartsSplash.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n    };\n    PartsSplash.prototype._savePartsSplash = function () {\n        var baseTheme = themeService_1.getThemeTypeSelector(this._themeService.getTheme().type);\n        var colorInfo = {\n            foreground: this._getThemeColor(colorRegistry_1.foreground),\n            editorBackground: this._getThemeColor(colorRegistry_1.editorBackground),\n            titleBarBackground: this._getThemeColor(themes.TITLE_BAR_ACTIVE_BACKGROUND),\n            activityBarBackground: this._getThemeColor(themes.ACTIVITY_BAR_BACKGROUND),\n            sideBarBackground: this._getThemeColor(themes.SIDE_BAR_BACKGROUND),\n            statusBarBackground: this._getThemeColor(themes.STATUS_BAR_BACKGROUND),\n            statusBarNoFolderBackground: this._getThemeColor(themes.STATUS_BAR_NO_FOLDER_BACKGROUND),\n        };\n        var layoutInfo = !this._shouldSaveLayoutInfo() ? undefined : {\n            sideBarSide: this._layoutService.getSideBarPosition() === layoutService_1.Position.RIGHT ? 'right' : 'left',\n            editorPartMinWidth: editor_1.DEFAULT_EDITOR_MIN_DIMENSIONS.width,\n            titleBarHeight: dom_1.getTotalHeight(this._layoutService.getContainer(layoutService_1.Parts.TITLEBAR_PART)),\n            activityBarWidth: dom_1.getTotalWidth(this._layoutService.getContainer(layoutService_1.Parts.ACTIVITYBAR_PART)),\n            sideBarWidth: dom_1.getTotalWidth(this._layoutService.getContainer(layoutService_1.Parts.SIDEBAR_PART)),\n            statusBarHeight: dom_1.getTotalHeight(this._layoutService.getContainer(layoutService_1.Parts.STATUSBAR_PART)),\n        };\n        this._fileService.updateContent(uri_1.URI.file(path_1.join(this._envService.userDataPath, 'rapid_render.json')), JSON.stringify({\n            id: PartsSplash._splashElementId,\n            colorInfo: colorInfo,\n            layoutInfo: layoutInfo,\n            baseTheme: baseTheme\n        }), { encoding: 'utf8' });\n        if (baseTheme !== this._lastBaseTheme || colorInfo.editorBackground !== this._lastBackground) {\n            // notify the main window on background color changes: the main window sets the background color to new windows\n            this._lastBaseTheme = baseTheme;\n            this._lastBackground = colorInfo.editorBackground;\n            // the color needs to be in hex\n            var backgroundColor = this._themeService.getTheme().getColor(colorRegistry_1.editorBackground) || themes.WORKBENCH_BACKGROUND(this._themeService.getTheme());\n            this._broadcastService.broadcast({ channel: 'vscode:changeColorTheme', payload: JSON.stringify({ baseTheme: baseTheme, background: color_1.Color.Format.CSS.formatHex(backgroundColor) }) });\n        }\n    };\n    PartsSplash.prototype._getThemeColor = function (id) {\n        var theme = this._themeService.getTheme();\n        var color = theme.getColor(id);\n        return color ? color.toString() : undefined;\n    };\n    PartsSplash.prototype._shouldSaveLayoutInfo = function () {\n        return !browser_1.isFullscreen() && !this._envService.isExtensionDevelopment && !this._didChangeTitleBarStyle;\n    };\n    PartsSplash.prototype._removePartsSplash = function () {\n        var element = document.getElementById(PartsSplash._splashElementId);\n        if (element) {\n            element.style.display = 'none';\n        }\n        // remove initial colors\n        var defaultStyles = document.head.getElementsByClassName('initialShellColors');\n        if (defaultStyles.length) {\n            document.head.removeChild(defaultStyles[0]);\n        }\n    };\n    PartsSplash._splashElementId = 'monaco-parts-splash';\n    PartsSplash = tslib_1.__decorate([\n        tslib_1.__param(0, themeService_1.IThemeService),\n        tslib_1.__param(1, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(2, files_1.IFileService),\n        tslib_1.__param(3, environment_1.IEnvironmentService),\n        tslib_1.__param(4, broadcast_1.IBroadcastService),\n        tslib_1.__param(5, lifecycle_2.ILifecycleService),\n        tslib_1.__param(6, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(7, configuration_1.IConfigurationService)\n    ], PartsSplash);\n    return PartsSplash;\n}());\nplatform_1.Registry.as(contributions_1.Extensions.Workbench).registerWorkbenchContribution(PartsSplash, lifecycle_2.LifecyclePhase.Starting);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/splash/electron-browser/partsSplash.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/splash/electron-browser/partsSplash.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { onDidChangeFullscreen, isFullscreen } from 'vs/base/browser/browser';\nimport { getTotalHeight, getTotalWidth } from 'vs/base/browser/dom';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IBroadcastService } from 'vs/workbench/services/broadcast/common/broadcast';\nimport { ILifecycleService, LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ColorIdentifier, editorBackground, foreground } from 'vs/platform/theme/common/colorRegistry';\nimport { getThemeTypeSelector, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { DEFAULT_EDITOR_MIN_DIMENSIONS } from 'vs/workbench/browser/parts/editor/editor';\nimport { Extensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport * as themes from 'vs/workbench/common/theme';\nimport { IWorkbenchLayoutService, Parts, Position } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\n\nclass PartsSplash {\n\n\tprivate static readonly _splashElementId = 'monaco-parts-splash';\n\n\tprivate readonly _disposables: IDisposable[] = [];\n\n\tprivate _didChangeTitleBarStyle: boolean;\n\tprivate _lastBaseTheme: string;\n\tprivate _lastBackground?: string;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IEnvironmentService private readonly _envService: IEnvironmentService,\n\t\t@IBroadcastService private readonly _broadcastService: IBroadcastService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IEditorGroupsService editorGroupsService: IEditorGroupsService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t) {\n\t\tlifecycleService.when(LifecyclePhase.Restored).then(_ => this._removePartsSplash());\n\t\tEvent.debounce(Event.any<any>(\n\t\t\tonDidChangeFullscreen,\n\t\t\teditorGroupsService.onDidLayout\n\t\t), () => { }, 800)(this._savePartsSplash, this, this._disposables);\n\n\t\tconfigService.onDidChangeConfiguration(e => {\n\t\t\tthis._didChangeTitleBarStyle = e.affectsConfiguration('window.titleBarStyle');\n\t\t}, this, this._disposables);\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\t}\n\n\tprivate _savePartsSplash() {\n\t\tconst baseTheme = getThemeTypeSelector(this._themeService.getTheme().type);\n\t\tconst colorInfo = {\n\t\t\tforeground: this._getThemeColor(foreground),\n\t\t\teditorBackground: this._getThemeColor(editorBackground),\n\t\t\ttitleBarBackground: this._getThemeColor(themes.TITLE_BAR_ACTIVE_BACKGROUND),\n\t\t\tactivityBarBackground: this._getThemeColor(themes.ACTIVITY_BAR_BACKGROUND),\n\t\t\tsideBarBackground: this._getThemeColor(themes.SIDE_BAR_BACKGROUND),\n\t\t\tstatusBarBackground: this._getThemeColor(themes.STATUS_BAR_BACKGROUND),\n\t\t\tstatusBarNoFolderBackground: this._getThemeColor(themes.STATUS_BAR_NO_FOLDER_BACKGROUND),\n\t\t};\n\t\tconst layoutInfo = !this._shouldSaveLayoutInfo() ? undefined : {\n\t\t\tsideBarSide: this._layoutService.getSideBarPosition() === Position.RIGHT ? 'right' : 'left',\n\t\t\teditorPartMinWidth: DEFAULT_EDITOR_MIN_DIMENSIONS.width,\n\t\t\ttitleBarHeight: getTotalHeight(this._layoutService.getContainer(Parts.TITLEBAR_PART)),\n\t\t\tactivityBarWidth: getTotalWidth(this._layoutService.getContainer(Parts.ACTIVITYBAR_PART)),\n\t\t\tsideBarWidth: getTotalWidth(this._layoutService.getContainer(Parts.SIDEBAR_PART)),\n\t\t\tstatusBarHeight: getTotalHeight(this._layoutService.getContainer(Parts.STATUSBAR_PART)),\n\t\t};\n\t\tthis._fileService.updateContent(\n\t\t\tURI.file(join(this._envService.userDataPath, 'rapid_render.json')),\n\t\t\tJSON.stringify({\n\t\t\t\tid: PartsSplash._splashElementId,\n\t\t\t\tcolorInfo,\n\t\t\t\tlayoutInfo,\n\t\t\t\tbaseTheme\n\t\t\t}),\n\t\t\t{ encoding: 'utf8' }\n\t\t);\n\n\t\tif (baseTheme !== this._lastBaseTheme || colorInfo.editorBackground !== this._lastBackground) {\n\t\t\t// notify the main window on background color changes: the main window sets the background color to new windows\n\t\t\tthis._lastBaseTheme = baseTheme;\n\t\t\tthis._lastBackground = colorInfo.editorBackground;\n\n\t\t\t// the color needs to be in hex\n\t\t\tconst backgroundColor = this._themeService.getTheme().getColor(editorBackground) || themes.WORKBENCH_BACKGROUND(this._themeService.getTheme());\n\t\t\tthis._broadcastService.broadcast({ channel: 'vscode:changeColorTheme', payload: JSON.stringify({ baseTheme, background: Color.Format.CSS.formatHex(backgroundColor) }) });\n\t\t}\n\t}\n\n\tprivate _getThemeColor(id: ColorIdentifier): string | undefined {\n\t\tconst theme = this._themeService.getTheme();\n\t\tconst color = theme.getColor(id);\n\t\treturn color ? color.toString() : undefined;\n\t}\n\n\tprivate _shouldSaveLayoutInfo(): boolean {\n\t\treturn !isFullscreen() && !this._envService.isExtensionDevelopment && !this._didChangeTitleBarStyle;\n\t}\n\n\tprivate _removePartsSplash(): void {\n\t\tlet element = document.getElementById(PartsSplash._splashElementId);\n\t\tif (element) {\n\t\t\telement.style.display = 'none';\n\t\t}\n\t\t// remove initial colors\n\t\tlet defaultStyles = document.head.getElementsByClassName('initialShellColors');\n\t\tif (defaultStyles.length) {\n\t\t\tdocument.head.removeChild(defaultStyles[0]);\n\t\t}\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(PartsSplash, LifecyclePhase.Starting);\n"]}]}