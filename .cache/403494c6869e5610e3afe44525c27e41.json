{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/modesRegistry.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/modesRegistry.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/base/common/event\", \"vs/editor/common/modes\", \"vs/editor/common/modes/languageConfigurationRegistry\", \"vs/platform/registry/common/platform\"], function (require, exports, nls, event_1, modes_1, languageConfigurationRegistry_1, platform_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // Define extension point ids\n    exports.Extensions = {\n        ModesRegistry: 'editor.modesRegistry'\n    };\n    class EditorModesRegistry {\n        constructor() {\n            this._onDidChangeLanguages = new event_1.Emitter();\n            this.onDidChangeLanguages = this._onDidChangeLanguages.event;\n            this._languages = [];\n            this._dynamicLanguages = [];\n        }\n        // --- languages\n        registerLanguage(def) {\n            this._languages.push(def);\n            this._onDidChangeLanguages.fire(undefined);\n        }\n        setDynamicLanguages(def) {\n            this._dynamicLanguages = def;\n            this._onDidChangeLanguages.fire(undefined);\n        }\n        getLanguages() {\n            return [].concat(this._languages).concat(this._dynamicLanguages);\n        }\n    }\n    exports.EditorModesRegistry = EditorModesRegistry;\n    exports.ModesRegistry = new EditorModesRegistry();\n    platform_1.Registry.add(exports.Extensions.ModesRegistry, exports.ModesRegistry);\n    exports.PLAINTEXT_MODE_ID = 'plaintext';\n    exports.PLAINTEXT_LANGUAGE_IDENTIFIER = new modes_1.LanguageIdentifier(exports.PLAINTEXT_MODE_ID, modes_1.LanguageId.PlainText);\n    exports.ModesRegistry.registerLanguage({\n        id: exports.PLAINTEXT_MODE_ID,\n        extensions: ['.txt', '.gitignore'],\n        aliases: [nls.localize('plainText.alias', \"Plain Text\"), 'text'],\n        mimetypes: ['text/plain']\n    });\n    languageConfigurationRegistry_1.LanguageConfigurationRegistry.register(exports.PLAINTEXT_LANGUAGE_IDENTIFIER, {\n        brackets: [\n            ['(', ')'],\n            ['[', ']'],\n            ['{', '}'],\n        ]\n    });\n});\n",null]}