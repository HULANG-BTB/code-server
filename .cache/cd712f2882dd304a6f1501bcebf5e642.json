{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsTree.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsTree.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar htmlContentRenderer_1 = require(\"vs/base/browser/htmlContentRenderer\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar button_1 = require(\"vs/base/browser/ui/button/button\");\nvar checkbox_1 = require(\"vs/base/browser/ui/checkbox/checkbox\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar list_1 = require(\"vs/base/browser/ui/list/list\");\nvar listWidget_1 = require(\"vs/base/browser/ui/list/listWidget\");\nvar selectBox_1 = require(\"vs/base/browser/ui/selectBox/selectBox\");\nvar toolbar_1 = require(\"vs/base/browser/ui/toolbar/toolbar\");\nvar objectTree_1 = require(\"vs/base/browser/ui/tree/objectTree\");\nvar objectTreeModel_1 = require(\"vs/base/browser/ui/tree/objectTreeModel\");\nvar tree_1 = require(\"vs/base/browser/ui/tree/tree\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar color_1 = require(\"vs/base/common/color\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar nls_1 = require(\"vs/nls\");\nvar clipboardService_1 = require(\"vs/platform/clipboard/common/clipboardService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar settingsTreeModels_1 = require(\"vs/workbench/contrib/preferences/browser/settingsTreeModels\");\nvar settingsWidgets_1 = require(\"vs/workbench/contrib/preferences/browser/settingsWidgets\");\nvar preferences_1 = require(\"vs/workbench/contrib/preferences/common/preferences\");\nvar preferences_2 = require(\"vs/workbench/services/preferences/common/preferences\");\nvar $ = DOM.$;\nfunction getExcludeDisplayValue(element) {\n    var data = element.isConfigured ? tslib_1.__assign({}, element.defaultValue, element.scopeValue) :\n        element.defaultValue;\n    return Object.keys(data)\n        .filter(function (key) { return !!data[key]; })\n        .map(function (key) {\n        var value = data[key];\n        var sibling = typeof value === 'boolean' ? undefined : value.when;\n        return {\n            id: key,\n            pattern: key,\n            sibling: sibling\n        };\n    });\n}\nfunction resolveSettingsTree(tocData, coreSettingsGroups) {\n    var allSettings = getFlatSettings(coreSettingsGroups);\n    return {\n        tree: _resolveSettingsTree(tocData, allSettings),\n        leftoverSettings: allSettings\n    };\n}\nexports.resolveSettingsTree = resolveSettingsTree;\nfunction resolveExtensionsSettings(groups) {\n    var settingsGroupToEntry = function (group) {\n        var flatSettings = arrays.flatten(group.sections.map(function (section) { return section.settings; }));\n        return {\n            id: group.id,\n            label: group.title,\n            settings: flatSettings\n        };\n    };\n    var extGroups = groups\n        .sort(function (a, b) { return a.title.localeCompare(b.title); })\n        .map(function (g) { return settingsGroupToEntry(g); });\n    return {\n        id: 'extensions',\n        label: nls_1.localize('extensions', \"Extensions\"),\n        children: extGroups\n    };\n}\nexports.resolveExtensionsSettings = resolveExtensionsSettings;\nfunction _resolveSettingsTree(tocData, allSettings) {\n    var children;\n    if (tocData.children) {\n        children = tocData.children\n            .map(function (child) { return _resolveSettingsTree(child, allSettings); })\n            .filter(function (child) { return (child.children && child.children.length) || (child.settings && child.settings.length); });\n    }\n    var settings;\n    if (tocData.settings) {\n        settings = arrays.flatten(tocData.settings.map(function (pattern) { return getMatchingSettings(allSettings, pattern); }));\n    }\n    if (!children && !settings) {\n        throw new Error(\"TOC node has no child groups or settings: \" + tocData.id);\n    }\n    return {\n        id: tocData.id,\n        label: tocData.label,\n        children: children,\n        settings: settings\n    };\n}\nfunction getMatchingSettings(allSettings, pattern) {\n    var result = [];\n    allSettings.forEach(function (s) {\n        if (settingMatches(s, pattern)) {\n            result.push(s);\n            allSettings.delete(s);\n        }\n    });\n    return result.sort(function (a, b) { return a.key.localeCompare(b.key); });\n}\nvar settingPatternCache = new Map();\nfunction createSettingMatchRegExp(pattern) {\n    pattern = strings_1.escapeRegExpCharacters(pattern)\n        .replace(/\\\\\\*/g, '.*');\n    return new RegExp(\"^\" + pattern, 'i');\n}\nfunction settingMatches(s, pattern) {\n    var regExp = settingPatternCache.get(pattern);\n    if (!regExp) {\n        regExp = createSettingMatchRegExp(pattern);\n        settingPatternCache.set(pattern, regExp);\n    }\n    return regExp.test(s.key);\n}\nfunction getFlatSettings(settingsGroups) {\n    var result = new Set();\n    for (var _i = 0, settingsGroups_1 = settingsGroups; _i < settingsGroups_1.length; _i++) {\n        var group = settingsGroups_1[_i];\n        for (var _a = 0, _b = group.sections; _a < _b.length; _a++) {\n            var section = _b[_a];\n            for (var _c = 0, _d = section.settings; _c < _d.length; _c++) {\n                var s = _d[_c];\n                if (!s.overrides || !s.overrides.length) {\n                    result.add(s);\n                }\n            }\n        }\n    }\n    return result;\n}\nvar SETTINGS_TEXT_TEMPLATE_ID = 'settings.text.template';\nvar SETTINGS_NUMBER_TEMPLATE_ID = 'settings.number.template';\nvar SETTINGS_ENUM_TEMPLATE_ID = 'settings.enum.template';\nvar SETTINGS_BOOL_TEMPLATE_ID = 'settings.bool.template';\nvar SETTINGS_EXCLUDE_TEMPLATE_ID = 'settings.exclude.template';\nvar SETTINGS_COMPLEX_TEMPLATE_ID = 'settings.complex.template';\nvar SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID = 'settings.newExtensions.template';\nvar SETTINGS_ELEMENT_TEMPLATE_ID = 'settings.group.template';\nvar AbstractSettingRenderer = /** @class */ (function () {\n    // Put common injections back here\n    function AbstractSettingRenderer(settingActions, _themeService, _contextViewService, _openerService, _instantiationService, _commandService, _contextMenuService, _keybindingService) {\n        this.settingActions = settingActions;\n        this._themeService = _themeService;\n        this._contextViewService = _contextViewService;\n        this._openerService = _openerService;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this._onDidClickOverrideElement = new event_1.Emitter();\n        this.onDidClickOverrideElement = this._onDidClickOverrideElement.event;\n        this._onDidChangeSetting = new event_1.Emitter();\n        this.onDidChangeSetting = this._onDidChangeSetting.event;\n        this._onDidOpenSettings = new event_1.Emitter();\n        this.onDidOpenSettings = this._onDidOpenSettings.event;\n        this._onDidClickSettingLink = new event_1.Emitter();\n        this.onDidClickSettingLink = this._onDidClickSettingLink.event;\n        this._onDidFocusSetting = new event_1.Emitter();\n        this.onDidFocusSetting = this._onDidFocusSetting.event;\n    }\n    AbstractSettingRenderer.prototype.renderTemplate = function (container) {\n        throw new Error('to override');\n    };\n    AbstractSettingRenderer.prototype.renderElement = function (element, index, templateData) {\n        throw new Error('to override');\n    };\n    AbstractSettingRenderer.prototype.renderCommonTemplate = function (tree, _container, typeClass) {\n        DOM.addClass(_container, 'setting-item');\n        DOM.addClass(_container, 'setting-item-' + typeClass);\n        var container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n        var titleElement = DOM.append(container, $('.setting-item-title'));\n        var labelCategoryContainer = DOM.append(titleElement, $('.setting-item-cat-label-container'));\n        var categoryElement = DOM.append(labelCategoryContainer, $('span.setting-item-category'));\n        var labelElement = DOM.append(labelCategoryContainer, $('span.setting-item-label'));\n        var otherOverridesElement = DOM.append(titleElement, $('span.setting-item-overrides'));\n        var descriptionElement = DOM.append(container, $('.setting-item-description'));\n        var modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n        modifiedIndicatorElement.title = nls_1.localize('modified', \"Modified\");\n        var valueElement = DOM.append(container, $('.setting-item-value'));\n        var controlElement = DOM.append(valueElement, $('div.setting-item-control'));\n        var deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n        var toDispose = [];\n        var toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n        var toolbar = this.renderSettingToolbar(toolbarContainer);\n        var template = {\n            toDispose: toDispose,\n            containerElement: container,\n            categoryElement: categoryElement,\n            labelElement: labelElement,\n            descriptionElement: descriptionElement,\n            controlElement: controlElement,\n            deprecationWarningElement: deprecationWarningElement,\n            otherOverridesElement: otherOverridesElement,\n            toolbar: toolbar\n        };\n        // Prevent clicks from being handled by list\n        toDispose.push(DOM.addDisposableListener(controlElement, 'mousedown', function (e) { return e.stopPropagation(); }));\n        toDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, function (e) { return container.classList.add('mouseover'); }));\n        toDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, function (e) { return container.classList.remove('mouseover'); }));\n        return template;\n    };\n    AbstractSettingRenderer.prototype.addSettingElementFocusHandler = function (template) {\n        var _this = this;\n        var focusTracker = DOM.trackFocus(template.containerElement);\n        template.toDispose.push(focusTracker);\n        focusTracker.onDidBlur(function () {\n            if (template.containerElement.classList.contains('focused')) {\n                template.containerElement.classList.remove('focused');\n            }\n        });\n        focusTracker.onDidFocus(function () {\n            template.containerElement.classList.add('focused');\n            if (template.context) {\n                _this._onDidFocusSetting.fire(template.context);\n            }\n        });\n    };\n    AbstractSettingRenderer.prototype.renderSettingToolbar = function (container) {\n        var toggleMenuKeybinding = this._keybindingService.lookupKeybinding(preferences_1.SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU);\n        var toggleMenuTitle = nls_1.localize('settingsContextMenuTitle', \"More Actions... \");\n        if (toggleMenuKeybinding) {\n            toggleMenuTitle += \" (\" + (toggleMenuKeybinding && toggleMenuKeybinding.getLabel()) + \")\";\n        }\n        var toolbar = new toolbar_1.ToolBar(container, this._contextMenuService, {\n            toggleMenuTitle: toggleMenuTitle\n        });\n        toolbar.setActions([], this.settingActions)();\n        var button = container.querySelector('.toolbar-toggle-more');\n        if (button) {\n            button.tabIndex = -1;\n        }\n        return toolbar;\n    };\n    AbstractSettingRenderer.prototype.renderSettingElement = function (node, index, template) {\n        var _this = this;\n        var element = node.element;\n        template.context = element;\n        template.toolbar.context = element;\n        var setting = element.setting;\n        DOM.toggleClass(template.containerElement, 'is-configured', element.isConfigured);\n        DOM.toggleClass(template.containerElement, 'is-expanded', true);\n        template.containerElement.setAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR, element.setting.key);\n        template.containerElement.setAttribute(AbstractSettingRenderer.SETTING_ID_ATTR, element.id);\n        var titleTooltip = setting.key + (element.isConfigured ? ' - Modified' : '');\n        template.categoryElement.textContent = element.displayCategory && (element.displayCategory + ': ');\n        template.categoryElement.title = titleTooltip;\n        template.labelElement.textContent = element.displayLabel;\n        template.labelElement.title = titleTooltip;\n        template.descriptionElement.innerHTML = '';\n        if (element.setting.descriptionIsMarkdown) {\n            var renderedDescription = this.renderDescriptionMarkdown(element, element.description, template.toDispose);\n            template.descriptionElement.appendChild(renderedDescription);\n        }\n        else {\n            template.descriptionElement.innerText = element.description;\n        }\n        var baseId = (element.displayCategory + '_' + element.displayLabel).replace(/ /g, '_').toLowerCase();\n        template.descriptionElement.id = baseId + '_setting_description';\n        template.otherOverridesElement.innerHTML = '';\n        if (element.overriddenScopeList.length) {\n            var otherOverridesLabel = element.isConfigured ?\n                nls_1.localize('alsoConfiguredIn', \"Also modified in\") :\n                nls_1.localize('configuredIn', \"Modified in\");\n            DOM.append(template.otherOverridesElement, $('span', undefined, \"(\" + otherOverridesLabel + \": \"));\n            var _loop_1 = function (i) {\n                var view = DOM.append(template.otherOverridesElement, $('a.modified-scope', undefined, element.overriddenScopeList[i]));\n                if (i !== element.overriddenScopeList.length - 1) {\n                    DOM.append(template.otherOverridesElement, $('span', undefined, ', '));\n                }\n                else {\n                    DOM.append(template.otherOverridesElement, $('span', undefined, ')'));\n                }\n                DOM.addStandardDisposableListener(view, DOM.EventType.CLICK, function (e) {\n                    _this._onDidClickOverrideElement.fire({\n                        targetKey: element.setting.key,\n                        scope: element.overriddenScopeList[i]\n                    });\n                    e.preventDefault();\n                    e.stopPropagation();\n                });\n            };\n            for (var i = 0; i < element.overriddenScopeList.length; i++) {\n                _loop_1(i);\n            }\n        }\n        var onChange = function (value) { return _this._onDidChangeSetting.fire({ key: element.setting.key, value: value, type: template.context.valueType }); };\n        template.deprecationWarningElement.innerText = element.setting.deprecationMessage || '';\n        this.renderValue(element, template, onChange);\n    };\n    AbstractSettingRenderer.prototype.renderDescriptionMarkdown = function (element, text, disposeables) {\n        var _this = this;\n        // Rewrite `#editor.fontSize#` to link format\n        text = fixSettingLinks(text);\n        var renderedMarkdown = htmlContentRenderer_1.renderMarkdown({ value: text }, {\n            actionHandler: {\n                callback: function (content) {\n                    if (strings_1.startsWith(content, '#')) {\n                        var e = {\n                            source: element,\n                            targetKey: content.substr(1)\n                        };\n                        _this._onDidClickSettingLink.fire(e);\n                    }\n                    else {\n                        var uri = void 0;\n                        try {\n                            uri = uri_1.URI.parse(content);\n                        }\n                        catch (err) {\n                            // ignore\n                        }\n                        if (uri) {\n                            _this._openerService.open(uri).catch(errors_1.onUnexpectedError);\n                        }\n                    }\n                },\n                disposeables: disposeables\n            }\n        });\n        renderedMarkdown.classList.add('setting-item-description-markdown');\n        cleanRenderedMarkdown(renderedMarkdown);\n        return renderedMarkdown;\n    };\n    AbstractSettingRenderer.prototype.setElementAriaLabels = function (dataElement, templateId, template) {\n        // Create base Id for element references\n        var baseId = (dataElement.displayCategory + '_' + dataElement.displayLabel).replace(/ /g, '_').toLowerCase();\n        var modifiedText = template.otherOverridesElement.textContent ?\n            template.otherOverridesElement.textContent : (dataElement.isConfigured ? nls_1.localize('settings.Modified', ' Modified. ') : '');\n        var itemElement = null;\n        // Use '.' as reader pause\n        var label = dataElement.displayCategory + ' ' + dataElement.displayLabel + '. ';\n        // Setup and add ARIA attributes\n        // Create id and label for control/input element - parent is wrapper div\n        if (templateId === SETTINGS_TEXT_TEMPLATE_ID) {\n            if (itemElement = template.inputBox.inputElement) {\n                itemElement.setAttribute('role', 'textbox');\n                label += modifiedText;\n            }\n        }\n        else if (templateId === SETTINGS_NUMBER_TEMPLATE_ID) {\n            if (itemElement = template.inputBox.inputElement) {\n                itemElement.setAttribute('role', 'textbox');\n                label += ' number. ' + modifiedText;\n            }\n        }\n        else if (templateId === SETTINGS_BOOL_TEMPLATE_ID) {\n            if (itemElement = template.checkbox.domNode) {\n                itemElement.setAttribute('role', 'checkbox');\n                label += modifiedText;\n                // Add checkbox target to description clickable and able to toggle checkbox\n                template.descriptionElement.setAttribute('checkbox_label_target_id', baseId + '_setting_item');\n            }\n        }\n        else if (templateId === SETTINGS_ENUM_TEMPLATE_ID) {\n            if (itemElement = template.controlElement.firstElementChild) {\n                itemElement.setAttribute('role', 'combobox');\n                label += modifiedText;\n            }\n        }\n        else {\n            // Don't change attributes if we don't know what we areFunctions\n            return '';\n        }\n        // We don't have control element, return empty label\n        if (!itemElement) {\n            return '';\n        }\n        // Labels will not be read on descendent input elements of the parent treeitem\n        // unless defined as roles for input items\n        // voiceover does not seem to use labeledby correctly, set labels directly on input elements\n        itemElement.id = baseId + '_setting_item';\n        itemElement.setAttribute('aria-label', label);\n        itemElement.setAttribute('aria-describedby', baseId + '_setting_description settings_aria_more_actions_shortcut_label');\n        return label;\n    };\n    AbstractSettingRenderer.prototype.disposeTemplate = function (template) {\n        lifecycle_1.dispose(template.toDispose);\n    };\n    AbstractSettingRenderer.CONTROL_CLASS = 'setting-control-focus-target';\n    AbstractSettingRenderer.CONTROL_SELECTOR = '.' + AbstractSettingRenderer.CONTROL_CLASS;\n    AbstractSettingRenderer.CONTENTS_CLASS = 'setting-item-contents';\n    AbstractSettingRenderer.CONTENTS_SELECTOR = '.' + AbstractSettingRenderer.CONTENTS_CLASS;\n    AbstractSettingRenderer.SETTING_KEY_ATTR = 'data-key';\n    AbstractSettingRenderer.SETTING_ID_ATTR = 'data-id';\n    AbstractSettingRenderer = tslib_1.__decorate([\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, contextView_1.IContextViewService),\n        tslib_1.__param(3, opener_1.IOpenerService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, commands_1.ICommandService),\n        tslib_1.__param(6, contextView_1.IContextMenuService),\n        tslib_1.__param(7, keybinding_1.IKeybindingService)\n    ], AbstractSettingRenderer);\n    return AbstractSettingRenderer;\n}());\nexports.AbstractSettingRenderer = AbstractSettingRenderer;\nvar SettingGroupRenderer = /** @class */ (function () {\n    function SettingGroupRenderer() {\n        this.templateId = SETTINGS_ELEMENT_TEMPLATE_ID;\n    }\n    SettingGroupRenderer.prototype.renderTemplate = function (container) {\n        DOM.addClass(container, 'group-title');\n        var toDispose = [];\n        var template = {\n            parent: container,\n            toDispose: toDispose\n        };\n        return template;\n    };\n    SettingGroupRenderer.prototype.renderElement = function (element, index, templateData) {\n        templateData.parent.innerHTML = '';\n        var labelElement = DOM.append(templateData.parent, $('div.settings-group-title-label'));\n        labelElement.classList.add(\"settings-group-level-\" + element.element.level);\n        labelElement.textContent = element.element.label;\n        if (element.element.isFirstGroup) {\n            labelElement.classList.add('settings-group-first');\n        }\n    };\n    SettingGroupRenderer.prototype.disposeTemplate = function (templateData) {\n    };\n    return SettingGroupRenderer;\n}());\nexports.SettingGroupRenderer = SettingGroupRenderer;\nvar SettingNewExtensionsRenderer = /** @class */ (function () {\n    function SettingNewExtensionsRenderer(_themeService, _commandService) {\n        this._themeService = _themeService;\n        this._commandService = _commandService;\n        this.templateId = SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n    }\n    SettingNewExtensionsRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var toDispose = [];\n        container.classList.add('setting-item-new-extensions');\n        var button = new button_1.Button(container, { title: true, buttonBackground: undefined, buttonHoverBackground: undefined });\n        toDispose.push(button);\n        toDispose.push(button.onDidClick(function () {\n            if (template.context) {\n                _this._commandService.executeCommand('workbench.extensions.action.showExtensionsWithIds', template.context.extensionIds);\n            }\n        }));\n        button.label = nls_1.localize('newExtensionsButtonLabel', \"Show matching extensions\");\n        button.element.classList.add('settings-new-extensions-button');\n        toDispose.push(styler_1.attachButtonStyler(button, this._themeService));\n        var template = {\n            button: button,\n            toDispose: toDispose\n        };\n        return template;\n    };\n    SettingNewExtensionsRenderer.prototype.renderElement = function (element, index, templateData) {\n        templateData.context = element.element;\n    };\n    SettingNewExtensionsRenderer.prototype.disposeTemplate = function (template) {\n        lifecycle_1.dispose(template.toDispose);\n    };\n    SettingNewExtensionsRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, themeService_1.IThemeService),\n        tslib_1.__param(1, commands_1.ICommandService)\n    ], SettingNewExtensionsRenderer);\n    return SettingNewExtensionsRenderer;\n}());\nexports.SettingNewExtensionsRenderer = SettingNewExtensionsRenderer;\nvar SettingComplexRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingComplexRenderer, _super);\n    function SettingComplexRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_COMPLEX_TEMPLATE_ID;\n        return _this;\n    }\n    SettingComplexRenderer.prototype.renderTemplate = function (container) {\n        var common = this.renderCommonTemplate(null, container, 'complex');\n        var openSettingsButton = new button_1.Button(common.controlElement, { title: true, buttonBackground: undefined, buttonHoverBackground: undefined });\n        common.toDispose.push(openSettingsButton);\n        common.toDispose.push(openSettingsButton.onDidClick(function () { return template.onChange(); }));\n        openSettingsButton.label = nls_1.localize('editInSettingsJson', \"Edit in settings.json\");\n        openSettingsButton.element.classList.add('edit-in-settings-button');\n        common.toDispose.push(styler_1.attachButtonStyler(openSettingsButton, this._themeService, {\n            buttonBackground: color_1.Color.transparent.toString(),\n            buttonHoverBackground: color_1.Color.transparent.toString(),\n            buttonForeground: 'foreground'\n        }));\n        var template = tslib_1.__assign({}, common, { button: openSettingsButton });\n        this.addSettingElementFocusHandler(template);\n        return template;\n    };\n    SettingComplexRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingComplexRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        var _this = this;\n        template.onChange = function () { return _this._onDidOpenSettings.fire(dataElement.setting.key); };\n    };\n    return SettingComplexRenderer;\n}(AbstractSettingRenderer));\nexports.SettingComplexRenderer = SettingComplexRenderer;\nvar SettingExcludeRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingExcludeRenderer, _super);\n    function SettingExcludeRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_EXCLUDE_TEMPLATE_ID;\n        return _this;\n    }\n    SettingExcludeRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var common = this.renderCommonTemplate(null, container, 'exclude');\n        var excludeWidget = this._instantiationService.createInstance(settingsWidgets_1.ExcludeSettingWidget, common.controlElement);\n        excludeWidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n        common.toDispose.push(excludeWidget);\n        var template = tslib_1.__assign({}, common, { excludeWidget: excludeWidget });\n        this.addSettingElementFocusHandler(template);\n        common.toDispose.push(excludeWidget.onDidChangeExclude(function (e) { return _this.onDidChangeExclude(template, e); }));\n        return template;\n    };\n    SettingExcludeRenderer.prototype.onDidChangeExclude = function (template, e) {\n        if (template.context) {\n            var newValue = tslib_1.__assign({}, template.context.scopeValue);\n            // first delete the existing entry, if present\n            if (e.originalPattern) {\n                if (e.originalPattern in template.context.defaultValue) {\n                    // delete a default by overriding it\n                    newValue[e.originalPattern] = false;\n                }\n                else {\n                    delete newValue[e.originalPattern];\n                }\n            }\n            // then add the new or updated entry, if present\n            if (e.pattern) {\n                if (e.pattern in template.context.defaultValue && !e.sibling) {\n                    // add a default by deleting its override\n                    delete newValue[e.pattern];\n                }\n                else {\n                    newValue[e.pattern] = e.sibling ? { when: e.sibling } : true;\n                }\n            }\n            var sortKeys = function (obj) {\n                var keyArray = Object.keys(obj)\n                    .map(function (key) { return ({ key: key, val: obj[key] }); })\n                    .sort(function (a, b) { return a.key.localeCompare(b.key); });\n                var retVal = {};\n                keyArray.forEach(function (pair) {\n                    retVal[pair.key] = pair.val;\n                });\n                return retVal;\n            };\n            this._onDidChangeSetting.fire({\n                key: template.context.setting.key,\n                value: Object.keys(newValue).length === 0 ? undefined : sortKeys(newValue),\n                type: template.context.valueType\n            });\n        }\n    };\n    SettingExcludeRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingExcludeRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        var value = getExcludeDisplayValue(dataElement);\n        template.excludeWidget.setValue(value);\n        template.context = dataElement;\n    };\n    return SettingExcludeRenderer;\n}(AbstractSettingRenderer));\nexports.SettingExcludeRenderer = SettingExcludeRenderer;\nvar SettingTextRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingTextRenderer, _super);\n    function SettingTextRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_TEXT_TEMPLATE_ID;\n        return _this;\n    }\n    SettingTextRenderer.prototype.renderTemplate = function (_container) {\n        var common = this.renderCommonTemplate(null, _container, 'text');\n        var validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n        var inputBox = new inputBox_1.InputBox(common.controlElement, this._contextViewService);\n        common.toDispose.push(inputBox);\n        common.toDispose.push(styler_1.attachInputBoxStyler(inputBox, this._themeService, {\n            inputBackground: settingsWidgets_1.settingsTextInputBackground,\n            inputForeground: settingsWidgets_1.settingsTextInputForeground,\n            inputBorder: settingsWidgets_1.settingsTextInputBorder\n        }));\n        common.toDispose.push(inputBox.onDidChange(function (e) {\n            if (template.onChange) {\n                template.onChange(e);\n            }\n        }));\n        common.toDispose.push(inputBox);\n        inputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n        var template = tslib_1.__assign({}, common, { inputBox: inputBox,\n            validationErrorMessageElement: validationErrorMessageElement });\n        this.addSettingElementFocusHandler(template);\n        return template;\n    };\n    SettingTextRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingTextRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        var label = this.setElementAriaLabels(dataElement, SETTINGS_TEXT_TEMPLATE_ID, template);\n        template.onChange = undefined;\n        template.inputBox.value = dataElement.value;\n        template.onChange = function (value) { renderValidations(dataElement, template, false, label); onChange(value); };\n        renderValidations(dataElement, template, true, label);\n    };\n    return SettingTextRenderer;\n}(AbstractSettingRenderer));\nexports.SettingTextRenderer = SettingTextRenderer;\nvar SettingEnumRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingEnumRenderer, _super);\n    function SettingEnumRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_ENUM_TEMPLATE_ID;\n        return _this;\n    }\n    SettingEnumRenderer.prototype.renderTemplate = function (container) {\n        var common = this.renderCommonTemplate(null, container, 'enum');\n        var selectBox = new selectBox_1.SelectBox([], 0, this._contextViewService, undefined, { useCustomDrawn: true });\n        common.toDispose.push(selectBox);\n        common.toDispose.push(styler_1.attachSelectBoxStyler(selectBox, this._themeService, {\n            selectBackground: settingsWidgets_1.settingsSelectBackground,\n            selectForeground: settingsWidgets_1.settingsSelectForeground,\n            selectBorder: settingsWidgets_1.settingsSelectBorder,\n            selectListBorder: settingsWidgets_1.settingsSelectListBorder\n        }));\n        selectBox.render(common.controlElement);\n        var selectElement = common.controlElement.querySelector('select');\n        if (selectElement) {\n            selectElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n        }\n        common.toDispose.push(selectBox.onDidSelect(function (e) {\n            if (template.onChange) {\n                template.onChange(e.index);\n            }\n        }));\n        var enumDescriptionElement = common.containerElement.insertBefore($('.setting-item-enumDescription'), common.descriptionElement.nextSibling);\n        var template = tslib_1.__assign({}, common, { selectBox: selectBox,\n            enumDescriptionElement: enumDescriptionElement });\n        this.addSettingElementFocusHandler(template);\n        return template;\n    };\n    SettingEnumRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingEnumRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        var enumDescriptions = dataElement.setting.enumDescriptions;\n        var enumDescriptionsAreMarkdown = dataElement.setting.enumDescriptionsAreMarkdown;\n        var displayOptions = dataElement.setting.enum\n            .map(String)\n            .map(escapeInvisibleChars)\n            .map(function (data, index) { return ({\n            text: data,\n            description: (enumDescriptions && enumDescriptions[index] && (enumDescriptionsAreMarkdown ? fixSettingLinks(enumDescriptions[index], false) : enumDescriptions[index])),\n            descriptionIsMarkdown: enumDescriptionsAreMarkdown,\n            decoratorRight: (data === dataElement.defaultValue ? nls_1.localize('settings.Default', \"{0}\", 'default') : '')\n        }); });\n        template.selectBox.setOptions(displayOptions);\n        var label = this.setElementAriaLabels(dataElement, SETTINGS_ENUM_TEMPLATE_ID, template);\n        template.selectBox.setAriaLabel(label);\n        var idx = dataElement.setting.enum.indexOf(dataElement.value);\n        if (idx === -1) {\n            idx = dataElement.setting.enum.indexOf(dataElement.defaultValue);\n            if (idx === -1) {\n                idx = 0;\n            }\n        }\n        template.onChange = undefined;\n        template.selectBox.select(idx);\n        template.onChange = function (idx) { return onChange(dataElement.setting.enum[idx]); };\n        template.enumDescriptionElement.innerHTML = '';\n    };\n    return SettingEnumRenderer;\n}(AbstractSettingRenderer));\nexports.SettingEnumRenderer = SettingEnumRenderer;\nvar SettingNumberRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingNumberRenderer, _super);\n    function SettingNumberRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_NUMBER_TEMPLATE_ID;\n        return _this;\n    }\n    SettingNumberRenderer.prototype.renderTemplate = function (_container) {\n        var common = _super.prototype.renderCommonTemplate.call(this, null, _container, 'number');\n        var validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n        var inputBox = new inputBox_1.InputBox(common.controlElement, this._contextViewService, { type: 'number' });\n        common.toDispose.push(inputBox);\n        common.toDispose.push(styler_1.attachInputBoxStyler(inputBox, this._themeService, {\n            inputBackground: settingsWidgets_1.settingsNumberInputBackground,\n            inputForeground: settingsWidgets_1.settingsNumberInputForeground,\n            inputBorder: settingsWidgets_1.settingsNumberInputBorder\n        }));\n        common.toDispose.push(inputBox.onDidChange(function (e) {\n            if (template.onChange) {\n                template.onChange(e);\n            }\n        }));\n        common.toDispose.push(inputBox);\n        inputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n        var template = tslib_1.__assign({}, common, { inputBox: inputBox,\n            validationErrorMessageElement: validationErrorMessageElement });\n        this.addSettingElementFocusHandler(template);\n        return template;\n    };\n    SettingNumberRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingNumberRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        var numParseFn = (dataElement.valueType === 'integer' || dataElement.valueType === 'nullable-integer')\n            ? parseInt : parseFloat;\n        var nullNumParseFn = (dataElement.valueType === 'nullable-integer' || dataElement.valueType === 'nullable-number')\n            ? (function (v) { return v === '' ? null : numParseFn(v); }) : numParseFn;\n        var label = this.setElementAriaLabels(dataElement, SETTINGS_NUMBER_TEMPLATE_ID, template);\n        template.onChange = undefined;\n        template.inputBox.value = dataElement.value;\n        template.onChange = function (value) {\n            renderValidations(dataElement, template, false, label);\n            onChange(nullNumParseFn(value));\n        };\n        renderValidations(dataElement, template, true, label);\n    };\n    return SettingNumberRenderer;\n}(AbstractSettingRenderer));\nexports.SettingNumberRenderer = SettingNumberRenderer;\nvar SettingBoolRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingBoolRenderer, _super);\n    function SettingBoolRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateId = SETTINGS_BOOL_TEMPLATE_ID;\n        return _this;\n    }\n    SettingBoolRenderer.prototype.renderTemplate = function (_container) {\n        DOM.addClass(_container, 'setting-item');\n        DOM.addClass(_container, 'setting-item-bool');\n        var container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n        var titleElement = DOM.append(container, $('.setting-item-title'));\n        var categoryElement = DOM.append(titleElement, $('span.setting-item-category'));\n        var labelElement = DOM.append(titleElement, $('span.setting-item-label'));\n        var otherOverridesElement = DOM.append(titleElement, $('span.setting-item-overrides'));\n        var descriptionAndValueElement = DOM.append(container, $('.setting-item-value-description'));\n        var controlElement = DOM.append(descriptionAndValueElement, $('.setting-item-bool-control'));\n        var descriptionElement = DOM.append(descriptionAndValueElement, $('.setting-item-description'));\n        var modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n        modifiedIndicatorElement.title = nls_1.localize('modified', \"Modified\");\n        var deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n        var toDispose = [];\n        var checkbox = new checkbox_1.Checkbox({ actionClassName: 'setting-value-checkbox', isChecked: true, title: '', inputActiveOptionBorder: undefined });\n        controlElement.appendChild(checkbox.domNode);\n        toDispose.push(checkbox);\n        toDispose.push(checkbox.onChange(function () {\n            if (template.onChange) {\n                template.onChange(checkbox.checked);\n            }\n        }));\n        // Need to listen for mouse clicks on description and toggle checkbox - use target ID for safety\n        // Also have to ignore embedded links - too buried to stop propagation\n        toDispose.push(DOM.addDisposableListener(descriptionElement, DOM.EventType.MOUSE_DOWN, function (e) {\n            var targetElement = e.target;\n            var targetId = descriptionElement.getAttribute('checkbox_label_target_id');\n            // Make sure we are not a link and the target ID matches\n            // Toggle target checkbox\n            if (targetElement.tagName.toLowerCase() !== 'a' && targetId === template.checkbox.domNode.id) {\n                template.checkbox.checked = template.checkbox.checked ? false : true;\n                template.onChange(checkbox.checked);\n            }\n            DOM.EventHelper.stop(e);\n        }));\n        checkbox.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n        var toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n        var toolbar = this.renderSettingToolbar(toolbarContainer);\n        toDispose.push(toolbar);\n        var template = {\n            toDispose: toDispose,\n            containerElement: container,\n            categoryElement: categoryElement,\n            labelElement: labelElement,\n            controlElement: controlElement,\n            checkbox: checkbox,\n            descriptionElement: descriptionElement,\n            deprecationWarningElement: deprecationWarningElement,\n            otherOverridesElement: otherOverridesElement,\n            toolbar: toolbar\n        };\n        this.addSettingElementFocusHandler(template);\n        // Prevent clicks from being handled by list\n        toDispose.push(DOM.addDisposableListener(controlElement, 'mousedown', function (e) { return e.stopPropagation(); }));\n        toDispose.push(DOM.addStandardDisposableListener(controlElement, 'keydown', function (e) {\n            if (e.keyCode === keyCodes_1.KeyCode.Escape) {\n                e.browserEvent.stopPropagation();\n            }\n        }));\n        toDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, function (e) { return container.classList.add('mouseover'); }));\n        toDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, function (e) { return container.classList.remove('mouseover'); }));\n        return template;\n    };\n    SettingBoolRenderer.prototype.renderElement = function (element, index, templateData) {\n        _super.prototype.renderSettingElement.call(this, element, index, templateData);\n    };\n    SettingBoolRenderer.prototype.renderValue = function (dataElement, template, onChange) {\n        template.onChange = undefined;\n        template.checkbox.checked = dataElement.value;\n        template.onChange = onChange;\n        // Setup and add ARIA attributes\n        this.setElementAriaLabels(dataElement, SETTINGS_BOOL_TEMPLATE_ID, template);\n    };\n    return SettingBoolRenderer;\n}(AbstractSettingRenderer));\nexports.SettingBoolRenderer = SettingBoolRenderer;\nvar SettingTreeRenderers = /** @class */ (function () {\n    function SettingTreeRenderers(_instantiationService, _contextMenuService, _contextViewService) {\n        var _this = this;\n        this._instantiationService = _instantiationService;\n        this._contextMenuService = _contextMenuService;\n        this._contextViewService = _contextViewService;\n        this._onDidChangeSetting = new event_1.Emitter();\n        this.settingActions = [\n            new actions_1.Action('settings.resetSetting', nls_1.localize('resetSettingLabel', \"Reset Setting\"), undefined, undefined, function (context) {\n                if (context) {\n                    _this._onDidChangeSetting.fire({ key: context.setting.key, value: undefined, type: context.setting.type });\n                }\n                return Promise.resolve(null);\n            }),\n            new actionbar_1.Separator(),\n            this._instantiationService.createInstance(CopySettingIdAction),\n            this._instantiationService.createInstance(CopySettingAsJSONAction),\n        ];\n        var settingRenderers = [\n            this._instantiationService.createInstance(SettingBoolRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingNumberRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingBoolRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingComplexRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingTextRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingExcludeRenderer, this.settingActions),\n            this._instantiationService.createInstance(SettingEnumRenderer, this.settingActions),\n        ];\n        this.onDidClickOverrideElement = event_1.Event.any.apply(event_1.Event, settingRenderers.map(function (r) { return r.onDidClickOverrideElement; }));\n        this.onDidChangeSetting = event_1.Event.any.apply(event_1.Event, settingRenderers.map(function (r) { return r.onDidChangeSetting; }).concat([this._onDidChangeSetting.event]));\n        this.onDidOpenSettings = event_1.Event.any.apply(event_1.Event, settingRenderers.map(function (r) { return r.onDidOpenSettings; }));\n        this.onDidClickSettingLink = event_1.Event.any.apply(event_1.Event, settingRenderers.map(function (r) { return r.onDidClickSettingLink; }));\n        this.onDidFocusSetting = event_1.Event.any.apply(event_1.Event, settingRenderers.map(function (r) { return r.onDidFocusSetting; }));\n        this.allRenderers = settingRenderers.concat([\n            this._instantiationService.createInstance(SettingGroupRenderer),\n            this._instantiationService.createInstance(SettingNewExtensionsRenderer),\n        ]);\n    }\n    SettingTreeRenderers.prototype.cancelSuggesters = function () {\n        this._contextViewService.hideContextView();\n    };\n    SettingTreeRenderers.prototype.showContextMenu = function (element, settingDOMElement) {\n        var _this = this;\n        var toolbarElement = settingDOMElement.querySelector('.toolbar-toggle-more');\n        if (toolbarElement) {\n            this._contextMenuService.showContextMenu({\n                getActions: function () { return _this.settingActions; },\n                getAnchor: function () { return toolbarElement; },\n                getActionsContext: function () { return element; }\n            });\n        }\n    };\n    SettingTreeRenderers.prototype.getSettingDOMElementForDOMElement = function (domElement) {\n        var parent = DOM.findParentWithClass(domElement, AbstractSettingRenderer.CONTENTS_CLASS);\n        if (parent) {\n            return parent;\n        }\n        return null;\n    };\n    SettingTreeRenderers.prototype.getDOMElementsForSettingKey = function (treeContainer, key) {\n        return treeContainer.querySelectorAll(\"[\" + AbstractSettingRenderer.SETTING_KEY_ATTR + \"=\\\"\" + key + \"\\\"]\");\n    };\n    SettingTreeRenderers.prototype.getKeyForDOMElementInSetting = function (element) {\n        var settingElement = this.getSettingDOMElementForDOMElement(element);\n        return settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR);\n    };\n    SettingTreeRenderers.prototype.getIdForDOMElementInSetting = function (element) {\n        var settingElement = this.getSettingDOMElementForDOMElement(element);\n        return settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_ID_ATTR);\n    };\n    SettingTreeRenderers = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService),\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, contextView_1.IContextViewService)\n    ], SettingTreeRenderers);\n    return SettingTreeRenderers;\n}());\nexports.SettingTreeRenderers = SettingTreeRenderers;\nfunction renderValidations(dataElement, template, calledOnStartup, originalAriaLabel) {\n    if (dataElement.setting.validator) {\n        var errMsg = dataElement.setting.validator(template.inputBox.value);\n        if (errMsg) {\n            DOM.addClass(template.containerElement, 'invalid-input');\n            template.validationErrorMessageElement.innerText = errMsg;\n            var validationError = nls_1.localize('validationError', \"Validation Error.\");\n            template.inputBox.inputElement.parentElement.setAttribute('aria-label', [originalAriaLabel, validationError, errMsg].join(' '));\n            if (!calledOnStartup) {\n                aria_1.alert(validationError + ' ' + errMsg);\n            }\n            return;\n        }\n        else {\n            template.inputBox.inputElement.parentElement.setAttribute('aria-label', originalAriaLabel);\n        }\n    }\n    DOM.removeClass(template.containerElement, 'invalid-input');\n}\nfunction cleanRenderedMarkdown(element) {\n    for (var i = 0; i < element.childNodes.length; i++) {\n        var child = element.childNodes.item(i);\n        var tagName = child.tagName && child.tagName.toLowerCase();\n        if (tagName === 'img') {\n            element.removeChild(child);\n        }\n        else {\n            cleanRenderedMarkdown(child);\n        }\n    }\n}\nfunction fixSettingLinks(text, linkify) {\n    if (linkify === void 0) { linkify = true; }\n    return text.replace(/`#([^#]*)#`/g, function (match, settingKey) {\n        var targetDisplayFormat = settingsTreeModels_1.settingKeyToDisplayFormat(settingKey);\n        var targetName = targetDisplayFormat.category + \": \" + targetDisplayFormat.label;\n        return linkify ?\n            \"[\" + targetName + \"](#\" + settingKey + \")\" :\n            \"\\\"\" + targetName + \"\\\"\";\n    });\n}\nfunction escapeInvisibleChars(enumValue) {\n    return enumValue && enumValue\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r');\n}\nvar SettingsTreeFilter = /** @class */ (function () {\n    function SettingsTreeFilter(viewState) {\n        this.viewState = viewState;\n    }\n    SettingsTreeFilter.prototype.filter = function (element, parentVisibility) {\n        // Filter during search\n        if (this.viewState.filterToCategory && element instanceof settingsTreeModels_1.SettingsTreeSettingElement) {\n            if (!this.settingContainedInGroup(element.setting, this.viewState.filterToCategory)) {\n                return false;\n            }\n        }\n        // Non-user scope selected\n        if (element instanceof settingsTreeModels_1.SettingsTreeSettingElement && this.viewState.settingsTarget !== configuration_1.ConfigurationTarget.USER) {\n            if (!element.matchesScope(this.viewState.settingsTarget)) {\n                return false;\n            }\n        }\n        // @modified or tag\n        if (element instanceof settingsTreeModels_1.SettingsTreeSettingElement && this.viewState.tagFilters) {\n            if (!element.matchesAllTags(this.viewState.tagFilters)) {\n                return false;\n            }\n        }\n        // Group with no visible children\n        if (element instanceof settingsTreeModels_1.SettingsTreeGroupElement) {\n            if (typeof element.count === 'number') {\n                return element.count > 0;\n            }\n            return tree_1.TreeVisibility.Recurse;\n        }\n        // Filtered \"new extensions\" button\n        if (element instanceof settingsTreeModels_1.SettingsTreeNewExtensionsElement) {\n            if ((this.viewState.tagFilters && this.viewState.tagFilters.size) || this.viewState.filterToCategory) {\n                return false;\n            }\n        }\n        return true;\n    };\n    SettingsTreeFilter.prototype.settingContainedInGroup = function (setting, group) {\n        var _this = this;\n        return group.children.some(function (child) {\n            if (child instanceof settingsTreeModels_1.SettingsTreeGroupElement) {\n                return _this.settingContainedInGroup(setting, child);\n            }\n            else if (child instanceof settingsTreeModels_1.SettingsTreeSettingElement) {\n                return child.setting.key === setting.key;\n            }\n            else {\n                return false;\n            }\n        });\n    };\n    return SettingsTreeFilter;\n}());\nexports.SettingsTreeFilter = SettingsTreeFilter;\nvar SettingsTreeDelegate = /** @class */ (function () {\n    function SettingsTreeDelegate() {\n        this.heightCache = new WeakMap();\n    }\n    SettingsTreeDelegate.prototype.getHeight = function (element) {\n        var cachedHeight = this.heightCache.get(element);\n        if (typeof cachedHeight === 'number') {\n            return cachedHeight;\n        }\n        if (element instanceof settingsTreeModels_1.SettingsTreeGroupElement) {\n            if (element.isFirstGroup) {\n                return 31;\n            }\n            return 40 + (7 * element.level);\n        }\n        return element instanceof settingsTreeModels_1.SettingsTreeSettingElement && element.valueType === preferences_2.SettingValueType.Boolean ?\n            78 :\n            104;\n    };\n    SettingsTreeDelegate.prototype.getTemplateId = function (element) {\n        if (element instanceof settingsTreeModels_1.SettingsTreeGroupElement) {\n            return SETTINGS_ELEMENT_TEMPLATE_ID;\n        }\n        if (element instanceof settingsTreeModels_1.SettingsTreeSettingElement) {\n            if (element.valueType === 'boolean') {\n                return SETTINGS_BOOL_TEMPLATE_ID;\n            }\n            if (element.valueType === 'integer' || element.valueType === 'number' || element.valueType === 'nullable-integer' || element.valueType === 'nullable-number') {\n                return SETTINGS_NUMBER_TEMPLATE_ID;\n            }\n            if (element.valueType === 'string') {\n                return SETTINGS_TEXT_TEMPLATE_ID;\n            }\n            if (element.valueType === 'enum') {\n                return SETTINGS_ENUM_TEMPLATE_ID;\n            }\n            if (element.valueType === 'exclude') {\n                return SETTINGS_EXCLUDE_TEMPLATE_ID;\n            }\n            return SETTINGS_COMPLEX_TEMPLATE_ID;\n        }\n        if (element instanceof settingsTreeModels_1.SettingsTreeNewExtensionsElement) {\n            return SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n        }\n        throw new Error('unknown element type: ' + element);\n    };\n    SettingsTreeDelegate.prototype.hasDynamicHeight = function (element) {\n        return !(element instanceof settingsTreeModels_1.SettingsTreeGroupElement);\n    };\n    SettingsTreeDelegate.prototype.setDynamicHeight = function (element, height) {\n        this.heightCache.set(element, height);\n    };\n    return SettingsTreeDelegate;\n}());\nvar NonCollapsibleObjectTreeModel = /** @class */ (function (_super) {\n    tslib_1.__extends(NonCollapsibleObjectTreeModel, _super);\n    function NonCollapsibleObjectTreeModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NonCollapsibleObjectTreeModel.prototype.isCollapsible = function (element) {\n        return false;\n    };\n    NonCollapsibleObjectTreeModel.prototype.setCollapsed = function (element, collapsed, recursive) {\n        return false;\n    };\n    return NonCollapsibleObjectTreeModel;\n}(objectTreeModel_1.ObjectTreeModel));\nvar SettingsTree = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingsTree, _super);\n    function SettingsTree(container, viewState, renderers, themeService) {\n        var _this = this;\n        var treeClass = 'settings-editor-tree';\n        _this = _super.call(this, container, new SettingsTreeDelegate(), renderers, {\n            supportDynamicHeights: true,\n            ariaRole: list_1.ListAriaRootRole.FORM,\n            ariaLabel: nls_1.localize('treeAriaLabel', \"Settings\"),\n            identityProvider: {\n                getId: function (e) {\n                    return e.id;\n                }\n            },\n            styleController: new listWidget_1.DefaultStyleController(DOM.createStyleSheet(container), treeClass),\n            filter: new SettingsTreeFilter(viewState)\n        }) || this;\n        _this.disposables = [];\n        _this.disposables.push(themeService_1.registerThemingParticipant(function (theme, collector) {\n            var activeBorderColor = theme.getColor(colorRegistry_1.focusBorder);\n            if (activeBorderColor) {\n                // TODO@rob - why isn't this applied when added to the stylesheet from tocTree.ts? Seems like a chromium glitch.\n                collector.addRule(\".settings-editor > .settings-body > .settings-toc-container .monaco-list:focus .monaco-list-row.focused {outline: solid 1px \" + activeBorderColor + \"; outline-offset: -1px;  }\");\n            }\n            var foregroundColor = theme.getColor(colorRegistry_1.foreground);\n            if (foregroundColor) {\n                // Links appear inside other elements in markdown. CSS opacity acts like a mask. So we have to dynamically compute the description color to avoid\n                // applying an opacity to the link color.\n                var fgWithOpacity = new color_1.Color(new color_1.RGBA(foregroundColor.rgba.r, foregroundColor.rgba.g, foregroundColor.rgba.b, 0.9));\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description { color: \" + fgWithOpacity + \"; }\");\n            }\n            var errorColor = theme.getColor(colorRegistry_1.errorForeground);\n            if (errorColor) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-deprecation-message { color: \" + errorColor + \"; }\");\n            }\n            var invalidInputBackground = theme.getColor(colorRegistry_1.inputValidationErrorBackground);\n            if (invalidInputBackground) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { background-color: \" + invalidInputBackground + \"; }\");\n            }\n            var invalidInputForeground = theme.getColor(colorRegistry_1.inputValidationErrorForeground);\n            if (invalidInputForeground) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { color: \" + invalidInputForeground + \"; }\");\n            }\n            var invalidInputBorder = theme.getColor(colorRegistry_1.inputValidationErrorBorder);\n            if (invalidInputBorder) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { border-style:solid; border-width: 1px; border-color: \" + invalidInputBorder + \"; }\");\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.invalid-input .setting-item-control .monaco-inputbox.idle { outline-width: 0; border-style:solid; border-width: 1px; border-color: \" + invalidInputBorder + \"; }\");\n            }\n            var headerForegroundColor = theme.getColor(settingsWidgets_1.settingsHeaderForeground);\n            if (headerForegroundColor) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .settings-group-title-label { color: \" + headerForegroundColor + \"; }\");\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-label { color: \" + headerForegroundColor + \"; }\");\n            }\n            var focusBorderColor = theme.getColor(colorRegistry_1.focusBorder);\n            if (focusBorderColor) {\n                collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:focus { outline-color: \" + focusBorderColor + \" }\");\n            }\n        }));\n        _this.getHTMLElement().classList.add(treeClass);\n        _this.disposables.push(styler_1.attachStyler(themeService, {\n            listActiveSelectionBackground: colorRegistry_1.editorBackground,\n            listActiveSelectionForeground: colorRegistry_1.foreground,\n            listFocusAndSelectionBackground: colorRegistry_1.editorBackground,\n            listFocusAndSelectionForeground: colorRegistry_1.foreground,\n            listFocusBackground: colorRegistry_1.editorBackground,\n            listFocusForeground: colorRegistry_1.foreground,\n            listHoverForeground: colorRegistry_1.foreground,\n            listHoverBackground: colorRegistry_1.editorBackground,\n            listHoverOutline: colorRegistry_1.editorBackground,\n            listFocusOutline: colorRegistry_1.editorBackground,\n            listInactiveSelectionBackground: colorRegistry_1.editorBackground,\n            listInactiveSelectionForeground: colorRegistry_1.foreground,\n            listInactiveFocusBackground: colorRegistry_1.editorBackground,\n            listInactiveFocusOutline: colorRegistry_1.editorBackground\n        }, function (colors) {\n            _this.style(colors);\n        }));\n        return _this;\n    }\n    SettingsTree.prototype.createModel = function (view, options) {\n        return new NonCollapsibleObjectTreeModel(view, options);\n    };\n    SettingsTree = tslib_1.__decorate([\n        tslib_1.__param(3, themeService_1.IThemeService)\n    ], SettingsTree);\n    return SettingsTree;\n}(objectTree_1.ObjectTree));\nexports.SettingsTree = SettingsTree;\nvar CopySettingIdAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CopySettingIdAction, _super);\n    function CopySettingIdAction(clipboardService) {\n        var _this = _super.call(this, CopySettingIdAction.ID, CopySettingIdAction.LABEL) || this;\n        _this.clipboardService = clipboardService;\n        return _this;\n    }\n    CopySettingIdAction.prototype.run = function (context) {\n        if (context) {\n            this.clipboardService.writeText(context.setting.key);\n        }\n        return Promise.resolve(undefined);\n    };\n    CopySettingIdAction.ID = 'settings.copySettingId';\n    CopySettingIdAction.LABEL = nls_1.localize('copySettingIdLabel', \"Copy Setting ID\");\n    CopySettingIdAction = tslib_1.__decorate([\n        tslib_1.__param(0, clipboardService_1.IClipboardService)\n    ], CopySettingIdAction);\n    return CopySettingIdAction;\n}(actions_1.Action));\nvar CopySettingAsJSONAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CopySettingAsJSONAction, _super);\n    function CopySettingAsJSONAction(clipboardService) {\n        var _this = _super.call(this, CopySettingAsJSONAction.ID, CopySettingAsJSONAction.LABEL) || this;\n        _this.clipboardService = clipboardService;\n        return _this;\n    }\n    CopySettingAsJSONAction.prototype.run = function (context) {\n        if (context) {\n            var jsonResult = \"\\\"\" + context.setting.key + \"\\\": \" + JSON.stringify(context.value, undefined, '  ');\n            this.clipboardService.writeText(jsonResult);\n        }\n        return Promise.resolve(undefined);\n    };\n    CopySettingAsJSONAction.ID = 'settings.copySettingAsJSON';\n    CopySettingAsJSONAction.LABEL = nls_1.localize('copySettingAsJSONLabel', \"Copy Setting as JSON\");\n    CopySettingAsJSONAction = tslib_1.__decorate([\n        tslib_1.__param(0, clipboardService_1.IClipboardService)\n    ], CopySettingAsJSONAction);\n    return CopySettingAsJSONAction;\n}(actions_1.Action));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsTree.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsTree.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { renderMarkdown } from 'vs/base/browser/htmlContentRenderer';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { alert as ariaAlert } from 'vs/base/browser/ui/aria/aria';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { Checkbox } from 'vs/base/browser/ui/checkbox/checkbox';\nimport { InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IListVirtualDelegate, ListAriaRootRole } from 'vs/base/browser/ui/list/list';\nimport { DefaultStyleController } from 'vs/base/browser/ui/list/listWidget';\nimport { ISelectOptionItem, SelectBox } from 'vs/base/browser/ui/selectBox/selectBox';\nimport { ToolBar } from 'vs/base/browser/ui/toolbar/toolbar';\nimport { IObjectTreeOptions, ObjectTree } from 'vs/base/browser/ui/tree/objectTree';\nimport { ObjectTreeModel } from 'vs/base/browser/ui/tree/objectTreeModel';\nimport { ITreeFilter, ITreeModel, ITreeNode, ITreeRenderer, TreeFilterResult, TreeVisibility } from 'vs/base/browser/ui/tree/tree';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport * as arrays from 'vs/base/common/arrays';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ISpliceable } from 'vs/base/common/sequence';\nimport { escapeRegExpCharacters, startsWith } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { editorBackground, errorForeground, focusBorder, foreground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { attachButtonStyler, attachInputBoxStyler, attachSelectBoxStyler, attachStyler } from 'vs/platform/theme/common/styler';\nimport { ICssStyleCollector, ITheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { ITOCEntry } from 'vs/workbench/contrib/preferences/browser/settingsLayout';\nimport { ISettingsEditorViewState, settingKeyToDisplayFormat, SettingsTreeElement, SettingsTreeGroupChild, SettingsTreeGroupElement, SettingsTreeNewExtensionsElement, SettingsTreeSettingElement } from 'vs/workbench/contrib/preferences/browser/settingsTreeModels';\nimport { ExcludeSettingWidget, IExcludeChangeEvent, IExcludeDataItem, settingsHeaderForeground, settingsNumberInputBackground, settingsNumberInputBorder, settingsNumberInputForeground, settingsSelectBackground, settingsSelectBorder, settingsSelectForeground, settingsSelectListBorder, settingsTextInputBackground, settingsTextInputBorder, settingsTextInputForeground } from 'vs/workbench/contrib/preferences/browser/settingsWidgets';\nimport { SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU } from 'vs/workbench/contrib/preferences/common/preferences';\nimport { ISetting, ISettingsGroup, SettingValueType } from 'vs/workbench/services/preferences/common/preferences';\n\nconst $ = DOM.$;\n\nfunction getExcludeDisplayValue(element: SettingsTreeSettingElement): IExcludeDataItem[] {\n\tconst data = element.isConfigured ?\n\t\t{ ...element.defaultValue, ...element.scopeValue } :\n\t\telement.defaultValue;\n\n\treturn Object.keys(data)\n\t\t.filter(key => !!data[key])\n\t\t.map(key => {\n\t\t\tconst value = data[key];\n\t\t\tconst sibling = typeof value === 'boolean' ? undefined : value.when;\n\n\t\t\treturn {\n\t\t\t\tid: key,\n\t\t\t\tpattern: key,\n\t\t\t\tsibling\n\t\t\t};\n\t\t});\n}\n\nexport function resolveSettingsTree(tocData: ITOCEntry, coreSettingsGroups: ISettingsGroup[]): { tree: ITOCEntry, leftoverSettings: Set<ISetting> } {\n\tconst allSettings = getFlatSettings(coreSettingsGroups);\n\treturn {\n\t\ttree: _resolveSettingsTree(tocData, allSettings),\n\t\tleftoverSettings: allSettings\n\t};\n}\n\nexport function resolveExtensionsSettings(groups: ISettingsGroup[]): ITOCEntry {\n\tconst settingsGroupToEntry = (group: ISettingsGroup) => {\n\t\tconst flatSettings = arrays.flatten(\n\t\t\tgroup.sections.map(section => section.settings));\n\n\t\treturn {\n\t\t\tid: group.id,\n\t\t\tlabel: group.title,\n\t\t\tsettings: flatSettings\n\t\t};\n\t};\n\n\tconst extGroups = groups\n\t\t.sort((a, b) => a.title.localeCompare(b.title))\n\t\t.map(g => settingsGroupToEntry(g));\n\n\treturn {\n\t\tid: 'extensions',\n\t\tlabel: localize('extensions', \"Extensions\"),\n\t\tchildren: extGroups\n\t};\n}\n\nfunction _resolveSettingsTree(tocData: ITOCEntry, allSettings: Set<ISetting>): ITOCEntry {\n\tlet children: ITOCEntry[] | undefined;\n\tif (tocData.children) {\n\t\tchildren = tocData.children\n\t\t\t.map(child => _resolveSettingsTree(child, allSettings))\n\t\t\t.filter(child => (child.children && child.children.length) || (child.settings && child.settings.length));\n\t}\n\n\tlet settings: ISetting[] | undefined;\n\tif (tocData.settings) {\n\t\tsettings = arrays.flatten(tocData.settings.map(pattern => getMatchingSettings(allSettings, <string>pattern)));\n\t}\n\n\tif (!children && !settings) {\n\t\tthrow new Error(`TOC node has no child groups or settings: ${tocData.id}`);\n\t}\n\n\treturn {\n\t\tid: tocData.id,\n\t\tlabel: tocData.label,\n\t\tchildren,\n\t\tsettings\n\t};\n}\n\nfunction getMatchingSettings(allSettings: Set<ISetting>, pattern: string): ISetting[] {\n\tconst result: ISetting[] = [];\n\n\tallSettings.forEach(s => {\n\t\tif (settingMatches(s, pattern)) {\n\t\t\tresult.push(s);\n\t\t\tallSettings.delete(s);\n\t\t}\n\t});\n\n\n\treturn result.sort((a, b) => a.key.localeCompare(b.key));\n}\n\nconst settingPatternCache = new Map<string, RegExp>();\n\nfunction createSettingMatchRegExp(pattern: string): RegExp {\n\tpattern = escapeRegExpCharacters(pattern)\n\t\t.replace(/\\\\\\*/g, '.*');\n\n\treturn new RegExp(`^${pattern}`, 'i');\n}\n\nfunction settingMatches(s: ISetting, pattern: string): boolean {\n\tlet regExp = settingPatternCache.get(pattern);\n\tif (!regExp) {\n\t\tregExp = createSettingMatchRegExp(pattern);\n\t\tsettingPatternCache.set(pattern, regExp);\n\t}\n\n\treturn regExp.test(s.key);\n}\n\nfunction getFlatSettings(settingsGroups: ISettingsGroup[]) {\n\tconst result: Set<ISetting> = new Set();\n\n\tfor (const group of settingsGroups) {\n\t\tfor (const section of group.sections) {\n\t\t\tfor (const s of section.settings) {\n\t\t\t\tif (!s.overrides || !s.overrides.length) {\n\t\t\t\t\tresult.add(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\ninterface IDisposableTemplate {\n\ttoDispose: IDisposable[];\n}\n\ninterface ISettingItemTemplate<T = any> extends IDisposableTemplate {\n\tonChange?: (value: T) => void;\n\n\tcontext?: SettingsTreeSettingElement;\n\tcontainerElement: HTMLElement;\n\tcategoryElement: HTMLElement;\n\tlabelElement: HTMLElement;\n\tdescriptionElement: HTMLElement;\n\tcontrolElement: HTMLElement;\n\tdeprecationWarningElement: HTMLElement;\n\totherOverridesElement: HTMLElement;\n\ttoolbar: ToolBar;\n}\n\ninterface ISettingBoolItemTemplate extends ISettingItemTemplate<boolean> {\n\tcheckbox: Checkbox;\n}\n\ninterface ISettingTextItemTemplate extends ISettingItemTemplate<string> {\n\tinputBox: InputBox;\n\tvalidationErrorMessageElement: HTMLElement;\n}\n\ntype ISettingNumberItemTemplate = ISettingTextItemTemplate;\n\ninterface ISettingEnumItemTemplate extends ISettingItemTemplate<number> {\n\tselectBox: SelectBox;\n\tenumDescriptionElement: HTMLElement;\n}\n\ninterface ISettingComplexItemTemplate extends ISettingItemTemplate<void> {\n\tbutton: Button;\n}\n\ninterface ISettingExcludeItemTemplate extends ISettingItemTemplate<void> {\n\texcludeWidget: ExcludeSettingWidget;\n}\n\ninterface ISettingNewExtensionsTemplate extends IDisposableTemplate {\n\tbutton: Button;\n\tcontext?: SettingsTreeNewExtensionsElement;\n}\n\ninterface IGroupTitleTemplate extends IDisposableTemplate {\n\tcontext?: SettingsTreeGroupElement;\n\tparent: HTMLElement;\n}\n\nconst SETTINGS_TEXT_TEMPLATE_ID = 'settings.text.template';\nconst SETTINGS_NUMBER_TEMPLATE_ID = 'settings.number.template';\nconst SETTINGS_ENUM_TEMPLATE_ID = 'settings.enum.template';\nconst SETTINGS_BOOL_TEMPLATE_ID = 'settings.bool.template';\nconst SETTINGS_EXCLUDE_TEMPLATE_ID = 'settings.exclude.template';\nconst SETTINGS_COMPLEX_TEMPLATE_ID = 'settings.complex.template';\nconst SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID = 'settings.newExtensions.template';\nconst SETTINGS_ELEMENT_TEMPLATE_ID = 'settings.group.template';\n\nexport interface ISettingChangeEvent {\n\tkey: string;\n\tvalue: any; // undefined => reset/unconfigure\n\ttype: SettingValueType | SettingValueType[];\n}\n\nexport interface ISettingLinkClickEvent {\n\tsource: SettingsTreeSettingElement;\n\ttargetKey: string;\n}\n\nexport interface ISettingOverrideClickEvent {\n\tscope: string;\n\ttargetKey: string;\n}\n\nexport abstract class AbstractSettingRenderer implements ITreeRenderer<SettingsTreeElement, never, any> {\n\t/** To override */\n\tabstract get templateId(): string;\n\n\tstatic readonly CONTROL_CLASS = 'setting-control-focus-target';\n\tstatic readonly CONTROL_SELECTOR = '.' + AbstractSettingRenderer.CONTROL_CLASS;\n\tstatic readonly CONTENTS_CLASS = 'setting-item-contents';\n\tstatic readonly CONTENTS_SELECTOR = '.' + AbstractSettingRenderer.CONTENTS_CLASS;\n\n\tstatic readonly SETTING_KEY_ATTR = 'data-key';\n\tstatic readonly SETTING_ID_ATTR = 'data-id';\n\n\tprivate readonly _onDidClickOverrideElement = new Emitter<ISettingOverrideClickEvent>();\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent> = this._onDidClickOverrideElement.event;\n\n\tprotected readonly _onDidChangeSetting = new Emitter<ISettingChangeEvent>();\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent> = this._onDidChangeSetting.event;\n\n\tprotected readonly _onDidOpenSettings = new Emitter<string>();\n\treadonly onDidOpenSettings: Event<string> = this._onDidOpenSettings.event;\n\n\tprivate readonly _onDidClickSettingLink = new Emitter<ISettingLinkClickEvent>();\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent> = this._onDidClickSettingLink.event;\n\n\tprivate readonly _onDidFocusSetting = new Emitter<SettingsTreeSettingElement>();\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement> = this._onDidFocusSetting.event;\n\n\t// Put common injections back here\n\tconstructor(\n\t\tprivate readonly settingActions: IAction[],\n\t\t@IThemeService protected readonly _themeService: IThemeService,\n\t\t@IContextViewService protected readonly _contextViewService: IContextViewService,\n\t\t@IOpenerService protected readonly _openerService: IOpenerService,\n\t\t@IInstantiationService protected readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService protected readonly _commandService: ICommandService,\n\t\t@IContextMenuService protected readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): any {\n\t\tthrow new Error('to override');\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: any): void {\n\t\tthrow new Error('to override');\n\t}\n\n\tprotected renderCommonTemplate(tree: any, _container: HTMLElement, typeClass: string): ISettingItemTemplate {\n\t\tDOM.addClass(_container, 'setting-item');\n\t\tDOM.addClass(_container, 'setting-item-' + typeClass);\n\n\t\tconst container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n\t\tconst titleElement = DOM.append(container, $('.setting-item-title'));\n\t\tconst labelCategoryContainer = DOM.append(titleElement, $('.setting-item-cat-label-container'));\n\t\tconst categoryElement = DOM.append(labelCategoryContainer, $('span.setting-item-category'));\n\t\tconst labelElement = DOM.append(labelCategoryContainer, $('span.setting-item-label'));\n\t\tconst otherOverridesElement = DOM.append(titleElement, $('span.setting-item-overrides'));\n\t\tconst descriptionElement = DOM.append(container, $('.setting-item-description'));\n\t\tconst modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n\t\tmodifiedIndicatorElement.title = localize('modified', \"Modified\");\n\n\t\tconst valueElement = DOM.append(container, $('.setting-item-value'));\n\t\tconst controlElement = DOM.append(valueElement, $('div.setting-item-control'));\n\n\t\tconst deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n\n\t\tconst toDispose: IDisposable[] = [];\n\n\t\tconst toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\n\t\tconst template: ISettingItemTemplate = {\n\t\t\ttoDispose,\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tdescriptionElement,\n\t\t\tcontrolElement,\n\t\t\tdeprecationWarningElement,\n\t\t\totherOverridesElement,\n\t\t\ttoolbar\n\t\t};\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.push(DOM.addDisposableListener(controlElement, 'mousedown', e => e.stopPropagation()));\n\n\t\ttoDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, e => container.classList.add('mouseover')));\n\t\ttoDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, e => container.classList.remove('mouseover')));\n\n\t\treturn template;\n\t}\n\n\tprotected addSettingElementFocusHandler(template: ISettingItemTemplate): void {\n\t\tconst focusTracker = DOM.trackFocus(template.containerElement);\n\t\ttemplate.toDispose.push(focusTracker);\n\t\tfocusTracker.onDidBlur(() => {\n\t\t\tif (template.containerElement.classList.contains('focused')) {\n\t\t\t\ttemplate.containerElement.classList.remove('focused');\n\t\t\t}\n\t\t});\n\n\t\tfocusTracker.onDidFocus(() => {\n\t\t\ttemplate.containerElement.classList.add('focused');\n\n\t\t\tif (template.context) {\n\t\t\t\tthis._onDidFocusSetting.fire(template.context);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected renderSettingToolbar(container: HTMLElement): ToolBar {\n\t\tconst toggleMenuKeybinding = this._keybindingService.lookupKeybinding(SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU);\n\t\tlet toggleMenuTitle = localize('settingsContextMenuTitle', \"More Actions... \");\n\t\tif (toggleMenuKeybinding) {\n\t\t\ttoggleMenuTitle += ` (${toggleMenuKeybinding && toggleMenuKeybinding.getLabel()})`;\n\t\t}\n\n\t\tconst toolbar = new ToolBar(container, this._contextMenuService, {\n\t\t\ttoggleMenuTitle\n\t\t});\n\t\ttoolbar.setActions([], this.settingActions)();\n\t\tconst button = container.querySelector('.toolbar-toggle-more');\n\t\tif (button) {\n\t\t\t(<HTMLElement>button).tabIndex = -1;\n\t\t}\n\n\t\treturn toolbar;\n\t}\n\n\tprotected renderSettingElement(node: ITreeNode<SettingsTreeSettingElement, never>, index: number, template: ISettingItemTemplate | ISettingBoolItemTemplate): void {\n\t\tconst element = node.element;\n\t\ttemplate.context = element;\n\t\ttemplate.toolbar.context = element;\n\n\t\tconst setting = element.setting;\n\n\t\tDOM.toggleClass(template.containerElement, 'is-configured', element.isConfigured);\n\t\tDOM.toggleClass(template.containerElement, 'is-expanded', true);\n\t\ttemplate.containerElement.setAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR, element.setting.key);\n\t\ttemplate.containerElement.setAttribute(AbstractSettingRenderer.SETTING_ID_ATTR, element.id);\n\n\t\tconst titleTooltip = setting.key + (element.isConfigured ? ' - Modified' : '');\n\t\ttemplate.categoryElement.textContent = element.displayCategory && (element.displayCategory + ': ');\n\t\ttemplate.categoryElement.title = titleTooltip;\n\n\t\ttemplate.labelElement.textContent = element.displayLabel;\n\t\ttemplate.labelElement.title = titleTooltip;\n\n\t\ttemplate.descriptionElement.innerHTML = '';\n\t\tif (element.setting.descriptionIsMarkdown) {\n\t\t\tconst renderedDescription = this.renderDescriptionMarkdown(element, element.description, template.toDispose);\n\t\t\ttemplate.descriptionElement.appendChild(renderedDescription);\n\t\t} else {\n\t\t\ttemplate.descriptionElement.innerText = element.description;\n\t\t}\n\n\t\tconst baseId = (element.displayCategory + '_' + element.displayLabel).replace(/ /g, '_').toLowerCase();\n\t\ttemplate.descriptionElement.id = baseId + '_setting_description';\n\n\t\ttemplate.otherOverridesElement.innerHTML = '';\n\n\t\tif (element.overriddenScopeList.length) {\n\t\t\tconst otherOverridesLabel = element.isConfigured ?\n\t\t\t\tlocalize('alsoConfiguredIn', \"Also modified in\") :\n\t\t\t\tlocalize('configuredIn', \"Modified in\");\n\n\t\t\tDOM.append(template.otherOverridesElement, $('span', undefined, `(${otherOverridesLabel}: `));\n\n\t\t\tfor (let i = 0; i < element.overriddenScopeList.length; i++) {\n\t\t\t\tconst view = DOM.append(template.otherOverridesElement, $('a.modified-scope', undefined, element.overriddenScopeList[i]));\n\n\t\t\t\tif (i !== element.overriddenScopeList.length - 1) {\n\t\t\t\t\tDOM.append(template.otherOverridesElement, $('span', undefined, ', '));\n\t\t\t\t} else {\n\t\t\t\t\tDOM.append(template.otherOverridesElement, $('span', undefined, ')'));\n\t\t\t\t}\n\n\t\t\t\tDOM.addStandardDisposableListener(view, DOM.EventType.CLICK, (e: IMouseEvent) => {\n\t\t\t\t\tthis._onDidClickOverrideElement.fire({\n\t\t\t\t\t\ttargetKey: element.setting.key,\n\t\t\t\t\t\tscope: element.overriddenScopeList[i]\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst onChange = (value: any) => this._onDidChangeSetting.fire({ key: element.setting.key, value, type: template.context!.valueType });\n\t\ttemplate.deprecationWarningElement.innerText = element.setting.deprecationMessage || '';\n\t\tthis.renderValue(element, <ISettingItemTemplate>template, onChange);\n\n\t}\n\n\tprivate renderDescriptionMarkdown(element: SettingsTreeSettingElement, text: string, disposeables: IDisposable[]): HTMLElement {\n\t\t// Rewrite `#editor.fontSize#` to link format\n\t\ttext = fixSettingLinks(text);\n\n\t\tconst renderedMarkdown = renderMarkdown({ value: text }, {\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content: string) => {\n\t\t\t\t\tif (startsWith(content, '#')) {\n\t\t\t\t\t\tconst e: ISettingLinkClickEvent = {\n\t\t\t\t\t\t\tsource: element,\n\t\t\t\t\t\t\ttargetKey: content.substr(1)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._onDidClickSettingLink.fire(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet uri: URI | undefined;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\turi = URI.parse(content);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (uri) {\n\t\t\t\t\t\t\tthis._openerService.open(uri).catch(onUnexpectedError);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdisposeables\n\t\t\t}\n\t\t});\n\n\t\trenderedMarkdown.classList.add('setting-item-description-markdown');\n\t\tcleanRenderedMarkdown(renderedMarkdown);\n\t\treturn renderedMarkdown;\n\t}\n\n\tprotected abstract renderValue(dataElement: SettingsTreeSettingElement, template: ISettingItemTemplate, onChange: (value: any) => void): void;\n\n\tprotected setElementAriaLabels(dataElement: SettingsTreeSettingElement, templateId: string, template: ISettingItemTemplate): string {\n\t\t// Create base Id for element references\n\t\tconst baseId = (dataElement.displayCategory + '_' + dataElement.displayLabel).replace(/ /g, '_').toLowerCase();\n\n\t\tconst modifiedText = template.otherOverridesElement.textContent ?\n\t\t\ttemplate.otherOverridesElement.textContent : (dataElement.isConfigured ? localize('settings.Modified', ' Modified. ') : '');\n\n\t\tlet itemElement: HTMLElement | null = null;\n\n\t\t// Use '.' as reader pause\n\t\tlet label = dataElement.displayCategory + ' ' + dataElement.displayLabel + '. ';\n\n\t\t// Setup and add ARIA attributes\n\t\t// Create id and label for control/input element - parent is wrapper div\n\n\t\tif (templateId === SETTINGS_TEXT_TEMPLATE_ID) {\n\t\t\tif (itemElement = (<ISettingTextItemTemplate>template).inputBox.inputElement) {\n\t\t\t\titemElement.setAttribute('role', 'textbox');\n\t\t\t\tlabel += modifiedText;\n\t\t\t}\n\t\t} else if (templateId === SETTINGS_NUMBER_TEMPLATE_ID) {\n\t\t\tif (itemElement = (<ISettingNumberItemTemplate>template).inputBox.inputElement) {\n\t\t\t\titemElement.setAttribute('role', 'textbox');\n\t\t\t\tlabel += ' number. ' + modifiedText;\n\t\t\t}\n\t\t} else if (templateId === SETTINGS_BOOL_TEMPLATE_ID) {\n\t\t\tif (itemElement = (<ISettingBoolItemTemplate>template).checkbox.domNode) {\n\t\t\t\titemElement.setAttribute('role', 'checkbox');\n\t\t\t\tlabel += modifiedText;\n\t\t\t\t// Add checkbox target to description clickable and able to toggle checkbox\n\t\t\t\ttemplate.descriptionElement.setAttribute('checkbox_label_target_id', baseId + '_setting_item');\n\t\t\t}\n\t\t} else if (templateId === SETTINGS_ENUM_TEMPLATE_ID) {\n\t\t\tif (itemElement = <HTMLElement>template.controlElement.firstElementChild) {\n\t\t\t\titemElement.setAttribute('role', 'combobox');\n\t\t\t\tlabel += modifiedText;\n\t\t\t}\n\t\t} else {\n\t\t\t// Don't change attributes if we don't know what we areFunctions\n\t\t\treturn '';\n\t\t}\n\n\t\t// We don't have control element, return empty label\n\t\tif (!itemElement) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Labels will not be read on descendent input elements of the parent treeitem\n\t\t// unless defined as roles for input items\n\t\t// voiceover does not seem to use labeledby correctly, set labels directly on input elements\n\t\titemElement.id = baseId + '_setting_item';\n\t\titemElement.setAttribute('aria-label', label);\n\t\titemElement.setAttribute('aria-describedby', baseId + '_setting_description settings_aria_more_actions_shortcut_label');\n\n\t\treturn label;\n\t}\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\tdispose(template.toDispose);\n\t}\n}\n\nexport class SettingGroupRenderer implements ITreeRenderer<SettingsTreeGroupElement, never, IGroupTitleTemplate> {\n\ttemplateId = SETTINGS_ELEMENT_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): IGroupTitleTemplate {\n\t\tDOM.addClass(container, 'group-title');\n\n\t\tconst toDispose: IDisposable[] = [];\n\t\tconst template: IGroupTitleTemplate = {\n\t\t\tparent: container,\n\t\t\ttoDispose\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeGroupElement, never>, index: number, templateData: IGroupTitleTemplate): void {\n\t\ttemplateData.parent.innerHTML = '';\n\t\tconst labelElement = DOM.append(templateData.parent, $('div.settings-group-title-label'));\n\t\tlabelElement.classList.add(`settings-group-level-${element.element.level}`);\n\t\tlabelElement.textContent = element.element.label;\n\n\t\tif (element.element.isFirstGroup) {\n\t\t\tlabelElement.classList.add('settings-group-first');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IGroupTitleTemplate): void {\n\t}\n}\n\nexport class SettingNewExtensionsRenderer implements ITreeRenderer<SettingsTreeNewExtensionsElement, never, ISettingNewExtensionsTemplate> {\n\ttemplateId = SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t}\n\n\trenderTemplate(container: HTMLElement): ISettingNewExtensionsTemplate {\n\t\tconst toDispose: IDisposable[] = [];\n\n\t\tcontainer.classList.add('setting-item-new-extensions');\n\n\t\tconst button = new Button(container, { title: true, buttonBackground: undefined, buttonHoverBackground: undefined });\n\t\ttoDispose.push(button);\n\t\ttoDispose.push(button.onDidClick(() => {\n\t\t\tif (template.context) {\n\t\t\t\tthis._commandService.executeCommand('workbench.extensions.action.showExtensionsWithIds', template.context.extensionIds);\n\t\t\t}\n\t\t}));\n\t\tbutton.label = localize('newExtensionsButtonLabel', \"Show matching extensions\");\n\t\tbutton.element.classList.add('settings-new-extensions-button');\n\t\ttoDispose.push(attachButtonStyler(button, this._themeService));\n\n\t\tconst template: ISettingNewExtensionsTemplate = {\n\t\t\tbutton,\n\t\t\ttoDispose\n\t\t};\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeNewExtensionsElement, never>, index: number, templateData: ISettingNewExtensionsTemplate): void {\n\t\ttemplateData.context = element.element;\n\t}\n\n\tdisposeTemplate(template: IDisposableTemplate): void {\n\t\tdispose(template.toDispose);\n\t}\n}\n\nexport class SettingComplexRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingComplexItemTemplate> {\n\ttemplateId = SETTINGS_COMPLEX_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingComplexItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'complex');\n\n\t\tconst openSettingsButton = new Button(common.controlElement, { title: true, buttonBackground: undefined, buttonHoverBackground: undefined });\n\t\tcommon.toDispose.push(openSettingsButton);\n\t\tcommon.toDispose.push(openSettingsButton.onDidClick(() => template.onChange!()));\n\t\topenSettingsButton.label = localize('editInSettingsJson', \"Edit in settings.json\");\n\t\topenSettingsButton.element.classList.add('edit-in-settings-button');\n\n\t\tcommon.toDispose.push(attachButtonStyler(openSettingsButton, this._themeService, {\n\t\t\tbuttonBackground: Color.transparent.toString(),\n\t\t\tbuttonHoverBackground: Color.transparent.toString(),\n\t\t\tbuttonForeground: 'foreground'\n\t\t}));\n\n\t\tconst template: ISettingComplexItemTemplate = {\n\t\t\t...common,\n\t\t\tbutton: openSettingsButton\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingComplexItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingExcludeItemTemplate, onChange: (value: string) => void): void {\n\t\ttemplate.onChange = () => this._onDidOpenSettings.fire(dataElement.setting.key);\n\t}\n}\n\nexport class SettingExcludeRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingExcludeItemTemplate> {\n\ttemplateId = SETTINGS_EXCLUDE_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingExcludeItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'exclude');\n\n\t\tconst excludeWidget = this._instantiationService.createInstance(ExcludeSettingWidget, common.controlElement);\n\t\texcludeWidget.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tcommon.toDispose.push(excludeWidget);\n\n\t\tconst template: ISettingExcludeItemTemplate = {\n\t\t\t...common,\n\t\t\texcludeWidget\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\tcommon.toDispose.push(excludeWidget.onDidChangeExclude(e => this.onDidChangeExclude(template, e)));\n\n\t\treturn template;\n\t}\n\n\tprivate onDidChangeExclude(template: ISettingExcludeItemTemplate, e: IExcludeChangeEvent): void {\n\t\tif (template.context) {\n\t\t\tconst newValue = { ...template.context.scopeValue };\n\n\t\t\t// first delete the existing entry, if present\n\t\t\tif (e.originalPattern) {\n\t\t\t\tif (e.originalPattern in template.context.defaultValue) {\n\t\t\t\t\t// delete a default by overriding it\n\t\t\t\t\tnewValue[e.originalPattern] = false;\n\t\t\t\t} else {\n\t\t\t\t\tdelete newValue[e.originalPattern];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// then add the new or updated entry, if present\n\t\t\tif (e.pattern) {\n\t\t\t\tif (e.pattern in template.context.defaultValue && !e.sibling) {\n\t\t\t\t\t// add a default by deleting its override\n\t\t\t\t\tdelete newValue[e.pattern];\n\t\t\t\t} else {\n\t\t\t\t\tnewValue[e.pattern] = e.sibling ? { when: e.sibling } : true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sortKeys = (obj: Object) => {\n\t\t\t\tconst keyArray = Object.keys(obj)\n\t\t\t\t\t.map(key => ({ key, val: obj[key] }))\n\t\t\t\t\t.sort((a, b) => a.key.localeCompare(b.key));\n\n\t\t\t\tconst retVal = {};\n\t\t\t\tkeyArray.forEach(pair => {\n\t\t\t\t\tretVal[pair.key] = pair.val;\n\t\t\t\t});\n\t\t\t\treturn retVal;\n\t\t\t};\n\n\t\t\tthis._onDidChangeSetting.fire({\n\t\t\t\tkey: template.context.setting.key,\n\t\t\t\tvalue: Object.keys(newValue).length === 0 ? undefined : sortKeys(newValue),\n\t\t\t\ttype: template.context.valueType\n\t\t\t});\n\t\t}\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingExcludeItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingExcludeItemTemplate, onChange: (value: string) => void): void {\n\t\tconst value = getExcludeDisplayValue(dataElement);\n\t\ttemplate.excludeWidget.setValue(value);\n\t\ttemplate.context = dataElement;\n\t}\n}\n\nexport class SettingTextRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingTextItemTemplate> {\n\ttemplateId = SETTINGS_TEXT_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingTextItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, _container, 'text');\n\t\tconst validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n\n\t\tconst inputBox = new InputBox(common.controlElement, this._contextViewService);\n\t\tcommon.toDispose.push(inputBox);\n\t\tcommon.toDispose.push(attachInputBoxStyler(inputBox, this._themeService, {\n\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\tinputBorder: settingsTextInputBorder\n\t\t}));\n\t\tcommon.toDispose.push(\n\t\t\tinputBox.onDidChange(e => {\n\t\t\t\tif (template.onChange) {\n\t\t\t\t\ttemplate.onChange(e);\n\t\t\t\t}\n\t\t\t}));\n\t\tcommon.toDispose.push(inputBox);\n\t\tinputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\n\t\tconst template: ISettingTextItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingTextItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingTextItemTemplate, onChange: (value: string) => void): void {\n\t\tconst label = this.setElementAriaLabels(dataElement, SETTINGS_TEXT_TEMPLATE_ID, template);\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value = dataElement.value;\n\t\ttemplate.onChange = value => { renderValidations(dataElement, template, false, label); onChange(value); };\n\n\t\trenderValidations(dataElement, template, true, label);\n\t}\n}\n\nexport class SettingEnumRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingEnumItemTemplate> {\n\ttemplateId = SETTINGS_ENUM_TEMPLATE_ID;\n\n\trenderTemplate(container: HTMLElement): ISettingEnumItemTemplate {\n\t\tconst common = this.renderCommonTemplate(null, container, 'enum');\n\n\t\tconst selectBox = new SelectBox([], 0, this._contextViewService, undefined, { useCustomDrawn: true });\n\n\t\tcommon.toDispose.push(selectBox);\n\t\tcommon.toDispose.push(attachSelectBoxStyler(selectBox, this._themeService, {\n\t\t\tselectBackground: settingsSelectBackground,\n\t\t\tselectForeground: settingsSelectForeground,\n\t\t\tselectBorder: settingsSelectBorder,\n\t\t\tselectListBorder: settingsSelectListBorder\n\t\t}));\n\t\tselectBox.render(common.controlElement);\n\t\tconst selectElement = common.controlElement.querySelector('select');\n\t\tif (selectElement) {\n\t\t\tselectElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\t}\n\n\t\tcommon.toDispose.push(\n\t\t\tselectBox.onDidSelect(e => {\n\t\t\t\tif (template.onChange) {\n\t\t\t\t\ttemplate.onChange(e.index);\n\t\t\t\t}\n\t\t\t}));\n\n\t\tconst enumDescriptionElement = common.containerElement.insertBefore($('.setting-item-enumDescription'), common.descriptionElement.nextSibling);\n\n\t\tconst template: ISettingEnumItemTemplate = {\n\t\t\t...common,\n\t\t\tselectBox,\n\t\t\tenumDescriptionElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingEnumItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingEnumItemTemplate, onChange: (value: string) => void): void {\n\t\tconst enumDescriptions = dataElement.setting.enumDescriptions;\n\t\tconst enumDescriptionsAreMarkdown = dataElement.setting.enumDescriptionsAreMarkdown;\n\n\t\tconst displayOptions = dataElement.setting.enum!\n\t\t\t.map(String)\n\t\t\t.map(escapeInvisibleChars)\n\t\t\t.map((data, index) => <ISelectOptionItem>{\n\t\t\t\ttext: data,\n\t\t\t\tdescription: (enumDescriptions && enumDescriptions[index] && (enumDescriptionsAreMarkdown ? fixSettingLinks(enumDescriptions[index], false) : enumDescriptions[index])),\n\t\t\t\tdescriptionIsMarkdown: enumDescriptionsAreMarkdown,\n\t\t\t\tdecoratorRight: (data === dataElement.defaultValue ? localize('settings.Default', \"{0}\", 'default') : '')\n\t\t\t});\n\n\t\ttemplate.selectBox.setOptions(displayOptions);\n\n\t\tconst label = this.setElementAriaLabels(dataElement, SETTINGS_ENUM_TEMPLATE_ID, template);\n\t\ttemplate.selectBox.setAriaLabel(label);\n\n\t\tlet idx = dataElement.setting.enum!.indexOf(dataElement.value);\n\t\tif (idx === -1) {\n\t\t\tidx = dataElement.setting.enum!.indexOf(dataElement.defaultValue);\n\t\t\tif (idx === -1) {\n\t\t\t\tidx = 0;\n\t\t\t}\n\t\t}\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.selectBox.select(idx);\n\t\ttemplate.onChange = idx => onChange(dataElement.setting.enum![idx]);\n\n\t\ttemplate.enumDescriptionElement.innerHTML = '';\n\t}\n}\n\nexport class SettingNumberRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingNumberItemTemplate> {\n\ttemplateId = SETTINGS_NUMBER_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingNumberItemTemplate {\n\t\tconst common = super.renderCommonTemplate(null, _container, 'number');\n\t\tconst validationErrorMessageElement = DOM.append(common.containerElement, $('.setting-item-validation-message'));\n\n\t\tconst inputBox = new InputBox(common.controlElement, this._contextViewService, { type: 'number' });\n\t\tcommon.toDispose.push(inputBox);\n\t\tcommon.toDispose.push(attachInputBoxStyler(inputBox, this._themeService, {\n\t\t\tinputBackground: settingsNumberInputBackground,\n\t\t\tinputForeground: settingsNumberInputForeground,\n\t\t\tinputBorder: settingsNumberInputBorder\n\t\t}));\n\t\tcommon.toDispose.push(\n\t\t\tinputBox.onDidChange(e => {\n\t\t\t\tif (template.onChange) {\n\t\t\t\t\ttemplate.onChange(e);\n\t\t\t\t}\n\t\t\t}));\n\t\tcommon.toDispose.push(inputBox);\n\t\tinputBox.inputElement.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\n\t\tconst template: ISettingNumberItemTemplate = {\n\t\t\t...common,\n\t\t\tinputBox,\n\t\t\tvalidationErrorMessageElement\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingNumberItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingNumberItemTemplate, onChange: (value: number | null) => void): void {\n\t\tconst numParseFn = (dataElement.valueType === 'integer' || dataElement.valueType === 'nullable-integer')\n\t\t\t? parseInt : parseFloat;\n\n\t\tconst nullNumParseFn = (dataElement.valueType === 'nullable-integer' || dataElement.valueType === 'nullable-number')\n\t\t\t? ((v: string) => v === '' ? null : numParseFn(v)) : numParseFn;\n\n\t\tconst label = this.setElementAriaLabels(dataElement, SETTINGS_NUMBER_TEMPLATE_ID, template);\n\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.inputBox.value = dataElement.value;\n\t\ttemplate.onChange = value => {\n\t\t\trenderValidations(dataElement, template, false, label);\n\t\t\tonChange(nullNumParseFn(value));\n\t\t};\n\n\t\trenderValidations(dataElement, template, true, label);\n\t}\n}\n\nexport class SettingBoolRenderer extends AbstractSettingRenderer implements ITreeRenderer<SettingsTreeSettingElement, never, ISettingBoolItemTemplate> {\n\ttemplateId = SETTINGS_BOOL_TEMPLATE_ID;\n\n\trenderTemplate(_container: HTMLElement): ISettingBoolItemTemplate {\n\t\tDOM.addClass(_container, 'setting-item');\n\t\tDOM.addClass(_container, 'setting-item-bool');\n\n\t\tconst container = DOM.append(_container, $(AbstractSettingRenderer.CONTENTS_SELECTOR));\n\n\t\tconst titleElement = DOM.append(container, $('.setting-item-title'));\n\t\tconst categoryElement = DOM.append(titleElement, $('span.setting-item-category'));\n\t\tconst labelElement = DOM.append(titleElement, $('span.setting-item-label'));\n\t\tconst otherOverridesElement = DOM.append(titleElement, $('span.setting-item-overrides'));\n\n\t\tconst descriptionAndValueElement = DOM.append(container, $('.setting-item-value-description'));\n\t\tconst controlElement = DOM.append(descriptionAndValueElement, $('.setting-item-bool-control'));\n\t\tconst descriptionElement = DOM.append(descriptionAndValueElement, $('.setting-item-description'));\n\t\tconst modifiedIndicatorElement = DOM.append(container, $('.setting-item-modified-indicator'));\n\t\tmodifiedIndicatorElement.title = localize('modified', \"Modified\");\n\n\n\t\tconst deprecationWarningElement = DOM.append(container, $('.setting-item-deprecation-message'));\n\n\t\tconst toDispose: IDisposable[] = [];\n\t\tconst checkbox = new Checkbox({ actionClassName: 'setting-value-checkbox', isChecked: true, title: '', inputActiveOptionBorder: undefined });\n\t\tcontrolElement.appendChild(checkbox.domNode);\n\t\ttoDispose.push(checkbox);\n\t\ttoDispose.push(checkbox.onChange(() => {\n\t\t\tif (template.onChange) {\n\t\t\t\ttemplate.onChange(checkbox.checked);\n\t\t\t}\n\t\t}));\n\n\t\t// Need to listen for mouse clicks on description and toggle checkbox - use target ID for safety\n\t\t// Also have to ignore embedded links - too buried to stop propagation\n\t\ttoDispose.push(DOM.addDisposableListener(descriptionElement, DOM.EventType.MOUSE_DOWN, (e) => {\n\t\t\tconst targetElement = <HTMLElement>e.target;\n\t\t\tconst targetId = descriptionElement.getAttribute('checkbox_label_target_id');\n\n\t\t\t// Make sure we are not a link and the target ID matches\n\t\t\t// Toggle target checkbox\n\t\t\tif (targetElement.tagName.toLowerCase() !== 'a' && targetId === template.checkbox.domNode.id) {\n\t\t\t\ttemplate.checkbox.checked = template.checkbox.checked ? false : true;\n\t\t\t\ttemplate.onChange!(checkbox.checked);\n\t\t\t}\n\t\t\tDOM.EventHelper.stop(e);\n\t\t}));\n\n\n\t\tcheckbox.domNode.classList.add(AbstractSettingRenderer.CONTROL_CLASS);\n\t\tconst toolbarContainer = DOM.append(container, $('.setting-toolbar-container'));\n\t\tconst toolbar = this.renderSettingToolbar(toolbarContainer);\n\t\ttoDispose.push(toolbar);\n\n\t\tconst template: ISettingBoolItemTemplate = {\n\t\t\ttoDispose,\n\n\t\t\tcontainerElement: container,\n\t\t\tcategoryElement,\n\t\t\tlabelElement,\n\t\t\tcontrolElement,\n\t\t\tcheckbox,\n\t\t\tdescriptionElement,\n\t\t\tdeprecationWarningElement,\n\t\t\totherOverridesElement,\n\t\t\ttoolbar\n\t\t};\n\n\t\tthis.addSettingElementFocusHandler(template);\n\n\t\t// Prevent clicks from being handled by list\n\t\ttoDispose.push(DOM.addDisposableListener(controlElement, 'mousedown', (e: IMouseEvent) => e.stopPropagation()));\n\n\t\ttoDispose.push(DOM.addStandardDisposableListener(controlElement, 'keydown', (e: StandardKeyboardEvent) => {\n\t\t\tif (e.keyCode === KeyCode.Escape) {\n\t\t\t\te.browserEvent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\ttoDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_ENTER, e => container.classList.add('mouseover')));\n\t\ttoDispose.push(DOM.addDisposableListener(titleElement, DOM.EventType.MOUSE_LEAVE, e => container.classList.remove('mouseover')));\n\n\t\treturn template;\n\t}\n\n\trenderElement(element: ITreeNode<SettingsTreeSettingElement, never>, index: number, templateData: ISettingBoolItemTemplate): void {\n\t\tsuper.renderSettingElement(element, index, templateData);\n\t}\n\n\tprotected renderValue(dataElement: SettingsTreeSettingElement, template: ISettingBoolItemTemplate, onChange: (value: boolean) => void): void {\n\t\ttemplate.onChange = undefined;\n\t\ttemplate.checkbox.checked = dataElement.value;\n\t\ttemplate.onChange = onChange;\n\n\t\t// Setup and add ARIA attributes\n\t\tthis.setElementAriaLabels(dataElement, SETTINGS_BOOL_TEMPLATE_ID, template);\n\t}\n}\n\nexport class SettingTreeRenderers {\n\treadonly onDidClickOverrideElement: Event<ISettingOverrideClickEvent>;\n\n\tprivate readonly _onDidChangeSetting = new Emitter<ISettingChangeEvent>();\n\treadonly onDidChangeSetting: Event<ISettingChangeEvent>;\n\n\treadonly onDidOpenSettings: Event<string>;\n\n\treadonly onDidClickSettingLink: Event<ISettingLinkClickEvent>;\n\n\treadonly onDidFocusSetting: Event<SettingsTreeSettingElement>;\n\n\treadonly allRenderers: ITreeRenderer<SettingsTreeElement, never, any>[];\n\n\tprivate readonly settingActions: IAction[];\n\n\tconstructor(\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextViewService private readonly _contextViewService: IContextViewService\n\t) {\n\t\tthis.settingActions = [\n\t\t\tnew Action('settings.resetSetting', localize('resetSettingLabel', \"Reset Setting\"), undefined, undefined, (context: SettingsTreeSettingElement) => {\n\t\t\t\tif (context) {\n\t\t\t\t\tthis._onDidChangeSetting.fire({ key: context.setting.key, value: undefined, type: context.setting.type as SettingValueType });\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}),\n\t\t\tnew Separator(),\n\t\t\tthis._instantiationService.createInstance(CopySettingIdAction),\n\t\t\tthis._instantiationService.createInstance(CopySettingAsJSONAction),\n\t\t];\n\n\t\tconst settingRenderers = [\n\t\t\tthis._instantiationService.createInstance(SettingBoolRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingNumberRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingBoolRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingComplexRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingTextRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingExcludeRenderer, this.settingActions),\n\t\t\tthis._instantiationService.createInstance(SettingEnumRenderer, this.settingActions),\n\t\t];\n\n\t\tthis.onDidClickOverrideElement = Event.any(...settingRenderers.map(r => r.onDidClickOverrideElement));\n\t\tthis.onDidChangeSetting = Event.any(\n\t\t\t...settingRenderers.map(r => r.onDidChangeSetting),\n\t\t\tthis._onDidChangeSetting.event\n\t\t);\n\t\tthis.onDidOpenSettings = Event.any(...settingRenderers.map(r => r.onDidOpenSettings));\n\t\tthis.onDidClickSettingLink = Event.any(...settingRenderers.map(r => r.onDidClickSettingLink));\n\t\tthis.onDidFocusSetting = Event.any(...settingRenderers.map(r => r.onDidFocusSetting));\n\n\t\tthis.allRenderers = [\n\t\t\t...settingRenderers,\n\t\t\tthis._instantiationService.createInstance(SettingGroupRenderer),\n\t\t\tthis._instantiationService.createInstance(SettingNewExtensionsRenderer),\n\t\t];\n\t}\n\n\tcancelSuggesters() {\n\t\tthis._contextViewService.hideContextView();\n\t}\n\n\tshowContextMenu(element: SettingsTreeSettingElement, settingDOMElement: HTMLElement): void {\n\t\tconst toolbarElement = settingDOMElement.querySelector('.toolbar-toggle-more');\n\t\tif (toolbarElement) {\n\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\tgetActions: () => this.settingActions,\n\t\t\t\tgetAnchor: () => <HTMLElement>toolbarElement,\n\t\t\t\tgetActionsContext: () => element\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSettingDOMElementForDOMElement(domElement: HTMLElement): HTMLElement | null {\n\t\tconst parent = DOM.findParentWithClass(domElement, AbstractSettingRenderer.CONTENTS_CLASS);\n\t\tif (parent) {\n\t\t\treturn parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetDOMElementsForSettingKey(treeContainer: HTMLElement, key: string): NodeListOf<HTMLElement> {\n\t\treturn treeContainer.querySelectorAll(`[${AbstractSettingRenderer.SETTING_KEY_ATTR}=\"${key}\"]`);\n\t}\n\n\tgetKeyForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_KEY_ATTR);\n\t}\n\n\tgetIdForDOMElementInSetting(element: HTMLElement): string | null {\n\t\tconst settingElement = this.getSettingDOMElementForDOMElement(element);\n\t\treturn settingElement && settingElement.getAttribute(AbstractSettingRenderer.SETTING_ID_ATTR);\n\t}\n}\n\nfunction renderValidations(dataElement: SettingsTreeSettingElement, template: ISettingTextItemTemplate, calledOnStartup: boolean, originalAriaLabel: string) {\n\tif (dataElement.setting.validator) {\n\t\tconst errMsg = dataElement.setting.validator(template.inputBox.value);\n\t\tif (errMsg) {\n\t\t\tDOM.addClass(template.containerElement, 'invalid-input');\n\t\t\ttemplate.validationErrorMessageElement.innerText = errMsg;\n\t\t\tconst validationError = localize('validationError', \"Validation Error.\");\n\t\t\ttemplate.inputBox.inputElement.parentElement!.setAttribute('aria-label', [originalAriaLabel, validationError, errMsg].join(' '));\n\t\t\tif (!calledOnStartup) { ariaAlert(validationError + ' ' + errMsg); }\n\t\t\treturn;\n\t\t} else {\n\t\t\ttemplate.inputBox.inputElement.parentElement!.setAttribute('aria-label', originalAriaLabel);\n\t\t}\n\t}\n\tDOM.removeClass(template.containerElement, 'invalid-input');\n}\n\nfunction cleanRenderedMarkdown(element: Node): void {\n\tfor (let i = 0; i < element.childNodes.length; i++) {\n\t\tconst child = element.childNodes.item(i);\n\n\t\tconst tagName = (<Element>child).tagName && (<Element>child).tagName.toLowerCase();\n\t\tif (tagName === 'img') {\n\t\t\telement.removeChild(child);\n\t\t} else {\n\t\t\tcleanRenderedMarkdown(child);\n\t\t}\n\t}\n}\n\nfunction fixSettingLinks(text: string, linkify = true): string {\n\treturn text.replace(/`#([^#]*)#`/g, (match, settingKey) => {\n\t\tconst targetDisplayFormat = settingKeyToDisplayFormat(settingKey);\n\t\tconst targetName = `${targetDisplayFormat.category}: ${targetDisplayFormat.label}`;\n\t\treturn linkify ?\n\t\t\t`[${targetName}](#${settingKey})` :\n\t\t\t`\"${targetName}\"`;\n\t});\n}\n\nfunction escapeInvisibleChars(enumValue: string): string {\n\treturn enumValue && enumValue\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\r/g, '\\\\r');\n}\n\nexport class SettingsTreeFilter implements ITreeFilter<SettingsTreeElement> {\n\tconstructor(\n\t\tprivate viewState: ISettingsEditorViewState,\n\t) { }\n\n\tfilter(element: SettingsTreeElement, parentVisibility: TreeVisibility): TreeFilterResult<void> {\n\t\t// Filter during search\n\t\tif (this.viewState.filterToCategory && element instanceof SettingsTreeSettingElement) {\n\t\t\tif (!this.settingContainedInGroup(element.setting, this.viewState.filterToCategory)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Non-user scope selected\n\t\tif (element instanceof SettingsTreeSettingElement && this.viewState.settingsTarget !== ConfigurationTarget.USER) {\n\t\t\tif (!element.matchesScope(this.viewState.settingsTarget)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// @modified or tag\n\t\tif (element instanceof SettingsTreeSettingElement && this.viewState.tagFilters) {\n\t\t\tif (!element.matchesAllTags(this.viewState.tagFilters)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Group with no visible children\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\tif (typeof element.count === 'number') {\n\t\t\t\treturn element.count > 0;\n\t\t\t}\n\n\t\t\treturn TreeVisibility.Recurse;\n\t\t}\n\n\t\t// Filtered \"new extensions\" button\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\tif ((this.viewState.tagFilters && this.viewState.tagFilters.size) || this.viewState.filterToCategory) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate settingContainedInGroup(setting: ISetting, group: SettingsTreeGroupElement): boolean {\n\t\treturn group.children.some(child => {\n\t\t\tif (child instanceof SettingsTreeGroupElement) {\n\t\t\t\treturn this.settingContainedInGroup(setting, child);\n\t\t\t} else if (child instanceof SettingsTreeSettingElement) {\n\t\t\t\treturn child.setting.key === setting.key;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass SettingsTreeDelegate implements IListVirtualDelegate<SettingsTreeGroupChild> {\n\n\tprivate heightCache = new WeakMap<SettingsTreeGroupChild, number>();\n\n\tgetHeight(element: SettingsTreeGroupChild): number {\n\t\tconst cachedHeight = this.heightCache.get(element);\n\n\t\tif (typeof cachedHeight === 'number') {\n\t\t\treturn cachedHeight;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\tif (element.isFirstGroup) {\n\t\t\t\treturn 31;\n\t\t\t}\n\n\t\t\treturn 40 + (7 * element.level);\n\t\t}\n\n\t\treturn element instanceof SettingsTreeSettingElement && element.valueType === SettingValueType.Boolean ?\n\t\t\t78 :\n\t\t\t104;\n\t}\n\n\tgetTemplateId(element: SettingsTreeGroupElement | SettingsTreeSettingElement | SettingsTreeNewExtensionsElement): string {\n\t\tif (element instanceof SettingsTreeGroupElement) {\n\t\t\treturn SETTINGS_ELEMENT_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeSettingElement) {\n\t\t\tif (element.valueType === 'boolean') {\n\t\t\t\treturn SETTINGS_BOOL_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === 'integer' || element.valueType === 'number' || element.valueType === 'nullable-integer' || element.valueType === 'nullable-number') {\n\t\t\t\treturn SETTINGS_NUMBER_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === 'string') {\n\t\t\t\treturn SETTINGS_TEXT_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === 'enum') {\n\t\t\t\treturn SETTINGS_ENUM_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\tif (element.valueType === 'exclude') {\n\t\t\t\treturn SETTINGS_EXCLUDE_TEMPLATE_ID;\n\t\t\t}\n\n\t\t\treturn SETTINGS_COMPLEX_TEMPLATE_ID;\n\t\t}\n\n\t\tif (element instanceof SettingsTreeNewExtensionsElement) {\n\t\t\treturn SETTINGS_NEW_EXTENSIONS_TEMPLATE_ID;\n\t\t}\n\n\t\tthrow new Error('unknown element type: ' + element);\n\t}\n\n\thasDynamicHeight(element: SettingsTreeGroupElement | SettingsTreeSettingElement | SettingsTreeNewExtensionsElement): boolean {\n\t\treturn !(element instanceof SettingsTreeGroupElement);\n\t}\n\n\tsetDynamicHeight(element: SettingsTreeGroupChild, height: number): void {\n\t\tthis.heightCache.set(element, height);\n\t}\n}\n\nclass NonCollapsibleObjectTreeModel<T> extends ObjectTreeModel<T> {\n\tisCollapsible(element: T): boolean {\n\t\treturn false;\n\t}\n\n\tsetCollapsed(element: T, collapsed?: boolean, recursive?: boolean): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class SettingsTree extends ObjectTree<SettingsTreeElement> {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tviewState: ISettingsEditorViewState,\n\t\trenderers: ITreeRenderer<any, void, any>[],\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tconst treeClass = 'settings-editor-tree';\n\n\t\tsuper(container,\n\t\t\tnew SettingsTreeDelegate(),\n\t\t\trenderers,\n\t\t\t{\n\t\t\t\tsupportDynamicHeights: true,\n\t\t\t\tariaRole: ListAriaRootRole.FORM,\n\t\t\t\tariaLabel: localize('treeAriaLabel', \"Settings\"),\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId(e) {\n\t\t\t\t\t\treturn e.id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyleController: new DefaultStyleController(DOM.createStyleSheet(container), treeClass),\n\t\t\t\tfilter: new SettingsTreeFilter(viewState)\n\t\t\t});\n\n\t\tthis.disposables = [];\n\t\tthis.disposables.push(registerThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\t\t\tconst activeBorderColor = theme.getColor(focusBorder);\n\t\t\tif (activeBorderColor) {\n\t\t\t\t// TODO@rob - why isn't this applied when added to the stylesheet from tocTree.ts? Seems like a chromium glitch.\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-toc-container .monaco-list:focus .monaco-list-row.focused {outline: solid 1px ${activeBorderColor}; outline-offset: -1px;  }`);\n\t\t\t}\n\n\t\t\tconst foregroundColor = theme.getColor(foreground);\n\t\t\tif (foregroundColor) {\n\t\t\t\t// Links appear inside other elements in markdown. CSS opacity acts like a mask. So we have to dynamically compute the description color to avoid\n\t\t\t\t// applying an opacity to the link color.\n\t\t\t\tconst fgWithOpacity = new Color(new RGBA(foregroundColor.rgba.r, foregroundColor.rgba.g, foregroundColor.rgba.b, 0.9));\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description { color: ${fgWithOpacity}; }`);\n\t\t\t}\n\n\t\t\tconst errorColor = theme.getColor(errorForeground);\n\t\t\tif (errorColor) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-deprecation-message { color: ${errorColor}; }`);\n\t\t\t}\n\n\t\t\tconst invalidInputBackground = theme.getColor(inputValidationErrorBackground);\n\t\t\tif (invalidInputBackground) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { background-color: ${invalidInputBackground}; }`);\n\t\t\t}\n\n\t\t\tconst invalidInputForeground = theme.getColor(inputValidationErrorForeground);\n\t\t\tif (invalidInputForeground) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { color: ${invalidInputForeground}; }`);\n\t\t\t}\n\n\t\t\tconst invalidInputBorder = theme.getColor(inputValidationErrorBorder);\n\t\t\tif (invalidInputBorder) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-validation-message { border-style:solid; border-width: 1px; border-color: ${invalidInputBorder}; }`);\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.invalid-input .setting-item-control .monaco-inputbox.idle { outline-width: 0; border-style:solid; border-width: 1px; border-color: ${invalidInputBorder}; }`);\n\t\t\t}\n\n\t\t\tconst headerForegroundColor = theme.getColor(settingsHeaderForeground);\n\t\t\tif (headerForegroundColor) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .settings-group-title-label { color: ${headerForegroundColor}; }`);\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-label { color: ${headerForegroundColor}; }`);\n\t\t\t}\n\n\t\t\tconst focusBorderColor = theme.getColor(focusBorder);\n\t\t\tif (focusBorderColor) {\n\t\t\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:focus { outline-color: ${focusBorderColor} }`);\n\t\t\t}\n\t\t}));\n\n\t\tthis.getHTMLElement().classList.add(treeClass);\n\n\t\tthis.disposables.push(attachStyler(themeService, {\n\t\t\tlistActiveSelectionBackground: editorBackground,\n\t\t\tlistActiveSelectionForeground: foreground,\n\t\t\tlistFocusAndSelectionBackground: editorBackground,\n\t\t\tlistFocusAndSelectionForeground: foreground,\n\t\t\tlistFocusBackground: editorBackground,\n\t\t\tlistFocusForeground: foreground,\n\t\t\tlistHoverForeground: foreground,\n\t\t\tlistHoverBackground: editorBackground,\n\t\t\tlistHoverOutline: editorBackground,\n\t\t\tlistFocusOutline: editorBackground,\n\t\t\tlistInactiveSelectionBackground: editorBackground,\n\t\t\tlistInactiveSelectionForeground: foreground,\n\t\t\tlistInactiveFocusBackground: editorBackground,\n\t\t\tlistInactiveFocusOutline: editorBackground\n\t\t}, colors => {\n\t\t\tthis.style(colors);\n\t\t}));\n\t}\n\n\tprotected createModel(view: ISpliceable<ITreeNode<SettingsTreeGroupChild>>, options: IObjectTreeOptions<SettingsTreeGroupChild>): ITreeModel<SettingsTreeGroupChild | null, void, SettingsTreeGroupChild | null> {\n\t\treturn new NonCollapsibleObjectTreeModel<SettingsTreeGroupChild>(view, options);\n\t}\n}\n\nclass CopySettingIdAction extends Action {\n\tstatic readonly ID = 'settings.copySettingId';\n\tstatic readonly LABEL = localize('copySettingIdLabel', \"Copy Setting ID\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper(CopySettingIdAction.ID, CopySettingIdAction.LABEL);\n\t}\n\n\trun(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tthis.clipboardService.writeText(context.setting.key);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nclass CopySettingAsJSONAction extends Action {\n\tstatic readonly ID = 'settings.copySettingAsJSON';\n\tstatic readonly LABEL = localize('copySettingAsJSONLabel', \"Copy Setting as JSON\");\n\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper(CopySettingAsJSONAction.ID, CopySettingAsJSONAction.LABEL);\n\t}\n\n\trun(context: SettingsTreeSettingElement): Promise<void> {\n\t\tif (context) {\n\t\t\tconst jsonResult = `\"${context.setting.key}\": ${JSON.stringify(context.value, undefined, '  ')}`;\n\t\t\tthis.clipboardService.writeText(jsonResult);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n"]}]}