{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/editor/browser/editorService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/editor/browser/editorService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar resourceEditorInput_1 = require(\"vs/workbench/common/editor/resourceEditorInput\");\nvar dataUriEditorInput_1 = require(\"vs/workbench/common/editor/dataUriEditorInput\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar map_1 = require(\"vs/base/common/map\");\nvar untitledEditorService_1 = require(\"vs/workbench/services/untitled/common/untitledEditorService\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar network_1 = require(\"vs/base/common/network\");\nvar event_1 = require(\"vs/base/common/event\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar diffEditorInput_1 = require(\"vs/workbench/common/editor/diffEditorInput\");\nvar nls_1 = require(\"vs/nls\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar types_1 = require(\"vs/base/common/types\");\nvar EditorService = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorService, _super);\n    function EditorService(editorGroupService, untitledEditorService, instantiationService, labelService, fileService, configurationService) {\n        var _this = _super.call(this) || this;\n        _this.editorGroupService = editorGroupService;\n        _this.untitledEditorService = untitledEditorService;\n        _this.instantiationService = instantiationService;\n        _this.labelService = labelService;\n        _this.fileService = fileService;\n        _this.configurationService = configurationService;\n        //#region events\n        _this._onDidActiveEditorChange = _this._register(new event_1.Emitter());\n        _this._onDidVisibleEditorsChange = _this._register(new event_1.Emitter());\n        _this._onDidCloseEditor = _this._register(new event_1.Emitter());\n        _this._onDidOpenEditorFail = _this._register(new event_1.Emitter());\n        _this.openEditorHandlers = [];\n        _this.fileInputFactory = platform_1.Registry.as(editor_1.Extensions.EditorInputFactories).getFileInputFactory();\n        _this.registerListeners();\n        return _this;\n    }\n    Object.defineProperty(EditorService.prototype, \"onDidActiveEditorChange\", {\n        get: function () { return this._onDidActiveEditorChange.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"onDidVisibleEditorsChange\", {\n        get: function () { return this._onDidVisibleEditorsChange.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"onDidCloseEditor\", {\n        get: function () { return this._onDidCloseEditor.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"onDidOpenEditorFail\", {\n        get: function () { return this._onDidOpenEditorFail.event; },\n        enumerable: true,\n        configurable: true\n    });\n    EditorService.prototype.registerListeners = function () {\n        var _this = this;\n        this.editorGroupService.whenRestored.then(function () { return _this.onEditorsRestored(); });\n        this.editorGroupService.onDidActiveGroupChange(function (group) { return _this.handleActiveEditorChange(group); });\n        this.editorGroupService.onDidAddGroup(function (group) { return _this.registerGroupListeners(group); });\n    };\n    EditorService.prototype.onEditorsRestored = function () {\n        var _this = this;\n        // Register listeners to each opened group\n        this.editorGroupService.groups.forEach(function (group) { return _this.registerGroupListeners(group); });\n        // Fire initial set of editor events if there is an active editor\n        if (this.activeEditor) {\n            this.doEmitActiveEditorChangeEvent();\n            this._onDidVisibleEditorsChange.fire();\n        }\n    };\n    EditorService.prototype.handleActiveEditorChange = function (group) {\n        if (group !== this.editorGroupService.activeGroup) {\n            return; // ignore if not the active group\n        }\n        if (!this.lastActiveEditor && !group.activeEditor) {\n            return; // ignore if we still have no active editor\n        }\n        if (this.lastActiveGroupId === group.id && this.lastActiveEditor === group.activeEditor) {\n            return; // ignore if the editor actually did not change\n        }\n        this.doEmitActiveEditorChangeEvent();\n    };\n    EditorService.prototype.doEmitActiveEditorChangeEvent = function () {\n        var activeGroup = this.editorGroupService.activeGroup;\n        this.lastActiveGroupId = activeGroup.id;\n        this.lastActiveEditor = activeGroup.activeEditor;\n        this._onDidActiveEditorChange.fire();\n    };\n    EditorService.prototype.registerGroupListeners = function (group) {\n        var _this = this;\n        var groupDisposeables = [];\n        groupDisposeables.push(group.onDidGroupChange(function (e) {\n            if (e.kind === editorGroupsService_1.GroupChangeKind.EDITOR_ACTIVE) {\n                _this.handleActiveEditorChange(group);\n                _this._onDidVisibleEditorsChange.fire();\n            }\n        }));\n        groupDisposeables.push(group.onDidCloseEditor(function (event) {\n            _this._onDidCloseEditor.fire(event);\n        }));\n        groupDisposeables.push(group.onWillOpenEditor(function (event) {\n            _this.onGroupWillOpenEditor(group, event);\n        }));\n        groupDisposeables.push(group.onDidOpenEditorFail(function (editor) {\n            _this._onDidOpenEditorFail.fire({ editor: editor, groupId: group.id });\n        }));\n        event_1.Event.once(group.onWillDispose)(function () {\n            lifecycle_1.dispose(groupDisposeables);\n        });\n    };\n    EditorService.prototype.onGroupWillOpenEditor = function (group, event) {\n        var _loop_1 = function (handler) {\n            var result = handler(event.editor, event.options, group);\n            if (result && result.override) {\n                event.prevent((function () { return result.override.then(function (editor) { return types_1.withNullAsUndefined(editor); }); }));\n                return \"break\";\n            }\n        };\n        for (var _i = 0, _a = this.openEditorHandlers; _i < _a.length; _i++) {\n            var handler = _a[_i];\n            var state_1 = _loop_1(handler);\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    Object.defineProperty(EditorService.prototype, \"activeControl\", {\n        get: function () {\n            var activeGroup = this.editorGroupService.activeGroup;\n            return activeGroup ? activeGroup.activeControl : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"activeTextEditorWidget\", {\n        get: function () {\n            var activeControl = this.activeControl;\n            if (activeControl) {\n                var activeControlWidget = activeControl.getControl();\n                if (editorBrowser_1.isCodeEditor(activeControlWidget) || editorBrowser_1.isDiffEditor(activeControlWidget)) {\n                    return activeControlWidget;\n                }\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"editors\", {\n        get: function () {\n            var editors = [];\n            this.editorGroupService.groups.forEach(function (group) {\n                editors.push.apply(editors, group.editors);\n            });\n            return editors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"activeEditor\", {\n        get: function () {\n            var activeGroup = this.editorGroupService.activeGroup;\n            return activeGroup ? types_1.withNullAsUndefined(activeGroup.activeEditor) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"visibleControls\", {\n        get: function () {\n            return arrays_1.coalesce(this.editorGroupService.groups.map(function (group) { return group.activeControl; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"visibleTextEditorWidgets\", {\n        get: function () {\n            return this.visibleControls.map(function (control) { return control.getControl(); }).filter(function (widget) { return editorBrowser_1.isCodeEditor(widget) || editorBrowser_1.isDiffEditor(widget); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EditorService.prototype, \"visibleEditors\", {\n        get: function () {\n            return arrays_1.coalesce(this.editorGroupService.groups.map(function (group) { return group.activeEditor; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //#region preventOpenEditor()\n    EditorService.prototype.overrideOpenEditor = function (handler) {\n        var _this = this;\n        this.openEditorHandlers.push(handler);\n        return lifecycle_1.toDisposable(function () {\n            var index = _this.openEditorHandlers.indexOf(handler);\n            if (index >= 0) {\n                _this.openEditorHandlers.splice(index, 1);\n            }\n        });\n    };\n    EditorService.prototype.openEditor = function (editor, optionsOrGroup, group) {\n        // Typed Editor Support\n        if (editor instanceof editor_1.EditorInput) {\n            var editorOptions = this.toOptions(optionsOrGroup);\n            var targetGroup = this.findTargetGroup(editor, editorOptions, group);\n            return this.doOpenEditor(targetGroup, editor, editorOptions);\n        }\n        // Untyped Text Editor Support\n        var textInput = editor;\n        var typedInput = this.createInput(textInput);\n        if (typedInput) {\n            var editorOptions = editor_1.TextEditorOptions.from(textInput);\n            var targetGroup = this.findTargetGroup(typedInput, editorOptions, optionsOrGroup);\n            return this.doOpenEditor(targetGroup, typedInput, editorOptions);\n        }\n        return Promise.resolve(null);\n    };\n    EditorService.prototype.doOpenEditor = function (group, editor, options) {\n        return group.openEditor(editor, options);\n    };\n    EditorService.prototype.findTargetGroup = function (input, options, group) {\n        var targetGroup;\n        // Group: Instance of Group\n        if (group && typeof group !== 'number') {\n            return group;\n        }\n        // Group: Side by Side\n        if (group === editorService_1.SIDE_GROUP) {\n            targetGroup = this.findSideBySideGroup();\n        }\n        // Group: Specific Group\n        else if (typeof group === 'number' && group >= 0) {\n            targetGroup = this.editorGroupService.getGroup(group);\n        }\n        // Group: Unspecified without a specific index to open\n        else if (!options || typeof options.index !== 'number') {\n            var groupsByLastActive = this.editorGroupService.getGroups(editorGroupsService_1.GroupsOrder.MOST_RECENTLY_ACTIVE);\n            // Respect option to reveal an editor if it is already visible in any group\n            if (options && options.revealIfVisible) {\n                for (var _i = 0, groupsByLastActive_1 = groupsByLastActive; _i < groupsByLastActive_1.length; _i++) {\n                    var group_1 = groupsByLastActive_1[_i];\n                    if (input.matches(group_1.activeEditor)) {\n                        targetGroup = group_1;\n                        break;\n                    }\n                }\n            }\n            // Respect option to reveal an editor if it is open (not necessarily visible)\n            if ((options && options.revealIfOpened) || this.configurationService.getValue('workbench.editor.revealIfOpen')) {\n                for (var _a = 0, groupsByLastActive_2 = groupsByLastActive; _a < groupsByLastActive_2.length; _a++) {\n                    var group_2 = groupsByLastActive_2[_a];\n                    if (group_2.isOpened(input)) {\n                        targetGroup = group_2;\n                        break;\n                    }\n                }\n            }\n        }\n        // Fallback to active group if target not valid\n        if (!targetGroup) {\n            targetGroup = this.editorGroupService.activeGroup;\n        }\n        return targetGroup;\n    };\n    EditorService.prototype.findSideBySideGroup = function () {\n        var direction = editorGroupsService_1.preferredSideBySideGroupDirection(this.configurationService);\n        var neighbourGroup = this.editorGroupService.findGroup({ direction: direction });\n        if (!neighbourGroup) {\n            neighbourGroup = this.editorGroupService.addGroup(this.editorGroupService.activeGroup, direction);\n        }\n        return neighbourGroup;\n    };\n    EditorService.prototype.toOptions = function (options) {\n        if (!options || options instanceof editor_1.EditorOptions) {\n            return options;\n        }\n        var textOptions = options;\n        if (!!textOptions.selection) {\n            return editor_1.TextEditorOptions.create(options);\n        }\n        return editor_1.EditorOptions.create(options);\n    };\n    EditorService.prototype.openEditors = function (editors, group) {\n        var _this = this;\n        // Convert to typed editors and options\n        var typedEditors = [];\n        editors.forEach(function (editor) {\n            if (editor_1.isEditorInputWithOptions(editor)) {\n                typedEditors.push(editor);\n            }\n            else {\n                typedEditors.push({ editor: _this.createInput(editor), options: editor_1.TextEditorOptions.from(editor) });\n            }\n        });\n        // Find target groups to open\n        var mapGroupToEditors = new Map();\n        if (group === editorService_1.SIDE_GROUP) {\n            mapGroupToEditors.set(this.findSideBySideGroup(), typedEditors);\n        }\n        else {\n            typedEditors.forEach(function (typedEditor) {\n                var targetGroup = _this.findTargetGroup(typedEditor.editor, typedEditor.options, group);\n                var targetGroupEditors = mapGroupToEditors.get(targetGroup);\n                if (!targetGroupEditors) {\n                    targetGroupEditors = [];\n                    mapGroupToEditors.set(targetGroup, targetGroupEditors);\n                }\n                targetGroupEditors.push(typedEditor);\n            });\n        }\n        // Open in targets\n        var result = [];\n        mapGroupToEditors.forEach(function (editorsWithOptions, group) {\n            result.push(group.openEditors(editorsWithOptions));\n        });\n        return Promise.all(result).then(function (editors) { return arrays_1.coalesce(editors); });\n    };\n    //#endregion\n    //#region isOpen()\n    EditorService.prototype.isOpen = function (editor, group) {\n        return !!this.doGetOpened(editor);\n    };\n    //#endregion\n    //#region getOpend()\n    EditorService.prototype.getOpened = function (editor, group) {\n        return this.doGetOpened(editor);\n    };\n    EditorService.prototype.doGetOpened = function (editor, group) {\n        if (!(editor instanceof editor_1.EditorInput)) {\n            var resourceInput = editor;\n            if (!resourceInput.resource) {\n                return undefined; // we need a resource at least\n            }\n        }\n        var groups = [];\n        if (typeof group === 'number') {\n            var groupView = this.editorGroupService.getGroup(group);\n            if (groupView) {\n                groups.push(groupView);\n            }\n        }\n        else if (group) {\n            groups.push(group);\n        }\n        else {\n            groups = this.editorGroupService.groups.slice();\n        }\n        // For each editor group\n        for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\n            var group_3 = groups_1[_i];\n            // Typed editor\n            if (editor instanceof editor_1.EditorInput) {\n                if (group_3.isOpened(editor)) {\n                    return editor;\n                }\n            }\n            // Resource editor\n            else {\n                for (var _a = 0, _b = group_3.editors; _a < _b.length; _a++) {\n                    var editorInGroup = _b[_a];\n                    var resource = editor_1.toResource(editorInGroup, { supportSideBySide: true });\n                    if (!resource) {\n                        continue; // need a resource to compare with\n                    }\n                    var resourceInput = editor;\n                    if (resourceInput.resource && resource.toString() === resourceInput.resource.toString()) {\n                        return editorInGroup;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    EditorService.prototype.replaceEditors = function (editors, group) {\n        var _this = this;\n        var typedEditors = [];\n        editors.forEach(function (replaceEditorArg) {\n            if (replaceEditorArg.editor instanceof editor_1.EditorInput) {\n                typedEditors.push(replaceEditorArg);\n            }\n            else {\n                var editor = replaceEditorArg.editor;\n                var typedEditor = _this.createInput(editor);\n                var replacementEditor = _this.createInput(replaceEditorArg.replacement);\n                typedEditors.push({\n                    editor: typedEditor,\n                    replacement: replacementEditor,\n                    options: _this.toOptions(editor.options)\n                });\n            }\n        });\n        var targetGroup = typeof group === 'number' ? this.editorGroupService.getGroup(group) : group;\n        if (targetGroup) {\n            return targetGroup.replaceEditors(typedEditors);\n        }\n        return Promise.resolve();\n    };\n    //#endregion\n    //#region invokeWithinEditorContext()\n    EditorService.prototype.invokeWithinEditorContext = function (fn) {\n        var activeTextEditorWidget = this.activeTextEditorWidget;\n        if (editorBrowser_1.isCodeEditor(activeTextEditorWidget)) {\n            return activeTextEditorWidget.invokeWithinContext(fn);\n        }\n        var activeGroup = this.editorGroupService.activeGroup;\n        if (activeGroup) {\n            return activeGroup.invokeWithinContext(fn);\n        }\n        return this.instantiationService.invokeFunction(fn);\n    };\n    //#endregion\n    //#region createInput()\n    EditorService.prototype.createInput = function (input) {\n        // Typed Editor Input Support (EditorInput)\n        if (input instanceof editor_1.EditorInput) {\n            return input;\n        }\n        // Typed Editor Input Support (IEditorInputWithOptions)\n        var editorInputWithOptions = input;\n        if (editorInputWithOptions.editor instanceof editor_1.EditorInput) {\n            return editorInputWithOptions.editor;\n        }\n        // Side by Side Support\n        var resourceSideBySideInput = input;\n        if (resourceSideBySideInput.masterResource && resourceSideBySideInput.detailResource) {\n            var masterInput = this.createInput({ resource: resourceSideBySideInput.masterResource, forceFile: resourceSideBySideInput.forceFile });\n            var detailInput = this.createInput({ resource: resourceSideBySideInput.detailResource, forceFile: resourceSideBySideInput.forceFile });\n            var label = resourceSideBySideInput.label || masterInput.getName() || nls_1.localize('sideBySideLabels', \"{0} - {1}\", this.toDiffLabel(masterInput), this.toDiffLabel(detailInput));\n            return new editor_1.SideBySideEditorInput(label, typeof resourceSideBySideInput.description === 'string' ? resourceSideBySideInput.description : masterInput.getDescription(), detailInput, masterInput);\n        }\n        // Diff Editor Support\n        var resourceDiffInput = input;\n        if (resourceDiffInput.leftResource && resourceDiffInput.rightResource) {\n            var leftInput = this.createInput({ resource: resourceDiffInput.leftResource, forceFile: resourceDiffInput.forceFile });\n            var rightInput = this.createInput({ resource: resourceDiffInput.rightResource, forceFile: resourceDiffInput.forceFile });\n            var label = resourceDiffInput.label || nls_1.localize('compareLabels', \"{0} ↔ {1}\", this.toDiffLabel(leftInput), this.toDiffLabel(rightInput));\n            return new diffEditorInput_1.DiffEditorInput(label, types_1.withUndefinedAsNull(resourceDiffInput.description), leftInput, rightInput);\n        }\n        // Untitled file support\n        var untitledInput = input;\n        if (!untitledInput.resource || typeof untitledInput.filePath === 'string' || (untitledInput.resource instanceof uri_1.URI && untitledInput.resource.scheme === network_1.Schemas.untitled)) {\n            return this.untitledEditorService.createOrGet(untitledInput.filePath ? uri_1.URI.file(untitledInput.filePath) : untitledInput.resource, untitledInput.language, untitledInput.contents, untitledInput.encoding);\n        }\n        // Resource Editor Support\n        var resourceInput = input;\n        if (resourceInput.resource instanceof uri_1.URI) {\n            var label = resourceInput.label;\n            if (!label && resourceInput.resource.scheme !== network_1.Schemas.data) {\n                label = resources_1.basename(resourceInput.resource); // derive the label from the path (but not for data URIs)\n            }\n            return this.createOrGet(resourceInput.resource, this.instantiationService, label, resourceInput.description, resourceInput.encoding, resourceInput.forceFile);\n        }\n        throw new Error('Unknown input type');\n    };\n    EditorService.prototype.createOrGet = function (resource, instantiationService, label, description, encoding, forceFile) {\n        if (EditorService.CACHE.has(resource)) {\n            var input_1 = EditorService.CACHE.get(resource);\n            if (input_1 instanceof resourceEditorInput_1.ResourceEditorInput) {\n                if (label) {\n                    input_1.setName(label);\n                }\n                if (description) {\n                    input_1.setDescription(description);\n                }\n            }\n            else if (!(input_1 instanceof dataUriEditorInput_1.DataUriEditorInput)) {\n                if (encoding) {\n                    input_1.setPreferredEncoding(encoding);\n                }\n            }\n            return input_1;\n        }\n        var input;\n        // File\n        if (forceFile /* fix for https://github.com/Microsoft/vscode/issues/48275 */ || this.fileService.canHandleResource(resource)) {\n            input = this.fileInputFactory.createFileInput(resource, encoding, instantiationService);\n        }\n        // Data URI\n        else if (resource.scheme === network_1.Schemas.data) {\n            input = instantiationService.createInstance(dataUriEditorInput_1.DataUriEditorInput, label, description, resource);\n        }\n        // Resource\n        else {\n            input = instantiationService.createInstance(resourceEditorInput_1.ResourceEditorInput, label, description, resource);\n        }\n        EditorService.CACHE.set(resource, input);\n        event_1.Event.once(input.onDispose)(function () {\n            EditorService.CACHE.delete(resource);\n        });\n        return input;\n    };\n    EditorService.prototype.toDiffLabel = function (input) {\n        var res = input.getResource();\n        if (!res) {\n            return null;\n        }\n        // Do not try to extract any paths from simple untitled editors\n        if (res.scheme === network_1.Schemas.untitled && !this.untitledEditorService.hasAssociatedFilePath(res)) {\n            return input.getName();\n        }\n        // Otherwise: for diff labels prefer to see the path as part of the label\n        return this.labelService.getUriLabel(res, { relative: true });\n    };\n    EditorService.CACHE = new map_1.ResourceMap();\n    EditorService = tslib_1.__decorate([\n        tslib_1.__param(0, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(1, untitledEditorService_1.IUntitledEditorService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, label_1.ILabelService),\n        tslib_1.__param(4, files_1.IFileService),\n        tslib_1.__param(5, configuration_1.IConfigurationService)\n    ], EditorService);\n    return EditorService;\n}(lifecycle_1.Disposable));\nexports.EditorService = EditorService;\n/**\n * The delegating workbench editor service can be used to override the behaviour of the openEditor()\n * method by providing a IEditorOpenHandler.\n */\nvar DelegatingEditorService = /** @class */ (function (_super) {\n    tslib_1.__extends(DelegatingEditorService, _super);\n    function DelegatingEditorService(editorGroupService, untitledEditorService, instantiationService, labelService, fileService, configurationService) {\n        return _super.call(this, editorGroupService, untitledEditorService, instantiationService, labelService, fileService, configurationService) || this;\n    }\n    DelegatingEditorService.prototype.setEditorOpenHandler = function (handler) {\n        this.editorOpenHandler = handler;\n    };\n    DelegatingEditorService.prototype.doOpenEditor = function (group, editor, options) {\n        var _this = this;\n        if (!this.editorOpenHandler) {\n            return _super.prototype.doOpenEditor.call(this, group, editor, options);\n        }\n        return this.editorOpenHandler(group, editor, options).then(function (control) {\n            if (control) {\n                return control; // the opening was handled, so return early\n            }\n            return _super.prototype.doOpenEditor.call(_this, group, editor, options);\n        });\n    };\n    DelegatingEditorService = tslib_1.__decorate([\n        tslib_1.__param(0, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(1, untitledEditorService_1.IUntitledEditorService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, label_1.ILabelService),\n        tslib_1.__param(4, files_1.IFileService),\n        tslib_1.__param(5, configuration_1.IConfigurationService)\n    ], DelegatingEditorService);\n    return DelegatingEditorService;\n}(EditorService));\nexports.DelegatingEditorService = DelegatingEditorService;\nextensions_1.registerSingleton(editorService_1.IEditorService, EditorService);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/editor/browser/editorService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/editor/browser/editorService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceInput, ITextEditorOptions, IEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditor, GroupIdentifier, IFileEditorInput, IUntitledResourceInput, IResourceDiffInput, IResourceSideBySideInput, IEditorInputFactoryRegistry, Extensions as EditorExtensions, IFileInputFactory, EditorInput, SideBySideEditorInput, IEditorInputWithOptions, isEditorInputWithOptions, EditorOptions, TextEditorOptions, IEditorIdentifier, IEditorCloseEvent, ITextEditor, ITextDiffEditor, ITextSideBySideEditor, toResource } from 'vs/workbench/common/editor';\nimport { ResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { DataUriEditorInput } from 'vs/workbench/common/editor/dataUriEditorInput';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Schemas } from 'vs/base/common/network';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { basename } from 'vs/base/common/resources';\nimport { DiffEditorInput } from 'vs/workbench/common/editor/diffEditorInput';\nimport { localize } from 'vs/nls';\nimport { IEditorGroupsService, IEditorGroup, GroupsOrder, IEditorReplacement, GroupChangeKind, preferredSideBySideGroupDirection } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IResourceEditor, ACTIVE_GROUP_TYPE, SIDE_GROUP_TYPE, SIDE_GROUP, IResourceEditorReplacement, IOpenEditorOverrideHandler, IVisibleEditor, IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { Disposable, IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { isCodeEditor, isDiffEditor, ICodeEditor, IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorGroupView, IEditorOpeningEvent, EditorServiceImpl } from 'vs/workbench/browser/parts/editor/editor';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { withNullAsUndefined, withUndefinedAsNull } from 'vs/base/common/types';\n\ntype ICachedEditorInput = ResourceEditorInput | IFileEditorInput | DataUriEditorInput;\n\nexport class EditorService extends Disposable implements EditorServiceImpl {\n\n\t_serviceBrand: any;\n\n\tprivate static CACHE: ResourceMap<ICachedEditorInput> = new ResourceMap<ICachedEditorInput>();\n\n\t//#region events\n\n\tprivate readonly _onDidActiveEditorChange: Emitter<void> = this._register(new Emitter<void>());\n\tget onDidActiveEditorChange(): Event<void> { return this._onDidActiveEditorChange.event; }\n\n\tprivate readonly _onDidVisibleEditorsChange: Emitter<void> = this._register(new Emitter<void>());\n\tget onDidVisibleEditorsChange(): Event<void> { return this._onDidVisibleEditorsChange.event; }\n\n\tprivate readonly _onDidCloseEditor: Emitter<IEditorCloseEvent> = this._register(new Emitter<IEditorCloseEvent>());\n\tget onDidCloseEditor(): Event<IEditorCloseEvent> { return this._onDidCloseEditor.event; }\n\n\tprivate readonly _onDidOpenEditorFail: Emitter<IEditorIdentifier> = this._register(new Emitter<IEditorIdentifier>());\n\tget onDidOpenEditorFail(): Event<IEditorIdentifier> { return this._onDidOpenEditorFail.event; }\n\n\t//#endregion\n\n\tprivate fileInputFactory: IFileInputFactory;\n\tprivate openEditorHandlers: IOpenEditorOverrideHandler[] = [];\n\n\tprivate lastActiveEditor: IEditorInput | null;\n\tprivate lastActiveGroupId: GroupIdentifier;\n\n\tconstructor(\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IUntitledEditorService private readonly untitledEditorService: IUntitledEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.fileInputFactory = Registry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).getFileInputFactory();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.editorGroupService.whenRestored.then(() => this.onEditorsRestored());\n\t\tthis.editorGroupService.onDidActiveGroupChange(group => this.handleActiveEditorChange(group));\n\t\tthis.editorGroupService.onDidAddGroup(group => this.registerGroupListeners(group as IEditorGroupView));\n\t}\n\n\tprivate onEditorsRestored(): void {\n\n\t\t// Register listeners to each opened group\n\t\tthis.editorGroupService.groups.forEach(group => this.registerGroupListeners(group as IEditorGroupView));\n\n\t\t// Fire initial set of editor events if there is an active editor\n\t\tif (this.activeEditor) {\n\t\t\tthis.doEmitActiveEditorChangeEvent();\n\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t}\n\t}\n\n\tprivate handleActiveEditorChange(group: IEditorGroup): void {\n\t\tif (group !== this.editorGroupService.activeGroup) {\n\t\t\treturn; // ignore if not the active group\n\t\t}\n\n\t\tif (!this.lastActiveEditor && !group.activeEditor) {\n\t\t\treturn; // ignore if we still have no active editor\n\t\t}\n\n\t\tif (this.lastActiveGroupId === group.id && this.lastActiveEditor === group.activeEditor) {\n\t\t\treturn; // ignore if the editor actually did not change\n\t\t}\n\n\t\tthis.doEmitActiveEditorChangeEvent();\n\t}\n\n\tprivate doEmitActiveEditorChangeEvent(): void {\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\tthis.lastActiveGroupId = activeGroup.id;\n\t\tthis.lastActiveEditor = activeGroup.activeEditor;\n\n\t\tthis._onDidActiveEditorChange.fire();\n\t}\n\n\tprivate registerGroupListeners(group: IEditorGroupView): void {\n\t\tconst groupDisposeables: IDisposable[] = [];\n\n\t\tgroupDisposeables.push(group.onDidGroupChange(e => {\n\t\t\tif (e.kind === GroupChangeKind.EDITOR_ACTIVE) {\n\t\t\t\tthis.handleActiveEditorChange(group);\n\t\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t\t}\n\t\t}));\n\n\t\tgroupDisposeables.push(group.onDidCloseEditor(event => {\n\t\t\tthis._onDidCloseEditor.fire(event);\n\t\t}));\n\n\t\tgroupDisposeables.push(group.onWillOpenEditor(event => {\n\t\t\tthis.onGroupWillOpenEditor(group, event);\n\t\t}));\n\n\t\tgroupDisposeables.push(group.onDidOpenEditorFail(editor => {\n\t\t\tthis._onDidOpenEditorFail.fire({ editor, groupId: group.id });\n\t\t}));\n\n\t\tEvent.once(group.onWillDispose)(() => {\n\t\t\tdispose(groupDisposeables);\n\t\t});\n\t}\n\n\tprivate onGroupWillOpenEditor(group: IEditorGroup, event: IEditorOpeningEvent): void {\n\t\tfor (const handler of this.openEditorHandlers) {\n\t\t\tconst result = handler(event.editor, event.options, group);\n\t\t\tif (result && result.override) {\n\t\t\t\tevent.prevent((() => result.override!.then(editor => withNullAsUndefined(editor))));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tget activeControl(): IVisibleEditor | undefined {\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\treturn activeGroup ? activeGroup.activeControl : undefined;\n\t}\n\n\tget activeTextEditorWidget(): ICodeEditor | IDiffEditor | undefined {\n\t\tconst activeControl = this.activeControl;\n\t\tif (activeControl) {\n\t\t\tconst activeControlWidget = activeControl.getControl();\n\t\t\tif (isCodeEditor(activeControlWidget) || isDiffEditor(activeControlWidget)) {\n\t\t\t\treturn activeControlWidget;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget editors(): IEditorInput[] {\n\t\tconst editors: IEditorInput[] = [];\n\t\tthis.editorGroupService.groups.forEach(group => {\n\t\t\teditors.push(...group.editors);\n\t\t});\n\n\t\treturn editors;\n\t}\n\n\tget activeEditor(): IEditorInput | undefined {\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\treturn activeGroup ? withNullAsUndefined(activeGroup.activeEditor) : undefined;\n\t}\n\n\tget visibleControls(): IVisibleEditor[] {\n\t\treturn coalesce(this.editorGroupService.groups.map(group => group.activeControl));\n\t}\n\n\tget visibleTextEditorWidgets(): Array<ICodeEditor | IDiffEditor> {\n\t\treturn this.visibleControls.map(control => control.getControl() as ICodeEditor | IDiffEditor).filter(widget => isCodeEditor(widget) || isDiffEditor(widget));\n\t}\n\n\tget visibleEditors(): IEditorInput[] {\n\t\treturn coalesce(this.editorGroupService.groups.map(group => group.activeEditor));\n\t}\n\n\t//#region preventOpenEditor()\n\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable {\n\t\tthis.openEditorHandlers.push(handler);\n\n\t\treturn toDisposable(() => {\n\t\t\tconst index = this.openEditorHandlers.indexOf(handler);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis.openEditorHandlers.splice(index, 1);\n\t\t\t}\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region openEditor()\n\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditor | null>;\n\topenEditor(editor: IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditor | null>;\n\topenEditor(editor: IResourceDiffInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditor | null>;\n\topenEditor(editor: IResourceSideBySideInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextSideBySideEditor | null>;\n\topenEditor(editor: IEditorInput | IResourceEditor, optionsOrGroup?: IEditorOptions | ITextEditorOptions | IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE, group?: GroupIdentifier): Promise<IEditor | null> {\n\n\t\t// Typed Editor Support\n\t\tif (editor instanceof EditorInput) {\n\t\t\tconst editorOptions = this.toOptions(optionsOrGroup as IEditorOptions);\n\t\t\tconst targetGroup = this.findTargetGroup(editor, editorOptions, group);\n\n\t\t\treturn this.doOpenEditor(targetGroup, editor, editorOptions);\n\t\t}\n\n\t\t// Untyped Text Editor Support\n\t\tconst textInput = <IResourceEditor>editor;\n\t\tconst typedInput = this.createInput(textInput);\n\t\tif (typedInput) {\n\t\t\tconst editorOptions = TextEditorOptions.from(textInput);\n\t\t\tconst targetGroup = this.findTargetGroup(typedInput, editorOptions, optionsOrGroup as IEditorGroup | GroupIdentifier);\n\n\t\t\treturn this.doOpenEditor(targetGroup, typedInput, editorOptions);\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprotected doOpenEditor(group: IEditorGroup, editor: IEditorInput, options?: IEditorOptions): Promise<IEditor | null> {\n\t\treturn group.openEditor(editor, options);\n\t}\n\n\tprivate findTargetGroup(input: IEditorInput, options?: IEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): IEditorGroup {\n\t\tlet targetGroup: IEditorGroup | undefined;\n\n\t\t// Group: Instance of Group\n\t\tif (group && typeof group !== 'number') {\n\t\t\treturn group;\n\t\t}\n\n\t\t// Group: Side by Side\n\t\tif (group === SIDE_GROUP) {\n\t\t\ttargetGroup = this.findSideBySideGroup();\n\t\t}\n\n\t\t// Group: Specific Group\n\t\telse if (typeof group === 'number' && group >= 0) {\n\t\t\ttargetGroup = this.editorGroupService.getGroup(group);\n\t\t}\n\n\t\t// Group: Unspecified without a specific index to open\n\t\telse if (!options || typeof options.index !== 'number') {\n\t\t\tconst groupsByLastActive = this.editorGroupService.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\n\t\t\t// Respect option to reveal an editor if it is already visible in any group\n\t\t\tif (options && options.revealIfVisible) {\n\t\t\t\tfor (const group of groupsByLastActive) {\n\t\t\t\t\tif (input.matches(group.activeEditor)) {\n\t\t\t\t\t\ttargetGroup = group;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Respect option to reveal an editor if it is open (not necessarily visible)\n\t\t\tif ((options && options.revealIfOpened) || this.configurationService.getValue<boolean>('workbench.editor.revealIfOpen')) {\n\t\t\t\tfor (const group of groupsByLastActive) {\n\t\t\t\t\tif (group.isOpened(input)) {\n\t\t\t\t\t\ttargetGroup = group;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Fallback to active group if target not valid\n\t\tif (!targetGroup) {\n\t\t\ttargetGroup = this.editorGroupService.activeGroup;\n\t\t}\n\n\t\treturn targetGroup;\n\t}\n\n\tprivate findSideBySideGroup(): IEditorGroup {\n\t\tconst direction = preferredSideBySideGroupDirection(this.configurationService);\n\n\t\tlet neighbourGroup = this.editorGroupService.findGroup({ direction });\n\t\tif (!neighbourGroup) {\n\t\t\tneighbourGroup = this.editorGroupService.addGroup(this.editorGroupService.activeGroup, direction);\n\t\t}\n\n\t\treturn neighbourGroup;\n\t}\n\n\tprivate toOptions(options?: IEditorOptions | EditorOptions): EditorOptions {\n\t\tif (!options || options instanceof EditorOptions) {\n\t\t\treturn options as EditorOptions;\n\t\t}\n\n\t\tconst textOptions: ITextEditorOptions = options;\n\t\tif (!!textOptions.selection) {\n\t\t\treturn TextEditorOptions.create(options);\n\t\t}\n\n\t\treturn EditorOptions.create(options);\n\t}\n\n\t//#endregion\n\n\t//#region openEditors()\n\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditor[]>;\n\topenEditors(editors: IResourceEditor[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditor[]>;\n\topenEditors(editors: Array<IEditorInputWithOptions | IResourceEditor>, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditor[]> {\n\n\t\t// Convert to typed editors and options\n\t\tconst typedEditors: IEditorInputWithOptions[] = [];\n\t\teditors.forEach(editor => {\n\t\t\tif (isEditorInputWithOptions(editor)) {\n\t\t\t\ttypedEditors.push(editor);\n\t\t\t} else {\n\t\t\t\ttypedEditors.push({ editor: this.createInput(editor), options: TextEditorOptions.from(editor) });\n\t\t\t}\n\t\t});\n\n\t\t// Find target groups to open\n\t\tconst mapGroupToEditors = new Map<IEditorGroup, IEditorInputWithOptions[]>();\n\t\tif (group === SIDE_GROUP) {\n\t\t\tmapGroupToEditors.set(this.findSideBySideGroup(), typedEditors);\n\t\t} else {\n\t\t\ttypedEditors.forEach(typedEditor => {\n\t\t\t\tconst targetGroup = this.findTargetGroup(typedEditor.editor, typedEditor.options, group);\n\n\t\t\t\tlet targetGroupEditors = mapGroupToEditors.get(targetGroup);\n\t\t\t\tif (!targetGroupEditors) {\n\t\t\t\t\ttargetGroupEditors = [];\n\t\t\t\t\tmapGroupToEditors.set(targetGroup, targetGroupEditors);\n\t\t\t\t}\n\n\t\t\t\ttargetGroupEditors.push(typedEditor);\n\t\t\t});\n\t\t}\n\n\t\t// Open in targets\n\t\tconst result: Promise<IEditor | null>[] = [];\n\t\tmapGroupToEditors.forEach((editorsWithOptions, group) => {\n\t\t\tresult.push(group.openEditors(editorsWithOptions));\n\t\t});\n\n\t\treturn Promise.all(result).then(editors => coalesce(editors));\n\t}\n\n\t//#endregion\n\n\t//#region isOpen()\n\n\tisOpen(editor: IEditorInput | IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier): boolean {\n\t\treturn !!this.doGetOpened(editor);\n\t}\n\n\t//#endregion\n\n\t//#region getOpend()\n\n\tgetOpened(editor: IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier): IEditorInput | undefined {\n\t\treturn this.doGetOpened(editor);\n\t}\n\n\tprivate doGetOpened(editor: IEditorInput | IResourceInput | IUntitledResourceInput, group?: IEditorGroup | GroupIdentifier): IEditorInput | undefined {\n\t\tif (!(editor instanceof EditorInput)) {\n\t\t\tconst resourceInput = editor as IResourceInput | IUntitledResourceInput;\n\t\t\tif (!resourceInput.resource) {\n\t\t\t\treturn undefined; // we need a resource at least\n\t\t\t}\n\t\t}\n\n\t\tlet groups: IEditorGroup[] = [];\n\t\tif (typeof group === 'number') {\n\t\t\tconst groupView = this.editorGroupService.getGroup(group);\n\t\t\tif (groupView) {\n\t\t\t\tgroups.push(groupView);\n\t\t\t}\n\t\t} else if (group) {\n\t\t\tgroups.push(group);\n\t\t} else {\n\t\t\tgroups = [...this.editorGroupService.groups];\n\t\t}\n\n\t\t// For each editor group\n\t\tfor (const group of groups) {\n\n\t\t\t// Typed editor\n\t\t\tif (editor instanceof EditorInput) {\n\t\t\t\tif (group.isOpened(editor)) {\n\t\t\t\t\treturn editor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Resource editor\n\t\t\telse {\n\t\t\t\tfor (const editorInGroup of group.editors) {\n\t\t\t\t\tconst resource = toResource(editorInGroup, { supportSideBySide: true });\n\t\t\t\t\tif (!resource) {\n\t\t\t\t\t\tcontinue; // need a resource to compare with\n\t\t\t\t\t}\n\n\t\t\t\t\tconst resourceInput = editor as IResourceInput | IUntitledResourceInput;\n\t\t\t\t\tif (resourceInput.resource && resource.toString() === resourceInput.resource.toString()) {\n\t\t\t\t\t\treturn editorInGroup;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t//#endregion\n\n\t//#region replaceEditors()\n\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: Array<IEditorReplacement | IResourceEditorReplacement>, group: IEditorGroup | GroupIdentifier): Promise<void> {\n\t\tconst typedEditors: IEditorReplacement[] = [];\n\n\t\teditors.forEach(replaceEditorArg => {\n\t\t\tif (replaceEditorArg.editor instanceof EditorInput) {\n\t\t\t\ttypedEditors.push(replaceEditorArg as IEditorReplacement);\n\t\t\t} else {\n\t\t\t\tconst editor = replaceEditorArg.editor as IResourceEditor;\n\t\t\t\tconst typedEditor = this.createInput(editor);\n\t\t\t\tconst replacementEditor = this.createInput(replaceEditorArg.replacement as IResourceEditor);\n\n\t\t\t\ttypedEditors.push({\n\t\t\t\t\teditor: typedEditor,\n\t\t\t\t\treplacement: replacementEditor,\n\t\t\t\t\toptions: this.toOptions(editor.options)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst targetGroup = typeof group === 'number' ? this.editorGroupService.getGroup(group) : group;\n\t\tif (targetGroup) {\n\t\t\treturn targetGroup.replaceEditors(typedEditors);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t//#endregion\n\n\t//#region invokeWithinEditorContext()\n\n\tinvokeWithinEditorContext<T>(fn: (accessor: ServicesAccessor) => T): T {\n\t\tconst activeTextEditorWidget = this.activeTextEditorWidget;\n\t\tif (isCodeEditor(activeTextEditorWidget)) {\n\t\t\treturn activeTextEditorWidget.invokeWithinContext(fn);\n\t\t}\n\n\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\t\tif (activeGroup) {\n\t\t\treturn activeGroup.invokeWithinContext(fn);\n\t\t}\n\n\t\treturn this.instantiationService.invokeFunction(fn);\n\t}\n\n\t//#endregion\n\n\t//#region createInput()\n\n\tcreateInput(input: IEditorInputWithOptions | IEditorInput | IResourceEditor): EditorInput {\n\n\t\t// Typed Editor Input Support (EditorInput)\n\t\tif (input instanceof EditorInput) {\n\t\t\treturn input;\n\t\t}\n\n\t\t// Typed Editor Input Support (IEditorInputWithOptions)\n\t\tconst editorInputWithOptions = input as IEditorInputWithOptions;\n\t\tif (editorInputWithOptions.editor instanceof EditorInput) {\n\t\t\treturn editorInputWithOptions.editor;\n\t\t}\n\n\t\t// Side by Side Support\n\t\tconst resourceSideBySideInput = <IResourceSideBySideInput>input;\n\t\tif (resourceSideBySideInput.masterResource && resourceSideBySideInput.detailResource) {\n\t\t\tconst masterInput = this.createInput({ resource: resourceSideBySideInput.masterResource, forceFile: resourceSideBySideInput.forceFile });\n\t\t\tconst detailInput = this.createInput({ resource: resourceSideBySideInput.detailResource, forceFile: resourceSideBySideInput.forceFile });\n\t\t\tconst label = resourceSideBySideInput.label || masterInput.getName() || localize('sideBySideLabels', \"{0} - {1}\", this.toDiffLabel(masterInput), this.toDiffLabel(detailInput));\n\n\t\t\treturn new SideBySideEditorInput(\n\t\t\t\tlabel,\n\t\t\t\ttypeof resourceSideBySideInput.description === 'string' ? resourceSideBySideInput.description : masterInput.getDescription(),\n\t\t\t\tdetailInput,\n\t\t\t\tmasterInput\n\t\t\t);\n\t\t}\n\n\t\t// Diff Editor Support\n\t\tconst resourceDiffInput = <IResourceDiffInput>input;\n\t\tif (resourceDiffInput.leftResource && resourceDiffInput.rightResource) {\n\t\t\tconst leftInput = this.createInput({ resource: resourceDiffInput.leftResource, forceFile: resourceDiffInput.forceFile });\n\t\t\tconst rightInput = this.createInput({ resource: resourceDiffInput.rightResource, forceFile: resourceDiffInput.forceFile });\n\t\t\tconst label = resourceDiffInput.label || localize('compareLabels', \"{0} ↔ {1}\", this.toDiffLabel(leftInput), this.toDiffLabel(rightInput));\n\n\t\t\treturn new DiffEditorInput(label, withUndefinedAsNull(resourceDiffInput.description), leftInput, rightInput);\n\t\t}\n\n\t\t// Untitled file support\n\t\tconst untitledInput = <IUntitledResourceInput>input;\n\t\tif (!untitledInput.resource || typeof untitledInput.filePath === 'string' || (untitledInput.resource instanceof URI && untitledInput.resource.scheme === Schemas.untitled)) {\n\t\t\treturn this.untitledEditorService.createOrGet(\n\t\t\t\tuntitledInput.filePath ? URI.file(untitledInput.filePath) : untitledInput.resource,\n\t\t\t\tuntitledInput.language,\n\t\t\t\tuntitledInput.contents,\n\t\t\t\tuntitledInput.encoding\n\t\t\t);\n\t\t}\n\n\t\t// Resource Editor Support\n\t\tconst resourceInput = <IResourceInput>input;\n\t\tif (resourceInput.resource instanceof URI) {\n\t\t\tlet label = resourceInput.label;\n\t\t\tif (!label && resourceInput.resource.scheme !== Schemas.data) {\n\t\t\t\tlabel = basename(resourceInput.resource); // derive the label from the path (but not for data URIs)\n\t\t\t}\n\n\t\t\treturn this.createOrGet(resourceInput.resource, this.instantiationService, label, resourceInput.description, resourceInput.encoding, resourceInput.forceFile) as EditorInput;\n\t\t}\n\n\t\tthrow new Error('Unknown input type');\n\t}\n\n\tprivate createOrGet(resource: URI, instantiationService: IInstantiationService, label: string | undefined, description: string | undefined, encoding: string | undefined, forceFile: boolean | undefined): ICachedEditorInput {\n\t\tif (EditorService.CACHE.has(resource)) {\n\t\t\tconst input = EditorService.CACHE.get(resource)!;\n\t\t\tif (input instanceof ResourceEditorInput) {\n\t\t\t\tif (label) {\n\t\t\t\t\tinput.setName(label);\n\t\t\t\t}\n\n\t\t\t\tif (description) {\n\t\t\t\t\tinput.setDescription(description);\n\t\t\t\t}\n\t\t\t} else if (!(input instanceof DataUriEditorInput)) {\n\t\t\t\tif (encoding) {\n\t\t\t\t\tinput.setPreferredEncoding(encoding);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn input;\n\t\t}\n\n\t\tlet input: ICachedEditorInput;\n\n\t\t// File\n\t\tif (forceFile /* fix for https://github.com/Microsoft/vscode/issues/48275 */ || this.fileService.canHandleResource(resource)) {\n\t\t\tinput = this.fileInputFactory.createFileInput(resource, encoding, instantiationService);\n\t\t}\n\n\t\t// Data URI\n\t\telse if (resource.scheme === Schemas.data) {\n\t\t\tinput = instantiationService.createInstance(DataUriEditorInput, label, description, resource);\n\t\t}\n\n\t\t// Resource\n\t\telse {\n\t\t\tinput = instantiationService.createInstance(ResourceEditorInput, label, description, resource);\n\t\t}\n\n\t\tEditorService.CACHE.set(resource, input);\n\t\tEvent.once(input.onDispose)(() => {\n\t\t\tEditorService.CACHE.delete(resource);\n\t\t});\n\n\t\treturn input;\n\t}\n\n\tprivate toDiffLabel(input: EditorInput): string | null {\n\t\tconst res = input.getResource();\n\t\tif (!res) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Do not try to extract any paths from simple untitled editors\n\t\tif (res.scheme === Schemas.untitled && !this.untitledEditorService.hasAssociatedFilePath(res)) {\n\t\t\treturn input.getName();\n\t\t}\n\n\t\t// Otherwise: for diff labels prefer to see the path as part of the label\n\t\treturn this.labelService.getUriLabel(res, { relative: true });\n\t}\n\n\t//#endregion\n}\n\nexport interface IEditorOpenHandler {\n\t(group: IEditorGroup, editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions): Promise<IEditor | null>;\n}\n\n/**\n * The delegating workbench editor service can be used to override the behaviour of the openEditor()\n * method by providing a IEditorOpenHandler.\n */\nexport class DelegatingEditorService extends EditorService {\n\tprivate editorOpenHandler: IEditorOpenHandler;\n\n\tconstructor(\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IUntitledEditorService untitledEditorService: IUntitledEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(\n\t\t\teditorGroupService,\n\t\t\tuntitledEditorService,\n\t\t\tinstantiationService,\n\t\t\tlabelService,\n\t\t\tfileService,\n\t\t\tconfigurationService\n\t\t);\n\t}\n\n\tsetEditorOpenHandler(handler: IEditorOpenHandler): void {\n\t\tthis.editorOpenHandler = handler;\n\t}\n\n\tprotected doOpenEditor(group: IEditorGroup, editor: IEditorInput, options?: IEditorOptions): Promise<IEditor | null> {\n\t\tif (!this.editorOpenHandler) {\n\t\t\treturn super.doOpenEditor(group, editor, options);\n\t\t}\n\n\t\treturn this.editorOpenHandler(group, editor, options).then(control => {\n\t\t\tif (control) {\n\t\t\t\treturn control; // the opening was handled, so return early\n\t\t\t}\n\n\t\t\treturn super.doOpenEditor(group, editor, options);\n\t\t});\n\t}\n}\n\nregisterSingleton(IEditorService, EditorService);"]}]}