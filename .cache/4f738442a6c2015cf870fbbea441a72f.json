{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true}!/home/coding/workspace/packages/protocol/src/node/modules/net.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/node/modules/net.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net = require(\"net\");\nconst stream_1 = require(\"./stream\");\n// tslint:disable completed-docs\nclass NetSocketProxy extends stream_1.DuplexProxy {\n    async connect(options, host) {\n        this.stream.connect(options, host); // tslint:disable-line no-any this works fine\n    }\n    async unref() {\n        this.stream.unref();\n    }\n    async ref() {\n        this.stream.ref();\n    }\n    async dispose() {\n        this.stream.removeAllListeners();\n        this.stream.end();\n        this.stream.destroy();\n        this.stream.unref();\n    }\n    async onDone(cb) {\n        this.stream.on(\"close\", cb);\n    }\n    // tslint:disable-next-line no-any\n    async onEvent(cb) {\n        await super.onEvent(cb);\n        this.stream.on(\"connect\", () => cb(\"connect\"));\n        this.stream.on(\"lookup\", (error, address, family, host) => cb(\"lookup\", error, address, family, host));\n        this.stream.on(\"timeout\", () => cb(\"timeout\"));\n    }\n}\nexports.NetSocketProxy = NetSocketProxy;\nclass NetServerProxy {\n    constructor(server) {\n        this.server = server;\n    }\n    async listen(handle, hostname, backlog) {\n        this.server.listen(handle, hostname, backlog); // tslint:disable-line no-any this is fine\n    }\n    async ref() {\n        this.server.ref();\n    }\n    async unref() {\n        this.server.unref();\n    }\n    async close() {\n        this.server.close();\n    }\n    async onConnection(cb) {\n        this.server.on(\"connection\", (socket) => cb(new NetSocketProxy(socket)));\n    }\n    async dispose() {\n        this.server.close();\n        this.server.removeAllListeners();\n    }\n    async onDone(cb) {\n        this.server.on(\"close\", cb);\n    }\n    // tslint:disable-next-line no-any\n    async onEvent(cb) {\n        this.server.on(\"close\", () => cb(\"close\"));\n        this.server.on(\"error\", (error) => cb(\"error\", error));\n        this.server.on(\"listening\", () => cb(\"listening\"));\n    }\n}\nexports.NetServerProxy = NetServerProxy;\nclass NetModuleProxy {\n    async createSocket(options) {\n        return new NetSocketProxy(new net.Socket(options));\n    }\n    async createConnection(target, host) {\n        return new NetSocketProxy(net.createConnection(target, host)); // tslint:disable-line no-any defeat stubborness\n    }\n    async createServer(options) {\n        return new NetServerProxy(net.createServer(options));\n    }\n}\nexports.NetModuleProxy = NetModuleProxy;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/node/modules/net.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/node/modules/net.ts"],"names":[],"mappings":"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","sourcesContent":["import * as net from \"net\";\nimport { ServerProxy } from \"../../common/proxy\";\nimport { DuplexProxy } from \"./stream\";\n\n// tslint:disable completed-docs\n\nexport class NetSocketProxy extends DuplexProxy<net.Socket> {\n\tpublic async connect(options: number | string | net.SocketConnectOpts, host?: string): Promise<void> {\n\t\tthis.stream.connect(options as any, host as any); // tslint:disable-line no-any this works fine\n\t}\n\n\tpublic async unref(): Promise<void> {\n\t\tthis.stream.unref();\n\t}\n\n\tpublic async ref(): Promise<void> {\n\t\tthis.stream.ref();\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\tthis.stream.removeAllListeners();\n\t\tthis.stream.end();\n\t\tthis.stream.destroy();\n\t\tthis.stream.unref();\n\t}\n\n\tpublic async onDone(cb: () => void): Promise<void> {\n\t\tthis.stream.on(\"close\", cb);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async onEvent(cb: (event: string, ...args: any[]) => void): Promise<void> {\n\t\tawait super.onEvent(cb);\n\t\tthis.stream.on(\"connect\", () => cb(\"connect\"));\n\t\tthis.stream.on(\"lookup\", (error, address, family, host) => cb(\"lookup\", error, address, family, host));\n\t\tthis.stream.on(\"timeout\", () => cb(\"timeout\"));\n\t}\n}\n\nexport class NetServerProxy implements ServerProxy {\n\tpublic constructor(private readonly server: net.Server) {}\n\n\tpublic async listen(handle?: net.ListenOptions | number | string, hostname?: string | number, backlog?: number): Promise<void> {\n\t\tthis.server.listen(handle, hostname as any, backlog as any); // tslint:disable-line no-any this is fine\n\t}\n\n\tpublic async ref(): Promise<void> {\n\t\tthis.server.ref();\n\t}\n\n\tpublic async unref(): Promise<void> {\n\t\tthis.server.unref();\n\t}\n\n\tpublic async close(): Promise<void> {\n\t\tthis.server.close();\n\t}\n\n\tpublic async onConnection(cb: (proxy: NetSocketProxy) => void): Promise<void> {\n\t\tthis.server.on(\"connection\", (socket) => cb(new NetSocketProxy(socket)));\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\tthis.server.close();\n\t\tthis.server.removeAllListeners();\n\t}\n\n\tpublic async onDone(cb: () => void): Promise<void> {\n\t\tthis.server.on(\"close\", cb);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async onEvent(cb: (event: string, ...args: any[]) => void): Promise<void> {\n\t\tthis.server.on(\"close\", () => cb(\"close\"));\n\t\tthis.server.on(\"error\", (error) => cb(\"error\", error));\n\t\tthis.server.on(\"listening\", () => cb(\"listening\"));\n\t}\n}\n\nexport class NetModuleProxy {\n\tpublic async createSocket(options?: net.SocketConstructorOpts): Promise<NetSocketProxy> {\n\t\treturn new NetSocketProxy(new net.Socket(options));\n\t}\n\n\tpublic async createConnection(target: string | number | net.NetConnectOpts, host?: string): Promise<NetSocketProxy> {\n\t\treturn new NetSocketProxy(net.createConnection(target as any, host)); // tslint:disable-line no-any defeat stubborness\n\t}\n\n\tpublic async createServer(options?: { allowHalfOpen?: boolean, pauseOnConnect?: boolean }): Promise<NetServerProxy> {\n\t\treturn new NetServerProxy(net.createServer(options));\n\t}\n}\n"]}]}