{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/keybinding/common/macLinuxFallbackKeyboardMapper.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/keybinding/common/macLinuxFallbackKeyboardMapper.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar scanCode_1 = require(\"vs/base/common/scanCode\");\nvar usLayoutResolvedKeybinding_1 = require(\"vs/platform/keybinding/common/usLayoutResolvedKeybinding\");\nvar resolvedKeybindingItem_1 = require(\"vs/platform/keybinding/common/resolvedKeybindingItem\");\n/**\n * A keyboard mapper to be used when reading the keymap from the OS fails.\n */\nvar MacLinuxFallbackKeyboardMapper = /** @class */ (function () {\n    function MacLinuxFallbackKeyboardMapper(OS) {\n        this._OS = OS;\n    }\n    MacLinuxFallbackKeyboardMapper.prototype.dumpDebugInfo = function () {\n        return 'FallbackKeyboardMapper dispatching on keyCode';\n    };\n    MacLinuxFallbackKeyboardMapper.prototype.resolveKeybinding = function (keybinding) {\n        return [new usLayoutResolvedKeybinding_1.USLayoutResolvedKeybinding(keybinding, this._OS)];\n    };\n    MacLinuxFallbackKeyboardMapper.prototype.resolveKeyboardEvent = function (keyboardEvent) {\n        var keybinding = new keyCodes_1.SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode);\n        return new usLayoutResolvedKeybinding_1.USLayoutResolvedKeybinding(keybinding.toChord(), this._OS);\n    };\n    MacLinuxFallbackKeyboardMapper.prototype._scanCodeToKeyCode = function (scanCode) {\n        var immutableKeyCode = scanCode_1.IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n        if (immutableKeyCode !== -1) {\n            return immutableKeyCode;\n        }\n        switch (scanCode) {\n            case scanCode_1.ScanCode.KeyA: return keyCodes_1.KeyCode.KEY_A;\n            case scanCode_1.ScanCode.KeyB: return keyCodes_1.KeyCode.KEY_B;\n            case scanCode_1.ScanCode.KeyC: return keyCodes_1.KeyCode.KEY_C;\n            case scanCode_1.ScanCode.KeyD: return keyCodes_1.KeyCode.KEY_D;\n            case scanCode_1.ScanCode.KeyE: return keyCodes_1.KeyCode.KEY_E;\n            case scanCode_1.ScanCode.KeyF: return keyCodes_1.KeyCode.KEY_F;\n            case scanCode_1.ScanCode.KeyG: return keyCodes_1.KeyCode.KEY_G;\n            case scanCode_1.ScanCode.KeyH: return keyCodes_1.KeyCode.KEY_H;\n            case scanCode_1.ScanCode.KeyI: return keyCodes_1.KeyCode.KEY_I;\n            case scanCode_1.ScanCode.KeyJ: return keyCodes_1.KeyCode.KEY_J;\n            case scanCode_1.ScanCode.KeyK: return keyCodes_1.KeyCode.KEY_K;\n            case scanCode_1.ScanCode.KeyL: return keyCodes_1.KeyCode.KEY_L;\n            case scanCode_1.ScanCode.KeyM: return keyCodes_1.KeyCode.KEY_M;\n            case scanCode_1.ScanCode.KeyN: return keyCodes_1.KeyCode.KEY_N;\n            case scanCode_1.ScanCode.KeyO: return keyCodes_1.KeyCode.KEY_O;\n            case scanCode_1.ScanCode.KeyP: return keyCodes_1.KeyCode.KEY_P;\n            case scanCode_1.ScanCode.KeyQ: return keyCodes_1.KeyCode.KEY_Q;\n            case scanCode_1.ScanCode.KeyR: return keyCodes_1.KeyCode.KEY_R;\n            case scanCode_1.ScanCode.KeyS: return keyCodes_1.KeyCode.KEY_S;\n            case scanCode_1.ScanCode.KeyT: return keyCodes_1.KeyCode.KEY_T;\n            case scanCode_1.ScanCode.KeyU: return keyCodes_1.KeyCode.KEY_U;\n            case scanCode_1.ScanCode.KeyV: return keyCodes_1.KeyCode.KEY_V;\n            case scanCode_1.ScanCode.KeyW: return keyCodes_1.KeyCode.KEY_W;\n            case scanCode_1.ScanCode.KeyX: return keyCodes_1.KeyCode.KEY_X;\n            case scanCode_1.ScanCode.KeyY: return keyCodes_1.KeyCode.KEY_Y;\n            case scanCode_1.ScanCode.KeyZ: return keyCodes_1.KeyCode.KEY_Z;\n            case scanCode_1.ScanCode.Digit1: return keyCodes_1.KeyCode.KEY_1;\n            case scanCode_1.ScanCode.Digit2: return keyCodes_1.KeyCode.KEY_2;\n            case scanCode_1.ScanCode.Digit3: return keyCodes_1.KeyCode.KEY_3;\n            case scanCode_1.ScanCode.Digit4: return keyCodes_1.KeyCode.KEY_4;\n            case scanCode_1.ScanCode.Digit5: return keyCodes_1.KeyCode.KEY_5;\n            case scanCode_1.ScanCode.Digit6: return keyCodes_1.KeyCode.KEY_6;\n            case scanCode_1.ScanCode.Digit7: return keyCodes_1.KeyCode.KEY_7;\n            case scanCode_1.ScanCode.Digit8: return keyCodes_1.KeyCode.KEY_8;\n            case scanCode_1.ScanCode.Digit9: return keyCodes_1.KeyCode.KEY_9;\n            case scanCode_1.ScanCode.Digit0: return keyCodes_1.KeyCode.KEY_0;\n            case scanCode_1.ScanCode.Minus: return keyCodes_1.KeyCode.US_MINUS;\n            case scanCode_1.ScanCode.Equal: return keyCodes_1.KeyCode.US_EQUAL;\n            case scanCode_1.ScanCode.BracketLeft: return keyCodes_1.KeyCode.US_OPEN_SQUARE_BRACKET;\n            case scanCode_1.ScanCode.BracketRight: return keyCodes_1.KeyCode.US_CLOSE_SQUARE_BRACKET;\n            case scanCode_1.ScanCode.Backslash: return keyCodes_1.KeyCode.US_BACKSLASH;\n            case scanCode_1.ScanCode.IntlHash: return keyCodes_1.KeyCode.Unknown; // missing\n            case scanCode_1.ScanCode.Semicolon: return keyCodes_1.KeyCode.US_SEMICOLON;\n            case scanCode_1.ScanCode.Quote: return keyCodes_1.KeyCode.US_QUOTE;\n            case scanCode_1.ScanCode.Backquote: return keyCodes_1.KeyCode.US_BACKTICK;\n            case scanCode_1.ScanCode.Comma: return keyCodes_1.KeyCode.US_COMMA;\n            case scanCode_1.ScanCode.Period: return keyCodes_1.KeyCode.US_DOT;\n            case scanCode_1.ScanCode.Slash: return keyCodes_1.KeyCode.US_SLASH;\n            case scanCode_1.ScanCode.IntlBackslash: return keyCodes_1.KeyCode.OEM_102;\n        }\n        return keyCodes_1.KeyCode.Unknown;\n    };\n    MacLinuxFallbackKeyboardMapper.prototype._resolveSimpleUserBinding = function (binding) {\n        if (!binding) {\n            return null;\n        }\n        if (binding instanceof keyCodes_1.SimpleKeybinding) {\n            return binding;\n        }\n        var keyCode = this._scanCodeToKeyCode(binding.scanCode);\n        if (keyCode === keyCodes_1.KeyCode.Unknown) {\n            return null;\n        }\n        return new keyCodes_1.SimpleKeybinding(binding.ctrlKey, binding.shiftKey, binding.altKey, binding.metaKey, keyCode);\n    };\n    MacLinuxFallbackKeyboardMapper.prototype.resolveUserBinding = function (input) {\n        var _this = this;\n        var parts = resolvedKeybindingItem_1.removeElementsAfterNulls(input.map(function (keybinding) { return _this._resolveSimpleUserBinding(keybinding); }));\n        if (parts.length > 0) {\n            return [new usLayoutResolvedKeybinding_1.USLayoutResolvedKeybinding(new keyCodes_1.ChordKeybinding(parts), this._OS)];\n        }\n        return [];\n    };\n    return MacLinuxFallbackKeyboardMapper;\n}());\nexports.MacLinuxFallbackKeyboardMapper = MacLinuxFallbackKeyboardMapper;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/keybinding/common/macLinuxFallbackKeyboardMapper.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/keybinding/common/macLinuxFallbackKeyboardMapper.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,oDAAqH;AAErH,oDAAgG;AAEhG,uGAAsG;AAEtG,+FAAgG;AAEhG;;GAEG;AACH;IAOC,wCAAY,EAAmB;QAC9B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IACf,CAAC;IAEM,sDAAa,GAApB;QACC,OAAO,+CAA+C,CAAC;IACxD,CAAC;IAEM,0DAAiB,GAAxB,UAAyB,UAAsB;QAC9C,OAAO,CAAC,IAAI,uDAA0B,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEM,6DAAoB,GAA3B,UAA4B,aAA6B;QACxD,IAAI,UAAU,GAAG,IAAI,2BAAgB,CACpC,aAAa,CAAC,OAAO,EACrB,aAAa,CAAC,QAAQ,EACtB,aAAa,CAAC,MAAM,EACpB,aAAa,CAAC,OAAO,EACrB,aAAa,CAAC,OAAO,CACrB,CAAC;QACF,OAAO,IAAI,uDAA0B,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACvE,CAAC;IAEO,2DAAkB,GAA1B,UAA2B,QAAkB;QAC5C,IAAM,gBAAgB,GAAG,qCAA0B,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;YAC5B,OAAO,gBAAgB,CAAC;SACxB;QAED,QAAQ,QAAQ,EAAE;YACjB,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,kBAAO,CAAC,KAAK,CAAC;YACzC,KAAK,mBAAQ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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChordKeybinding, KeyCode, Keybinding, ResolvedKeybinding, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IMMUTABLE_CODE_TO_KEY_CODE, ScanCode, ScanCodeBinding } from 'vs/base/common/scanCode';\nimport { IKeyboardEvent } from 'vs/platform/keybinding/common/keybinding';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { IKeyboardMapper } from 'vs/workbench/services/keybinding/common/keyboardMapper';\nimport { removeElementsAfterNulls } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\n\n/**\n * A keyboard mapper to be used when reading the keymap from the OS fails.\n */\nexport class MacLinuxFallbackKeyboardMapper implements IKeyboardMapper {\n\n\t/**\n\t * OS (can be Linux or Macintosh)\n\t */\n\tprivate readonly _OS: OperatingSystem;\n\n\tconstructor(OS: OperatingSystem) {\n\t\tthis._OS = OS;\n\t}\n\n\tpublic dumpDebugInfo(): string {\n\t\treturn 'FallbackKeyboardMapper dispatching on keyCode';\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn [new USLayoutResolvedKeybinding(keybinding, this._OS)];\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tlet keybinding = new SimpleKeybinding(\n\t\t\tkeyboardEvent.ctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\tkeyboardEvent.altKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\treturn new USLayoutResolvedKeybinding(keybinding.toChord(), this._OS);\n\t}\n\n\tprivate _scanCodeToKeyCode(scanCode: ScanCode): KeyCode {\n\t\tconst immutableKeyCode = IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n\t\tif (immutableKeyCode !== -1) {\n\t\t\treturn immutableKeyCode;\n\t\t}\n\n\t\tswitch (scanCode) {\n\t\t\tcase ScanCode.KeyA: return KeyCode.KEY_A;\n\t\t\tcase ScanCode.KeyB: return KeyCode.KEY_B;\n\t\t\tcase ScanCode.KeyC: return KeyCode.KEY_C;\n\t\t\tcase ScanCode.KeyD: return KeyCode.KEY_D;\n\t\t\tcase ScanCode.KeyE: return KeyCode.KEY_E;\n\t\t\tcase ScanCode.KeyF: return KeyCode.KEY_F;\n\t\t\tcase ScanCode.KeyG: return KeyCode.KEY_G;\n\t\t\tcase ScanCode.KeyH: return KeyCode.KEY_H;\n\t\t\tcase ScanCode.KeyI: return KeyCode.KEY_I;\n\t\t\tcase ScanCode.KeyJ: return KeyCode.KEY_J;\n\t\t\tcase ScanCode.KeyK: return KeyCode.KEY_K;\n\t\t\tcase ScanCode.KeyL: return KeyCode.KEY_L;\n\t\t\tcase ScanCode.KeyM: return KeyCode.KEY_M;\n\t\t\tcase ScanCode.KeyN: return KeyCode.KEY_N;\n\t\t\tcase ScanCode.KeyO: return KeyCode.KEY_O;\n\t\t\tcase ScanCode.KeyP: return KeyCode.KEY_P;\n\t\t\tcase ScanCode.KeyQ: return KeyCode.KEY_Q;\n\t\t\tcase ScanCode.KeyR: return KeyCode.KEY_R;\n\t\t\tcase ScanCode.KeyS: return KeyCode.KEY_S;\n\t\t\tcase ScanCode.KeyT: return KeyCode.KEY_T;\n\t\t\tcase ScanCode.KeyU: return KeyCode.KEY_U;\n\t\t\tcase ScanCode.KeyV: return KeyCode.KEY_V;\n\t\t\tcase ScanCode.KeyW: return KeyCode.KEY_W;\n\t\t\tcase ScanCode.KeyX: return KeyCode.KEY_X;\n\t\t\tcase ScanCode.KeyY: return KeyCode.KEY_Y;\n\t\t\tcase ScanCode.KeyZ: return KeyCode.KEY_Z;\n\t\t\tcase ScanCode.Digit1: return KeyCode.KEY_1;\n\t\t\tcase ScanCode.Digit2: return KeyCode.KEY_2;\n\t\t\tcase ScanCode.Digit3: return KeyCode.KEY_3;\n\t\t\tcase ScanCode.Digit4: return KeyCode.KEY_4;\n\t\t\tcase ScanCode.Digit5: return KeyCode.KEY_5;\n\t\t\tcase ScanCode.Digit6: return KeyCode.KEY_6;\n\t\t\tcase ScanCode.Digit7: return KeyCode.KEY_7;\n\t\t\tcase ScanCode.Digit8: return KeyCode.KEY_8;\n\t\t\tcase ScanCode.Digit9: return KeyCode.KEY_9;\n\t\t\tcase ScanCode.Digit0: return KeyCode.KEY_0;\n\t\t\tcase ScanCode.Minus: return KeyCode.US_MINUS;\n\t\t\tcase ScanCode.Equal: return KeyCode.US_EQUAL;\n\t\t\tcase ScanCode.BracketLeft: return KeyCode.US_OPEN_SQUARE_BRACKET;\n\t\t\tcase ScanCode.BracketRight: return KeyCode.US_CLOSE_SQUARE_BRACKET;\n\t\t\tcase ScanCode.Backslash: return KeyCode.US_BACKSLASH;\n\t\t\tcase ScanCode.IntlHash: return KeyCode.Unknown; // missing\n\t\t\tcase ScanCode.Semicolon: return KeyCode.US_SEMICOLON;\n\t\t\tcase ScanCode.Quote: return KeyCode.US_QUOTE;\n\t\t\tcase ScanCode.Backquote: return KeyCode.US_BACKTICK;\n\t\t\tcase ScanCode.Comma: return KeyCode.US_COMMA;\n\t\t\tcase ScanCode.Period: return KeyCode.US_DOT;\n\t\t\tcase ScanCode.Slash: return KeyCode.US_SLASH;\n\t\t\tcase ScanCode.IntlBackslash: return KeyCode.OEM_102;\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n\n\tprivate _resolveSimpleUserBinding(binding: SimpleKeybinding | ScanCodeBinding | null): SimpleKeybinding | null {\n\t\tif (!binding) {\n\t\t\treturn null;\n\t\t}\n\t\tif (binding instanceof SimpleKeybinding) {\n\t\t\treturn binding;\n\t\t}\n\t\tconst keyCode = this._scanCodeToKeyCode(binding.scanCode);\n\t\tif (keyCode === KeyCode.Unknown) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new SimpleKeybinding(binding.ctrlKey, binding.shiftKey, binding.altKey, binding.metaKey, keyCode);\n\t}\n\n\tpublic resolveUserBinding(input: (SimpleKeybinding | ScanCodeBinding)[]): ResolvedKeybinding[] {\n\t\tconst parts: SimpleKeybinding[] = removeElementsAfterNulls(input.map(keybinding => this._resolveSimpleUserBinding(keybinding)));\n\t\tif (parts.length > 0) {\n\t\t\treturn [new USLayoutResolvedKeybinding(new ChordKeybinding(parts), this._OS)];\n\t\t}\n\t\treturn [];\n\t}\n}\n"]}]}