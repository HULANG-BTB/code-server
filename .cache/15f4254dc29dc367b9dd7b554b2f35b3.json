{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordContextKey.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordContextKey.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar WordContextKey = /** @class */ (function () {\n    function WordContextKey(_editor, contextKeyService) {\n        var _this = this;\n        this._editor = _editor;\n        this._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\n        this._confListener = this._editor.onDidChangeConfiguration(function (e) { return e.contribInfo && _this._update(); });\n        this._update();\n    }\n    WordContextKey.prototype.dispose = function () {\n        lifecycle_1.dispose(this._confListener, this._selectionListener);\n        this._ckAtEnd.reset();\n    };\n    WordContextKey.prototype._update = function () {\n        var _this = this;\n        // only update this when tab completions are enabled\n        var enabled = this._editor.getConfiguration().contribInfo.tabCompletion === 'on';\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            var checkForWordEnd = function () {\n                if (!_this._editor.hasModel()) {\n                    _this._ckAtEnd.set(false);\n                    return;\n                }\n                var model = _this._editor.getModel();\n                var selection = _this._editor.getSelection();\n                var word = model.getWordAtPosition(selection.getStartPosition());\n                if (!word) {\n                    _this._ckAtEnd.set(false);\n                    return;\n                }\n                _this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\n            };\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\n            checkForWordEnd();\n        }\n        else if (this._selectionListener) {\n            this._ckAtEnd.reset();\n            this._selectionListener.dispose();\n            this._selectionListener = undefined;\n        }\n    };\n    WordContextKey.AtEnd = new contextkey_1.RawContextKey('atEndOfWord', false);\n    WordContextKey = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService)\n    ], WordContextKey);\n    return WordContextKey;\n}());\nexports.WordContextKey = WordContextKey;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordContextKey.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordContextKey.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,uEAA0G;AAC1G,sDAAgE;AAGhE;IAUC,wBACkB,OAAoB,EACjB,iBAAqC;QAF1D,iBAOC;QANiB,YAAO,GAAP,OAAO,CAAa;QAGrC,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,IAAI,KAAI,CAAC,OAAO,EAAE,EAA/B,CAA+B,CAAC,CAAC;QACjG,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,gCAAO,GAAP;QACC,mBAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAEO,gCAAO,GAAf;QAAA,iBA+BC;QA9BA,oDAAoD;QACpD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,aAAa,KAAK,IAAI,CAAC;QACnF,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC9B,OAAO;SACP;QACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAM,eAAe,GAAG;gBACvB,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;oBAC7B,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACzB,OAAO;iBACP;gBACD,IAAM,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACtC,IAAM,SAAS,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC9C,IAAM,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBACnE,IAAI,CAAC,IAAI,EAAE;oBACV,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACzB,OAAO;iBACP;gBACD,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC;YAC3E,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;YACnF,eAAe,EAAE,CAAC;SAElB;aAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;SACpC;IACF,CAAC;IArDe,oBAAK,GAAG,IAAI,0BAAa,CAAU,aAAa,EAAE,KAAK,CAAC,CAAC;IAF7D,cAAc;QAYxB,mBAAA,+BAAkB,CAAA;OAZR,cAAc,CAwD1B;IAAD,qBAAC;CAAA,AAxDD,IAwDC;AAxDY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey, IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\n\nexport class WordContextKey {\n\n\tstatic readonly AtEnd = new RawContextKey<boolean>('atEndOfWord', false);\n\n\tprivate readonly _ckAtEnd: IContextKey<boolean>;\n\tprivate readonly _confListener: IDisposable;\n\n\tprivate _enabled: boolean;\n\tprivate _selectionListener?: IDisposable;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tthis._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\n\t\tthis._confListener = this._editor.onDidChangeConfiguration(e => e.contribInfo && this._update());\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._confListener, this._selectionListener);\n\t\tthis._ckAtEnd.reset();\n\t}\n\n\tprivate _update(): void {\n\t\t// only update this when tab completions are enabled\n\t\tconst enabled = this._editor.getConfiguration().contribInfo.tabCompletion === 'on';\n\t\tif (this._enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._enabled = enabled;\n\n\t\tif (this._enabled) {\n\t\t\tconst checkForWordEnd = () => {\n\t\t\t\tif (!this._editor.hasModel()) {\n\t\t\t\t\tthis._ckAtEnd.set(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst model = this._editor.getModel();\n\t\t\t\tconst selection = this._editor.getSelection();\n\t\t\t\tconst word = model.getWordAtPosition(selection.getStartPosition());\n\t\t\t\tif (!word) {\n\t\t\t\t\tthis._ckAtEnd.set(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\n\t\t\t};\n\t\t\tthis._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\n\t\t\tcheckForWordEnd();\n\n\t\t} else if (this._selectionListener) {\n\t\t\tthis._ckAtEnd.reset();\n\t\t\tthis._selectionListener.dispose();\n\t\t\tthis._selectionListener = undefined;\n\t\t}\n\t}\n}\n"]}]}