{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeImpl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeImpl.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./tree\");\nvar TreeDefaults = require(\"vs/base/parts/tree/browser/treeDefaults\");\nvar Model = require(\"vs/base/parts/tree/browser/treeModel\");\nvar View = require(\"./treeView\");\nvar iterator_1 = require(\"vs/base/common/iterator\");\nvar event_1 = require(\"vs/base/common/event\");\nvar color_1 = require(\"vs/base/common/color\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar TreeContext = /** @class */ (function () {\n    function TreeContext(tree, configuration, options) {\n        if (options === void 0) { options = {}; }\n        this.tree = tree;\n        this.configuration = configuration;\n        this.options = options;\n        if (!configuration.dataSource) {\n            throw new Error('You must provide a Data Source to the tree.');\n        }\n        this.dataSource = configuration.dataSource;\n        this.renderer = configuration.renderer;\n        this.controller = configuration.controller || new TreeDefaults.DefaultController({ clickBehavior: TreeDefaults.ClickBehavior.ON_MOUSE_UP, keyboardSupport: typeof options.keyboardSupport !== 'boolean' || options.keyboardSupport });\n        this.dnd = configuration.dnd || new TreeDefaults.DefaultDragAndDrop();\n        this.filter = configuration.filter || new TreeDefaults.DefaultFilter();\n        this.sorter = configuration.sorter;\n        this.accessibilityProvider = configuration.accessibilityProvider || new TreeDefaults.DefaultAccessibilityProvider();\n        this.styler = configuration.styler;\n    }\n    return TreeContext;\n}());\nexports.TreeContext = TreeContext;\nvar defaultStyles = {\n    listFocusBackground: color_1.Color.fromHex('#073655'),\n    listActiveSelectionBackground: color_1.Color.fromHex('#0E639C'),\n    listActiveSelectionForeground: color_1.Color.fromHex('#FFFFFF'),\n    listFocusAndSelectionBackground: color_1.Color.fromHex('#094771'),\n    listFocusAndSelectionForeground: color_1.Color.fromHex('#FFFFFF'),\n    listInactiveSelectionBackground: color_1.Color.fromHex('#3F3F46'),\n    listHoverBackground: color_1.Color.fromHex('#2A2D2E'),\n    listDropBackground: color_1.Color.fromHex('#383B3D')\n};\nvar Tree = /** @class */ (function () {\n    function Tree(container, configuration, options) {\n        if (options === void 0) { options = {}; }\n        this._onDidChangeFocus = new event_1.Relay();\n        this.onDidChangeFocus = this._onDidChangeFocus.event;\n        this._onDidChangeSelection = new event_1.Relay();\n        this.onDidChangeSelection = this._onDidChangeSelection.event;\n        this._onHighlightChange = new event_1.Relay();\n        this.onDidChangeHighlight = this._onHighlightChange.event;\n        this._onDidExpandItem = new event_1.Relay();\n        this.onDidExpandItem = this._onDidExpandItem.event;\n        this._onDidCollapseItem = new event_1.Relay();\n        this.onDidCollapseItem = this._onDidCollapseItem.event;\n        this._onDispose = new event_1.Emitter();\n        this.onDidDispose = this._onDispose.event;\n        this.container = container;\n        objects_1.mixin(options, defaultStyles, false);\n        options.twistiePixels = typeof options.twistiePixels === 'number' ? options.twistiePixels : 32;\n        options.showTwistie = options.showTwistie === false ? false : true;\n        options.indentPixels = typeof options.indentPixels === 'number' ? options.indentPixels : 12;\n        options.alwaysFocused = options.alwaysFocused === true ? true : false;\n        options.useShadows = options.useShadows === false ? false : true;\n        options.paddingOnRow = options.paddingOnRow === false ? false : true;\n        options.showLoading = options.showLoading === false ? false : true;\n        this.context = new TreeContext(this, configuration, options);\n        this.model = new Model.TreeModel(this.context);\n        this.view = new View.TreeView(this.context, this.container);\n        this.view.setModel(this.model);\n        this._onDidChangeFocus.input = this.model.onDidFocus;\n        this._onDidChangeSelection.input = this.model.onDidSelect;\n        this._onHighlightChange.input = this.model.onDidHighlight;\n        this._onDidExpandItem.input = this.model.onDidExpandItem;\n        this._onDidCollapseItem.input = this.model.onDidCollapseItem;\n    }\n    Tree.prototype.style = function (styles) {\n        this.view.applyStyles(styles);\n    };\n    Object.defineProperty(Tree.prototype, \"onDidFocus\", {\n        get: function () {\n            return this.view && this.view.onDOMFocus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"onDidBlur\", {\n        get: function () {\n            return this.view && this.view.onDOMBlur;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"onDidScroll\", {\n        get: function () {\n            return this.view && this.view.onDidScroll;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.getHTMLElement = function () {\n        return this.view.getHTMLElement();\n    };\n    Tree.prototype.layout = function (height, width) {\n        this.view.layout(height, width);\n    };\n    Tree.prototype.domFocus = function () {\n        this.view.focus();\n    };\n    Tree.prototype.isDOMFocused = function () {\n        return this.view.isFocused();\n    };\n    Tree.prototype.domBlur = function () {\n        this.view.blur();\n    };\n    Tree.prototype.onVisible = function () {\n        this.view.onVisible();\n    };\n    Tree.prototype.onHidden = function () {\n        this.view.onHidden();\n    };\n    Tree.prototype.setInput = function (element) {\n        return this.model.setInput(element);\n    };\n    Tree.prototype.getInput = function () {\n        return this.model.getInput();\n    };\n    Tree.prototype.refresh = function (element, recursive) {\n        if (element === void 0) { element = null; }\n        if (recursive === void 0) { recursive = true; }\n        return this.model.refresh(element, recursive);\n    };\n    Tree.prototype.expand = function (element) {\n        return this.model.expand(element);\n    };\n    Tree.prototype.expandAll = function (elements) {\n        return this.model.expandAll(elements);\n    };\n    Tree.prototype.collapse = function (element, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.model.collapse(element, recursive);\n    };\n    Tree.prototype.collapseAll = function (elements, recursive) {\n        if (elements === void 0) { elements = null; }\n        if (recursive === void 0) { recursive = false; }\n        return this.model.collapseAll(elements, recursive);\n    };\n    Tree.prototype.toggleExpansion = function (element, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.model.toggleExpansion(element, recursive);\n    };\n    Tree.prototype.toggleExpansionAll = function (elements) {\n        return this.model.toggleExpansionAll(elements);\n    };\n    Tree.prototype.isExpanded = function (element) {\n        return this.model.isExpanded(element);\n    };\n    Tree.prototype.getExpandedElements = function () {\n        return this.model.getExpandedElements();\n    };\n    Tree.prototype.reveal = function (element, relativeTop) {\n        if (relativeTop === void 0) { relativeTop = null; }\n        return this.model.reveal(element, relativeTop);\n    };\n    Tree.prototype.getRelativeTop = function (element) {\n        var item = this.model.getItem(element);\n        return item ? this.view.getRelativeTop(item) : 0;\n    };\n    Tree.prototype.getFirstVisibleElement = function () {\n        return this.view.getFirstVisibleElement();\n    };\n    Tree.prototype.getLastVisibleElement = function () {\n        return this.view.getLastVisibleElement();\n    };\n    Tree.prototype.getScrollPosition = function () {\n        return this.view.getScrollPosition();\n    };\n    Tree.prototype.setScrollPosition = function (pos) {\n        this.view.setScrollPosition(pos);\n    };\n    Tree.prototype.getContentHeight = function () {\n        return this.view.getContentHeight();\n    };\n    Tree.prototype.setHighlight = function (element, eventPayload) {\n        this.model.setHighlight(element, eventPayload);\n    };\n    Tree.prototype.getHighlight = function () {\n        return this.model.getHighlight();\n    };\n    Tree.prototype.clearHighlight = function (eventPayload) {\n        this.model.setHighlight(null, eventPayload);\n    };\n    Tree.prototype.setSelection = function (elements, eventPayload) {\n        this.model.setSelection(elements, eventPayload);\n    };\n    Tree.prototype.getSelection = function () {\n        return this.model.getSelection();\n    };\n    Tree.prototype.clearSelection = function (eventPayload) {\n        this.model.setSelection([], eventPayload);\n    };\n    Tree.prototype.setFocus = function (element, eventPayload) {\n        this.model.setFocus(element, eventPayload);\n    };\n    Tree.prototype.getFocus = function () {\n        return this.model.getFocus();\n    };\n    Tree.prototype.focusNext = function (count, eventPayload) {\n        this.model.focusNext(count, eventPayload);\n    };\n    Tree.prototype.focusPrevious = function (count, eventPayload) {\n        this.model.focusPrevious(count, eventPayload);\n    };\n    Tree.prototype.focusParent = function (eventPayload) {\n        this.model.focusParent(eventPayload);\n    };\n    Tree.prototype.focusFirstChild = function (eventPayload) {\n        this.model.focusFirstChild(eventPayload);\n    };\n    Tree.prototype.focusFirst = function (eventPayload, from) {\n        this.model.focusFirst(eventPayload, from);\n    };\n    Tree.prototype.focusNth = function (index, eventPayload) {\n        this.model.focusNth(index, eventPayload);\n    };\n    Tree.prototype.focusLast = function (eventPayload, from) {\n        this.model.focusLast(eventPayload, from);\n    };\n    Tree.prototype.focusNextPage = function (eventPayload) {\n        this.view.focusNextPage(eventPayload);\n    };\n    Tree.prototype.focusPreviousPage = function (eventPayload) {\n        this.view.focusPreviousPage(eventPayload);\n    };\n    Tree.prototype.clearFocus = function (eventPayload) {\n        this.model.setFocus(null, eventPayload);\n    };\n    Tree.prototype.getNavigator = function (fromElement, subTreeOnly) {\n        return new iterator_1.MappedNavigator(this.model.getNavigator(fromElement, subTreeOnly), function (i) { return i && i.getElement(); });\n    };\n    Tree.prototype.dispose = function () {\n        this._onDispose.fire();\n        if (this.model !== null) {\n            this.model.dispose();\n            this.model = null; // StrictNullOverride Nulling out ok in dispose\n        }\n        if (this.view !== null) {\n            this.view.dispose();\n            this.view = null; // StrictNullOverride Nulling out ok in dispose\n        }\n        this._onDidChangeFocus.dispose();\n        this._onDidChangeSelection.dispose();\n        this._onHighlightChange.dispose();\n        this._onDidExpandItem.dispose();\n        this._onDidCollapseItem.dispose();\n        this._onDispose.dispose();\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeImpl.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./tree';\nimport * as TreeDefaults from 'vs/base/parts/tree/browser/treeDefaults';\nimport * as Model from 'vs/base/parts/tree/browser/treeModel';\nimport * as View from './treeView';\nimport * as _ from 'vs/base/parts/tree/browser/tree';\nimport { INavigator, MappedNavigator } from 'vs/base/common/iterator';\nimport { Event, Emitter, Relay } from 'vs/base/common/event';\nimport { Color } from 'vs/base/common/color';\nimport { mixin } from 'vs/base/common/objects';\n\nexport class TreeContext implements _.ITreeContext {\n\n\tpublic tree: _.ITree;\n\tpublic configuration: _.ITreeConfiguration;\n\tpublic options: _.ITreeOptions;\n\n\tpublic dataSource: _.IDataSource;\n\tpublic renderer?: _.IRenderer;\n\tpublic controller: _.IController;\n\tpublic dnd: _.IDragAndDrop;\n\tpublic filter: _.IFilter;\n\tpublic sorter?: _.ISorter;\n\tpublic accessibilityProvider: _.IAccessibilityProvider;\n\tpublic styler?: _.ITreeStyler;\n\n\tconstructor(tree: _.ITree, configuration: _.ITreeConfiguration, options: _.ITreeOptions = {}) {\n\t\tthis.tree = tree;\n\t\tthis.configuration = configuration;\n\t\tthis.options = options;\n\n\t\tif (!configuration.dataSource) {\n\t\t\tthrow new Error('You must provide a Data Source to the tree.');\n\t\t}\n\n\t\tthis.dataSource = configuration.dataSource;\n\t\tthis.renderer = configuration.renderer;\n\t\tthis.controller = configuration.controller || new TreeDefaults.DefaultController({ clickBehavior: TreeDefaults.ClickBehavior.ON_MOUSE_UP, keyboardSupport: typeof options.keyboardSupport !== 'boolean' || options.keyboardSupport });\n\t\tthis.dnd = configuration.dnd || new TreeDefaults.DefaultDragAndDrop();\n\t\tthis.filter = configuration.filter || new TreeDefaults.DefaultFilter();\n\t\tthis.sorter = configuration.sorter;\n\t\tthis.accessibilityProvider = configuration.accessibilityProvider || new TreeDefaults.DefaultAccessibilityProvider();\n\t\tthis.styler = configuration.styler;\n\t}\n}\n\nconst defaultStyles: _.ITreeStyles = {\n\tlistFocusBackground: Color.fromHex('#073655'),\n\tlistActiveSelectionBackground: Color.fromHex('#0E639C'),\n\tlistActiveSelectionForeground: Color.fromHex('#FFFFFF'),\n\tlistFocusAndSelectionBackground: Color.fromHex('#094771'),\n\tlistFocusAndSelectionForeground: Color.fromHex('#FFFFFF'),\n\tlistInactiveSelectionBackground: Color.fromHex('#3F3F46'),\n\tlistHoverBackground: Color.fromHex('#2A2D2E'),\n\tlistDropBackground: Color.fromHex('#383B3D')\n};\n\nexport class Tree implements _.ITree {\n\n\tprivate container: HTMLElement;\n\n\tprivate context: _.ITreeContext;\n\tprivate model: Model.TreeModel;\n\tprivate view: View.TreeView;\n\n\tprivate _onDidChangeFocus = new Relay<_.IFocusEvent>();\n\treadonly onDidChangeFocus: Event<_.IFocusEvent> = this._onDidChangeFocus.event;\n\tprivate _onDidChangeSelection = new Relay<_.ISelectionEvent>();\n\treadonly onDidChangeSelection: Event<_.ISelectionEvent> = this._onDidChangeSelection.event;\n\tprivate _onHighlightChange = new Relay<_.IHighlightEvent>();\n\treadonly onDidChangeHighlight: Event<_.IHighlightEvent> = this._onHighlightChange.event;\n\tprivate _onDidExpandItem = new Relay<Model.IItemExpandEvent>();\n\treadonly onDidExpandItem: Event<Model.IItemExpandEvent> = this._onDidExpandItem.event;\n\tprivate _onDidCollapseItem = new Relay<Model.IItemCollapseEvent>();\n\treadonly onDidCollapseItem: Event<Model.IItemCollapseEvent> = this._onDidCollapseItem.event;\n\tprivate _onDispose = new Emitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDispose.event;\n\n\tconstructor(container: HTMLElement, configuration: _.ITreeConfiguration, options: _.ITreeOptions = {}) {\n\t\tthis.container = container;\n\t\tmixin(options, defaultStyles, false);\n\n\t\toptions.twistiePixels = typeof options.twistiePixels === 'number' ? options.twistiePixels : 32;\n\t\toptions.showTwistie = options.showTwistie === false ? false : true;\n\t\toptions.indentPixels = typeof options.indentPixels === 'number' ? options.indentPixels : 12;\n\t\toptions.alwaysFocused = options.alwaysFocused === true ? true : false;\n\t\toptions.useShadows = options.useShadows === false ? false : true;\n\t\toptions.paddingOnRow = options.paddingOnRow === false ? false : true;\n\t\toptions.showLoading = options.showLoading === false ? false : true;\n\n\t\tthis.context = new TreeContext(this, configuration, options);\n\t\tthis.model = new Model.TreeModel(this.context);\n\t\tthis.view = new View.TreeView(this.context, this.container);\n\n\t\tthis.view.setModel(this.model);\n\n\t\tthis._onDidChangeFocus.input = this.model.onDidFocus;\n\t\tthis._onDidChangeSelection.input = this.model.onDidSelect;\n\t\tthis._onHighlightChange.input = this.model.onDidHighlight;\n\t\tthis._onDidExpandItem.input = this.model.onDidExpandItem;\n\t\tthis._onDidCollapseItem.input = this.model.onDidCollapseItem;\n\t}\n\n\tpublic style(styles: _.ITreeStyles): void {\n\t\tthis.view.applyStyles(styles);\n\t}\n\n\tget onDidFocus(): Event<void> {\n\t\treturn this.view && this.view.onDOMFocus;\n\t}\n\n\tget onDidBlur(): Event<void> {\n\t\treturn this.view && this.view.onDOMBlur;\n\t}\n\n\tget onDidScroll(): Event<void> {\n\t\treturn this.view && this.view.onDidScroll;\n\t}\n\n\tpublic getHTMLElement(): HTMLElement {\n\t\treturn this.view.getHTMLElement();\n\t}\n\n\tpublic layout(height?: number, width?: number): void {\n\t\tthis.view.layout(height, width);\n\t}\n\n\tpublic domFocus(): void {\n\t\tthis.view.focus();\n\t}\n\n\tpublic isDOMFocused(): boolean {\n\t\treturn this.view.isFocused();\n\t}\n\n\tpublic domBlur(): void {\n\t\tthis.view.blur();\n\t}\n\n\tpublic onVisible(): void {\n\t\tthis.view.onVisible();\n\t}\n\n\tpublic onHidden(): void {\n\t\tthis.view.onHidden();\n\t}\n\n\tpublic setInput(element: any): Promise<any> {\n\t\treturn this.model.setInput(element);\n\t}\n\n\tpublic getInput(): any {\n\t\treturn this.model.getInput();\n\t}\n\n\tpublic refresh(element: any = null, recursive = true): Promise<any> {\n\t\treturn this.model.refresh(element, recursive);\n\t}\n\n\tpublic expand(element: any): Promise<any> {\n\t\treturn this.model.expand(element);\n\t}\n\n\tpublic expandAll(elements: any[]): Promise<any> {\n\t\treturn this.model.expandAll(elements);\n\t}\n\n\tpublic collapse(element: any, recursive: boolean = false): Promise<any> {\n\t\treturn this.model.collapse(element, recursive);\n\t}\n\n\tpublic collapseAll(elements: any[] | null = null, recursive: boolean = false): Promise<any> {\n\t\treturn this.model.collapseAll(elements, recursive);\n\t}\n\n\tpublic toggleExpansion(element: any, recursive: boolean = false): Promise<any> {\n\t\treturn this.model.toggleExpansion(element, recursive);\n\t}\n\n\tpublic toggleExpansionAll(elements: any[]): Promise<any> {\n\t\treturn this.model.toggleExpansionAll(elements);\n\t}\n\n\tpublic isExpanded(element: any): boolean {\n\t\treturn this.model.isExpanded(element);\n\t}\n\n\tpublic getExpandedElements(): any[] {\n\t\treturn this.model.getExpandedElements();\n\t}\n\n\tpublic reveal(element: any, relativeTop: number | null = null): Promise<any> {\n\t\treturn this.model.reveal(element, relativeTop);\n\t}\n\n\tpublic getRelativeTop(element: any): number {\n\t\tconst item = this.model.getItem(element);\n\t\treturn item ? this.view.getRelativeTop(item) : 0;\n\t}\n\n\tpublic getFirstVisibleElement(): any {\n\t\treturn this.view.getFirstVisibleElement();\n\t}\n\n\tpublic getLastVisibleElement(): any {\n\t\treturn this.view.getLastVisibleElement();\n\t}\n\n\tpublic getScrollPosition(): number {\n\t\treturn this.view.getScrollPosition();\n\t}\n\n\tpublic setScrollPosition(pos: number): void {\n\t\tthis.view.setScrollPosition(pos);\n\t}\n\n\tgetContentHeight(): number {\n\t\treturn this.view.getContentHeight();\n\t}\n\n\tpublic setHighlight(element?: any, eventPayload?: any): void {\n\t\tthis.model.setHighlight(element, eventPayload);\n\t}\n\n\tpublic getHighlight(): any {\n\t\treturn this.model.getHighlight();\n\t}\n\n\tpublic clearHighlight(eventPayload?: any): void {\n\t\tthis.model.setHighlight(null, eventPayload);\n\t}\n\n\tpublic setSelection(elements: any[], eventPayload?: any): void {\n\t\tthis.model.setSelection(elements, eventPayload);\n\t}\n\n\tpublic getSelection(): any[] {\n\t\treturn this.model.getSelection();\n\t}\n\n\tpublic clearSelection(eventPayload?: any): void {\n\t\tthis.model.setSelection([], eventPayload);\n\t}\n\n\tpublic setFocus(element?: any, eventPayload?: any): void {\n\t\tthis.model.setFocus(element, eventPayload);\n\t}\n\n\tpublic getFocus(): any {\n\t\treturn this.model.getFocus();\n\t}\n\n\tpublic focusNext(count?: number, eventPayload?: any): void {\n\t\tthis.model.focusNext(count, eventPayload);\n\t}\n\n\tpublic focusPrevious(count?: number, eventPayload?: any): void {\n\t\tthis.model.focusPrevious(count, eventPayload);\n\t}\n\n\tpublic focusParent(eventPayload?: any): void {\n\t\tthis.model.focusParent(eventPayload);\n\t}\n\n\tpublic focusFirstChild(eventPayload?: any): void {\n\t\tthis.model.focusFirstChild(eventPayload);\n\t}\n\n\tpublic focusFirst(eventPayload?: any, from?: any): void {\n\t\tthis.model.focusFirst(eventPayload, from);\n\t}\n\n\tpublic focusNth(index: number, eventPayload?: any): void {\n\t\tthis.model.focusNth(index, eventPayload);\n\t}\n\n\tpublic focusLast(eventPayload?: any, from?: any): void {\n\t\tthis.model.focusLast(eventPayload, from);\n\t}\n\n\tpublic focusNextPage(eventPayload?: any): void {\n\t\tthis.view.focusNextPage(eventPayload);\n\t}\n\n\tpublic focusPreviousPage(eventPayload?: any): void {\n\t\tthis.view.focusPreviousPage(eventPayload);\n\t}\n\n\tpublic clearFocus(eventPayload?: any): void {\n\t\tthis.model.setFocus(null, eventPayload);\n\t}\n\n\tgetNavigator(fromElement?: any, subTreeOnly?: boolean): INavigator<any> {\n\t\treturn new MappedNavigator(this.model.getNavigator(fromElement, subTreeOnly), i => i && i.getElement());\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._onDispose.fire();\n\n\t\tif (this.model !== null) {\n\t\t\tthis.model.dispose();\n\t\t\tthis.model = null!; // StrictNullOverride Nulling out ok in dispose\n\t\t}\n\t\tif (this.view !== null) {\n\t\t\tthis.view.dispose();\n\t\t\tthis.view = null!; // StrictNullOverride Nulling out ok in dispose\n\t\t}\n\n\t\tthis._onDidChangeFocus.dispose();\n\t\tthis._onDidChangeSelection.dispose();\n\t\tthis._onHighlightChange.dispose();\n\t\tthis._onDidExpandItem.dispose();\n\t\tthis._onDidCollapseItem.dispose();\n\t\tthis._onDispose.dispose();\n\t}\n}\n"]}]}