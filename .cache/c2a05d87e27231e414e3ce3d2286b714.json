{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionDevOptions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionDevOptions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/network\"], function (require, exports, network_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function parseExtensionDevOptions(environmentService) {\n        // handle extension host lifecycle a bit special when we know we are developing an extension that runs inside\n        let isExtensionDevHost = environmentService.isExtensionDevelopment;\n        const extDevLoc = environmentService.extensionDevelopmentLocationURI;\n        const debugOk = !extDevLoc || extDevLoc.scheme === network_1.Schemas.file;\n        let isExtensionDevDebug = debugOk && typeof environmentService.debugExtensionHost.port === 'number';\n        let isExtensionDevDebugBrk = debugOk && !!environmentService.debugExtensionHost.break;\n        let isExtensionDevTestFromCli = isExtensionDevHost && !!environmentService.extensionTestsLocationURI && !environmentService.debugExtensionHost.break;\n        return {\n            isExtensionDevHost,\n            isExtensionDevDebug,\n            isExtensionDevDebugBrk,\n            isExtensionDevTestFromCli,\n        };\n    }\n    exports.parseExtensionDevOptions = parseExtensionDevOptions;\n});\n",null]}