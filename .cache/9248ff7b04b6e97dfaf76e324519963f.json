{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/bracketMatching/bracketMatching.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/bracketMatching/bracketMatching.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./bracketMatching\");\nvar nls = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar selection_1 = require(\"vs/editor/common/core/selection\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar editorColorRegistry_1 = require(\"vs/editor/common/view/editorColorRegistry\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar overviewRulerBracketMatchForeground = colorRegistry_1.registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\nvar JumpToBracketAction = /** @class */ (function (_super) {\n    tslib_1.__extends(JumpToBracketAction, _super);\n    function JumpToBracketAction() {\n        return _super.call(this, {\n            id: 'editor.action.jumpToBracket',\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n            alias: 'Go to Bracket',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.US_BACKSLASH,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    JumpToBracketAction.prototype.run = function (accessor, editor) {\n        var controller = BracketMatchingController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.jumpToBracket();\n    };\n    return JumpToBracketAction;\n}(editorExtensions_1.EditorAction));\nvar SelectToBracketAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SelectToBracketAction, _super);\n    function SelectToBracketAction() {\n        return _super.call(this, {\n            id: 'editor.action.selectToBracket',\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n            alias: 'Select to Bracket',\n            precondition: null\n        }) || this;\n    }\n    SelectToBracketAction.prototype.run = function (accessor, editor) {\n        var controller = BracketMatchingController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.selectToBracket();\n    };\n    return SelectToBracketAction;\n}(editorExtensions_1.EditorAction));\nvar BracketsData = /** @class */ (function () {\n    function BracketsData(position, brackets) {\n        this.position = position;\n        this.brackets = brackets;\n    }\n    return BracketsData;\n}());\nvar BracketMatchingController = /** @class */ (function (_super) {\n    tslib_1.__extends(BracketMatchingController, _super);\n    function BracketMatchingController(editor) {\n        var _this = _super.call(this) || this;\n        _this._editor = editor;\n        _this._lastBracketsData = [];\n        _this._lastVersionId = 0;\n        _this._decorations = [];\n        _this._updateBracketsSoon = _this._register(new async_1.RunOnceScheduler(function () { return _this._updateBrackets(); }, 50));\n        _this._matchBrackets = _this._editor.getConfiguration().contribInfo.matchBrackets;\n        _this._updateBracketsSoon.schedule();\n        _this._register(editor.onDidChangeCursorPosition(function (e) {\n            if (!_this._matchBrackets) {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            _this._updateBracketsSoon.schedule();\n        }));\n        _this._register(editor.onDidChangeModelContent(function (e) {\n            _this._updateBracketsSoon.schedule();\n        }));\n        _this._register(editor.onDidChangeModel(function (e) {\n            _this._lastBracketsData = [];\n            _this._decorations = [];\n            _this._updateBracketsSoon.schedule();\n        }));\n        _this._register(editor.onDidChangeModelLanguageConfiguration(function (e) {\n            _this._lastBracketsData = [];\n            _this._updateBracketsSoon.schedule();\n        }));\n        _this._register(editor.onDidChangeConfiguration(function (e) {\n            _this._matchBrackets = _this._editor.getConfiguration().contribInfo.matchBrackets;\n            if (!_this._matchBrackets && _this._decorations.length > 0) {\n                // Remove existing decorations if bracket matching is off\n                _this._decorations = _this._editor.deltaDecorations(_this._decorations, []);\n            }\n            _this._updateBracketsSoon.schedule();\n        }));\n        return _this;\n    }\n    BracketMatchingController.get = function (editor) {\n        return editor.getContribution(BracketMatchingController.ID);\n    };\n    BracketMatchingController.prototype.getId = function () {\n        return BracketMatchingController.ID;\n    };\n    BracketMatchingController.prototype.jumpToBracket = function () {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var model = this._editor.getModel();\n        var newSelections = this._editor.getSelections().map(function (selection) {\n            var position = selection.getStartPosition();\n            // find matching brackets if position is on a bracket\n            var brackets = model.matchBracket(position);\n            var newCursorPosition = null;\n            if (brackets) {\n                if (brackets[0].containsPosition(position)) {\n                    newCursorPosition = brackets[1].getStartPosition();\n                }\n                else if (brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[0].getStartPosition();\n                }\n            }\n            else {\n                // find the next bracket if the position isn't on a matching bracket\n                var nextBracket = model.findNextBracket(position);\n                if (nextBracket && nextBracket.range) {\n                    newCursorPosition = nextBracket.range.getStartPosition();\n                }\n            }\n            if (newCursorPosition) {\n                return new selection_1.Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n            }\n            return new selection_1.Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n        });\n        this._editor.setSelections(newSelections);\n        this._editor.revealRange(newSelections[0]);\n    };\n    BracketMatchingController.prototype.selectToBracket = function () {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var model = this._editor.getModel();\n        var newSelections = [];\n        this._editor.getSelections().forEach(function (selection) {\n            var position = selection.getStartPosition();\n            var brackets = model.matchBracket(position);\n            var openBracket = null;\n            var closeBracket = null;\n            if (!brackets) {\n                var nextBracket = model.findNextBracket(position);\n                if (nextBracket && nextBracket.range) {\n                    brackets = model.matchBracket(nextBracket.range.getStartPosition());\n                }\n            }\n            if (brackets) {\n                if (brackets[0].startLineNumber === brackets[1].startLineNumber) {\n                    openBracket = brackets[1].startColumn < brackets[0].startColumn ?\n                        brackets[1].getStartPosition() : brackets[0].getStartPosition();\n                    closeBracket = brackets[1].startColumn < brackets[0].startColumn ?\n                        brackets[0].getEndPosition() : brackets[1].getEndPosition();\n                }\n                else {\n                    openBracket = brackets[1].startLineNumber < brackets[0].startLineNumber ?\n                        brackets[1].getStartPosition() : brackets[0].getStartPosition();\n                    closeBracket = brackets[1].startLineNumber < brackets[0].startLineNumber ?\n                        brackets[0].getEndPosition() : brackets[1].getEndPosition();\n                }\n            }\n            if (openBracket && closeBracket) {\n                newSelections.push(new selection_1.Selection(openBracket.lineNumber, openBracket.column, closeBracket.lineNumber, closeBracket.column));\n            }\n        });\n        if (newSelections.length > 0) {\n            this._editor.setSelections(newSelections);\n            this._editor.revealRange(newSelections[0]);\n        }\n    };\n    BracketMatchingController.prototype._updateBrackets = function () {\n        if (!this._matchBrackets) {\n            return;\n        }\n        this._recomputeBrackets();\n        var newDecorations = [], newDecorationsLen = 0;\n        for (var i = 0, len = this._lastBracketsData.length; i < len; i++) {\n            var brackets = this._lastBracketsData[i].brackets;\n            if (brackets) {\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: BracketMatchingController._DECORATION_OPTIONS };\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: BracketMatchingController._DECORATION_OPTIONS };\n            }\n        }\n        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\n    };\n    BracketMatchingController.prototype._recomputeBrackets = function () {\n        if (!this._editor.hasModel()) {\n            // no model => no brackets!\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        var model = this._editor.getModel();\n        var versionId = model.getVersionId();\n        var previousData = [];\n        if (this._lastVersionId === versionId) {\n            // use the previous data only if the model is at the same version id\n            previousData = this._lastBracketsData;\n        }\n        var selections = this._editor.getSelections();\n        var positions = [], positionsLen = 0;\n        for (var i = 0, len = selections.length; i < len; i++) {\n            var selection = selections[i];\n            if (selection.isEmpty()) {\n                // will bracket match a cursor only if the selection is collapsed\n                positions[positionsLen++] = selection.getStartPosition();\n            }\n        }\n        // sort positions for `previousData` cache hits\n        if (positions.length > 1) {\n            positions.sort(position_1.Position.compare);\n        }\n        var newData = [], newDataLen = 0;\n        var previousIndex = 0, previousLen = previousData.length;\n        for (var i = 0, len = positions.length; i < len; i++) {\n            var position = positions[i];\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n                previousIndex++;\n            }\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n                newData[newDataLen++] = previousData[previousIndex];\n            }\n            else {\n                var brackets = model.matchBracket(position);\n                newData[newDataLen++] = new BracketsData(position, brackets);\n            }\n        }\n        this._lastBracketsData = newData;\n        this._lastVersionId = versionId;\n    };\n    BracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\n    BracketMatchingController._DECORATION_OPTIONS = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'bracket-match',\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(overviewRulerBracketMatchForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    return BracketMatchingController;\n}(lifecycle_1.Disposable));\nexports.BracketMatchingController = BracketMatchingController;\neditorExtensions_1.registerEditorContribution(BracketMatchingController);\neditorExtensions_1.registerEditorAction(SelectToBracketAction);\neditorExtensions_1.registerEditorAction(JumpToBracketAction);\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var bracketMatchBackground = theme.getColor(editorColorRegistry_1.editorBracketMatchBackground);\n    if (bracketMatchBackground) {\n        collector.addRule(\".monaco-editor .bracket-match { background-color: \" + bracketMatchBackground + \"; }\");\n    }\n    var bracketMatchBorder = theme.getColor(editorColorRegistry_1.editorBracketMatchBorder);\n    if (bracketMatchBorder) {\n        collector.addRule(\".monaco-editor .bracket-match { border: 1px solid \" + bracketMatchBorder + \"; }\");\n    }\n});\n// Go to menu\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarGoMenu, {\n    group: '5_infile_nav',\n    command: {\n        id: 'editor.action.jumpToBracket',\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n    },\n    order: 2\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/bracketMatching/bracketMatching.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/bracketMatching/bracketMatching.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,oCAAkC;AAClC,4BAA8B;AAC9B,8CAAwD;AACxD,oDAA0D;AAC1D,sDAAsD;AAEtD,uEAAsI;AACtI,2DAA0D;AAE1D,6DAA4D;AAE5D,wEAAuE;AACvE,gDAA0G;AAC1G,8DAA0E;AAC1E,iFAAmH;AACnH,yFAAqF;AACrF,wEAAuE;AACvE,sEAAqG;AACrG,8DAA0E;AAE1E,IAAM,mCAAmC,GAAG,6BAAa,CAAC,4CAA4C,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,qCAAqC,EAAE,oDAAoD,CAAC,CAAC,CAAC;AAEzQ;IAAkC,+CAAY;IAC7C;eACC,kBAAM;YACL,EAAE,EAAE,6BAA6B;YACjC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,eAAe,CAAC;YAC/D,KAAK,EAAE,eAAe;YACtB,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE;gBACP,MAAM,EAAE,qCAAiB,CAAC,eAAe;gBACzC,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,KAAK,GAAG,kBAAO,CAAC,YAAY;gBAC7D,MAAM,EAAE,sCAAgB,CAAC,aAAa;aACtC;SACD,CAAC;IACH,CAAC;IAEM,iCAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,IAAI,UAAU,GAAG,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE;YAChB,OAAO;SACP;QACD,UAAU,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IACF,0BAAC;AAAD,CAAC,AAtBD,CAAkC,+BAAY,GAsB7C;AAED;IAAoC,iDAAY;IAC/C;eACC,kBAAM;YACL,EAAE,EAAE,+BAA+B;YACnC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,6BAA6B,EAAE,mBAAmB,CAAC;YACvE,KAAK,EAAE,mBAAmB;YAC1B,YAAY,EAAE,IAAI;SAClB,CAAC;IACH,CAAC;IAEM,mCAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,IAAI,UAAU,GAAG,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE;YAChB,OAAO;SACP;QACD,UAAU,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IACF,4BAAC;AAAD,CAAC,AAjBD,CAAoC,+BAAY,GAiB/C;AAID;IAIC,sBAAY,QAAkB,EAAE,QAAyB;QACxD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IACF,mBAAC;AAAD,CAAC,AARD,IAQC;AAED;IAA+C,qDAAU;IAexD,mCACC,MAAmB;QADpB,YAGC,iBAAO,SAuCP;QAtCA,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,wBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,EAAE,EAAE,CAAC,CAAC,CAAC;QAClG,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC;QAEhF,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACpC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,yBAAyB,CAAC,UAAC,CAAC;YAEjD,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;gBACzB,0CAA0C;gBAC1C,8GAA8G;gBAC9G,OAAO;aACP;YAED,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;QACJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,UAAC,CAAC;YAC/C,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;QACJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAC,CAAC;YACxC,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;QACJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qCAAqC,CAAC,UAAC,CAAC;YAC7D,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;QACJ,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAC,CAAC;YAChD,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC;YAChF,IAAI,CAAC,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzD,yDAAyD;gBACzD,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;aACzE;YACD,KAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;;IACL,CAAC;IAtDa,6BAAG,GAAjB,UAAkB,MAAmB;QACpC,OAAO,MAAM,CAAC,eAAe,CAA4B,yBAAyB,CAAC,EAAE,CAAC,CAAC;IACxF,CAAC;IAsDM,yCAAK,GAAZ;QACC,OAAO,yBAAyB,CAAC,EAAE,CAAC;IACrC,CAAC;IAEM,iDAAa,GAApB;QACC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;YAC7B,OAAO;SACP;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,UAAA,SAAS;YAC/D,IAAM,QAAQ,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;YAE9C,qDAAqD;YACrD,IAAM,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,iBAAiB,GAAoB,IAAI,CAAC;YAC9C,IAAI,QAAQ,EAAE;gBACb,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;oBAC3C,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;iBACnD;qBAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;oBAClD,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;iBACnD;aACD;iBAAM;gBACN,oEAAoE;gBACpE,IAAM,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBACpD,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;oBACrC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;iBACzD;aACD;YAED,IAAI,iBAAiB,EAAE;gBACtB,OAAO,IAAI,qBAAS,CAAC,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,MAAM,EAAE,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;aACrI;YACD,OAAO,IAAI,qBAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEM,mDAAe,GAAtB;QACC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;YAC7B,OAAO;SACP;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAM,aAAa,GAAgB,EAAE,CAAC;QAEtC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,UAAA,SAAS;YAC7C,IAAM,QAAQ,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;YAC9C,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,WAAW,GAAoB,IAAI,CAAC;YACxC,IAAI,YAAY,GAAoB,IAAI,CAAC;YAEzC,IAAI,CAAC,QAAQ,EAAE;gBACd,IAAM,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBACpD,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;oBACrC,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;iBACpE;aACD;YAED,IAAI,QAAQ,EAAE;gBACb,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE;oBAChE,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;wBAChE,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;oBACjE,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;wBACjE,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;iBAC7D;qBAAM;oBACN,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;wBACxE,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;oBACjE,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;wBACzE,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;iBAC7D;aACD;YAED,IAAI,WAAW,IAAI,YAAY,EAAE;gBAChC,aAAa,CAAC,IAAI,CAAC,IAAI,qBAAS,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5H;QACF,CAAC,CAAC,CAAC;QAGH,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3C;IACF,CAAC;IAYO,mDAAe,GAAvB;QACC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACzB,OAAO;SACP;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,cAAc,GAA4B,EAAE,EAAE,iBAAiB,GAAG,CAAC,CAAC;QACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAClE,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAClD,IAAI,QAAQ,EAAE;gBACb,cAAc,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,yBAAyB,CAAC,mBAAmB,EAAE,CAAC;gBACrH,cAAc,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,yBAAyB,CAAC,mBAAmB,EAAE,CAAC;aACrH;SACD;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACtF,CAAC;IAEO,sDAAkB,GAA1B;QACC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;YAC7B,2BAA2B;YAC3B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,OAAO;SACP;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QACvC,IAAI,YAAY,GAAmB,EAAE,CAAC;QACtC,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACtC,oEAAoE;YACpE,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC;SACtC;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAEhD,IAAI,SAAS,GAAe,EAAE,EAAE,YAAY,GAAG,CAAC,CAAC;QACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;gBACxB,iEAAiE;gBACjE,SAAS,CAAC,YAAY,EAAE,CAAC,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC;aACzD;SACD;QAED,+CAA+C;QAC/C,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,SAAS,CAAC,IAAI,CAAC,mBAAQ,CAAC,OAAO,CAAC,CAAC;SACjC;QAED,IAAI,OAAO,GAAmB,EAAE,EAAE,UAAU,GAAG,CAAC,CAAC;QACjD,IAAI,aAAa,GAAG,CAAC,EAAE,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACrD,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAE5B,OAAO,aAAa,GAAG,WAAW,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC9F,aAAa,EAAE,CAAC;aAChB;YAED,IAAI,aAAa,GAAG,WAAW,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBACzF,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;aACpD;iBAAM;gBACN,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAC5C,OAAO,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC7D;SACD;QAED,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IACjC,CAAC;IAlOuB,4BAAE,GAAG,0CAA0C,CAAC;IAmJhD,6CAAmB,GAAG,kCAAsB,CAAC,QAAQ,CAAC;QAC7E,UAAU,EAAE,8BAAsB,CAAC,2BAA2B;QAC9D,SAAS,EAAE,eAAe;QAC1B,aAAa,EAAE;YACd,KAAK,EAAE,+BAAgB,CAAC,mCAAmC,CAAC;YAC5D,QAAQ,EAAE,yBAAiB,CAAC,MAAM;SAClC;KACD,CAAC,CAAC;IAyEJ,gCAAC;CAAA,AApOD,CAA+C,sBAAU,GAoOxD;AApOY,8DAAyB;AAsOtC,6CAA0B,CAAC,yBAAyB,CAAC,CAAC;AACtD,uCAAoB,CAAC,qBAAqB,CAAC,CAAC;AAC5C,uCAAoB,CAAC,mBAAmB,CAAC,CAAC;AAC1C,yCAA0B,CAAC,UAAC,KAAK,EAAE,SAAS;IAC3C,IAAM,sBAAsB,GAAG,KAAK,CAAC,QAAQ,CAAC,kDAA4B,CAAC,CAAC;IAC5E,IAAI,sBAAsB,EAAE;QAC3B,SAAS,CAAC,OAAO,CAAC,uDAAqD,sBAAsB,QAAK,CAAC,CAAC;KACpG;IACD,IAAM,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,8CAAwB,CAAC,CAAC;IACpE,IAAI,kBAAkB,EAAE;QACvB,SAAS,CAAC,OAAO,CAAC,uDAAqD,kBAAkB,QAAK,CAAC,CAAC;KAChG;AACF,CAAC,CAAC,CAAC;AAEH,aAAa;AACb,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,aAAa,EAAE;IACjD,KAAK,EAAE,cAAc;IACrB,OAAO,EAAE;QACR,EAAE,EAAE,6BAA6B;QACjC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,iBAAiB,CAAC;KACpG;IACD,KAAK,EAAE,CAAC;CACR,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./bracketMatching';\nimport * as nls from 'vs/nls';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IModelDeltaDecoration, OverviewRulerLane, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from 'vs/editor/common/view/editorColorRegistry';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant, themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\n\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\n\nclass JumpToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.jumpToBracket',\n\t\t\tlabel: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n\t\t\talias: 'Go to Bracket',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_BACKSLASH,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tlet controller = BracketMatchingController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tcontroller.jumpToBracket();\n\t}\n}\n\nclass SelectToBracketAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.selectToBracket',\n\t\t\tlabel: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n\t\t\talias: 'Select to Bracket',\n\t\t\tprecondition: null\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tlet controller = BracketMatchingController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tcontroller.selectToBracket();\n\t}\n}\n\ntype Brackets = [Range, Range];\n\nclass BracketsData {\n\tpublic readonly position: Position;\n\tpublic readonly brackets: Brackets | null;\n\n\tconstructor(position: Position, brackets: Brackets | null) {\n\t\tthis.position = position;\n\t\tthis.brackets = brackets;\n\t}\n}\n\nexport class BracketMatchingController extends Disposable implements editorCommon.IEditorContribution {\n\tprivate static readonly ID = 'editor.contrib.bracketMatchingController';\n\n\tpublic static get(editor: ICodeEditor): BracketMatchingController {\n\t\treturn editor.getContribution<BracketMatchingController>(BracketMatchingController.ID);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate _lastBracketsData: BracketsData[];\n\tprivate _lastVersionId: number;\n\tprivate _decorations: string[];\n\tprivate readonly _updateBracketsSoon: RunOnceScheduler;\n\tprivate _matchBrackets: boolean;\n\n\tconstructor(\n\t\teditor: ICodeEditor\n\t) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._lastBracketsData = [];\n\t\tthis._lastVersionId = 0;\n\t\tthis._decorations = [];\n\t\tthis._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n\t\tthis._matchBrackets = this._editor.getConfiguration().contribInfo.matchBrackets;\n\n\t\tthis._updateBracketsSoon.schedule();\n\t\tthis._register(editor.onDidChangeCursorPosition((e) => {\n\n\t\t\tif (!this._matchBrackets) {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._decorations = [];\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelLanguageConfiguration((e) => {\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t\tthis._register(editor.onDidChangeConfiguration((e) => {\n\t\t\tthis._matchBrackets = this._editor.getConfiguration().contribInfo.matchBrackets;\n\t\t\tif (!this._matchBrackets && this._decorations.length > 0) {\n\t\t\t\t// Remove existing decorations if bracket matching is off\n\t\t\t\tthis._decorations = this._editor.deltaDecorations(this._decorations, []);\n\t\t\t}\n\t\t\tthis._updateBracketsSoon.schedule();\n\t\t}));\n\t}\n\n\tpublic getId(): string {\n\t\treturn BracketMatchingController.ID;\n\t}\n\n\tpublic jumpToBracket(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections = this._editor.getSelections().map(selection => {\n\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t// find matching brackets if position is on a bracket\n\t\t\tconst brackets = model.matchBracket(position);\n\t\t\tlet newCursorPosition: Position | null = null;\n\t\t\tif (brackets) {\n\t\t\t\tif (brackets[0].containsPosition(position)) {\n\t\t\t\t\tnewCursorPosition = brackets[1].getStartPosition();\n\t\t\t\t} else if (brackets[1].containsPosition(position)) {\n\t\t\t\t\tnewCursorPosition = brackets[0].getStartPosition();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// find the next bracket if the position isn't on a matching bracket\n\t\t\t\tconst nextBracket = model.findNextBracket(position);\n\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\tnewCursorPosition = nextBracket.range.getStartPosition();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newCursorPosition) {\n\t\t\t\treturn new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n\t\t\t}\n\t\t\treturn new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t});\n\n\t\tthis._editor.setSelections(newSelections);\n\t\tthis._editor.revealRange(newSelections[0]);\n\t}\n\n\tpublic selectToBracket(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst newSelections: Selection[] = [];\n\n\t\tthis._editor.getSelections().forEach(selection => {\n\t\t\tconst position = selection.getStartPosition();\n\t\t\tlet brackets = model.matchBracket(position);\n\n\t\t\tlet openBracket: Position | null = null;\n\t\t\tlet closeBracket: Position | null = null;\n\n\t\t\tif (!brackets) {\n\t\t\t\tconst nextBracket = model.findNextBracket(position);\n\t\t\t\tif (nextBracket && nextBracket.range) {\n\t\t\t\t\tbrackets = model.matchBracket(nextBracket.range.getStartPosition());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (brackets) {\n\t\t\t\tif (brackets[0].startLineNumber === brackets[1].startLineNumber) {\n\t\t\t\t\topenBracket = brackets[1].startColumn < brackets[0].startColumn ?\n\t\t\t\t\t\tbrackets[1].getStartPosition() : brackets[0].getStartPosition();\n\t\t\t\t\tcloseBracket = brackets[1].startColumn < brackets[0].startColumn ?\n\t\t\t\t\t\tbrackets[0].getEndPosition() : brackets[1].getEndPosition();\n\t\t\t\t} else {\n\t\t\t\t\topenBracket = brackets[1].startLineNumber < brackets[0].startLineNumber ?\n\t\t\t\t\t\tbrackets[1].getStartPosition() : brackets[0].getStartPosition();\n\t\t\t\t\tcloseBracket = brackets[1].startLineNumber < brackets[0].startLineNumber ?\n\t\t\t\t\t\tbrackets[0].getEndPosition() : brackets[1].getEndPosition();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (openBracket && closeBracket) {\n\t\t\t\tnewSelections.push(new Selection(openBracket.lineNumber, openBracket.column, closeBracket.lineNumber, closeBracket.column));\n\t\t\t}\n\t\t});\n\n\n\t\tif (newSelections.length > 0) {\n\t\t\tthis._editor.setSelections(newSelections);\n\t\t\tthis._editor.revealRange(newSelections[0]);\n\t\t}\n\t}\n\n\n\tprivate static readonly _DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'bracket-match',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerBracketMatchForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate _updateBrackets(): void {\n\t\tif (!this._matchBrackets) {\n\t\t\treturn;\n\t\t}\n\t\tthis._recomputeBrackets();\n\n\t\tlet newDecorations: IModelDeltaDecoration[] = [], newDecorationsLen = 0;\n\t\tfor (let i = 0, len = this._lastBracketsData.length; i < len; i++) {\n\t\t\tlet brackets = this._lastBracketsData[i].brackets;\n\t\t\tif (brackets) {\n\t\t\t\tnewDecorations[newDecorationsLen++] = { range: brackets[0], options: BracketMatchingController._DECORATION_OPTIONS };\n\t\t\t\tnewDecorations[newDecorationsLen++] = { range: brackets[1], options: BracketMatchingController._DECORATION_OPTIONS };\n\t\t\t}\n\t\t}\n\n\t\tthis._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\n\t}\n\n\tprivate _recomputeBrackets(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\t// no model => no brackets!\n\t\t\tthis._lastBracketsData = [];\n\t\t\tthis._lastVersionId = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst versionId = model.getVersionId();\n\t\tlet previousData: BracketsData[] = [];\n\t\tif (this._lastVersionId === versionId) {\n\t\t\t// use the previous data only if the model is at the same version id\n\t\t\tpreviousData = this._lastBracketsData;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\n\t\tlet positions: Position[] = [], positionsLen = 0;\n\t\tfor (let i = 0, len = selections.length; i < len; i++) {\n\t\t\tlet selection = selections[i];\n\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\t// will bracket match a cursor only if the selection is collapsed\n\t\t\t\tpositions[positionsLen++] = selection.getStartPosition();\n\t\t\t}\n\t\t}\n\n\t\t// sort positions for `previousData` cache hits\n\t\tif (positions.length > 1) {\n\t\t\tpositions.sort(Position.compare);\n\t\t}\n\n\t\tlet newData: BracketsData[] = [], newDataLen = 0;\n\t\tlet previousIndex = 0, previousLen = previousData.length;\n\t\tfor (let i = 0, len = positions.length; i < len; i++) {\n\t\t\tlet position = positions[i];\n\n\t\t\twhile (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n\t\t\t\tpreviousIndex++;\n\t\t\t}\n\n\t\t\tif (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n\t\t\t\tnewData[newDataLen++] = previousData[previousIndex];\n\t\t\t} else {\n\t\t\t\tlet brackets = model.matchBracket(position);\n\t\t\t\tnewData[newDataLen++] = new BracketsData(position, brackets);\n\t\t\t}\n\t\t}\n\n\t\tthis._lastBracketsData = newData;\n\t\tthis._lastVersionId = versionId;\n\t}\n}\n\nregisterEditorContribution(BracketMatchingController);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterThemingParticipant((theme, collector) => {\n\tconst bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\n\tif (bracketMatchBackground) {\n\t\tcollector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\n\t}\n\tconst bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\n\tif (bracketMatchBorder) {\n\t\tcollector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\n\t}\n});\n\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '5_infile_nav',\n\tcommand: {\n\t\tid: 'editor.action.jumpToBracket',\n\t\ttitle: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n\t},\n\torder: 2\n});"]}]}