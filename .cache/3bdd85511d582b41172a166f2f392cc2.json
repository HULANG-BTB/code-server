{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/protocol/src/common/util.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/common/util.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar proto_1 = require(\"../proto\");\nvar connection_1 = require(\"../common/connection\");\nvar proxy_1 = require(\"./proxy\");\n// tslint:disable no-any\n/**\n * Return true if we're in a browser environment (including web workers).\n */\nexports.isBrowserEnvironment = function () {\n    return typeof process === \"undefined\" || typeof process.stdout === \"undefined\";\n};\n/**\n * Escape a path. This prevents any issues with file names that have quotes,\n * spaces, braces, etc.\n */\nexports.escapePath = function (path) {\n    return \"'\" + path.replace(/'/g, \"'\\\\''\") + \"'\";\n};\n/**\n * Convert an argument to proto.\n * If sending a function is possible, provide `storeFunction`.\n * If sending a proxy is possible, provide `storeProxy`.\n */\nexports.argumentToProto = function (value, storeFunction, storeProxy) {\n    var convert = function (currentValue) {\n        var message = new proto_1.Argument();\n        if (currentValue instanceof Error\n            || (currentValue && typeof currentValue.message !== \"undefined\"\n                && typeof currentValue.stack !== \"undefined\")) {\n            var arg = new proto_1.Argument.ErrorValue();\n            arg.setMessage(currentValue.message);\n            arg.setStack(currentValue.stack);\n            arg.setCode(currentValue.code);\n            message.setError(arg);\n        }\n        else if (currentValue instanceof Uint8Array || currentValue instanceof Buffer) {\n            var arg = new proto_1.Argument.BufferValue();\n            arg.setData(currentValue);\n            message.setBuffer(arg);\n        }\n        else if (Array.isArray(currentValue)) {\n            var arg = new proto_1.Argument.ArrayValue();\n            arg.setDataList(currentValue.map(convert));\n            message.setArray(arg);\n        }\n        else if (exports.isProxy(currentValue)) {\n            if (!storeProxy) {\n                throw new Error(\"no way to serialize proxy\");\n            }\n            var arg = new proto_1.Argument.ProxyValue();\n            arg.setId(storeProxy(currentValue));\n            message.setProxy(arg);\n        }\n        else if (currentValue instanceof Date\n            || (currentValue && typeof currentValue.getTime === \"function\")) {\n            var arg = new proto_1.Argument.DateValue();\n            arg.setDate(currentValue.toString());\n            message.setDate(arg);\n        }\n        else if (currentValue !== null && typeof currentValue === \"object\") {\n            var arg = new proto_1.Argument.ObjectValue();\n            var map_1 = arg.getDataMap();\n            Object.keys(currentValue).forEach(function (key) {\n                map_1.set(key, convert(currentValue[key]));\n            });\n            message.setObject(arg);\n        }\n        else if (currentValue === null) {\n            message.setNull(new proto_1.Argument.NullValue());\n        }\n        else {\n            switch (typeof currentValue) {\n                case \"undefined\":\n                    message.setUndefined(new proto_1.Argument.UndefinedValue());\n                    break;\n                case \"function\":\n                    if (!storeFunction) {\n                        throw new Error(\"no way to serialize function\");\n                    }\n                    var arg = new proto_1.Argument.FunctionValue();\n                    arg.setId(storeFunction(currentValue));\n                    message.setFunction(arg);\n                    break;\n                case \"number\":\n                    message.setNumber(currentValue);\n                    break;\n                case \"string\":\n                    message.setString(currentValue);\n                    break;\n                case \"boolean\":\n                    message.setBoolean(currentValue);\n                    break;\n                default:\n                    throw new Error(\"cannot convert \" + typeof currentValue + \" to proto\");\n            }\n        }\n        return message;\n    };\n    return convert(value);\n};\n/**\n * Convert proto to an argument.\n * If running a remote callback is supported, provide `runCallback`.\n * If using a remote proxy is supported, provide `createProxy`.\n */\nexports.protoToArgument = function (message, runCallback, createProxy) {\n    var convert = function (currentMessage) {\n        switch (currentMessage.getMsgCase()) {\n            case proto_1.Argument.MsgCase.ERROR:\n                var errorMessage = currentMessage.getError();\n                var error = new Error(errorMessage.getMessage());\n                error.code = errorMessage.getCode();\n                error.originalStack = errorMessage.getStack();\n                return error;\n            case proto_1.Argument.MsgCase.BUFFER:\n                return Buffer.from(currentMessage.getBuffer().getData());\n            case proto_1.Argument.MsgCase.ARRAY:\n                return currentMessage.getArray().getDataList().map(function (a) { return convert(a); });\n            case proto_1.Argument.MsgCase.PROXY:\n                if (!createProxy) {\n                    throw new Error(\"no way to create proxy\");\n                }\n                return createProxy(currentMessage.getProxy().getId());\n            case proto_1.Argument.MsgCase.DATE:\n                return new Date(currentMessage.getDate().getDate());\n            case proto_1.Argument.MsgCase.OBJECT:\n                var obj_1 = {};\n                currentMessage.getObject().getDataMap().forEach(function (argument, key) {\n                    obj_1[key] = convert(argument);\n                });\n                return obj_1;\n            case proto_1.Argument.MsgCase.UNDEFINED:\n                return undefined;\n            case proto_1.Argument.MsgCase.NULL:\n                return null;\n            case proto_1.Argument.MsgCase.FUNCTION:\n                if (!runCallback) {\n                    throw new Error(\"no way to run remote callback\");\n                }\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    return runCallback(currentMessage.getFunction().getId(), args);\n                };\n            case proto_1.Argument.MsgCase.NUMBER:\n                return currentMessage.getNumber();\n            case proto_1.Argument.MsgCase.STRING:\n                return currentMessage.getString();\n            case proto_1.Argument.MsgCase.BOOLEAN:\n                return currentMessage.getBoolean();\n            default:\n                throw new Error(\"cannot convert unexpected proto to argument\");\n        }\n    };\n    return message && convert(message);\n};\nexports.protoToModule = function (protoModule) {\n    switch (protoModule) {\n        case proto_1.Module.CHILDPROCESS: return proxy_1.Module.ChildProcess;\n        case proto_1.Module.FS: return proxy_1.Module.Fs;\n        case proto_1.Module.NET: return proxy_1.Module.Net;\n        case proto_1.Module.NODEPTY: return proxy_1.Module.NodePty;\n        case proto_1.Module.SPDLOG: return proxy_1.Module.Spdlog;\n        case proto_1.Module.TRASH: return proxy_1.Module.Trash;\n        default: throw new Error(\"invalid module \" + protoModule);\n    }\n};\nexports.moduleToProto = function (moduleName) {\n    switch (moduleName) {\n        case proxy_1.Module.ChildProcess: return proto_1.Module.CHILDPROCESS;\n        case proxy_1.Module.Fs: return proto_1.Module.FS;\n        case proxy_1.Module.Net: return proto_1.Module.NET;\n        case proxy_1.Module.NodePty: return proto_1.Module.NODEPTY;\n        case proxy_1.Module.Spdlog: return proto_1.Module.SPDLOG;\n        case proxy_1.Module.Trash: return proto_1.Module.TRASH;\n        default: throw new Error(\"invalid module \\\"\" + moduleName + \"\\\"\");\n    }\n};\nexports.protoToOperatingSystem = function (protoOp) {\n    switch (protoOp) {\n        case proto_1.WorkingInit.OperatingSystem.WINDOWS: return connection_1.OperatingSystem.Windows;\n        case proto_1.WorkingInit.OperatingSystem.LINUX: return connection_1.OperatingSystem.Linux;\n        case proto_1.WorkingInit.OperatingSystem.MAC: return connection_1.OperatingSystem.Mac;\n        default: throw new Error(\"unsupported operating system \" + protoOp);\n    }\n};\nexports.platformToProto = function (platform) {\n    switch (platform) {\n        case \"win32\": return proto_1.WorkingInit.OperatingSystem.WINDOWS;\n        case \"linux\": return proto_1.WorkingInit.OperatingSystem.LINUX;\n        case \"darwin\": return proto_1.WorkingInit.OperatingSystem.MAC;\n        default: throw new Error(\"unrecognized platform \\\"\" + platform + \"\\\"\");\n    }\n};\nexports.isProxy = function (value) {\n    return value && typeof value === \"object\" && typeof value.onEvent === \"function\";\n};\nexports.isPromise = function (value) {\n    return typeof value.then === \"function\" && typeof value.catch === \"function\";\n};\n/**\n * When spawning VS Code tries to preserve the environment but since it's in\n * the browser, it doesn't work.\n */\nexports.preserveEnv = function (options) {\n    if (options && options.env) {\n        options.env = tslib_1.__assign({}, process.env, options.env);\n    }\n};\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/common/util.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/common/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { Argument, Module as ProtoModule, WorkingInit } from \"../proto\";\nimport { OperatingSystem } from \"../common/connection\";\nimport { Module, ServerProxy } from \"./proxy\";\n\n// tslint:disable no-any\n\n/**\n * Return true if we're in a browser environment (including web workers).\n */\nexport const isBrowserEnvironment = (): boolean => {\n\treturn typeof process === \"undefined\" || typeof process.stdout === \"undefined\";\n};\n\n/**\n * Escape a path. This prevents any issues with file names that have quotes,\n * spaces, braces, etc.\n */\nexport const escapePath = (path: string): string => {\n\treturn `'${path.replace(/'/g, \"'\\\\''\")}'`;\n};\n\nexport type IEncodingOptions = {\n\tencoding?: BufferEncoding | null;\n\tflag?: string;\n\tmode?: string;\n\tpersistent?: boolean;\n\trecursive?: boolean;\n} | BufferEncoding | undefined | null;\n\nexport type IEncodingOptionsCallback = IEncodingOptions | ((err: NodeJS.ErrnoException, ...args: any[]) => void);\n\n/**\n * Convert an argument to proto.\n * If sending a function is possible, provide `storeFunction`.\n * If sending a proxy is possible, provide `storeProxy`.\n */\nexport const argumentToProto = (\n\tvalue: any,\n\tstoreFunction?: (fn: () => void) => number,\n\tstoreProxy?: (proxy: ServerProxy) => number,\n): Argument => {\n\tconst convert = (currentValue: any): Argument => {\n\t\tconst message = new Argument();\n\n\t\tif (currentValue instanceof Error\n\t\t\t|| (currentValue && typeof currentValue.message !== \"undefined\"\n\t\t\t\t&& typeof currentValue.stack !== \"undefined\")) {\n\t\t\tconst arg = new Argument.ErrorValue();\n\t\t\targ.setMessage(currentValue.message);\n\t\t\targ.setStack(currentValue.stack);\n\t\t\targ.setCode(currentValue.code);\n\t\t\tmessage.setError(arg);\n\t\t} else if (currentValue instanceof Uint8Array || currentValue instanceof Buffer) {\n\t\t\tconst arg = new Argument.BufferValue();\n\t\t\targ.setData(currentValue);\n\t\t\tmessage.setBuffer(arg);\n\t\t} else if (Array.isArray(currentValue)) {\n\t\t\tconst arg = new Argument.ArrayValue();\n\t\t\targ.setDataList(currentValue.map(convert));\n\t\t\tmessage.setArray(arg);\n\t\t} else if (isProxy(currentValue)) {\n\t\t\tif (!storeProxy) {\n\t\t\t\tthrow new Error(\"no way to serialize proxy\");\n\t\t\t}\n\t\t\tconst arg = new Argument.ProxyValue();\n\t\t\targ.setId(storeProxy(currentValue));\n\t\t\tmessage.setProxy(arg);\n\t\t} else if (currentValue instanceof Date\n\t\t\t|| (currentValue && typeof currentValue.getTime === \"function\")) {\n\t\t\tconst arg = new Argument.DateValue();\n\t\t\targ.setDate(currentValue.toString());\n\t\t\tmessage.setDate(arg);\n\t\t} else if (currentValue !== null && typeof currentValue === \"object\") {\n\t\t\tconst arg = new Argument.ObjectValue();\n\t\t\tconst map = arg.getDataMap();\n\t\t\tObject.keys(currentValue).forEach((key) => {\n\t\t\t\tmap.set(key, convert(currentValue[key]));\n\t\t\t});\n\t\t\tmessage.setObject(arg);\n\t\t} else if (currentValue === null) {\n\t\t\tmessage.setNull(new Argument.NullValue());\n\t\t} else {\n\t\t\tswitch (typeof currentValue) {\n\t\t\t\tcase \"undefined\":\n\t\t\t\t\tmessage.setUndefined(new Argument.UndefinedValue());\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tif (!storeFunction) {\n\t\t\t\t\t\tthrow new Error(\"no way to serialize function\");\n\t\t\t\t\t}\n\t\t\t\t\tconst arg = new Argument.FunctionValue();\n\t\t\t\t\targ.setId(storeFunction(currentValue));\n\t\t\t\t\tmessage.setFunction(arg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"number\":\n\t\t\t\t\tmessage.setNumber(currentValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"string\":\n\t\t\t\t\tmessage.setString(currentValue);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\tmessage.setBoolean(currentValue);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`cannot convert ${typeof currentValue} to proto`);\n\t\t\t}\n\t\t}\n\n\t\treturn message;\n\t};\n\n\treturn convert(value);\n};\n\n/**\n * Convert proto to an argument.\n * If running a remote callback is supported, provide `runCallback`.\n * If using a remote proxy is supported, provide `createProxy`.\n */\nexport const protoToArgument = (\n\tmessage?: Argument,\n\trunCallback?: (id: number, args: any[]) => void,\n\tcreateProxy?: (id: number) => ServerProxy,\n): any => {\n\tconst convert = (currentMessage: Argument): any => {\n\t\tswitch (currentMessage.getMsgCase()) {\n\t\t\tcase Argument.MsgCase.ERROR:\n\t\t\t\tconst errorMessage = currentMessage.getError()!;\n\t\t\t\tconst error = new Error(errorMessage.getMessage());\n\t\t\t\t(error as NodeJS.ErrnoException).code = errorMessage.getCode();\n\t\t\t\t(error as any).originalStack = errorMessage.getStack();\n\n\t\t\t\treturn error;\n\t\t\tcase Argument.MsgCase.BUFFER:\n\t\t\t\treturn Buffer.from(currentMessage.getBuffer()!.getData() as Uint8Array);\n\t\t\tcase Argument.MsgCase.ARRAY:\n\t\t\t\treturn currentMessage.getArray()!.getDataList().map((a) => convert(a));\n\t\t\tcase Argument.MsgCase.PROXY:\n\t\t\t\tif (!createProxy) {\n\t\t\t\t\tthrow new Error(\"no way to create proxy\");\n\t\t\t\t}\n\n\t\t\t\treturn createProxy(currentMessage.getProxy()!.getId());\n\t\t\tcase Argument.MsgCase.DATE:\n\t\t\t\treturn new Date(currentMessage.getDate()!.getDate());\n\t\t\tcase Argument.MsgCase.OBJECT:\n\t\t\t\tconst obj: { [Key: string]: any } = {};\n\t\t\t\tcurrentMessage.getObject()!.getDataMap().forEach((argument, key) => {\n\t\t\t\t\tobj[key] = convert(argument);\n\t\t\t\t});\n\n\t\t\t\treturn obj;\n\t\t\tcase Argument.MsgCase.UNDEFINED:\n\t\t\t\treturn undefined;\n\t\t\tcase Argument.MsgCase.NULL:\n\t\t\t\treturn null;\n\t\t\tcase Argument.MsgCase.FUNCTION:\n\t\t\t\tif (!runCallback) {\n\t\t\t\t\tthrow new Error(\"no way to run remote callback\");\n\t\t\t\t}\n\n\t\t\t\treturn (...args: any[]): void => {\n\t\t\t\t\treturn runCallback(currentMessage.getFunction()!.getId(), args);\n\t\t\t\t};\n\t\t\tcase Argument.MsgCase.NUMBER:\n\t\t\t\treturn currentMessage.getNumber();\n\t\t\tcase Argument.MsgCase.STRING:\n\t\t\t\treturn currentMessage.getString();\n\t\t\tcase Argument.MsgCase.BOOLEAN:\n\t\t\t\treturn currentMessage.getBoolean();\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"cannot convert unexpected proto to argument\");\n\t\t}\n\t};\n\n\treturn message && convert(message);\n};\n\nexport const protoToModule = (protoModule: ProtoModule): Module => {\n\tswitch (protoModule) {\n\t\tcase ProtoModule.CHILDPROCESS: return Module.ChildProcess;\n\t\tcase ProtoModule.FS: return Module.Fs;\n\t\tcase ProtoModule.NET: return Module.Net;\n\t\tcase ProtoModule.NODEPTY: return Module.NodePty;\n\t\tcase ProtoModule.SPDLOG: return Module.Spdlog;\n\t\tcase ProtoModule.TRASH: return Module.Trash;\n\t\tdefault: throw new Error(`invalid module ${protoModule}`);\n\t}\n};\n\nexport const moduleToProto = (moduleName: Module): ProtoModule => {\n\tswitch (moduleName) {\n\t\tcase Module.ChildProcess: return ProtoModule.CHILDPROCESS;\n\t\tcase Module.Fs: return ProtoModule.FS;\n\t\tcase Module.Net: return ProtoModule.NET;\n\t\tcase Module.NodePty: return ProtoModule.NODEPTY;\n\t\tcase Module.Spdlog: return ProtoModule.SPDLOG;\n\t\tcase Module.Trash: return ProtoModule.TRASH;\n\t\tdefault: throw new Error(`invalid module \"${moduleName}\"`);\n\t}\n};\n\nexport const protoToOperatingSystem = (protoOp: WorkingInit.OperatingSystem): OperatingSystem => {\n\tswitch (protoOp) {\n\t\tcase WorkingInit.OperatingSystem.WINDOWS: return OperatingSystem.Windows;\n\t\tcase WorkingInit.OperatingSystem.LINUX: return OperatingSystem.Linux;\n\t\tcase WorkingInit.OperatingSystem.MAC: return OperatingSystem.Mac;\n\t\tdefault: throw new Error(`unsupported operating system ${protoOp}`);\n\t}\n};\n\nexport const platformToProto = (platform: NodeJS.Platform): WorkingInit.OperatingSystem => {\n\tswitch (platform) {\n\t\tcase \"win32\": return WorkingInit.OperatingSystem.WINDOWS;\n\t\tcase \"linux\": return WorkingInit.OperatingSystem.LINUX;\n\t\tcase \"darwin\": return WorkingInit.OperatingSystem.MAC;\n\t\tdefault: throw new Error(`unrecognized platform \"${platform}\"`);\n\t}\n};\n\nexport const isProxy = (value: any): value is ServerProxy => {\n\treturn value && typeof value === \"object\" && typeof value.onEvent === \"function\";\n};\n\nexport const isPromise = (value: any): value is Promise<any> => {\n\treturn typeof value.then === \"function\" && typeof value.catch === \"function\";\n};\n\n/**\n * When spawning VS Code tries to preserve the environment but since it's in\n * the browser, it doesn't work.\n */\nexport const preserveEnv = (options?: { env?: NodeJS.ProcessEnv } | null): void => {\n\tif (options && options.env) {\n\t\toptions.env = { ...process.env, ...options.env };\n\t}\n};\n"]}]}