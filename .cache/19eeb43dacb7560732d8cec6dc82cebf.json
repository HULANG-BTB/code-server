{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar path_1 = require(\"vs/base/common/path\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar types_1 = require(\"vs/base/common/types\");\nexports.IFileService = instantiation_1.createDecorator('fileService');\nvar FileType;\n(function (FileType) {\n    FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\n    FileType[FileType[\"File\"] = 1] = \"File\";\n    FileType[FileType[\"Directory\"] = 2] = \"Directory\";\n    FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\n})(FileType = exports.FileType || (exports.FileType = {}));\nvar FileSystemProviderCapabilities;\n(function (FileSystemProviderCapabilities) {\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileReadWrite\"] = 2] = \"FileReadWrite\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileOpenReadWriteClose\"] = 4] = \"FileOpenReadWriteClose\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileFolderCopy\"] = 8] = \"FileFolderCopy\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"PathCaseSensitive\"] = 1024] = \"PathCaseSensitive\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Readonly\"] = 2048] = \"Readonly\";\n    FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Trash\"] = 4096] = \"Trash\";\n})(FileSystemProviderCapabilities = exports.FileSystemProviderCapabilities || (exports.FileSystemProviderCapabilities = {}));\nfunction hasReadWriteCapability(provider) {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\nexports.hasReadWriteCapability = hasReadWriteCapability;\nfunction hasFileFolderCopyCapability(provider) {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\nexports.hasFileFolderCopyCapability = hasFileFolderCopyCapability;\nfunction hasOpenReadWriteCloseCapability(provider) {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\nexports.hasOpenReadWriteCloseCapability = hasOpenReadWriteCloseCapability;\nvar FileSystemProviderErrorCode;\n(function (FileSystemProviderErrorCode) {\n    FileSystemProviderErrorCode[\"FileExists\"] = \"EntryExists\";\n    FileSystemProviderErrorCode[\"FileNotFound\"] = \"EntryNotFound\";\n    FileSystemProviderErrorCode[\"FileNotADirectory\"] = \"EntryNotADirectory\";\n    FileSystemProviderErrorCode[\"FileIsADirectory\"] = \"EntryIsADirectory\";\n    FileSystemProviderErrorCode[\"NoPermissions\"] = \"NoPermissions\";\n    FileSystemProviderErrorCode[\"Unavailable\"] = \"Unavailable\";\n    FileSystemProviderErrorCode[\"Unknown\"] = \"Unknown\";\n})(FileSystemProviderErrorCode = exports.FileSystemProviderErrorCode || (exports.FileSystemProviderErrorCode = {}));\nvar FileSystemProviderError = /** @class */ (function (_super) {\n    tslib_1.__extends(FileSystemProviderError, _super);\n    function FileSystemProviderError(message, code) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        return _this;\n    }\n    return FileSystemProviderError;\n}(Error));\nexports.FileSystemProviderError = FileSystemProviderError;\nfunction createFileSystemProviderError(error, code) {\n    var providerError = new FileSystemProviderError(error.toString(), code);\n    markAsFileSystemProviderError(providerError, code);\n    return providerError;\n}\nexports.createFileSystemProviderError = createFileSystemProviderError;\nfunction markAsFileSystemProviderError(error, code) {\n    error.name = code ? code + \" (FileSystemError)\" : \"FileSystemError\";\n    return error;\n}\nexports.markAsFileSystemProviderError = markAsFileSystemProviderError;\nfunction toFileSystemProviderErrorCode(error) {\n    // FileSystemProviderError comes with the code\n    if (error instanceof FileSystemProviderError) {\n        return error.code;\n    }\n    // Any other error, check for name match by assuming that the error\n    // went through the markAsFileSystemProviderError() method\n    var match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n    if (!match) {\n        return FileSystemProviderErrorCode.Unknown;\n    }\n    switch (match[1]) {\n        case FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n        case FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n        case FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n        case FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n        case FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n        case FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n    }\n    return FileSystemProviderErrorCode.Unknown;\n}\nexports.toFileSystemProviderErrorCode = toFileSystemProviderErrorCode;\nfunction toFileOperationResult(error) {\n    switch (toFileSystemProviderErrorCode(error)) {\n        case FileSystemProviderErrorCode.FileNotFound:\n            return FileOperationResult.FILE_NOT_FOUND;\n        case FileSystemProviderErrorCode.FileIsADirectory:\n            return FileOperationResult.FILE_IS_DIRECTORY;\n        case FileSystemProviderErrorCode.NoPermissions:\n            return FileOperationResult.FILE_PERMISSION_DENIED;\n        case FileSystemProviderErrorCode.FileExists:\n            return FileOperationResult.FILE_MOVE_CONFLICT;\n        case FileSystemProviderErrorCode.FileNotADirectory:\n        default:\n            return FileOperationResult.FILE_OTHER_ERROR;\n    }\n}\nexports.toFileOperationResult = toFileOperationResult;\nvar FileOperation;\n(function (FileOperation) {\n    FileOperation[FileOperation[\"CREATE\"] = 0] = \"CREATE\";\n    FileOperation[FileOperation[\"DELETE\"] = 1] = \"DELETE\";\n    FileOperation[FileOperation[\"MOVE\"] = 2] = \"MOVE\";\n    FileOperation[FileOperation[\"COPY\"] = 3] = \"COPY\";\n})(FileOperation = exports.FileOperation || (exports.FileOperation = {}));\nvar FileOperationEvent = /** @class */ (function () {\n    function FileOperationEvent(_resource, _operation, _target) {\n        this._resource = _resource;\n        this._operation = _operation;\n        this._target = _target;\n    }\n    Object.defineProperty(FileOperationEvent.prototype, \"resource\", {\n        get: function () {\n            return this._resource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileOperationEvent.prototype, \"target\", {\n        get: function () {\n            return this._target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileOperationEvent.prototype, \"operation\", {\n        get: function () {\n            return this._operation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FileOperationEvent;\n}());\nexports.FileOperationEvent = FileOperationEvent;\n/**\n * Possible changes that can occur to a file.\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    FileChangeType[FileChangeType[\"UPDATED\"] = 0] = \"UPDATED\";\n    FileChangeType[FileChangeType[\"ADDED\"] = 1] = \"ADDED\";\n    FileChangeType[FileChangeType[\"DELETED\"] = 2] = \"DELETED\";\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar FileChangesEvent = /** @class */ (function () {\n    function FileChangesEvent(changes) {\n        this._changes = changes;\n    }\n    Object.defineProperty(FileChangesEvent.prototype, \"changes\", {\n        get: function () {\n            return this._changes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n     * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n     * provided file path.\n     */\n    FileChangesEvent.prototype.contains = function (resource, type) {\n        if (!resource) {\n            return false;\n        }\n        var checkForChangeType = !types_1.isUndefinedOrNull(type);\n        return this._changes.some(function (change) {\n            if (checkForChangeType && change.type !== type) {\n                return false;\n            }\n            // For deleted also return true when deleted folder is parent of target path\n            if (change.type === FileChangeType.DELETED) {\n                return resources_1.isEqualOrParent(resource, change.resource, !platform_1.isLinux /* ignorecase */);\n            }\n            return resources_1.isEqual(resource, change.resource, !platform_1.isLinux /* ignorecase */);\n        });\n    };\n    /**\n     * Returns the changes that describe added files.\n     */\n    FileChangesEvent.prototype.getAdded = function () {\n        return this.getOfType(FileChangeType.ADDED);\n    };\n    /**\n     * Returns if this event contains added files.\n     */\n    FileChangesEvent.prototype.gotAdded = function () {\n        return this.hasType(FileChangeType.ADDED);\n    };\n    /**\n     * Returns the changes that describe deleted files.\n     */\n    FileChangesEvent.prototype.getDeleted = function () {\n        return this.getOfType(FileChangeType.DELETED);\n    };\n    /**\n     * Returns if this event contains deleted files.\n     */\n    FileChangesEvent.prototype.gotDeleted = function () {\n        return this.hasType(FileChangeType.DELETED);\n    };\n    /**\n     * Returns the changes that describe updated files.\n     */\n    FileChangesEvent.prototype.getUpdated = function () {\n        return this.getOfType(FileChangeType.UPDATED);\n    };\n    /**\n     * Returns if this event contains updated files.\n     */\n    FileChangesEvent.prototype.gotUpdated = function () {\n        return this.hasType(FileChangeType.UPDATED);\n    };\n    FileChangesEvent.prototype.getOfType = function (type) {\n        return this._changes.filter(function (change) { return change.type === type; });\n    };\n    FileChangesEvent.prototype.hasType = function (type) {\n        return this._changes.some(function (change) {\n            return change.type === type;\n        });\n    };\n    return FileChangesEvent;\n}());\nexports.FileChangesEvent = FileChangesEvent;\nfunction isParent(path, candidate, ignoreCase) {\n    if (!path || !candidate || path === candidate) {\n        return false;\n    }\n    if (candidate.length > path.length) {\n        return false;\n    }\n    if (candidate.charAt(candidate.length - 1) !== path_1.sep) {\n        candidate += path_1.sep;\n    }\n    if (ignoreCase) {\n        return strings_1.startsWithIgnoreCase(path, candidate);\n    }\n    return path.indexOf(candidate) === 0;\n}\nexports.isParent = isParent;\nvar StringSnapshot = /** @class */ (function () {\n    function StringSnapshot(value) {\n        this._value = value;\n    }\n    StringSnapshot.prototype.read = function () {\n        var ret = this._value;\n        this._value = null;\n        return ret;\n    };\n    return StringSnapshot;\n}());\nexports.StringSnapshot = StringSnapshot;\n/**\n * Helper method to convert a snapshot into its full string form.\n */\nfunction snapshotToString(snapshot) {\n    var chunks = [];\n    var chunk;\n    while (typeof (chunk = snapshot.read()) === 'string') {\n        chunks.push(chunk);\n    }\n    return chunks.join('');\n}\nexports.snapshotToString = snapshotToString;\nvar FileOperationError = /** @class */ (function (_super) {\n    tslib_1.__extends(FileOperationError, _super);\n    function FileOperationError(message, fileOperationResult, options) {\n        var _this = _super.call(this, message) || this;\n        _this.fileOperationResult = fileOperationResult;\n        _this.options = options;\n        return _this;\n    }\n    FileOperationError.isFileOperationError = function (obj) {\n        return obj instanceof Error && !types_1.isUndefinedOrNull(obj.fileOperationResult);\n    };\n    return FileOperationError;\n}(Error));\nexports.FileOperationError = FileOperationError;\nvar FileOperationResult;\n(function (FileOperationResult) {\n    FileOperationResult[FileOperationResult[\"FILE_IS_BINARY\"] = 0] = \"FILE_IS_BINARY\";\n    FileOperationResult[FileOperationResult[\"FILE_IS_DIRECTORY\"] = 1] = \"FILE_IS_DIRECTORY\";\n    FileOperationResult[FileOperationResult[\"FILE_NOT_FOUND\"] = 2] = \"FILE_NOT_FOUND\";\n    FileOperationResult[FileOperationResult[\"FILE_NOT_MODIFIED_SINCE\"] = 3] = \"FILE_NOT_MODIFIED_SINCE\";\n    FileOperationResult[FileOperationResult[\"FILE_MODIFIED_SINCE\"] = 4] = \"FILE_MODIFIED_SINCE\";\n    FileOperationResult[FileOperationResult[\"FILE_MOVE_CONFLICT\"] = 5] = \"FILE_MOVE_CONFLICT\";\n    FileOperationResult[FileOperationResult[\"FILE_READ_ONLY\"] = 6] = \"FILE_READ_ONLY\";\n    FileOperationResult[FileOperationResult[\"FILE_PERMISSION_DENIED\"] = 7] = \"FILE_PERMISSION_DENIED\";\n    FileOperationResult[FileOperationResult[\"FILE_TOO_LARGE\"] = 8] = \"FILE_TOO_LARGE\";\n    FileOperationResult[FileOperationResult[\"FILE_INVALID_PATH\"] = 9] = \"FILE_INVALID_PATH\";\n    FileOperationResult[FileOperationResult[\"FILE_EXCEED_MEMORY_LIMIT\"] = 10] = \"FILE_EXCEED_MEMORY_LIMIT\";\n    FileOperationResult[FileOperationResult[\"FILE_OTHER_ERROR\"] = 11] = \"FILE_OTHER_ERROR\";\n})(FileOperationResult = exports.FileOperationResult || (exports.FileOperationResult = {}));\nexports.AutoSaveConfiguration = {\n    OFF: 'off',\n    AFTER_DELAY: 'afterDelay',\n    ON_FOCUS_CHANGE: 'onFocusChange',\n    ON_WINDOW_CHANGE: 'onWindowChange'\n};\nexports.HotExitConfiguration = {\n    OFF: 'off',\n    ON_EXIT: 'onExit',\n    ON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\nexports.CONTENT_CHANGE_EVENT_BUFFER_DELAY = 1000;\nexports.FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexports.FILES_EXCLUDE_CONFIG = 'files.exclude';\nexports.SUPPORTED_ENCODINGS = {\n    utf8: {\n        labelLong: 'UTF-8',\n        labelShort: 'UTF-8',\n        order: 1,\n        alias: 'utf8bom'\n    },\n    utf8bom: {\n        labelLong: 'UTF-8 with BOM',\n        labelShort: 'UTF-8 with BOM',\n        encodeOnly: true,\n        order: 2,\n        alias: 'utf8'\n    },\n    utf16le: {\n        labelLong: 'UTF-16 LE',\n        labelShort: 'UTF-16 LE',\n        order: 3\n    },\n    utf16be: {\n        labelLong: 'UTF-16 BE',\n        labelShort: 'UTF-16 BE',\n        order: 4\n    },\n    windows1252: {\n        labelLong: 'Western (Windows 1252)',\n        labelShort: 'Windows 1252',\n        order: 5\n    },\n    iso88591: {\n        labelLong: 'Western (ISO 8859-1)',\n        labelShort: 'ISO 8859-1',\n        order: 6\n    },\n    iso88593: {\n        labelLong: 'Western (ISO 8859-3)',\n        labelShort: 'ISO 8859-3',\n        order: 7\n    },\n    iso885915: {\n        labelLong: 'Western (ISO 8859-15)',\n        labelShort: 'ISO 8859-15',\n        order: 8\n    },\n    macroman: {\n        labelLong: 'Western (Mac Roman)',\n        labelShort: 'Mac Roman',\n        order: 9\n    },\n    cp437: {\n        labelLong: 'DOS (CP 437)',\n        labelShort: 'CP437',\n        order: 10\n    },\n    windows1256: {\n        labelLong: 'Arabic (Windows 1256)',\n        labelShort: 'Windows 1256',\n        order: 11\n    },\n    iso88596: {\n        labelLong: 'Arabic (ISO 8859-6)',\n        labelShort: 'ISO 8859-6',\n        order: 12\n    },\n    windows1257: {\n        labelLong: 'Baltic (Windows 1257)',\n        labelShort: 'Windows 1257',\n        order: 13\n    },\n    iso88594: {\n        labelLong: 'Baltic (ISO 8859-4)',\n        labelShort: 'ISO 8859-4',\n        order: 14\n    },\n    iso885914: {\n        labelLong: 'Celtic (ISO 8859-14)',\n        labelShort: 'ISO 8859-14',\n        order: 15\n    },\n    windows1250: {\n        labelLong: 'Central European (Windows 1250)',\n        labelShort: 'Windows 1250',\n        order: 16\n    },\n    iso88592: {\n        labelLong: 'Central European (ISO 8859-2)',\n        labelShort: 'ISO 8859-2',\n        order: 17\n    },\n    cp852: {\n        labelLong: 'Central European (CP 852)',\n        labelShort: 'CP 852',\n        order: 18\n    },\n    windows1251: {\n        labelLong: 'Cyrillic (Windows 1251)',\n        labelShort: 'Windows 1251',\n        order: 19\n    },\n    cp866: {\n        labelLong: 'Cyrillic (CP 866)',\n        labelShort: 'CP 866',\n        order: 20\n    },\n    iso88595: {\n        labelLong: 'Cyrillic (ISO 8859-5)',\n        labelShort: 'ISO 8859-5',\n        order: 21\n    },\n    koi8r: {\n        labelLong: 'Cyrillic (KOI8-R)',\n        labelShort: 'KOI8-R',\n        order: 22\n    },\n    koi8u: {\n        labelLong: 'Cyrillic (KOI8-U)',\n        labelShort: 'KOI8-U',\n        order: 23\n    },\n    iso885913: {\n        labelLong: 'Estonian (ISO 8859-13)',\n        labelShort: 'ISO 8859-13',\n        order: 24\n    },\n    windows1253: {\n        labelLong: 'Greek (Windows 1253)',\n        labelShort: 'Windows 1253',\n        order: 25\n    },\n    iso88597: {\n        labelLong: 'Greek (ISO 8859-7)',\n        labelShort: 'ISO 8859-7',\n        order: 26\n    },\n    windows1255: {\n        labelLong: 'Hebrew (Windows 1255)',\n        labelShort: 'Windows 1255',\n        order: 27\n    },\n    iso88598: {\n        labelLong: 'Hebrew (ISO 8859-8)',\n        labelShort: 'ISO 8859-8',\n        order: 28\n    },\n    iso885910: {\n        labelLong: 'Nordic (ISO 8859-10)',\n        labelShort: 'ISO 8859-10',\n        order: 29\n    },\n    iso885916: {\n        labelLong: 'Romanian (ISO 8859-16)',\n        labelShort: 'ISO 8859-16',\n        order: 30\n    },\n    windows1254: {\n        labelLong: 'Turkish (Windows 1254)',\n        labelShort: 'Windows 1254',\n        order: 31\n    },\n    iso88599: {\n        labelLong: 'Turkish (ISO 8859-9)',\n        labelShort: 'ISO 8859-9',\n        order: 32\n    },\n    windows1258: {\n        labelLong: 'Vietnamese (Windows 1258)',\n        labelShort: 'Windows 1258',\n        order: 33\n    },\n    gbk: {\n        labelLong: 'Simplified Chinese (GBK)',\n        labelShort: 'GBK',\n        order: 34\n    },\n    gb18030: {\n        labelLong: 'Simplified Chinese (GB18030)',\n        labelShort: 'GB18030',\n        order: 35\n    },\n    cp950: {\n        labelLong: 'Traditional Chinese (Big5)',\n        labelShort: 'Big5',\n        order: 36\n    },\n    big5hkscs: {\n        labelLong: 'Traditional Chinese (Big5-HKSCS)',\n        labelShort: 'Big5-HKSCS',\n        order: 37\n    },\n    shiftjis: {\n        labelLong: 'Japanese (Shift JIS)',\n        labelShort: 'Shift JIS',\n        order: 38\n    },\n    eucjp: {\n        labelLong: 'Japanese (EUC-JP)',\n        labelShort: 'EUC-JP',\n        order: 39\n    },\n    euckr: {\n        labelLong: 'Korean (EUC-KR)',\n        labelShort: 'EUC-KR',\n        order: 40\n    },\n    windows874: {\n        labelLong: 'Thai (Windows 874)',\n        labelShort: 'Windows 874',\n        order: 41\n    },\n    iso885911: {\n        labelLong: 'Latin/Thai (ISO 8859-11)',\n        labelShort: 'ISO 8859-11',\n        order: 42\n    },\n    koi8ru: {\n        labelLong: 'Cyrillic (KOI8-RU)',\n        labelShort: 'KOI8-RU',\n        order: 43\n    },\n    koi8t: {\n        labelLong: 'Tajik (KOI8-T)',\n        labelShort: 'KOI8-T',\n        order: 44\n    },\n    gb2312: {\n        labelLong: 'Simplified Chinese (GB 2312)',\n        labelShort: 'GB 2312',\n        order: 45\n    },\n    cp865: {\n        labelLong: 'Nordic DOS (CP 865)',\n        labelShort: 'CP 865',\n        order: 46\n    },\n    cp850: {\n        labelLong: 'Western European DOS (CP 850)',\n        labelShort: 'CP 850',\n        order: 47\n    }\n};\nvar FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind = exports.FileKind || (exports.FileKind = {}));\nexports.MIN_MAX_MEMORY_SIZE_MB = 2048;\nexports.FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\nfunction etag(mtime, size) {\n    if (typeof size !== 'number' || typeof mtime !== 'number') {\n        return undefined;\n    }\n    return mtime.toString(29) + size.toString(31);\n}\nexports.etag = etag;\n// TODO@ben remove traces of legacy file service\nexports.ILegacyFileService = instantiation_1.createDecorator('legacyFileService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { isLinux } from 'vs/base/common/platform';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IResourceEncodings {\n\tgetWriteEncoding(resource: URI, preferredEncoding?: string): IResourceEncoding;\n}\n\nexport interface IResourceEncoding {\n\tencoding: string;\n\thasBOM: boolean;\n}\n\nexport interface IFileService {\n\t_serviceBrand: any;\n\n\t//#region File System Provider\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): Promise<boolean>;\n\n\t//#endregion\n\n\t/**\n\t * Helper to determine read/write encoding for resources.\n\t */\n\tencoding: IResourceEncodings;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watchFileChanges() API.\n\t */\n\treadonly onFileChanges: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onAfterOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolveFile but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveFiles(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveFiles(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file identified by the resource exists.\n\t */\n\texistsFile(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the full value as string.\n\t */\n\tresolveContent(resource: URI, options?: IResolveContentOptions): Promise<IContent>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the value as a readable stream.\n\t */\n\tresolveStreamContent(resource: URI, options?: IResolveContentOptions): Promise<IStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\tupdateContent(resource: URI, value: string | ITextSnapshot, options?: IUpdateContentOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmoveFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopyFile(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, content?: string, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file change events on the provided resource.\n\t */\n\twatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Allows to stop a watcher on the provided resource or absolute fs path.\n\t */\n\tunwatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\tmtime: number;\n\tctime: number;\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\tonDidChangeCapabilities: Event<void>;\n\n\tonDidChangeFile: Event<IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error): FileSystemProviderErrorCode {\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(private _resource: URI, private _operation: FileOperation, private _target?: IFileStatWithMetadata) {\n\t}\n\n\tget resource(): URI {\n\t\treturn this._resource;\n\t}\n\n\tget target(): IFileStat | undefined {\n\t\treturn this._target;\n\t}\n\n\tget operation(): FileOperation {\n\t\treturn this._operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\ttype: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\tresource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tprivate _changes: IFileChange[];\n\n\tconstructor(changes: IFileChange[]) {\n\t\tthis._changes = changes;\n\t}\n\n\tget changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this._changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource, !isLinux /* ignorecase */);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource, !isLinux /* ignorecase */);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segement\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modifictaion date represented\n\t * as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The resource is readonly.\n\t */\n\tisReadonly?: boolean;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a directory. if {{true}}\n\t * {{encoding}} has no meaning.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink?: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\n/**\n * Content and meta information of a file.\n */\nexport interface IContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a text file.\n\t */\n\tvalue: string;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\n// this should eventually replace IContent such\n// that we have a clear separation between content\n// and metadata (TODO@Joh, TODO@Ben)\nexport interface IContentData {\n\tencoding: string;\n\tstream: IStringStream;\n}\n\n/**\n * A Stream emitting strings.\n */\nexport interface IStringStream {\n\ton(event: 'data', callback: (chunk: string) => void): void;\n\ton(event: 'error', callback: (err: any) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: string, callback: any): void;\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\nexport class StringSnapshot implements ITextSnapshot {\n\tprivate _value: string | null;\n\tconstructor(value: string) {\n\t\tthis._value = value;\n\t}\n\tread(): string | null {\n\t\tlet ret = this._value;\n\t\tthis._value = null;\n\t\treturn ret;\n\t}\n}\n/**\n * Helper method to convert a snapshot into its full string form.\n */\nexport function snapshotToString(snapshot: ITextSnapshot): string {\n\tconst chunks: string[] = [];\n\tlet chunk: string | null;\n\twhile (typeof (chunk = snapshot.read()) === 'string') {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn chunks.join('');\n}\n\n/**\n * Streamable content and meta information of a file.\n */\nexport interface IStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The streamable content of a text file.\n\t */\n\tvalue: IStringStream;\n\n\t/**\n\t * The encoding of the content if known.\n\t */\n\tencoding: string;\n}\n\nexport interface IResolveContentOptions {\n\n\t/**\n\t * The optional acceptTextOnly parameter allows to fail this request early if the file\n\t * contents are not textual.\n\t */\n\tacceptTextOnly?: boolean;\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The optional encoding parameter allows to specify the desired encoding when resolving\n\t * the contents of the file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * The optional guessEncoding parameter allows to guess encoding from content of the file.\n\t */\n\tautoGuessEncoding?: boolean;\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is null,\n\t * data will be read from the current file position.\n\t */\n\tposition?: number;\n}\n\nexport interface IUpdateContentOptions {\n\n\t/**\n\t * The encoding to use when updating a file.\n\t */\n\tencoding?: string;\n\n\t/**\n\t * If set to true, will enforce the selected encoding and not perform any detection using BOMs.\n\t */\n\toverwriteEncoding?: boolean;\n\n\t/**\n\t * Whether to overwrite a file even if it is readonly.\n\t */\n\toverwriteReadonly?: boolean;\n\n\t/**\n\t * Wether to write to the file as elevated (admin) user. When setting this option a prompt will\n\t * ask the user to authenticate as super user.\n\t */\n\twriteElevated?: boolean;\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\tetag?: string;\n\n\t/**\n\t * Run mkdirp before saving.\n\t */\n\tmkdirp?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\tresolveTo?: URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\tresolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\tresolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\tresolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\toverwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IResolveContentOptions & IUpdateContentOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: any): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_BINARY,\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEED_MEMORY_LIMIT,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const CONTENT_CHANGE_EVENT_BUFFER_DELAY = 1000;\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\thotExit: string;\n\t\tuseExperimentalFileWatcher: boolean;\n\t};\n}\n\nexport const SUPPORTED_ENCODINGS: { [encoding: string]: { labelLong: string; labelShort: string; order: number; encodeOnly?: boolean; alias?: string } } = {\n\tutf8: {\n\t\tlabelLong: 'UTF-8',\n\t\tlabelShort: 'UTF-8',\n\t\torder: 1,\n\t\talias: 'utf8bom'\n\t},\n\tutf8bom: {\n\t\tlabelLong: 'UTF-8 with BOM',\n\t\tlabelShort: 'UTF-8 with BOM',\n\t\tencodeOnly: true,\n\t\torder: 2,\n\t\talias: 'utf8'\n\t},\n\tutf16le: {\n\t\tlabelLong: 'UTF-16 LE',\n\t\tlabelShort: 'UTF-16 LE',\n\t\torder: 3\n\t},\n\tutf16be: {\n\t\tlabelLong: 'UTF-16 BE',\n\t\tlabelShort: 'UTF-16 BE',\n\t\torder: 4\n\t},\n\twindows1252: {\n\t\tlabelLong: 'Western (Windows 1252)',\n\t\tlabelShort: 'Windows 1252',\n\t\torder: 5\n\t},\n\tiso88591: {\n\t\tlabelLong: 'Western (ISO 8859-1)',\n\t\tlabelShort: 'ISO 8859-1',\n\t\torder: 6\n\t},\n\tiso88593: {\n\t\tlabelLong: 'Western (ISO 8859-3)',\n\t\tlabelShort: 'ISO 8859-3',\n\t\torder: 7\n\t},\n\tiso885915: {\n\t\tlabelLong: 'Western (ISO 8859-15)',\n\t\tlabelShort: 'ISO 8859-15',\n\t\torder: 8\n\t},\n\tmacroman: {\n\t\tlabelLong: 'Western (Mac Roman)',\n\t\tlabelShort: 'Mac Roman',\n\t\torder: 9\n\t},\n\tcp437: {\n\t\tlabelLong: 'DOS (CP 437)',\n\t\tlabelShort: 'CP437',\n\t\torder: 10\n\t},\n\twindows1256: {\n\t\tlabelLong: 'Arabic (Windows 1256)',\n\t\tlabelShort: 'Windows 1256',\n\t\torder: 11\n\t},\n\tiso88596: {\n\t\tlabelLong: 'Arabic (ISO 8859-6)',\n\t\tlabelShort: 'ISO 8859-6',\n\t\torder: 12\n\t},\n\twindows1257: {\n\t\tlabelLong: 'Baltic (Windows 1257)',\n\t\tlabelShort: 'Windows 1257',\n\t\torder: 13\n\t},\n\tiso88594: {\n\t\tlabelLong: 'Baltic (ISO 8859-4)',\n\t\tlabelShort: 'ISO 8859-4',\n\t\torder: 14\n\t},\n\tiso885914: {\n\t\tlabelLong: 'Celtic (ISO 8859-14)',\n\t\tlabelShort: 'ISO 8859-14',\n\t\torder: 15\n\t},\n\twindows1250: {\n\t\tlabelLong: 'Central European (Windows 1250)',\n\t\tlabelShort: 'Windows 1250',\n\t\torder: 16\n\t},\n\tiso88592: {\n\t\tlabelLong: 'Central European (ISO 8859-2)',\n\t\tlabelShort: 'ISO 8859-2',\n\t\torder: 17\n\t},\n\tcp852: {\n\t\tlabelLong: 'Central European (CP 852)',\n\t\tlabelShort: 'CP 852',\n\t\torder: 18\n\t},\n\twindows1251: {\n\t\tlabelLong: 'Cyrillic (Windows 1251)',\n\t\tlabelShort: 'Windows 1251',\n\t\torder: 19\n\t},\n\tcp866: {\n\t\tlabelLong: 'Cyrillic (CP 866)',\n\t\tlabelShort: 'CP 866',\n\t\torder: 20\n\t},\n\tiso88595: {\n\t\tlabelLong: 'Cyrillic (ISO 8859-5)',\n\t\tlabelShort: 'ISO 8859-5',\n\t\torder: 21\n\t},\n\tkoi8r: {\n\t\tlabelLong: 'Cyrillic (KOI8-R)',\n\t\tlabelShort: 'KOI8-R',\n\t\torder: 22\n\t},\n\tkoi8u: {\n\t\tlabelLong: 'Cyrillic (KOI8-U)',\n\t\tlabelShort: 'KOI8-U',\n\t\torder: 23\n\t},\n\tiso885913: {\n\t\tlabelLong: 'Estonian (ISO 8859-13)',\n\t\tlabelShort: 'ISO 8859-13',\n\t\torder: 24\n\t},\n\twindows1253: {\n\t\tlabelLong: 'Greek (Windows 1253)',\n\t\tlabelShort: 'Windows 1253',\n\t\torder: 25\n\t},\n\tiso88597: {\n\t\tlabelLong: 'Greek (ISO 8859-7)',\n\t\tlabelShort: 'ISO 8859-7',\n\t\torder: 26\n\t},\n\twindows1255: {\n\t\tlabelLong: 'Hebrew (Windows 1255)',\n\t\tlabelShort: 'Windows 1255',\n\t\torder: 27\n\t},\n\tiso88598: {\n\t\tlabelLong: 'Hebrew (ISO 8859-8)',\n\t\tlabelShort: 'ISO 8859-8',\n\t\torder: 28\n\t},\n\tiso885910: {\n\t\tlabelLong: 'Nordic (ISO 8859-10)',\n\t\tlabelShort: 'ISO 8859-10',\n\t\torder: 29\n\t},\n\tiso885916: {\n\t\tlabelLong: 'Romanian (ISO 8859-16)',\n\t\tlabelShort: 'ISO 8859-16',\n\t\torder: 30\n\t},\n\twindows1254: {\n\t\tlabelLong: 'Turkish (Windows 1254)',\n\t\tlabelShort: 'Windows 1254',\n\t\torder: 31\n\t},\n\tiso88599: {\n\t\tlabelLong: 'Turkish (ISO 8859-9)',\n\t\tlabelShort: 'ISO 8859-9',\n\t\torder: 32\n\t},\n\twindows1258: {\n\t\tlabelLong: 'Vietnamese (Windows 1258)',\n\t\tlabelShort: 'Windows 1258',\n\t\torder: 33\n\t},\n\tgbk: {\n\t\tlabelLong: 'Simplified Chinese (GBK)',\n\t\tlabelShort: 'GBK',\n\t\torder: 34\n\t},\n\tgb18030: {\n\t\tlabelLong: 'Simplified Chinese (GB18030)',\n\t\tlabelShort: 'GB18030',\n\t\torder: 35\n\t},\n\tcp950: {\n\t\tlabelLong: 'Traditional Chinese (Big5)',\n\t\tlabelShort: 'Big5',\n\t\torder: 36\n\t},\n\tbig5hkscs: {\n\t\tlabelLong: 'Traditional Chinese (Big5-HKSCS)',\n\t\tlabelShort: 'Big5-HKSCS',\n\t\torder: 37\n\t},\n\tshiftjis: {\n\t\tlabelLong: 'Japanese (Shift JIS)',\n\t\tlabelShort: 'Shift JIS',\n\t\torder: 38\n\t},\n\teucjp: {\n\t\tlabelLong: 'Japanese (EUC-JP)',\n\t\tlabelShort: 'EUC-JP',\n\t\torder: 39\n\t},\n\teuckr: {\n\t\tlabelLong: 'Korean (EUC-KR)',\n\t\tlabelShort: 'EUC-KR',\n\t\torder: 40\n\t},\n\twindows874: {\n\t\tlabelLong: 'Thai (Windows 874)',\n\t\tlabelShort: 'Windows 874',\n\t\torder: 41\n\t},\n\tiso885911: {\n\t\tlabelLong: 'Latin/Thai (ISO 8859-11)',\n\t\tlabelShort: 'ISO 8859-11',\n\t\torder: 42\n\t},\n\tkoi8ru: {\n\t\tlabelLong: 'Cyrillic (KOI8-RU)',\n\t\tlabelShort: 'KOI8-RU',\n\t\torder: 43\n\t},\n\tkoi8t: {\n\t\tlabelLong: 'Tajik (KOI8-T)',\n\t\tlabelShort: 'KOI8-T',\n\t\torder: 44\n\t},\n\tgb2312: {\n\t\tlabelLong: 'Simplified Chinese (GB 2312)',\n\t\tlabelShort: 'GB 2312',\n\t\torder: 45\n\t},\n\tcp865: {\n\t\tlabelLong: 'Nordic DOS (CP 865)',\n\t\tlabelShort: 'CP 865',\n\t\torder: 46\n\t},\n\tcp850: {\n\t\tlabelLong: 'Western European DOS (CP 850)',\n\t\tlabelShort: 'CP 850',\n\t\torder: 47\n\t}\n};\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\nexport function etag(mtime: number, size: number): string;\nexport function etag(mtime: number | undefined, size: number | undefined): string | undefined;\nexport function etag(mtime: number | undefined, size: number | undefined): string | undefined {\n\tif (typeof size !== 'number' || typeof mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn mtime.toString(29) + size.toString(31);\n}\n\n\n// TODO@ben remove traces of legacy file service\nexport const ILegacyFileService = createDecorator<ILegacyFileService>('legacyFileService');\nexport interface ILegacyFileService {\n\t_serviceBrand: any;\n\n\tencoding: IResourceEncodings;\n\n\tonFileChanges: Event<FileChangesEvent>;\n\tonAfterOperation: Event<FileOperationEvent>;\n\n\tresolveContent(resource: URI, options?: IResolveContentOptions): Promise<IContent>;\n\n\tresolveStreamContent(resource: URI, options?: IResolveContentOptions): Promise<IStreamContent>;\n\n\tupdateContent(resource: URI, value: string | ITextSnapshot, options?: IUpdateContentOptions): Promise<IFileStat>;\n\n\tcreateFile(resource: URI, content?: string, options?: ICreateFileOptions): Promise<IFileStat>;\n\n\twatchFileChanges(resource: URI): void;\n\n\tunwatchFileChanges(resource: URI): void;\n}"]}]}