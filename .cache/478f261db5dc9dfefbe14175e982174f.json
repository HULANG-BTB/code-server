{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/colorPicker/color.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/colorPicker/color.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nfunction getColors(model, token) {\n    var colors = [];\n    var providers = modes_1.ColorProviderRegistry.ordered(model).reverse();\n    var promises = providers.map(function (provider) { return Promise.resolve(provider.provideDocumentColors(model, token)).then(function (result) {\n        if (Array.isArray(result)) {\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n                var colorInfo = result_1[_i];\n                colors.push({ colorInfo: colorInfo, provider: provider });\n            }\n        }\n    }); });\n    return Promise.all(promises).then(function () { return colors; });\n}\nexports.getColors = getColors;\nfunction getColorPresentations(model, colorInfo, provider, token) {\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\nexports.getColorPresentations = getColorPresentations;\neditorExtensions_1.registerLanguageCommand('_executeDocumentColorProvider', function (accessor, args) {\n    var resource = args.resource;\n    if (!(resource instanceof uri_1.URI)) {\n        throw errors_1.illegalArgument();\n    }\n    var model = accessor.get(modelService_1.IModelService).getModel(resource);\n    if (!model) {\n        throw errors_1.illegalArgument();\n    }\n    var rawCIs = [];\n    var providers = modes_1.ColorProviderRegistry.ordered(model).reverse();\n    var promises = providers.map(function (provider) { return Promise.resolve(provider.provideDocumentColors(model, cancellation_1.CancellationToken.None)).then(function (result) {\n        if (Array.isArray(result)) {\n            for (var _i = 0, result_2 = result; _i < result_2.length; _i++) {\n                var ci = result_2[_i];\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\n            }\n        }\n    }); });\n    return Promise.all(promises).then(function () { return rawCIs; });\n});\neditorExtensions_1.registerLanguageCommand('_executeColorPresentationProvider', function (accessor, args) {\n    var resource = args.resource, color = args.color, range = args.range;\n    if (!(resource instanceof uri_1.URI) || !Array.isArray(color) || color.length !== 4 || !range_1.Range.isIRange(range)) {\n        throw errors_1.illegalArgument();\n    }\n    var red = color[0], green = color[1], blue = color[2], alpha = color[3];\n    var model = accessor.get(modelService_1.IModelService).getModel(resource);\n    if (!model) {\n        throw errors_1.illegalArgument();\n    }\n    var colorInfo = {\n        range: range,\n        color: { red: red, green: green, blue: blue, alpha: alpha }\n    };\n    var presentations = [];\n    var providers = modes_1.ColorProviderRegistry.ordered(model).reverse();\n    var promises = providers.map(function (provider) { return Promise.resolve(provider.provideColorPresentations(model, colorInfo, cancellation_1.CancellationToken.None)).then(function (result) {\n        if (Array.isArray(result)) {\n            presentations.push.apply(presentations, result);\n        }\n    }); });\n    return Promise.all(promises).then(function () { return presentations; });\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/colorPicker/color.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/colorPicker/color.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { registerLanguageCommand } from 'vs/editor/browser/editorExtensions';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ColorProviderRegistry, DocumentColorProvider, IColorInformation, IColorPresentation } from 'vs/editor/common/modes';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\n\nexport interface IColorData {\n\tcolorInfo: IColorInformation;\n\tprovider: DocumentColorProvider;\n}\n\nexport function getColors(model: ITextModel, token: CancellationToken): Promise<IColorData[]> {\n\tconst colors: IColorData[] = [];\n\tconst providers = ColorProviderRegistry.ordered(model).reverse();\n\tconst promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\n\t\tif (Array.isArray(result)) {\n\t\t\tfor (let colorInfo of result) {\n\t\t\t\tcolors.push({ colorInfo, provider });\n\t\t\t}\n\t\t}\n\t}));\n\n\treturn Promise.all(promises).then(() => colors);\n}\n\nexport function getColorPresentations(model: ITextModel, colorInfo: IColorInformation, provider: DocumentColorProvider, token: CancellationToken): Promise<IColorPresentation[] | null | undefined> {\n\treturn Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\n\nregisterLanguageCommand('_executeDocumentColorProvider', function (accessor, args) {\n\n\tconst { resource } = args;\n\tif (!(resource instanceof URI)) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst rawCIs: { range: IRange, color: [number, number, number, number] }[] = [];\n\tconst providers = ColorProviderRegistry.ordered(model).reverse();\n\tconst promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\n\t\tif (Array.isArray(result)) {\n\t\t\tfor (let ci of result) {\n\t\t\t\trawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\n\t\t\t}\n\t\t}\n\t}));\n\n\treturn Promise.all(promises).then(() => rawCIs);\n});\n\n\nregisterLanguageCommand('_executeColorPresentationProvider', function (accessor, args) {\n\n\tconst { resource, color, range } = args;\n\tif (!(resource instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\n\t\tthrow illegalArgument();\n\t}\n\tconst [red, green, blue, alpha] = color;\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst colorInfo = {\n\t\trange,\n\t\tcolor: { red, green, blue, alpha }\n\t};\n\n\tconst presentations: IColorPresentation[] = [];\n\tconst providers = ColorProviderRegistry.ordered(model).reverse();\n\tconst promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\n\t\tif (Array.isArray(result)) {\n\t\t\tpresentations.push(...result);\n\t\t}\n\t}));\n\treturn Promise.all(promises).then(() => presentations);\n});\n"]}]}