{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/node/hashService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/node/hashService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto_1 = require(\"crypto\");\nvar hashService_1 = require(\"vs/workbench/services/hash/common/hashService\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar HashService = /** @class */ (function () {\n    function HashService() {\n    }\n    HashService.prototype.createSHA1 = function (content) {\n        return Promise.resolve(crypto_1.createHash('sha1').update(content).digest('hex'));\n    };\n    return HashService;\n}());\nexports.HashService = HashService;\nextensions_1.registerSingleton(hashService_1.IHashService, HashService, true);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/node/hashService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/node/hashService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,iCAAoC;AACpC,6EAA6E;AAC7E,0EAAgF;AAEhF;IAAA;IAOA,CAAC;IAHA,gCAAU,GAAV,UAAW,OAAe;QACzB,OAAO,OAAO,CAAC,OAAO,CAAC,mBAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1E,CAAC;IACF,kBAAC;AAAD,CAAC,AAPD,IAOC;AAPY,kCAAW;AASxB,8BAAiB,CAAC,0BAAY,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { IHashService } from 'vs/workbench/services/hash/common/hashService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport class HashService implements IHashService {\n\n\t_serviceBrand: any;\n\n\tcreateSHA1(content: string): Promise<string> {\n\t\treturn Promise.resolve(createHash('sha1').update(content).digest('hex'));\n\t}\n}\n\nregisterSingleton(IHashService, HashService, true);"]}]}