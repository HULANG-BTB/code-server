{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingsEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingsEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/keybindingsEditor\");\nvar nls_1 = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar checkbox_1 = require(\"vs/base/browser/ui/checkbox/checkbox\");\nvar highlightedLabel_1 = require(\"vs/base/browser/ui/highlightedlabel/highlightedLabel\");\nvar keybindingLabel_1 = require(\"vs/base/browser/ui/keybindingLabel/keybindingLabel\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar baseEditor_1 = require(\"vs/workbench/browser/parts/editor/baseEditor\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar clipboardService_1 = require(\"vs/platform/clipboard/common/clipboardService\");\nvar keybindingsEditorModel_1 = require(\"vs/workbench/services/preferences/common/keybindingsEditorModel\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar keybindingWidgets_1 = require(\"vs/workbench/contrib/preferences/browser/keybindingWidgets\");\nvar preferences_1 = require(\"vs/workbench/contrib/preferences/common/preferences\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar keybindingEditing_1 = require(\"vs/workbench/services/keybinding/common/keybindingEditing\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar event_1 = require(\"vs/base/common/event\");\nvar $ = DOM.$;\nvar KeybindingsEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(KeybindingsEditor, _super);\n    function KeybindingsEditor(telemetryService, themeService, keybindingsService, contextMenuService, keybindingEditingService, contextKeyService, notificationService, clipboardService, instantiationService, editorService, storageService) {\n        var _this = _super.call(this, KeybindingsEditor.ID, telemetryService, themeService, storageService) || this;\n        _this.keybindingsService = keybindingsService;\n        _this.contextMenuService = contextMenuService;\n        _this.keybindingEditingService = keybindingEditingService;\n        _this.contextKeyService = contextKeyService;\n        _this.notificationService = notificationService;\n        _this.clipboardService = clipboardService;\n        _this.instantiationService = instantiationService;\n        _this.editorService = editorService;\n        _this._onDefineWhenExpression = _this._register(new event_1.Emitter());\n        _this.onDefineWhenExpression = _this._onDefineWhenExpression.event;\n        _this._onLayout = _this._register(new event_1.Emitter());\n        _this.onLayout = _this._onLayout.event;\n        _this.columnItems = [];\n        _this.latestEmptyFilters = [];\n        _this.delayedFiltering = new async_1.Delayer(300);\n        _this._register(keybindingsService.onDidUpdateKeybindings(function () { return _this.render(true); }));\n        _this.keybindingsEditorContextKey = preferences_1.CONTEXT_KEYBINDINGS_EDITOR.bindTo(_this.contextKeyService);\n        _this.searchFocusContextKey = preferences_1.CONTEXT_KEYBINDINGS_SEARCH_FOCUS.bindTo(_this.contextKeyService);\n        _this.keybindingFocusContextKey = preferences_1.CONTEXT_KEYBINDING_FOCUS.bindTo(_this.contextKeyService);\n        _this.delayedFilterLogging = new async_1.Delayer(1000);\n        return _this;\n    }\n    KeybindingsEditor.prototype.createEditor = function (parent) {\n        var keybindingsEditorElement = DOM.append(parent, $('div', { class: 'keybindings-editor' }));\n        this.createAriaLabelElement(keybindingsEditorElement);\n        this.createOverlayContainer(keybindingsEditorElement);\n        this.createHeader(keybindingsEditorElement);\n        this.createBody(keybindingsEditorElement);\n    };\n    KeybindingsEditor.prototype.setInput = function (input, options, token) {\n        var _this = this;\n        this.keybindingsEditorContextKey.set(true);\n        return _super.prototype.setInput.call(this, input, options, token)\n            .then(function () { return _this.render(!!(options && options.preserveFocus)); });\n    };\n    KeybindingsEditor.prototype.clearInput = function () {\n        _super.prototype.clearInput.call(this);\n        this.keybindingsEditorContextKey.reset();\n        this.keybindingFocusContextKey.reset();\n    };\n    KeybindingsEditor.prototype.layout = function (dimension) {\n        this.dimension = dimension;\n        this.layoutSearchWidget(dimension);\n        this.overlayContainer.style.width = dimension.width + 'px';\n        this.overlayContainer.style.height = dimension.height + 'px';\n        this.defineKeybindingWidget.layout(this.dimension);\n        this.columnItems.forEach(function (columnItem) {\n            if (columnItem.proportion) {\n                columnItem.width = 0;\n            }\n        });\n        this.layoutKeybindingsList();\n        this._onLayout.fire();\n    };\n    KeybindingsEditor.prototype.layoutColumns = function (columns) {\n        var _this = this;\n        if (this.columnItems) {\n            columns.forEach(function (column, index) {\n                column.style.paddingRight = \"6px\";\n                column.style.width = _this.columnItems[index].width + \"px\";\n            });\n        }\n    };\n    KeybindingsEditor.prototype.focus = function () {\n        var activeKeybindingEntry = this.activeKeybindingEntry;\n        if (activeKeybindingEntry) {\n            this.selectEntry(activeKeybindingEntry);\n        }\n        else {\n            this.searchWidget.focus();\n        }\n    };\n    Object.defineProperty(KeybindingsEditor.prototype, \"activeKeybindingEntry\", {\n        get: function () {\n            var focusedElement = this.keybindingsList.getFocusedElements()[0];\n            return focusedElement && focusedElement.templateId === keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID ? focusedElement : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeybindingsEditor.prototype.defineKeybinding = function (keybindingEntry) {\n        var _this = this;\n        this.selectEntry(keybindingEntry);\n        this.showOverlayContainer();\n        return this.defineKeybindingWidget.define().then(function (key) {\n            if (key) {\n                _this.reportKeybindingAction(preferences_1.KEYBINDINGS_EDITOR_COMMAND_DEFINE, keybindingEntry.keybindingItem.command, key);\n                return _this.updateKeybinding(keybindingEntry, key, keybindingEntry.keybindingItem.when);\n            }\n            return null;\n        }).then(function () {\n            _this.hideOverlayContainer();\n            _this.selectEntry(keybindingEntry);\n        }, function (error) {\n            _this.hideOverlayContainer();\n            _this.onKeybindingEditingError(error);\n            _this.selectEntry(keybindingEntry);\n            return error;\n        });\n    };\n    KeybindingsEditor.prototype.defineWhenExpression = function (keybindingEntry) {\n        if (keybindingEntry.keybindingItem.keybinding) {\n            this.selectEntry(keybindingEntry);\n            this._onDefineWhenExpression.fire(keybindingEntry);\n        }\n    };\n    KeybindingsEditor.prototype.updateKeybinding = function (keybindingEntry, key, when) {\n        var _this = this;\n        var currentKey = keybindingEntry.keybindingItem.keybinding ? keybindingEntry.keybindingItem.keybinding.getUserSettingsLabel() : '';\n        if (currentKey !== key || keybindingEntry.keybindingItem.when !== when) {\n            return this.keybindingEditingService.editKeybinding(keybindingEntry.keybindingItem.keybindingItem, key, when || undefined)\n                .then(function () {\n                if (!keybindingEntry.keybindingItem.keybinding) { // reveal only if keybinding was added to unassinged. Because the entry will be placed in different position after rendering\n                    _this.unAssignedKeybindingItemToRevealAndFocus = keybindingEntry;\n                }\n            });\n        }\n        return Promise.resolve();\n    };\n    KeybindingsEditor.prototype.removeKeybinding = function (keybindingEntry) {\n        var _this = this;\n        this.selectEntry(keybindingEntry);\n        if (keybindingEntry.keybindingItem.keybinding) { // This should be a pre-condition\n            this.reportKeybindingAction(preferences_1.KEYBINDINGS_EDITOR_COMMAND_REMOVE, keybindingEntry.keybindingItem.command, keybindingEntry.keybindingItem.keybinding);\n            return this.keybindingEditingService.removeKeybinding(keybindingEntry.keybindingItem.keybindingItem)\n                .then(function () { return _this.focus(); }, function (error) {\n                _this.onKeybindingEditingError(error);\n                _this.selectEntry(keybindingEntry);\n            });\n        }\n        return Promise.resolve(null);\n    };\n    KeybindingsEditor.prototype.resetKeybinding = function (keybindingEntry) {\n        var _this = this;\n        this.selectEntry(keybindingEntry);\n        this.reportKeybindingAction(preferences_1.KEYBINDINGS_EDITOR_COMMAND_RESET, keybindingEntry.keybindingItem.command, keybindingEntry.keybindingItem.keybinding);\n        return this.keybindingEditingService.resetKeybinding(keybindingEntry.keybindingItem.keybindingItem)\n            .then(function () {\n            if (!keybindingEntry.keybindingItem.keybinding) { // reveal only if keybinding was added to unassinged. Because the entry will be placed in different position after rendering\n                _this.unAssignedKeybindingItemToRevealAndFocus = keybindingEntry;\n            }\n            _this.selectEntry(keybindingEntry);\n        }, function (error) {\n            _this.onKeybindingEditingError(error);\n            _this.selectEntry(keybindingEntry);\n        });\n    };\n    KeybindingsEditor.prototype.copyKeybinding = function (keybinding) {\n        this.selectEntry(keybinding);\n        this.reportKeybindingAction(preferences_1.KEYBINDINGS_EDITOR_COMMAND_COPY, keybinding.keybindingItem.command, keybinding.keybindingItem.keybinding);\n        var userFriendlyKeybinding = {\n            key: keybinding.keybindingItem.keybinding ? keybinding.keybindingItem.keybinding.getUserSettingsLabel() || '' : '',\n            command: keybinding.keybindingItem.command\n        };\n        if (keybinding.keybindingItem.when) {\n            userFriendlyKeybinding.when = keybinding.keybindingItem.when;\n        }\n        this.clipboardService.writeText(JSON.stringify(userFriendlyKeybinding, null, '  '));\n    };\n    KeybindingsEditor.prototype.copyKeybindingCommand = function (keybinding) {\n        this.selectEntry(keybinding);\n        this.reportKeybindingAction(preferences_1.KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND, keybinding.keybindingItem.command, keybinding.keybindingItem.keybinding);\n        this.clipboardService.writeText(keybinding.keybindingItem.command);\n    };\n    KeybindingsEditor.prototype.focusSearch = function () {\n        this.searchWidget.focus();\n    };\n    KeybindingsEditor.prototype.search = function (filter) {\n        this.focusSearch();\n        this.searchWidget.setValue(filter);\n    };\n    KeybindingsEditor.prototype.clearSearchResults = function () {\n        this.searchWidget.clear();\n    };\n    KeybindingsEditor.prototype.showSimilarKeybindings = function (keybindingEntry) {\n        var value = \"\\\"\" + keybindingEntry.keybindingItem.keybinding.getAriaLabel() + \"\\\"\";\n        if (value !== this.searchWidget.getValue()) {\n            this.searchWidget.setValue(value);\n        }\n    };\n    KeybindingsEditor.prototype.createAriaLabelElement = function (parent) {\n        this.ariaLabelElement = DOM.append(parent, DOM.$(''));\n        this.ariaLabelElement.setAttribute('id', 'keybindings-editor-aria-label-element');\n        this.ariaLabelElement.setAttribute('aria-live', 'assertive');\n    };\n    KeybindingsEditor.prototype.createOverlayContainer = function (parent) {\n        var _this = this;\n        this.overlayContainer = DOM.append(parent, $('.overlay-container'));\n        this.overlayContainer.style.position = 'absolute';\n        this.overlayContainer.style.zIndex = '10';\n        this.defineKeybindingWidget = this._register(this.instantiationService.createInstance(keybindingWidgets_1.DefineKeybindingWidget, this.overlayContainer));\n        this._register(this.defineKeybindingWidget.onDidChange(function (keybindingStr) { return _this.defineKeybindingWidget.printExisting(_this.keybindingsEditorModel.fetch(\"\\\"\" + keybindingStr + \"\\\"\").length); }));\n        this._register(this.defineKeybindingWidget.onShowExistingKeybidings(function (keybindingStr) { return _this.searchWidget.setValue(\"\\\"\" + keybindingStr + \"\\\"\"); }));\n        this.hideOverlayContainer();\n    };\n    KeybindingsEditor.prototype.showOverlayContainer = function () {\n        this.overlayContainer.style.display = 'block';\n    };\n    KeybindingsEditor.prototype.hideOverlayContainer = function () {\n        this.overlayContainer.style.display = 'none';\n    };\n    KeybindingsEditor.prototype.createHeader = function (parent) {\n        var _this = this;\n        this.headerContainer = DOM.append(parent, $('.keybindings-header'));\n        var fullTextSearchPlaceholder = nls_1.localize('SearchKeybindings.FullTextSearchPlaceholder', \"Type to search in keybindings\");\n        var keybindingsSearchPlaceholder = nls_1.localize('SearchKeybindings.KeybindingsSearchPlaceholder', \"Recording Keys. Press Escape to exit\");\n        var clearInputAction = new actions_1.Action(preferences_1.KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, nls_1.localize('clearInput', \"Clear Keybindings Search Input\"), 'clear-input', false, function () { _this.search(''); return Promise.resolve(null); });\n        var searchContainer = DOM.append(this.headerContainer, $('.search-container'));\n        this.searchWidget = this._register(this.instantiationService.createInstance(keybindingWidgets_1.KeybindingsSearchWidget, searchContainer, {\n            ariaLabel: fullTextSearchPlaceholder,\n            placeholder: fullTextSearchPlaceholder,\n            focusKey: this.searchFocusContextKey,\n            ariaLabelledBy: 'keybindings-editor-aria-label-element',\n            recordEnter: true,\n            quoteRecordedKeys: true\n        }));\n        this._register(this.searchWidget.onDidChange(function (searchValue) {\n            clearInputAction.enabled = !!searchValue;\n            _this.delayedFiltering.trigger(function () { return _this.filterKeybindings(); });\n        }));\n        this._register(this.searchWidget.onEscape(function () { return _this.recordKeysAction.checked = false; }));\n        this.actionsContainer = DOM.append(searchContainer, DOM.$('.keybindings-search-actions-container'));\n        var recordingBadge = this.createRecordingBadge(this.actionsContainer);\n        var sortByPrecedenceActionKeybinding = this.keybindingsService.lookupKeybinding(preferences_1.KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE);\n        var sortByPrecedenceActionLabel = nls_1.localize('sortByPrecedeneLabel', \"Sort by Precedence\");\n        this.sortByPrecedenceAction = new actions_1.Action('keybindings.editor.sortByPrecedence', sortByPrecedenceActionKeybinding ? nls_1.localize('sortByPrecedeneLabelWithKeybinding', \"{0} ({1})\", sortByPrecedenceActionLabel, sortByPrecedenceActionKeybinding.getLabel()) : sortByPrecedenceActionLabel, 'sort-by-precedence');\n        this.sortByPrecedenceAction.checked = false;\n        this._register(this.sortByPrecedenceAction.onDidChange(function (e) {\n            if (e.checked !== undefined) {\n                _this.renderKeybindingsEntries(false);\n            }\n        }));\n        var recordKeysActionKeybinding = this.keybindingsService.lookupKeybinding(preferences_1.KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS);\n        var recordKeysActionLabel = nls_1.localize('recordKeysLabel', \"Record Keys\");\n        this.recordKeysAction = new actions_1.Action(preferences_1.KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS, recordKeysActionKeybinding ? nls_1.localize('recordKeysLabelWithKeybinding', \"{0} ({1})\", recordKeysActionLabel, recordKeysActionKeybinding.getLabel()) : recordKeysActionLabel, 'record-keys');\n        this.recordKeysAction.checked = false;\n        this._register(this.recordKeysAction.onDidChange(function (e) {\n            if (e.checked !== undefined) {\n                DOM.toggleClass(recordingBadge, 'disabled', !e.checked);\n                if (e.checked) {\n                    _this.searchWidget.inputBox.setPlaceHolder(keybindingsSearchPlaceholder);\n                    _this.searchWidget.inputBox.setAriaLabel(keybindingsSearchPlaceholder);\n                    _this.searchWidget.startRecordingKeys();\n                    _this.searchWidget.focus();\n                }\n                else {\n                    _this.searchWidget.inputBox.setPlaceHolder(fullTextSearchPlaceholder);\n                    _this.searchWidget.inputBox.setAriaLabel(fullTextSearchPlaceholder);\n                    _this.searchWidget.stopRecordingKeys();\n                    _this.searchWidget.focus();\n                }\n            }\n        }));\n        this.actionBar = this._register(new actionbar_1.ActionBar(this.actionsContainer, {\n            animated: false,\n            actionItemProvider: function (action) {\n                if (action.id === _this.sortByPrecedenceAction.id) {\n                    return new checkbox_1.CheckboxActionItem(null, action);\n                }\n                if (action.id === _this.recordKeysAction.id) {\n                    return new checkbox_1.CheckboxActionItem(null, action);\n                }\n                return undefined;\n            }\n        }));\n        this.actionBar.push([this.recordKeysAction, this.sortByPrecedenceAction, clearInputAction], { label: false, icon: true });\n    };\n    KeybindingsEditor.prototype.createRecordingBadge = function (container) {\n        var recordingBadge = DOM.append(container, DOM.$('.recording-badge.disabled'));\n        recordingBadge.textContent = nls_1.localize('recording', \"Recording Keys\");\n        this._register(styler_1.attachStylerCallback(this.themeService, { badgeBackground: colorRegistry_1.badgeBackground, contrastBorder: colorRegistry_1.contrastBorder, badgeForeground: colorRegistry_1.badgeForeground }, function (colors) {\n            var background = colors.badgeBackground ? colors.badgeBackground.toString() : null;\n            var border = colors.contrastBorder ? colors.contrastBorder.toString() : null;\n            var color = colors.badgeForeground ? colors.badgeForeground.toString() : null;\n            recordingBadge.style.backgroundColor = background;\n            recordingBadge.style.borderWidth = border ? '1px' : null;\n            recordingBadge.style.borderStyle = border ? 'solid' : null;\n            recordingBadge.style.borderColor = border;\n            recordingBadge.style.color = color ? color.toString() : null;\n        }));\n        return recordingBadge;\n    };\n    KeybindingsEditor.prototype.layoutSearchWidget = function (dimension) {\n        this.searchWidget.layout(dimension);\n        DOM.toggleClass(this.headerContainer, 'small', dimension.width < 400);\n        this.searchWidget.inputBox.inputElement.style.paddingRight = DOM.getTotalWidth(this.actionsContainer) + 12 + \"px\";\n    };\n    KeybindingsEditor.prototype.createBody = function (parent) {\n        var bodyContainer = DOM.append(parent, $('.keybindings-body'));\n        this.createListHeader(bodyContainer);\n        this.createList(bodyContainer);\n    };\n    KeybindingsEditor.prototype.createListHeader = function (parent) {\n        var keybindingsListHeader = DOM.append(parent, $('.keybindings-list-header'));\n        keybindingsListHeader.style.height = '30px';\n        keybindingsListHeader.style.lineHeight = '30px';\n        this.columnItems = [];\n        var column = $('.header.actions');\n        this.columnItems.push({ column: column, width: 30 });\n        column = $('.header.command', undefined, nls_1.localize('command', \"Command\"));\n        this.columnItems.push({ column: column, proportion: 0.3, width: 0 });\n        column = $('.header.keybinding', undefined, nls_1.localize('keybinding', \"Keybinding\"));\n        this.columnItems.push({ column: column, proportion: 0.2, width: 0 });\n        column = $('.header.when', undefined, nls_1.localize('when', \"When\"));\n        this.columnItems.push({ column: column, proportion: 0.4, width: 0 });\n        column = $('.header.source', undefined, nls_1.localize('source', \"Source\"));\n        this.columnItems.push({ column: column, proportion: 0.1, width: 0 });\n        DOM.append.apply(DOM, [keybindingsListHeader].concat(this.columnItems.map(function (_a) {\n            var column = _a.column;\n            return column;\n        })));\n    };\n    KeybindingsEditor.prototype.createList = function (parent) {\n        var _this = this;\n        this.keybindingsListContainer = DOM.append(parent, $('.keybindings-list-container'));\n        this.keybindingsList = this._register(this.instantiationService.createInstance(listService_1.WorkbenchList, this.keybindingsListContainer, new Delegate(), [new KeybindingItemRenderer(this, this.instantiationService)], {\n            identityProvider: { getId: function (e) { return e.id; } },\n            ariaLabel: nls_1.localize('keybindingsLabel', \"Keybindings\"),\n            setRowLineHeight: false,\n            horizontalScrolling: false\n        }));\n        this._register(this.keybindingsList.onContextMenu(function (e) { return _this.onContextMenu(e); }));\n        this._register(this.keybindingsList.onFocusChange(function (e) { return _this.onFocusChange(e); }));\n        this._register(this.keybindingsList.onDidFocus(function () {\n            DOM.addClass(_this.keybindingsList.getHTMLElement(), 'focused');\n        }));\n        this._register(this.keybindingsList.onDidBlur(function () {\n            DOM.removeClass(_this.keybindingsList.getHTMLElement(), 'focused');\n            _this.keybindingFocusContextKey.reset();\n        }));\n        this._register(this.keybindingsList.onMouseDblClick(function () {\n            var activeKeybindingEntry = _this.activeKeybindingEntry;\n            if (activeKeybindingEntry) {\n                _this.defineKeybinding(activeKeybindingEntry);\n            }\n        }));\n        this._register(this.keybindingsList.onKeyDown(function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.keyCode === keyCodes_1.KeyCode.Enter) {\n                var keybindingEntry = _this.activeKeybindingEntry;\n                if (keybindingEntry) {\n                    _this.defineKeybinding(keybindingEntry);\n                }\n                e.stopPropagation();\n            }\n        }));\n    };\n    KeybindingsEditor.prototype.render = function (preserveFocus) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var input, _a, editorActionsLabels;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.input) return [3 /*break*/, 3];\n                        input = this.input;\n                        _a = this;\n                        return [4 /*yield*/, input.resolve()];\n                    case 1:\n                        _a.keybindingsEditorModel = _b.sent();\n                        editorActionsLabels = editorExtensions_1.EditorExtensionsRegistry.getEditorActions().reduce(function (editorActions, editorAction) {\n                            editorActions[editorAction.id] = editorAction.label;\n                            return editorActions;\n                        }, {});\n                        return [4 /*yield*/, this.keybindingsEditorModel.resolve(editorActionsLabels)];\n                    case 2:\n                        _b.sent();\n                        this.renderKeybindingsEntries(false, preserveFocus);\n                        _b.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    KeybindingsEditor.prototype.filterKeybindings = function () {\n        var _this = this;\n        this.renderKeybindingsEntries(this.searchWidget.hasFocus());\n        this.delayedFilterLogging.trigger(function () { return _this.reportFilteringUsed(_this.searchWidget.getValue()); });\n    };\n    KeybindingsEditor.prototype.renderKeybindingsEntries = function (reset, preserveFocus) {\n        if (this.keybindingsEditorModel) {\n            var filter = this.searchWidget.getValue();\n            var keybindingsEntries = this.keybindingsEditorModel.fetch(filter, this.sortByPrecedenceAction.checked);\n            this.ariaLabelElement.setAttribute('aria-label', this.getAriaLabel(keybindingsEntries));\n            if (keybindingsEntries.length === 0) {\n                this.latestEmptyFilters.push(filter);\n            }\n            var currentSelectedIndex = this.keybindingsList.getSelection()[0];\n            this.listEntries = keybindingsEntries;\n            this.keybindingsList.splice(0, this.keybindingsList.length, this.listEntries);\n            this.layoutKeybindingsList();\n            if (reset) {\n                this.keybindingsList.setSelection([]);\n                this.keybindingsList.setFocus([]);\n            }\n            else {\n                if (this.unAssignedKeybindingItemToRevealAndFocus) {\n                    var index = this.getNewIndexOfUnassignedKeybinding(this.unAssignedKeybindingItemToRevealAndFocus);\n                    if (index !== -1) {\n                        this.keybindingsList.reveal(index, 0.2);\n                        this.selectEntry(index);\n                    }\n                    this.unAssignedKeybindingItemToRevealAndFocus = null;\n                }\n                else if (currentSelectedIndex !== -1 && currentSelectedIndex < this.listEntries.length) {\n                    this.selectEntry(currentSelectedIndex);\n                }\n                else if (this.editorService.activeControl === this && !preserveFocus) {\n                    this.focus();\n                }\n            }\n        }\n    };\n    KeybindingsEditor.prototype.getAriaLabel = function (keybindingsEntries) {\n        if (this.sortByPrecedenceAction.checked) {\n            return nls_1.localize('show sorted keybindings', \"Showing {0} Keybindings in precedence order\", keybindingsEntries.length);\n        }\n        else {\n            return nls_1.localize('show keybindings', \"Showing {0} Keybindings in alphabetical order\", keybindingsEntries.length);\n        }\n    };\n    KeybindingsEditor.prototype.layoutKeybindingsList = function () {\n        var width = this.dimension.width - 27;\n        for (var _i = 0, _a = this.columnItems; _i < _a.length; _i++) {\n            var columnItem = _a[_i];\n            if (columnItem.width && !columnItem.proportion) {\n                width = width - columnItem.width;\n            }\n        }\n        for (var _b = 0, _c = this.columnItems; _b < _c.length; _b++) {\n            var columnItem = _c[_b];\n            if (columnItem.proportion && !columnItem.width) {\n                columnItem.width = width * columnItem.proportion;\n            }\n        }\n        this.layoutColumns(this.columnItems.map(function (_a) {\n            var column = _a.column;\n            return column;\n        }));\n        var listHeight = this.dimension.height - (DOM.getDomNodePagePosition(this.headerContainer).height + 12 /*padding*/ + 30 /*list header*/);\n        this.keybindingsListContainer.style.height = listHeight + \"px\";\n        this.keybindingsList.layout(listHeight);\n    };\n    KeybindingsEditor.prototype.getIndexOf = function (listEntry) {\n        var index = this.listEntries.indexOf(listEntry);\n        if (index === -1) {\n            for (var i = 0; i < this.listEntries.length; i++) {\n                if (this.listEntries[i].id === listEntry.id) {\n                    return i;\n                }\n            }\n        }\n        return index;\n    };\n    KeybindingsEditor.prototype.getNewIndexOfUnassignedKeybinding = function (unassignedKeybinding) {\n        for (var index = 0; index < this.listEntries.length; index++) {\n            var entry = this.listEntries[index];\n            if (entry.templateId === keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID) {\n                var keybindingItemEntry = entry;\n                if (keybindingItemEntry.keybindingItem.command === unassignedKeybinding.keybindingItem.command) {\n                    return index;\n                }\n            }\n        }\n        return -1;\n    };\n    KeybindingsEditor.prototype.selectEntry = function (keybindingItemEntry) {\n        var index = typeof keybindingItemEntry === 'number' ? keybindingItemEntry : this.getIndexOf(keybindingItemEntry);\n        if (index !== -1) {\n            this.keybindingsList.getHTMLElement().focus();\n            this.keybindingsList.setFocus([index]);\n            this.keybindingsList.setSelection([index]);\n        }\n    };\n    KeybindingsEditor.prototype.focusKeybindings = function () {\n        this.keybindingsList.getHTMLElement().focus();\n        var currentFocusIndices = this.keybindingsList.getFocus();\n        this.keybindingsList.setFocus([currentFocusIndices.length ? currentFocusIndices[0] : 0]);\n    };\n    KeybindingsEditor.prototype.selectKeybinding = function (keybindingItemEntry) {\n        this.selectEntry(keybindingItemEntry);\n    };\n    KeybindingsEditor.prototype.recordSearchKeys = function () {\n        this.recordKeysAction.checked = true;\n    };\n    KeybindingsEditor.prototype.toggleSortByPrecedence = function () {\n        this.sortByPrecedenceAction.checked = !this.sortByPrecedenceAction.checked;\n    };\n    KeybindingsEditor.prototype.onContextMenu = function (e) {\n        var _this = this;\n        if (!e.element) {\n            return;\n        }\n        if (e.element.templateId === keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID) {\n            this.selectEntry(e.element);\n            this.contextMenuService.showContextMenu({\n                getAnchor: function () { return e.anchor; },\n                getActions: function () { return [\n                    _this.createCopyAction(e.element),\n                    _this.createCopyCommandAction(e.element),\n                    new actionbar_1.Separator(),\n                    _this.createDefineAction(e.element),\n                    _this.createRemoveAction(e.element),\n                    _this.createResetAction(e.element),\n                    _this.createDefineWhenExpressionAction(e.element),\n                    new actionbar_1.Separator(),\n                    _this.createShowConflictsAction(e.element)\n                ]; }\n            });\n        }\n    };\n    KeybindingsEditor.prototype.onFocusChange = function (e) {\n        this.keybindingFocusContextKey.reset();\n        var element = e.elements[0];\n        if (!element) {\n            return;\n        }\n        if (element.templateId === keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID) {\n            this.keybindingFocusContextKey.set(true);\n        }\n    };\n    KeybindingsEditor.prototype.createDefineAction = function (keybindingItemEntry) {\n        var _this = this;\n        return {\n            label: keybindingItemEntry.keybindingItem.keybinding ? nls_1.localize('changeLabel', \"Change Keybinding\") : nls_1.localize('addLabel', \"Add Keybinding\"),\n            enabled: true,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_DEFINE,\n            run: function () { return _this.defineKeybinding(keybindingItemEntry); }\n        };\n    };\n    KeybindingsEditor.prototype.createDefineWhenExpressionAction = function (keybindingItemEntry) {\n        var _this = this;\n        return {\n            label: nls_1.localize('editWhen', \"Change When Expression\"),\n            enabled: !!keybindingItemEntry.keybindingItem.keybinding,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN,\n            run: function () { return _this.defineWhenExpression(keybindingItemEntry); }\n        };\n    };\n    KeybindingsEditor.prototype.createRemoveAction = function (keybindingItem) {\n        var _this = this;\n        return {\n            label: nls_1.localize('removeLabel', \"Remove Keybinding\"),\n            enabled: !!keybindingItem.keybindingItem.keybinding,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_REMOVE,\n            run: function () { return _this.removeKeybinding(keybindingItem); }\n        };\n    };\n    KeybindingsEditor.prototype.createResetAction = function (keybindingItem) {\n        var _this = this;\n        return {\n            label: nls_1.localize('resetLabel', \"Reset Keybinding\"),\n            enabled: !keybindingItem.keybindingItem.keybindingItem.isDefault,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_RESET,\n            run: function () { return _this.resetKeybinding(keybindingItem); }\n        };\n    };\n    KeybindingsEditor.prototype.createShowConflictsAction = function (keybindingItem) {\n        var _this = this;\n        return {\n            label: nls_1.localize('showSameKeybindings', \"Show Same Keybindings\"),\n            enabled: !!keybindingItem.keybindingItem.keybinding,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR,\n            run: function () { return _this.showSimilarKeybindings(keybindingItem); }\n        };\n    };\n    KeybindingsEditor.prototype.createCopyAction = function (keybindingItem) {\n        var _this = this;\n        return {\n            label: nls_1.localize('copyLabel', \"Copy\"),\n            enabled: true,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_COPY,\n            run: function () { return _this.copyKeybinding(keybindingItem); }\n        };\n    };\n    KeybindingsEditor.prototype.createCopyCommandAction = function (keybinding) {\n        var _this = this;\n        return {\n            label: nls_1.localize('copyCommandLabel', \"Copy Command\"),\n            enabled: true,\n            id: preferences_1.KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND,\n            run: function () { return _this.copyKeybindingCommand(keybinding); }\n        };\n    };\n    KeybindingsEditor.prototype.reportFilteringUsed = function (filter) {\n        if (filter) {\n            var data = {\n                filter: filter,\n                emptyFilters: this.getLatestEmptyFiltersForTelemetry()\n            };\n            this.latestEmptyFilters = [];\n            /* __GDPR__\n                \"keybindings.filter\" : {\n                    \"filter\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n                    \"emptyFilters\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                }\n            */\n            this.telemetryService.publicLog('keybindings.filter', data);\n        }\n    };\n    /**\n     * Put a rough limit on the size of the telemetry data, since otherwise it could be an unbounded large amount\n     * of data. 8192 is the max size of a property value. This is rough since that probably includes \"\"s, etc.\n     */\n    KeybindingsEditor.prototype.getLatestEmptyFiltersForTelemetry = function () {\n        var cumulativeSize = 0;\n        return this.latestEmptyFilters.filter(function (filterText) { return (cumulativeSize += filterText.length) <= 8192; });\n    };\n    KeybindingsEditor.prototype.reportKeybindingAction = function (action, command, keybinding) {\n        // __GDPR__TODO__ Need to move off dynamic event names and properties as they cannot be registered statically\n        this.telemetryService.publicLog(action, { command: command, keybinding: keybinding ? (typeof keybinding === 'string' ? keybinding : keybinding.getUserSettingsLabel()) : '' });\n    };\n    KeybindingsEditor.prototype.onKeybindingEditingError = function (error) {\n        this.notificationService.error(typeof error === 'string' ? error : nls_1.localize('error', \"Error '{0}' while editing the keybinding. Please open 'keybindings.json' file and check for errors.\", \"\" + error));\n    };\n    KeybindingsEditor.ID = 'workbench.editor.keybindings';\n    KeybindingsEditor = tslib_1.__decorate([\n        tslib_1.__param(0, telemetry_1.ITelemetryService),\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, keybinding_1.IKeybindingService),\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, keybindingEditing_1.IKeybindingEditingService),\n        tslib_1.__param(5, contextkey_1.IContextKeyService),\n        tslib_1.__param(6, notification_1.INotificationService),\n        tslib_1.__param(7, clipboardService_1.IClipboardService),\n        tslib_1.__param(8, instantiation_1.IInstantiationService),\n        tslib_1.__param(9, editorService_1.IEditorService),\n        tslib_1.__param(10, storage_1.IStorageService)\n    ], KeybindingsEditor);\n    return KeybindingsEditor;\n}(baseEditor_1.BaseEditor));\nexports.KeybindingsEditor = KeybindingsEditor;\nvar Delegate = /** @class */ (function () {\n    function Delegate() {\n    }\n    Delegate.prototype.getHeight = function (element) {\n        if (element.templateId === keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID) {\n            var commandIdMatched = element.keybindingItem.commandLabel && element.commandIdMatches;\n            var commandDefaultLabelMatched = !!element.commandDefaultLabelMatches;\n            if (commandIdMatched && commandDefaultLabelMatched) {\n                return 60;\n            }\n            if (commandIdMatched || commandDefaultLabelMatched) {\n                return 40;\n            }\n        }\n        return 24;\n    };\n    Delegate.prototype.getTemplateId = function (element) {\n        return element.templateId;\n    };\n    return Delegate;\n}());\nvar KeybindingItemRenderer = /** @class */ (function () {\n    function KeybindingItemRenderer(keybindingsEditor, instantiationService) {\n        this.keybindingsEditor = keybindingsEditor;\n        this.instantiationService = instantiationService;\n    }\n    Object.defineProperty(KeybindingItemRenderer.prototype, \"templateId\", {\n        get: function () { return keybindingsEditorModel_1.KEYBINDING_ENTRY_TEMPLATE_ID; },\n        enumerable: true,\n        configurable: true\n    });\n    KeybindingItemRenderer.prototype.renderTemplate = function (parent) {\n        var _this = this;\n        DOM.addClass(parent, 'keybinding-item');\n        var actions = this.instantiationService.createInstance(ActionsColumn, parent, this.keybindingsEditor);\n        var command = this.instantiationService.createInstance(CommandColumn, parent, this.keybindingsEditor);\n        var keybinding = this.instantiationService.createInstance(KeybindingColumn, parent, this.keybindingsEditor);\n        var when = this.instantiationService.createInstance(WhenColumn, parent, this.keybindingsEditor);\n        var source = this.instantiationService.createInstance(SourceColumn, parent, this.keybindingsEditor);\n        var columns = [actions, command, keybinding, when, source];\n        var disposables = columns.slice();\n        var elements = columns.map(function (_a) {\n            var element = _a.element;\n            return element;\n        });\n        this.keybindingsEditor.layoutColumns(elements);\n        this.keybindingsEditor.onLayout(function () { return _this.keybindingsEditor.layoutColumns(elements); });\n        parent.setAttribute('aria-labelledby', elements.map(function (e) { return e.getAttribute('id'); }).join(' '));\n        return {\n            parent: parent,\n            columns: columns,\n            disposable: lifecycle_1.toDisposable(function () { return lifecycle_1.dispose(disposables); })\n        };\n    };\n    KeybindingItemRenderer.prototype.renderElement = function (keybindingEntry, index, template) {\n        DOM.toggleClass(template.parent, 'odd', index % 2 === 1);\n        for (var _i = 0, _a = template.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            column.render(keybindingEntry);\n        }\n    };\n    KeybindingItemRenderer.prototype.disposeTemplate = function (template) {\n        template.disposable.dispose();\n    };\n    return KeybindingItemRenderer;\n}());\nvar Column = /** @class */ (function (_super) {\n    tslib_1.__extends(Column, _super);\n    function Column(keybindingsEditor) {\n        var _this = _super.call(this) || this;\n        _this.keybindingsEditor = keybindingsEditor;\n        return _this;\n    }\n    Column.COUNTER = 0;\n    return Column;\n}(lifecycle_1.Disposable));\nvar ActionsColumn = /** @class */ (function (_super) {\n    tslib_1.__extends(ActionsColumn, _super);\n    function ActionsColumn(parent, keybindingsEditor, keybindingsService) {\n        var _this = _super.call(this, keybindingsEditor) || this;\n        _this.keybindingsService = keybindingsService;\n        _this.element = _this.create(parent);\n        return _this;\n    }\n    ActionsColumn.prototype.create = function (parent) {\n        var actionsContainer = DOM.append(parent, $('.column.actions', { id: 'actions_' + ++Column.COUNTER }));\n        this.actionBar = new actionbar_1.ActionBar(actionsContainer, { animated: false });\n        return actionsContainer;\n    };\n    ActionsColumn.prototype.render = function (keybindingItemEntry) {\n        this.actionBar.clear();\n        var actions = [];\n        if (keybindingItemEntry.keybindingItem.keybinding) {\n            actions.push(this.createEditAction(keybindingItemEntry));\n        }\n        else {\n            actions.push(this.createAddAction(keybindingItemEntry));\n        }\n        this.actionBar.push(actions, { icon: true });\n    };\n    ActionsColumn.prototype.createEditAction = function (keybindingItemEntry) {\n        var _this = this;\n        var keybinding = this.keybindingsService.lookupKeybinding(preferences_1.KEYBINDINGS_EDITOR_COMMAND_DEFINE);\n        return {\n            class: 'edit',\n            enabled: true,\n            id: 'editKeybinding',\n            tooltip: keybinding ? nls_1.localize('editKeybindingLabelWithKey', \"Change Keybinding {0}\", \"(\" + keybinding.getLabel() + \")\") : nls_1.localize('editKeybindingLabel', \"Change Keybinding\"),\n            run: function () { return _this.keybindingsEditor.defineKeybinding(keybindingItemEntry); }\n        };\n    };\n    ActionsColumn.prototype.createAddAction = function (keybindingItemEntry) {\n        var _this = this;\n        var keybinding = this.keybindingsService.lookupKeybinding(preferences_1.KEYBINDINGS_EDITOR_COMMAND_DEFINE);\n        return {\n            class: 'add',\n            enabled: true,\n            id: 'addKeybinding',\n            tooltip: keybinding ? nls_1.localize('addKeybindingLabelWithKey', \"Add Keybinding {0}\", \"(\" + keybinding.getLabel() + \")\") : nls_1.localize('addKeybindingLabel', \"Add Keybinding\"),\n            run: function () { return _this.keybindingsEditor.defineKeybinding(keybindingItemEntry); }\n        };\n    };\n    ActionsColumn.prototype.dispose = function () {\n        this.actionBar = lifecycle_1.dispose(this.actionBar);\n    };\n    ActionsColumn = tslib_1.__decorate([\n        tslib_1.__param(2, keybinding_1.IKeybindingService)\n    ], ActionsColumn);\n    return ActionsColumn;\n}(Column));\nvar CommandColumn = /** @class */ (function (_super) {\n    tslib_1.__extends(CommandColumn, _super);\n    function CommandColumn(parent, keybindingsEditor) {\n        var _this = _super.call(this, keybindingsEditor) || this;\n        _this.element = _this.create(parent);\n        return _this;\n    }\n    CommandColumn.prototype.create = function (parent) {\n        this.commandColumn = DOM.append(parent, $('.column.command', { id: 'command_' + ++Column.COUNTER }));\n        return this.commandColumn;\n    };\n    CommandColumn.prototype.render = function (keybindingItemEntry) {\n        DOM.clearNode(this.commandColumn);\n        var keybindingItem = keybindingItemEntry.keybindingItem;\n        var commandIdMatched = !!(keybindingItem.commandLabel && keybindingItemEntry.commandIdMatches);\n        var commandDefaultLabelMatched = !!keybindingItemEntry.commandDefaultLabelMatches;\n        DOM.toggleClass(this.commandColumn, 'vertical-align-column', commandIdMatched || commandDefaultLabelMatched);\n        this.commandColumn.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n        var commandLabel;\n        if (keybindingItem.commandLabel) {\n            commandLabel = new highlightedLabel_1.HighlightedLabel(this.commandColumn, false);\n            commandLabel.set(keybindingItem.commandLabel, keybindingItemEntry.commandLabelMatches);\n        }\n        if (keybindingItemEntry.commandDefaultLabelMatches) {\n            commandLabel = new highlightedLabel_1.HighlightedLabel(DOM.append(this.commandColumn, $('.command-default-label')), false);\n            commandLabel.set(keybindingItem.commandDefaultLabel, keybindingItemEntry.commandDefaultLabelMatches);\n        }\n        if (keybindingItemEntry.commandIdMatches || !keybindingItem.commandLabel) {\n            commandLabel = new highlightedLabel_1.HighlightedLabel(DOM.append(this.commandColumn, $('.code')), false);\n            commandLabel.set(keybindingItem.command, keybindingItemEntry.commandIdMatches);\n        }\n        if (commandLabel) {\n            commandLabel.element.title = keybindingItem.commandLabel ? nls_1.localize('title', \"{0} ({1})\", keybindingItem.commandLabel, keybindingItem.command) : keybindingItem.command;\n        }\n    };\n    CommandColumn.prototype.getAriaLabel = function (keybindingItemEntry) {\n        return nls_1.localize('commandAriaLabel', \"Command is {0}.\", keybindingItemEntry.keybindingItem.commandLabel ? keybindingItemEntry.keybindingItem.commandLabel : keybindingItemEntry.keybindingItem.command);\n    };\n    return CommandColumn;\n}(Column));\nvar KeybindingColumn = /** @class */ (function (_super) {\n    tslib_1.__extends(KeybindingColumn, _super);\n    function KeybindingColumn(parent, keybindingsEditor) {\n        var _this = _super.call(this, keybindingsEditor) || this;\n        _this.element = _this.create(parent);\n        return _this;\n    }\n    KeybindingColumn.prototype.create = function (parent) {\n        var column = DOM.append(parent, $('.column.keybinding', { id: 'keybinding_' + ++Column.COUNTER }));\n        this.keybindingLabel = DOM.append(column, $('div.keybinding-label'));\n        return column;\n    };\n    KeybindingColumn.prototype.render = function (keybindingItemEntry) {\n        DOM.clearNode(this.keybindingLabel);\n        this.keybindingLabel.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n        if (keybindingItemEntry.keybindingItem.keybinding) {\n            new keybindingLabel_1.KeybindingLabel(this.keybindingLabel, platform_1.OS).set(keybindingItemEntry.keybindingItem.keybinding, keybindingItemEntry.keybindingMatches);\n        }\n    };\n    KeybindingColumn.prototype.getAriaLabel = function (keybindingItemEntry) {\n        return keybindingItemEntry.keybindingItem.keybinding ? nls_1.localize('keybindingAriaLabel', \"Keybinding is {0}.\", keybindingItemEntry.keybindingItem.keybinding.getAriaLabel()) : nls_1.localize('noKeybinding', \"No Keybinding assigned.\");\n    };\n    return KeybindingColumn;\n}(Column));\nvar SourceColumn = /** @class */ (function (_super) {\n    tslib_1.__extends(SourceColumn, _super);\n    function SourceColumn(parent, keybindingsEditor) {\n        var _this = _super.call(this, keybindingsEditor) || this;\n        _this.element = _this.create(parent);\n        return _this;\n    }\n    SourceColumn.prototype.create = function (parent) {\n        this.sourceColumn = DOM.append(parent, $('.column.source', { id: 'source_' + ++Column.COUNTER }));\n        return this.sourceColumn;\n    };\n    SourceColumn.prototype.render = function (keybindingItemEntry) {\n        DOM.clearNode(this.sourceColumn);\n        this.sourceColumn.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n        new highlightedLabel_1.HighlightedLabel(this.sourceColumn, false).set(keybindingItemEntry.keybindingItem.source, keybindingItemEntry.sourceMatches);\n    };\n    SourceColumn.prototype.getAriaLabel = function (keybindingItemEntry) {\n        return nls_1.localize('sourceAriaLabel', \"Source is {0}.\", keybindingItemEntry.keybindingItem.source);\n    };\n    return SourceColumn;\n}(Column));\nvar WhenColumn = /** @class */ (function (_super) {\n    tslib_1.__extends(WhenColumn, _super);\n    function WhenColumn(parent, keybindingsEditor, contextViewService, themeService) {\n        var _this = _super.call(this, keybindingsEditor) || this;\n        _this.contextViewService = contextViewService;\n        _this.themeService = themeService;\n        _this.disposables = [];\n        _this._onDidAccept = _this._register(new event_1.Emitter());\n        _this.onDidAccept = _this._onDidAccept.event;\n        _this._onDidReject = _this._register(new event_1.Emitter());\n        _this.onDidReject = _this._onDidReject.event;\n        _this.element = _this.create(parent);\n        _this._register(lifecycle_1.toDisposable(function () { return _this.disposables = lifecycle_1.dispose(_this.disposables); }));\n        return _this;\n    }\n    WhenColumn.prototype.create = function (parent) {\n        var _this = this;\n        var column = DOM.append(parent, $('.column.when', { id: 'when_' + ++Column.COUNTER }));\n        this.whenLabel = DOM.append(column, $('div.when-label'));\n        this.whenInput = new inputBox_1.InputBox(column, this.contextViewService, {\n            validationOptions: {\n                validation: function (value) {\n                    try {\n                        contextkey_1.ContextKeyExpr.deserialize(value, true);\n                    }\n                    catch (error) {\n                        return {\n                            content: error.message,\n                            formatContent: true,\n                            type: inputBox_1.MessageType.ERROR\n                        };\n                    }\n                    return null;\n                }\n            },\n            ariaLabel: nls_1.localize('whenContextInputAriaLabel', \"Type when context. Press Enter to confirm or Escape to cancel.\")\n        });\n        this._register(styler_1.attachInputBoxStyler(this.whenInput, this.themeService));\n        this._register(DOM.addStandardDisposableListener(this.whenInput.inputElement, DOM.EventType.KEY_DOWN, function (e) { return _this.onInputKeyDown(e); }));\n        this._register(DOM.addDisposableListener(this.whenInput.inputElement, DOM.EventType.BLUR, function () { return _this.cancelEditing(); }));\n        return column;\n    };\n    WhenColumn.prototype.onInputKeyDown = function (e) {\n        var handled = false;\n        if (e.equals(keyCodes_1.KeyCode.Enter)) {\n            this.finishEditing();\n            handled = true;\n        }\n        else if (e.equals(keyCodes_1.KeyCode.Escape)) {\n            this.cancelEditing();\n            handled = true;\n        }\n        if (handled) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    WhenColumn.prototype.startEditing = function () {\n        DOM.addClass(this.element, 'input-mode');\n        this.whenInput.focus();\n        this.whenInput.select();\n    };\n    WhenColumn.prototype.finishEditing = function () {\n        DOM.removeClass(this.element, 'input-mode');\n        this._onDidAccept.fire();\n    };\n    WhenColumn.prototype.cancelEditing = function () {\n        DOM.removeClass(this.element, 'input-mode');\n        this._onDidReject.fire();\n    };\n    WhenColumn.prototype.render = function (keybindingItemEntry) {\n        var _this = this;\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        DOM.clearNode(this.whenLabel);\n        this.keybindingsEditor.onDefineWhenExpression(function (e) {\n            if (keybindingItemEntry === e) {\n                _this.startEditing();\n            }\n        }, this, this.disposables);\n        this.whenInput.value = keybindingItemEntry.keybindingItem.when || '';\n        this.whenLabel.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n        DOM.toggleClass(this.whenLabel, 'code', !!keybindingItemEntry.keybindingItem.when);\n        DOM.toggleClass(this.whenLabel, 'empty', !keybindingItemEntry.keybindingItem.when);\n        if (keybindingItemEntry.keybindingItem.when) {\n            var whenLabel = new highlightedLabel_1.HighlightedLabel(this.whenLabel, false);\n            whenLabel.set(keybindingItemEntry.keybindingItem.when, keybindingItemEntry.whenMatches);\n            this.element.title = keybindingItemEntry.keybindingItem.when;\n            whenLabel.element.title = keybindingItemEntry.keybindingItem.when;\n        }\n        else {\n            this.whenLabel.textContent = '—';\n            this.element.title = '';\n        }\n        this.onDidAccept(function () {\n            _this.keybindingsEditor.updateKeybinding(keybindingItemEntry, keybindingItemEntry.keybindingItem.keybinding ? keybindingItemEntry.keybindingItem.keybinding.getUserSettingsLabel() || '' : '', _this.whenInput.value);\n            _this.keybindingsEditor.selectKeybinding(keybindingItemEntry);\n        }, this, this.disposables);\n        this.onDidReject(function () {\n            _this.whenInput.value = keybindingItemEntry.keybindingItem.when || '';\n            _this.keybindingsEditor.selectKeybinding(keybindingItemEntry);\n        }, this, this.disposables);\n    };\n    WhenColumn.prototype.getAriaLabel = function (keybindingItemEntry) {\n        return keybindingItemEntry.keybindingItem.when ? nls_1.localize('whenAriaLabel', \"When is {0}.\", keybindingItemEntry.keybindingItem.when) : nls_1.localize('noWhen', \"No when context.\");\n    };\n    WhenColumn = tslib_1.__decorate([\n        tslib_1.__param(2, contextView_1.IContextViewService),\n        tslib_1.__param(3, themeService_1.IThemeService)\n    ], WhenColumn);\n    return WhenColumn;\n}(Column));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var listHighlightForegroundColor = theme.getColor(colorRegistry_1.listHighlightForeground);\n    if (listHighlightForegroundColor) {\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list-row > .column .highlight { color: \" + listHighlightForegroundColor + \"; }\");\n    }\n    var listActiveSelectionForegroundColor = theme.getColor(colorRegistry_1.listActiveSelectionForeground);\n    if (listActiveSelectionForegroundColor) {\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list:focus .monaco-list-row.selected.focused > .column .monaco-keybinding-key { color: \" + listActiveSelectionForegroundColor + \"; }\");\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list:focus .monaco-list-row.selected > .column .monaco-keybinding-key { color: \" + listActiveSelectionForegroundColor + \"; }\");\n    }\n    var listInactiveFocusAndSelectionForegroundColor = theme.getColor(colorRegistry_1.listInactiveSelectionForeground);\n    if (listActiveSelectionForegroundColor) {\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row.selected > .column .monaco-keybinding-key { color: \" + listInactiveFocusAndSelectionForegroundColor + \"; }\");\n    }\n    var listHoverForegroundColor = theme.getColor(colorRegistry_1.listHoverForeground);\n    if (listHoverForegroundColor) {\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row:hover:not(.selected):not(.focused) > .column .monaco-keybinding-key { color: \" + listHoverForegroundColor + \"; }\");\n    }\n    var listFocusForegroundColor = theme.getColor(colorRegistry_1.listFocusForeground);\n    if (listFocusForegroundColor) {\n        collector.addRule(\".keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row.focused > .column .monaco-keybinding-key { color: \" + listFocusForegroundColor + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingsEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/keybindingsEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/keybindingsEditor';\nimport { localize } from 'vs/nls';\nimport { Delayer } from 'vs/base/common/async';\nimport * as DOM from 'vs/base/browser/dom';\nimport { OS } from 'vs/base/common/platform';\nimport { dispose, Disposable, toDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { CheckboxActionItem } from 'vs/base/browser/ui/checkbox/checkbox';\nimport { HighlightedLabel } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { KeybindingLabel } from 'vs/base/browser/ui/keybindingLabel/keybindingLabel';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { ActionBar, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';\nimport { EditorOptions } from 'vs/workbench/common/editor';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { KeybindingsEditorModel, IKeybindingItemEntry, IListEntry, KEYBINDING_ENTRY_TEMPLATE_ID } from 'vs/workbench/services/preferences/common/keybindingsEditorModel';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService, IUserFriendlyKeybinding } from 'vs/platform/keybinding/common/keybinding';\nimport { DefineKeybindingWidget, KeybindingsSearchWidget, KeybindingsSearchOptions } from 'vs/workbench/contrib/preferences/browser/keybindingWidgets';\nimport {\n\tIKeybindingsEditor, CONTEXT_KEYBINDING_FOCUS, CONTEXT_KEYBINDINGS_EDITOR, CONTEXT_KEYBINDINGS_SEARCH_FOCUS, KEYBINDINGS_EDITOR_COMMAND_REMOVE, KEYBINDINGS_EDITOR_COMMAND_COPY,\n\tKEYBINDINGS_EDITOR_COMMAND_RESET, KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND, KEYBINDINGS_EDITOR_COMMAND_DEFINE, KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR,\n\tKEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS, KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE, KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN\n} from 'vs/workbench/contrib/preferences/common/preferences';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingEditingService } from 'vs/workbench/services/keybinding/common/keybindingEditing';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate, IListRenderer, IListContextMenuEvent, IListEvent } from 'vs/base/browser/ui/list/list';\nimport { IThemeService, registerThemingParticipant, ITheme, ICssStyleCollector } from 'vs/platform/theme/common/themeService';\nimport { IContextKeyService, IContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { StandardKeyboardEvent, IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode, ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { listHighlightForeground, badgeBackground, contrastBorder, badgeForeground, listActiveSelectionForeground, listInactiveSelectionForeground, listHoverForeground, listFocusForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorExtensionsRegistry } from 'vs/editor/browser/editorExtensions';\nimport { WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { KeybindingsEditorInput } from 'vs/workbench/services/preferences/common/preferencesEditorInput';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { attachStylerCallback, attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { InputBox, MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { Emitter, Event } from 'vs/base/common/event';\n\nconst $ = DOM.$;\n\ninterface ColumnItem {\n\tcolumn: HTMLElement;\n\tproportion?: number;\n\twidth: number;\n}\n\nexport class KeybindingsEditor extends BaseEditor implements IKeybindingsEditor {\n\n\tstatic readonly ID: string = 'workbench.editor.keybindings';\n\n\tprivate _onDefineWhenExpression: Emitter<IKeybindingItemEntry> = this._register(new Emitter<IKeybindingItemEntry>());\n\treadonly onDefineWhenExpression: Event<IKeybindingItemEntry> = this._onDefineWhenExpression.event;\n\n\tprivate _onLayout: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onLayout: Event<void> = this._onLayout.event;\n\n\tprivate keybindingsEditorModel: KeybindingsEditorModel;\n\n\tprivate headerContainer: HTMLElement;\n\tprivate actionsContainer: HTMLElement;\n\tprivate searchWidget: KeybindingsSearchWidget;\n\n\tprivate overlayContainer: HTMLElement;\n\tprivate defineKeybindingWidget: DefineKeybindingWidget;\n\n\tprivate columnItems: ColumnItem[] = [];\n\tprivate keybindingsListContainer: HTMLElement;\n\tprivate unAssignedKeybindingItemToRevealAndFocus: IKeybindingItemEntry | null;\n\tprivate listEntries: IListEntry[];\n\tprivate keybindingsList: List<IListEntry>;\n\n\tprivate dimension: DOM.Dimension;\n\tprivate delayedFiltering: Delayer<void>;\n\tprivate latestEmptyFilters: string[] = [];\n\tprivate delayedFilterLogging: Delayer<void>;\n\tprivate keybindingsEditorContextKey: IContextKey<boolean>;\n\tprivate keybindingFocusContextKey: IContextKey<boolean>;\n\tprivate searchFocusContextKey: IContextKey<boolean>;\n\n\tprivate actionBar: ActionBar;\n\tprivate sortByPrecedenceAction: Action;\n\tprivate recordKeysAction: Action;\n\n\tprivate ariaLabelElement: HTMLElement;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IKeybindingService private readonly keybindingsService: IKeybindingService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingEditingService private readonly keybindingEditingService: IKeybindingEditingService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(KeybindingsEditor.ID, telemetryService, themeService, storageService);\n\t\tthis.delayedFiltering = new Delayer<void>(300);\n\t\tthis._register(keybindingsService.onDidUpdateKeybindings(() => this.render(true)));\n\n\t\tthis.keybindingsEditorContextKey = CONTEXT_KEYBINDINGS_EDITOR.bindTo(this.contextKeyService);\n\t\tthis.searchFocusContextKey = CONTEXT_KEYBINDINGS_SEARCH_FOCUS.bindTo(this.contextKeyService);\n\t\tthis.keybindingFocusContextKey = CONTEXT_KEYBINDING_FOCUS.bindTo(this.contextKeyService);\n\t\tthis.delayedFilterLogging = new Delayer<void>(1000);\n\t}\n\n\tcreateEditor(parent: HTMLElement): void {\n\t\tconst keybindingsEditorElement = DOM.append(parent, $('div', { class: 'keybindings-editor' }));\n\n\t\tthis.createAriaLabelElement(keybindingsEditorElement);\n\t\tthis.createOverlayContainer(keybindingsEditorElement);\n\t\tthis.createHeader(keybindingsEditorElement);\n\t\tthis.createBody(keybindingsEditorElement);\n\t}\n\n\tsetInput(input: KeybindingsEditorInput, options: EditorOptions, token: CancellationToken): Promise<void> {\n\t\tthis.keybindingsEditorContextKey.set(true);\n\t\treturn super.setInput(input, options, token)\n\t\t\t.then(() => this.render(!!(options && options.preserveFocus)));\n\t}\n\n\tclearInput(): void {\n\t\tsuper.clearInput();\n\t\tthis.keybindingsEditorContextKey.reset();\n\t\tthis.keybindingFocusContextKey.reset();\n\t}\n\n\tlayout(dimension: DOM.Dimension): void {\n\t\tthis.dimension = dimension;\n\t\tthis.layoutSearchWidget(dimension);\n\n\t\tthis.overlayContainer.style.width = dimension.width + 'px';\n\t\tthis.overlayContainer.style.height = dimension.height + 'px';\n\t\tthis.defineKeybindingWidget.layout(this.dimension);\n\n\t\tthis.columnItems.forEach(columnItem => {\n\t\t\tif (columnItem.proportion) {\n\t\t\t\tcolumnItem.width = 0;\n\t\t\t}\n\t\t});\n\t\tthis.layoutKeybindingsList();\n\t\tthis._onLayout.fire();\n\t}\n\n\tlayoutColumns(columns: HTMLElement[]): void {\n\t\tif (this.columnItems) {\n\t\t\tcolumns.forEach((column, index) => {\n\t\t\t\tcolumn.style.paddingRight = `6px`;\n\t\t\t\tcolumn.style.width = `${this.columnItems[index].width}px`;\n\t\t\t});\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tconst activeKeybindingEntry = this.activeKeybindingEntry;\n\t\tif (activeKeybindingEntry) {\n\t\t\tthis.selectEntry(activeKeybindingEntry);\n\t\t} else {\n\t\t\tthis.searchWidget.focus();\n\t\t}\n\t}\n\n\tget activeKeybindingEntry(): IKeybindingItemEntry | null {\n\t\tconst focusedElement = this.keybindingsList.getFocusedElements()[0];\n\t\treturn focusedElement && focusedElement.templateId === KEYBINDING_ENTRY_TEMPLATE_ID ? <IKeybindingItemEntry>focusedElement : null;\n\t}\n\n\tdefineKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<any> {\n\t\tthis.selectEntry(keybindingEntry);\n\t\tthis.showOverlayContainer();\n\t\treturn this.defineKeybindingWidget.define().then(key => {\n\t\t\tif (key) {\n\t\t\t\tthis.reportKeybindingAction(KEYBINDINGS_EDITOR_COMMAND_DEFINE, keybindingEntry.keybindingItem.command, key);\n\t\t\t\treturn this.updateKeybinding(keybindingEntry, key, keybindingEntry.keybindingItem.when);\n\t\t\t}\n\t\t\treturn null;\n\t\t}).then(() => {\n\t\t\tthis.hideOverlayContainer();\n\t\t\tthis.selectEntry(keybindingEntry);\n\t\t}, error => {\n\t\t\tthis.hideOverlayContainer();\n\t\t\tthis.onKeybindingEditingError(error);\n\t\t\tthis.selectEntry(keybindingEntry);\n\t\t\treturn error;\n\t\t});\n\t}\n\n\tdefineWhenExpression(keybindingEntry: IKeybindingItemEntry): void {\n\t\tif (keybindingEntry.keybindingItem.keybinding) {\n\t\t\tthis.selectEntry(keybindingEntry);\n\t\t\tthis._onDefineWhenExpression.fire(keybindingEntry);\n\t\t}\n\t}\n\n\tupdateKeybinding(keybindingEntry: IKeybindingItemEntry, key: string, when: string | undefined): Promise<any> {\n\t\tconst currentKey = keybindingEntry.keybindingItem.keybinding ? keybindingEntry.keybindingItem.keybinding.getUserSettingsLabel() : '';\n\t\tif (currentKey !== key || keybindingEntry.keybindingItem.when !== when) {\n\t\t\treturn this.keybindingEditingService.editKeybinding(keybindingEntry.keybindingItem.keybindingItem, key, when || undefined)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (!keybindingEntry.keybindingItem.keybinding) { // reveal only if keybinding was added to unassinged. Because the entry will be placed in different position after rendering\n\t\t\t\t\t\tthis.unAssignedKeybindingItemToRevealAndFocus = keybindingEntry;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tremoveKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<any> {\n\t\tthis.selectEntry(keybindingEntry);\n\t\tif (keybindingEntry.keybindingItem.keybinding) { // This should be a pre-condition\n\t\t\tthis.reportKeybindingAction(KEYBINDINGS_EDITOR_COMMAND_REMOVE, keybindingEntry.keybindingItem.command, keybindingEntry.keybindingItem.keybinding);\n\t\t\treturn this.keybindingEditingService.removeKeybinding(keybindingEntry.keybindingItem.keybindingItem)\n\t\t\t\t.then(() => this.focus(),\n\t\t\t\t\terror => {\n\t\t\t\t\t\tthis.onKeybindingEditingError(error);\n\t\t\t\t\t\tthis.selectEntry(keybindingEntry);\n\t\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tresetKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<any> {\n\t\tthis.selectEntry(keybindingEntry);\n\t\tthis.reportKeybindingAction(KEYBINDINGS_EDITOR_COMMAND_RESET, keybindingEntry.keybindingItem.command, keybindingEntry.keybindingItem.keybinding);\n\t\treturn this.keybindingEditingService.resetKeybinding(keybindingEntry.keybindingItem.keybindingItem)\n\t\t\t.then(() => {\n\t\t\t\tif (!keybindingEntry.keybindingItem.keybinding) { // reveal only if keybinding was added to unassinged. Because the entry will be placed in different position after rendering\n\t\t\t\t\tthis.unAssignedKeybindingItemToRevealAndFocus = keybindingEntry;\n\t\t\t\t}\n\t\t\t\tthis.selectEntry(keybindingEntry);\n\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.onKeybindingEditingError(error);\n\t\t\t\t\tthis.selectEntry(keybindingEntry);\n\t\t\t\t});\n\t}\n\n\tcopyKeybinding(keybinding: IKeybindingItemEntry): void {\n\t\tthis.selectEntry(keybinding);\n\t\tthis.reportKeybindingAction(KEYBINDINGS_EDITOR_COMMAND_COPY, keybinding.keybindingItem.command, keybinding.keybindingItem.keybinding);\n\t\tconst userFriendlyKeybinding: IUserFriendlyKeybinding = {\n\t\t\tkey: keybinding.keybindingItem.keybinding ? keybinding.keybindingItem.keybinding.getUserSettingsLabel() || '' : '',\n\t\t\tcommand: keybinding.keybindingItem.command\n\t\t};\n\t\tif (keybinding.keybindingItem.when) {\n\t\t\tuserFriendlyKeybinding.when = keybinding.keybindingItem.when;\n\t\t}\n\t\tthis.clipboardService.writeText(JSON.stringify(userFriendlyKeybinding, null, '  '));\n\t}\n\n\tcopyKeybindingCommand(keybinding: IKeybindingItemEntry): void {\n\t\tthis.selectEntry(keybinding);\n\t\tthis.reportKeybindingAction(KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND, keybinding.keybindingItem.command, keybinding.keybindingItem.keybinding);\n\t\tthis.clipboardService.writeText(keybinding.keybindingItem.command);\n\t}\n\n\tfocusSearch(): void {\n\t\tthis.searchWidget.focus();\n\t}\n\n\tsearch(filter: string): void {\n\t\tthis.focusSearch();\n\t\tthis.searchWidget.setValue(filter);\n\t}\n\n\tclearSearchResults(): void {\n\t\tthis.searchWidget.clear();\n\t}\n\n\tshowSimilarKeybindings(keybindingEntry: IKeybindingItemEntry): void {\n\t\tconst value = `\"${keybindingEntry.keybindingItem.keybinding.getAriaLabel()}\"`;\n\t\tif (value !== this.searchWidget.getValue()) {\n\t\t\tthis.searchWidget.setValue(value);\n\t\t}\n\t}\n\n\tprivate createAriaLabelElement(parent: HTMLElement): void {\n\t\tthis.ariaLabelElement = DOM.append(parent, DOM.$(''));\n\t\tthis.ariaLabelElement.setAttribute('id', 'keybindings-editor-aria-label-element');\n\t\tthis.ariaLabelElement.setAttribute('aria-live', 'assertive');\n\t}\n\n\tprivate createOverlayContainer(parent: HTMLElement): void {\n\t\tthis.overlayContainer = DOM.append(parent, $('.overlay-container'));\n\t\tthis.overlayContainer.style.position = 'absolute';\n\t\tthis.overlayContainer.style.zIndex = '10';\n\t\tthis.defineKeybindingWidget = this._register(this.instantiationService.createInstance(DefineKeybindingWidget, this.overlayContainer));\n\t\tthis._register(this.defineKeybindingWidget.onDidChange(keybindingStr => this.defineKeybindingWidget.printExisting(this.keybindingsEditorModel.fetch(`\"${keybindingStr}\"`).length)));\n\t\tthis._register(this.defineKeybindingWidget.onShowExistingKeybidings(keybindingStr => this.searchWidget.setValue(`\"${keybindingStr}\"`)));\n\t\tthis.hideOverlayContainer();\n\t}\n\n\tprivate showOverlayContainer() {\n\t\tthis.overlayContainer.style.display = 'block';\n\t}\n\n\tprivate hideOverlayContainer() {\n\t\tthis.overlayContainer.style.display = 'none';\n\t}\n\n\tprivate createHeader(parent: HTMLElement): void {\n\t\tthis.headerContainer = DOM.append(parent, $('.keybindings-header'));\n\t\tconst fullTextSearchPlaceholder = localize('SearchKeybindings.FullTextSearchPlaceholder', \"Type to search in keybindings\");\n\t\tconst keybindingsSearchPlaceholder = localize('SearchKeybindings.KeybindingsSearchPlaceholder', \"Recording Keys. Press Escape to exit\");\n\n\t\tconst clearInputAction = new Action(KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS, localize('clearInput', \"Clear Keybindings Search Input\"), 'clear-input', false, () => { this.search(''); return Promise.resolve(null); });\n\n\t\tconst searchContainer = DOM.append(this.headerContainer, $('.search-container'));\n\t\tthis.searchWidget = this._register(this.instantiationService.createInstance(KeybindingsSearchWidget, searchContainer, <KeybindingsSearchOptions>{\n\t\t\tariaLabel: fullTextSearchPlaceholder,\n\t\t\tplaceholder: fullTextSearchPlaceholder,\n\t\t\tfocusKey: this.searchFocusContextKey,\n\t\t\tariaLabelledBy: 'keybindings-editor-aria-label-element',\n\t\t\trecordEnter: true,\n\t\t\tquoteRecordedKeys: true\n\t\t}));\n\t\tthis._register(this.searchWidget.onDidChange(searchValue => {\n\t\t\tclearInputAction.enabled = !!searchValue;\n\t\t\tthis.delayedFiltering.trigger(() => this.filterKeybindings());\n\t\t}));\n\t\tthis._register(this.searchWidget.onEscape(() => this.recordKeysAction.checked = false));\n\n\t\tthis.actionsContainer = DOM.append(searchContainer, DOM.$('.keybindings-search-actions-container'));\n\t\tconst recordingBadge = this.createRecordingBadge(this.actionsContainer);\n\n\t\tconst sortByPrecedenceActionKeybinding = this.keybindingsService.lookupKeybinding(KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE);\n\t\tconst sortByPrecedenceActionLabel = localize('sortByPrecedeneLabel', \"Sort by Precedence\");\n\t\tthis.sortByPrecedenceAction = new Action('keybindings.editor.sortByPrecedence', sortByPrecedenceActionKeybinding ? localize('sortByPrecedeneLabelWithKeybinding', \"{0} ({1})\", sortByPrecedenceActionLabel, sortByPrecedenceActionKeybinding.getLabel()) : sortByPrecedenceActionLabel, 'sort-by-precedence');\n\t\tthis.sortByPrecedenceAction.checked = false;\n\t\tthis._register(this.sortByPrecedenceAction.onDidChange(e => {\n\t\t\tif (e.checked !== undefined) {\n\t\t\t\tthis.renderKeybindingsEntries(false);\n\t\t\t}\n\t\t}));\n\n\t\tconst recordKeysActionKeybinding = this.keybindingsService.lookupKeybinding(KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS);\n\t\tconst recordKeysActionLabel = localize('recordKeysLabel', \"Record Keys\");\n\t\tthis.recordKeysAction = new Action(KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS, recordKeysActionKeybinding ? localize('recordKeysLabelWithKeybinding', \"{0} ({1})\", recordKeysActionLabel, recordKeysActionKeybinding.getLabel()) : recordKeysActionLabel, 'record-keys');\n\t\tthis.recordKeysAction.checked = false;\n\t\tthis._register(this.recordKeysAction.onDidChange(e => {\n\t\t\tif (e.checked !== undefined) {\n\t\t\t\tDOM.toggleClass(recordingBadge, 'disabled', !e.checked);\n\t\t\t\tif (e.checked) {\n\t\t\t\t\tthis.searchWidget.inputBox.setPlaceHolder(keybindingsSearchPlaceholder);\n\t\t\t\t\tthis.searchWidget.inputBox.setAriaLabel(keybindingsSearchPlaceholder);\n\t\t\t\t\tthis.searchWidget.startRecordingKeys();\n\t\t\t\t\tthis.searchWidget.focus();\n\t\t\t\t} else {\n\t\t\t\t\tthis.searchWidget.inputBox.setPlaceHolder(fullTextSearchPlaceholder);\n\t\t\t\t\tthis.searchWidget.inputBox.setAriaLabel(fullTextSearchPlaceholder);\n\t\t\t\t\tthis.searchWidget.stopRecordingKeys();\n\t\t\t\t\tthis.searchWidget.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.actionBar = this._register(new ActionBar(this.actionsContainer, {\n\t\t\tanimated: false,\n\t\t\tactionItemProvider: (action: Action) => {\n\t\t\t\tif (action.id === this.sortByPrecedenceAction.id) {\n\t\t\t\t\treturn new CheckboxActionItem(null, action);\n\t\t\t\t}\n\t\t\t\tif (action.id === this.recordKeysAction.id) {\n\t\t\t\t\treturn new CheckboxActionItem(null, action);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tthis.actionBar.push([this.recordKeysAction, this.sortByPrecedenceAction, clearInputAction], { label: false, icon: true });\n\t}\n\n\tprivate createRecordingBadge(container: HTMLElement): HTMLElement {\n\t\tconst recordingBadge = DOM.append(container, DOM.$('.recording-badge.disabled'));\n\t\trecordingBadge.textContent = localize('recording', \"Recording Keys\");\n\t\tthis._register(attachStylerCallback(this.themeService, { badgeBackground, contrastBorder, badgeForeground }, colors => {\n\t\t\tconst background = colors.badgeBackground ? colors.badgeBackground.toString() : null;\n\t\t\tconst border = colors.contrastBorder ? colors.contrastBorder.toString() : null;\n\t\t\tconst color = colors.badgeForeground ? colors.badgeForeground.toString() : null;\n\n\t\t\trecordingBadge.style.backgroundColor = background;\n\t\t\trecordingBadge.style.borderWidth = border ? '1px' : null;\n\t\t\trecordingBadge.style.borderStyle = border ? 'solid' : null;\n\t\t\trecordingBadge.style.borderColor = border;\n\t\t\trecordingBadge.style.color = color ? color.toString() : null;\n\t\t}));\n\t\treturn recordingBadge;\n\t}\n\n\tprivate layoutSearchWidget(dimension: DOM.Dimension): void {\n\t\tthis.searchWidget.layout(dimension);\n\t\tDOM.toggleClass(this.headerContainer, 'small', dimension.width < 400);\n\t\tthis.searchWidget.inputBox.inputElement.style.paddingRight = `${DOM.getTotalWidth(this.actionsContainer) + 12}px`;\n\t}\n\n\tprivate createBody(parent: HTMLElement): void {\n\t\tconst bodyContainer = DOM.append(parent, $('.keybindings-body'));\n\t\tthis.createListHeader(bodyContainer);\n\t\tthis.createList(bodyContainer);\n\t}\n\n\tprivate createListHeader(parent: HTMLElement): void {\n\t\tconst keybindingsListHeader = DOM.append(parent, $('.keybindings-list-header'));\n\t\tkeybindingsListHeader.style.height = '30px';\n\t\tkeybindingsListHeader.style.lineHeight = '30px';\n\n\t\tthis.columnItems = [];\n\t\tlet column = $('.header.actions');\n\t\tthis.columnItems.push({ column, width: 30 });\n\n\t\tcolumn = $('.header.command', undefined, localize('command', \"Command\"));\n\t\tthis.columnItems.push({ column, proportion: 0.3, width: 0 });\n\n\t\tcolumn = $('.header.keybinding', undefined, localize('keybinding', \"Keybinding\"));\n\t\tthis.columnItems.push({ column, proportion: 0.2, width: 0 });\n\n\t\tcolumn = $('.header.when', undefined, localize('when', \"When\"));\n\t\tthis.columnItems.push({ column, proportion: 0.4, width: 0 });\n\n\t\tcolumn = $('.header.source', undefined, localize('source', \"Source\"));\n\t\tthis.columnItems.push({ column, proportion: 0.1, width: 0 });\n\n\t\tDOM.append(keybindingsListHeader, ...this.columnItems.map(({ column }) => column));\n\t}\n\n\tprivate createList(parent: HTMLElement): void {\n\t\tthis.keybindingsListContainer = DOM.append(parent, $('.keybindings-list-container'));\n\t\tthis.keybindingsList = this._register(this.instantiationService.createInstance(WorkbenchList, this.keybindingsListContainer, new Delegate(), [new KeybindingItemRenderer(this, this.instantiationService)],\n\t\t\t{\n\t\t\t\tidentityProvider: { getId: (e: IListEntry) => e.id },\n\t\t\t\tariaLabel: localize('keybindingsLabel', \"Keybindings\"),\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\thorizontalScrolling: false\n\t\t\t})) as WorkbenchList<IListEntry>;\n\t\tthis._register(this.keybindingsList.onContextMenu(e => this.onContextMenu(e)));\n\t\tthis._register(this.keybindingsList.onFocusChange(e => this.onFocusChange(e)));\n\t\tthis._register(this.keybindingsList.onDidFocus(() => {\n\t\t\tDOM.addClass(this.keybindingsList.getHTMLElement(), 'focused');\n\t\t}));\n\t\tthis._register(this.keybindingsList.onDidBlur(() => {\n\t\t\tDOM.removeClass(this.keybindingsList.getHTMLElement(), 'focused');\n\t\t\tthis.keybindingFocusContextKey.reset();\n\t\t}));\n\t\tthis._register(this.keybindingsList.onMouseDblClick(() => {\n\t\t\tconst activeKeybindingEntry = this.activeKeybindingEntry;\n\t\t\tif (activeKeybindingEntry) {\n\t\t\t\tthis.defineKeybinding(activeKeybindingEntry);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.keybindingsList.onKeyDown(e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.keyCode === KeyCode.Enter) {\n\t\t\t\tconst keybindingEntry = this.activeKeybindingEntry;\n\t\t\t\tif (keybindingEntry) {\n\t\t\t\t\tthis.defineKeybinding(keybindingEntry);\n\t\t\t\t}\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async render(preserveFocus: boolean): Promise<void> {\n\t\tif (this.input) {\n\t\t\tconst input: KeybindingsEditorInput = this.input as KeybindingsEditorInput;\n\t\t\tthis.keybindingsEditorModel = await input.resolve();\n\t\t\tconst editorActionsLabels: { [id: string]: string; } = EditorExtensionsRegistry.getEditorActions().reduce((editorActions, editorAction) => {\n\t\t\t\teditorActions[editorAction.id] = editorAction.label;\n\t\t\t\treturn editorActions;\n\t\t\t}, {});\n\t\t\tawait this.keybindingsEditorModel.resolve(editorActionsLabels);\n\t\t\tthis.renderKeybindingsEntries(false, preserveFocus);\n\t\t}\n\t}\n\n\tprivate filterKeybindings(): void {\n\t\tthis.renderKeybindingsEntries(this.searchWidget.hasFocus());\n\t\tthis.delayedFilterLogging.trigger(() => this.reportFilteringUsed(this.searchWidget.getValue()));\n\t}\n\n\tprivate renderKeybindingsEntries(reset: boolean, preserveFocus?: boolean): void {\n\t\tif (this.keybindingsEditorModel) {\n\t\t\tconst filter = this.searchWidget.getValue();\n\t\t\tconst keybindingsEntries: IKeybindingItemEntry[] = this.keybindingsEditorModel.fetch(filter, this.sortByPrecedenceAction.checked);\n\n\t\t\tthis.ariaLabelElement.setAttribute('aria-label', this.getAriaLabel(keybindingsEntries));\n\n\t\t\tif (keybindingsEntries.length === 0) {\n\t\t\t\tthis.latestEmptyFilters.push(filter);\n\t\t\t}\n\t\t\tconst currentSelectedIndex = this.keybindingsList.getSelection()[0];\n\t\t\tthis.listEntries = keybindingsEntries;\n\t\t\tthis.keybindingsList.splice(0, this.keybindingsList.length, this.listEntries);\n\t\t\tthis.layoutKeybindingsList();\n\n\t\t\tif (reset) {\n\t\t\t\tthis.keybindingsList.setSelection([]);\n\t\t\t\tthis.keybindingsList.setFocus([]);\n\t\t\t} else {\n\t\t\t\tif (this.unAssignedKeybindingItemToRevealAndFocus) {\n\t\t\t\t\tconst index = this.getNewIndexOfUnassignedKeybinding(this.unAssignedKeybindingItemToRevealAndFocus);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tthis.keybindingsList.reveal(index, 0.2);\n\t\t\t\t\t\tthis.selectEntry(index);\n\t\t\t\t\t}\n\t\t\t\t\tthis.unAssignedKeybindingItemToRevealAndFocus = null;\n\t\t\t\t} else if (currentSelectedIndex !== -1 && currentSelectedIndex < this.listEntries.length) {\n\t\t\t\t\tthis.selectEntry(currentSelectedIndex);\n\t\t\t\t} else if (this.editorService.activeControl === this && !preserveFocus) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getAriaLabel(keybindingsEntries: IKeybindingItemEntry[]): string {\n\t\tif (this.sortByPrecedenceAction.checked) {\n\t\t\treturn localize('show sorted keybindings', \"Showing {0} Keybindings in precedence order\", keybindingsEntries.length);\n\t\t} else {\n\t\t\treturn localize('show keybindings', \"Showing {0} Keybindings in alphabetical order\", keybindingsEntries.length);\n\t\t}\n\t}\n\n\tprivate layoutKeybindingsList(): void {\n\t\tlet width = this.dimension.width - 27;\n\t\tfor (const columnItem of this.columnItems) {\n\t\t\tif (columnItem.width && !columnItem.proportion) {\n\t\t\t\twidth = width - columnItem.width;\n\t\t\t}\n\t\t}\n\t\tfor (const columnItem of this.columnItems) {\n\t\t\tif (columnItem.proportion && !columnItem.width) {\n\t\t\t\tcolumnItem.width = width * columnItem.proportion;\n\t\t\t}\n\t\t}\n\n\t\tthis.layoutColumns(this.columnItems.map(({ column }) => column));\n\t\tconst listHeight = this.dimension.height - (DOM.getDomNodePagePosition(this.headerContainer).height + 12 /*padding*/ + 30 /*list header*/);\n\t\tthis.keybindingsListContainer.style.height = `${listHeight}px`;\n\t\tthis.keybindingsList.layout(listHeight);\n\t}\n\n\tprivate getIndexOf(listEntry: IListEntry): number {\n\t\tconst index = this.listEntries.indexOf(listEntry);\n\t\tif (index === -1) {\n\t\t\tfor (let i = 0; i < this.listEntries.length; i++) {\n\t\t\t\tif (this.listEntries[i].id === listEntry.id) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n\n\tprivate getNewIndexOfUnassignedKeybinding(unassignedKeybinding: IKeybindingItemEntry): number {\n\t\tfor (let index = 0; index < this.listEntries.length; index++) {\n\t\t\tconst entry = this.listEntries[index];\n\t\t\tif (entry.templateId === KEYBINDING_ENTRY_TEMPLATE_ID) {\n\t\t\t\tconst keybindingItemEntry = (<IKeybindingItemEntry>entry);\n\t\t\t\tif (keybindingItemEntry.keybindingItem.command === unassignedKeybinding.keybindingItem.command) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tprivate selectEntry(keybindingItemEntry: IKeybindingItemEntry | number): void {\n\t\tconst index = typeof keybindingItemEntry === 'number' ? keybindingItemEntry : this.getIndexOf(keybindingItemEntry);\n\t\tif (index !== -1) {\n\t\t\tthis.keybindingsList.getHTMLElement().focus();\n\t\t\tthis.keybindingsList.setFocus([index]);\n\t\t\tthis.keybindingsList.setSelection([index]);\n\t\t}\n\t}\n\n\tfocusKeybindings(): void {\n\t\tthis.keybindingsList.getHTMLElement().focus();\n\t\tconst currentFocusIndices = this.keybindingsList.getFocus();\n\t\tthis.keybindingsList.setFocus([currentFocusIndices.length ? currentFocusIndices[0] : 0]);\n\t}\n\n\tselectKeybinding(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tthis.selectEntry(keybindingItemEntry);\n\t}\n\n\trecordSearchKeys(): void {\n\t\tthis.recordKeysAction.checked = true;\n\t}\n\n\ttoggleSortByPrecedence(): void {\n\t\tthis.sortByPrecedenceAction.checked = !this.sortByPrecedenceAction.checked;\n\t}\n\n\tprivate onContextMenu(e: IListContextMenuEvent<IListEntry>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.element.templateId === KEYBINDING_ENTRY_TEMPLATE_ID) {\n\t\t\tthis.selectEntry(<IKeybindingItemEntry>e.element);\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => [\n\t\t\t\t\tthis.createCopyAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tthis.createCopyCommandAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tnew Separator(),\n\t\t\t\t\tthis.createDefineAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tthis.createRemoveAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tthis.createResetAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tthis.createDefineWhenExpressionAction(<IKeybindingItemEntry>e.element),\n\t\t\t\t\tnew Separator(),\n\t\t\t\t\tthis.createShowConflictsAction(<IKeybindingItemEntry>e.element)]\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onFocusChange(e: IListEvent<IListEntry>): void {\n\t\tthis.keybindingFocusContextKey.reset();\n\t\tconst element = e.elements[0];\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\t\tif (element.templateId === KEYBINDING_ENTRY_TEMPLATE_ID) {\n\t\t\tthis.keybindingFocusContextKey.set(true);\n\t\t}\n\t}\n\n\tprivate createDefineAction(keybindingItemEntry: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: keybindingItemEntry.keybindingItem.keybinding ? localize('changeLabel', \"Change Keybinding\") : localize('addLabel', \"Add Keybinding\"),\n\t\t\tenabled: true,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_DEFINE,\n\t\t\trun: () => this.defineKeybinding(keybindingItemEntry)\n\t\t};\n\t}\n\n\tprivate createDefineWhenExpressionAction(keybindingItemEntry: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('editWhen', \"Change When Expression\"),\n\t\t\tenabled: !!keybindingItemEntry.keybindingItem.keybinding,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN,\n\t\t\trun: () => this.defineWhenExpression(keybindingItemEntry)\n\t\t};\n\t}\n\n\tprivate createRemoveAction(keybindingItem: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('removeLabel', \"Remove Keybinding\"),\n\t\t\tenabled: !!keybindingItem.keybindingItem.keybinding,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_REMOVE,\n\t\t\trun: () => this.removeKeybinding(keybindingItem)\n\t\t};\n\t}\n\n\tprivate createResetAction(keybindingItem: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('resetLabel', \"Reset Keybinding\"),\n\t\t\tenabled: !keybindingItem.keybindingItem.keybindingItem.isDefault,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_RESET,\n\t\t\trun: () => this.resetKeybinding(keybindingItem)\n\t\t};\n\t}\n\n\tprivate createShowConflictsAction(keybindingItem: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('showSameKeybindings', \"Show Same Keybindings\"),\n\t\t\tenabled: !!keybindingItem.keybindingItem.keybinding,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR,\n\t\t\trun: () => this.showSimilarKeybindings(keybindingItem)\n\t\t};\n\t}\n\n\tprivate createCopyAction(keybindingItem: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('copyLabel', \"Copy\"),\n\t\t\tenabled: true,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_COPY,\n\t\t\trun: () => this.copyKeybinding(keybindingItem)\n\t\t};\n\t}\n\n\tprivate createCopyCommandAction(keybinding: IKeybindingItemEntry): IAction {\n\t\treturn <IAction>{\n\t\t\tlabel: localize('copyCommandLabel', \"Copy Command\"),\n\t\t\tenabled: true,\n\t\t\tid: KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND,\n\t\t\trun: () => this.copyKeybindingCommand(keybinding)\n\t\t};\n\t}\n\n\tprivate reportFilteringUsed(filter: string): void {\n\t\tif (filter) {\n\t\t\tconst data = {\n\t\t\t\tfilter,\n\t\t\t\temptyFilters: this.getLatestEmptyFiltersForTelemetry()\n\t\t\t};\n\t\t\tthis.latestEmptyFilters = [];\n\t\t\t/* __GDPR__\n\t\t\t\t\"keybindings.filter\" : {\n\t\t\t\t\t\"filter\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"emptyFilters\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('keybindings.filter', data);\n\t\t}\n\t}\n\n\t/**\n\t * Put a rough limit on the size of the telemetry data, since otherwise it could be an unbounded large amount\n\t * of data. 8192 is the max size of a property value. This is rough since that probably includes \"\"s, etc.\n\t */\n\tprivate getLatestEmptyFiltersForTelemetry(): string[] {\n\t\tlet cumulativeSize = 0;\n\t\treturn this.latestEmptyFilters.filter(filterText => (cumulativeSize += filterText.length) <= 8192);\n\t}\n\n\tprivate reportKeybindingAction(action: string, command: string, keybinding: ResolvedKeybinding | string): void {\n\t\t// __GDPR__TODO__ Need to move off dynamic event names and properties as they cannot be registered statically\n\t\tthis.telemetryService.publicLog(action, { command, keybinding: keybinding ? (typeof keybinding === 'string' ? keybinding : keybinding.getUserSettingsLabel()) : '' });\n\t}\n\n\tprivate onKeybindingEditingError(error: any): void {\n\t\tthis.notificationService.error(typeof error === 'string' ? error : localize('error', \"Error '{0}' while editing the keybinding. Please open 'keybindings.json' file and check for errors.\", `${error}`));\n\t}\n}\n\nclass Delegate implements IListVirtualDelegate<IListEntry> {\n\n\tgetHeight(element: IListEntry) {\n\t\tif (element.templateId === KEYBINDING_ENTRY_TEMPLATE_ID) {\n\t\t\tconst commandIdMatched = (<IKeybindingItemEntry>element).keybindingItem.commandLabel && (<IKeybindingItemEntry>element).commandIdMatches;\n\t\t\tconst commandDefaultLabelMatched = !!(<IKeybindingItemEntry>element).commandDefaultLabelMatches;\n\t\t\tif (commandIdMatched && commandDefaultLabelMatched) {\n\t\t\t\treturn 60;\n\t\t\t}\n\t\t\tif (commandIdMatched || commandDefaultLabelMatched) {\n\t\t\t\treturn 40;\n\t\t\t}\n\t\t}\n\t\treturn 24;\n\t}\n\n\tgetTemplateId(element: IListEntry) {\n\t\treturn element.templateId;\n\t}\n}\n\ninterface KeybindingItemTemplate {\n\tparent: HTMLElement;\n\tcolumns: Column[];\n\tdisposable: IDisposable;\n}\n\nclass KeybindingItemRenderer implements IListRenderer<IKeybindingItemEntry, KeybindingItemTemplate> {\n\n\tget templateId(): string { return KEYBINDING_ENTRY_TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate keybindingsEditor: IKeybindingsEditor,\n\t\tprivate instantiationService: IInstantiationService\n\t) { }\n\n\trenderTemplate(parent: HTMLElement): KeybindingItemTemplate {\n\t\tDOM.addClass(parent, 'keybinding-item');\n\n\t\tconst actions = this.instantiationService.createInstance(ActionsColumn, parent, this.keybindingsEditor);\n\t\tconst command = this.instantiationService.createInstance(CommandColumn, parent, this.keybindingsEditor);\n\t\tconst keybinding = this.instantiationService.createInstance(KeybindingColumn, parent, this.keybindingsEditor);\n\t\tconst when = this.instantiationService.createInstance(WhenColumn, parent, this.keybindingsEditor);\n\t\tconst source = this.instantiationService.createInstance(SourceColumn, parent, this.keybindingsEditor);\n\n\t\tconst columns: Column[] = [actions, command, keybinding, when, source];\n\t\tconst disposables: IDisposable[] = [...columns];\n\t\tconst elements = columns.map(({ element }) => element);\n\n\t\tthis.keybindingsEditor.layoutColumns(elements);\n\t\tthis.keybindingsEditor.onLayout(() => this.keybindingsEditor.layoutColumns(elements));\n\t\tparent.setAttribute('aria-labelledby', elements.map(e => e.getAttribute('id')).join(' '));\n\n\t\treturn {\n\t\t\tparent,\n\t\t\tcolumns,\n\t\t\tdisposable: toDisposable(() => dispose(disposables))\n\t\t};\n\t}\n\n\trenderElement(keybindingEntry: IKeybindingItemEntry, index: number, template: KeybindingItemTemplate): void {\n\t\tDOM.toggleClass(template.parent, 'odd', index % 2 === 1);\n\t\tfor (const column of template.columns) {\n\t\t\tcolumn.render(keybindingEntry);\n\t\t}\n\t}\n\n\tdisposeTemplate(template: KeybindingItemTemplate): void {\n\t\ttemplate.disposable.dispose();\n\t}\n}\n\nabstract class Column extends Disposable {\n\n\tstatic COUNTER = 0;\n\n\tabstract readonly element: HTMLElement;\n\tabstract render(keybindingItemEntry: IKeybindingItemEntry): void;\n\n\tconstructor(protected keybindingsEditor: IKeybindingsEditor) {\n\t\tsuper();\n\t}\n\n}\n\nclass ActionsColumn extends Column {\n\n\tprivate actionBar: ActionBar;\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tkeybindingsEditor: IKeybindingsEditor,\n\t\t@IKeybindingService private keybindingsService: IKeybindingService\n\t) {\n\t\tsuper(keybindingsEditor);\n\t\tthis.element = this.create(parent);\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tconst actionsContainer = DOM.append(parent, $('.column.actions', { id: 'actions_' + ++Column.COUNTER }));\n\t\tthis.actionBar = new ActionBar(actionsContainer, { animated: false });\n\t\treturn actionsContainer;\n\t}\n\n\trender(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tthis.actionBar.clear();\n\t\tconst actions: IAction[] = [];\n\t\tif (keybindingItemEntry.keybindingItem.keybinding) {\n\t\t\tactions.push(this.createEditAction(keybindingItemEntry));\n\t\t} else {\n\t\t\tactions.push(this.createAddAction(keybindingItemEntry));\n\t\t}\n\t\tthis.actionBar.push(actions, { icon: true });\n\t}\n\n\tprivate createEditAction(keybindingItemEntry: IKeybindingItemEntry): IAction {\n\t\tconst keybinding = this.keybindingsService.lookupKeybinding(KEYBINDINGS_EDITOR_COMMAND_DEFINE);\n\t\treturn <IAction>{\n\t\t\tclass: 'edit',\n\t\t\tenabled: true,\n\t\t\tid: 'editKeybinding',\n\t\t\ttooltip: keybinding ? localize('editKeybindingLabelWithKey', \"Change Keybinding {0}\", `(${keybinding.getLabel()})`) : localize('editKeybindingLabel', \"Change Keybinding\"),\n\t\t\trun: () => this.keybindingsEditor.defineKeybinding(keybindingItemEntry)\n\t\t};\n\t}\n\n\tprivate createAddAction(keybindingItemEntry: IKeybindingItemEntry): IAction {\n\t\tconst keybinding = this.keybindingsService.lookupKeybinding(KEYBINDINGS_EDITOR_COMMAND_DEFINE);\n\t\treturn <IAction>{\n\t\t\tclass: 'add',\n\t\t\tenabled: true,\n\t\t\tid: 'addKeybinding',\n\t\t\ttooltip: keybinding ? localize('addKeybindingLabelWithKey', \"Add Keybinding {0}\", `(${keybinding.getLabel()})`) : localize('addKeybindingLabel', \"Add Keybinding\"),\n\t\t\trun: () => this.keybindingsEditor.defineKeybinding(keybindingItemEntry)\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis.actionBar = dispose(this.actionBar);\n\t}\n}\n\nclass CommandColumn extends Column {\n\n\tprivate commandColumn: HTMLElement;\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tkeybindingsEditor: IKeybindingsEditor,\n\t) {\n\t\tsuper(keybindingsEditor);\n\t\tthis.element = this.create(parent);\n\t}\n\n\tprivate create(parent: HTMLElement): HTMLElement {\n\t\tthis.commandColumn = DOM.append(parent, $('.column.command', { id: 'command_' + ++Column.COUNTER }));\n\t\treturn this.commandColumn;\n\t}\n\n\trender(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tDOM.clearNode(this.commandColumn);\n\t\tconst keybindingItem = keybindingItemEntry.keybindingItem;\n\t\tconst commandIdMatched = !!(keybindingItem.commandLabel && keybindingItemEntry.commandIdMatches);\n\t\tconst commandDefaultLabelMatched = !!keybindingItemEntry.commandDefaultLabelMatches;\n\t\tDOM.toggleClass(this.commandColumn, 'vertical-align-column', commandIdMatched || commandDefaultLabelMatched);\n\t\tthis.commandColumn.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n\t\tlet commandLabel: HighlightedLabel | undefined;\n\t\tif (keybindingItem.commandLabel) {\n\t\t\tcommandLabel = new HighlightedLabel(this.commandColumn, false);\n\t\t\tcommandLabel.set(keybindingItem.commandLabel, keybindingItemEntry.commandLabelMatches);\n\t\t}\n\t\tif (keybindingItemEntry.commandDefaultLabelMatches) {\n\t\t\tcommandLabel = new HighlightedLabel(DOM.append(this.commandColumn, $('.command-default-label')), false);\n\t\t\tcommandLabel.set(keybindingItem.commandDefaultLabel, keybindingItemEntry.commandDefaultLabelMatches);\n\t\t}\n\t\tif (keybindingItemEntry.commandIdMatches || !keybindingItem.commandLabel) {\n\t\t\tcommandLabel = new HighlightedLabel(DOM.append(this.commandColumn, $('.code')), false);\n\t\t\tcommandLabel.set(keybindingItem.command, keybindingItemEntry.commandIdMatches);\n\t\t}\n\t\tif (commandLabel) {\n\t\t\tcommandLabel.element.title = keybindingItem.commandLabel ? localize('title', \"{0} ({1})\", keybindingItem.commandLabel, keybindingItem.command) : keybindingItem.command;\n\t\t}\n\t}\n\n\tprivate getAriaLabel(keybindingItemEntry: IKeybindingItemEntry): string {\n\t\treturn localize('commandAriaLabel', \"Command is {0}.\", keybindingItemEntry.keybindingItem.commandLabel ? keybindingItemEntry.keybindingItem.commandLabel : keybindingItemEntry.keybindingItem.command);\n\t}\n}\n\nclass KeybindingColumn extends Column {\n\n\tprivate keybindingLabel: HTMLElement;\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tkeybindingsEditor: IKeybindingsEditor,\n\t) {\n\t\tsuper(keybindingsEditor);\n\t\tthis.element = this.create(parent);\n\t}\n\n\tprivate create(parent: HTMLElement): HTMLElement {\n\t\tconst column = DOM.append(parent, $('.column.keybinding', { id: 'keybinding_' + ++Column.COUNTER }));\n\t\tthis.keybindingLabel = DOM.append(column, $('div.keybinding-label'));\n\t\treturn column;\n\t}\n\n\trender(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tDOM.clearNode(this.keybindingLabel);\n\t\tthis.keybindingLabel.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n\t\tif (keybindingItemEntry.keybindingItem.keybinding) {\n\t\t\tnew KeybindingLabel(this.keybindingLabel, OS).set(keybindingItemEntry.keybindingItem.keybinding, keybindingItemEntry.keybindingMatches);\n\t\t}\n\t}\n\n\tprivate getAriaLabel(keybindingItemEntry: IKeybindingItemEntry): string {\n\t\treturn keybindingItemEntry.keybindingItem.keybinding ? localize('keybindingAriaLabel', \"Keybinding is {0}.\", keybindingItemEntry.keybindingItem.keybinding.getAriaLabel()) : localize('noKeybinding', \"No Keybinding assigned.\");\n\t}\n}\n\nclass SourceColumn extends Column {\n\n\tprivate sourceColumn: HTMLElement;\n\treadonly element: HTMLElement;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tkeybindingsEditor: IKeybindingsEditor,\n\t) {\n\t\tsuper(keybindingsEditor);\n\t\tthis.element = this.create(parent);\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tthis.sourceColumn = DOM.append(parent, $('.column.source', { id: 'source_' + ++Column.COUNTER }));\n\t\treturn this.sourceColumn;\n\t}\n\n\trender(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tDOM.clearNode(this.sourceColumn);\n\t\tthis.sourceColumn.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n\t\tnew HighlightedLabel(this.sourceColumn, false).set(keybindingItemEntry.keybindingItem.source, keybindingItemEntry.sourceMatches);\n\t}\n\n\tprivate getAriaLabel(keybindingItemEntry: IKeybindingItemEntry): string {\n\t\treturn localize('sourceAriaLabel', \"Source is {0}.\", keybindingItemEntry.keybindingItem.source);\n\t}\n}\n\nclass WhenColumn extends Column {\n\n\treadonly element: HTMLElement;\n\tprivate whenLabel: HTMLElement;\n\tprivate whenInput: InputBox;\n\tprivate disposables: IDisposable[] = [];\n\n\tprivate _onDidAccept: Emitter<void> = this._register(new Emitter<void>());\n\tprivate readonly onDidAccept: Event<void> = this._onDidAccept.event;\n\n\tprivate _onDidReject: Emitter<void> = this._register(new Emitter<void>());\n\tprivate readonly onDidReject: Event<void> = this._onDidReject.event;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tkeybindingsEditor: IKeybindingsEditor,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper(keybindingsEditor);\n\t\tthis.element = this.create(parent);\n\t\tthis._register(toDisposable(() => this.disposables = dispose(this.disposables)));\n\t}\n\n\tprivate create(parent: HTMLElement): HTMLElement {\n\t\tconst column = DOM.append(parent, $('.column.when', { id: 'when_' + ++Column.COUNTER }));\n\n\t\tthis.whenLabel = DOM.append(column, $('div.when-label'));\n\t\tthis.whenInput = new InputBox(column, this.contextViewService, {\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: (value) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tContextKeyExpr.deserialize(value, true);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tcontent: error.message,\n\t\t\t\t\t\t\tformatContent: true,\n\t\t\t\t\t\t\ttype: MessageType.ERROR\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tariaLabel: localize('whenContextInputAriaLabel', \"Type when context. Press Enter to confirm or Escape to cancel.\")\n\t\t});\n\t\tthis._register(attachInputBoxStyler(this.whenInput, this.themeService));\n\t\tthis._register(DOM.addStandardDisposableListener(this.whenInput.inputElement, DOM.EventType.KEY_DOWN, e => this.onInputKeyDown(e)));\n\t\tthis._register(DOM.addDisposableListener(this.whenInput.inputElement, DOM.EventType.BLUR, () => this.cancelEditing()));\n\n\t\treturn column;\n\t}\n\n\tprivate onInputKeyDown(e: IKeyboardEvent): void {\n\t\tlet handled = false;\n\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\tthis.finishEditing();\n\t\t\thandled = true;\n\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\tthis.cancelEditing();\n\t\t\thandled = true;\n\t\t}\n\t\tif (handled) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\n\tprivate startEditing(): void {\n\t\tDOM.addClass(this.element, 'input-mode');\n\t\tthis.whenInput.focus();\n\t\tthis.whenInput.select();\n\t}\n\n\tprivate finishEditing(): void {\n\t\tDOM.removeClass(this.element, 'input-mode');\n\t\tthis._onDidAccept.fire();\n\t}\n\n\tprivate cancelEditing(): void {\n\t\tDOM.removeClass(this.element, 'input-mode');\n\t\tthis._onDidReject.fire();\n\t}\n\n\trender(keybindingItemEntry: IKeybindingItemEntry): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tDOM.clearNode(this.whenLabel);\n\n\t\tthis.keybindingsEditor.onDefineWhenExpression(e => {\n\t\t\tif (keybindingItemEntry === e) {\n\t\t\t\tthis.startEditing();\n\t\t\t}\n\t\t}, this, this.disposables);\n\t\tthis.whenInput.value = keybindingItemEntry.keybindingItem.when || '';\n\t\tthis.whenLabel.setAttribute('aria-label', this.getAriaLabel(keybindingItemEntry));\n\t\tDOM.toggleClass(this.whenLabel, 'code', !!keybindingItemEntry.keybindingItem.when);\n\t\tDOM.toggleClass(this.whenLabel, 'empty', !keybindingItemEntry.keybindingItem.when);\n\t\tif (keybindingItemEntry.keybindingItem.when) {\n\t\t\tconst whenLabel = new HighlightedLabel(this.whenLabel, false);\n\t\t\twhenLabel.set(keybindingItemEntry.keybindingItem.when, keybindingItemEntry.whenMatches);\n\t\t\tthis.element.title = keybindingItemEntry.keybindingItem.when;\n\t\t\twhenLabel.element.title = keybindingItemEntry.keybindingItem.when;\n\t\t} else {\n\t\t\tthis.whenLabel.textContent = '—';\n\t\t\tthis.element.title = '';\n\t\t}\n\t\tthis.onDidAccept(() => {\n\t\t\tthis.keybindingsEditor.updateKeybinding(keybindingItemEntry, keybindingItemEntry.keybindingItem.keybinding ? keybindingItemEntry.keybindingItem.keybinding.getUserSettingsLabel() || '' : '', this.whenInput.value);\n\t\t\tthis.keybindingsEditor.selectKeybinding(keybindingItemEntry);\n\t\t}, this, this.disposables);\n\t\tthis.onDidReject(() => {\n\t\t\tthis.whenInput.value = keybindingItemEntry.keybindingItem.when || '';\n\t\t\tthis.keybindingsEditor.selectKeybinding(keybindingItemEntry);\n\t\t}, this, this.disposables);\n\t}\n\n\tprivate getAriaLabel(keybindingItemEntry: IKeybindingItemEntry): string {\n\t\treturn keybindingItemEntry.keybindingItem.when ? localize('whenAriaLabel', \"When is {0}.\", keybindingItemEntry.keybindingItem.when) : localize('noWhen', \"No when context.\");\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst listHighlightForegroundColor = theme.getColor(listHighlightForeground);\n\tif (listHighlightForegroundColor) {\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list-row > .column .highlight { color: ${listHighlightForegroundColor}; }`);\n\t}\n\tconst listActiveSelectionForegroundColor = theme.getColor(listActiveSelectionForeground);\n\tif (listActiveSelectionForegroundColor) {\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list:focus .monaco-list-row.selected.focused > .column .monaco-keybinding-key { color: ${listActiveSelectionForegroundColor}; }`);\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list:focus .monaco-list-row.selected > .column .monaco-keybinding-key { color: ${listActiveSelectionForegroundColor}; }`);\n\t}\n\tconst listInactiveFocusAndSelectionForegroundColor = theme.getColor(listInactiveSelectionForeground);\n\tif (listActiveSelectionForegroundColor) {\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row.selected > .column .monaco-keybinding-key { color: ${listInactiveFocusAndSelectionForegroundColor}; }`);\n\t}\n\tconst listHoverForegroundColor = theme.getColor(listHoverForeground);\n\tif (listHoverForegroundColor) {\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row:hover:not(.selected):not(.focused) > .column .monaco-keybinding-key { color: ${listHoverForegroundColor}; }`);\n\t}\n\tconst listFocusForegroundColor = theme.getColor(listFocusForeground);\n\tif (listFocusForegroundColor) {\n\t\tcollector.addRule(`.keybindings-editor > .keybindings-body > .keybindings-list-container .monaco-list .monaco-list-row.focused > .column .monaco-keybinding-key { color: ${listFocusForegroundColor}; }`);\n\t}\n});\n"]}]}