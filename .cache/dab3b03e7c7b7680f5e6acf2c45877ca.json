{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsWidgets.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar button_1 = require(\"vs/base/browser/ui/button/button\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nrequire(\"vs/css!./media/settingsWidgets\");\nvar nls_1 = require(\"vs/nls\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar async_1 = require(\"vs/base/common/async\");\nvar $ = DOM.$;\nexports.settingsHeaderForeground = colorRegistry_1.registerColor('settings.headerForeground', { light: '#444444', dark: '#e7e7e7', hc: '#ffffff' }, nls_1.localize('headerForeground', \"(For settings editor preview) The foreground color for a section header or active title.\"));\nexports.modifiedItemIndicator = colorRegistry_1.registerColor('settings.modifiedItemIndicator', {\n    light: new color_1.Color(new color_1.RGBA(102, 175, 224)),\n    dark: new color_1.Color(new color_1.RGBA(12, 125, 157)),\n    hc: new color_1.Color(new color_1.RGBA(0, 73, 122))\n}, nls_1.localize('modifiedItemForeground', \"(For settings editor preview) The color of the modified setting indicator.\"));\n// Enum control colors\nexports.settingsSelectBackground = colorRegistry_1.registerColor('settings.dropdownBackground', { dark: colorRegistry_1.selectBackground, light: colorRegistry_1.selectBackground, hc: colorRegistry_1.selectBackground }, nls_1.localize('settingsDropdownBackground', \"(For settings editor preview) Settings editor dropdown background.\"));\nexports.settingsSelectForeground = colorRegistry_1.registerColor('settings.dropdownForeground', { dark: colorRegistry_1.selectForeground, light: colorRegistry_1.selectForeground, hc: colorRegistry_1.selectForeground }, nls_1.localize('settingsDropdownForeground', \"(For settings editor preview) Settings editor dropdown foreground.\"));\nexports.settingsSelectBorder = colorRegistry_1.registerColor('settings.dropdownBorder', { dark: colorRegistry_1.selectBorder, light: colorRegistry_1.selectBorder, hc: colorRegistry_1.selectBorder }, nls_1.localize('settingsDropdownBorder', \"(For settings editor preview) Settings editor dropdown border.\"));\nexports.settingsSelectListBorder = colorRegistry_1.registerColor('settings.dropdownListBorder', { dark: colorRegistry_1.editorWidgetBorder, light: colorRegistry_1.editorWidgetBorder, hc: colorRegistry_1.editorWidgetBorder }, nls_1.localize('settingsDropdownListBorder', \"(For settings editor preview) Settings editor dropdown list border. This surrounds the options and separates the options from the description.\"));\n// Bool control colors\nexports.settingsCheckboxBackground = colorRegistry_1.registerColor('settings.checkboxBackground', { dark: colorRegistry_1.selectBackground, light: colorRegistry_1.selectBackground, hc: colorRegistry_1.selectBackground }, nls_1.localize('settingsCheckboxBackground', \"(For settings editor preview) Settings editor checkbox background.\"));\nexports.settingsCheckboxForeground = colorRegistry_1.registerColor('settings.checkboxForeground', { dark: colorRegistry_1.selectForeground, light: colorRegistry_1.selectForeground, hc: colorRegistry_1.selectForeground }, nls_1.localize('settingsCheckboxForeground', \"(For settings editor preview) Settings editor checkbox foreground.\"));\nexports.settingsCheckboxBorder = colorRegistry_1.registerColor('settings.checkboxBorder', { dark: colorRegistry_1.selectBorder, light: colorRegistry_1.selectBorder, hc: colorRegistry_1.selectBorder }, nls_1.localize('settingsCheckboxBorder', \"(For settings editor preview) Settings editor checkbox border.\"));\n// Text control colors\nexports.settingsTextInputBackground = colorRegistry_1.registerColor('settings.textInputBackground', { dark: colorRegistry_1.inputBackground, light: colorRegistry_1.inputBackground, hc: colorRegistry_1.inputBackground }, nls_1.localize('textInputBoxBackground', \"(For settings editor preview) Settings editor text input box background.\"));\nexports.settingsTextInputForeground = colorRegistry_1.registerColor('settings.textInputForeground', { dark: colorRegistry_1.inputForeground, light: colorRegistry_1.inputForeground, hc: colorRegistry_1.inputForeground }, nls_1.localize('textInputBoxForeground', \"(For settings editor preview) Settings editor text input box foreground.\"));\nexports.settingsTextInputBorder = colorRegistry_1.registerColor('settings.textInputBorder', { dark: colorRegistry_1.inputBorder, light: colorRegistry_1.inputBorder, hc: colorRegistry_1.inputBorder }, nls_1.localize('textInputBoxBorder', \"(For settings editor preview) Settings editor text input box border.\"));\n// Number control colors\nexports.settingsNumberInputBackground = colorRegistry_1.registerColor('settings.numberInputBackground', { dark: colorRegistry_1.inputBackground, light: colorRegistry_1.inputBackground, hc: colorRegistry_1.inputBackground }, nls_1.localize('numberInputBoxBackground', \"(For settings editor preview) Settings editor number input box background.\"));\nexports.settingsNumberInputForeground = colorRegistry_1.registerColor('settings.numberInputForeground', { dark: colorRegistry_1.inputForeground, light: colorRegistry_1.inputForeground, hc: colorRegistry_1.inputForeground }, nls_1.localize('numberInputBoxForeground', \"(For settings editor preview) Settings editor number input box foreground.\"));\nexports.settingsNumberInputBorder = colorRegistry_1.registerColor('settings.numberInputBorder', { dark: colorRegistry_1.inputBorder, light: colorRegistry_1.inputBorder, hc: colorRegistry_1.inputBorder }, nls_1.localize('numberInputBoxBorder', \"(For settings editor preview) Settings editor number input box border.\"));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var checkboxBackgroundColor = theme.getColor(exports.settingsCheckboxBackground);\n    if (checkboxBackgroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-bool .setting-value-checkbox { background-color: \" + checkboxBackgroundColor + \" !important; }\");\n    }\n    var checkboxBorderColor = theme.getColor(exports.settingsCheckboxBorder);\n    if (checkboxBorderColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-bool .setting-value-checkbox { border-color: \" + checkboxBorderColor + \" !important; }\");\n    }\n    var link = theme.getColor(colorRegistry_1.textLinkForeground);\n    if (link) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a { color: \" + link + \"; }\");\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a > code { color: \" + link + \"; }\");\n        collector.addRule(\".monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a { color: \" + link + \"; }\");\n        collector.addRule(\".monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a > code { color: \" + link + \"; }\");\n    }\n    var activeLink = theme.getColor(colorRegistry_1.textLinkActiveForeground);\n    if (activeLink) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:hover, .settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:active { color: \" + activeLink + \"; }\");\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:hover > code, .settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:active > code { color: \" + activeLink + \"; }\");\n        collector.addRule(\".monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:hover, .monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:active { color: \" + activeLink + \"; }\");\n        collector.addRule(\".monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:hover > code, .monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:active > code { color: \" + activeLink + \"; }\");\n    }\n    var headerForegroundColor = theme.getColor(exports.settingsHeaderForeground);\n    if (headerForegroundColor) {\n        collector.addRule(\".settings-editor > .settings-header > .settings-header-controls .settings-tabs-widget .action-label.checked { color: \" + headerForegroundColor + \"; border-bottom-color: \" + headerForegroundColor + \"; }\");\n    }\n    var foregroundColor = theme.getColor(colorRegistry_1.foreground);\n    if (foregroundColor) {\n        collector.addRule(\".settings-editor > .settings-header > .settings-header-controls .settings-tabs-widget .action-label { color: \" + foregroundColor + \"; }\");\n    }\n    // Exclude control\n    var listHoverBackgroundColor = theme.getColor(colorRegistry_1.listHoverBackground);\n    if (listHoverBackgroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row:hover { background-color: \" + listHoverBackgroundColor + \"; }\");\n    }\n    var listHoverForegroundColor = theme.getColor(colorRegistry_1.listHoverForeground);\n    if (listHoverForegroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row:hover { color: \" + listHoverForegroundColor + \"; }\");\n    }\n    var listSelectBackgroundColor = theme.getColor(colorRegistry_1.listActiveSelectionBackground);\n    if (listSelectBackgroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:focus { background-color: \" + listSelectBackgroundColor + \"; }\");\n    }\n    var listInactiveSelectionBackgroundColor = theme.getColor(colorRegistry_1.listInactiveSelectionBackground);\n    if (listInactiveSelectionBackgroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:not(:focus) { background-color: \" + listInactiveSelectionBackgroundColor + \"; }\");\n    }\n    var listInactiveSelectionForegroundColor = theme.getColor(colorRegistry_1.listInactiveSelectionForeground);\n    if (listInactiveSelectionForegroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:not(:focus) { color: \" + listInactiveSelectionForegroundColor + \"; }\");\n    }\n    var listSelectForegroundColor = theme.getColor(colorRegistry_1.listActiveSelectionForeground);\n    if (listSelectForegroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:focus { color: \" + listSelectForegroundColor + \"; }\");\n    }\n    var codeTextForegroundColor = theme.getColor(colorRegistry_1.textPreformatForeground);\n    if (codeTextForegroundColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item .setting-item-description-markdown code { color: \" + codeTextForegroundColor + \" }\");\n        collector.addRule(\".monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown code { color: \" + codeTextForegroundColor + \" }\");\n    }\n    var modifiedItemIndicatorColor = theme.getColor(exports.modifiedItemIndicator);\n    if (modifiedItemIndicatorColor) {\n        collector.addRule(\".settings-editor > .settings-body > .settings-tree-container .setting-item-contents > .setting-item-modified-indicator { border-color: \" + modifiedItemIndicatorColor + \"; }\");\n    }\n});\nvar ExcludeSettingListModel = /** @class */ (function () {\n    function ExcludeSettingListModel() {\n        this._dataItems = [];\n    }\n    Object.defineProperty(ExcludeSettingListModel.prototype, \"items\", {\n        get: function () {\n            var _this = this;\n            var items = this._dataItems.map(function (item, i) {\n                var editing = item.pattern === _this._editKey;\n                return tslib_1.__assign({}, item, { editing: editing, selected: i === _this._selectedIdx || editing });\n            });\n            if (this._editKey === '') {\n                items.push({\n                    editing: true,\n                    selected: true,\n                    pattern: '',\n                    sibling: ''\n                });\n            }\n            return items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExcludeSettingListModel.prototype.setEditKey = function (key) {\n        this._editKey = key;\n    };\n    ExcludeSettingListModel.prototype.setValue = function (excludeData) {\n        this._dataItems = excludeData;\n    };\n    ExcludeSettingListModel.prototype.select = function (idx) {\n        this._selectedIdx = idx;\n    };\n    ExcludeSettingListModel.prototype.getSelected = function () {\n        return this._selectedIdx;\n    };\n    ExcludeSettingListModel.prototype.selectNext = function () {\n        if (typeof this._selectedIdx === 'number') {\n            this._selectedIdx = Math.min(this._selectedIdx + 1, this._dataItems.length - 1);\n        }\n        else {\n            this._selectedIdx = 0;\n        }\n    };\n    ExcludeSettingListModel.prototype.selectPrevious = function () {\n        if (typeof this._selectedIdx === 'number') {\n            this._selectedIdx = Math.max(this._selectedIdx - 1, 0);\n        }\n        else {\n            this._selectedIdx = 0;\n        }\n    };\n    return ExcludeSettingListModel;\n}());\nexports.ExcludeSettingListModel = ExcludeSettingListModel;\nvar ExcludeSettingWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(ExcludeSettingWidget, _super);\n    function ExcludeSettingWidget(container, themeService, contextViewService) {\n        var _this = _super.call(this) || this;\n        _this.container = container;\n        _this.themeService = themeService;\n        _this.contextViewService = contextViewService;\n        _this.listDisposables = [];\n        _this.model = new ExcludeSettingListModel();\n        _this._onDidChangeExclude = new event_1.Emitter();\n        _this.onDidChangeExclude = _this._onDidChangeExclude.event;\n        _this.listElement = DOM.append(container, $('.setting-exclude-widget'));\n        _this.listElement.setAttribute('tabindex', '0');\n        DOM.append(container, _this.renderAddButton());\n        _this.renderList();\n        _this._register(DOM.addDisposableListener(_this.listElement, DOM.EventType.CLICK, function (e) { return _this.onListClick(e); }));\n        _this._register(DOM.addDisposableListener(_this.listElement, DOM.EventType.DBLCLICK, function (e) { return _this.onListDoubleClick(e); }));\n        _this._register(DOM.addStandardDisposableListener(_this.listElement, 'keydown', function (e) {\n            if (e.keyCode === keyCodes_1.KeyCode.UpArrow) {\n                _this.model.selectPrevious();\n                _this.renderList();\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            else if (e.keyCode === keyCodes_1.KeyCode.DownArrow) {\n                _this.model.selectNext();\n                _this.renderList();\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }));\n        return _this;\n    }\n    Object.defineProperty(ExcludeSettingWidget.prototype, \"domNode\", {\n        get: function () {\n            return this.listElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExcludeSettingWidget.prototype.setValue = function (excludeData) {\n        this.model.setValue(excludeData);\n        this.renderList();\n    };\n    ExcludeSettingWidget.prototype.onListClick = function (e) {\n        var targetIdx = this.getClickedItemIndex(e);\n        if (targetIdx < 0) {\n            return;\n        }\n        if (this.model.getSelected() === targetIdx) {\n            return;\n        }\n        this.model.select(targetIdx);\n        this.renderList();\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    ExcludeSettingWidget.prototype.onListDoubleClick = function (e) {\n        var targetIdx = this.getClickedItemIndex(e);\n        if (targetIdx < 0) {\n            return;\n        }\n        var item = this.model.items[targetIdx];\n        if (item) {\n            this.editSetting(item.pattern);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    ExcludeSettingWidget.prototype.getClickedItemIndex = function (e) {\n        if (!e.target) {\n            return -1;\n        }\n        var actionbar = DOM.findParentWithClass(e.target, 'monaco-action-bar');\n        if (actionbar) {\n            // Don't handle doubleclicks inside the action bar\n            return -1;\n        }\n        var element = DOM.findParentWithClass(e.target, 'setting-exclude-row');\n        if (!element) {\n            return -1;\n        }\n        var targetIdxStr = element.getAttribute('data-index');\n        if (!targetIdxStr) {\n            return -1;\n        }\n        var targetIdx = parseInt(targetIdxStr);\n        return targetIdx;\n    };\n    ExcludeSettingWidget.prototype.renderList = function () {\n        var _this = this;\n        var focused = DOM.isAncestor(document.activeElement, this.listElement);\n        DOM.clearNode(this.listElement);\n        this.listDisposables = lifecycle_1.dispose(this.listDisposables);\n        var newMode = this.model.items.some(function (item) { return !!(item.editing && !item.pattern); });\n        DOM.toggleClass(this.container, 'setting-exclude-new-mode', newMode);\n        this.model.items\n            .map(function (item, i) { return _this.renderItem(item, i, focused); })\n            .forEach(function (itemElement) { return _this.listElement.appendChild(itemElement); });\n        var listHeight = 22 * this.model.items.length;\n        this.listElement.style.height = listHeight + 'px';\n    };\n    ExcludeSettingWidget.prototype.createDeleteAction = function (key) {\n        var _this = this;\n        return {\n            class: 'setting-excludeAction-remove',\n            enabled: true,\n            id: 'workbench.action.removeExcludeItem',\n            tooltip: nls_1.localize('removeExcludeItem', \"Remove Exclude Item\"),\n            run: function () { return _this._onDidChangeExclude.fire({ originalPattern: key, pattern: undefined }); }\n        };\n    };\n    ExcludeSettingWidget.prototype.createEditAction = function (key) {\n        var _this = this;\n        return {\n            class: 'setting-excludeAction-edit',\n            enabled: true,\n            id: 'workbench.action.editExcludeItem',\n            tooltip: nls_1.localize('editExcludeItem', \"Edit Exclude Item\"),\n            run: function () {\n                _this.editSetting(key);\n            }\n        };\n    };\n    ExcludeSettingWidget.prototype.editSetting = function (key) {\n        this.model.setEditKey(key);\n        this.renderList();\n    };\n    ExcludeSettingWidget.prototype.renderItem = function (item, idx, listFocused) {\n        return item.editing ?\n            this.renderEditItem(item) :\n            this.renderDataItem(item, idx, listFocused);\n    };\n    ExcludeSettingWidget.prototype.renderDataItem = function (item, idx, listFocused) {\n        var rowElement = $('.setting-exclude-row');\n        rowElement.setAttribute('data-index', idx + '');\n        rowElement.setAttribute('tabindex', item.selected ? '0' : '-1');\n        DOM.toggleClass(rowElement, 'selected', item.selected);\n        var actionBar = new actionbar_1.ActionBar(rowElement);\n        this.listDisposables.push(actionBar);\n        var patternElement = DOM.append(rowElement, $('.setting-exclude-pattern'));\n        var siblingElement = DOM.append(rowElement, $('.setting-exclude-sibling'));\n        patternElement.textContent = item.pattern;\n        siblingElement.textContent = item.sibling ? ('when: ' + item.sibling) : null;\n        actionBar.push([\n            this.createEditAction(item.pattern),\n            this.createDeleteAction(item.pattern)\n        ], { icon: true, label: false });\n        rowElement.title = item.sibling ?\n            nls_1.localize('excludeSiblingHintLabel', \"Exclude files matching `{0}`, only when a file matching `{1}` is present\", item.pattern, item.sibling) :\n            nls_1.localize('excludePatternHintLabel', \"Exclude files matching `{0}`\", item.pattern);\n        if (item.selected) {\n            if (listFocused) {\n                setTimeout(function () {\n                    rowElement.focus();\n                }, 10);\n            }\n        }\n        return rowElement;\n    };\n    ExcludeSettingWidget.prototype.renderAddButton = function () {\n        var _this = this;\n        var rowElement = $('.setting-exclude-new-row');\n        var startAddButton = this._register(new button_1.Button(rowElement));\n        startAddButton.label = nls_1.localize('addPattern', \"Add Pattern\");\n        startAddButton.element.classList.add('setting-exclude-addButton');\n        this._register(styler_1.attachButtonStyler(startAddButton, this.themeService));\n        this._register(startAddButton.onDidClick(function () {\n            _this.model.setEditKey('');\n            _this.renderList();\n        }));\n        return rowElement;\n    };\n    ExcludeSettingWidget.prototype.renderEditItem = function (item) {\n        var _this = this;\n        var rowElement = $('.setting-exclude-edit-row');\n        var onSubmit = function (edited) {\n            _this.model.setEditKey(null);\n            var pattern = patternInput.value.trim();\n            if (edited && pattern) {\n                _this._onDidChangeExclude.fire({\n                    originalPattern: item.pattern,\n                    pattern: pattern,\n                    sibling: siblingInput && siblingInput.value.trim()\n                });\n            }\n            _this.renderList();\n        };\n        var onKeydown = function (e) {\n            if (e.equals(keyCodes_1.KeyCode.Enter)) {\n                onSubmit(true);\n            }\n            else if (e.equals(keyCodes_1.KeyCode.Escape)) {\n                onSubmit(false);\n                e.preventDefault();\n            }\n        };\n        var patternInput = new inputBox_1.InputBox(rowElement, this.contextViewService, {\n            placeholder: nls_1.localize('excludePatternInputPlaceholder', \"Exclude Pattern...\")\n        });\n        patternInput.element.classList.add('setting-exclude-patternInput');\n        this.listDisposables.push(styler_1.attachInputBoxStyler(patternInput, this.themeService, {\n            inputBackground: exports.settingsTextInputBackground,\n            inputForeground: exports.settingsTextInputForeground,\n            inputBorder: exports.settingsTextInputBorder\n        }));\n        this.listDisposables.push(patternInput);\n        patternInput.value = item.pattern;\n        this.listDisposables.push(DOM.addStandardDisposableListener(patternInput.inputElement, DOM.EventType.KEY_DOWN, onKeydown));\n        var siblingInput;\n        if (item.sibling) {\n            siblingInput = new inputBox_1.InputBox(rowElement, this.contextViewService, {\n                placeholder: nls_1.localize('excludeSiblingInputPlaceholder', \"When Pattern Is Present...\")\n            });\n            siblingInput.element.classList.add('setting-exclude-siblingInput');\n            this.listDisposables.push(siblingInput);\n            this.listDisposables.push(styler_1.attachInputBoxStyler(siblingInput, this.themeService, {\n                inputBackground: exports.settingsTextInputBackground,\n                inputForeground: exports.settingsTextInputForeground,\n                inputBorder: exports.settingsTextInputBorder\n            }));\n            siblingInput.value = item.sibling;\n            this.listDisposables.push(DOM.addStandardDisposableListener(siblingInput.inputElement, DOM.EventType.KEY_DOWN, onKeydown));\n        }\n        var okButton = this._register(new button_1.Button(rowElement));\n        okButton.label = nls_1.localize('okButton', \"OK\");\n        okButton.element.classList.add('setting-exclude-okButton');\n        this.listDisposables.push(styler_1.attachButtonStyler(okButton, this.themeService));\n        this.listDisposables.push(okButton.onDidClick(function () { return onSubmit(true); }));\n        var cancelButton = this._register(new button_1.Button(rowElement));\n        cancelButton.label = nls_1.localize('cancelButton', \"Cancel\");\n        cancelButton.element.classList.add('setting-exclude-cancelButton');\n        this.listDisposables.push(styler_1.attachButtonStyler(cancelButton, this.themeService));\n        this.listDisposables.push(cancelButton.onDidClick(function () { return onSubmit(false); }));\n        this.listDisposables.push(async_1.disposableTimeout(function () {\n            patternInput.focus();\n            patternInput.select();\n        }));\n        return rowElement;\n    };\n    ExcludeSettingWidget.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.listDisposables = lifecycle_1.dispose(this.listDisposables);\n    };\n    ExcludeSettingWidget = tslib_1.__decorate([\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, contextView_1.IContextViewService)\n    ], ExcludeSettingWidget);\n    return ExcludeSettingWidget;\n}(lifecycle_1.Disposable));\nexports.ExcludeSettingWidget = ExcludeSettingWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/settingsWidgets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IAction } from 'vs/base/common/actions';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./media/settingsWidgets';\nimport { localize } from 'vs/nls';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { foreground, inputBackground, inputBorder, inputForeground, listActiveSelectionBackground, listActiveSelectionForeground, listHoverBackground, listHoverForeground, listInactiveSelectionBackground, listInactiveSelectionForeground, registerColor, selectBackground, selectBorder, selectForeground, textLinkForeground, textPreformatForeground, editorWidgetBorder, textLinkActiveForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { attachButtonStyler, attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { ICssStyleCollector, ITheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { disposableTimeout } from 'vs/base/common/async';\n\nconst $ = DOM.$;\nexport const settingsHeaderForeground = registerColor('settings.headerForeground', { light: '#444444', dark: '#e7e7e7', hc: '#ffffff' }, localize('headerForeground', \"(For settings editor preview) The foreground color for a section header or active title.\"));\nexport const modifiedItemIndicator = registerColor('settings.modifiedItemIndicator', {\n\tlight: new Color(new RGBA(102, 175, 224)),\n\tdark: new Color(new RGBA(12, 125, 157)),\n\thc: new Color(new RGBA(0, 73, 122))\n}, localize('modifiedItemForeground', \"(For settings editor preview) The color of the modified setting indicator.\"));\n\n// Enum control colors\nexport const settingsSelectBackground = registerColor('settings.dropdownBackground', { dark: selectBackground, light: selectBackground, hc: selectBackground }, localize('settingsDropdownBackground', \"(For settings editor preview) Settings editor dropdown background.\"));\nexport const settingsSelectForeground = registerColor('settings.dropdownForeground', { dark: selectForeground, light: selectForeground, hc: selectForeground }, localize('settingsDropdownForeground', \"(For settings editor preview) Settings editor dropdown foreground.\"));\nexport const settingsSelectBorder = registerColor('settings.dropdownBorder', { dark: selectBorder, light: selectBorder, hc: selectBorder }, localize('settingsDropdownBorder', \"(For settings editor preview) Settings editor dropdown border.\"));\nexport const settingsSelectListBorder = registerColor('settings.dropdownListBorder', { dark: editorWidgetBorder, light: editorWidgetBorder, hc: editorWidgetBorder }, localize('settingsDropdownListBorder', \"(For settings editor preview) Settings editor dropdown list border. This surrounds the options and separates the options from the description.\"));\n\n// Bool control colors\nexport const settingsCheckboxBackground = registerColor('settings.checkboxBackground', { dark: selectBackground, light: selectBackground, hc: selectBackground }, localize('settingsCheckboxBackground', \"(For settings editor preview) Settings editor checkbox background.\"));\nexport const settingsCheckboxForeground = registerColor('settings.checkboxForeground', { dark: selectForeground, light: selectForeground, hc: selectForeground }, localize('settingsCheckboxForeground', \"(For settings editor preview) Settings editor checkbox foreground.\"));\nexport const settingsCheckboxBorder = registerColor('settings.checkboxBorder', { dark: selectBorder, light: selectBorder, hc: selectBorder }, localize('settingsCheckboxBorder', \"(For settings editor preview) Settings editor checkbox border.\"));\n\n// Text control colors\nexport const settingsTextInputBackground = registerColor('settings.textInputBackground', { dark: inputBackground, light: inputBackground, hc: inputBackground }, localize('textInputBoxBackground', \"(For settings editor preview) Settings editor text input box background.\"));\nexport const settingsTextInputForeground = registerColor('settings.textInputForeground', { dark: inputForeground, light: inputForeground, hc: inputForeground }, localize('textInputBoxForeground', \"(For settings editor preview) Settings editor text input box foreground.\"));\nexport const settingsTextInputBorder = registerColor('settings.textInputBorder', { dark: inputBorder, light: inputBorder, hc: inputBorder }, localize('textInputBoxBorder', \"(For settings editor preview) Settings editor text input box border.\"));\n\n// Number control colors\nexport const settingsNumberInputBackground = registerColor('settings.numberInputBackground', { dark: inputBackground, light: inputBackground, hc: inputBackground }, localize('numberInputBoxBackground', \"(For settings editor preview) Settings editor number input box background.\"));\nexport const settingsNumberInputForeground = registerColor('settings.numberInputForeground', { dark: inputForeground, light: inputForeground, hc: inputForeground }, localize('numberInputBoxForeground', \"(For settings editor preview) Settings editor number input box foreground.\"));\nexport const settingsNumberInputBorder = registerColor('settings.numberInputBorder', { dark: inputBorder, light: inputBorder, hc: inputBorder }, localize('numberInputBoxBorder', \"(For settings editor preview) Settings editor number input box border.\"));\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst checkboxBackgroundColor = theme.getColor(settingsCheckboxBackground);\n\tif (checkboxBackgroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-bool .setting-value-checkbox { background-color: ${checkboxBackgroundColor} !important; }`);\n\t}\n\n\tconst checkboxBorderColor = theme.getColor(settingsCheckboxBorder);\n\tif (checkboxBorderColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-bool .setting-value-checkbox { border-color: ${checkboxBorderColor} !important; }`);\n\t}\n\n\tconst link = theme.getColor(textLinkForeground);\n\tif (link) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a { color: ${link}; }`);\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a > code { color: ${link}; }`);\n\t\tcollector.addRule(`.monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a { color: ${link}; }`);\n\t\tcollector.addRule(`.monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a > code { color: ${link}; }`);\n\t}\n\n\tconst activeLink = theme.getColor(textLinkActiveForeground);\n\tif (activeLink) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:hover, .settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:active { color: ${activeLink}; }`);\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:hover > code, .settings-editor > .settings-body > .settings-tree-container .setting-item-contents .setting-item-description-markdown a:active > code { color: ${activeLink}; }`);\n\t\tcollector.addRule(`.monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:hover, .monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:active { color: ${activeLink}; }`);\n\t\tcollector.addRule(`.monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:hover > code, .monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown a:active > code { color: ${activeLink}; }`);\n\t}\n\n\tconst headerForegroundColor = theme.getColor(settingsHeaderForeground);\n\tif (headerForegroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-header > .settings-header-controls .settings-tabs-widget .action-label.checked { color: ${headerForegroundColor}; border-bottom-color: ${headerForegroundColor}; }`);\n\t}\n\n\tconst foregroundColor = theme.getColor(foreground);\n\tif (foregroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-header > .settings-header-controls .settings-tabs-widget .action-label { color: ${foregroundColor}; }`);\n\t}\n\n\t// Exclude control\n\tconst listHoverBackgroundColor = theme.getColor(listHoverBackground);\n\tif (listHoverBackgroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row:hover { background-color: ${listHoverBackgroundColor}; }`);\n\t}\n\n\tconst listHoverForegroundColor = theme.getColor(listHoverForeground);\n\tif (listHoverForegroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row:hover { color: ${listHoverForegroundColor}; }`);\n\t}\n\n\tconst listSelectBackgroundColor = theme.getColor(listActiveSelectionBackground);\n\tif (listSelectBackgroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:focus { background-color: ${listSelectBackgroundColor}; }`);\n\t}\n\n\tconst listInactiveSelectionBackgroundColor = theme.getColor(listInactiveSelectionBackground);\n\tif (listInactiveSelectionBackgroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:not(:focus) { background-color: ${listInactiveSelectionBackgroundColor}; }`);\n\t}\n\n\tconst listInactiveSelectionForegroundColor = theme.getColor(listInactiveSelectionForeground);\n\tif (listInactiveSelectionForegroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:not(:focus) { color: ${listInactiveSelectionForegroundColor}; }`);\n\t}\n\n\tconst listSelectForegroundColor = theme.getColor(listActiveSelectionForeground);\n\tif (listSelectForegroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item.setting-item-exclude .setting-exclude-row.selected:focus { color: ${listSelectForegroundColor}; }`);\n\t}\n\n\tconst codeTextForegroundColor = theme.getColor(textPreformatForeground);\n\tif (codeTextForegroundColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item .setting-item-description-markdown code { color: ${codeTextForegroundColor} }`);\n\t\tcollector.addRule(`.monaco-select-box-dropdown-container > .select-box-details-pane > .select-box-description-markdown code { color: ${codeTextForegroundColor} }`);\n\n\t}\n\n\tconst modifiedItemIndicatorColor = theme.getColor(modifiedItemIndicator);\n\tif (modifiedItemIndicatorColor) {\n\t\tcollector.addRule(`.settings-editor > .settings-body > .settings-tree-container .setting-item-contents > .setting-item-modified-indicator { border-color: ${modifiedItemIndicatorColor}; }`);\n\t}\n});\n\nexport class ExcludeSettingListModel {\n\tprivate _dataItems: IExcludeDataItem[] = [];\n\tprivate _editKey: string | null;\n\tprivate _selectedIdx: number | null;\n\n\tget items(): IExcludeViewItem[] {\n\t\tconst items = this._dataItems.map((item, i) => {\n\t\t\tconst editing = item.pattern === this._editKey;\n\t\t\treturn <IExcludeViewItem>{\n\t\t\t\t...item,\n\t\t\t\tediting,\n\t\t\t\tselected: i === this._selectedIdx || editing\n\t\t\t};\n\t\t});\n\n\t\tif (this._editKey === '') {\n\t\t\titems.push({\n\t\t\t\tediting: true,\n\t\t\t\tselected: true,\n\t\t\t\tpattern: '',\n\t\t\t\tsibling: ''\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tsetEditKey(key: string | null): void {\n\t\tthis._editKey = key;\n\t}\n\n\tsetValue(excludeData: IExcludeDataItem[]): void {\n\t\tthis._dataItems = excludeData;\n\t}\n\n\tselect(idx: number): void {\n\t\tthis._selectedIdx = idx;\n\t}\n\n\tgetSelected(): number | null {\n\t\treturn this._selectedIdx;\n\t}\n\n\tselectNext(): void {\n\t\tif (typeof this._selectedIdx === 'number') {\n\t\t\tthis._selectedIdx = Math.min(this._selectedIdx + 1, this._dataItems.length - 1);\n\t\t} else {\n\t\t\tthis._selectedIdx = 0;\n\t\t}\n\t}\n\n\tselectPrevious(): void {\n\t\tif (typeof this._selectedIdx === 'number') {\n\t\t\tthis._selectedIdx = Math.max(this._selectedIdx - 1, 0);\n\t\t} else {\n\t\t\tthis._selectedIdx = 0;\n\t\t}\n\t}\n}\n\nexport interface IExcludeChangeEvent {\n\toriginalPattern: string;\n\tpattern?: string;\n\tsibling?: string;\n}\n\nexport class ExcludeSettingWidget extends Disposable {\n\tprivate listElement: HTMLElement;\n\tprivate listDisposables: IDisposable[] = [];\n\n\tprivate model = new ExcludeSettingListModel();\n\n\tprivate readonly _onDidChangeExclude = new Emitter<IExcludeChangeEvent>();\n\treadonly onDidChangeExclude: Event<IExcludeChangeEvent> = this._onDidChangeExclude.event;\n\n\tget domNode(): HTMLElement {\n\t\treturn this.listElement;\n\t}\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService\n\t) {\n\t\tsuper();\n\n\t\tthis.listElement = DOM.append(container, $('.setting-exclude-widget'));\n\t\tthis.listElement.setAttribute('tabindex', '0');\n\t\tDOM.append(container, this.renderAddButton());\n\t\tthis.renderList();\n\n\t\tthis._register(DOM.addDisposableListener(this.listElement, DOM.EventType.CLICK, e => this.onListClick(e)));\n\t\tthis._register(DOM.addDisposableListener(this.listElement, DOM.EventType.DBLCLICK, e => this.onListDoubleClick(e)));\n\n\t\tthis._register(DOM.addStandardDisposableListener(this.listElement, 'keydown', (e: KeyboardEvent) => {\n\t\t\tif (e.keyCode === KeyCode.UpArrow) {\n\t\t\t\tthis.model.selectPrevious();\n\t\t\t\tthis.renderList();\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t} else if (e.keyCode === KeyCode.DownArrow) {\n\t\t\t\tthis.model.selectNext();\n\t\t\t\tthis.renderList();\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetValue(excludeData: IExcludeDataItem[]): void {\n\t\tthis.model.setValue(excludeData);\n\t\tthis.renderList();\n\t}\n\n\tprivate onListClick(e: MouseEvent): void {\n\t\tconst targetIdx = this.getClickedItemIndex(e);\n\t\tif (targetIdx < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.model.getSelected() === targetIdx) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.model.select(targetIdx);\n\t\tthis.renderList();\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t}\n\n\tprivate onListDoubleClick(e: MouseEvent): void {\n\t\tconst targetIdx = this.getClickedItemIndex(e);\n\t\tif (targetIdx < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.model.items[targetIdx];\n\t\tif (item) {\n\t\t\tthis.editSetting(item.pattern);\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\t}\n\n\tprivate getClickedItemIndex(e: MouseEvent): number {\n\t\tif (!e.target) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst actionbar = DOM.findParentWithClass(<any>e.target, 'monaco-action-bar');\n\t\tif (actionbar) {\n\t\t\t// Don't handle doubleclicks inside the action bar\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst element = DOM.findParentWithClass((<any>e.target), 'setting-exclude-row');\n\t\tif (!element) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst targetIdxStr = element.getAttribute('data-index');\n\t\tif (!targetIdxStr) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst targetIdx = parseInt(targetIdxStr);\n\t\treturn targetIdx;\n\t}\n\n\tprivate renderList(): void {\n\t\tconst focused = DOM.isAncestor(document.activeElement, this.listElement);\n\n\t\tDOM.clearNode(this.listElement);\n\t\tthis.listDisposables = dispose(this.listDisposables);\n\n\t\tconst newMode = this.model.items.some(item => !!(item.editing && !item.pattern));\n\t\tDOM.toggleClass(this.container, 'setting-exclude-new-mode', newMode);\n\n\t\tthis.model.items\n\t\t\t.map((item, i) => this.renderItem(item, i, focused))\n\t\t\t.forEach(itemElement => this.listElement.appendChild(itemElement));\n\n\t\tconst listHeight = 22 * this.model.items.length;\n\t\tthis.listElement.style.height = listHeight + 'px';\n\t}\n\n\tprivate createDeleteAction(key: string): IAction {\n\t\treturn <IAction>{\n\t\t\tclass: 'setting-excludeAction-remove',\n\t\t\tenabled: true,\n\t\t\tid: 'workbench.action.removeExcludeItem',\n\t\t\ttooltip: localize('removeExcludeItem', \"Remove Exclude Item\"),\n\t\t\trun: () => this._onDidChangeExclude.fire({ originalPattern: key, pattern: undefined })\n\t\t};\n\t}\n\n\tprivate createEditAction(key: string): IAction {\n\t\treturn <IAction>{\n\t\t\tclass: 'setting-excludeAction-edit',\n\t\t\tenabled: true,\n\t\t\tid: 'workbench.action.editExcludeItem',\n\t\t\ttooltip: localize('editExcludeItem', \"Edit Exclude Item\"),\n\t\t\trun: () => {\n\t\t\t\tthis.editSetting(key);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate editSetting(key: string): void {\n\t\tthis.model.setEditKey(key);\n\t\tthis.renderList();\n\t}\n\n\tprivate renderItem(item: IExcludeViewItem, idx: number, listFocused: boolean): HTMLElement {\n\t\treturn item.editing ?\n\t\t\tthis.renderEditItem(item) :\n\t\t\tthis.renderDataItem(item, idx, listFocused);\n\t}\n\n\tprivate renderDataItem(item: IExcludeViewItem, idx: number, listFocused: boolean): HTMLElement {\n\t\tconst rowElement = $('.setting-exclude-row');\n\t\trowElement.setAttribute('data-index', idx + '');\n\t\trowElement.setAttribute('tabindex', item.selected ? '0' : '-1');\n\t\tDOM.toggleClass(rowElement, 'selected', item.selected);\n\n\t\tconst actionBar = new ActionBar(rowElement);\n\t\tthis.listDisposables.push(actionBar);\n\n\t\tconst patternElement = DOM.append(rowElement, $('.setting-exclude-pattern'));\n\t\tconst siblingElement = DOM.append(rowElement, $('.setting-exclude-sibling'));\n\t\tpatternElement.textContent = item.pattern;\n\t\tsiblingElement.textContent = item.sibling ? ('when: ' + item.sibling) : null;\n\n\t\tactionBar.push([\n\t\t\tthis.createEditAction(item.pattern),\n\t\t\tthis.createDeleteAction(item.pattern)\n\t\t], { icon: true, label: false });\n\n\t\trowElement.title = item.sibling ?\n\t\t\tlocalize('excludeSiblingHintLabel', \"Exclude files matching `{0}`, only when a file matching `{1}` is present\", item.pattern, item.sibling) :\n\t\t\tlocalize('excludePatternHintLabel', \"Exclude files matching `{0}`\", item.pattern);\n\n\t\tif (item.selected) {\n\t\t\tif (listFocused) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\trowElement.focus();\n\t\t\t\t}, 10);\n\t\t\t}\n\t\t}\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderAddButton(): HTMLElement {\n\t\tconst rowElement = $('.setting-exclude-new-row');\n\n\t\tconst startAddButton = this._register(new Button(rowElement));\n\t\tstartAddButton.label = localize('addPattern', \"Add Pattern\");\n\t\tstartAddButton.element.classList.add('setting-exclude-addButton');\n\t\tthis._register(attachButtonStyler(startAddButton, this.themeService));\n\n\t\tthis._register(startAddButton.onDidClick(() => {\n\t\t\tthis.model.setEditKey('');\n\t\t\tthis.renderList();\n\t\t}));\n\n\t\treturn rowElement;\n\t}\n\n\tprivate renderEditItem(item: IExcludeViewItem): HTMLElement {\n\t\tconst rowElement = $('.setting-exclude-edit-row');\n\n\t\tconst onSubmit = (edited: boolean) => {\n\t\t\tthis.model.setEditKey(null);\n\t\t\tconst pattern = patternInput.value.trim();\n\t\t\tif (edited && pattern) {\n\t\t\t\tthis._onDidChangeExclude.fire({\n\t\t\t\t\toriginalPattern: item.pattern,\n\t\t\t\t\tpattern,\n\t\t\t\t\tsibling: siblingInput && siblingInput.value.trim()\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.renderList();\n\t\t};\n\n\t\tconst onKeydown = (e: StandardKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Enter)) {\n\t\t\t\tonSubmit(true);\n\t\t\t} else if (e.equals(KeyCode.Escape)) {\n\t\t\t\tonSubmit(false);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\n\t\tconst patternInput = new InputBox(rowElement, this.contextViewService, {\n\t\t\tplaceholder: localize('excludePatternInputPlaceholder', \"Exclude Pattern...\")\n\t\t});\n\t\tpatternInput.element.classList.add('setting-exclude-patternInput');\n\t\tthis.listDisposables.push(attachInputBoxStyler(patternInput, this.themeService, {\n\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\tinputBorder: settingsTextInputBorder\n\t\t}));\n\t\tthis.listDisposables.push(patternInput);\n\t\tpatternInput.value = item.pattern;\n\t\tthis.listDisposables.push(DOM.addStandardDisposableListener(patternInput.inputElement, DOM.EventType.KEY_DOWN, onKeydown));\n\n\t\tlet siblingInput: InputBox;\n\t\tif (item.sibling) {\n\t\t\tsiblingInput = new InputBox(rowElement, this.contextViewService, {\n\t\t\t\tplaceholder: localize('excludeSiblingInputPlaceholder', \"When Pattern Is Present...\")\n\t\t\t});\n\t\t\tsiblingInput.element.classList.add('setting-exclude-siblingInput');\n\t\t\tthis.listDisposables.push(siblingInput);\n\t\t\tthis.listDisposables.push(attachInputBoxStyler(siblingInput, this.themeService, {\n\t\t\t\tinputBackground: settingsTextInputBackground,\n\t\t\t\tinputForeground: settingsTextInputForeground,\n\t\t\t\tinputBorder: settingsTextInputBorder\n\t\t\t}));\n\t\t\tsiblingInput.value = item.sibling;\n\t\t\tthis.listDisposables.push(DOM.addStandardDisposableListener(siblingInput.inputElement, DOM.EventType.KEY_DOWN, onKeydown));\n\t\t}\n\n\t\tconst okButton = this._register(new Button(rowElement));\n\t\tokButton.label = localize('okButton', \"OK\");\n\t\tokButton.element.classList.add('setting-exclude-okButton');\n\t\tthis.listDisposables.push(attachButtonStyler(okButton, this.themeService));\n\t\tthis.listDisposables.push(okButton.onDidClick(() => onSubmit(true)));\n\n\t\tconst cancelButton = this._register(new Button(rowElement));\n\t\tcancelButton.label = localize('cancelButton', \"Cancel\");\n\t\tcancelButton.element.classList.add('setting-exclude-cancelButton');\n\t\tthis.listDisposables.push(attachButtonStyler(cancelButton, this.themeService));\n\t\tthis.listDisposables.push(cancelButton.onDidClick(() => onSubmit(false)));\n\n\t\tthis.listDisposables.push(\n\t\t\tdisposableTimeout(() => {\n\t\t\t\tpatternInput.focus();\n\t\t\t\tpatternInput.select();\n\t\t\t}));\n\n\t\treturn rowElement;\n\t}\n\n\tdispose() {\n\t\tsuper.dispose();\n\t\tthis.listDisposables = dispose(this.listDisposables);\n\t}\n}\n\nexport interface IExcludeDataItem {\n\tpattern: string;\n\tsibling?: string;\n}\n\ninterface IExcludeViewItem extends IExcludeDataItem {\n\tediting?: boolean;\n\tselected?: boolean;\n}\n"]}]}