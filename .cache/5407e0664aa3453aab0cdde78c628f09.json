{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/searchHistoryService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/searchHistoryService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/common/event\", \"vs/platform/storage/common/storage\", \"vs/base/common/types\", \"vs/platform/instantiation/common/instantiation\"], function (require, exports, event_1, storage_1, types_1, instantiation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.ISearchHistoryService = instantiation_1.createDecorator('searchHistoryService');\n    let SearchHistoryService = class SearchHistoryService {\n        constructor(storageService) {\n            this.storageService = storageService;\n            this._onDidClearHistory = new event_1.Emitter();\n            this.onDidClearHistory = this._onDidClearHistory.event;\n        }\n        clearHistory() {\n            this.storageService.remove(SearchHistoryService.SEARCH_HISTORY_KEY, storage_1.StorageScope.WORKSPACE);\n            this._onDidClearHistory.fire();\n        }\n        load() {\n            let result;\n            const raw = this.storageService.get(SearchHistoryService.SEARCH_HISTORY_KEY, storage_1.StorageScope.WORKSPACE);\n            if (raw) {\n                try {\n                    result = JSON.parse(raw);\n                }\n                catch (e) {\n                    // Invalid data\n                }\n            }\n            return result || {};\n        }\n        save(history) {\n            if (types_1.isEmptyObject(history)) {\n                this.storageService.remove(SearchHistoryService.SEARCH_HISTORY_KEY, storage_1.StorageScope.WORKSPACE);\n            }\n            else {\n                this.storageService.store(SearchHistoryService.SEARCH_HISTORY_KEY, JSON.stringify(history), storage_1.StorageScope.WORKSPACE);\n            }\n        }\n    };\n    SearchHistoryService.SEARCH_HISTORY_KEY = 'workbench.search.history';\n    SearchHistoryService = __decorate([\n        __param(0, storage_1.IStorageService)\n    ], SearchHistoryService);\n    exports.SearchHistoryService = SearchHistoryService;\n});\n",null]}