{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostLanguages.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostLanguages.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"../common/extHost.protocol\"], function (require, exports, extHost_protocol_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ExtHostLanguages {\n        constructor(mainContext, documents) {\n            this._proxy = mainContext.getProxy(extHost_protocol_1.MainContext.MainThreadLanguages);\n            this._documents = documents;\n        }\n        getLanguages() {\n            return this._proxy.$getLanguages();\n        }\n        changeLanguage(uri, languageId) {\n            return this._proxy.$changeLanguage(uri, languageId).then(() => {\n                const data = this._documents.getDocumentData(uri);\n                return data ? data.document : undefined;\n            });\n        }\n    }\n    exports.ExtHostLanguages = ExtHostLanguages;\n});\n",null]}