{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsTreeViewer.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsTreeViewer.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar nls = require(\"vs/nls\");\nvar htmlContentRenderer_1 = require(\"vs/base/browser/htmlContentRenderer\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar commentModel_1 = require(\"vs/workbench/contrib/comments/common/commentModel\");\nvar CommentsDataSource = /** @class */ (function () {\n    function CommentsDataSource() {\n    }\n    CommentsDataSource.prototype.getId = function (tree, element) {\n        if (element instanceof commentModel_1.CommentsModel) {\n            return 'root';\n        }\n        if (element instanceof commentModel_1.ResourceWithCommentThreads) {\n            return element.id;\n        }\n        if (element instanceof commentModel_1.CommentNode) {\n            return element.resource.toString() + \"-\" + element.comment.commentId;\n        }\n        return '';\n    };\n    CommentsDataSource.prototype.hasChildren = function (tree, element) {\n        return element instanceof commentModel_1.CommentsModel || element instanceof commentModel_1.ResourceWithCommentThreads || (element instanceof commentModel_1.CommentNode && !!element.replies.length);\n    };\n    CommentsDataSource.prototype.getChildren = function (tree, element) {\n        if (element instanceof commentModel_1.CommentsModel) {\n            return Promise.resolve(element.resourceCommentThreads);\n        }\n        if (element instanceof commentModel_1.ResourceWithCommentThreads) {\n            return Promise.resolve(element.commentThreads);\n        }\n        if (element instanceof commentModel_1.CommentNode) {\n            return Promise.resolve(element.replies);\n        }\n        return Promise.resolve([]);\n    };\n    CommentsDataSource.prototype.getParent = function (tree, element) {\n        return Promise.resolve(undefined);\n    };\n    CommentsDataSource.prototype.shouldAutoexpand = function (tree, element) {\n        return true;\n    };\n    return CommentsDataSource;\n}());\nexports.CommentsDataSource = CommentsDataSource;\nvar CommentsModelRenderer = /** @class */ (function () {\n    function CommentsModelRenderer(labels, openerService) {\n        this.labels = labels;\n        this.openerService = openerService;\n    }\n    CommentsModelRenderer.prototype.getHeight = function (tree, element) {\n        return 22;\n    };\n    CommentsModelRenderer.prototype.getTemplateId = function (tree, element) {\n        if (element instanceof commentModel_1.ResourceWithCommentThreads) {\n            return CommentsModelRenderer.RESOURCE_ID;\n        }\n        if (element instanceof commentModel_1.CommentNode) {\n            return CommentsModelRenderer.COMMENT_ID;\n        }\n        return '';\n    };\n    CommentsModelRenderer.prototype.renderTemplate = function (ITree, templateId, container) {\n        switch (templateId) {\n            case CommentsModelRenderer.RESOURCE_ID:\n                return this.renderResourceTemplate(container);\n            case CommentsModelRenderer.COMMENT_ID:\n                return this.renderCommentTemplate(container);\n        }\n    };\n    CommentsModelRenderer.prototype.disposeTemplate = function (tree, templateId, templateData) {\n        switch (templateId) {\n            case CommentsModelRenderer.RESOURCE_ID:\n                templateData.resourceLabel.dispose();\n                break;\n            case CommentsModelRenderer.COMMENT_ID:\n                templateData.disposables.forEach(function (disposeable) { return disposeable.dispose(); });\n                break;\n        }\n    };\n    CommentsModelRenderer.prototype.renderElement = function (tree, element, templateId, templateData) {\n        switch (templateId) {\n            case CommentsModelRenderer.RESOURCE_ID:\n                return this.renderResourceElement(tree, element, templateData);\n            case CommentsModelRenderer.COMMENT_ID:\n                return this.renderCommentElement(tree, element, templateData);\n        }\n    };\n    CommentsModelRenderer.prototype.renderResourceTemplate = function (container) {\n        var data = Object.create(null);\n        var labelContainer = dom.append(container, dom.$('.resource-container'));\n        data.resourceLabel = this.labels.create(labelContainer);\n        return data;\n    };\n    CommentsModelRenderer.prototype.renderCommentTemplate = function (container) {\n        var data = Object.create(null);\n        var labelContainer = dom.append(container, dom.$('.comment-container'));\n        data.userName = dom.append(labelContainer, dom.$('.user'));\n        data.commentText = dom.append(labelContainer, dom.$('.text'));\n        data.disposables = [];\n        return data;\n    };\n    CommentsModelRenderer.prototype.renderResourceElement = function (tree, element, templateData) {\n        templateData.resourceLabel.setFile(element.resource);\n    };\n    CommentsModelRenderer.prototype.renderCommentElement = function (tree, element, templateData) {\n        var _this = this;\n        templateData.userName.textContent = element.comment.userName;\n        templateData.commentText.innerHTML = '';\n        var renderedComment = htmlContentRenderer_1.renderMarkdown(element.comment.body, {\n            inline: true,\n            actionHandler: {\n                callback: function (content) {\n                    try {\n                        var uri = uri_1.URI.parse(content);\n                        _this.openerService.open(uri).catch(errors_1.onUnexpectedError);\n                    }\n                    catch (err) {\n                        // ignore\n                    }\n                },\n                disposeables: templateData.disposables\n            }\n        });\n        var images = renderedComment.getElementsByTagName('img');\n        for (var i = 0; i < images.length; i++) {\n            var image = images[i];\n            var textDescription = dom.$('');\n            textDescription.textContent = image.alt ? nls.localize('imageWithLabel', \"Image: {0}\", image.alt) : nls.localize('image', \"Image\");\n            image.parentNode.replaceChild(textDescription, image);\n        }\n        templateData.commentText.appendChild(renderedComment);\n    };\n    CommentsModelRenderer.RESOURCE_ID = 'resource-with-comments';\n    CommentsModelRenderer.COMMENT_ID = 'comment-node';\n    CommentsModelRenderer = tslib_1.__decorate([\n        tslib_1.__param(1, opener_1.IOpenerService)\n    ], CommentsModelRenderer);\n    return CommentsModelRenderer;\n}());\nexports.CommentsModelRenderer = CommentsModelRenderer;\nvar CommentsDataFilter = /** @class */ (function () {\n    function CommentsDataFilter() {\n    }\n    CommentsDataFilter.prototype.isVisible = function (tree, element) {\n        if (element instanceof commentModel_1.CommentsModel) {\n            return element.resourceCommentThreads.length > 0;\n        }\n        if (element instanceof commentModel_1.ResourceWithCommentThreads) {\n            return element.commentThreads.length > 0;\n        }\n        return true;\n    };\n    return CommentsDataFilter;\n}());\nexports.CommentsDataFilter = CommentsDataFilter;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsTreeViewer.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsTreeViewer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport * as nls from 'vs/nls';\nimport { renderMarkdown } from 'vs/base/browser/htmlContentRenderer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IDataSource, IFilter, IRenderer as ITreeRenderer, ITree } from 'vs/base/parts/tree/browser/tree';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IResourceLabel, ResourceLabels } from 'vs/workbench/browser/labels';\nimport { CommentNode, CommentsModel, ResourceWithCommentThreads } from 'vs/workbench/contrib/comments/common/commentModel';\n\nexport class CommentsDataSource implements IDataSource {\n\tpublic getId(tree: ITree, element: any): string {\n\t\tif (element instanceof CommentsModel) {\n\t\t\treturn 'root';\n\t\t}\n\t\tif (element instanceof ResourceWithCommentThreads) {\n\t\t\treturn element.id;\n\t\t}\n\t\tif (element instanceof CommentNode) {\n\t\t\treturn `${element.resource.toString()}-${element.comment.commentId}`;\n\t\t}\n\t\treturn '';\n\t}\n\n\tpublic hasChildren(tree: ITree, element: any): boolean {\n\t\treturn element instanceof CommentsModel || element instanceof ResourceWithCommentThreads || (element instanceof CommentNode && !!element.replies.length);\n\t}\n\n\tpublic getChildren(tree: ITree, element: any): Promise<ResourceWithCommentThreads[] | CommentNode[]> {\n\t\tif (element instanceof CommentsModel) {\n\t\t\treturn Promise.resolve(element.resourceCommentThreads);\n\t\t}\n\t\tif (element instanceof ResourceWithCommentThreads) {\n\t\t\treturn Promise.resolve(element.commentThreads);\n\t\t}\n\t\tif (element instanceof CommentNode) {\n\t\t\treturn Promise.resolve(element.replies);\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tpublic getParent(tree: ITree, element: any): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic shouldAutoexpand(tree: ITree, element: any): boolean {\n\t\treturn true;\n\t}\n}\n\ninterface IResourceTemplateData {\n\tresourceLabel: IResourceLabel;\n}\n\ninterface ICommentThreadTemplateData {\n\ticon: HTMLImageElement;\n\tuserName: HTMLSpanElement;\n\tcommentText: HTMLElement;\n\tdisposables: Disposable[];\n}\n\nexport class CommentsModelRenderer implements ITreeRenderer {\n\tprivate static RESOURCE_ID = 'resource-with-comments';\n\tprivate static COMMENT_ID = 'comment-node';\n\n\tconstructor(\n\t\tprivate labels: ResourceLabels,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t}\n\n\tpublic getHeight(tree: ITree, element: any): number {\n\t\treturn 22;\n\t}\n\n\tpublic getTemplateId(tree: ITree, element: any): string {\n\t\tif (element instanceof ResourceWithCommentThreads) {\n\t\t\treturn CommentsModelRenderer.RESOURCE_ID;\n\t\t}\n\t\tif (element instanceof CommentNode) {\n\t\t\treturn CommentsModelRenderer.COMMENT_ID;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tpublic renderTemplate(ITree: ITree, templateId: string, container: HTMLElement): any {\n\t\tswitch (templateId) {\n\t\t\tcase CommentsModelRenderer.RESOURCE_ID:\n\t\t\t\treturn this.renderResourceTemplate(container);\n\t\t\tcase CommentsModelRenderer.COMMENT_ID:\n\t\t\t\treturn this.renderCommentTemplate(container);\n\t\t}\n\t}\n\n\tpublic disposeTemplate(tree: ITree, templateId: string, templateData: any): void {\n\t\tswitch (templateId) {\n\t\t\tcase CommentsModelRenderer.RESOURCE_ID:\n\t\t\t\t(<IResourceTemplateData>templateData).resourceLabel.dispose();\n\t\t\t\tbreak;\n\t\t\tcase CommentsModelRenderer.COMMENT_ID:\n\t\t\t\t(<ICommentThreadTemplateData>templateData).disposables.forEach(disposeable => disposeable.dispose());\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic renderElement(tree: ITree, element: any, templateId: string, templateData: any): void {\n\t\tswitch (templateId) {\n\t\t\tcase CommentsModelRenderer.RESOURCE_ID:\n\t\t\t\treturn this.renderResourceElement(tree, element, templateData);\n\t\t\tcase CommentsModelRenderer.COMMENT_ID:\n\t\t\t\treturn this.renderCommentElement(tree, element, templateData);\n\t\t}\n\t}\n\n\tprivate renderResourceTemplate(container: HTMLElement): IResourceTemplateData {\n\t\tconst data = <IResourceTemplateData>Object.create(null);\n\t\tconst labelContainer = dom.append(container, dom.$('.resource-container'));\n\t\tdata.resourceLabel = this.labels.create(labelContainer);\n\n\t\treturn data;\n\t}\n\n\tprivate renderCommentTemplate(container: HTMLElement): ICommentThreadTemplateData {\n\t\tconst data = <ICommentThreadTemplateData>Object.create(null);\n\t\tconst labelContainer = dom.append(container, dom.$('.comment-container'));\n\t\tdata.userName = dom.append(labelContainer, dom.$('.user'));\n\t\tdata.commentText = dom.append(labelContainer, dom.$('.text'));\n\t\tdata.disposables = [];\n\n\t\treturn data;\n\t}\n\n\tprivate renderResourceElement(tree: ITree, element: ResourceWithCommentThreads, templateData: IResourceTemplateData) {\n\t\ttemplateData.resourceLabel.setFile(element.resource);\n\t}\n\n\tprivate renderCommentElement(tree: ITree, element: CommentNode, templateData: ICommentThreadTemplateData) {\n\t\ttemplateData.userName.textContent = element.comment.userName;\n\t\ttemplateData.commentText.innerHTML = '';\n\t\tconst renderedComment = renderMarkdown(element.comment.body, {\n\t\t\tinline: true,\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst uri = URI.parse(content);\n\t\t\t\t\t\tthis.openerService.open(uri).catch(onUnexpectedError);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdisposeables: templateData.disposables\n\t\t\t}\n\t\t});\n\n\t\tconst images = renderedComment.getElementsByTagName('img');\n\t\tfor (let i = 0; i < images.length; i++) {\n\t\t\tconst image = images[i];\n\t\t\tconst textDescription = dom.$('');\n\t\t\ttextDescription.textContent = image.alt ? nls.localize('imageWithLabel', \"Image: {0}\", image.alt) : nls.localize('image', \"Image\");\n\t\t\timage.parentNode!.replaceChild(textDescription, image);\n\t\t}\n\n\t\ttemplateData.commentText.appendChild(renderedComment);\n\t}\n}\n\nexport class CommentsDataFilter implements IFilter {\n\tpublic isVisible(tree: ITree, element: any): boolean {\n\t\tif (element instanceof CommentsModel) {\n\t\t\treturn element.resourceCommentThreads.length > 0;\n\t\t}\n\t\tif (element instanceof ResourceWithCommentThreads) {\n\t\t\treturn element.commentThreads.length > 0;\n\t\t}\n\t\treturn true;\n\t}\n}\n"]}]}