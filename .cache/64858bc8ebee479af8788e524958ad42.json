{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensWidget.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./codelensWidget\");\nvar dom = require(\"vs/base/browser/dom\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar editorBrowser = require(\"vs/editor/browser/editorBrowser\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar editorColorRegistry_1 = require(\"vs/editor/common/view/editorColorRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar CodeLensViewZone = /** @class */ (function () {\n    function CodeLensViewZone(afterLineNumber, onHeight) {\n        this.afterLineNumber = afterLineNumber;\n        this._onHeight = onHeight;\n        this.heightInLines = 1;\n        this.suppressMouseDown = true;\n        this.domNode = document.createElement('div');\n    }\n    CodeLensViewZone.prototype.onComputedHeight = function (height) {\n        if (this._lastHeight === undefined) {\n            this._lastHeight = height;\n        }\n        else if (this._lastHeight !== height) {\n            this._lastHeight = height;\n            this._onHeight();\n        }\n    };\n    return CodeLensViewZone;\n}());\nvar CodeLensContentWidget = /** @class */ (function () {\n    function CodeLensContentWidget(editor, symbolRange) {\n        // Editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this._commands = Object.create(null);\n        this._id = 'codeLensWidget' + (++CodeLensContentWidget._idPool);\n        this._editor = editor;\n        this.setSymbolRange(symbolRange);\n        this._domNode = document.createElement('span');\n        this._domNode.innerHTML = '&nbsp;';\n        dom.addClass(this._domNode, 'codelens-decoration');\n        dom.addClass(this._domNode, 'invisible-cl');\n        this.updateHeight();\n        this.updateVisibility();\n    }\n    CodeLensContentWidget.prototype.updateHeight = function () {\n        var _a = this._editor.getConfiguration(), fontInfo = _a.fontInfo, lineHeight = _a.lineHeight;\n        this._domNode.style.height = Math.round(lineHeight * 1.1) + \"px\";\n        this._domNode.style.lineHeight = lineHeight + \"px\";\n        this._domNode.style.fontSize = Math.round(fontInfo.fontSize * 0.9) + \"px\";\n        this._domNode.style.paddingRight = Math.round(fontInfo.fontSize * 0.45) + \"px\";\n        this._domNode.innerHTML = '&nbsp;';\n    };\n    CodeLensContentWidget.prototype.updateVisibility = function () {\n        if (this.isVisible()) {\n            dom.removeClass(this._domNode, 'invisible-cl');\n            dom.addClass(this._domNode, 'fadein');\n        }\n    };\n    CodeLensContentWidget.prototype.withCommands = function (inSymbols) {\n        this._commands = Object.create(null);\n        var symbols = arrays_1.coalesce(inSymbols);\n        if (arrays_1.isFalsyOrEmpty(symbols)) {\n            this._domNode.innerHTML = '<span>no commands</span>';\n            return;\n        }\n        var html = [];\n        for (var i = 0; i < symbols.length; i++) {\n            var command = symbols[i].command;\n            if (command) {\n                var title = strings_1.escape(command.title);\n                var part = void 0;\n                if (command.id) {\n                    part = \"<a id=\" + i + \">\" + title + \"</a>\";\n                    this._commands[i] = command;\n                }\n                else {\n                    part = \"<span>\" + title + \"</span>\";\n                }\n                html.push(part);\n            }\n        }\n        this._domNode.innerHTML = html.join('<span>&nbsp;|&nbsp;</span>');\n        this._editor.layoutContentWidget(this);\n    };\n    CodeLensContentWidget.prototype.getCommand = function (link) {\n        return link.parentElement === this._domNode\n            ? this._commands[link.id]\n            : undefined;\n    };\n    CodeLensContentWidget.prototype.getId = function () {\n        return this._id;\n    };\n    CodeLensContentWidget.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    CodeLensContentWidget.prototype.setSymbolRange = function (range) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var lineNumber = range.startLineNumber;\n        var column = this._editor.getModel().getLineFirstNonWhitespaceColumn(lineNumber);\n        this._widgetPosition = {\n            position: { lineNumber: lineNumber, column: column },\n            preference: [editorBrowser.ContentWidgetPositionPreference.ABOVE]\n        };\n    };\n    CodeLensContentWidget.prototype.getPosition = function () {\n        return this._widgetPosition;\n    };\n    CodeLensContentWidget.prototype.isVisible = function () {\n        return this._domNode.hasAttribute('monaco-visible-content-widget');\n    };\n    CodeLensContentWidget._idPool = 0;\n    return CodeLensContentWidget;\n}());\nvar CodeLensHelper = /** @class */ (function () {\n    function CodeLensHelper() {\n        this._removeDecorations = [];\n        this._addDecorations = [];\n        this._addDecorationsCallbacks = [];\n    }\n    CodeLensHelper.prototype.addDecoration = function (decoration, callback) {\n        this._addDecorations.push(decoration);\n        this._addDecorationsCallbacks.push(callback);\n    };\n    CodeLensHelper.prototype.removeDecoration = function (decorationId) {\n        this._removeDecorations.push(decorationId);\n    };\n    CodeLensHelper.prototype.commit = function (changeAccessor) {\n        var resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n        for (var i = 0, len = resultingDecorations.length; i < len; i++) {\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\n        }\n    };\n    return CodeLensHelper;\n}());\nexports.CodeLensHelper = CodeLensHelper;\nvar CodeLens = /** @class */ (function () {\n    function CodeLens(data, editor, helper, viewZoneChangeAccessor, updateCallback) {\n        var _this = this;\n        this._editor = editor;\n        this._data = data;\n        this._decorationIds = new Array(this._data.length);\n        var range;\n        this._data.forEach(function (codeLensData, i) {\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: textModel_1.ModelDecorationOptions.EMPTY\n            }, function (id) { return _this._decorationIds[i] = id; });\n            // the range contains all lenses on this line\n            if (!range) {\n                range = range_1.Range.lift(codeLensData.symbol.range);\n            }\n            else {\n                range = range_1.Range.plusRange(range, codeLensData.symbol.range);\n            }\n        });\n        if (range) {\n            this._contentWidget = new CodeLensContentWidget(editor, range);\n            this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, updateCallback);\n            this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n            this._editor.addContentWidget(this._contentWidget);\n        }\n    }\n    CodeLens.prototype.dispose = function (helper, viewZoneChangeAccessor) {\n        while (this._decorationIds.length) {\n            helper.removeDecoration(this._decorationIds.pop());\n        }\n        if (viewZoneChangeAccessor) {\n            viewZoneChangeAccessor.removeZone(this._viewZoneId);\n        }\n        this._editor.removeContentWidget(this._contentWidget);\n    };\n    CodeLens.prototype.isValid = function () {\n        var _this = this;\n        if (!this._editor.hasModel()) {\n            return false;\n        }\n        var model = this._editor.getModel();\n        return this._decorationIds.some(function (id, i) {\n            var range = model.getDecorationRange(id);\n            var symbol = _this._data[i].symbol;\n            return !!(range && range_1.Range.isEmpty(symbol.range) === range.isEmpty());\n        });\n    };\n    CodeLens.prototype.updateCodeLensSymbols = function (data, helper) {\n        var _this = this;\n        while (this._decorationIds.length) {\n            helper.removeDecoration(this._decorationIds.pop());\n        }\n        this._data = data;\n        this._decorationIds = new Array(this._data.length);\n        this._data.forEach(function (codeLensData, i) {\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: textModel_1.ModelDecorationOptions.EMPTY\n            }, function (id) { return _this._decorationIds[i] = id; });\n        });\n    };\n    CodeLens.prototype.computeIfNecessary = function (model) {\n        this._contentWidget.updateVisibility(); // trigger the fade in\n        if (!this._contentWidget.isVisible()) {\n            return null;\n        }\n        // Read editor current state\n        for (var i = 0; i < this._decorationIds.length; i++) {\n            var range = model.getDecorationRange(this._decorationIds[i]);\n            if (range) {\n                this._data[i].symbol.range = range;\n            }\n        }\n        return this._data;\n    };\n    CodeLens.prototype.updateCommands = function (symbols) {\n        this._contentWidget.withCommands(symbols);\n        for (var i = 0; i < this._data.length; i++) {\n            var resolved = symbols[i];\n            if (resolved) {\n                var symbol = this._data[i].symbol;\n                symbol.command = resolved.command || symbol.command;\n            }\n        }\n    };\n    CodeLens.prototype.updateHeight = function () {\n        this._contentWidget.updateHeight();\n    };\n    CodeLens.prototype.getCommand = function (link) {\n        return this._contentWidget.getCommand(link);\n    };\n    CodeLens.prototype.getLineNumber = function () {\n        if (this._editor.hasModel()) {\n            var range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n            if (range) {\n                return range.startLineNumber;\n            }\n        }\n        return -1;\n    };\n    CodeLens.prototype.update = function (viewZoneChangeAccessor) {\n        if (this.isValid() && this._editor.hasModel()) {\n            var range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n            if (range) {\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n                this._contentWidget.setSymbolRange(range);\n                this._editor.layoutContentWidget(this._contentWidget);\n            }\n        }\n    };\n    return CodeLens;\n}());\nexports.CodeLens = CodeLens;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var codeLensForeground = theme.getColor(editorColorRegistry_1.editorCodeLensForeground);\n    if (codeLensForeground) {\n        collector.addRule(\".monaco-editor .codelens-decoration { color: \" + codeLensForeground + \"; }\");\n    }\n    var activeLinkForeground = theme.getColor(colorRegistry_1.editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(\".monaco-editor .codelens-decoration > a:hover { color: \" + activeLinkForeground + \" !important; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./codelensWidget';\nimport * as dom from 'vs/base/browser/dom';\nimport { coalesce, isFalsyOrEmpty } from 'vs/base/common/arrays';\nimport { escape } from 'vs/base/common/strings';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration, ITextModel } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { Command, ICodeLensSymbol } from 'vs/editor/common/modes';\nimport { editorCodeLensForeground } from 'vs/editor/common/view/editorColorRegistry';\nimport { ICodeLensData } from 'vs/editor/contrib/codelens/codelens';\nimport { editorActiveLinkForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\nclass CodeLensViewZone implements editorBrowser.IViewZone {\n\n\treadonly heightInLines: number;\n\treadonly suppressMouseDown: boolean;\n\treadonly domNode: HTMLElement;\n\n\tafterLineNumber: number;\n\n\tprivate _lastHeight?: number;\n\tprivate readonly _onHeight: Function;\n\n\tconstructor(afterLineNumber: number, onHeight: Function) {\n\t\tthis.afterLineNumber = afterLineNumber;\n\t\tthis._onHeight = onHeight;\n\n\t\tthis.heightInLines = 1;\n\t\tthis.suppressMouseDown = true;\n\t\tthis.domNode = document.createElement('div');\n\t}\n\n\tonComputedHeight(height: number): void {\n\t\tif (this._lastHeight === undefined) {\n\t\t\tthis._lastHeight = height;\n\t\t} else if (this._lastHeight !== height) {\n\t\t\tthis._lastHeight = height;\n\t\t\tthis._onHeight();\n\t\t}\n\t}\n}\n\nclass CodeLensContentWidget implements editorBrowser.IContentWidget {\n\n\tprivate static _idPool: number = 0;\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\treadonly allowEditorOverflow: boolean = false;\n\treadonly suppressMouseDown: boolean = true;\n\n\tprivate readonly _id: string;\n\tprivate readonly _domNode: HTMLElement;\n\tprivate readonly _editor: editorBrowser.ICodeEditor;\n\n\tprivate _widgetPosition: editorBrowser.IContentWidgetPosition;\n\tprivate _commands: { [id: string]: Command } = Object.create(null);\n\n\tconstructor(\n\t\teditor: editorBrowser.ICodeEditor,\n\t\tsymbolRange: Range\n\t) {\n\t\tthis._id = 'codeLensWidget' + (++CodeLensContentWidget._idPool);\n\t\tthis._editor = editor;\n\n\t\tthis.setSymbolRange(symbolRange);\n\n\t\tthis._domNode = document.createElement('span');\n\t\tthis._domNode.innerHTML = '&nbsp;';\n\t\tdom.addClass(this._domNode, 'codelens-decoration');\n\t\tdom.addClass(this._domNode, 'invisible-cl');\n\t\tthis.updateHeight();\n\t\tthis.updateVisibility();\n\t}\n\n\tupdateHeight(): void {\n\t\tconst { fontInfo, lineHeight } = this._editor.getConfiguration();\n\t\tthis._domNode.style.height = `${Math.round(lineHeight * 1.1)}px`;\n\t\tthis._domNode.style.lineHeight = `${lineHeight}px`;\n\t\tthis._domNode.style.fontSize = `${Math.round(fontInfo.fontSize * 0.9)}px`;\n\t\tthis._domNode.style.paddingRight = `${Math.round(fontInfo.fontSize * 0.45)}px`;\n\t\tthis._domNode.innerHTML = '&nbsp;';\n\t}\n\n\tupdateVisibility(): void {\n\t\tif (this.isVisible()) {\n\t\t\tdom.removeClass(this._domNode, 'invisible-cl');\n\t\t\tdom.addClass(this._domNode, 'fadein');\n\t\t}\n\t}\n\n\twithCommands(inSymbols: Array<ICodeLensSymbol | undefined | null>): void {\n\t\tthis._commands = Object.create(null);\n\t\tconst symbols = coalesce(inSymbols);\n\t\tif (isFalsyOrEmpty(symbols)) {\n\t\t\tthis._domNode.innerHTML = '<span>no commands</span>';\n\t\t\treturn;\n\t\t}\n\n\t\tlet html: string[] = [];\n\t\tfor (let i = 0; i < symbols.length; i++) {\n\t\t\tconst command = symbols[i].command;\n\t\t\tif (command) {\n\t\t\t\tconst title = escape(command.title);\n\t\t\t\tlet part: string;\n\t\t\t\tif (command.id) {\n\t\t\t\t\tpart = `<a id=${i}>${title}</a>`;\n\t\t\t\t\tthis._commands[i] = command;\n\t\t\t\t} else {\n\t\t\t\t\tpart = `<span>${title}</span>`;\n\t\t\t\t}\n\t\t\t\thtml.push(part);\n\t\t\t}\n\t\t}\n\n\t\tthis._domNode.innerHTML = html.join('<span>&nbsp;|&nbsp;</span>');\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn link.parentElement === this._domNode\n\t\t\t? this._commands[link.id]\n\t\t\t: undefined;\n\t}\n\n\tgetId(): string {\n\t\treturn this._id;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tsetSymbolRange(range: Range): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineNumber = range.startLineNumber;\n\t\tconst column = this._editor.getModel().getLineFirstNonWhitespaceColumn(lineNumber);\n\t\tthis._widgetPosition = {\n\t\t\tposition: { lineNumber: lineNumber, column: column },\n\t\t\tpreference: [editorBrowser.ContentWidgetPositionPreference.ABOVE]\n\t\t};\n\t}\n\n\tgetPosition(): editorBrowser.IContentWidgetPosition {\n\t\treturn this._widgetPosition;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._domNode.hasAttribute('monaco-visible-content-widget');\n\t}\n}\n\nexport interface IDecorationIdCallback {\n\t(decorationId: string): void;\n}\n\nexport class CodeLensHelper {\n\n\tprivate readonly _removeDecorations: string[];\n\tprivate readonly _addDecorations: IModelDeltaDecoration[];\n\tprivate readonly _addDecorationsCallbacks: IDecorationIdCallback[];\n\n\tconstructor() {\n\t\tthis._removeDecorations = [];\n\t\tthis._addDecorations = [];\n\t\tthis._addDecorationsCallbacks = [];\n\t}\n\n\taddDecoration(decoration: IModelDeltaDecoration, callback: IDecorationIdCallback): void {\n\t\tthis._addDecorations.push(decoration);\n\t\tthis._addDecorationsCallbacks.push(callback);\n\t}\n\n\tremoveDecoration(decorationId: string): void {\n\t\tthis._removeDecorations.push(decorationId);\n\t}\n\n\tcommit(changeAccessor: IModelDecorationsChangeAccessor): void {\n\t\tlet resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n\t\tfor (let i = 0, len = resultingDecorations.length; i < len; i++) {\n\t\t\tthis._addDecorationsCallbacks[i](resultingDecorations[i]);\n\t\t}\n\t}\n}\n\nexport class CodeLens {\n\n\tprivate readonly _editor: editorBrowser.ICodeEditor;\n\tprivate readonly _viewZone: CodeLensViewZone;\n\tprivate readonly _viewZoneId: number;\n\tprivate readonly _contentWidget: CodeLensContentWidget;\n\tprivate _decorationIds: string[];\n\tprivate _data: ICodeLensData[];\n\n\tconstructor(\n\t\tdata: ICodeLensData[],\n\t\teditor: editorBrowser.ICodeEditor,\n\t\thelper: CodeLensHelper,\n\t\tviewZoneChangeAccessor: editorBrowser.IViewZoneChangeAccessor,\n\t\tupdateCallback: Function\n\t) {\n\t\tthis._editor = editor;\n\t\tthis._data = data;\n\t\tthis._decorationIds = new Array<string>(this._data.length);\n\n\t\tlet range: Range | undefined;\n\t\tthis._data.forEach((codeLensData, i) => {\n\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: ModelDecorationOptions.EMPTY\n\t\t\t}, id => this._decorationIds[i] = id);\n\n\t\t\t// the range contains all lenses on this line\n\t\t\tif (!range) {\n\t\t\t\trange = Range.lift(codeLensData.symbol.range);\n\t\t\t} else {\n\t\t\t\trange = Range.plusRange(range, codeLensData.symbol.range);\n\t\t\t}\n\t\t});\n\n\t\tif (range) {\n\t\t\tthis._contentWidget = new CodeLensContentWidget(editor, range);\n\t\t\tthis._viewZone = new CodeLensViewZone(range.startLineNumber - 1, updateCallback);\n\n\t\t\tthis._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n\t\t\tthis._editor.addContentWidget(this._contentWidget);\n\t\t}\n\t}\n\n\tdispose(helper: CodeLensHelper, viewZoneChangeAccessor?: editorBrowser.IViewZoneChangeAccessor): void {\n\t\twhile (this._decorationIds.length) {\n\t\t\thelper.removeDecoration(this._decorationIds.pop()!);\n\t\t}\n\t\tif (viewZoneChangeAccessor) {\n\t\t\tviewZoneChangeAccessor.removeZone(this._viewZoneId);\n\t\t}\n\t\tthis._editor.removeContentWidget(this._contentWidget);\n\t}\n\n\tisValid(): boolean {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\treturn this._decorationIds.some((id, i) => {\n\t\t\tconst range = model.getDecorationRange(id);\n\t\t\tconst symbol = this._data[i].symbol;\n\t\t\treturn !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n\t\t});\n\t}\n\n\tupdateCodeLensSymbols(data: ICodeLensData[], helper: CodeLensHelper): void {\n\t\twhile (this._decorationIds.length) {\n\t\t\thelper.removeDecoration(this._decorationIds.pop()!);\n\t\t}\n\t\tthis._data = data;\n\t\tthis._decorationIds = new Array<string>(this._data.length);\n\t\tthis._data.forEach((codeLensData, i) => {\n\t\t\thelper.addDecoration({\n\t\t\t\trange: codeLensData.symbol.range,\n\t\t\t\toptions: ModelDecorationOptions.EMPTY\n\t\t\t}, id => this._decorationIds[i] = id);\n\t\t});\n\t}\n\n\tcomputeIfNecessary(model: ITextModel): ICodeLensData[] | null {\n\t\tthis._contentWidget.updateVisibility(); // trigger the fade in\n\t\tif (!this._contentWidget.isVisible()) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Read editor current state\n\t\tfor (let i = 0; i < this._decorationIds.length; i++) {\n\t\t\tconst range = model.getDecorationRange(this._decorationIds[i]);\n\t\t\tif (range) {\n\t\t\t\tthis._data[i].symbol.range = range;\n\t\t\t}\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tupdateCommands(symbols: Array<ICodeLensSymbol | undefined | null>): void {\n\t\tthis._contentWidget.withCommands(symbols);\n\t\tfor (let i = 0; i < this._data.length; i++) {\n\t\t\tconst resolved = symbols[i];\n\t\t\tif (resolved) {\n\t\t\t\tconst { symbol } = this._data[i];\n\t\t\t\tsymbol.command = resolved.command || symbol.command;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateHeight(): void {\n\t\tthis._contentWidget.updateHeight();\n\t}\n\n\tgetCommand(link: HTMLLinkElement): Command | undefined {\n\t\treturn this._contentWidget.getCommand(link);\n\t}\n\n\tgetLineNumber(): number {\n\t\tif (this._editor.hasModel()) {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\t\tif (range) {\n\t\t\t\treturn range.startLineNumber;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tupdate(viewZoneChangeAccessor: editorBrowser.IViewZoneChangeAccessor): void {\n\t\tif (this.isValid() && this._editor.hasModel()) {\n\t\t\tconst range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n\t\t\tif (range) {\n\t\t\t\tthis._viewZone.afterLineNumber = range.startLineNumber - 1;\n\t\t\t\tviewZoneChangeAccessor.layoutZone(this._viewZoneId);\n\n\t\t\t\tthis._contentWidget.setSymbolRange(range);\n\t\t\t\tthis._editor.layoutContentWidget(this._contentWidget);\n\t\t\t}\n\t\t}\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst codeLensForeground = theme.getColor(editorCodeLensForeground);\n\tif (codeLensForeground) {\n\t\tcollector.addRule(`.monaco-editor .codelens-decoration { color: ${codeLensForeground}; }`);\n\t}\n\tconst activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n\tif (activeLinkForeground) {\n\t\tcollector.addRule(`.monaco-editor .codelens-decoration > a:hover { color: ${activeLinkForeground} !important; }`);\n\t}\n});\n"]}]}