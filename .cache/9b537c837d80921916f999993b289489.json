{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/emptyView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/emptyView.ts","mtime":1555846338040},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar errors = require(\"vs/base/common/errors\");\nvar browser = require(\"vs/base/browser/browser\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar button_1 = require(\"vs/base/browser/ui/button/button\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar workspaceActions_1 = require(\"vs/workbench/browser/actions/workspaceActions\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar dnd_1 = require(\"vs/workbench/browser/dnd\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar EmptyView = /** @class */ (function (_super) {\n    tslib_1.__extends(EmptyView, _super);\n    function EmptyView(options, themeService, instantiationService, keybindingService, contextMenuService, contextService, configurationService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: nls.localize('explorerSection', \"Files Explorer Section\") }), keybindingService, contextMenuService, configurationService) || this;\n        _this.themeService = themeService;\n        _this.instantiationService = instantiationService;\n        _this.contextService = contextService;\n        _this.contextService.onDidChangeWorkbenchState(function () { return _this.setLabels(); });\n        return _this;\n    }\n    EmptyView.prototype.renderHeader = function (container) {\n        var titleContainer = document.createElement('div');\n        DOM.addClass(titleContainer, 'title');\n        container.appendChild(titleContainer);\n        this.titleElement = document.createElement('span');\n        this.titleElement.textContent = name;\n        titleContainer.appendChild(this.titleElement);\n    };\n    EmptyView.prototype.renderBody = function (container) {\n        var _this = this;\n        DOM.addClass(container, 'explorer-empty-view');\n        container.tabIndex = 0;\n        var messageContainer = document.createElement('div');\n        DOM.addClass(messageContainer, 'section');\n        container.appendChild(messageContainer);\n        this.messageElement = document.createElement('p');\n        messageContainer.appendChild(this.messageElement);\n        this.button = new button_1.Button(messageContainer);\n        styler_1.attachButtonStyler(this.button, this.themeService);\n        this.disposables.push(this.button.onDidClick(function () {\n            if (!_this.actionRunner) {\n                return;\n            }\n            var actionClass = _this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE ? workspaceActions_1.AddRootFolderAction : browser.isMacintosh ? workspaceActions_1.OpenFileFolderAction : workspaceActions_1.OpenFolderAction;\n            var action = _this.instantiationService.createInstance(actionClass, actionClass.ID, actionClass.LABEL);\n            _this.actionRunner.run(action).then(function () {\n                action.dispose();\n            }, function (err) {\n                action.dispose();\n                errors.onUnexpectedError(err);\n            });\n        }));\n        this.disposables.push(new dnd_1.DragAndDropObserver(container, {\n            onDrop: function (e) {\n                var color = _this.themeService.getTheme().getColor(theme_1.SIDE_BAR_BACKGROUND);\n                container.style.backgroundColor = color ? color.toString() : '';\n                var dropHandler = _this.instantiationService.createInstance(dnd_1.ResourcesDropHandler, { allowWorkspaceOpen: true });\n                dropHandler.handleDrop(e, function () { return undefined; }, function (targetGroup) { return undefined; });\n            },\n            onDragEnter: function (e) {\n                var color = _this.themeService.getTheme().getColor(colorRegistry_1.listDropBackground);\n                container.style.backgroundColor = color ? color.toString() : '';\n            },\n            onDragEnd: function () {\n                var color = _this.themeService.getTheme().getColor(theme_1.SIDE_BAR_BACKGROUND);\n                container.style.backgroundColor = color ? color.toString() : '';\n            },\n            onDragLeave: function () {\n                var color = _this.themeService.getTheme().getColor(theme_1.SIDE_BAR_BACKGROUND);\n                container.style.backgroundColor = color ? color.toString() : '';\n            },\n            onDragOver: function (e) {\n                e.dataTransfer.dropEffect = 'copy';\n            }\n        }));\n        this.setLabels();\n    };\n    EmptyView.prototype.setLabels = function () {\n        if (this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE) {\n            this.messageElement.textContent = nls.localize('noWorkspaceHelp', \"You have not yet added a folder to the workspace.\");\n            if (this.button) {\n                this.button.label = nls.localize('addFolder', \"Add Folder\");\n            }\n            this.titleElement.textContent = EmptyView.NAME;\n        }\n        else {\n            this.messageElement.textContent = nls.localize('noFolderHelp', \"You have not yet opened a folder.\");\n            if (this.button) {\n                this.button.label = nls.localize('openFolder', \"Open Folder\");\n            }\n            this.titleElement.textContent = this.title;\n        }\n    };\n    EmptyView.prototype.layoutBody = function (size) {\n        // no-op\n    };\n    EmptyView.prototype.focusBody = function () {\n        if (this.button) {\n            this.button.element.focus();\n        }\n    };\n    EmptyView.ID = 'workbench.explorer.emptyView';\n    EmptyView.NAME = nls.localize('noWorkspace', \"No Folder Opened\");\n    EmptyView = tslib_1.__decorate([\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, contextView_1.IContextMenuService),\n        tslib_1.__param(5, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(6, configuration_1.IConfigurationService)\n    ], EmptyView);\n    return EmptyView;\n}(panelViewlet_1.ViewletPanel));\nexports.EmptyView = EmptyView;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/emptyView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/emptyView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as errors from 'vs/base/common/errors';\nimport * as browser from 'vs/base/browser/browser';\nimport * as env from 'vs/base/common/platform';\nimport * as DOM from 'vs/base/browser/dom';\nimport { IAction } from 'vs/base/common/actions';\nimport { Button } from 'vs/base/browser/ui/button/button';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { OpenFolderAction, OpenFileFolderAction, AddRootFolderAction } from 'vs/workbench/browser/actions/workspaceActions';\nimport { attachButtonStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { ResourcesDropHandler, DragAndDropObserver } from 'vs/workbench/browser/dnd';\nimport { listDropBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\n\nexport class EmptyView extends ViewletPanel {\n\n\tstatic readonly ID: string = 'workbench.explorer.emptyView';\n\tstatic readonly NAME = nls.localize('noWorkspace', \"No Folder Opened\");\n\n\tprivate button: Button;\n\tprivate messageElement: HTMLElement;\n\tprivate titleElement: HTMLElement;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: nls.localize('explorerSection', \"Files Explorer Section\") }, keybindingService, contextMenuService, configurationService);\n\t\tthis.contextService.onDidChangeWorkbenchState(() => this.setLabels());\n\t}\n\n\trenderHeader(container: HTMLElement): void {\n\t\tconst titleContainer = document.createElement('div');\n\t\tDOM.addClass(titleContainer, 'title');\n\t\tcontainer.appendChild(titleContainer);\n\n\t\tthis.titleElement = document.createElement('span');\n\t\tthis.titleElement.textContent = name;\n\t\ttitleContainer.appendChild(this.titleElement);\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tDOM.addClass(container, 'explorer-empty-view');\n\t\tcontainer.tabIndex = 0;\n\n\t\tconst messageContainer = document.createElement('div');\n\t\tDOM.addClass(messageContainer, 'section');\n\t\tcontainer.appendChild(messageContainer);\n\n\t\tthis.messageElement = document.createElement('p');\n\t\tmessageContainer.appendChild(this.messageElement);\n\n\t\tthis.button = new Button(messageContainer);\n\t\tattachButtonStyler(this.button, this.themeService);\n\n\t\tthis.disposables.push(this.button.onDidClick(() => {\n\t\t\tif (!this.actionRunner) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst actionClass = this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE ? AddRootFolderAction : browser.isMacintosh ? OpenFileFolderAction : OpenFolderAction;\n\t\t\tconst action = this.instantiationService.createInstance<string, string, IAction>(actionClass, actionClass.ID, actionClass.LABEL);\n\t\t\tthis.actionRunner.run(action).then(() => {\n\t\t\t\taction.dispose();\n\t\t\t}, err => {\n\t\t\t\taction.dispose();\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t});\n\t\t}));\n\n\t\tthis.disposables.push(new DragAndDropObserver(container, {\n\t\t\tonDrop: e => {\n\t\t\t\tconst color = this.themeService.getTheme().getColor(SIDE_BAR_BACKGROUND);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t\tconst dropHandler = this.instantiationService.createInstance(ResourcesDropHandler, { allowWorkspaceOpen: true });\n\t\t\t\tdropHandler.handleDrop(e, () => undefined, targetGroup => undefined);\n\t\t\t},\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tconst color = this.themeService.getTheme().getColor(listDropBackground);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t},\n\t\t\tonDragEnd: () => {\n\t\t\t\tconst color = this.themeService.getTheme().getColor(SIDE_BAR_BACKGROUND);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t},\n\t\t\tonDragLeave: () => {\n\t\t\t\tconst color = this.themeService.getTheme().getColor(SIDE_BAR_BACKGROUND);\n\t\t\t\tcontainer.style.backgroundColor = color ? color.toString() : '';\n\t\t\t},\n\t\t\tonDragOver: e => {\n\t\t\t\te.dataTransfer!.dropEffect = 'copy';\n\t\t\t}\n\t\t}));\n\n\t\tthis.setLabels();\n\t}\n\n\tprivate setLabels(): void {\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tthis.messageElement.textContent = nls.localize('noWorkspaceHelp', \"You have not yet added a folder to the workspace.\");\n\t\t\tif (this.button) {\n\t\t\t\tthis.button.label = nls.localize('addFolder', \"Add Folder\");\n\t\t\t}\n\t\t\tthis.titleElement.textContent = EmptyView.NAME;\n\t\t} else {\n\t\t\tthis.messageElement.textContent = nls.localize('noFolderHelp', \"You have not yet opened a folder.\");\n\t\t\tif (this.button) {\n\t\t\t\tthis.button.label = nls.localize('openFolder', \"Open Folder\");\n\t\t\t}\n\t\t\tthis.titleElement.textContent = this.title;\n\t\t}\n\t}\n\n\tlayoutBody(size: number): void {\n\t\t// no-op\n\t}\n\n\tfocusBody(): void {\n\t\tif (this.button) {\n\t\t\tthis.button.element.focus();\n\t\t}\n\t}\n}\n"]}]}