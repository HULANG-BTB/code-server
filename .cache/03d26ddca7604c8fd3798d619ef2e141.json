{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryDiffEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryDiffEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar sideBySideEditor_1 = require(\"vs/workbench/browser/parts/editor/sideBySideEditor\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar binaryEditor_1 = require(\"vs/workbench/browser/parts/editor/binaryEditor\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\n/**\n * An implementation of editor for diffing binary files like images or videos.\n */\nvar BinaryResourceDiffEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(BinaryResourceDiffEditor, _super);\n    function BinaryResourceDiffEditor(telemetryService, instantiationService, themeService, storageService) {\n        return _super.call(this, telemetryService, instantiationService, themeService, storageService) || this;\n    }\n    BinaryResourceDiffEditor.prototype.getMetadata = function () {\n        var master = this.masterEditor;\n        var details = this.detailsEditor;\n        if (master instanceof binaryEditor_1.BaseBinaryResourceEditor && details instanceof binaryEditor_1.BaseBinaryResourceEditor) {\n            return nls.localize('metadataDiff', \"{0} ↔ {1}\", details.getMetadata(), master.getMetadata());\n        }\n        return undefined;\n    };\n    BinaryResourceDiffEditor.ID = editor_1.BINARY_DIFF_EDITOR_ID;\n    BinaryResourceDiffEditor = tslib_1.__decorate([\n        tslib_1.__param(0, telemetry_1.ITelemetryService),\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, themeService_1.IThemeService),\n        tslib_1.__param(3, storage_1.IStorageService)\n    ], BinaryResourceDiffEditor);\n    return BinaryResourceDiffEditor;\n}(sideBySideEditor_1.SideBySideEditor));\nexports.BinaryResourceDiffEditor = BinaryResourceDiffEditor;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryDiffEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryDiffEditor.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4BAA8B;AAC9B,qDAAmE;AACnE,oEAA2E;AAC3E,sEAAsE;AACtE,uFAAsF;AACtF,gFAAuF;AACvF,+EAA0F;AAC1F,8DAAqE;AAErE;;GAEG;AACH;IAA8C,oDAAgB;IAI7D,kCACoB,gBAAmC,EAC/B,oBAA2C,EACnD,YAA2B,EACzB,cAA+B;eAEhD,kBAAM,gBAAgB,EAAE,oBAAoB,EAAE,YAAY,EAAE,cAAc,CAAC;IAC5E,CAAC;IAED,8CAAW,GAAX;QACC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QAEnC,IAAI,MAAM,YAAY,uCAAwB,IAAI,OAAO,YAAY,uCAAwB,EAAE;YAC9F,OAAO,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;SAC9F;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IApBe,2BAAE,GAAG,8BAAqB,CAAC;IAF/B,wBAAwB;QAKlC,mBAAA,6BAAiB,CAAA;QACjB,mBAAA,qCAAqB,CAAA;QACrB,mBAAA,4BAAa,CAAA;QACb,mBAAA,yBAAe,CAAA;OARL,wBAAwB,CAuBpC;IAAD,+BAAC;CAAA,AAvBD,CAA8C,mCAAgB,GAuB7D;AAvBY,4DAAwB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { BINARY_DIFF_EDITOR_ID } from 'vs/workbench/common/editor';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { SideBySideEditor } from 'vs/workbench/browser/parts/editor/sideBySideEditor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BaseBinaryResourceEditor } from 'vs/workbench/browser/parts/editor/binaryEditor';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\n\n/**\n * An implementation of editor for diffing binary files like images or videos.\n */\nexport class BinaryResourceDiffEditor extends SideBySideEditor {\n\n\tstatic readonly ID = BINARY_DIFF_EDITOR_ID;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(telemetryService, instantiationService, themeService, storageService);\n\t}\n\n\tgetMetadata(): string | undefined {\n\t\tconst master = this.masterEditor;\n\t\tconst details = this.detailsEditor;\n\n\t\tif (master instanceof BaseBinaryResourceEditor && details instanceof BaseBinaryResourceEditor) {\n\t\t\treturn nls.localize('metadataDiff', \"{0} ↔ {1}\", details.getMetadata(), master.getMetadata());\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"]}]}