{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar editorZoom_1 = require(\"vs/editor/common/config/editorZoom\");\nvar EditorFontZoomIn = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorFontZoomIn, _super);\n    function EditorFontZoomIn() {\n        return _super.call(this, {\n            id: 'editor.action.fontZoomIn',\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n            alias: 'Editor Font Zoom In',\n            precondition: null\n        }) || this;\n    }\n    EditorFontZoomIn.prototype.run = function (accessor, editor) {\n        editorZoom_1.EditorZoom.setZoomLevel(editorZoom_1.EditorZoom.getZoomLevel() + 1);\n    };\n    return EditorFontZoomIn;\n}(editorExtensions_1.EditorAction));\nvar EditorFontZoomOut = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorFontZoomOut, _super);\n    function EditorFontZoomOut() {\n        return _super.call(this, {\n            id: 'editor.action.fontZoomOut',\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n            alias: 'Editor Font Zoom Out',\n            precondition: null\n        }) || this;\n    }\n    EditorFontZoomOut.prototype.run = function (accessor, editor) {\n        editorZoom_1.EditorZoom.setZoomLevel(editorZoom_1.EditorZoom.getZoomLevel() - 1);\n    };\n    return EditorFontZoomOut;\n}(editorExtensions_1.EditorAction));\nvar EditorFontZoomReset = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorFontZoomReset, _super);\n    function EditorFontZoomReset() {\n        return _super.call(this, {\n            id: 'editor.action.fontZoomReset',\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n            alias: 'Editor Font Zoom Reset',\n            precondition: null\n        }) || this;\n    }\n    EditorFontZoomReset.prototype.run = function (accessor, editor) {\n        editorZoom_1.EditorZoom.setZoomLevel(0);\n    };\n    return EditorFontZoomReset;\n}(editorExtensions_1.EditorAction));\neditorExtensions_1.registerEditorAction(EditorFontZoomIn);\neditorExtensions_1.registerEditorAction(EditorFontZoomOut);\neditorExtensions_1.registerEditorAction(EditorFontZoomReset);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4BAA8B;AAE9B,uEAA0G;AAC1G,iEAAgE;AAEhE;IAA+B,4CAAY;IAE1C;eACC,kBAAM;YACL,EAAE,EAAE,0BAA0B;YAC9B,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,qBAAqB,CAAC;YACpE,KAAK,EAAE,qBAAqB;YAC5B,YAAY,EAAE,IAAI;SAClB,CAAC;IACH,CAAC;IAEM,8BAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,uBAAU,CAAC,YAAY,CAAC,uBAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IACF,uBAAC;AAAD,CAAC,AAdD,CAA+B,+BAAY,GAc1C;AAED;IAAgC,6CAAY;IAE3C;eACC,kBAAM;YACL,EAAE,EAAE,2BAA2B;YAC/B,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,sBAAsB,CAAC;YACtE,KAAK,EAAE,sBAAsB;YAC7B,YAAY,EAAE,IAAI;SAClB,CAAC;IACH,CAAC;IAEM,+BAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,uBAAU,CAAC,YAAY,CAAC,uBAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IACF,wBAAC;AAAD,CAAC,AAdD,CAAgC,+BAAY,GAc3C;AAED;IAAkC,+CAAY;IAE7C;eACC,kBAAM;YACL,EAAE,EAAE,6BAA6B;YACjC,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,wBAAwB,CAAC;YAC1E,KAAK,EAAE,wBAAwB;YAC/B,YAAY,EAAE,IAAI;SAClB,CAAC;IACH,CAAC;IAEM,iCAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,uBAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACF,0BAAC;AAAD,CAAC,AAdD,CAAkC,+BAAY,GAc7C;AAED,uCAAoB,CAAC,gBAAgB,CAAC,CAAC;AACvC,uCAAoB,CAAC,iBAAiB,CAAC,CAAC;AACxC,uCAAoB,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorZoom } from 'vs/editor/common/config/editorZoom';\n\nclass EditorFontZoomIn extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.fontZoomIn',\n\t\t\tlabel: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n\t\t\talias: 'Editor Font Zoom In',\n\t\t\tprecondition: null\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tEditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\n\t}\n}\n\nclass EditorFontZoomOut extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.fontZoomOut',\n\t\t\tlabel: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n\t\t\talias: 'Editor Font Zoom Out',\n\t\t\tprecondition: null\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tEditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\n\t}\n}\n\nclass EditorFontZoomReset extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.fontZoomReset',\n\t\t\tlabel: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n\t\t\talias: 'Editor Font Zoom Reset',\n\t\t\tprecondition: null\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tEditorZoom.setZoomLevel(0);\n\t}\n}\n\nregisterEditorAction(EditorFontZoomIn);\nregisterEditorAction(EditorFontZoomOut);\nregisterEditorAction(EditorFontZoomReset);\n"]}]}