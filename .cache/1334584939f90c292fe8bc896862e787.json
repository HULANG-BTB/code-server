{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/remote/electron-browser/remoteAuthorityResolverService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/electron-browser/remoteAuthorityResolverService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar electron_1 = require(\"electron\");\nvar PendingResolveAuthorityRequest = /** @class */ (function () {\n    function PendingResolveAuthorityRequest(resolve, reject, promise) {\n        this.resolve = resolve;\n        this.reject = reject;\n        this.promise = promise;\n    }\n    return PendingResolveAuthorityRequest;\n}());\nvar RemoteAuthorityResolverService = /** @class */ (function () {\n    function RemoteAuthorityResolverService() {\n        this._resolveAuthorityRequests = Object.create(null);\n    }\n    RemoteAuthorityResolverService.prototype.resolveAuthority = function (authority) {\n        if (!this._resolveAuthorityRequests[authority]) {\n            var resolve_1;\n            var reject_1;\n            var promise = new Promise(function (_resolve, _reject) {\n                resolve_1 = _resolve;\n                reject_1 = _reject;\n            });\n            this._resolveAuthorityRequests[authority] = new PendingResolveAuthorityRequest(resolve_1, reject_1, promise);\n        }\n        return this._resolveAuthorityRequests[authority].promise;\n    };\n    RemoteAuthorityResolverService.prototype.setResolvedAuthority = function (resolvedAuthority) {\n        if (this._resolveAuthorityRequests[resolvedAuthority.authority]) {\n            var request = this._resolveAuthorityRequests[resolvedAuthority.authority];\n            electron_1.ipcRenderer.send('vscode:remoteAuthorityResolved', resolvedAuthority);\n            request.resolve(resolvedAuthority);\n        }\n    };\n    RemoteAuthorityResolverService.prototype.setResolvedAuthorityError = function (authority, err) {\n        if (this._resolveAuthorityRequests[authority]) {\n            var request = this._resolveAuthorityRequests[authority];\n            request.reject(err);\n        }\n    };\n    return RemoteAuthorityResolverService;\n}());\nexports.RemoteAuthorityResolverService = RemoteAuthorityResolverService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/electron-browser/remoteAuthorityResolverService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/remote/electron-browser/remoteAuthorityResolverService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,qCAA8C;AAE9C;IACC,wCACiB,OAA2C,EAC3C,MAA0B,EAC1B,OAAmC;QAFnC,YAAO,GAAP,OAAO,CAAoC;QAC3C,WAAM,GAAN,MAAM,CAAoB;QAC1B,YAAO,GAAP,OAAO,CAA4B;IAEpD,CAAC;IACF,qCAAC;AAAD,CAAC,AAPD,IAOC;AAED;IAMC;QACC,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,yDAAgB,GAAhB,UAAiB,SAAiB;QACjC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,EAAE;YAC/C,IAAI,SAA2C,CAAC;YAChD,IAAI,QAA0B,CAAC;YAC/B,IAAI,OAAO,GAAG,IAAI,OAAO,CAAoB,UAAC,QAAQ,EAAE,OAAO;gBAC9D,SAAO,GAAG,QAAQ,CAAC;gBACnB,QAAM,GAAG,OAAO,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,GAAG,IAAI,8BAA8B,CAAC,SAAQ,EAAE,QAAO,EAAE,OAAO,CAAC,CAAC;SAC3G;QACD,OAAO,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;IAC1D,CAAC;IAED,6DAAoB,GAApB,UAAqB,iBAAoC;QACxD,IAAI,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE;YAChE,IAAI,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC1E,sBAAG,CAAC,IAAI,CAAC,gCAAgC,EAAE,iBAAiB,CAAC,CAAC;YAC9D,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;SACnC;IACF,CAAC;IAED,kEAAyB,GAAzB,UAA0B,SAAiB,EAAE,GAAQ;QACpD,IAAI,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,EAAE;YAC9C,IAAI,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;YACxD,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACpB;IACF,CAAC;IACF,qCAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,wEAA8B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResolvedAuthority, IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ipcRenderer as ipc } from 'electron';\n\nclass PendingResolveAuthorityRequest {\n\tconstructor(\n\t\tpublic readonly resolve: (value: ResolvedAuthority) => void,\n\t\tpublic readonly reject: (err: any) => void,\n\t\tpublic readonly promise: Promise<ResolvedAuthority>,\n\t) {\n\t}\n}\n\nexport class RemoteAuthorityResolverService implements IRemoteAuthorityResolverService {\n\n\t_serviceBrand: any;\n\n\tprivate _resolveAuthorityRequests: { [authority: string]: PendingResolveAuthorityRequest; };\n\n\tconstructor() {\n\t\tthis._resolveAuthorityRequests = Object.create(null);\n\t}\n\n\tresolveAuthority(authority: string): Promise<ResolvedAuthority> {\n\t\tif (!this._resolveAuthorityRequests[authority]) {\n\t\t\tlet resolve: (value: ResolvedAuthority) => void;\n\t\t\tlet reject: (err: any) => void;\n\t\t\tlet promise = new Promise<ResolvedAuthority>((_resolve, _reject) => {\n\t\t\t\tresolve = _resolve;\n\t\t\t\treject = _reject;\n\t\t\t});\n\t\t\tthis._resolveAuthorityRequests[authority] = new PendingResolveAuthorityRequest(resolve!, reject!, promise);\n\t\t}\n\t\treturn this._resolveAuthorityRequests[authority].promise;\n\t}\n\n\tsetResolvedAuthority(resolvedAuthority: ResolvedAuthority) {\n\t\tif (this._resolveAuthorityRequests[resolvedAuthority.authority]) {\n\t\t\tlet request = this._resolveAuthorityRequests[resolvedAuthority.authority];\n\t\t\tipc.send('vscode:remoteAuthorityResolved', resolvedAuthority);\n\t\t\trequest.resolve(resolvedAuthority);\n\t\t}\n\t}\n\n\tsetResolvedAuthorityError(authority: string, err: any): void {\n\t\tif (this._resolveAuthorityRequests[authority]) {\n\t\t\tlet request = this._resolveAuthorityRequests[authority];\n\t\t\trequest.reject(err);\n\t\t}\n\t}\n}\n"]}]}