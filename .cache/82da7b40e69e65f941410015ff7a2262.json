{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.RemoteExtensionLogFileName = 'remoteagent';\nexports.IRemoteAgentService = instantiation_1.createDecorator('remoteAgentService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAIpE,QAAA,0BAA0B,GAAG,aAAa,CAAC;AAE3C,QAAA,mBAAmB,GAAG,+BAAe,CAAsB,oBAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\t_serviceBrand: any;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\tgetEnvironment(bail?: boolean): Promise<IRemoteAgentEnvironment | null>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n"]}]}