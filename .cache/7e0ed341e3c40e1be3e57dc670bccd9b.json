{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/performance/electron-browser/perfviewEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/performance/electron-browser/perfviewEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar resourceEditorInput_1 = require(\"vs/workbench/common/editor/resourceEditorInput\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar timerService_1 = require(\"vs/workbench/services/timer/electron-browser/timerService\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar perf = require(\"vs/base/common/performance\");\nvar lifecycle_2 = require(\"vs/base/common/lifecycle\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar toggleWordWrap_1 = require(\"vs/workbench/contrib/codeEditor/browser/toggleWordWrap\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar package_1 = require(\"vs/platform/product/node/package\");\nvar PerfviewContrib = /** @class */ (function () {\n    function PerfviewContrib(instaService, textModelResolverService) {\n        this._registration = textModelResolverService.registerTextModelContentProvider('perf', instaService.createInstance(PerfModelContentProvider));\n    }\n    PerfviewContrib.prototype.dispose = function () {\n        this._registration.dispose();\n    };\n    PerfviewContrib = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService),\n        tslib_1.__param(1, resolverService_1.ITextModelService)\n    ], PerfviewContrib);\n    return PerfviewContrib;\n}());\nexports.PerfviewContrib = PerfviewContrib;\nvar PerfviewInput = /** @class */ (function (_super) {\n    tslib_1.__extends(PerfviewInput, _super);\n    function PerfviewInput(textModelResolverService) {\n        return _super.call(this, nls_1.localize('name', \"Startup Performance\"), null, PerfviewInput.Uri, textModelResolverService) || this;\n    }\n    PerfviewInput.prototype.getTypeId = function () {\n        return PerfviewInput.Id;\n    };\n    PerfviewInput.Id = 'PerfviewInput';\n    PerfviewInput.Uri = uri_1.URI.from({ scheme: 'perf', path: 'Startup Performance' });\n    PerfviewInput = tslib_1.__decorate([\n        tslib_1.__param(0, resolverService_1.ITextModelService)\n    ], PerfviewInput);\n    return PerfviewInput;\n}(resourceEditorInput_1.ResourceEditorInput));\nexports.PerfviewInput = PerfviewInput;\nvar PerfModelContentProvider = /** @class */ (function () {\n    function PerfModelContentProvider(_modelService, _modeService, _editorService, _lifecycleService, _timerService, _envService, _extensionService) {\n        this._modelService = _modelService;\n        this._modeService = _modeService;\n        this._editorService = _editorService;\n        this._lifecycleService = _lifecycleService;\n        this._timerService = _timerService;\n        this._envService = _envService;\n        this._extensionService = _extensionService;\n        this._modelDisposables = [];\n    }\n    PerfModelContentProvider.prototype.provideTextContent = function (resource) {\n        var _this = this;\n        if (!this._model || this._model.isDisposed()) {\n            lifecycle_2.dispose(this._modelDisposables);\n            var langId = this._modeService.create('markdown');\n            this._model = this._modelService.getModel(resource) || this._modelService.createModel('Loading...', langId, resource);\n            this._modelDisposables.push(langId.onDidChange(function (e) {\n                if (_this._model) {\n                    _this._model.setMode(e);\n                }\n            }));\n            this._modelDisposables.push(langId);\n            this._modelDisposables.push(this._extensionService.onDidChangeExtensionsStatus(this._updateModel, this));\n            toggleWordWrap_1.writeTransientState(this._model, { forceWordWrap: 'off', forceWordWrapMinified: false }, this._editorService);\n        }\n        this._updateModel();\n        return Promise.resolve(this._model);\n    };\n    PerfModelContentProvider.prototype._updateModel = function () {\n        var _this = this;\n        Promise.all([\n            this._timerService.startupMetrics,\n            this._lifecycleService.when(lifecycle_1.LifecyclePhase.Eventually),\n            this._extensionService.whenInstalledExtensionsRegistered()\n        ]).then(function (_a) {\n            var metrics = _a[0];\n            if (_this._model && !_this._model.isDisposed()) {\n                var stats = _this._envService.args['prof-modules'] ? LoaderStats.get() : undefined;\n                var md = new MarkdownBuilder();\n                _this._addSummary(md, metrics);\n                md.blank();\n                _this._addSummaryTable(md, metrics, stats);\n                md.blank();\n                _this._addExtensionsTable(md);\n                md.blank();\n                _this._addRawPerfMarks(md);\n                md.blank();\n                _this._addLoaderStats(md, stats);\n                _this._model.setValue(md.value);\n            }\n        });\n    };\n    PerfModelContentProvider.prototype._addSummary = function (md, metrics) {\n        md.heading(2, 'System Info');\n        md.li(product_1.default.nameShort + \": \" + package_1.default.version + \" (\" + (product_1.default.commit || '0000000') + \")\");\n        md.li(\"OS: \" + metrics.platform + \"(\" + metrics.release + \")\");\n        if (metrics.cpus) {\n            md.li(\"CPUs: \" + metrics.cpus.model + \"(\" + metrics.cpus.count + \" x \" + metrics.cpus.speed + \")\");\n        }\n        if (typeof metrics.totalmem === 'number' && typeof metrics.freemem === 'number') {\n            md.li(\"Memory(System): \" + (metrics.totalmem / (1024 * 1024 * 1024)).toFixed(2) + \" GB(\" + (metrics.freemem / (1024 * 1024 * 1024)).toFixed(2) + \"GB free)\");\n        }\n        if (metrics.meminfo) {\n            md.li(\"Memory(Process): \" + (metrics.meminfo.workingSetSize / 1024).toFixed(2) + \" MB working set(\" + (metrics.meminfo.peakWorkingSetSize / 1024).toFixed(2) + \"MB peak, \" + (metrics.meminfo.privateBytes / 1024).toFixed(2) + \"MB private, \" + (metrics.meminfo.sharedBytes / 1024).toFixed(2) + \"MB shared)\");\n        }\n        md.li(\"VM(likelyhood): \" + metrics.isVMLikelyhood + \"%\");\n        md.li(\"Initial Startup: \" + metrics.initialStartup);\n        md.li(\"Has \" + (metrics.windowCount - 1) + \" other windows\");\n        md.li(\"Screen Reader Active: \" + metrics.hasAccessibilitySupport);\n        md.li(\"Empty Workspace: \" + metrics.emptyWorkbench);\n    };\n    PerfModelContentProvider.prototype._addSummaryTable = function (md, metrics, stats) {\n        var table = [];\n        table.push(['start => app.isReady', metrics.timers.ellapsedAppReady, '[main]', \"initial startup: \" + metrics.initialStartup]);\n        table.push(['nls:start => nls:end', metrics.timers.ellapsedNlsGeneration, '[main]', \"initial startup: \" + metrics.initialStartup]);\n        table.push(['require(main.bundle.js)', metrics.initialStartup ? perf.getDuration('willLoadMainBundle', 'didLoadMainBundle') : undefined, '[main]', \"initial startup: \" + metrics.initialStartup]);\n        table.push(['app.isReady => window.loadUrl()', metrics.timers.ellapsedWindowLoad, '[main]', \"initial startup: \" + metrics.initialStartup]);\n        table.push(['window.loadUrl() => begin to require(workbench.main.js)', metrics.timers.ellapsedWindowLoadToRequire, '[main->renderer]', lifecycle_1.StartupKindToString(metrics.windowKind)]);\n        table.push(['require(workbench.main.js)', metrics.timers.ellapsedRequire, '[renderer]', \"cached data: \" + (metrics.didUseCachedData ? 'YES' : 'NO') + (stats ? \", node_modules took \" + stats.nodeRequireTotal + \"ms\" : '')]);\n        table.push(['require & init workspace storage', metrics.timers.ellapsedWorkspaceStorageInit, '[renderer]', undefined]);\n        table.push(['init workspace service', metrics.timers.ellapsedWorkspaceServiceInit, '[renderer]', undefined]);\n        table.push(['register extensions & spawn extension host', metrics.timers.ellapsedExtensions, '[renderer]', undefined]);\n        table.push(['restore viewlet', metrics.timers.ellapsedViewletRestore, '[renderer]', metrics.viewletId]);\n        table.push(['restore panel', metrics.timers.ellapsedPanelRestore, '[renderer]', metrics.panelId]);\n        table.push(['restore editors', metrics.timers.ellapsedEditorRestore, '[renderer]', metrics.editorIds.length + \": \" + metrics.editorIds.join(', ')]);\n        table.push(['overall workbench load', metrics.timers.ellapsedWorkbench, '[renderer]', undefined]);\n        table.push(['workbench ready', metrics.ellapsed, '[main->renderer]', undefined]);\n        table.push(['extensions registered', metrics.timers.ellapsedExtensionsReady, '[renderer]', undefined]);\n        md.heading(2, 'Performance Marks');\n        md.table(['What', 'Duration', 'Process', 'Info'], table);\n    };\n    PerfModelContentProvider.prototype._addExtensionsTable = function (md) {\n        var eager = [];\n        var normal = [];\n        var extensionsStatus = this._extensionService.getExtensionsStatus();\n        for (var id in extensionsStatus) {\n            var times = extensionsStatus[id].activationTimes;\n            if (!times) {\n                continue;\n            }\n            if (times.startup) {\n                eager.push([id, times.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationEvent]);\n            }\n            else {\n                normal.push([id, times.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationEvent]);\n            }\n        }\n        var table = eager.concat(normal);\n        if (table.length > 0) {\n            md.heading(2, 'Extension Activation Stats');\n            md.table(['Extension', 'Eager', 'Load Code', 'Call Activate', 'Finish Activate', 'Event'], table);\n        }\n    };\n    PerfModelContentProvider.prototype._addRawPerfMarks = function (md) {\n        md.heading(2, 'Raw Perf Marks');\n        md.value += '```\\n';\n        md.value += \"Name\\tTimestamp\\tDelta\\tTotal\\n\";\n        var lastStartTime = -1;\n        var total = 0;\n        for (var _i = 0, _a = perf.getEntries(); _i < _a.length; _i++) {\n            var _b = _a[_i], name = _b.name, startTime = _b.timestamp;\n            var delta = lastStartTime !== -1 ? startTime - lastStartTime : 0;\n            total += delta;\n            md.value += name + \"\\t\" + startTime + \"\\t\" + delta + \"\\t\" + total + \"\\n\";\n            lastStartTime = startTime;\n        }\n        md.value += '```\\n';\n    };\n    PerfModelContentProvider.prototype._addLoaderStats = function (md, stats) {\n        if (stats) {\n            md.heading(2, 'Loader Stats');\n            md.heading(3, 'Load AMD-module');\n            md.table(['Module', 'Duration'], stats.amdLoad);\n            md.blank();\n            md.heading(3, 'Load commonjs-module');\n            md.table(['Module', 'Duration'], stats.nodeRequire);\n            md.blank();\n            md.heading(3, 'Invoke AMD-module factory');\n            md.table(['Module', 'Duration'], stats.amdInvoke);\n            md.blank();\n            md.heading(3, 'Invoke commonjs-module');\n            md.table(['Module', 'Duration'], stats.nodeEval);\n        }\n    };\n    PerfModelContentProvider = tslib_1.__decorate([\n        tslib_1.__param(0, modelService_1.IModelService),\n        tslib_1.__param(1, modeService_1.IModeService),\n        tslib_1.__param(2, codeEditorService_1.ICodeEditorService),\n        tslib_1.__param(3, lifecycle_1.ILifecycleService),\n        tslib_1.__param(4, timerService_1.ITimerService),\n        tslib_1.__param(5, environment_1.IEnvironmentService),\n        tslib_1.__param(6, extensions_1.IExtensionService)\n    ], PerfModelContentProvider);\n    return PerfModelContentProvider;\n}());\nvar LoaderStats = /** @class */ (function () {\n    function LoaderStats() {\n    }\n    LoaderStats.get = function () {\n        var amdLoadScript = new Map();\n        var amdInvokeFactory = new Map();\n        var nodeRequire = new Map();\n        var nodeEval = new Map();\n        function mark(map, stat) {\n            if (map.has(stat.detail)) {\n                // console.warn('BAD events, DOUBLE start', stat);\n                // map.delete(stat.detail);\n                return;\n            }\n            map.set(stat.detail, -stat.timestamp);\n        }\n        function diff(map, stat) {\n            var duration = map.get(stat.detail);\n            if (!duration) {\n                // console.warn('BAD events, end WITHOUT start', stat);\n                // map.delete(stat.detail);\n                return;\n            }\n            if (duration >= 0) {\n                // console.warn('BAD events, DOUBLE end', stat);\n                // map.delete(stat.detail);\n                return;\n            }\n            map.set(stat.detail, duration + stat.timestamp);\n        }\n        var stats = arrays_1.mergeSort(require.getStats().slice(0), function (a, b) { return a.timestamp - b.timestamp; });\n        for (var _i = 0, stats_1 = stats; _i < stats_1.length; _i++) {\n            var stat = stats_1[_i];\n            switch (stat.type) {\n                case LoaderEventType.BeginLoadingScript:\n                    mark(amdLoadScript, stat);\n                    break;\n                case LoaderEventType.EndLoadingScriptOK:\n                case LoaderEventType.EndLoadingScriptError:\n                    diff(amdLoadScript, stat);\n                    break;\n                case LoaderEventType.BeginInvokeFactory:\n                    mark(amdInvokeFactory, stat);\n                    break;\n                case LoaderEventType.EndInvokeFactory:\n                    diff(amdInvokeFactory, stat);\n                    break;\n                case LoaderEventType.NodeBeginNativeRequire:\n                    mark(nodeRequire, stat);\n                    break;\n                case LoaderEventType.NodeEndNativeRequire:\n                    diff(nodeRequire, stat);\n                    break;\n                case LoaderEventType.NodeBeginEvaluatingScript:\n                    mark(nodeEval, stat);\n                    break;\n                case LoaderEventType.NodeEndEvaluatingScript:\n                    diff(nodeEval, stat);\n                    break;\n            }\n        }\n        var nodeRequireTotal = 0;\n        nodeRequire.forEach(function (value) { return nodeRequireTotal += value; });\n        function to2dArray(map) {\n            var res = [];\n            map.forEach(function (value, index) { return res.push([index, value]); });\n            return res;\n        }\n        return {\n            amdLoad: to2dArray(amdLoadScript),\n            amdInvoke: to2dArray(amdInvokeFactory),\n            nodeRequire: to2dArray(nodeRequire),\n            nodeEval: to2dArray(nodeEval),\n            nodeRequireTotal: nodeRequireTotal\n        };\n    };\n    return LoaderStats;\n}());\nvar MarkdownBuilder = /** @class */ (function () {\n    function MarkdownBuilder() {\n        this.value = '';\n    }\n    MarkdownBuilder.prototype.heading = function (level, value) {\n        this.value += strings_1.repeat('#', level) + \" \" + value + \"\\n\\n\";\n        return this;\n    };\n    MarkdownBuilder.prototype.blank = function () {\n        this.value += '\\n';\n        return this;\n    };\n    MarkdownBuilder.prototype.li = function (value) {\n        this.value += \"* \" + value + \"\\n\";\n        return this;\n    };\n    MarkdownBuilder.prototype.table = function (header, rows) {\n        var _this = this;\n        var lengths = [];\n        header.forEach(function (cell, ci) {\n            lengths[ci] = cell.length;\n        });\n        rows.forEach(function (row) {\n            row.forEach(function (cell, ci) {\n                if (typeof cell === 'undefined') {\n                    cell = row[ci] = '-';\n                }\n                var len = cell.toString().length;\n                lengths[ci] = Math.max(len, lengths[ci]);\n            });\n        });\n        // header\n        header.forEach(function (cell, ci) { _this.value += \"| \" + (cell + strings_1.repeat(' ', lengths[ci] - cell.toString().length)) + \" \"; });\n        this.value += '|\\n';\n        header.forEach(function (_cell, ci) { _this.value += \"| \" + strings_1.repeat('-', lengths[ci]) + \" \"; });\n        this.value += '|\\n';\n        // cells\n        rows.forEach(function (row) {\n            row.forEach(function (cell, ci) {\n                if (typeof cell !== 'undefined') {\n                    _this.value += \"| \" + (cell + strings_1.repeat(' ', lengths[ci] - cell.toString().length)) + \" \";\n                }\n            });\n            _this.value += '|\\n';\n        });\n    };\n    return MarkdownBuilder;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/performance/electron-browser/perfviewEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/performance/electron-browser/perfviewEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { ResourceEditorInput } from 'vs/workbench/common/editor/resourceEditorInput';\nimport { ITextModelService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILifecycleService, LifecyclePhase, StartupKindToString } from 'vs/platform/lifecycle/common/lifecycle';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ITimerService, IStartupMetrics } from 'vs/workbench/services/timer/electron-browser/timerService';\nimport { repeat } from 'vs/base/common/strings';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport * as perf from 'vs/base/common/performance';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { writeTransientState } from 'vs/workbench/contrib/codeEditor/browser/toggleWordWrap';\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\n\nexport class PerfviewContrib {\n\n\tprivate readonly _registration: IDisposable;\n\n\tconstructor(\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t\t@ITextModelService textModelResolverService: ITextModelService\n\t) {\n\t\tthis._registration = textModelResolverService.registerTextModelContentProvider('perf', instaService.createInstance(PerfModelContentProvider));\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t}\n}\n\nexport class PerfviewInput extends ResourceEditorInput {\n\n\tstatic readonly Id = 'PerfviewInput';\n\tstatic readonly Uri = URI.from({ scheme: 'perf', path: 'Startup Performance' });\n\n\tconstructor(\n\t\t@ITextModelService textModelResolverService: ITextModelService\n\t) {\n\t\tsuper(\n\t\t\tlocalize('name', \"Startup Performance\"),\n\t\t\tnull,\n\t\t\tPerfviewInput.Uri,\n\t\t\ttextModelResolverService\n\t\t);\n\t}\n\n\tgetTypeId(): string {\n\t\treturn PerfviewInput.Id;\n\t}\n}\n\nclass PerfModelContentProvider implements ITextModelContentProvider {\n\n\tprivate _model: ITextModel | undefined;\n\tprivate _modelDisposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@ILifecycleService private readonly _lifecycleService: ILifecycleService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@IEnvironmentService private readonly _envService: IEnvironmentService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t) { }\n\n\tprovideTextContent(resource: URI): Promise<ITextModel> {\n\n\t\tif (!this._model || this._model.isDisposed()) {\n\t\t\tdispose(this._modelDisposables);\n\t\t\tconst langId = this._modeService.create('markdown');\n\t\t\tthis._model = this._modelService.getModel(resource) || this._modelService.createModel('Loading...', langId, resource);\n\n\t\t\tthis._modelDisposables.push(langId.onDidChange(e => {\n\t\t\t\tif (this._model) {\n\t\t\t\t\tthis._model.setMode(e);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._modelDisposables.push(langId);\n\t\t\tthis._modelDisposables.push(this._extensionService.onDidChangeExtensionsStatus(this._updateModel, this));\n\n\t\t\twriteTransientState(this._model, { forceWordWrap: 'off', forceWordWrapMinified: false }, this._editorService);\n\t\t}\n\t\tthis._updateModel();\n\t\treturn Promise.resolve(this._model);\n\t}\n\n\tprivate _updateModel(): void {\n\n\t\tPromise.all([\n\t\t\tthis._timerService.startupMetrics,\n\t\t\tthis._lifecycleService.when(LifecyclePhase.Eventually),\n\t\t\tthis._extensionService.whenInstalledExtensionsRegistered()\n\t\t]).then(([metrics]) => {\n\t\t\tif (this._model && !this._model.isDisposed()) {\n\n\t\t\t\tlet stats = this._envService.args['prof-modules'] ? LoaderStats.get() : undefined;\n\t\t\t\tlet md = new MarkdownBuilder();\n\t\t\t\tthis._addSummary(md, metrics);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addSummaryTable(md, metrics, stats);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addExtensionsTable(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addRawPerfMarks(md);\n\t\t\t\tmd.blank();\n\t\t\t\tthis._addLoaderStats(md, stats);\n\n\t\t\t\tthis._model.setValue(md.value);\n\t\t\t}\n\t\t});\n\n\t}\n\n\tprivate _addSummary(md: MarkdownBuilder, metrics: IStartupMetrics): void {\n\t\tmd.heading(2, 'System Info');\n\t\tmd.li(`${product.nameShort}: ${pkg.version} (${product.commit || '0000000'})`);\n\t\tmd.li(`OS: ${metrics.platform}(${metrics.release})`);\n\t\tif (metrics.cpus) {\n\t\t\tmd.li(`CPUs: ${metrics.cpus.model}(${metrics.cpus.count} x ${metrics.cpus.speed})`);\n\t\t}\n\t\tif (typeof metrics.totalmem === 'number' && typeof metrics.freemem === 'number') {\n\t\t\tmd.li(`Memory(System): ${(metrics.totalmem / (1024 * 1024 * 1024)).toFixed(2)} GB(${(metrics.freemem / (1024 * 1024 * 1024)).toFixed(2)}GB free)`);\n\t\t}\n\t\tif (metrics.meminfo) {\n\t\t\tmd.li(`Memory(Process): ${(metrics.meminfo.workingSetSize / 1024).toFixed(2)} MB working set(${(metrics.meminfo.peakWorkingSetSize / 1024).toFixed(2)}MB peak, ${(metrics.meminfo.privateBytes / 1024).toFixed(2)}MB private, ${(metrics.meminfo.sharedBytes / 1024).toFixed(2)}MB shared)`);\n\t\t}\n\t\tmd.li(`VM(likelyhood): ${metrics.isVMLikelyhood}%`);\n\t\tmd.li(`Initial Startup: ${metrics.initialStartup}`);\n\t\tmd.li(`Has ${metrics.windowCount - 1} other windows`);\n\t\tmd.li(`Screen Reader Active: ${metrics.hasAccessibilitySupport}`);\n\t\tmd.li(`Empty Workspace: ${metrics.emptyWorkbench}`);\n\t}\n\n\tprivate _addSummaryTable(md: MarkdownBuilder, metrics: IStartupMetrics, stats?: LoaderStats): void {\n\n\t\tconst table: Array<Array<string | number | undefined>> = [];\n\t\ttable.push(['start => app.isReady', metrics.timers.ellapsedAppReady, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['nls:start => nls:end', metrics.timers.ellapsedNlsGeneration, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['require(main.bundle.js)', metrics.initialStartup ? perf.getDuration('willLoadMainBundle', 'didLoadMainBundle') : undefined, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['app.isReady => window.loadUrl()', metrics.timers.ellapsedWindowLoad, '[main]', `initial startup: ${metrics.initialStartup}`]);\n\t\ttable.push(['window.loadUrl() => begin to require(workbench.main.js)', metrics.timers.ellapsedWindowLoadToRequire, '[main->renderer]', StartupKindToString(metrics.windowKind)]);\n\t\ttable.push(['require(workbench.main.js)', metrics.timers.ellapsedRequire, '[renderer]', `cached data: ${(metrics.didUseCachedData ? 'YES' : 'NO')}${stats ? `, node_modules took ${stats.nodeRequireTotal}ms` : ''}`]);\n\t\ttable.push(['require & init workspace storage', metrics.timers.ellapsedWorkspaceStorageInit, '[renderer]', undefined]);\n\t\ttable.push(['init workspace service', metrics.timers.ellapsedWorkspaceServiceInit, '[renderer]', undefined]);\n\t\ttable.push(['register extensions & spawn extension host', metrics.timers.ellapsedExtensions, '[renderer]', undefined]);\n\t\ttable.push(['restore viewlet', metrics.timers.ellapsedViewletRestore, '[renderer]', metrics.viewletId]);\n\t\ttable.push(['restore panel', metrics.timers.ellapsedPanelRestore, '[renderer]', metrics.panelId]);\n\t\ttable.push(['restore editors', metrics.timers.ellapsedEditorRestore, '[renderer]', `${metrics.editorIds.length}: ${metrics.editorIds.join(', ')}`]);\n\t\ttable.push(['overall workbench load', metrics.timers.ellapsedWorkbench, '[renderer]', undefined]);\n\t\ttable.push(['workbench ready', metrics.ellapsed, '[main->renderer]', undefined]);\n\t\ttable.push(['extensions registered', metrics.timers.ellapsedExtensionsReady, '[renderer]', undefined]);\n\n\t\tmd.heading(2, 'Performance Marks');\n\t\tmd.table(['What', 'Duration', 'Process', 'Info'], table);\n\t}\n\n\tprivate _addExtensionsTable(md: MarkdownBuilder): void {\n\n\t\tconst eager: ({ toString(): string })[][] = [];\n\t\tconst normal: ({ toString(): string })[][] = [];\n\t\tlet extensionsStatus = this._extensionService.getExtensionsStatus();\n\t\tfor (let id in extensionsStatus) {\n\t\t\tconst { activationTimes: times } = extensionsStatus[id];\n\t\t\tif (!times) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (times.startup) {\n\t\t\t\teager.push([id, times.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationEvent]);\n\t\t\t} else {\n\t\t\t\tnormal.push([id, times.startup, times.codeLoadingTime, times.activateCallTime, times.activateResolvedTime, times.activationEvent]);\n\t\t\t}\n\t\t}\n\n\t\tconst table = eager.concat(normal);\n\t\tif (table.length > 0) {\n\t\t\tmd.heading(2, 'Extension Activation Stats');\n\t\t\tmd.table(\n\t\t\t\t['Extension', 'Eager', 'Load Code', 'Call Activate', 'Finish Activate', 'Event'],\n\t\t\t\ttable\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _addRawPerfMarks(md: MarkdownBuilder): void {\n\t\tmd.heading(2, 'Raw Perf Marks');\n\t\tmd.value += '```\\n';\n\t\tmd.value += `Name\\tTimestamp\\tDelta\\tTotal\\n`;\n\t\tlet lastStartTime = -1;\n\t\tlet total = 0;\n\t\tfor (const { name, timestamp: startTime } of perf.getEntries()) {\n\t\t\tlet delta = lastStartTime !== -1 ? startTime - lastStartTime : 0;\n\t\t\ttotal += delta;\n\t\t\tmd.value += `${name}\\t${startTime}\\t${delta}\\t${total}\\n`;\n\t\t\tlastStartTime = startTime;\n\t\t}\n\t\tmd.value += '```\\n';\n\t}\n\n\tprivate _addLoaderStats(md: MarkdownBuilder, stats?: LoaderStats): void {\n\t\tif (stats) {\n\t\t\tmd.heading(2, 'Loader Stats');\n\t\t\tmd.heading(3, 'Load AMD-module');\n\t\t\tmd.table(['Module', 'Duration'], stats.amdLoad);\n\t\t\tmd.blank();\n\t\t\tmd.heading(3, 'Load commonjs-module');\n\t\t\tmd.table(['Module', 'Duration'], stats.nodeRequire);\n\t\t\tmd.blank();\n\t\t\tmd.heading(3, 'Invoke AMD-module factory');\n\t\t\tmd.table(['Module', 'Duration'], stats.amdInvoke);\n\t\t\tmd.blank();\n\t\t\tmd.heading(3, 'Invoke commonjs-module');\n\t\t\tmd.table(['Module', 'Duration'], stats.nodeEval);\n\t\t}\n\t}\n}\n\nabstract class LoaderStats {\n\treadonly amdLoad: (string | number)[][];\n\treadonly amdInvoke: (string | number)[][];\n\treadonly nodeRequire: (string | number)[][];\n\treadonly nodeEval: (string | number)[][];\n\treadonly nodeRequireTotal: number;\n\n\n\tstatic get(): LoaderStats {\n\n\n\t\tconst amdLoadScript = new Map<string, number>();\n\t\tconst amdInvokeFactory = new Map<string, number>();\n\t\tconst nodeRequire = new Map<string, number>();\n\t\tconst nodeEval = new Map<string, number>();\n\n\t\tfunction mark(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tif (map.has(stat.detail)) {\n\t\t\t\t// console.warn('BAD events, DOUBLE start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, -stat.timestamp);\n\t\t}\n\n\t\tfunction diff(map: Map<string, number>, stat: LoaderEvent) {\n\t\t\tlet duration = map.get(stat.detail);\n\t\t\tif (!duration) {\n\t\t\t\t// console.warn('BAD events, end WITHOUT start', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (duration >= 0) {\n\t\t\t\t// console.warn('BAD events, DOUBLE end', stat);\n\t\t\t\t// map.delete(stat.detail);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmap.set(stat.detail, duration + stat.timestamp);\n\t\t}\n\n\t\tconst stats = mergeSort(require.getStats().slice(0), (a, b) => a.timestamp - b.timestamp);\n\n\t\tfor (const stat of stats) {\n\t\t\tswitch (stat.type) {\n\t\t\t\tcase LoaderEventType.BeginLoadingScript:\n\t\t\t\t\tmark(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndLoadingScriptOK:\n\t\t\t\tcase LoaderEventType.EndLoadingScriptError:\n\t\t\t\t\tdiff(amdLoadScript, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.BeginInvokeFactory:\n\t\t\t\t\tmark(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.EndInvokeFactory:\n\t\t\t\t\tdiff(amdInvokeFactory, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginNativeRequire:\n\t\t\t\t\tmark(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndNativeRequire:\n\t\t\t\t\tdiff(nodeRequire, stat);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LoaderEventType.NodeBeginEvaluatingScript:\n\t\t\t\t\tmark(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LoaderEventType.NodeEndEvaluatingScript:\n\t\t\t\t\tdiff(nodeEval, stat);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet nodeRequireTotal = 0;\n\t\tnodeRequire.forEach(value => nodeRequireTotal += value);\n\n\t\tfunction to2dArray(map: Map<string, number>): (string | number)[][] {\n\t\t\tlet res: (string | number)[][] = [];\n\t\t\tmap.forEach((value, index) => res.push([index, value]));\n\t\t\treturn res;\n\t\t}\n\n\t\treturn {\n\t\t\tamdLoad: to2dArray(amdLoadScript),\n\t\t\tamdInvoke: to2dArray(amdInvokeFactory),\n\t\t\tnodeRequire: to2dArray(nodeRequire),\n\t\t\tnodeEval: to2dArray(nodeEval),\n\t\t\tnodeRequireTotal\n\t\t};\n\t}\n}\n\nclass MarkdownBuilder {\n\n\tvalue: string = '';\n\n\theading(level: number, value: string): this {\n\t\tthis.value += `${repeat('#', level)} ${value}\\n\\n`;\n\t\treturn this;\n\t}\n\n\tblank() {\n\t\tthis.value += '\\n';\n\t\treturn this;\n\t}\n\n\tli(value: string) {\n\t\tthis.value += `* ${value}\\n`;\n\t\treturn this;\n\t}\n\n\ttable(header: string[], rows: Array<Array<{ toString(): string } | undefined>>) {\n\t\tlet lengths: number[] = [];\n\t\theader.forEach((cell, ci) => {\n\t\t\tlengths[ci] = cell.length;\n\t\t});\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell === 'undefined') {\n\t\t\t\t\tcell = row[ci] = '-';\n\t\t\t\t}\n\t\t\t\tconst len = cell.toString().length;\n\t\t\t\tlengths[ci] = Math.max(len, lengths[ci]);\n\t\t\t});\n\t\t});\n\n\t\t// header\n\t\theader.forEach((cell, ci) => { this.value += `| ${cell + repeat(' ', lengths[ci] - cell.toString().length)} `; });\n\t\tthis.value += '|\\n';\n\t\theader.forEach((_cell, ci) => { this.value += `| ${repeat('-', lengths[ci])} `; });\n\t\tthis.value += '|\\n';\n\n\t\t// cells\n\t\trows.forEach(row => {\n\t\t\trow.forEach((cell, ci) => {\n\t\t\t\tif (typeof cell !== 'undefined') {\n\t\t\t\t\tthis.value += `| ${cell + repeat(' ', lengths[ci] - cell.toString().length)} `;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.value += '|\\n';\n\t\t});\n\n\t}\n}\n"]}]}