{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffEditorWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffEditorWidget.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/diffEditor\");\nvar nls = require(\"vs/nls\");\nvar dom = require(\"vs/base/browser/dom\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar sash_1 = require(\"vs/base/browser/ui/sash/sash\");\nvar async_1 = require(\"vs/base/common/async\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar objects = require(\"vs/base/common/objects\");\nvar configuration_1 = require(\"vs/editor/browser/config/configuration\");\nvar editorState_1 = require(\"vs/editor/browser/core/editorState\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar codeEditorWidget_1 = require(\"vs/editor/browser/widget/codeEditorWidget\");\nvar diffReview_1 = require(\"vs/editor/browser/widget/diffReview\");\nvar editorOptions = require(\"vs/editor/common/config/editorOptions\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar stringBuilder_1 = require(\"vs/editor/common/core/stringBuilder\");\nvar editorCommon = require(\"vs/editor/common/editorCommon\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar editorWorkerService_1 = require(\"vs/editor/common/services/editorWorkerService\");\nvar overviewZoneManager_1 = require(\"vs/editor/common/view/overviewZoneManager\");\nvar lineDecorations_1 = require(\"vs/editor/common/viewLayout/lineDecorations\");\nvar viewLineRenderer_1 = require(\"vs/editor/common/viewLayout/viewLineRenderer\");\nvar viewModel_1 = require(\"vs/editor/common/viewModel/viewModel\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar serviceCollection_1 = require(\"vs/platform/instantiation/common/serviceCollection\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar VisualEditorState = /** @class */ (function () {\n    function VisualEditorState() {\n        this._zones = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    VisualEditorState.prototype.getForeignViewZones = function (allViewZones) {\n        var _this = this;\n        return allViewZones.filter(function (z) { return !_this._zonesMap[String(z.id)]; });\n    };\n    VisualEditorState.prototype.clean = function (editor) {\n        var _this = this;\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones(function (viewChangeAccessor) {\n                for (var i = 0, length = _this._zones.length; i < length; i++) {\n                    viewChangeAccessor.removeZone(_this._zones[i]);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        this._decorations = editor.deltaDecorations(this._decorations, []);\n    };\n    VisualEditorState.prototype.apply = function (editor, overviewRuler, newDecorations, restoreScrollState) {\n        var _this = this;\n        var scrollState = restoreScrollState ? editorState_1.StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones(function (viewChangeAccessor) {\n            for (var i = 0, length = _this._zones.length; i < length; i++) {\n                viewChangeAccessor.removeZone(_this._zones[i]);\n            }\n            _this._zones = [];\n            _this._zonesMap = {};\n            for (var i = 0, length = newDecorations.zones.length; i < length; i++) {\n                newDecorations.zones[i].suppressMouseDown = true;\n                var zoneId = viewChangeAccessor.addZone(newDecorations.zones[i]);\n                _this._zones.push(zoneId);\n                _this._zonesMap[String(zoneId)] = true;\n            }\n        });\n        if (scrollState) {\n            scrollState.restore(editor);\n        }\n        // decorations\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\n        // overview ruler\n        if (overviewRuler) {\n            overviewRuler.setZones(newDecorations.overviewZones);\n        }\n    };\n    return VisualEditorState;\n}());\nvar DIFF_EDITOR_ID = 0;\nvar DiffEditorWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffEditorWidget, _super);\n    function DiffEditorWidget(domElement, options, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService) {\n        var _this = _super.call(this) || this;\n        _this._onDidDispose = _this._register(new event_1.Emitter());\n        _this.onDidDispose = _this._onDidDispose.event;\n        _this._onDidUpdateDiff = _this._register(new event_1.Emitter());\n        _this.onDidUpdateDiff = _this._onDidUpdateDiff.event;\n        _this._lastOriginalWarning = null;\n        _this._lastModifiedWarning = null;\n        _this._editorWorkerService = editorWorkerService;\n        _this._codeEditorService = codeEditorService;\n        _this._contextKeyService = _this._register(contextKeyService.createScoped(domElement));\n        _this._contextKeyService.createKey('isInDiffEditor', true);\n        _this._themeService = themeService;\n        _this._notificationService = notificationService;\n        _this.id = (++DIFF_EDITOR_ID);\n        _this._domElement = domElement;\n        options = options || {};\n        // renderSideBySide\n        _this._renderSideBySide = true;\n        if (typeof options.renderSideBySide !== 'undefined') {\n            _this._renderSideBySide = options.renderSideBySide;\n        }\n        // ignoreTrimWhitespace\n        _this._ignoreTrimWhitespace = true;\n        if (typeof options.ignoreTrimWhitespace !== 'undefined') {\n            _this._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\n        }\n        // renderIndicators\n        _this._renderIndicators = true;\n        if (typeof options.renderIndicators !== 'undefined') {\n            _this._renderIndicators = options.renderIndicators;\n        }\n        _this._originalIsEditable = false;\n        if (typeof options.originalEditable !== 'undefined') {\n            _this._originalIsEditable = Boolean(options.originalEditable);\n        }\n        _this._updateDecorationsRunner = _this._register(new async_1.RunOnceScheduler(function () { return _this._updateDecorations(); }, 0));\n        _this._containerDomElement = document.createElement('div');\n        _this._containerDomElement.className = DiffEditorWidget._getClassName(_this._themeService.getTheme(), _this._renderSideBySide);\n        _this._containerDomElement.style.position = 'relative';\n        _this._containerDomElement.style.height = '100%';\n        _this._domElement.appendChild(_this._containerDomElement);\n        _this._overviewViewportDomElement = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this._overviewViewportDomElement.setClassName('diffViewport');\n        _this._overviewViewportDomElement.setPosition('absolute');\n        _this._overviewDomElement = document.createElement('div');\n        _this._overviewDomElement.className = 'diffOverview';\n        _this._overviewDomElement.style.position = 'absolute';\n        _this._overviewDomElement.appendChild(_this._overviewViewportDomElement.domNode);\n        _this._register(dom.addStandardDisposableListener(_this._overviewDomElement, 'mousedown', function (e) {\n            _this.modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n        }));\n        _this._containerDomElement.appendChild(_this._overviewDomElement);\n        _this._createLeftHandSide();\n        _this._createRightHandSide();\n        _this._beginUpdateDecorationsTimeout = -1;\n        _this._currentlyChangingViewZones = false;\n        _this._diffComputationToken = 0;\n        _this._originalEditorState = new VisualEditorState();\n        _this._modifiedEditorState = new VisualEditorState();\n        _this._isVisible = true;\n        _this._isHandlingScrollEvent = false;\n        _this._width = 0;\n        _this._height = 0;\n        _this._reviewHeight = 0;\n        _this._diffComputationResult = null;\n        var leftContextKeyService = _this._contextKeyService.createScoped();\n        leftContextKeyService.createKey('isInDiffLeftEditor', true);\n        var leftServices = new serviceCollection_1.ServiceCollection();\n        leftServices.set(contextkey_1.IContextKeyService, leftContextKeyService);\n        var leftScopedInstantiationService = instantiationService.createChild(leftServices);\n        var rightContextKeyService = _this._contextKeyService.createScoped();\n        rightContextKeyService.createKey('isInDiffRightEditor', true);\n        var rightServices = new serviceCollection_1.ServiceCollection();\n        rightServices.set(contextkey_1.IContextKeyService, rightContextKeyService);\n        var rightScopedInstantiationService = instantiationService.createChild(rightServices);\n        _this._createLeftHandSideEditor(options, leftScopedInstantiationService);\n        _this._createRightHandSideEditor(options, rightScopedInstantiationService);\n        _this._reviewPane = new diffReview_1.DiffReview(_this);\n        _this._containerDomElement.appendChild(_this._reviewPane.domNode.domNode);\n        _this._containerDomElement.appendChild(_this._reviewPane.shadow.domNode);\n        _this._containerDomElement.appendChild(_this._reviewPane.actionBarContainer.domNode);\n        if (options.automaticLayout) {\n            _this._measureDomElementToken = window.setInterval(function () { return _this._measureDomElement(false); }, 100);\n        }\n        // enableSplitViewResizing\n        _this._enableSplitViewResizing = true;\n        if (typeof options.enableSplitViewResizing !== 'undefined') {\n            _this._enableSplitViewResizing = options.enableSplitViewResizing;\n        }\n        if (_this._renderSideBySide) {\n            _this._setStrategy(new DiffEdtorWidgetSideBySide(_this._createDataSource(), _this._enableSplitViewResizing));\n        }\n        else {\n            _this._setStrategy(new DiffEdtorWidgetInline(_this._createDataSource(), _this._enableSplitViewResizing));\n        }\n        _this._register(themeService.onThemeChange(function (t) {\n            if (_this._strategy && _this._strategy.applyColors(t)) {\n                _this._updateDecorationsRunner.schedule();\n            }\n            _this._containerDomElement.className = DiffEditorWidget._getClassName(_this._themeService.getTheme(), _this._renderSideBySide);\n        }));\n        _this._codeEditorService.addDiffEditor(_this);\n        return _this;\n    }\n    Object.defineProperty(DiffEditorWidget.prototype, \"ignoreTrimWhitespace\", {\n        get: function () {\n            return this._ignoreTrimWhitespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiffEditorWidget.prototype, \"renderSideBySide\", {\n        get: function () {\n            return this._renderSideBySide;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiffEditorWidget.prototype, \"renderIndicators\", {\n        get: function () {\n            return this._renderIndicators;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DiffEditorWidget.prototype.hasWidgetFocus = function () {\n        return dom.isAncestor(document.activeElement, this._domElement);\n    };\n    DiffEditorWidget.prototype.diffReviewNext = function () {\n        this._reviewPane.next();\n    };\n    DiffEditorWidget.prototype.diffReviewPrev = function () {\n        this._reviewPane.prev();\n    };\n    DiffEditorWidget._getClassName = function (theme, renderSideBySide) {\n        var result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += themeService_1.getThemeTypeSelector(theme.type);\n        return result;\n    };\n    DiffEditorWidget.prototype._recreateOverviewRulers = function () {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this.originalEditor.hasModel()) {\n            this._originalOverviewRuler = this.originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        if (this.modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this.modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    };\n    DiffEditorWidget.prototype._createLeftHandSide = function () {\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n    };\n    DiffEditorWidget.prototype._createRightHandSide = function () {\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n    };\n    DiffEditorWidget.prototype._createLeftHandSideEditor = function (options, instantiationService) {\n        var _this = this;\n        this.originalEditor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options, this._originalIsEditable));\n        this._register(this.originalEditor.onDidScrollChange(function (e) {\n            if (_this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            _this._isHandlingScrollEvent = true;\n            _this.modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            _this._isHandlingScrollEvent = false;\n            _this._layoutOverviewViewport();\n        }));\n        this._register(this.originalEditor.onDidChangeViewZones(function () {\n            _this._onViewZonesChanged();\n        }));\n        this._register(this.originalEditor.onDidChangeModelContent(function () {\n            if (_this._isVisible) {\n                _this._beginUpdateDecorationsSoon();\n            }\n        }));\n    };\n    DiffEditorWidget.prototype._createRightHandSideEditor = function (options, instantiationService) {\n        var _this = this;\n        this.modifiedEditor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options));\n        this._register(this.modifiedEditor.onDidScrollChange(function (e) {\n            if (_this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            _this._isHandlingScrollEvent = true;\n            _this.originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            _this._isHandlingScrollEvent = false;\n            _this._layoutOverviewViewport();\n        }));\n        this._register(this.modifiedEditor.onDidChangeViewZones(function () {\n            _this._onViewZonesChanged();\n        }));\n        this._register(this.modifiedEditor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo && _this.modifiedEditor.getModel()) {\n                _this._onViewZonesChanged();\n            }\n        }));\n        this._register(this.modifiedEditor.onDidChangeModelContent(function () {\n            if (_this._isVisible) {\n                _this._beginUpdateDecorationsSoon();\n            }\n        }));\n    };\n    DiffEditorWidget.prototype._createInnerEditor = function (instantiationService, container, options) {\n        return instantiationService.createInstance(codeEditorWidget_1.CodeEditorWidget, container, options, {});\n    };\n    DiffEditorWidget.prototype.dispose = function () {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        window.clearInterval(this._measureDomElementToken);\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        this._containerDomElement.removeChild(this._overviewDomElement);\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this.originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this.modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        _super.prototype.dispose.call(this);\n    };\n    //------------ begin IDiffEditor methods\n    DiffEditorWidget.prototype.getId = function () {\n        return this.getEditorType() + ':' + this.id;\n    };\n    DiffEditorWidget.prototype.getEditorType = function () {\n        return editorCommon.EditorType.IDiffEditor;\n    };\n    DiffEditorWidget.prototype.getLineChanges = function () {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    };\n    DiffEditorWidget.prototype.getOriginalEditor = function () {\n        return this.originalEditor;\n    };\n    DiffEditorWidget.prototype.getModifiedEditor = function () {\n        return this.modifiedEditor;\n    };\n    DiffEditorWidget.prototype.updateOptions = function (newOptions) {\n        // Handle side by side\n        var renderSideBySideChanged = false;\n        if (typeof newOptions.renderSideBySide !== 'undefined') {\n            if (this._renderSideBySide !== newOptions.renderSideBySide) {\n                this._renderSideBySide = newOptions.renderSideBySide;\n                renderSideBySideChanged = true;\n            }\n        }\n        var beginUpdateDecorations = false;\n        if (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\n            if (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\n                this._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\n                // Begin comparing\n                beginUpdateDecorations = true;\n            }\n        }\n        if (typeof newOptions.renderIndicators !== 'undefined') {\n            if (this._renderIndicators !== newOptions.renderIndicators) {\n                this._renderIndicators = newOptions.renderIndicators;\n                beginUpdateDecorations = true;\n            }\n        }\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        if (typeof newOptions.originalEditable !== 'undefined') {\n            this._originalIsEditable = Boolean(newOptions.originalEditable);\n        }\n        this.modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\n        this.originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions, this._originalIsEditable));\n        // enableSplitViewResizing\n        if (typeof newOptions.enableSplitViewResizing !== 'undefined') {\n            this._enableSplitViewResizing = newOptions.enableSplitViewResizing;\n        }\n        this._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\n        // renderSideBySide\n        if (renderSideBySideChanged) {\n            if (this._renderSideBySide) {\n                this._setStrategy(new DiffEdtorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEdtorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getTheme(), this._renderSideBySide);\n        }\n    };\n    DiffEditorWidget.prototype.getModel = function () {\n        return {\n            original: this.originalEditor.getModel(),\n            modified: this.modifiedEditor.getModel()\n        };\n    };\n    DiffEditorWidget.prototype.setModel = function (model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        // Update code editor models\n        this.originalEditor.setModel(model ? model.original : null);\n        this.modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        if (model) {\n            this.originalEditor.setScrollTop(0);\n            this.modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        if (model) {\n            this._recreateOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        else {\n            this._diffComputationResult = null;\n        }\n        this._layoutOverviewViewport();\n    };\n    DiffEditorWidget.prototype.getDomNode = function () {\n        return this._domElement;\n    };\n    DiffEditorWidget.prototype.getVisibleColumnFromPosition = function (position) {\n        return this.modifiedEditor.getVisibleColumnFromPosition(position);\n    };\n    DiffEditorWidget.prototype.getPosition = function () {\n        return this.modifiedEditor.getPosition();\n    };\n    DiffEditorWidget.prototype.setPosition = function (position) {\n        this.modifiedEditor.setPosition(position);\n    };\n    DiffEditorWidget.prototype.revealLine = function (lineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLine(lineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealLineInCenter = function (lineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealLineInCenterIfOutsideViewport = function (lineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealPosition = function (position, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealPosition(position, scrollType);\n    };\n    DiffEditorWidget.prototype.revealPositionInCenter = function (position, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealPositionInCenter(position, scrollType);\n    };\n    DiffEditorWidget.prototype.revealPositionInCenterIfOutsideViewport = function (position, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    };\n    DiffEditorWidget.prototype.getSelection = function () {\n        return this.modifiedEditor.getSelection();\n    };\n    DiffEditorWidget.prototype.getSelections = function () {\n        return this.modifiedEditor.getSelections();\n    };\n    DiffEditorWidget.prototype.setSelection = function (something) {\n        this.modifiedEditor.setSelection(something);\n    };\n    DiffEditorWidget.prototype.setSelections = function (ranges) {\n        this.modifiedEditor.setSelections(ranges);\n    };\n    DiffEditorWidget.prototype.revealLines = function (startLineNumber, endLineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealLinesInCenter = function (startLineNumber, endLineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealLinesInCenterIfOutsideViewport = function (startLineNumber, endLineNumber, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    };\n    DiffEditorWidget.prototype.revealRange = function (range, scrollType, revealVerticalInCenter, revealHorizontal) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        if (revealVerticalInCenter === void 0) { revealVerticalInCenter = false; }\n        if (revealHorizontal === void 0) { revealHorizontal = true; }\n        this.modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    };\n    DiffEditorWidget.prototype.revealRangeInCenter = function (range, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealRangeInCenter(range, scrollType);\n    };\n    DiffEditorWidget.prototype.revealRangeInCenterIfOutsideViewport = function (range, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    };\n    DiffEditorWidget.prototype.revealRangeAtTop = function (range, scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon.ScrollType.Smooth; }\n        this.modifiedEditor.revealRangeAtTop(range, scrollType);\n    };\n    DiffEditorWidget.prototype.getSupportedActions = function () {\n        return this.modifiedEditor.getSupportedActions();\n    };\n    DiffEditorWidget.prototype.saveViewState = function () {\n        var originalViewState = this.originalEditor.saveViewState();\n        var modifiedViewState = this.modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    };\n    DiffEditorWidget.prototype.restoreViewState = function (s) {\n        if (s.original && s.modified) {\n            var diffEditorState = s;\n            this.originalEditor.restoreViewState(diffEditorState.original);\n            this.modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    };\n    DiffEditorWidget.prototype.layout = function (dimension) {\n        this._measureDomElement(false, dimension);\n    };\n    DiffEditorWidget.prototype.focus = function () {\n        this.modifiedEditor.focus();\n    };\n    DiffEditorWidget.prototype.hasTextFocus = function () {\n        return this.originalEditor.hasTextFocus() || this.modifiedEditor.hasTextFocus();\n    };\n    DiffEditorWidget.prototype.onVisible = function () {\n        this._isVisible = true;\n        this.originalEditor.onVisible();\n        this.modifiedEditor.onVisible();\n        // Begin comparing\n        this._beginUpdateDecorations();\n    };\n    DiffEditorWidget.prototype.onHide = function () {\n        this._isVisible = false;\n        this.originalEditor.onHide();\n        this.modifiedEditor.onHide();\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n    };\n    DiffEditorWidget.prototype.trigger = function (source, handlerId, payload) {\n        this.modifiedEditor.trigger(source, handlerId, payload);\n    };\n    DiffEditorWidget.prototype.changeDecorations = function (callback) {\n        return this.modifiedEditor.changeDecorations(callback);\n    };\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    DiffEditorWidget.prototype._measureDomElement = function (forceDoLayoutCall, dimensions) {\n        dimensions = dimensions || {\n            width: this._containerDomElement.clientWidth,\n            height: this._containerDomElement.clientHeight\n        };\n        if (dimensions.width <= 0) {\n            this._width = 0;\n            this._height = 0;\n            this._reviewHeight = 0;\n            return;\n        }\n        if (!forceDoLayoutCall && dimensions.width === this._width && dimensions.height === this._height) {\n            // Nothing has changed\n            return;\n        }\n        this._width = dimensions.width;\n        this._height = dimensions.height;\n        this._reviewHeight = this._reviewPane.isVisible() ? this._height : 0;\n        this._doLayout();\n    };\n    DiffEditorWidget.prototype._layoutOverviewRulers = function () {\n        var freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        var layoutInfo = this.modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (this._height - this._reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (this._height - this._reviewHeight)\n            });\n        }\n    };\n    //------------ end layouting methods\n    DiffEditorWidget.prototype._onViewZonesChanged = function () {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    };\n    DiffEditorWidget.prototype._beginUpdateDecorationsSoon = function () {\n        var _this = this;\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(function () { return _this._beginUpdateDecorations(); }, DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    };\n    DiffEditorWidget._equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    };\n    DiffEditorWidget.prototype._beginUpdateDecorations = function () {\n        var _this = this;\n        this._beginUpdateDecorationsTimeout = -1;\n        var currentOriginalModel = this.originalEditor.getModel();\n        var currentModifiedModel = this.modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        var currentToken = this._diffComputationToken;\n        if (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace).then(function (result) {\n            if (currentToken === _this._diffComputationToken\n                && currentOriginalModel === _this.originalEditor.getModel()\n                && currentModifiedModel === _this.modifiedEditor.getModel()) {\n                _this._diffComputationResult = result;\n                _this._updateDecorationsRunner.schedule();\n                _this._onDidUpdateDiff.fire();\n            }\n        }, function (error) {\n            if (currentToken === _this._diffComputationToken\n                && currentOriginalModel === _this.originalEditor.getModel()\n                && currentModifiedModel === _this.modifiedEditor.getModel()) {\n                _this._diffComputationResult = null;\n                _this._updateDecorationsRunner.schedule();\n            }\n        });\n    };\n    DiffEditorWidget.prototype._cleanViewZonesAndDecorations = function () {\n        this._originalEditorState.clean(this.originalEditor);\n        this._modifiedEditorState.clean(this.modifiedEditor);\n    };\n    DiffEditorWidget.prototype._updateDecorations = function () {\n        if (!this.originalEditor.getModel() || !this.modifiedEditor.getModel()) {\n            return;\n        }\n        var lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        var foreignOriginal = this._originalEditorState.getForeignViewZones(this.originalEditor.getWhitespaces());\n        var foreignModified = this._modifiedEditorState.getForeignViewZones(this.modifiedEditor.getWhitespaces());\n        var diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified, this.originalEditor, this.modifiedEditor);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this.originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this.modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    };\n    DiffEditorWidget.prototype._adjustOptionsForSubEditor = function (options) {\n        var clonedOptions = objects.deepClone(options || {});\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.wordWrap = 'off';\n        clonedOptions.wordWrapMinified = false;\n        clonedOptions.automaticLayout = false;\n        clonedOptions.scrollbar = clonedOptions.scrollbar || {};\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = false;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        if (!clonedOptions.minimap) {\n            clonedOptions.minimap = {};\n        }\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    };\n    DiffEditorWidget.prototype._adjustOptionsForLeftHandSide = function (options, isEditable) {\n        var result = this._adjustOptionsForSubEditor(options);\n        result.readOnly = !isEditable;\n        result.overviewRulerLanes = 1;\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return result;\n    };\n    DiffEditorWidget.prototype._adjustOptionsForRightHandSide = function (options) {\n        var result = this._adjustOptionsForSubEditor(options);\n        result.revealHorizontalRightPadding = editorOptions.EDITOR_DEFAULTS.viewInfo.revealHorizontalRightPadding + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return result;\n    };\n    DiffEditorWidget.prototype.doLayout = function () {\n        this._measureDomElement(true);\n    };\n    DiffEditorWidget.prototype._doLayout = function () {\n        var splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (this._width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (this._height - this._reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (this._width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this.originalEditor.layout({ width: splitPoint, height: (this._height - this._reviewHeight) });\n        this.modifiedEditor.layout({ width: this._width - splitPoint - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH, height: (this._height - this._reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(this._height - this._reviewHeight, this._width, this._reviewHeight);\n        this._layoutOverviewViewport();\n    };\n    DiffEditorWidget.prototype._layoutOverviewViewport = function () {\n        var layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    };\n    DiffEditorWidget.prototype._computeOverviewViewport = function () {\n        var layoutInfo = this.modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        var scrollTop = this.modifiedEditor.getScrollTop();\n        var scrollHeight = this.modifiedEditor.getScrollHeight();\n        var computedAvailableSize = Math.max(0, layoutInfo.contentHeight);\n        var computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        var computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        var computedSliderSize = Math.max(0, Math.floor(layoutInfo.contentHeight * computedRatio));\n        var computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    };\n    DiffEditorWidget.prototype._createDataSource = function () {\n        var _this = this;\n        return {\n            getWidth: function () {\n                return _this._width;\n            },\n            getHeight: function () {\n                return (_this._height - _this._reviewHeight);\n            },\n            getContainerDomNode: function () {\n                return _this._containerDomElement;\n            },\n            relayoutEditors: function () {\n                _this._doLayout();\n            },\n            getOriginalEditor: function () {\n                return _this.originalEditor;\n            },\n            getModifiedEditor: function () {\n                return _this.modifiedEditor;\n            }\n        };\n    };\n    DiffEditorWidget.prototype._setStrategy = function (newStrategy) {\n        if (this._strategy) {\n            this._strategy.dispose();\n        }\n        this._strategy = newStrategy;\n        newStrategy.applyColors(this._themeService.getTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._measureDomElement(true);\n    };\n    DiffEditorWidget.prototype._getLineChangeAtOrBeforeLineNumber = function (lineNumber, startLineNumberExtractor) {\n        var lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        var min = 0, max = lineChanges.length - 1;\n        while (min < max) {\n            var mid = Math.floor((min + max) / 2);\n            var midStart = startLineNumberExtractor(lineChanges[mid]);\n            var midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : Number.MAX_VALUE);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    };\n    DiffEditorWidget.prototype._getEquivalentLineForOriginalLineNumber = function (lineNumber) {\n        var lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, function (lineChange) { return lineChange.originalStartLineNumber; });\n        if (!lineChange) {\n            return lineNumber;\n        }\n        var originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        var modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        var lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        var lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        var delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    };\n    DiffEditorWidget.prototype._getEquivalentLineForModifiedLineNumber = function (lineNumber) {\n        var lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, function (lineChange) { return lineChange.modifiedStartLineNumber; });\n        if (!lineChange) {\n            return lineNumber;\n        }\n        var originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        var modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        var lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        var lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        var delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    };\n    DiffEditorWidget.prototype.getDiffLineInformationForOriginal = function (lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    };\n    DiffEditorWidget.prototype.getDiffLineInformationForModified = function (lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    };\n    DiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\n    DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\n    DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\n    DiffEditorWidget = tslib_1.__decorate([\n        tslib_1.__param(2, editorWorkerService_1.IEditorWorkerService),\n        tslib_1.__param(3, contextkey_1.IContextKeyService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, codeEditorService_1.ICodeEditorService),\n        tslib_1.__param(6, themeService_1.IThemeService),\n        tslib_1.__param(7, notification_1.INotificationService)\n    ], DiffEditorWidget);\n    return DiffEditorWidget;\n}(lifecycle_1.Disposable));\nexports.DiffEditorWidget = DiffEditorWidget;\nvar DiffEditorWidgetStyle = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffEditorWidgetStyle, _super);\n    function DiffEditorWidgetStyle(dataSource) {\n        var _this = _super.call(this) || this;\n        _this._dataSource = dataSource;\n        return _this;\n    }\n    DiffEditorWidgetStyle.prototype.applyColors = function (theme) {\n        var newInsertColor = (theme.getColor(colorRegistry_1.diffInserted) || colorRegistry_1.defaultInsertColor).transparent(2);\n        var newRemoveColor = (theme.getColor(colorRegistry_1.diffRemoved) || colorRegistry_1.defaultRemoveColor).transparent(2);\n        var hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    };\n    DiffEditorWidgetStyle.prototype.getEditorsDiffDecorations = function (lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces, originalEditor, modifiedEditor) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort(function (a, b) {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort(function (a, b) {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        var zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, originalEditor, modifiedEditor, renderIndicators);\n        // Get decorations & overview ruler zones\n        var originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor);\n        var modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    };\n    return DiffEditorWidgetStyle;\n}(lifecycle_1.Disposable));\nvar ForeignViewZonesIterator = /** @class */ (function () {\n    function ForeignViewZonesIterator(source) {\n        this._source = source;\n        this._index = -1;\n        this.advance();\n    }\n    ForeignViewZonesIterator.prototype.advance = function () {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    };\n    return ForeignViewZonesIterator;\n}());\nvar ViewZonesComputer = /** @class */ (function () {\n    function ViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        this.lineChanges = lineChanges;\n        this.originalForeignVZ = originalForeignVZ;\n        this.modifiedForeignVZ = modifiedForeignVZ;\n    }\n    ViewZonesComputer.prototype.getViewZones = function () {\n        var result = {\n            original: [],\n            modified: []\n        };\n        var lineChangeModifiedLength = 0;\n        var lineChangeOriginalLength = 0;\n        var originalEquivalentLineNumber = 0;\n        var modifiedEquivalentLineNumber = 0;\n        var originalEndEquivalentLineNumber = 0;\n        var modifiedEndEquivalentLineNumber = 0;\n        var sortMyViewZones = function (a, b) {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        var addAndCombineIfPossible = function (destination, item) {\n            if (item.domNode === null && destination.length > 0) {\n                var lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        var modifiedForeignVZ = new ForeignViewZonesIterator(this.modifiedForeignVZ);\n        var originalForeignVZ = new ForeignViewZonesIterator(this.originalForeignVZ);\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (var i = 0, length = this.lineChanges.length; i <= length; i++) {\n            var lineChange = (i < length ? this.lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            var stepOriginal = [];\n            var stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                var viewZoneLineNumber = void 0;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                var marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.heightInLines,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                var viewZoneLineNumber = void 0;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.heightInLines,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                var r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                var r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            var stepOriginalIndex = 0;\n            var stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                var original = stepOriginal[stepOriginalIndex];\n                var modified = stepModified[stepModifiedIndex];\n                var originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                var modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    };\n    ViewZonesComputer._ensureDomNodes = function (zones) {\n        return zones.map(function (z) {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    };\n    return ViewZonesComputer;\n}());\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new range_1.Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nvar DECORATIONS = {\n    charDelete: textModel_1.ModelDecorationOptions.register({\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: textModel_1.ModelDecorationOptions.register({\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: textModel_1.ModelDecorationOptions.register({\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: textModel_1.ModelDecorationOptions.register({\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: textModel_1.ModelDecorationOptions.register({\n        className: 'line-insert',\n        marginClassName: 'line-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: textModel_1.ModelDecorationOptions.register({\n        className: 'line-insert',\n        linesDecorationsClassName: 'insert-sign',\n        marginClassName: 'line-insert',\n        isWholeLine: true\n    }),\n    lineDelete: textModel_1.ModelDecorationOptions.register({\n        className: 'line-delete',\n        marginClassName: 'line-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: textModel_1.ModelDecorationOptions.register({\n        className: 'line-delete',\n        linesDecorationsClassName: 'delete-sign',\n        marginClassName: 'line-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: textModel_1.ModelDecorationOptions.register({\n        marginClassName: 'line-delete',\n    })\n};\nvar DiffEdtorWidgetSideBySide = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffEdtorWidgetSideBySide, _super);\n    function DiffEdtorWidgetSideBySide(dataSource, enableSplitViewResizing) {\n        var _this = _super.call(this, dataSource) || this;\n        _this._disableSash = (enableSplitViewResizing === false);\n        _this._sashRatio = null;\n        _this._sashPosition = null;\n        _this._sash = _this._register(new sash_1.Sash(_this._dataSource.getContainerDomNode(), _this));\n        if (_this._disableSash) {\n            _this._sash.state = sash_1.SashState.Disabled;\n        }\n        _this._sash.onDidStart(function () { return _this.onSashDragStart(); });\n        _this._sash.onDidChange(function (e) { return _this.onSashDrag(e); });\n        _this._sash.onDidEnd(function () { return _this.onSashDragEnd(); });\n        _this._sash.onDidReset(function () { return _this.onSashReset(); });\n        return _this;\n    }\n    DiffEdtorWidgetSideBySide.prototype.setEnableSplitViewResizing = function (enableSplitViewResizing) {\n        var newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? sash_1.SashState.Disabled : sash_1.SashState.Enabled;\n        }\n    };\n    DiffEdtorWidgetSideBySide.prototype.layout = function (sashRatio) {\n        if (sashRatio === void 0) { sashRatio = this._sashRatio; }\n        var w = this._dataSource.getWidth();\n        var contentWidth = w - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        var sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        var midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n            this._sash.layout();\n        }\n        return this._sashPosition;\n    };\n    DiffEdtorWidgetSideBySide.prototype.onSashDragStart = function () {\n        this._startSashPosition = this._sashPosition;\n    };\n    DiffEdtorWidgetSideBySide.prototype.onSashDrag = function (e) {\n        var w = this._dataSource.getWidth();\n        var contentWidth = w - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        var sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    };\n    DiffEdtorWidgetSideBySide.prototype.onSashDragEnd = function () {\n        this._sash.layout();\n    };\n    DiffEdtorWidgetSideBySide.prototype.onSashReset = function () {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    };\n    DiffEdtorWidgetSideBySide.prototype.getVerticalSashTop = function (sash) {\n        return 0;\n    };\n    DiffEdtorWidgetSideBySide.prototype.getVerticalSashLeft = function (sash) {\n        return this._sashPosition;\n    };\n    DiffEdtorWidgetSideBySide.prototype.getVerticalSashHeight = function (sash) {\n        return this._dataSource.getHeight();\n    };\n    DiffEdtorWidgetSideBySide.prototype._getViewZones = function (lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        var c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ);\n        return c.getViewZones();\n    };\n    DiffEdtorWidgetSideBySide.prototype._getOriginalEditorDecorations = function (lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor) {\n        var overviewZoneColor = this._removeColor.toString();\n        var result = {\n            decorations: [],\n            overviewZones: []\n        };\n        var originalModel = originalEditor.getModel();\n        for (var i = 0, length = lineChanges.length; i < length; i++) {\n            var lineChange = lineChanges[i];\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new range_1.Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE, DECORATIONS.charDeleteWholeLine));\n                }\n                result.overviewZones.push(new overviewZoneManager_1.OverviewRulerZone(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (var j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n                        var charChange = lineChange.charChanges[j];\n                        if (isChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (var lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    var startColumn = void 0;\n                                    var endColumn = void 0;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    DiffEdtorWidgetSideBySide.prototype._getModifiedEditorDecorations = function (lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor) {\n        var overviewZoneColor = this._insertColor.toString();\n        var result = {\n            decorations: [],\n            overviewZones: []\n        };\n        var modifiedModel = modifiedEditor.getModel();\n        for (var i = 0, length = lineChanges.length; i < length; i++) {\n            var lineChange = lineChanges[i];\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new range_1.Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE, DECORATIONS.charInsertWholeLine));\n                }\n                result.overviewZones.push(new overviewZoneManager_1.OverviewRulerZone(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (var j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n                        var charChange = lineChange.charChanges[j];\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (var lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    var startColumn = void 0;\n                                    var endColumn = void 0;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\n    return DiffEdtorWidgetSideBySide;\n}(DiffEditorWidgetStyle));\nvar SideBySideViewZonesComputer = /** @class */ (function (_super) {\n    tslib_1.__extends(SideBySideViewZonesComputer, _super);\n    function SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        return _super.call(this, lineChanges, originalForeignVZ, modifiedForeignVZ) || this;\n    }\n    SideBySideViewZonesComputer.prototype._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion = function () {\n        return null;\n    };\n    SideBySideViewZonesComputer.prototype._produceOriginalFromDiff = function (lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    };\n    SideBySideViewZonesComputer.prototype._produceModifiedFromDiff = function (lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    };\n    return SideBySideViewZonesComputer;\n}(ViewZonesComputer));\nvar DiffEdtorWidgetInline = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffEdtorWidgetInline, _super);\n    function DiffEdtorWidgetInline(dataSource, enableSplitViewResizing) {\n        var _this = _super.call(this, dataSource) || this;\n        _this.decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        _this._register(dataSource.getOriginalEditor().onDidLayoutChange(function (layoutInfo) {\n            if (_this.decorationsLeft !== layoutInfo.decorationsLeft) {\n                _this.decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n        return _this;\n    }\n    DiffEdtorWidgetInline.prototype.setEnableSplitViewResizing = function (enableSplitViewResizing) {\n        // Nothing to do..\n    };\n    DiffEdtorWidgetInline.prototype._getViewZones = function (lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        var computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    };\n    DiffEdtorWidgetInline.prototype._getOriginalEditorDecorations = function (lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor) {\n        var overviewZoneColor = this._removeColor.toString();\n        var result = {\n            decorations: [],\n            overviewZones: []\n        };\n        for (var i = 0, length = lineChanges.length; i < length; i++) {\n            var lineChange = lineChanges[i];\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new range_1.Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                result.overviewZones.push(new overviewZoneManager_1.OverviewRulerZone(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber, overviewZoneColor));\n            }\n        }\n        return result;\n    };\n    DiffEdtorWidgetInline.prototype._getModifiedEditorDecorations = function (lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor) {\n        var overviewZoneColor = this._insertColor.toString();\n        var result = {\n            decorations: [],\n            overviewZones: []\n        };\n        var modifiedModel = modifiedEditor.getModel();\n        for (var i = 0, length = lineChanges.length; i < length; i++) {\n            var lineChange = lineChanges[i];\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new range_1.Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                result.overviewZones.push(new overviewZoneManager_1.OverviewRulerZone(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (var j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n                        var charChange = lineChange.charChanges[j];\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (var lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    var startColumn = void 0;\n                                    var endColumn = void 0;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    };\n    DiffEdtorWidgetInline.prototype.layout = function () {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this.decorationsLeft);\n    };\n    return DiffEdtorWidgetInline;\n}(DiffEditorWidgetStyle));\nvar InlineViewZonesComputer = /** @class */ (function (_super) {\n    tslib_1.__extends(InlineViewZonesComputer, _super);\n    function InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        var _this = _super.call(this, lineChanges, originalForeignVZ, modifiedForeignVZ) || this;\n        _this.originalModel = originalEditor.getModel();\n        _this.modifiedEditorConfiguration = modifiedEditor.getConfiguration();\n        _this.modifiedEditorTabSize = modifiedEditor.getModel().getOptions().tabSize;\n        _this.renderIndicators = renderIndicators;\n        return _this;\n    }\n    InlineViewZonesComputer.prototype._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion = function () {\n        var result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    };\n    InlineViewZonesComputer.prototype._produceOriginalFromDiff = function (lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        var marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    };\n    InlineViewZonesComputer.prototype._produceModifiedFromDiff = function (lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        var decorations = [];\n        if (lineChange.charChanges) {\n            for (var j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n                var charChange = lineChange.charChanges[j];\n                if (isChangeOrDelete(charChange)) {\n                    decorations.push(new viewModel_1.InlineDecoration(new range_1.Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', viewModel_1.InlineDecorationType.Regular));\n                }\n            }\n        }\n        var sb = stringBuilder_1.createStringBuilder(10000);\n        var marginHTML = [];\n        var lineDecorationsWidth = this.modifiedEditorConfiguration.layoutInfo.decorationsWidth;\n        var lineHeight = this.modifiedEditorConfiguration.lineHeight;\n        var typicalHalfwidthCharacterWidth = this.modifiedEditorConfiguration.fontInfo.typicalHalfwidthCharacterWidth;\n        var maxCharsPerLine = 0;\n        for (var lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(lineNumber - lineChange.originalStartLineNumber, this.originalModel, this.modifiedEditorConfiguration, this.modifiedEditorTabSize, lineNumber, decorations, sb));\n            if (this.renderIndicators) {\n                var index = lineNumber - lineChange.originalStartLineNumber;\n                marginHTML = marginHTML.concat([\n                    \"<div class=\\\"delete-sign\\\" style=\\\"position:absolute;top:\" + index * lineHeight + \"px;width:\" + lineDecorationsWidth + \"px;height:\" + lineHeight + \"px;right:0;\\\"></div>\"\n                ]);\n            }\n        }\n        maxCharsPerLine += this.modifiedEditorConfiguration.viewInfo.scrollBeyondLastColumn;\n        var domNode = document.createElement('div');\n        domNode.className = 'view-lines line-delete';\n        domNode.innerHTML = sb.build();\n        configuration_1.Configuration.applyFontInfoSlow(domNode, this.modifiedEditorConfiguration.fontInfo);\n        var marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        marginDomNode.innerHTML = marginHTML.join('');\n        configuration_1.Configuration.applyFontInfoSlow(marginDomNode, this.modifiedEditorConfiguration.fontInfo);\n        return {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: (maxCharsPerLine * typicalHalfwidthCharacterWidth),\n            domNode: domNode,\n            marginDomNode: marginDomNode\n        };\n    };\n    InlineViewZonesComputer.prototype._renderOriginalLine = function (count, originalModel, config, tabSize, lineNumber, decorations, sb) {\n        var lineTokens = originalModel.getLineTokens(lineNumber);\n        var lineContent = lineTokens.getLineContent();\n        var actualDecorations = lineDecorations_1.LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n        sb.appendASCIIString('<div class=\"view-line');\n        if (decorations.length === 0) {\n            // No char changes\n            sb.appendASCIIString(' char-delete');\n        }\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(count * config.lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        var isBasicASCII = viewModel_1.ViewLineRenderingData.isBasicASCII(lineContent, originalModel.mightContainNonBasicASCII());\n        var containsRTL = viewModel_1.ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, originalModel.mightContainRTL());\n        var output = viewLineRenderer_1.renderViewLine(new viewLineRenderer_1.RenderLineInput((config.fontInfo.isMonospace && !config.viewInfo.disableMonospaceOptimizations), config.fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, actualDecorations, tabSize, config.fontInfo.spaceWidth, config.viewInfo.stopRenderingLineAfter, config.viewInfo.renderWhitespace, config.viewInfo.renderControlCharacters, config.viewInfo.fontLigatures), sb);\n        sb.appendASCIIString('</div>');\n        var absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\n        return absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\n    };\n    return InlineViewZonesComputer;\n}(ViewZonesComputer));\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    var r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var added = theme.getColor(colorRegistry_1.diffInserted);\n    if (added) {\n        collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { background-color: \" + added + \"; }\");\n        collector.addRule(\".monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: \" + added + \"; }\");\n        collector.addRule(\".monaco-editor .inline-added-margin-view-zone { background-color: \" + added + \"; }\");\n    }\n    var removed = theme.getColor(colorRegistry_1.diffRemoved);\n    if (removed) {\n        collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { background-color: \" + removed + \"; }\");\n        collector.addRule(\".monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: \" + removed + \"; }\");\n        collector.addRule(\".monaco-editor .inline-deleted-margin-view-zone { background-color: \" + removed + \"; }\");\n    }\n    var addedOutline = theme.getColor(colorRegistry_1.diffInsertedOutline);\n    if (addedOutline) {\n        collector.addRule(\".monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + addedOutline + \"; }\");\n    }\n    var removedOutline = theme.getColor(colorRegistry_1.diffRemovedOutline);\n    if (removedOutline) {\n        collector.addRule(\".monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + removedOutline + \"; }\");\n    }\n    var shadow = theme.getColor(colorRegistry_1.scrollbarShadow);\n    if (shadow) {\n        collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px \" + shadow + \"; }\");\n    }\n    var border = theme.getColor(colorRegistry_1.diffBorder);\n    if (border) {\n        collector.addRule(\".monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid \" + border + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffEditorWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffEditorWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/diffEditor';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { ISashEvent, IVerticalSashLayoutProvider, Sash, SashState } from 'vs/base/browser/ui/sash/sash';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { Configuration } from 'vs/editor/browser/config/configuration';\nimport { StableEditorScrollState } from 'vs/editor/browser/core/editorState';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { DiffReview } from 'vs/editor/browser/widget/diffReview';\nimport * as editorOptions from 'vs/editor/common/config/editorOptions';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport { IStringBuilder, createStringBuilder } from 'vs/editor/common/core/stringBuilder';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDecorationsChangeAccessor, IModelDeltaDecoration, ITextModel } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { IDiffComputationResult, IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { OverviewRulerZone } from 'vs/editor/common/view/overviewZoneManager';\nimport { LineDecoration } from 'vs/editor/common/viewLayout/lineDecorations';\nimport { RenderLineInput, renderViewLine } from 'vs/editor/common/viewLayout/viewLineRenderer';\nimport { IEditorWhitespace } from 'vs/editor/common/viewLayout/whitespaceComputer';\nimport { InlineDecoration, InlineDecorationType, ViewLineRenderingData } from 'vs/editor/common/viewModel/viewModel';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { ITheme, IThemeService, getThemeTypeSelector, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\ninterface IEditorDiffDecorations {\n\tdecorations: IModelDeltaDecoration[];\n\toverviewZones: OverviewRulerZone[];\n}\n\ninterface IEditorDiffDecorationsWithZones extends IEditorDiffDecorations {\n\tzones: editorBrowser.IViewZone[];\n}\n\ninterface IEditorsDiffDecorationsWithZones {\n\toriginal: IEditorDiffDecorationsWithZones;\n\tmodified: IEditorDiffDecorationsWithZones;\n}\n\ninterface IEditorsZones {\n\toriginal: editorBrowser.IViewZone[];\n\tmodified: editorBrowser.IViewZone[];\n}\n\ninterface IDiffEditorWidgetStyle {\n\tgetEditorsDiffDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalWhitespaces: IEditorWhitespace[], modifiedWhitespaces: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorsDiffDecorationsWithZones;\n\tsetEnableSplitViewResizing(enableSplitViewResizing: boolean): void;\n\tapplyColors(theme: ITheme): boolean;\n\tlayout(): number;\n\tdispose(): void;\n}\n\nclass VisualEditorState {\n\tprivate _zones: number[];\n\tprivate _zonesMap: { [zoneId: string]: boolean; };\n\tprivate _decorations: string[];\n\n\tconstructor() {\n\t\tthis._zones = [];\n\t\tthis._zonesMap = {};\n\t\tthis._decorations = [];\n\t}\n\n\tpublic getForeignViewZones(allViewZones: IEditorWhitespace[]): IEditorWhitespace[] {\n\t\treturn allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n\t}\n\n\tpublic clean(editor: CodeEditorWidget): void {\n\t\t// (1) View zones\n\t\tif (this._zones.length > 0) {\n\t\t\teditor.changeViewZones((viewChangeAccessor: editorBrowser.IViewZoneChangeAccessor) => {\n\t\t\t\tfor (let i = 0, length = this._zones.length; i < length; i++) {\n\t\t\t\t\tviewChangeAccessor.removeZone(this._zones[i]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._zones = [];\n\t\tthis._zonesMap = {};\n\n\t\t// (2) Model decorations\n\t\tthis._decorations = editor.deltaDecorations(this._decorations, []);\n\t}\n\n\tpublic apply(editor: CodeEditorWidget, overviewRuler: editorBrowser.IOverviewRuler, newDecorations: IEditorDiffDecorationsWithZones, restoreScrollState: boolean): void {\n\n\t\tconst scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n\n\t\t// view zones\n\t\teditor.changeViewZones((viewChangeAccessor: editorBrowser.IViewZoneChangeAccessor) => {\n\t\t\tfor (let i = 0, length = this._zones.length; i < length; i++) {\n\t\t\t\tviewChangeAccessor.removeZone(this._zones[i]);\n\t\t\t}\n\t\t\tthis._zones = [];\n\t\t\tthis._zonesMap = {};\n\t\t\tfor (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n\t\t\t\tnewDecorations.zones[i].suppressMouseDown = true;\n\t\t\t\tlet zoneId = viewChangeAccessor.addZone(newDecorations.zones[i]);\n\t\t\t\tthis._zones.push(zoneId);\n\t\t\t\tthis._zonesMap[String(zoneId)] = true;\n\t\t\t}\n\t\t});\n\n\t\tif (scrollState) {\n\t\t\tscrollState.restore(editor);\n\t\t}\n\n\t\t// decorations\n\t\tthis._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\n\n\t\t// overview ruler\n\t\tif (overviewRuler) {\n\t\t\toverviewRuler.setZones(newDecorations.overviewZones);\n\t\t}\n\t}\n}\n\nlet DIFF_EDITOR_ID = 0;\n\nexport class DiffEditorWidget extends Disposable implements editorBrowser.IDiffEditor {\n\n\tprivate static readonly ONE_OVERVIEW_WIDTH = 15;\n\tpublic static readonly ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\n\tprivate static readonly UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\n\n\tprivate readonly _onDidDispose: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tprivate readonly _onDidUpdateDiff: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidUpdateDiff: Event<void> = this._onDidUpdateDiff.event;\n\n\tprivate readonly id: number;\n\n\tprivate readonly _domElement: HTMLElement;\n\tprotected readonly _containerDomElement: HTMLElement;\n\tprivate readonly _overviewDomElement: HTMLElement;\n\tprivate readonly _overviewViewportDomElement: FastDomNode<HTMLElement>;\n\n\tprivate _width: number;\n\tprivate _height: number;\n\tprivate _reviewHeight: number;\n\tprivate readonly _measureDomElementToken: number;\n\n\tprivate originalEditor: CodeEditorWidget;\n\tprivate _originalDomNode: HTMLElement;\n\tprivate readonly _originalEditorState: VisualEditorState;\n\tprivate _originalOverviewRuler: editorBrowser.IOverviewRuler;\n\n\tprivate modifiedEditor: CodeEditorWidget;\n\tprivate _modifiedDomNode: HTMLElement;\n\tprivate readonly _modifiedEditorState: VisualEditorState;\n\tprivate _modifiedOverviewRuler: editorBrowser.IOverviewRuler;\n\n\tprivate _currentlyChangingViewZones: boolean;\n\tprivate _beginUpdateDecorationsTimeout: number;\n\tprivate _diffComputationToken: number;\n\tprivate _diffComputationResult: IDiffComputationResult | null;\n\n\tprivate _isVisible: boolean;\n\tprivate _isHandlingScrollEvent: boolean;\n\n\tprivate _ignoreTrimWhitespace: boolean;\n\tprivate _originalIsEditable: boolean;\n\n\tprivate _renderSideBySide: boolean;\n\tprivate _renderIndicators: boolean;\n\tprivate _enableSplitViewResizing: boolean;\n\tprivate _strategy: IDiffEditorWidgetStyle;\n\n\tprivate readonly _updateDecorationsRunner: RunOnceScheduler;\n\n\tprivate readonly _editorWorkerService: IEditorWorkerService;\n\tprotected _contextKeyService: IContextKeyService;\n\tprivate readonly _codeEditorService: ICodeEditorService;\n\tprivate readonly _themeService: IThemeService;\n\tprivate readonly _notificationService: INotificationService;\n\n\tprivate readonly _reviewPane: DiffReview;\n\n\tconstructor(\n\t\tdomElement: HTMLElement,\n\t\toptions: editorOptions.IDiffEditorOptions,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@INotificationService notificationService: INotificationService\n\t) {\n\t\tsuper();\n\n\t\tthis._editorWorkerService = editorWorkerService;\n\t\tthis._codeEditorService = codeEditorService;\n\t\tthis._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n\t\tthis._contextKeyService.createKey('isInDiffEditor', true);\n\t\tthis._themeService = themeService;\n\t\tthis._notificationService = notificationService;\n\n\t\tthis.id = (++DIFF_EDITOR_ID);\n\n\t\tthis._domElement = domElement;\n\t\toptions = options || {};\n\n\t\t// renderSideBySide\n\t\tthis._renderSideBySide = true;\n\t\tif (typeof options.renderSideBySide !== 'undefined') {\n\t\t\tthis._renderSideBySide = options.renderSideBySide;\n\t\t}\n\n\t\t// ignoreTrimWhitespace\n\t\tthis._ignoreTrimWhitespace = true;\n\t\tif (typeof options.ignoreTrimWhitespace !== 'undefined') {\n\t\t\tthis._ignoreTrimWhitespace = options.ignoreTrimWhitespace;\n\t\t}\n\n\t\t// renderIndicators\n\t\tthis._renderIndicators = true;\n\t\tif (typeof options.renderIndicators !== 'undefined') {\n\t\t\tthis._renderIndicators = options.renderIndicators;\n\t\t}\n\n\t\tthis._originalIsEditable = false;\n\t\tif (typeof options.originalEditable !== 'undefined') {\n\t\t\tthis._originalIsEditable = Boolean(options.originalEditable);\n\t\t}\n\n\t\tthis._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n\n\t\tthis._containerDomElement = document.createElement('div');\n\t\tthis._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getTheme(), this._renderSideBySide);\n\t\tthis._containerDomElement.style.position = 'relative';\n\t\tthis._containerDomElement.style.height = '100%';\n\t\tthis._domElement.appendChild(this._containerDomElement);\n\n\t\tthis._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n\t\tthis._overviewViewportDomElement.setClassName('diffViewport');\n\t\tthis._overviewViewportDomElement.setPosition('absolute');\n\n\t\tthis._overviewDomElement = document.createElement('div');\n\t\tthis._overviewDomElement.className = 'diffOverview';\n\t\tthis._overviewDomElement.style.position = 'absolute';\n\n\t\tthis._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n\n\t\tthis._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\n\t\t\tthis.modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n\t\t}));\n\t\tthis._containerDomElement.appendChild(this._overviewDomElement);\n\n\t\tthis._createLeftHandSide();\n\t\tthis._createRightHandSide();\n\n\t\tthis._beginUpdateDecorationsTimeout = -1;\n\t\tthis._currentlyChangingViewZones = false;\n\t\tthis._diffComputationToken = 0;\n\n\t\tthis._originalEditorState = new VisualEditorState();\n\t\tthis._modifiedEditorState = new VisualEditorState();\n\n\t\tthis._isVisible = true;\n\t\tthis._isHandlingScrollEvent = false;\n\n\t\tthis._width = 0;\n\t\tthis._height = 0;\n\t\tthis._reviewHeight = 0;\n\n\t\tthis._diffComputationResult = null;\n\n\t\tconst leftContextKeyService = this._contextKeyService.createScoped();\n\t\tleftContextKeyService.createKey('isInDiffLeftEditor', true);\n\n\t\tconst leftServices = new ServiceCollection();\n\t\tleftServices.set(IContextKeyService, leftContextKeyService);\n\t\tconst leftScopedInstantiationService = instantiationService.createChild(leftServices);\n\n\t\tconst rightContextKeyService = this._contextKeyService.createScoped();\n\t\trightContextKeyService.createKey('isInDiffRightEditor', true);\n\n\t\tconst rightServices = new ServiceCollection();\n\t\trightServices.set(IContextKeyService, rightContextKeyService);\n\t\tconst rightScopedInstantiationService = instantiationService.createChild(rightServices);\n\n\t\tthis._createLeftHandSideEditor(options, leftScopedInstantiationService);\n\t\tthis._createRightHandSideEditor(options, rightScopedInstantiationService);\n\n\t\tthis._reviewPane = new DiffReview(this);\n\t\tthis._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n\t\tthis._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n\t\tthis._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n\n\t\tif (options.automaticLayout) {\n\t\t\tthis._measureDomElementToken = window.setInterval(() => this._measureDomElement(false), 100);\n\t\t}\n\n\t\t// enableSplitViewResizing\n\t\tthis._enableSplitViewResizing = true;\n\t\tif (typeof options.enableSplitViewResizing !== 'undefined') {\n\t\t\tthis._enableSplitViewResizing = options.enableSplitViewResizing;\n\t\t}\n\n\t\tif (this._renderSideBySide) {\n\t\t\tthis._setStrategy(new DiffEdtorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n\t\t} else {\n\t\t\tthis._setStrategy(new DiffEdtorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n\t\t}\n\n\t\tthis._register(themeService.onThemeChange(t => {\n\t\t\tif (this._strategy && this._strategy.applyColors(t)) {\n\t\t\t\tthis._updateDecorationsRunner.schedule();\n\t\t\t}\n\t\t\tthis._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getTheme(), this._renderSideBySide);\n\t\t}));\n\n\t\tthis._codeEditorService.addDiffEditor(this);\n\t}\n\n\tpublic get ignoreTrimWhitespace(): boolean {\n\t\treturn this._ignoreTrimWhitespace;\n\t}\n\n\tpublic get renderSideBySide(): boolean {\n\t\treturn this._renderSideBySide;\n\t}\n\n\tpublic get renderIndicators(): boolean {\n\t\treturn this._renderIndicators;\n\t}\n\n\tpublic hasWidgetFocus(): boolean {\n\t\treturn dom.isAncestor(document.activeElement, this._domElement);\n\t}\n\n\tpublic diffReviewNext(): void {\n\t\tthis._reviewPane.next();\n\t}\n\n\tpublic diffReviewPrev(): void {\n\t\tthis._reviewPane.prev();\n\t}\n\n\tprivate static _getClassName(theme: ITheme, renderSideBySide: boolean): string {\n\t\tlet result = 'monaco-diff-editor monaco-editor-background ';\n\t\tif (renderSideBySide) {\n\t\t\tresult += 'side-by-side ';\n\t\t}\n\t\tresult += getThemeTypeSelector(theme.type);\n\t\treturn result;\n\t}\n\n\tprivate _recreateOverviewRulers(): void {\n\t\tif (this._originalOverviewRuler) {\n\t\t\tthis._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n\t\t\tthis._originalOverviewRuler.dispose();\n\t\t}\n\t\tif (this.originalEditor.hasModel()) {\n\t\t\tthis._originalOverviewRuler = this.originalEditor.createOverviewRuler('original diffOverviewRuler')!;\n\t\t\tthis._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n\t\t}\n\n\t\tif (this._modifiedOverviewRuler) {\n\t\t\tthis._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n\t\t\tthis._modifiedOverviewRuler.dispose();\n\t\t}\n\t\tif (this.modifiedEditor.hasModel()) {\n\t\t\tthis._modifiedOverviewRuler = this.modifiedEditor.createOverviewRuler('modified diffOverviewRuler')!;\n\t\t\tthis._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n\t\t}\n\n\t\tthis._layoutOverviewRulers();\n\t}\n\n\tprivate _createLeftHandSide(): void {\n\t\tthis._originalDomNode = document.createElement('div');\n\t\tthis._originalDomNode.className = 'editor original';\n\t\tthis._originalDomNode.style.position = 'absolute';\n\t\tthis._originalDomNode.style.height = '100%';\n\t\tthis._containerDomElement.appendChild(this._originalDomNode);\n\t}\n\n\tprivate _createRightHandSide(): void {\n\t\tthis._modifiedDomNode = document.createElement('div');\n\t\tthis._modifiedDomNode.className = 'editor modified';\n\t\tthis._modifiedDomNode.style.position = 'absolute';\n\t\tthis._modifiedDomNode.style.height = '100%';\n\t\tthis._containerDomElement.appendChild(this._modifiedDomNode);\n\t}\n\n\tprivate _createLeftHandSideEditor(options: editorOptions.IDiffEditorOptions, instantiationService: IInstantiationService): void {\n\t\tthis.originalEditor = this._createInnerEditor(instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options, this._originalIsEditable));\n\n\t\tthis._register(this.originalEditor.onDidScrollChange((e) => {\n\t\t\tif (this._isHandlingScrollEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isHandlingScrollEvent = true;\n\t\t\tthis.modifiedEditor.setScrollPosition({\n\t\t\t\tscrollLeft: e.scrollLeft,\n\t\t\t\tscrollTop: e.scrollTop\n\t\t\t});\n\t\t\tthis._isHandlingScrollEvent = false;\n\n\t\t\tthis._layoutOverviewViewport();\n\t\t}));\n\n\t\tthis._register(this.originalEditor.onDidChangeViewZones(() => {\n\t\t\tthis._onViewZonesChanged();\n\t\t}));\n\n\t\tthis._register(this.originalEditor.onDidChangeModelContent(() => {\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis._beginUpdateDecorationsSoon();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createRightHandSideEditor(options: editorOptions.IDiffEditorOptions, instantiationService: IInstantiationService): void {\n\t\tthis.modifiedEditor = this._createInnerEditor(instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options));\n\n\t\tthis._register(this.modifiedEditor.onDidScrollChange((e) => {\n\t\t\tif (this._isHandlingScrollEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isHandlingScrollEvent = true;\n\t\t\tthis.originalEditor.setScrollPosition({\n\t\t\t\tscrollLeft: e.scrollLeft,\n\t\t\t\tscrollTop: e.scrollTop\n\t\t\t});\n\t\t\tthis._isHandlingScrollEvent = false;\n\n\t\t\tthis._layoutOverviewViewport();\n\t\t}));\n\n\t\tthis._register(this.modifiedEditor.onDidChangeViewZones(() => {\n\t\t\tthis._onViewZonesChanged();\n\t\t}));\n\n\t\tthis._register(this.modifiedEditor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.fontInfo && this.modifiedEditor.getModel()) {\n\t\t\t\tthis._onViewZonesChanged();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.modifiedEditor.onDidChangeModelContent(() => {\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis._beginUpdateDecorationsSoon();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _createInnerEditor(instantiationService: IInstantiationService, container: HTMLElement, options: editorOptions.IEditorOptions): CodeEditorWidget {\n\t\treturn instantiationService.createInstance(CodeEditorWidget, container, options, {});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._codeEditorService.removeDiffEditor(this);\n\n\t\tif (this._beginUpdateDecorationsTimeout !== -1) {\n\t\t\twindow.clearTimeout(this._beginUpdateDecorationsTimeout);\n\t\t\tthis._beginUpdateDecorationsTimeout = -1;\n\t\t}\n\n\t\twindow.clearInterval(this._measureDomElementToken);\n\n\t\tthis._cleanViewZonesAndDecorations();\n\n\t\tif (this._originalOverviewRuler) {\n\t\t\tthis._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n\t\t\tthis._originalOverviewRuler.dispose();\n\t\t}\n\t\tif (this._modifiedOverviewRuler) {\n\t\t\tthis._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n\t\t\tthis._modifiedOverviewRuler.dispose();\n\t\t}\n\t\tthis._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n\t\tthis._containerDomElement.removeChild(this._overviewDomElement);\n\n\t\tthis._containerDomElement.removeChild(this._originalDomNode);\n\t\tthis.originalEditor.dispose();\n\n\t\tthis._containerDomElement.removeChild(this._modifiedDomNode);\n\t\tthis.modifiedEditor.dispose();\n\n\t\tthis._strategy.dispose();\n\n\t\tthis._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n\t\tthis._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n\t\tthis._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n\t\tthis._reviewPane.dispose();\n\n\t\tthis._domElement.removeChild(this._containerDomElement);\n\n\t\tthis._onDidDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n\n\t//------------ begin IDiffEditor methods\n\n\tpublic getId(): string {\n\t\treturn this.getEditorType() + ':' + this.id;\n\t}\n\n\tpublic getEditorType(): string {\n\t\treturn editorCommon.EditorType.IDiffEditor;\n\t}\n\n\tpublic getLineChanges(): editorCommon.ILineChange[] | null {\n\t\tif (!this._diffComputationResult) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._diffComputationResult.changes;\n\t}\n\n\tpublic getOriginalEditor(): editorBrowser.ICodeEditor {\n\t\treturn this.originalEditor;\n\t}\n\n\tpublic getModifiedEditor(): editorBrowser.ICodeEditor {\n\t\treturn this.modifiedEditor;\n\t}\n\n\tpublic updateOptions(newOptions: editorOptions.IDiffEditorOptions): void {\n\n\t\t// Handle side by side\n\t\tlet renderSideBySideChanged = false;\n\t\tif (typeof newOptions.renderSideBySide !== 'undefined') {\n\t\t\tif (this._renderSideBySide !== newOptions.renderSideBySide) {\n\t\t\t\tthis._renderSideBySide = newOptions.renderSideBySide;\n\t\t\t\trenderSideBySideChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tlet beginUpdateDecorations = false;\n\n\t\tif (typeof newOptions.ignoreTrimWhitespace !== 'undefined') {\n\t\t\tif (this._ignoreTrimWhitespace !== newOptions.ignoreTrimWhitespace) {\n\t\t\t\tthis._ignoreTrimWhitespace = newOptions.ignoreTrimWhitespace;\n\t\t\t\t// Begin comparing\n\t\t\t\tbeginUpdateDecorations = true;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.renderIndicators !== 'undefined') {\n\t\t\tif (this._renderIndicators !== newOptions.renderIndicators) {\n\t\t\t\tthis._renderIndicators = newOptions.renderIndicators;\n\t\t\t\tbeginUpdateDecorations = true;\n\t\t\t}\n\t\t}\n\n\t\tif (beginUpdateDecorations) {\n\t\t\tthis._beginUpdateDecorations();\n\t\t}\n\n\t\tif (typeof newOptions.originalEditable !== 'undefined') {\n\t\t\tthis._originalIsEditable = Boolean(newOptions.originalEditable);\n\t\t}\n\n\t\tthis.modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(newOptions));\n\t\tthis.originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(newOptions, this._originalIsEditable));\n\n\t\t// enableSplitViewResizing\n\t\tif (typeof newOptions.enableSplitViewResizing !== 'undefined') {\n\t\t\tthis._enableSplitViewResizing = newOptions.enableSplitViewResizing;\n\t\t}\n\t\tthis._strategy.setEnableSplitViewResizing(this._enableSplitViewResizing);\n\n\t\t// renderSideBySide\n\t\tif (renderSideBySideChanged) {\n\t\t\tif (this._renderSideBySide) {\n\t\t\t\tthis._setStrategy(new DiffEdtorWidgetSideBySide(this._createDataSource(), this._enableSplitViewResizing));\n\t\t\t} else {\n\t\t\t\tthis._setStrategy(new DiffEdtorWidgetInline(this._createDataSource(), this._enableSplitViewResizing));\n\t\t\t}\n\t\t\t// Update class name\n\t\t\tthis._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getTheme(), this._renderSideBySide);\n\t\t}\n\t}\n\n\tpublic getModel(): editorCommon.IDiffEditorModel {\n\t\treturn {\n\t\t\toriginal: this.originalEditor.getModel()!,\n\t\t\tmodified: this.modifiedEditor.getModel()!\n\t\t};\n\t}\n\n\tpublic setModel(model: editorCommon.IDiffEditorModel): void {\n\t\t// Guard us against partial null model\n\t\tif (model && (!model.original || !model.modified)) {\n\t\t\tthrow new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n\t\t}\n\n\t\t// Remove all view zones & decorations\n\t\tthis._cleanViewZonesAndDecorations();\n\n\t\t// Update code editor models\n\t\tthis.originalEditor.setModel(model ? model.original : null);\n\t\tthis.modifiedEditor.setModel(model ? model.modified : null);\n\t\tthis._updateDecorationsRunner.cancel();\n\n\t\tif (model) {\n\t\t\tthis.originalEditor.setScrollTop(0);\n\t\t\tthis.modifiedEditor.setScrollTop(0);\n\t\t}\n\n\t\t// Disable any diff computations that will come in\n\t\tthis._diffComputationResult = null;\n\t\tthis._diffComputationToken++;\n\n\t\tif (model) {\n\t\t\tthis._recreateOverviewRulers();\n\n\t\t\t// Begin comparing\n\t\t\tthis._beginUpdateDecorations();\n\t\t} else {\n\t\t\tthis._diffComputationResult = null;\n\t\t}\n\n\t\tthis._layoutOverviewViewport();\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domElement;\n\t}\n\n\tpublic getVisibleColumnFromPosition(position: IPosition): number {\n\t\treturn this.modifiedEditor.getVisibleColumnFromPosition(position);\n\t}\n\n\tpublic getPosition(): Position | null {\n\t\treturn this.modifiedEditor.getPosition();\n\t}\n\n\tpublic setPosition(position: IPosition): void {\n\t\tthis.modifiedEditor.setPosition(position);\n\t}\n\n\tpublic revealLine(lineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLine(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenter(lineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n\t}\n\n\tpublic revealLineInCenterIfOutsideViewport(lineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n\t}\n\n\tpublic revealPosition(position: IPosition, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealPosition(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenter(position: IPosition, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealPositionInCenter(position, scrollType);\n\t}\n\n\tpublic revealPositionInCenterIfOutsideViewport(position: IPosition, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n\t}\n\n\tpublic getSelection(): Selection | null {\n\t\treturn this.modifiedEditor.getSelection();\n\t}\n\n\tpublic getSelections(): Selection[] | null {\n\t\treturn this.modifiedEditor.getSelections();\n\t}\n\n\tpublic setSelection(range: IRange): void;\n\tpublic setSelection(editorRange: Range): void;\n\tpublic setSelection(selection: ISelection): void;\n\tpublic setSelection(editorSelection: Selection): void;\n\tpublic setSelection(something: any): void {\n\t\tthis.modifiedEditor.setSelection(something);\n\t}\n\n\tpublic setSelections(ranges: ISelection[]): void {\n\t\tthis.modifiedEditor.setSelections(ranges);\n\t}\n\n\tpublic revealLines(startLineNumber: number, endLineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealLinesInCenter(startLineNumber: number, endLineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealLinesInCenterIfOutsideViewport(startLineNumber: number, endLineNumber: number, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n\t}\n\n\tpublic revealRange(range: IRange, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth, revealVerticalInCenter: boolean = false, revealHorizontal: boolean = true): void {\n\t\tthis.modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n\t}\n\n\tpublic revealRangeInCenter(range: IRange, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealRangeInCenter(range, scrollType);\n\t}\n\n\tpublic revealRangeInCenterIfOutsideViewport(range: IRange, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t}\n\n\tpublic revealRangeAtTop(range: IRange, scrollType: editorCommon.ScrollType = editorCommon.ScrollType.Smooth): void {\n\t\tthis.modifiedEditor.revealRangeAtTop(range, scrollType);\n\t}\n\n\tpublic getSupportedActions(): editorCommon.IEditorAction[] {\n\t\treturn this.modifiedEditor.getSupportedActions();\n\t}\n\n\tpublic saveViewState(): editorCommon.IDiffEditorViewState {\n\t\tlet originalViewState = this.originalEditor.saveViewState();\n\t\tlet modifiedViewState = this.modifiedEditor.saveViewState();\n\t\treturn {\n\t\t\toriginal: originalViewState,\n\t\t\tmodified: modifiedViewState\n\t\t};\n\t}\n\n\tpublic restoreViewState(s: editorCommon.IDiffEditorViewState): void {\n\t\tif (s.original && s.modified) {\n\t\t\tlet diffEditorState = <editorCommon.IDiffEditorViewState>s;\n\t\t\tthis.originalEditor.restoreViewState(diffEditorState.original);\n\t\t\tthis.modifiedEditor.restoreViewState(diffEditorState.modified);\n\t\t}\n\t}\n\n\tpublic layout(dimension?: editorCommon.IDimension): void {\n\t\tthis._measureDomElement(false, dimension);\n\t}\n\n\tpublic focus(): void {\n\t\tthis.modifiedEditor.focus();\n\t}\n\n\tpublic hasTextFocus(): boolean {\n\t\treturn this.originalEditor.hasTextFocus() || this.modifiedEditor.hasTextFocus();\n\t}\n\n\tpublic onVisible(): void {\n\t\tthis._isVisible = true;\n\t\tthis.originalEditor.onVisible();\n\t\tthis.modifiedEditor.onVisible();\n\t\t// Begin comparing\n\t\tthis._beginUpdateDecorations();\n\t}\n\n\tpublic onHide(): void {\n\t\tthis._isVisible = false;\n\t\tthis.originalEditor.onHide();\n\t\tthis.modifiedEditor.onHide();\n\t\t// Remove all view zones & decorations\n\t\tthis._cleanViewZonesAndDecorations();\n\t}\n\n\tpublic trigger(source: string, handlerId: string, payload: any): void {\n\t\tthis.modifiedEditor.trigger(source, handlerId, payload);\n\t}\n\n\tpublic changeDecorations(callback: (changeAccessor: IModelDecorationsChangeAccessor) => any): any {\n\t\treturn this.modifiedEditor.changeDecorations(callback);\n\t}\n\n\t//------------ end IDiffEditor methods\n\n\n\n\t//------------ begin layouting methods\n\n\tprivate _measureDomElement(forceDoLayoutCall: boolean, dimensions?: editorCommon.IDimension): void {\n\t\tdimensions = dimensions || {\n\t\t\twidth: this._containerDomElement.clientWidth,\n\t\t\theight: this._containerDomElement.clientHeight\n\t\t};\n\n\t\tif (dimensions.width <= 0) {\n\t\t\tthis._width = 0;\n\t\t\tthis._height = 0;\n\t\t\tthis._reviewHeight = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tif (!forceDoLayoutCall && dimensions.width === this._width && dimensions.height === this._height) {\n\t\t\t// Nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._width = dimensions.width;\n\t\tthis._height = dimensions.height;\n\t\tthis._reviewHeight = this._reviewPane.isVisible() ? this._height : 0;\n\n\t\tthis._doLayout();\n\t}\n\n\tprivate _layoutOverviewRulers(): void {\n\t\tlet freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n\t\tlet layoutInfo = this.modifiedEditor.getLayoutInfo();\n\t\tif (layoutInfo) {\n\t\t\tthis._originalOverviewRuler.setLayout({\n\t\t\t\ttop: 0,\n\t\t\t\twidth: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n\t\t\t\tright: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n\t\t\t\theight: (this._height - this._reviewHeight)\n\t\t\t});\n\t\t\tthis._modifiedOverviewRuler.setLayout({\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n\t\t\t\theight: (this._height - this._reviewHeight)\n\t\t\t});\n\t\t}\n\t}\n\n\t//------------ end layouting methods\n\n\tprivate _onViewZonesChanged(): void {\n\t\tif (this._currentlyChangingViewZones) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updateDecorationsRunner.schedule();\n\t}\n\n\tprivate _beginUpdateDecorationsSoon(): void {\n\t\t// Clear previous timeout if necessary\n\t\tif (this._beginUpdateDecorationsTimeout !== -1) {\n\t\t\twindow.clearTimeout(this._beginUpdateDecorationsTimeout);\n\t\t\tthis._beginUpdateDecorationsTimeout = -1;\n\t\t}\n\t\tthis._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n\t}\n\n\tprivate _lastOriginalWarning: URI | null = null;\n\tprivate _lastModifiedWarning: URI | null = null;\n\n\tprivate static _equals(a: URI | null, b: URI | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (a.toString() === b.toString());\n\t}\n\n\tprivate _beginUpdateDecorations(): void {\n\t\tthis._beginUpdateDecorationsTimeout = -1;\n\t\tconst currentOriginalModel = this.originalEditor.getModel();\n\t\tconst currentModifiedModel = this.modifiedEditor.getModel();\n\t\tif (!currentOriginalModel || !currentModifiedModel) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent old diff requests to come if a new request has been initiated\n\t\t// The best method would be to call cancel on the Promise, but this is not\n\t\t// yet supported, so using tokens for now.\n\t\tthis._diffComputationToken++;\n\t\tlet currentToken = this._diffComputationToken;\n\n\t\tif (!this._editorWorkerService.canComputeDiff(currentOriginalModel.uri, currentModifiedModel.uri)) {\n\t\t\tif (\n\t\t\t\t!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n\t\t\t\t|| !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)\n\t\t\t) {\n\t\t\t\tthis._lastOriginalWarning = currentOriginalModel.uri;\n\t\t\t\tthis._lastModifiedWarning = currentModifiedModel.uri;\n\t\t\t\tthis._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._ignoreTrimWhitespace).then((result) => {\n\t\t\tif (currentToken === this._diffComputationToken\n\t\t\t\t&& currentOriginalModel === this.originalEditor.getModel()\n\t\t\t\t&& currentModifiedModel === this.modifiedEditor.getModel()\n\t\t\t) {\n\t\t\t\tthis._diffComputationResult = result;\n\t\t\t\tthis._updateDecorationsRunner.schedule();\n\t\t\t\tthis._onDidUpdateDiff.fire();\n\t\t\t}\n\t\t}, (error) => {\n\t\t\tif (currentToken === this._diffComputationToken\n\t\t\t\t&& currentOriginalModel === this.originalEditor.getModel()\n\t\t\t\t&& currentModifiedModel === this.modifiedEditor.getModel()\n\t\t\t) {\n\t\t\t\tthis._diffComputationResult = null;\n\t\t\t\tthis._updateDecorationsRunner.schedule();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _cleanViewZonesAndDecorations(): void {\n\t\tthis._originalEditorState.clean(this.originalEditor);\n\t\tthis._modifiedEditorState.clean(this.modifiedEditor);\n\t}\n\n\tprivate _updateDecorations(): void {\n\t\tif (!this.originalEditor.getModel() || !this.modifiedEditor.getModel()) {\n\t\t\treturn;\n\t\t}\n\t\tconst lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n\n\t\tlet foreignOriginal = this._originalEditorState.getForeignViewZones(this.originalEditor.getWhitespaces());\n\t\tlet foreignModified = this._modifiedEditorState.getForeignViewZones(this.modifiedEditor.getWhitespaces());\n\n\t\tlet diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._ignoreTrimWhitespace, this._renderIndicators, foreignOriginal, foreignModified, this.originalEditor, this.modifiedEditor);\n\n\t\ttry {\n\t\t\tthis._currentlyChangingViewZones = true;\n\t\t\tthis._originalEditorState.apply(this.originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n\t\t\tthis._modifiedEditorState.apply(this.modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n\t\t} finally {\n\t\t\tthis._currentlyChangingViewZones = false;\n\t\t}\n\t}\n\n\tprivate _adjustOptionsForSubEditor(options: editorOptions.IDiffEditorOptions): editorOptions.IDiffEditorOptions {\n\t\tlet clonedOptions: editorOptions.IDiffEditorOptions = objects.deepClone(options || {});\n\t\tclonedOptions.inDiffEditor = true;\n\t\tclonedOptions.wordWrap = 'off';\n\t\tclonedOptions.wordWrapMinified = false;\n\t\tclonedOptions.automaticLayout = false;\n\t\tclonedOptions.scrollbar = clonedOptions.scrollbar || {};\n\t\tclonedOptions.scrollbar.vertical = 'visible';\n\t\tclonedOptions.folding = false;\n\t\tclonedOptions.codeLens = false;\n\t\tclonedOptions.fixedOverflowWidgets = true;\n\t\t// clonedOptions.lineDecorationsWidth = '2ch';\n\t\tif (!clonedOptions.minimap) {\n\t\t\tclonedOptions.minimap = {};\n\t\t}\n\t\tclonedOptions.minimap.enabled = false;\n\t\treturn clonedOptions;\n\t}\n\n\tprivate _adjustOptionsForLeftHandSide(options: editorOptions.IDiffEditorOptions, isEditable: boolean): editorOptions.IEditorOptions {\n\t\tlet result = this._adjustOptionsForSubEditor(options);\n\t\tresult.readOnly = !isEditable;\n\t\tresult.overviewRulerLanes = 1;\n\t\tresult.extraEditorClassName = 'original-in-monaco-diff-editor';\n\t\treturn result;\n\t}\n\n\tprivate _adjustOptionsForRightHandSide(options: editorOptions.IDiffEditorOptions): editorOptions.IEditorOptions {\n\t\tlet result = this._adjustOptionsForSubEditor(options);\n\t\tresult.revealHorizontalRightPadding = editorOptions.EDITOR_DEFAULTS.viewInfo.revealHorizontalRightPadding + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\t\tresult.scrollbar!.verticalHasArrows = false;\n\t\tresult.extraEditorClassName = 'modified-in-monaco-diff-editor';\n\t\treturn result;\n\t}\n\n\tpublic doLayout(): void {\n\t\tthis._measureDomElement(true);\n\t}\n\n\tprivate _doLayout(): void {\n\t\tlet splitPoint = this._strategy.layout();\n\n\t\tthis._originalDomNode.style.width = splitPoint + 'px';\n\t\tthis._originalDomNode.style.left = '0px';\n\n\t\tthis._modifiedDomNode.style.width = (this._width - splitPoint) + 'px';\n\t\tthis._modifiedDomNode.style.left = splitPoint + 'px';\n\n\t\tthis._overviewDomElement.style.top = '0px';\n\t\tthis._overviewDomElement.style.height = (this._height - this._reviewHeight) + 'px';\n\t\tthis._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n\t\tthis._overviewDomElement.style.left = (this._width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n\t\tthis._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n\t\tthis._overviewViewportDomElement.setHeight(30);\n\n\t\tthis.originalEditor.layout({ width: splitPoint, height: (this._height - this._reviewHeight) });\n\t\tthis.modifiedEditor.layout({ width: this._width - splitPoint - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH, height: (this._height - this._reviewHeight) });\n\n\t\tif (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n\t\t\tthis._layoutOverviewRulers();\n\t\t}\n\n\t\tthis._reviewPane.layout(this._height - this._reviewHeight, this._width, this._reviewHeight);\n\n\t\tthis._layoutOverviewViewport();\n\t}\n\n\tprivate _layoutOverviewViewport(): void {\n\t\tlet layout = this._computeOverviewViewport();\n\t\tif (!layout) {\n\t\t\tthis._overviewViewportDomElement.setTop(0);\n\t\t\tthis._overviewViewportDomElement.setHeight(0);\n\t\t} else {\n\t\t\tthis._overviewViewportDomElement.setTop(layout.top);\n\t\t\tthis._overviewViewportDomElement.setHeight(layout.height);\n\t\t}\n\t}\n\n\tprivate _computeOverviewViewport(): { height: number; top: number; } | null {\n\t\tlet layoutInfo = this.modifiedEditor.getLayoutInfo();\n\t\tif (!layoutInfo) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet scrollTop = this.modifiedEditor.getScrollTop();\n\t\tlet scrollHeight = this.modifiedEditor.getScrollHeight();\n\n\t\tlet computedAvailableSize = Math.max(0, layoutInfo.contentHeight);\n\t\tlet computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n\t\tlet computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n\n\t\tlet computedSliderSize = Math.max(0, Math.floor(layoutInfo.contentHeight * computedRatio));\n\t\tlet computedSliderPosition = Math.floor(scrollTop * computedRatio);\n\n\t\treturn {\n\t\t\theight: computedSliderSize,\n\t\t\ttop: computedSliderPosition\n\t\t};\n\t}\n\n\tprivate _createDataSource(): IDataSource {\n\t\treturn {\n\t\t\tgetWidth: () => {\n\t\t\t\treturn this._width;\n\t\t\t},\n\n\t\t\tgetHeight: () => {\n\t\t\t\treturn (this._height - this._reviewHeight);\n\t\t\t},\n\n\t\t\tgetContainerDomNode: () => {\n\t\t\t\treturn this._containerDomElement;\n\t\t\t},\n\n\t\t\trelayoutEditors: () => {\n\t\t\t\tthis._doLayout();\n\t\t\t},\n\n\t\t\tgetOriginalEditor: () => {\n\t\t\t\treturn this.originalEditor;\n\t\t\t},\n\n\t\t\tgetModifiedEditor: () => {\n\t\t\t\treturn this.modifiedEditor;\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _setStrategy(newStrategy: IDiffEditorWidgetStyle): void {\n\t\tif (this._strategy) {\n\t\t\tthis._strategy.dispose();\n\t\t}\n\n\t\tthis._strategy = newStrategy;\n\t\tnewStrategy.applyColors(this._themeService.getTheme());\n\n\t\tif (this._diffComputationResult) {\n\t\t\tthis._updateDecorations();\n\t\t}\n\n\t\t// Just do a layout, the strategy might need it\n\t\tthis._measureDomElement(true);\n\t}\n\n\tprivate _getLineChangeAtOrBeforeLineNumber(lineNumber: number, startLineNumberExtractor: (lineChange: editorCommon.ILineChange) => number): editorCommon.ILineChange | null {\n\t\tconst lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n\t\tif (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n\t\t\t// There are no changes or `lineNumber` is before the first change\n\t\t\treturn null;\n\t\t}\n\n\t\tlet min = 0, max = lineChanges.length - 1;\n\t\twhile (min < max) {\n\t\t\tlet mid = Math.floor((min + max) / 2);\n\t\t\tlet midStart = startLineNumberExtractor(lineChanges[mid]);\n\t\t\tlet midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : Number.MAX_VALUE);\n\n\t\t\tif (lineNumber < midStart) {\n\t\t\t\tmax = mid - 1;\n\t\t\t} else if (lineNumber >= midEnd) {\n\t\t\t\tmin = mid + 1;\n\t\t\t} else {\n\t\t\t\t// HIT!\n\t\t\t\tmin = mid;\n\t\t\t\tmax = mid;\n\t\t\t}\n\t\t}\n\t\treturn lineChanges[min];\n\t}\n\n\tprivate _getEquivalentLineForOriginalLineNumber(lineNumber: number): number {\n\t\tlet lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n\n\t\tif (!lineChange) {\n\t\t\treturn lineNumber;\n\t\t}\n\n\t\tlet originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n\t\tlet modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n\t\tlet lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n\t\tlet lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n\n\n\t\tlet delta = lineNumber - originalEquivalentLineNumber;\n\n\t\tif (delta <= lineChangeOriginalLength) {\n\t\t\treturn modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n\t\t}\n\n\t\treturn modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n\t}\n\n\tprivate _getEquivalentLineForModifiedLineNumber(lineNumber: number): number {\n\t\tlet lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n\n\t\tif (!lineChange) {\n\t\t\treturn lineNumber;\n\t\t}\n\n\t\tlet originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n\t\tlet modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n\t\tlet lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n\t\tlet lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n\n\n\t\tlet delta = lineNumber - modifiedEquivalentLineNumber;\n\n\t\tif (delta <= lineChangeModifiedLength) {\n\t\t\treturn originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n\t\t}\n\n\t\treturn originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n\t}\n\n\tpublic getDiffLineInformationForOriginal(lineNumber: number): editorBrowser.IDiffLineInformation | null {\n\t\tif (!this._diffComputationResult) {\n\t\t\t// Cannot answer that which I don't know\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tequivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n\t\t};\n\t}\n\n\tpublic getDiffLineInformationForModified(lineNumber: number): editorBrowser.IDiffLineInformation | null {\n\t\tif (!this._diffComputationResult) {\n\t\t\t// Cannot answer that which I don't know\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tequivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n\t\t};\n\t}\n}\n\ninterface IDataSource {\n\tgetWidth(): number;\n\tgetHeight(): number;\n\tgetContainerDomNode(): HTMLElement;\n\trelayoutEditors(): void;\n\n\tgetOriginalEditor(): editorBrowser.ICodeEditor;\n\tgetModifiedEditor(): editorBrowser.ICodeEditor;\n}\n\nabstract class DiffEditorWidgetStyle extends Disposable implements IDiffEditorWidgetStyle {\n\n\t_dataSource: IDataSource;\n\t_insertColor: Color;\n\t_removeColor: Color;\n\n\tconstructor(dataSource: IDataSource) {\n\t\tsuper();\n\t\tthis._dataSource = dataSource;\n\t}\n\n\tpublic applyColors(theme: ITheme): boolean {\n\t\tlet newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n\t\tlet newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n\t\tlet hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n\t\tthis._insertColor = newInsertColor;\n\t\tthis._removeColor = newRemoveColor;\n\t\treturn hasChanges;\n\t}\n\n\tpublic getEditorsDiffDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalWhitespaces: IEditorWhitespace[], modifiedWhitespaces: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorsDiffDecorationsWithZones {\n\t\t// Get view zones\n\t\tmodifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n\t\t\treturn a.afterLineNumber - b.afterLineNumber;\n\t\t});\n\t\toriginalWhitespaces = originalWhitespaces.sort((a, b) => {\n\t\t\treturn a.afterLineNumber - b.afterLineNumber;\n\t\t});\n\t\tlet zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, originalEditor, modifiedEditor, renderIndicators);\n\n\t\t// Get decorations & overview ruler zones\n\t\tlet originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor);\n\t\tlet modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalEditor, modifiedEditor);\n\n\t\treturn {\n\t\t\toriginal: {\n\t\t\t\tdecorations: originalDecorations.decorations,\n\t\t\t\toverviewZones: originalDecorations.overviewZones,\n\t\t\t\tzones: zones.original\n\t\t\t},\n\t\t\tmodified: {\n\t\t\t\tdecorations: modifiedDecorations.decorations,\n\t\t\t\toverviewZones: modifiedDecorations.overviewZones,\n\t\t\t\tzones: zones.modified\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected abstract _getViewZones(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor, renderIndicators: boolean): IEditorsZones;\n\tprotected abstract _getOriginalEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations;\n\tprotected abstract _getModifiedEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations;\n\n\tpublic abstract setEnableSplitViewResizing(enableSplitViewResizing: boolean): void;\n\tpublic abstract layout(): number;\n}\n\ninterface IMyViewZone {\n\tshouldNotShrink?: boolean;\n\tafterLineNumber: number;\n\theightInLines: number;\n\tminWidthInPx?: number;\n\tdomNode: HTMLElement | null;\n\tmarginDomNode?: HTMLElement | null;\n}\n\nclass ForeignViewZonesIterator {\n\n\tprivate _index: number;\n\tprivate readonly _source: IEditorWhitespace[];\n\tpublic current: IEditorWhitespace | null;\n\n\tconstructor(source: IEditorWhitespace[]) {\n\t\tthis._source = source;\n\t\tthis._index = -1;\n\t\tthis.advance();\n\t}\n\n\tpublic advance(): void {\n\t\tthis._index++;\n\t\tif (this._index < this._source.length) {\n\t\t\tthis.current = this._source[this._index];\n\t\t} else {\n\t\t\tthis.current = null;\n\t\t}\n\t}\n}\n\nabstract class ViewZonesComputer {\n\n\tprivate readonly lineChanges: editorCommon.ILineChange[];\n\tprivate readonly originalForeignVZ: IEditorWhitespace[];\n\tprivate readonly modifiedForeignVZ: IEditorWhitespace[];\n\n\tconstructor(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[]) {\n\t\tthis.lineChanges = lineChanges;\n\t\tthis.originalForeignVZ = originalForeignVZ;\n\t\tthis.modifiedForeignVZ = modifiedForeignVZ;\n\t}\n\n\tpublic getViewZones(): IEditorsZones {\n\t\tlet result: { original: IMyViewZone[]; modified: IMyViewZone[]; } = {\n\t\t\toriginal: [],\n\t\t\tmodified: []\n\t\t};\n\n\t\tlet lineChangeModifiedLength: number = 0;\n\t\tlet lineChangeOriginalLength: number = 0;\n\t\tlet originalEquivalentLineNumber: number = 0;\n\t\tlet modifiedEquivalentLineNumber: number = 0;\n\t\tlet originalEndEquivalentLineNumber: number = 0;\n\t\tlet modifiedEndEquivalentLineNumber: number = 0;\n\n\t\tlet sortMyViewZones = (a: IMyViewZone, b: IMyViewZone) => {\n\t\t\treturn a.afterLineNumber - b.afterLineNumber;\n\t\t};\n\n\t\tlet addAndCombineIfPossible = (destination: IMyViewZone[], item: IMyViewZone) => {\n\t\t\tif (item.domNode === null && destination.length > 0) {\n\t\t\t\tlet lastItem = destination[destination.length - 1];\n\t\t\t\tif (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n\t\t\t\t\tlastItem.heightInLines += item.heightInLines;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdestination.push(item);\n\t\t};\n\n\t\tlet modifiedForeignVZ = new ForeignViewZonesIterator(this.modifiedForeignVZ);\n\t\tlet originalForeignVZ = new ForeignViewZonesIterator(this.originalForeignVZ);\n\n\t\t// In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n\t\tfor (let i = 0, length = this.lineChanges.length; i <= length; i++) {\n\t\t\tlet lineChange = (i < length ? this.lineChanges[i] : null);\n\n\t\t\tif (lineChange !== null) {\n\t\t\t\toriginalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n\t\t\t\tmodifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n\t\t\t\tlineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n\t\t\t\tlineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n\t\t\t\toriginalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n\t\t\t\tmodifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n\t\t\t} else {\n\t\t\t\t// Increase to very large value to get the producing tests of foreign view zones running\n\t\t\t\toriginalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n\t\t\t\tmodifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n\t\t\t\toriginalEndEquivalentLineNumber = originalEquivalentLineNumber;\n\t\t\t\tmodifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n\t\t\t}\n\n\t\t\t// Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n\t\t\tlet stepOriginal: IMyViewZone[] = [];\n\t\t\tlet stepModified: IMyViewZone[] = [];\n\n\t\t\t// ---------------------------- PRODUCE VIEW ZONES\n\n\t\t\t// [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n\t\t\twhile (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n\t\t\t\tlet viewZoneLineNumber: number;\n\t\t\t\tif (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n\t\t\t\t\tviewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n\t\t\t\t} else {\n\t\t\t\t\tviewZoneLineNumber = originalEndEquivalentLineNumber;\n\t\t\t\t}\n\n\t\t\t\tlet marginDomNode: HTMLDivElement | null = null;\n\t\t\t\tif (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n\t\t\t\t\tmarginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n\t\t\t\t}\n\n\t\t\t\tstepOriginal.push({\n\t\t\t\t\tafterLineNumber: viewZoneLineNumber,\n\t\t\t\t\theightInLines: modifiedForeignVZ.current.heightInLines,\n\t\t\t\t\tdomNode: null,\n\t\t\t\t\tmarginDomNode: marginDomNode\n\t\t\t\t});\n\t\t\t\tmodifiedForeignVZ.advance();\n\t\t\t}\n\n\t\t\t// [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n\t\t\twhile (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n\t\t\t\tlet viewZoneLineNumber: number;\n\t\t\t\tif (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n\t\t\t\t\tviewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n\t\t\t\t} else {\n\t\t\t\t\tviewZoneLineNumber = modifiedEndEquivalentLineNumber;\n\t\t\t\t}\n\t\t\t\tstepModified.push({\n\t\t\t\t\tafterLineNumber: viewZoneLineNumber,\n\t\t\t\t\theightInLines: originalForeignVZ.current.heightInLines,\n\t\t\t\t\tdomNode: null\n\t\t\t\t});\n\t\t\t\toriginalForeignVZ.advance();\n\t\t\t}\n\n\t\t\tif (lineChange !== null && isChangeOrInsert(lineChange)) {\n\t\t\t\tlet r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n\t\t\t\tif (r) {\n\t\t\t\t\tstepOriginal.push(r);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lineChange !== null && isChangeOrDelete(lineChange)) {\n\t\t\t\tlet r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n\t\t\t\tif (r) {\n\t\t\t\t\tstepModified.push(r);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ---------------------------- END PRODUCE VIEW ZONES\n\n\n\t\t\t// ---------------------------- EMIT MINIMAL VIEW ZONES\n\n\t\t\t// [CANCEL & EMIT] Try to cancel view zones out\n\t\t\tlet stepOriginalIndex = 0;\n\t\t\tlet stepModifiedIndex = 0;\n\n\t\t\tstepOriginal = stepOriginal.sort(sortMyViewZones);\n\t\t\tstepModified = stepModified.sort(sortMyViewZones);\n\n\t\t\twhile (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n\t\t\t\tlet original = stepOriginal[stepOriginalIndex];\n\t\t\t\tlet modified = stepModified[stepModifiedIndex];\n\n\t\t\t\tlet originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n\t\t\t\tlet modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n\n\t\t\t\tif (originalDelta < modifiedDelta) {\n\t\t\t\t\taddAndCombineIfPossible(result.original, original);\n\t\t\t\t\tstepOriginalIndex++;\n\t\t\t\t} else if (modifiedDelta < originalDelta) {\n\t\t\t\t\taddAndCombineIfPossible(result.modified, modified);\n\t\t\t\t\tstepModifiedIndex++;\n\t\t\t\t} else if (original.shouldNotShrink) {\n\t\t\t\t\taddAndCombineIfPossible(result.original, original);\n\t\t\t\t\tstepOriginalIndex++;\n\t\t\t\t} else if (modified.shouldNotShrink) {\n\t\t\t\t\taddAndCombineIfPossible(result.modified, modified);\n\t\t\t\t\tstepModifiedIndex++;\n\t\t\t\t} else {\n\t\t\t\t\tif (original.heightInLines >= modified.heightInLines) {\n\t\t\t\t\t\t// modified view zone gets removed\n\t\t\t\t\t\toriginal.heightInLines -= modified.heightInLines;\n\t\t\t\t\t\tstepModifiedIndex++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// original view zone gets removed\n\t\t\t\t\t\tmodified.heightInLines -= original.heightInLines;\n\t\t\t\t\t\tstepOriginalIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// [EMIT] Remaining original view zones\n\t\t\twhile (stepOriginalIndex < stepOriginal.length) {\n\t\t\t\taddAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n\t\t\t\tstepOriginalIndex++;\n\t\t\t}\n\n\t\t\t// [EMIT] Remaining modified view zones\n\t\t\twhile (stepModifiedIndex < stepModified.length) {\n\t\t\t\taddAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n\t\t\t\tstepModifiedIndex++;\n\t\t\t}\n\n\t\t\t// ---------------------------- END EMIT MINIMAL VIEW ZONES\n\t\t}\n\n\t\treturn {\n\t\t\toriginal: ViewZonesComputer._ensureDomNodes(result.original),\n\t\t\tmodified: ViewZonesComputer._ensureDomNodes(result.modified),\n\t\t};\n\t}\n\n\tprivate static _ensureDomNodes(zones: IMyViewZone[]): editorBrowser.IViewZone[] {\n\t\treturn zones.map((z) => {\n\t\t\tif (!z.domNode) {\n\t\t\t\tz.domNode = createFakeLinesDiv();\n\t\t\t}\n\t\t\treturn <editorBrowser.IViewZone>z;\n\t\t});\n\t}\n\n\tprotected abstract _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(): HTMLDivElement | null;\n\n\tprotected abstract _produceOriginalFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null;\n\n\tprotected abstract _produceModifiedFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null;\n}\n\nfunction createDecoration(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, options: ModelDecorationOptions) {\n\treturn {\n\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\toptions: options\n\t};\n}\n\nconst DECORATIONS = {\n\n\tcharDelete: ModelDecorationOptions.register({\n\t\tclassName: 'char-delete'\n\t}),\n\tcharDeleteWholeLine: ModelDecorationOptions.register({\n\t\tclassName: 'char-delete',\n\t\tisWholeLine: true\n\t}),\n\n\tcharInsert: ModelDecorationOptions.register({\n\t\tclassName: 'char-insert'\n\t}),\n\tcharInsertWholeLine: ModelDecorationOptions.register({\n\t\tclassName: 'char-insert',\n\t\tisWholeLine: true\n\t}),\n\n\tlineInsert: ModelDecorationOptions.register({\n\t\tclassName: 'line-insert',\n\t\tmarginClassName: 'line-insert',\n\t\tisWholeLine: true\n\t}),\n\tlineInsertWithSign: ModelDecorationOptions.register({\n\t\tclassName: 'line-insert',\n\t\tlinesDecorationsClassName: 'insert-sign',\n\t\tmarginClassName: 'line-insert',\n\t\tisWholeLine: true\n\t}),\n\n\tlineDelete: ModelDecorationOptions.register({\n\t\tclassName: 'line-delete',\n\t\tmarginClassName: 'line-delete',\n\t\tisWholeLine: true\n\t}),\n\tlineDeleteWithSign: ModelDecorationOptions.register({\n\t\tclassName: 'line-delete',\n\t\tlinesDecorationsClassName: 'delete-sign',\n\t\tmarginClassName: 'line-delete',\n\t\tisWholeLine: true\n\n\t}),\n\tlineDeleteMargin: ModelDecorationOptions.register({\n\t\tmarginClassName: 'line-delete',\n\t})\n\n};\n\nclass DiffEdtorWidgetSideBySide extends DiffEditorWidgetStyle implements IDiffEditorWidgetStyle, IVerticalSashLayoutProvider {\n\n\tstatic MINIMUM_EDITOR_WIDTH = 100;\n\n\tprivate _disableSash: boolean;\n\tprivate readonly _sash: Sash;\n\tprivate _sashRatio: number | null;\n\tprivate _sashPosition: number | null;\n\tprivate _startSashPosition: number;\n\n\tconstructor(dataSource: IDataSource, enableSplitViewResizing: boolean) {\n\t\tsuper(dataSource);\n\n\t\tthis._disableSash = (enableSplitViewResizing === false);\n\t\tthis._sashRatio = null;\n\t\tthis._sashPosition = null;\n\t\tthis._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this));\n\n\t\tif (this._disableSash) {\n\t\t\tthis._sash.state = SashState.Disabled;\n\t\t}\n\n\t\tthis._sash.onDidStart(() => this.onSashDragStart());\n\t\tthis._sash.onDidChange((e: ISashEvent) => this.onSashDrag(e));\n\t\tthis._sash.onDidEnd(() => this.onSashDragEnd());\n\t\tthis._sash.onDidReset(() => this.onSashReset());\n\t}\n\n\tpublic setEnableSplitViewResizing(enableSplitViewResizing: boolean): void {\n\t\tlet newDisableSash = (enableSplitViewResizing === false);\n\t\tif (this._disableSash !== newDisableSash) {\n\t\t\tthis._disableSash = newDisableSash;\n\t\t\tthis._sash.state = this._disableSash ? SashState.Disabled : SashState.Enabled;\n\t\t}\n\t}\n\n\tpublic layout(sashRatio: number | null = this._sashRatio): number {\n\t\tlet w = this._dataSource.getWidth();\n\t\tlet contentWidth = w - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\n\t\tlet sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n\t\tlet midPoint = Math.floor(0.5 * contentWidth);\n\n\t\tsashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n\n\t\tif (contentWidth > DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n\t\t\tif (sashPosition < DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n\t\t\t\tsashPosition = DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n\t\t\t}\n\n\t\t\tif (sashPosition > contentWidth - DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n\t\t\t\tsashPosition = contentWidth - DiffEdtorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n\t\t\t}\n\t\t} else {\n\t\t\tsashPosition = midPoint;\n\t\t}\n\n\t\tif (this._sashPosition !== sashPosition) {\n\t\t\tthis._sashPosition = sashPosition;\n\t\t\tthis._sash.layout();\n\t\t}\n\n\t\treturn this._sashPosition;\n\t}\n\n\tprivate onSashDragStart(): void {\n\t\tthis._startSashPosition = this._sashPosition!;\n\t}\n\n\tprivate onSashDrag(e: ISashEvent): void {\n\t\tlet w = this._dataSource.getWidth();\n\t\tlet contentWidth = w - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n\t\tlet sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n\n\t\tthis._sashRatio = sashPosition / contentWidth;\n\n\t\tthis._dataSource.relayoutEditors();\n\t}\n\n\tprivate onSashDragEnd(): void {\n\t\tthis._sash.layout();\n\t}\n\n\tprivate onSashReset(): void {\n\t\tthis._sashRatio = 0.5;\n\t\tthis._dataSource.relayoutEditors();\n\t\tthis._sash.layout();\n\t}\n\n\tpublic getVerticalSashTop(sash: Sash): number {\n\t\treturn 0;\n\t}\n\n\tpublic getVerticalSashLeft(sash: Sash): number {\n\t\treturn this._sashPosition!;\n\t}\n\n\tpublic getVerticalSashHeight(sash: Sash): number {\n\t\treturn this._dataSource.getHeight();\n\t}\n\n\tprotected _getViewZones(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorsZones {\n\t\tlet c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ);\n\t\treturn c.getViewZones();\n\t}\n\n\tprotected _getOriginalEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations {\n\t\tconst overviewZoneColor = this._removeColor.toString();\n\n\t\tlet result: IEditorDiffDecorations = {\n\t\t\tdecorations: [],\n\t\t\toverviewZones: []\n\t\t};\n\n\t\tlet originalModel = originalEditor.getModel()!;\n\n\t\tfor (let i = 0, length = lineChanges.length; i < length; i++) {\n\t\t\tlet lineChange = lineChanges[i];\n\n\t\t\tif (isChangeOrDelete(lineChange)) {\n\t\t\t\tresult.decorations.push({\n\t\t\t\t\trange: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE),\n\t\t\t\t\toptions: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n\t\t\t\t});\n\t\t\t\tif (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n\t\t\t\t\tresult.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE, DECORATIONS.charDeleteWholeLine));\n\t\t\t\t}\n\n\t\t\t\tresult.overviewZones.push(new OverviewRulerZone(\n\t\t\t\t\tlineChange.originalStartLineNumber,\n\t\t\t\t\tlineChange.originalEndLineNumber,\n\t\t\t\t\toverviewZoneColor\n\t\t\t\t));\n\n\t\t\t\tif (lineChange.charChanges) {\n\t\t\t\t\tfor (let j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n\t\t\t\t\t\tlet charChange = lineChange.charChanges[j];\n\t\t\t\t\t\tif (isChangeOrDelete(charChange)) {\n\t\t\t\t\t\t\tif (ignoreTrimWhitespace) {\n\t\t\t\t\t\t\t\tfor (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n\t\t\t\t\t\t\t\t\tlet startColumn: number;\n\t\t\t\t\t\t\t\t\tlet endColumn: number;\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.originalStartLineNumber) {\n\t\t\t\t\t\t\t\t\t\tstartColumn = charChange.originalStartColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstartColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.originalEndLineNumber) {\n\t\t\t\t\t\t\t\t\t\tendColumn = charChange.originalEndColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tendColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected _getModifiedEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations {\n\t\tconst overviewZoneColor = this._insertColor.toString();\n\n\t\tlet result: IEditorDiffDecorations = {\n\t\t\tdecorations: [],\n\t\t\toverviewZones: []\n\t\t};\n\n\t\tlet modifiedModel = modifiedEditor.getModel()!;\n\n\t\tfor (let i = 0, length = lineChanges.length; i < length; i++) {\n\t\t\tlet lineChange = lineChanges[i];\n\n\t\t\tif (isChangeOrInsert(lineChange)) {\n\n\t\t\t\tresult.decorations.push({\n\t\t\t\t\trange: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE),\n\t\t\t\t\toptions: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n\t\t\t\t});\n\t\t\t\tif (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n\t\t\t\t\tresult.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE, DECORATIONS.charInsertWholeLine));\n\t\t\t\t}\n\t\t\t\tresult.overviewZones.push(new OverviewRulerZone(\n\t\t\t\t\tlineChange.modifiedStartLineNumber,\n\t\t\t\t\tlineChange.modifiedEndLineNumber,\n\t\t\t\t\toverviewZoneColor\n\t\t\t\t));\n\n\t\t\t\tif (lineChange.charChanges) {\n\t\t\t\t\tfor (let j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n\t\t\t\t\t\tlet charChange = lineChange.charChanges[j];\n\t\t\t\t\t\tif (isChangeOrInsert(charChange)) {\n\t\t\t\t\t\t\tif (ignoreTrimWhitespace) {\n\t\t\t\t\t\t\t\tfor (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n\t\t\t\t\t\t\t\t\tlet startColumn: number;\n\t\t\t\t\t\t\t\t\tlet endColumn: number;\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.modifiedStartLineNumber) {\n\t\t\t\t\t\t\t\t\t\tstartColumn = charChange.modifiedStartColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstartColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.modifiedEndLineNumber) {\n\t\t\t\t\t\t\t\t\t\tendColumn = charChange.modifiedEndColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tendColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n\n\tconstructor(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[]) {\n\t\tsuper(lineChanges, originalForeignVZ, modifiedForeignVZ);\n\t}\n\n\tprotected _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(): HTMLDivElement | null {\n\t\treturn null;\n\t}\n\n\tprotected _produceOriginalFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null {\n\t\tif (lineChangeModifiedLength > lineChangeOriginalLength) {\n\t\t\treturn {\n\t\t\t\tafterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n\t\t\t\theightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n\t\t\t\tdomNode: null\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected _produceModifiedFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null {\n\t\tif (lineChangeOriginalLength > lineChangeModifiedLength) {\n\t\t\treturn {\n\t\t\t\tafterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n\t\t\t\theightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n\t\t\t\tdomNode: null\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass DiffEdtorWidgetInline extends DiffEditorWidgetStyle implements IDiffEditorWidgetStyle {\n\n\tprivate decorationsLeft: number;\n\n\tconstructor(dataSource: IDataSource, enableSplitViewResizing: boolean) {\n\t\tsuper(dataSource);\n\n\t\tthis.decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n\n\t\tthis._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo: editorOptions.EditorLayoutInfo) => {\n\t\t\tif (this.decorationsLeft !== layoutInfo.decorationsLeft) {\n\t\t\t\tthis.decorationsLeft = layoutInfo.decorationsLeft;\n\t\t\t\tdataSource.relayoutEditors();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic setEnableSplitViewResizing(enableSplitViewResizing: boolean): void {\n\t\t// Nothing to do..\n\t}\n\n\tprotected _getViewZones(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor, renderIndicators: boolean): IEditorsZones {\n\t\tlet computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n\t\treturn computer.getViewZones();\n\t}\n\n\tprotected _getOriginalEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations {\n\t\tconst overviewZoneColor = this._removeColor.toString();\n\n\t\tlet result: IEditorDiffDecorations = {\n\t\t\tdecorations: [],\n\t\t\toverviewZones: []\n\t\t};\n\n\t\tfor (let i = 0, length = lineChanges.length; i < length; i++) {\n\t\t\tlet lineChange = lineChanges[i];\n\n\t\t\t// Add overview zones in the overview ruler\n\t\t\tif (isChangeOrDelete(lineChange)) {\n\t\t\t\tresult.decorations.push({\n\t\t\t\t\trange: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, Number.MAX_VALUE),\n\t\t\t\t\toptions: DECORATIONS.lineDeleteMargin\n\t\t\t\t});\n\n\t\t\t\tresult.overviewZones.push(new OverviewRulerZone(\n\t\t\t\t\tlineChange.originalStartLineNumber,\n\t\t\t\t\tlineChange.originalEndLineNumber,\n\t\t\t\t\toverviewZoneColor\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected _getModifiedEditorDecorations(lineChanges: editorCommon.ILineChange[], ignoreTrimWhitespace: boolean, renderIndicators: boolean, originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor): IEditorDiffDecorations {\n\t\tconst overviewZoneColor = this._insertColor.toString();\n\n\t\tlet result: IEditorDiffDecorations = {\n\t\t\tdecorations: [],\n\t\t\toverviewZones: []\n\t\t};\n\n\t\tlet modifiedModel = modifiedEditor.getModel()!;\n\n\t\tfor (let i = 0, length = lineChanges.length; i < length; i++) {\n\t\t\tlet lineChange = lineChanges[i];\n\n\t\t\t// Add decorations & overview zones\n\t\t\tif (isChangeOrInsert(lineChange)) {\n\t\t\t\tresult.decorations.push({\n\t\t\t\t\trange: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE),\n\t\t\t\t\toptions: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n\t\t\t\t});\n\n\t\t\t\tresult.overviewZones.push(new OverviewRulerZone(\n\t\t\t\t\tlineChange.modifiedStartLineNumber,\n\t\t\t\t\tlineChange.modifiedEndLineNumber,\n\t\t\t\t\toverviewZoneColor\n\t\t\t\t));\n\n\t\t\t\tif (lineChange.charChanges) {\n\t\t\t\t\tfor (let j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n\t\t\t\t\t\tlet charChange = lineChange.charChanges[j];\n\t\t\t\t\t\tif (isChangeOrInsert(charChange)) {\n\t\t\t\t\t\t\tif (ignoreTrimWhitespace) {\n\t\t\t\t\t\t\t\tfor (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n\t\t\t\t\t\t\t\t\tlet startColumn: number;\n\t\t\t\t\t\t\t\t\tlet endColumn: number;\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.modifiedStartLineNumber) {\n\t\t\t\t\t\t\t\t\t\tstartColumn = charChange.modifiedStartColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstartColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (lineNumber === charChange.modifiedEndLineNumber) {\n\t\t\t\t\t\t\t\t\t\tendColumn = charChange.modifiedEndColumn;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tendColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, Number.MAX_VALUE, DECORATIONS.charInsertWholeLine));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic layout(): number {\n\t\t// An editor should not be smaller than 5px\n\t\treturn Math.max(5, this.decorationsLeft);\n\t}\n\n}\n\nclass InlineViewZonesComputer extends ViewZonesComputer {\n\n\tprivate readonly originalModel: ITextModel;\n\tprivate readonly modifiedEditorConfiguration: editorOptions.InternalEditorOptions;\n\tprivate readonly modifiedEditorTabSize: number;\n\tprivate readonly renderIndicators: boolean;\n\n\tconstructor(lineChanges: editorCommon.ILineChange[], originalForeignVZ: IEditorWhitespace[], modifiedForeignVZ: IEditorWhitespace[], originalEditor: editorBrowser.ICodeEditor, modifiedEditor: editorBrowser.ICodeEditor, renderIndicators: boolean) {\n\t\tsuper(lineChanges, originalForeignVZ, modifiedForeignVZ);\n\t\tthis.originalModel = originalEditor.getModel()!;\n\t\tthis.modifiedEditorConfiguration = modifiedEditor.getConfiguration();\n\t\tthis.modifiedEditorTabSize = modifiedEditor.getModel()!.getOptions().tabSize;\n\t\tthis.renderIndicators = renderIndicators;\n\t}\n\n\tprotected _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion(): HTMLDivElement | null {\n\t\tlet result = document.createElement('div');\n\t\tresult.className = 'inline-added-margin-view-zone';\n\t\treturn result;\n\t}\n\n\tprotected _produceOriginalFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null {\n\t\tlet marginDomNode = document.createElement('div');\n\t\tmarginDomNode.className = 'inline-added-margin-view-zone';\n\n\t\treturn {\n\t\t\tafterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n\t\t\theightInLines: lineChangeModifiedLength,\n\t\t\tdomNode: document.createElement('div'),\n\t\t\tmarginDomNode: marginDomNode\n\t\t};\n\t}\n\n\tprotected _produceModifiedFromDiff(lineChange: editorCommon.ILineChange, lineChangeOriginalLength: number, lineChangeModifiedLength: number): IMyViewZone | null {\n\t\tlet decorations: InlineDecoration[] = [];\n\t\tif (lineChange.charChanges) {\n\t\t\tfor (let j = 0, lengthJ = lineChange.charChanges.length; j < lengthJ; j++) {\n\t\t\t\tlet charChange = lineChange.charChanges[j];\n\t\t\t\tif (isChangeOrDelete(charChange)) {\n\t\t\t\t\tdecorations.push(new InlineDecoration(\n\t\t\t\t\t\tnew Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn),\n\t\t\t\t\t\t'char-delete',\n\t\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet sb = createStringBuilder(10000);\n\t\tlet marginHTML: string[] = [];\n\t\tlet lineDecorationsWidth = this.modifiedEditorConfiguration.layoutInfo.decorationsWidth;\n\t\tlet lineHeight = this.modifiedEditorConfiguration.lineHeight;\n\t\tconst typicalHalfwidthCharacterWidth = this.modifiedEditorConfiguration.fontInfo.typicalHalfwidthCharacterWidth;\n\t\tlet maxCharsPerLine = 0;\n\t\tfor (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n\t\t\tmaxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(lineNumber - lineChange.originalStartLineNumber, this.originalModel, this.modifiedEditorConfiguration, this.modifiedEditorTabSize, lineNumber, decorations, sb));\n\n\t\t\tif (this.renderIndicators) {\n\t\t\t\tlet index = lineNumber - lineChange.originalStartLineNumber;\n\t\t\t\tmarginHTML = marginHTML.concat([\n\t\t\t\t\t`<div class=\"delete-sign\" style=\"position:absolute;top:${index * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;\"></div>`\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t\tmaxCharsPerLine += this.modifiedEditorConfiguration.viewInfo.scrollBeyondLastColumn;\n\n\t\tlet domNode = document.createElement('div');\n\t\tdomNode.className = 'view-lines line-delete';\n\t\tdomNode.innerHTML = sb.build();\n\t\tConfiguration.applyFontInfoSlow(domNode, this.modifiedEditorConfiguration.fontInfo);\n\n\t\tlet marginDomNode = document.createElement('div');\n\t\tmarginDomNode.className = 'inline-deleted-margin-view-zone';\n\t\tmarginDomNode.innerHTML = marginHTML.join('');\n\t\tConfiguration.applyFontInfoSlow(marginDomNode, this.modifiedEditorConfiguration.fontInfo);\n\n\t\treturn {\n\t\t\tshouldNotShrink: true,\n\t\t\tafterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n\t\t\theightInLines: lineChangeOriginalLength,\n\t\t\tminWidthInPx: (maxCharsPerLine * typicalHalfwidthCharacterWidth),\n\t\t\tdomNode: domNode,\n\t\t\tmarginDomNode: marginDomNode\n\t\t};\n\t}\n\n\tprivate _renderOriginalLine(count: number, originalModel: ITextModel, config: editorOptions.InternalEditorOptions, tabSize: number, lineNumber: number, decorations: InlineDecoration[], sb: IStringBuilder): number {\n\t\tconst lineTokens = originalModel.getLineTokens(lineNumber);\n\t\tconst lineContent = lineTokens.getLineContent();\n\n\t\tconst actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n\n\t\tsb.appendASCIIString('<div class=\"view-line');\n\t\tif (decorations.length === 0) {\n\t\t\t// No char changes\n\t\t\tsb.appendASCIIString(' char-delete');\n\t\t}\n\t\tsb.appendASCIIString('\" style=\"top:');\n\t\tsb.appendASCIIString(String(count * config.lineHeight));\n\t\tsb.appendASCIIString('px;width:1000000px;\">');\n\n\t\tconst isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, originalModel.mightContainNonBasicASCII());\n\t\tconst containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, originalModel.mightContainRTL());\n\t\tconst output = renderViewLine(new RenderLineInput(\n\t\t\t(config.fontInfo.isMonospace && !config.viewInfo.disableMonospaceOptimizations),\n\t\t\tconfig.fontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\tisBasicASCII,\n\t\t\tcontainsRTL,\n\t\t\t0,\n\t\t\tlineTokens,\n\t\t\tactualDecorations,\n\t\t\ttabSize,\n\t\t\tconfig.fontInfo.spaceWidth,\n\t\t\tconfig.viewInfo.stopRenderingLineAfter,\n\t\t\tconfig.viewInfo.renderWhitespace,\n\t\t\tconfig.viewInfo.renderControlCharacters,\n\t\t\tconfig.viewInfo.fontLigatures\n\t\t), sb);\n\n\t\tsb.appendASCIIString('</div>');\n\n\t\tconst absoluteOffsets = output.characterMapping.getAbsoluteOffsets();\n\t\treturn absoluteOffsets.length > 0 ? absoluteOffsets[absoluteOffsets.length - 1] : 0;\n\t}\n}\n\nfunction isChangeOrInsert(lineChange: editorCommon.IChange): boolean {\n\treturn lineChange.modifiedEndLineNumber > 0;\n}\n\nfunction isChangeOrDelete(lineChange: editorCommon.IChange): boolean {\n\treturn lineChange.originalEndLineNumber > 0;\n}\n\nfunction createFakeLinesDiv(): HTMLElement {\n\tlet r = document.createElement('div');\n\tr.className = 'diagonal-fill';\n\treturn r;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst added = theme.getColor(diffInserted);\n\tif (added) {\n\t\tcollector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`);\n\t\tcollector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\n\t\tcollector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`);\n\t}\n\n\tconst removed = theme.getColor(diffRemoved);\n\tif (removed) {\n\t\tcollector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`);\n\t\tcollector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\n\t\tcollector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`);\n\t}\n\n\tconst addedOutline = theme.getColor(diffInsertedOutline);\n\tif (addedOutline) {\n\t\tcollector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\n\t}\n\n\tconst removedOutline = theme.getColor(diffRemovedOutline);\n\tif (removedOutline) {\n\t\tcollector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\n\t}\n\n\tconst shadow = theme.getColor(scrollbarShadow);\n\tif (shadow) {\n\t\tcollector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\n\t}\n\n\tconst border = theme.getColor(diffBorder);\n\tif (border) {\n\t\tcollector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\n\t}\n});\n"]}]}