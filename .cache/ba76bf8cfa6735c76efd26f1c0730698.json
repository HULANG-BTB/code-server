{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverOperation.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverOperation.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar ComputeHoverOperationState;\n(function (ComputeHoverOperationState) {\n    ComputeHoverOperationState[ComputeHoverOperationState[\"IDLE\"] = 0] = \"IDLE\";\n    ComputeHoverOperationState[ComputeHoverOperationState[\"FIRST_WAIT\"] = 1] = \"FIRST_WAIT\";\n    ComputeHoverOperationState[ComputeHoverOperationState[\"SECOND_WAIT\"] = 2] = \"SECOND_WAIT\";\n    ComputeHoverOperationState[ComputeHoverOperationState[\"WAITING_FOR_ASYNC_COMPUTATION\"] = 3] = \"WAITING_FOR_ASYNC_COMPUTATION\";\n})(ComputeHoverOperationState || (ComputeHoverOperationState = {}));\nvar HoverStartMode;\n(function (HoverStartMode) {\n    HoverStartMode[HoverStartMode[\"Delayed\"] = 0] = \"Delayed\";\n    HoverStartMode[HoverStartMode[\"Immediate\"] = 1] = \"Immediate\";\n})(HoverStartMode = exports.HoverStartMode || (exports.HoverStartMode = {}));\nvar HoverOperation = /** @class */ (function () {\n    function HoverOperation(computer, success, error, progress, hoverTime) {\n        var _this = this;\n        this._computer = computer;\n        this._state = ComputeHoverOperationState.IDLE;\n        this._hoverTime = hoverTime;\n        this._firstWaitScheduler = new async_1.RunOnceScheduler(function () { return _this._triggerAsyncComputation(); }, 0);\n        this._secondWaitScheduler = new async_1.RunOnceScheduler(function () { return _this._triggerSyncComputation(); }, 0);\n        this._loadingMessageScheduler = new async_1.RunOnceScheduler(function () { return _this._showLoadingMessage(); }, 0);\n        this._asyncComputationPromise = null;\n        this._asyncComputationPromiseDone = false;\n        this._completeCallback = success;\n        this._errorCallback = error;\n        this._progressCallback = progress;\n    }\n    HoverOperation.prototype.setHoverTime = function (hoverTime) {\n        this._hoverTime = hoverTime;\n    };\n    HoverOperation.prototype._firstWaitTime = function () {\n        return this._hoverTime / 2;\n    };\n    HoverOperation.prototype._secondWaitTime = function () {\n        return this._hoverTime / 2;\n    };\n    HoverOperation.prototype._loadingMessageTime = function () {\n        return 3 * this._hoverTime;\n    };\n    HoverOperation.prototype._triggerAsyncComputation = function () {\n        var _this = this;\n        this._state = ComputeHoverOperationState.SECOND_WAIT;\n        this._secondWaitScheduler.schedule(this._secondWaitTime());\n        if (this._computer.computeAsync) {\n            this._asyncComputationPromiseDone = false;\n            this._asyncComputationPromise = async_1.createCancelablePromise(function (token) { return _this._computer.computeAsync(token); });\n            this._asyncComputationPromise.then(function (asyncResult) {\n                _this._asyncComputationPromiseDone = true;\n                _this._withAsyncResult(asyncResult);\n            }, function (e) { return _this._onError(e); });\n        }\n        else {\n            this._asyncComputationPromiseDone = true;\n        }\n    };\n    HoverOperation.prototype._triggerSyncComputation = function () {\n        if (this._computer.computeSync) {\n            this._computer.onResult(this._computer.computeSync(), true);\n        }\n        if (this._asyncComputationPromiseDone) {\n            this._state = ComputeHoverOperationState.IDLE;\n            this._onComplete(this._computer.getResult());\n        }\n        else {\n            this._state = ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION;\n            this._onProgress(this._computer.getResult());\n        }\n    };\n    HoverOperation.prototype._showLoadingMessage = function () {\n        if (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n            this._onProgress(this._computer.getResultWithLoadingMessage());\n        }\n    };\n    HoverOperation.prototype._withAsyncResult = function (asyncResult) {\n        if (asyncResult) {\n            this._computer.onResult(asyncResult, false);\n        }\n        if (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n            this._state = ComputeHoverOperationState.IDLE;\n            this._onComplete(this._computer.getResult());\n        }\n    };\n    HoverOperation.prototype._onComplete = function (value) {\n        if (this._completeCallback) {\n            this._completeCallback(value);\n        }\n    };\n    HoverOperation.prototype._onError = function (error) {\n        if (this._errorCallback) {\n            this._errorCallback(error);\n        }\n        else {\n            errors_1.onUnexpectedError(error);\n        }\n    };\n    HoverOperation.prototype._onProgress = function (value) {\n        if (this._progressCallback) {\n            this._progressCallback(value);\n        }\n    };\n    HoverOperation.prototype.start = function (mode) {\n        if (mode === HoverStartMode.Delayed) {\n            if (this._state === ComputeHoverOperationState.IDLE) {\n                this._state = ComputeHoverOperationState.FIRST_WAIT;\n                this._firstWaitScheduler.schedule(this._firstWaitTime());\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime());\n            }\n        }\n        else {\n            switch (this._state) {\n                case ComputeHoverOperationState.IDLE:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case ComputeHoverOperationState.SECOND_WAIT:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    };\n    HoverOperation.prototype.cancel = function () {\n        this._loadingMessageScheduler.cancel();\n        if (this._state === ComputeHoverOperationState.FIRST_WAIT) {\n            this._firstWaitScheduler.cancel();\n        }\n        if (this._state === ComputeHoverOperationState.SECOND_WAIT) {\n            this._secondWaitScheduler.cancel();\n            if (this._asyncComputationPromise) {\n                this._asyncComputationPromise.cancel();\n                this._asyncComputationPromise = null;\n            }\n        }\n        if (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n            if (this._asyncComputationPromise) {\n                this._asyncComputationPromise.cancel();\n                this._asyncComputationPromise = null;\n            }\n        }\n        this._state = ComputeHoverOperationState.IDLE;\n    };\n    return HoverOperation;\n}());\nexports.HoverOperation = HoverOperation;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverOperation.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverOperation.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,8CAAoG;AAEpG,gDAA0D;AA4B1D,IAAW,0BAKV;AALD,WAAW,0BAA0B;IACpC,2EAAQ,CAAA;IACR,uFAAc,CAAA;IACd,yFAAe,CAAA;IACf,6HAAiC,CAAA;AAClC,CAAC,EALU,0BAA0B,KAA1B,0BAA0B,QAKpC;AAED,IAAkB,cAGjB;AAHD,WAAkB,cAAc;IAC/B,yDAAW,CAAA;IACX,6DAAa,CAAA;AACd,CAAC,EAHiB,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAG/B;AAED;IAgBC,wBAAY,QAAgC,EAAE,OAA4B,EAAE,KAA8C,EAAE,QAAiC,EAAE,SAAiB;QAAhL,iBAeC;QAdA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,wBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,EAAE,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,uBAAuB,EAAE,EAA9B,CAA8B,EAAE,CAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,wBAAwB,GAAG,IAAI,wBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,EAAE,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAE1C,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IACnC,CAAC;IAEM,qCAAY,GAAnB,UAAoB,SAAiB;QACpC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC7B,CAAC;IAEO,uCAAc,GAAtB;QACC,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEO,wCAAe,GAAvB;QACC,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEO,4CAAmB,GAA3B;QACC,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;IAC5B,CAAC;IAEO,iDAAwB,GAAhC;QAAA,iBAeC;QAdA,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,WAAW,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;YAChC,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;YAC1C,IAAI,CAAC,wBAAwB,GAAG,+BAAuB,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,YAAa,CAAC,KAAK,CAAC,EAAnC,CAAmC,CAAC,CAAC;YACtG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAC,WAAmB;gBACtD,KAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;gBACzC,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACpC,CAAC,EAAE,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;SAE5B;aAAM;YACN,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;SACzC;IACF,CAAC;IAEO,gDAAuB,GAA/B;QACC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACtC,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;SAC7C;aAAM;YACN,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,6BAA6B,CAAC;YACvE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;SAC7C;IACF,CAAC;IAEO,4CAAmB,GAA3B;QACC,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,6BAA6B,EAAE;YAC7E,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC;SAC/D;IACF,CAAC;IAEO,yCAAgB,GAAxB,UAAyB,WAAmB;QAC3C,IAAI,WAAW,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SAC5C;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,6BAA6B,EAAE;YAC7E,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;SAC7C;IACF,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAa;QAChC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC9B;IACF,CAAC;IAEO,iCAAQ,GAAhB,UAAiB,KAAU;QAC1B,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC3B;aAAM;YACN,0BAAiB,CAAC,KAAK,CAAC,CAAC;SACzB;IACF,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAa;QAChC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC9B;IACF,CAAC;IAEM,8BAAK,GAAZ,UAAa,IAAoB;QAChC,IAAI,IAAI,KAAK,cAAc,CAAC,OAAO,EAAE;YACpC,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,IAAI,EAAE;gBACpD,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,UAAU,CAAC;gBACpD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;gBACzD,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;aACnE;SACD;aAAM;YACN,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACpB,KAAK,0BAA0B,CAAC,IAAI;oBACnC,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;oBACnC,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,MAAM;gBACP,KAAK,0BAA0B,CAAC,WAAW;oBAC1C,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;oBACnC,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,MAAM;aACP;SACD;IACF,CAAC;IAEM,+BAAM,GAAb;QACC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,UAAU,EAAE;YAC1D,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,WAAW,EAAE;YAC3D,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;YACnC,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAClC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;gBACvC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACrC;SACD;QACD,IAAI,IAAI,CAAC,MAAM,KAAK,0BAA0B,CAAC,6BAA6B,EAAE;YAC7E,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAClC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;gBACvC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACrC;SACD;QACD,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC,IAAI,CAAC;IAC/C,CAAC;IAEF,qBAAC;AAAD,CAAC,AAhKD,IAgKC;AAhKY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, RunOnceScheduler, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport interface IHoverComputer<Result> {\n\n\t/**\n\t * This is called after half the hover time\n\t */\n\tcomputeAsync?: (token: CancellationToken) => Promise<Result>;\n\n\t/**\n\t * This is called after all the hover time\n\t */\n\tcomputeSync?: () => Result;\n\n\t/**\n\t * This is called whenever one of the compute* methods returns a truey value\n\t */\n\tonResult: (result: Result, isFromSynchronousComputation: boolean) => void;\n\n\t/**\n\t * This is what will be sent as progress/complete to the computation promise\n\t */\n\tgetResult: () => Result;\n\n\tgetResultWithLoadingMessage: () => Result;\n\n}\n\nconst enum ComputeHoverOperationState {\n\tIDLE = 0,\n\tFIRST_WAIT = 1,\n\tSECOND_WAIT = 2,\n\tWAITING_FOR_ASYNC_COMPUTATION = 3\n}\n\nexport const enum HoverStartMode {\n\tDelayed = 0,\n\tImmediate = 1\n}\n\nexport class HoverOperation<Result> {\n\n\tprivate readonly _computer: IHoverComputer<Result>;\n\tprivate _state: ComputeHoverOperationState;\n\tprivate _hoverTime: number;\n\n\tprivate readonly _firstWaitScheduler: RunOnceScheduler;\n\tprivate readonly _secondWaitScheduler: RunOnceScheduler;\n\tprivate readonly _loadingMessageScheduler: RunOnceScheduler;\n\tprivate _asyncComputationPromise: CancelablePromise<Result> | null;\n\tprivate _asyncComputationPromiseDone: boolean;\n\n\tprivate readonly _completeCallback: (r: Result) => void;\n\tprivate readonly _errorCallback: ((err: any) => void) | null | undefined;\n\tprivate readonly _progressCallback: (progress: any) => void;\n\n\tconstructor(computer: IHoverComputer<Result>, success: (r: Result) => void, error: ((err: any) => void) | null | undefined, progress: (progress: any) => void, hoverTime: number) {\n\t\tthis._computer = computer;\n\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t\tthis._hoverTime = hoverTime;\n\n\t\tthis._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\n\t\tthis._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\n\t\tthis._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\n\n\t\tthis._asyncComputationPromise = null;\n\t\tthis._asyncComputationPromiseDone = false;\n\n\t\tthis._completeCallback = success;\n\t\tthis._errorCallback = error;\n\t\tthis._progressCallback = progress;\n\t}\n\n\tpublic setHoverTime(hoverTime: number): void {\n\t\tthis._hoverTime = hoverTime;\n\t}\n\n\tprivate _firstWaitTime(): number {\n\t\treturn this._hoverTime / 2;\n\t}\n\n\tprivate _secondWaitTime(): number {\n\t\treturn this._hoverTime / 2;\n\t}\n\n\tprivate _loadingMessageTime(): number {\n\t\treturn 3 * this._hoverTime;\n\t}\n\n\tprivate _triggerAsyncComputation(): void {\n\t\tthis._state = ComputeHoverOperationState.SECOND_WAIT;\n\t\tthis._secondWaitScheduler.schedule(this._secondWaitTime());\n\n\t\tif (this._computer.computeAsync) {\n\t\t\tthis._asyncComputationPromiseDone = false;\n\t\t\tthis._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync!(token));\n\t\t\tthis._asyncComputationPromise.then((asyncResult: Result) => {\n\t\t\t\tthis._asyncComputationPromiseDone = true;\n\t\t\t\tthis._withAsyncResult(asyncResult);\n\t\t\t}, (e) => this._onError(e));\n\n\t\t} else {\n\t\t\tthis._asyncComputationPromiseDone = true;\n\t\t}\n\t}\n\n\tprivate _triggerSyncComputation(): void {\n\t\tif (this._computer.computeSync) {\n\t\t\tthis._computer.onResult(this._computer.computeSync(), true);\n\t\t}\n\n\t\tif (this._asyncComputationPromiseDone) {\n\t\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t\t\tthis._onComplete(this._computer.getResult());\n\t\t} else {\n\t\t\tthis._state = ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION;\n\t\t\tthis._onProgress(this._computer.getResult());\n\t\t}\n\t}\n\n\tprivate _showLoadingMessage(): void {\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tthis._onProgress(this._computer.getResultWithLoadingMessage());\n\t\t}\n\t}\n\n\tprivate _withAsyncResult(asyncResult: Result): void {\n\t\tif (asyncResult) {\n\t\t\tthis._computer.onResult(asyncResult, false);\n\t\t}\n\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t\t\tthis._onComplete(this._computer.getResult());\n\t\t}\n\t}\n\n\tprivate _onComplete(value: Result): void {\n\t\tif (this._completeCallback) {\n\t\t\tthis._completeCallback(value);\n\t\t}\n\t}\n\n\tprivate _onError(error: any): void {\n\t\tif (this._errorCallback) {\n\t\t\tthis._errorCallback(error);\n\t\t} else {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n\n\tprivate _onProgress(value: Result): void {\n\t\tif (this._progressCallback) {\n\t\t\tthis._progressCallback(value);\n\t\t}\n\t}\n\n\tpublic start(mode: HoverStartMode): void {\n\t\tif (mode === HoverStartMode.Delayed) {\n\t\t\tif (this._state === ComputeHoverOperationState.IDLE) {\n\t\t\t\tthis._state = ComputeHoverOperationState.FIRST_WAIT;\n\t\t\t\tthis._firstWaitScheduler.schedule(this._firstWaitTime());\n\t\t\t\tthis._loadingMessageScheduler.schedule(this._loadingMessageTime());\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (this._state) {\n\t\t\t\tcase ComputeHoverOperationState.IDLE:\n\t\t\t\t\tthis._triggerAsyncComputation();\n\t\t\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\t\t\tthis._triggerSyncComputation();\n\t\t\t\t\tbreak;\n\t\t\t\tcase ComputeHoverOperationState.SECOND_WAIT:\n\t\t\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\t\t\tthis._triggerSyncComputation();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic cancel(): void {\n\t\tthis._loadingMessageScheduler.cancel();\n\t\tif (this._state === ComputeHoverOperationState.FIRST_WAIT) {\n\t\t\tthis._firstWaitScheduler.cancel();\n\t\t}\n\t\tif (this._state === ComputeHoverOperationState.SECOND_WAIT) {\n\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\tif (this._asyncComputationPromise) {\n\t\t\t\tthis._asyncComputationPromise.cancel();\n\t\t\t\tthis._asyncComputationPromise = null;\n\t\t\t}\n\t\t}\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tif (this._asyncComputationPromise) {\n\t\t\t\tthis._asyncComputationPromise.cancel();\n\t\t\t\tthis._asyncComputationPromise = null;\n\t\t\t}\n\t\t}\n\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t}\n\n}\n"]}]}