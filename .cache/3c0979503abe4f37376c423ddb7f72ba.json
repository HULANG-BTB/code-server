{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/quickopen.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/quickopen.contribution.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browser = require(\"vs/base/browser/browser\");\nvar nls = require(\"vs/nls\");\nvar quickopen_1 = require(\"vs/workbench/browser/quickopen\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar gotoSymbolHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/gotoSymbolHandler\");\nvar commandsHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/commandsHandler\");\nvar gotoLineHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/gotoLineHandler\");\nvar helpHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/helpHandler\");\nvar viewPickerHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/viewPickerHandler\");\nvar quickopen_2 = require(\"vs/workbench/browser/parts/quickopen/quickopen\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\n// Register Actions\nvar registry = platform_1.Registry.as(actions_2.Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(commandsHandler_1.ClearCommandHistoryAction, commandsHandler_1.ClearCommandHistoryAction.ID, commandsHandler_1.ClearCommandHistoryAction.LABEL), 'Clear Command History');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(commandsHandler_1.ShowAllCommandsAction, commandsHandler_1.ShowAllCommandsAction.ID, commandsHandler_1.ShowAllCommandsAction.LABEL, {\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_P,\n    secondary: [keyCodes_1.KeyCode.F1]\n}), 'Show All Commands');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(gotoLineHandler_1.GotoLineAction, gotoLineHandler_1.GotoLineAction.ID, gotoLineHandler_1.GotoLineAction.LABEL, {\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_G,\n    mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_G }\n}), 'Go to Line...');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(gotoSymbolHandler_1.GotoSymbolAction, gotoSymbolHandler_1.GotoSymbolAction.ID, gotoSymbolHandler_1.GotoSymbolAction.LABEL, {\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_O\n}), 'Go to Symbol in File...');\nvar inViewsPickerContextKey = 'inViewsPicker';\nvar inViewsPickerContext = contextkey_1.ContextKeyExpr.and(quickopen_2.inQuickOpenContext, contextkey_1.ContextKeyExpr.has(inViewsPickerContextKey));\nvar viewPickerKeybinding = { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_Q, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_Q }, linux: { primary: 0 } };\nvar viewCategory = nls.localize('view', \"View\");\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(viewPickerHandler_1.OpenViewPickerAction, viewPickerHandler_1.OpenViewPickerAction.ID, viewPickerHandler_1.OpenViewPickerAction.LABEL), 'View: Open View', viewCategory);\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(viewPickerHandler_1.QuickOpenViewPickerAction, viewPickerHandler_1.QuickOpenViewPickerAction.ID, viewPickerHandler_1.QuickOpenViewPickerAction.LABEL, viewPickerKeybinding), 'View: Quick Open View', viewCategory);\nvar quickOpenNavigateNextInViewPickerId = 'workbench.action.quickOpenNavigateNextInViewPicker';\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickOpenNavigateNextInViewPickerId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    handler: quickopen_2.getQuickNavigateHandler(quickOpenNavigateNextInViewPickerId, true),\n    when: inViewsPickerContext,\n    primary: viewPickerKeybinding.primary,\n    linux: viewPickerKeybinding.linux,\n    mac: viewPickerKeybinding.mac\n});\nvar quickOpenNavigatePreviousInViewPickerId = 'workbench.action.quickOpenNavigatePreviousInViewPicker';\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickOpenNavigatePreviousInViewPickerId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    handler: quickopen_2.getQuickNavigateHandler(quickOpenNavigatePreviousInViewPickerId, false),\n    when: inViewsPickerContext,\n    primary: viewPickerKeybinding.primary | keyCodes_1.KeyMod.Shift,\n    linux: viewPickerKeybinding.linux,\n    mac: {\n        primary: viewPickerKeybinding.mac.primary | keyCodes_1.KeyMod.Shift\n    }\n});\n// Register Quick Open Handler\nplatform_1.Registry.as(quickopen_1.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_1.QuickOpenHandlerDescriptor(commandsHandler_1.CommandsHandler, commandsHandler_1.CommandsHandler.ID, commandsHandler_1.ALL_COMMANDS_PREFIX, 'inCommandsPicker', nls.localize('commandsHandlerDescriptionDefault', \"Show and Run Commands\")));\nplatform_1.Registry.as(quickopen_1.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_1.QuickOpenHandlerDescriptor(gotoLineHandler_1.GotoLineHandler, gotoLineHandler_1.GotoLineHandler.ID, gotoLineHandler_1.GOTO_LINE_PREFIX, undefined, [\n    {\n        prefix: gotoLineHandler_1.GOTO_LINE_PREFIX,\n        needsEditor: true,\n        description: browser.isMacintosh ? nls.localize('gotoLineDescriptionMac', \"Go to Line\") : nls.localize('gotoLineDescriptionWin', \"Go to Line\")\n    },\n]));\nplatform_1.Registry.as(quickopen_1.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_1.QuickOpenHandlerDescriptor(gotoSymbolHandler_1.GotoSymbolHandler, gotoSymbolHandler_1.GotoSymbolHandler.ID, gotoSymbolHandler_1.GOTO_SYMBOL_PREFIX, 'inFileSymbolsPicker', [\n    {\n        prefix: gotoSymbolHandler_1.GOTO_SYMBOL_PREFIX,\n        needsEditor: true,\n        description: nls.localize('gotoSymbolDescription', \"Go to Symbol in File\")\n    },\n    {\n        prefix: gotoSymbolHandler_1.GOTO_SYMBOL_PREFIX + gotoSymbolHandler_1.SCOPE_PREFIX,\n        needsEditor: true,\n        description: nls.localize('gotoSymbolDescriptionScoped', \"Go to Symbol in File by Category\")\n    }\n]));\nplatform_1.Registry.as(quickopen_1.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_1.QuickOpenHandlerDescriptor(helpHandler_1.HelpHandler, helpHandler_1.HelpHandler.ID, helpHandler_1.HELP_PREFIX, undefined, nls.localize('helpDescription', \"Show Help\")));\nplatform_1.Registry.as(quickopen_1.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_1.QuickOpenHandlerDescriptor(viewPickerHandler_1.ViewPickerHandler, viewPickerHandler_1.ViewPickerHandler.ID, viewPickerHandler_1.VIEW_PICKER_PREFIX, inViewsPickerContextKey, [\n    {\n        prefix: viewPickerHandler_1.VIEW_PICKER_PREFIX,\n        needsEditor: false,\n        description: nls.localize('viewPickerDescription', \"Open View\")\n    }\n]));\n// View menu\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarViewMenu, {\n    group: '1_open',\n    command: {\n        id: commandsHandler_1.ShowAllCommandsAction.ID,\n        title: nls.localize({ key: 'miCommandPalette', comment: ['&& denotes a mnemonic'] }, \"&&Command Palette...\")\n    },\n    order: 1\n});\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarViewMenu, {\n    group: '1_open',\n    command: {\n        id: viewPickerHandler_1.OpenViewPickerAction.ID,\n        title: nls.localize({ key: 'miOpenView', comment: ['&& denotes a mnemonic'] }, \"&&Open View...\")\n    },\n    order: 2\n});\n// Go to menu\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarGoMenu, {\n    group: '4_symbol_nav',\n    command: {\n        id: 'workbench.action.gotoSymbol',\n        title: nls.localize({ key: 'miGotoSymbolInFile', comment: ['&& denotes a mnemonic'] }, \"Go to &&Symbol in File...\")\n    },\n    order: 1\n});\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarGoMenu, {\n    group: '5_infile_nav',\n    command: {\n        id: 'workbench.action.gotoLine',\n        title: nls.localize({ key: 'miGotoLine', comment: ['&& denotes a mnemonic'] }, \"Go to &&Line/Column...\")\n    },\n    order: 1\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/quickopen.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/quickopen.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport * as nls from 'vs/nls';\nimport { QuickOpenHandlerDescriptor, IQuickOpenRegistry, Extensions as QuickOpenExtensions } from 'vs/workbench/browser/quickopen';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { SyncActionDescriptor, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { GotoSymbolAction, GOTO_SYMBOL_PREFIX, SCOPE_PREFIX, GotoSymbolHandler } from 'vs/workbench/contrib/quickopen/browser/gotoSymbolHandler';\nimport { ShowAllCommandsAction, ALL_COMMANDS_PREFIX, ClearCommandHistoryAction, CommandsHandler } from 'vs/workbench/contrib/quickopen/browser/commandsHandler';\nimport { GotoLineAction, GOTO_LINE_PREFIX, GotoLineHandler } from 'vs/workbench/contrib/quickopen/browser/gotoLineHandler';\nimport { HELP_PREFIX, HelpHandler } from 'vs/workbench/contrib/quickopen/browser/helpHandler';\nimport { VIEW_PICKER_PREFIX, OpenViewPickerAction, QuickOpenViewPickerAction, ViewPickerHandler } from 'vs/workbench/contrib/quickopen/browser/viewPickerHandler';\nimport { inQuickOpenContext, getQuickNavigateHandler } from 'vs/workbench/browser/parts/quickopen/quickopen';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\n// Register Actions\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ClearCommandHistoryAction, ClearCommandHistoryAction.ID, ClearCommandHistoryAction.LABEL), 'Clear Command History');\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ShowAllCommandsAction, ShowAllCommandsAction.ID, ShowAllCommandsAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_P,\n\tsecondary: [KeyCode.F1]\n}), 'Show All Commands');\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(GotoLineAction, GotoLineAction.ID, GotoLineAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_G,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_G }\n}), 'Go to Line...');\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(GotoSymbolAction, GotoSymbolAction.ID, GotoSymbolAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_O\n}), 'Go to Symbol in File...');\n\nconst inViewsPickerContextKey = 'inViewsPicker';\nconst inViewsPickerContext = ContextKeyExpr.and(inQuickOpenContext, ContextKeyExpr.has(inViewsPickerContextKey));\n\nconst viewPickerKeybinding = { primary: KeyMod.CtrlCmd | KeyCode.KEY_Q, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_Q }, linux: { primary: 0 } };\n\nconst viewCategory = nls.localize('view', \"View\");\nregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenViewPickerAction, OpenViewPickerAction.ID, OpenViewPickerAction.LABEL), 'View: Open View', viewCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenViewPickerAction, QuickOpenViewPickerAction.ID, QuickOpenViewPickerAction.LABEL, viewPickerKeybinding), 'View: Quick Open View', viewCategory);\n\nconst quickOpenNavigateNextInViewPickerId = 'workbench.action.quickOpenNavigateNextInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickOpenNavigateNextInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickOpenNavigateNextInViewPickerId, true),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: viewPickerKeybinding.mac\n});\n\nconst quickOpenNavigatePreviousInViewPickerId = 'workbench.action.quickOpenNavigatePreviousInViewPicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickOpenNavigatePreviousInViewPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickOpenNavigatePreviousInViewPickerId, false),\n\twhen: inViewsPickerContext,\n\tprimary: viewPickerKeybinding.primary | KeyMod.Shift,\n\tlinux: viewPickerKeybinding.linux,\n\tmac: {\n\t\tprimary: viewPickerKeybinding.mac.primary | KeyMod.Shift\n\t}\n});\n\n// Register Quick Open Handler\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tCommandsHandler,\n\t\tCommandsHandler.ID,\n\t\tALL_COMMANDS_PREFIX,\n\t\t'inCommandsPicker',\n\t\tnls.localize('commandsHandlerDescriptionDefault', \"Show and Run Commands\")\n\t)\n);\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tGotoLineHandler,\n\t\tGotoLineHandler.ID,\n\t\tGOTO_LINE_PREFIX,\n\t\tundefined,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: GOTO_LINE_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: browser.isMacintosh ? nls.localize('gotoLineDescriptionMac', \"Go to Line\") : nls.localize('gotoLineDescriptionWin', \"Go to Line\")\n\t\t\t},\n\t\t]\n\t)\n);\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tGotoSymbolHandler,\n\t\tGotoSymbolHandler.ID,\n\t\tGOTO_SYMBOL_PREFIX,\n\t\t'inFileSymbolsPicker',\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: GOTO_SYMBOL_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: nls.localize('gotoSymbolDescription', \"Go to Symbol in File\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tprefix: GOTO_SYMBOL_PREFIX + SCOPE_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: nls.localize('gotoSymbolDescriptionScoped', \"Go to Symbol in File by Category\")\n\t\t\t}\n\t\t]\n\t)\n);\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tHelpHandler,\n\t\tHelpHandler.ID,\n\t\tHELP_PREFIX,\n\t\tundefined,\n\t\tnls.localize('helpDescription', \"Show Help\")\n\t)\n);\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tViewPickerHandler,\n\t\tViewPickerHandler.ID,\n\t\tVIEW_PICKER_PREFIX,\n\t\tinViewsPickerContextKey,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: VIEW_PICKER_PREFIX,\n\t\t\t\tneedsEditor: false,\n\t\t\t\tdescription: nls.localize('viewPickerDescription', \"Open View\")\n\t\t\t}\n\t\t]\n\t)\n);\n\n// View menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: ShowAllCommandsAction.ID,\n\t\ttitle: nls.localize({ key: 'miCommandPalette', comment: ['&& denotes a mnemonic'] }, \"&&Command Palette...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '1_open',\n\tcommand: {\n\t\tid: OpenViewPickerAction.ID,\n\t\ttitle: nls.localize({ key: 'miOpenView', comment: ['&& denotes a mnemonic'] }, \"&&Open View...\")\n\t},\n\torder: 2\n});\n\n// Go to menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '4_symbol_nav',\n\tcommand: {\n\t\tid: 'workbench.action.gotoSymbol',\n\t\ttitle: nls.localize({ key: 'miGotoSymbolInFile', comment: ['&& denotes a mnemonic'] }, \"Go to &&Symbol in File...\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '5_infile_nav',\n\tcommand: {\n\t\tid: 'workbench.action.gotoLine',\n\t\ttitle: nls.localize({ key: 'miGotoLine', comment: ['&& denotes a mnemonic'] }, \"Go to &&Line/Column...\")\n\t},\n\torder: 1\n});"]}]}