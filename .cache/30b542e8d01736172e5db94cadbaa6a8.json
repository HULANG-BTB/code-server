{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/keybinding/common/resolvedKeybindingItem.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/keybinding/common/resolvedKeybindingItem.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/charCode\"], function (require, exports, charCode_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ResolvedKeybindingItem {\n        constructor(resolvedKeybinding, command, commandArgs, when, isDefault) {\n            this.resolvedKeybinding = resolvedKeybinding;\n            this.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\n            this.bubble = (command ? command.charCodeAt(0) === charCode_1.CharCode.Caret : false);\n            this.command = this.bubble ? command.substr(1) : command;\n            this.commandArgs = commandArgs;\n            this.when = when;\n            this.isDefault = isDefault;\n        }\n    }\n    exports.ResolvedKeybindingItem = ResolvedKeybindingItem;\n    function removeElementsAfterNulls(arr) {\n        let result = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            const element = arr[i];\n            if (!element) {\n                // stop processing at first encountered null\n                return result;\n            }\n            result.push(element);\n        }\n        return result;\n    }\n    exports.removeElementsAfterNulls = removeElementsAfterNulls;\n});\n",null]}