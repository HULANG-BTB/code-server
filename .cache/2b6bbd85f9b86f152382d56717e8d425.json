{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/fill/paths.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/paths.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Paths = /** @class */ (function () {\n    function Paths() {\n    }\n    Object.defineProperty(Paths.prototype, \"appData\", {\n        get: function () {\n            if (typeof this._appData === \"undefined\") {\n                throw new Error(\"trying to access appData before it has been set\");\n            }\n            return this._appData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paths.prototype, \"defaultUserData\", {\n        get: function () {\n            if (typeof this._defaultUserData === \"undefined\") {\n                throw new Error(\"trying to access defaultUserData before it has been set\");\n            }\n            return this._defaultUserData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paths.prototype, \"socketPath\", {\n        get: function () {\n            if (typeof this._socketPath === \"undefined\") {\n                throw new Error(\"trying to access socketPath before it has been set\");\n            }\n            return this._socketPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paths.prototype, \"extensionsDirectory\", {\n        get: function () {\n            if (!this._extensionsDirectory) {\n                throw new Error(\"trying to access extensions directory before it has been set\");\n            }\n            return this._extensionsDirectory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paths.prototype, \"builtInExtensionsDirectory\", {\n        get: function () {\n            if (!this._builtInExtensionsDirectory) {\n                throw new Error(\"trying to access builtin extensions directory before it has been set\");\n            }\n            return this._builtInExtensionsDirectory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paths.prototype, \"workingDirectory\", {\n        get: function () {\n            if (!this._workingDirectory) {\n                throw new Error(\"trying to access working directory before it has been set\");\n            }\n            return this._workingDirectory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Paths.prototype.initialize = function (data, sharedData) {\n        process.env.VSCODE_LOGS = sharedData.logPath;\n        this._appData = data.dataDirectory;\n        this._defaultUserData = data.dataDirectory;\n        this._socketPath = sharedData.socketPath;\n        this._extensionsDirectory = data.extensionsDirectory;\n        this._builtInExtensionsDirectory = data.builtInExtensionsDirectory;\n        this._workingDirectory = data.workingDirectory;\n    };\n    return Paths;\n}());\nexports._paths = new Paths();\nexports.getAppDataPath = function () { return exports._paths.appData; };\nexports.getDefaultUserDataPath = function () { return exports._paths.defaultUserData; };\nexports.getWorkingDirectory = function () { return exports._paths.workingDirectory; };\nexports.getExtensionsDirectory = function () { return exports._paths.extensionsDirectory; };\nexports.getBuiltInExtensionsDirectory = function () { return exports._paths.builtInExtensionsDirectory; };\nexports.getSocketPath = function () { return exports._paths.socketPath; };\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/fill/paths.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/fill/paths.ts"],"names":[],"mappings":";;AAEA;IAAA;IAiEA,CAAC;IAzDA,sBAAW,0BAAO;aAAlB;YACC,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;aACnE;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,kCAAe;aAA1B;YACC,IAAI,OAAO,IAAI,CAAC,gBAAgB,KAAK,WAAW,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;aAC3E;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,6BAAU;aAArB;YACC,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;gBAC5C,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;aACtE;YAED,OAAO,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAW,sCAAmB;aAA9B;YACC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;aAChF;YAED,OAAO,IAAI,CAAC,oBAAoB,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAW,6CAA0B;aAArC;YACC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE;gBACtC,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;aACxF;YAED,OAAO,IAAI,CAAC,2BAA2B,CAAC;QACzC,CAAC;;;OAAA;IAED,sBAAW,mCAAgB;aAA3B;YACC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;aAC7E;YAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;;;OAAA;IAEM,0BAAU,GAAjB,UAAkB,IAAc,EAAE,UAA6B;QAC9D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrD,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,0BAA0B,CAAC;QACnE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAChD,CAAC;IACF,YAAC;AAAD,CAAC,AAjED,IAiEC;AAEY,QAAA,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;AACrB,QAAA,cAAc,GAAG,cAAc,OAAA,cAAM,CAAC,OAAO,EAAd,CAAc,CAAC;AAC9C,QAAA,sBAAsB,GAAG,cAAc,OAAA,cAAM,CAAC,eAAe,EAAtB,CAAsB,CAAC;AAC9D,QAAA,mBAAmB,GAAG,cAAc,OAAA,cAAM,CAAC,gBAAgB,EAAvB,CAAuB,CAAC;AAC5D,QAAA,sBAAsB,GAAG,cAAc,OAAA,cAAM,CAAC,mBAAmB,EAA1B,CAA0B,CAAC;AAClE,QAAA,6BAA6B,GAAG,cAAc,OAAA,cAAM,CAAC,0BAA0B,EAAjC,CAAiC,CAAC;AAChF,QAAA,aAAa,GAAG,cAAc,OAAA,cAAM,CAAC,UAAU,EAAjB,CAAiB,CAAC","sourcesContent":["import { InitData, SharedProcessData } from \"@coder/protocol\";\n\nclass Paths {\n\tprivate _appData: string | undefined;\n\tprivate _defaultUserData: string | undefined;\n\tprivate _socketPath: string | undefined;\n\tprivate _extensionsDirectory: string | undefined;\n\tprivate _builtInExtensionsDirectory: string | undefined;\n\tprivate _workingDirectory: string | undefined;\n\n\tpublic get appData(): string {\n\t\tif (typeof this._appData === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access appData before it has been set\");\n\t\t}\n\n\t\treturn this._appData;\n\t}\n\n\tpublic get defaultUserData(): string {\n\t\tif (typeof this._defaultUserData === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access defaultUserData before it has been set\");\n\t\t}\n\n\t\treturn this._defaultUserData;\n\t}\n\n\tpublic get socketPath(): string {\n\t\tif (typeof this._socketPath === \"undefined\") {\n\t\t\tthrow new Error(\"trying to access socketPath before it has been set\");\n\t\t}\n\n\t\treturn this._socketPath;\n\t}\n\n\tpublic get extensionsDirectory(): string {\n\t\tif (!this._extensionsDirectory) {\n\t\t\tthrow new Error(\"trying to access extensions directory before it has been set\");\n\t\t}\n\n\t\treturn this._extensionsDirectory;\n\t}\n\n\tpublic get builtInExtensionsDirectory(): string {\n\t\tif (!this._builtInExtensionsDirectory) {\n\t\t\tthrow new Error(\"trying to access builtin extensions directory before it has been set\");\n\t\t}\n\n\t\treturn this._builtInExtensionsDirectory;\n\t}\n\n\tpublic get workingDirectory(): string {\n\t\tif (!this._workingDirectory) {\n\t\t\tthrow new Error(\"trying to access working directory before it has been set\");\n\t\t}\n\n\t\treturn this._workingDirectory;\n\t}\n\n\tpublic initialize(data: InitData, sharedData: SharedProcessData): void {\n\t\tprocess.env.VSCODE_LOGS = sharedData.logPath;\n\t\tthis._appData = data.dataDirectory;\n\t\tthis._defaultUserData = data.dataDirectory;\n\t\tthis._socketPath = sharedData.socketPath;\n\t\tthis._extensionsDirectory = data.extensionsDirectory;\n\t\tthis._builtInExtensionsDirectory = data.builtInExtensionsDirectory;\n\t\tthis._workingDirectory = data.workingDirectory;\n\t}\n}\n\nexport const _paths = new Paths();\nexport const getAppDataPath = (): string => _paths.appData;\nexport const getDefaultUserDataPath = (): string => _paths.defaultUserData;\nexport const getWorkingDirectory = (): string => _paths.workingDirectory;\nexport const getExtensionsDirectory = (): string => _paths.extensionsDirectory;\nexport const getBuiltInExtensionsDirectory = (): string => _paths.builtInExtensionsDirectory;\nexport const getSocketPath = (): string => _paths.socketPath;\n"]}]}