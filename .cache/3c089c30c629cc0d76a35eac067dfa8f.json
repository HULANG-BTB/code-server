{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hover.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hover.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./hover\");\nvar nls = require(\"vs/nls\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar hoverOperation_1 = require(\"vs/editor/contrib/hover/hoverOperation\");\nvar modesContentHover_1 = require(\"vs/editor/contrib/hover/modesContentHover\");\nvar modesGlyphHover_1 = require(\"vs/editor/contrib/hover/modesGlyphHover\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar markersDecorationService_1 = require(\"vs/editor/common/services/markersDecorationService\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar bulkEditService_1 = require(\"vs/editor/browser/services/bulkEditService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar accessibility_1 = require(\"vs/platform/accessibility/common/accessibility\");\nvar ModesHoverController = /** @class */ (function () {\n    function ModesHoverController(_editor, _openerService, _modeService, _markerDecorationsService, _keybindingService, _contextMenuService, _bulkEditService, _commandService, _themeService) {\n        var _this = this;\n        this._editor = _editor;\n        this._openerService = _openerService;\n        this._modeService = _modeService;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._bulkEditService = _bulkEditService;\n        this._commandService = _commandService;\n        this._themeService = _themeService;\n        this._toUnhook = [];\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration(function (e) {\n            if (e.contribInfo) {\n                _this._hideWidgets();\n                _this._unhookEvents();\n                _this._hookEvents();\n            }\n        });\n    }\n    Object.defineProperty(ModesHoverController.prototype, \"contentWidget\", {\n        get: function () {\n            if (!this._contentWidget) {\n                this._createHoverWidget();\n            }\n            return this._contentWidget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ModesHoverController.prototype, \"glyphWidget\", {\n        get: function () {\n            if (!this._glyphWidget) {\n                this._createHoverWidget();\n            }\n            return this._glyphWidget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ModesHoverController.get = function (editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    };\n    ModesHoverController.prototype._hookEvents = function () {\n        var _this = this;\n        var hideWidgetsEventHandler = function () { return _this._hideWidgets(); };\n        var hoverOpts = this._editor.getConfiguration().contribInfo.hover;\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.push(this._editor.onMouseDown(function (e) { return _this._onEditorMouseDown(e); }));\n            this._toUnhook.push(this._editor.onMouseUp(function (e) { return _this._onEditorMouseUp(e); }));\n            this._toUnhook.push(this._editor.onMouseMove(function (e) { return _this._onEditorMouseMove(e); }));\n            this._toUnhook.push(this._editor.onKeyDown(function (e) { return _this._onKeyDown(e); }));\n            this._toUnhook.push(this._editor.onDidChangeModelDecorations(function () { return _this._onModelDecorationsChanged(); }));\n        }\n        else {\n            this._toUnhook.push(this._editor.onMouseMove(hideWidgetsEventHandler));\n        }\n        this._toUnhook.push(this._editor.onMouseLeave(hideWidgetsEventHandler));\n        this._toUnhook.push(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.push(this._editor.onDidScrollChange(function (e) { return _this._onEditorScrollChanged(e); }));\n    };\n    ModesHoverController.prototype._unhookEvents = function () {\n        this._toUnhook = lifecycle_1.dispose(this._toUnhook);\n    };\n    ModesHoverController.prototype._onModelDecorationsChanged = function () {\n        this.contentWidget.onModelDecorationsChanged();\n        this.glyphWidget.onModelDecorationsChanged();\n    };\n    ModesHoverController.prototype._onEditorScrollChanged = function (e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    };\n    ModesHoverController.prototype._onEditorMouseDown = function (mouseEvent) {\n        this._isMouseDown = true;\n        var targetType = mouseEvent.target.type;\n        if (targetType === editorBrowser_1.MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === modesContentHover_1.ModesContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (targetType === editorBrowser_1.MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail === modesGlyphHover_1.ModesGlyphHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (targetType !== editorBrowser_1.MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail !== modesGlyphHover_1.ModesGlyphHoverWidget.ID) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    };\n    ModesHoverController.prototype._onEditorMouseUp = function (mouseEvent) {\n        this._isMouseDown = false;\n    };\n    ModesHoverController.prototype._onEditorMouseMove = function (mouseEvent) {\n        // const this._editor.getConfiguration().contribInfo.hover.sticky;\n        var targetType = mouseEvent.target.type;\n        if (this._isMouseDown && this._hoverClicked && this.contentWidget.isColorPickerVisible()) {\n            return;\n        }\n        if (this._isHoverSticky && targetType === editorBrowser_1.MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === modesContentHover_1.ModesContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && targetType === editorBrowser_1.MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail === modesGlyphHover_1.ModesGlyphHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (targetType === editorBrowser_1.MouseTargetType.CONTENT_EMPTY) {\n            var epsilon = this._editor.getConfiguration().fontInfo.typicalHalfwidthCharacterWidth / 2;\n            var data = mouseEvent.target.detail;\n            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                targetType = editorBrowser_1.MouseTargetType.CONTENT_TEXT;\n            }\n        }\n        if (targetType === editorBrowser_1.MouseTargetType.CONTENT_TEXT) {\n            this.glyphWidget.hide();\n            if (this._isHoverEnabled && mouseEvent.target.range) {\n                this.contentWidget.startShowingAt(mouseEvent.target.range, hoverOperation_1.HoverStartMode.Delayed, false);\n            }\n        }\n        else if (targetType === editorBrowser_1.MouseTargetType.GUTTER_GLYPH_MARGIN) {\n            this.contentWidget.hide();\n            if (this._isHoverEnabled && mouseEvent.target.position) {\n                this.glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);\n            }\n        }\n        else {\n            this._hideWidgets();\n        }\n    };\n    ModesHoverController.prototype._onKeyDown = function (e) {\n        if (e.keyCode !== keyCodes_1.KeyCode.Ctrl && e.keyCode !== keyCodes_1.KeyCode.Alt && e.keyCode !== keyCodes_1.KeyCode.Meta && e.keyCode !== keyCodes_1.KeyCode.Shift) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    };\n    ModesHoverController.prototype._hideWidgets = function () {\n        if (!this._contentWidget || (this._isMouseDown && this._hoverClicked && this._contentWidget.isColorPickerVisible())) {\n            return;\n        }\n        this._glyphWidget.hide();\n        this._contentWidget.hide();\n    };\n    ModesHoverController.prototype._createHoverWidget = function () {\n        this._contentWidget = new modesContentHover_1.ModesContentHoverWidget(this._editor, this._markerDecorationsService, this._themeService, this._keybindingService, this._contextMenuService, this._bulkEditService, this._commandService, this._modeService, this._openerService);\n        this._glyphWidget = new modesGlyphHover_1.ModesGlyphHoverWidget(this._editor, this._modeService, this._openerService);\n    };\n    ModesHoverController.prototype.showContentHover = function (range, mode, focus) {\n        this.contentWidget.startShowingAt(range, mode, focus);\n    };\n    ModesHoverController.prototype.getId = function () {\n        return ModesHoverController.ID;\n    };\n    ModesHoverController.prototype.dispose = function () {\n        this._unhookEvents();\n        this._didChangeConfigurationHandler.dispose();\n        if (this._glyphWidget) {\n            this._glyphWidget.dispose();\n        }\n        if (this._contentWidget) {\n            this._contentWidget.dispose();\n        }\n    };\n    ModesHoverController.ID = 'editor.contrib.hover';\n    ModesHoverController = tslib_1.__decorate([\n        tslib_1.__param(1, opener_1.IOpenerService),\n        tslib_1.__param(2, modeService_1.IModeService),\n        tslib_1.__param(3, markersDecorationService_1.IMarkerDecorationsService),\n        tslib_1.__param(4, keybinding_1.IKeybindingService),\n        tslib_1.__param(5, contextView_1.IContextMenuService),\n        tslib_1.__param(6, bulkEditService_1.IBulkEditService),\n        tslib_1.__param(7, commands_1.ICommandService),\n        tslib_1.__param(8, themeService_1.IThemeService)\n    ], ModesHoverController);\n    return ModesHoverController;\n}());\nexports.ModesHoverController = ModesHoverController;\nvar ShowHoverAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowHoverAction, _super);\n    function ShowHoverAction() {\n        return _super.call(this, {\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyChord(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_K, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_I),\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    ShowHoverAction.prototype.run = function (accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        var controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        var position = editor.getPosition();\n        var range = new range_1.Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        var focus = editor.getConfiguration().accessibilitySupport === accessibility_1.AccessibilitySupport.Enabled;\n        controller.showContentHover(range, hoverOperation_1.HoverStartMode.Immediate, focus);\n    };\n    return ShowHoverAction;\n}(editorExtensions_1.EditorAction));\neditorExtensions_1.registerEditorContribution(ModesHoverController);\neditorExtensions_1.registerEditorAction(ShowHoverAction);\n// theming\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var editorHoverHighlightColor = theme.getColor(colorRegistry_1.editorHoverHighlight);\n    if (editorHoverHighlightColor) {\n        collector.addRule(\".monaco-editor .hoverHighlight { background-color: \" + editorHoverHighlightColor + \"; }\");\n    }\n    var hoverBackground = theme.getColor(colorRegistry_1.editorHoverBackground);\n    if (hoverBackground) {\n        collector.addRule(\".monaco-editor .monaco-editor-hover { background-color: \" + hoverBackground + \"; }\");\n    }\n    var hoverBorder = theme.getColor(colorRegistry_1.editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(\".monaco-editor .monaco-editor-hover { border: 1px solid \" + hoverBorder + \"; }\");\n        collector.addRule(\".monaco-editor .monaco-editor-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid \" + hoverBorder.transparent(0.5) + \"; }\");\n        collector.addRule(\".monaco-editor .monaco-editor-hover hr { border-top: 1px solid \" + hoverBorder.transparent(0.5) + \"; }\");\n        collector.addRule(\".monaco-editor .monaco-editor-hover hr { border-bottom: 0px solid \" + hoverBorder.transparent(0.5) + \"; }\");\n    }\n    var link = theme.getColor(colorRegistry_1.textLinkForeground);\n    if (link) {\n        collector.addRule(\".monaco-editor .monaco-editor-hover a { color: \" + link + \"; }\");\n    }\n    var actionsBackground = theme.getColor(colorRegistry_1.editorHoverStatusBarBackground);\n    if (actionsBackground) {\n        collector.addRule(\".monaco-editor .monaco-editor-hover .hover-row .actions { background-color: \" + actionsBackground + \"; }\");\n    }\n    var codeBackground = theme.getColor(colorRegistry_1.textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(\".monaco-editor .monaco-editor-hover code { background-color: \" + codeBackground + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hover.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hover.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./hover';\nimport * as nls from 'vs/nls';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyChord, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IEmptyContentData } from 'vs/editor/browser/controller/mouseTarget';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IConfigurationChangedEvent } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution, IScrollEvent } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { HoverStartMode } from 'vs/editor/contrib/hover/hoverOperation';\nimport { ModesContentHoverWidget } from 'vs/editor/contrib/hover/modesContentHover';\nimport { ModesGlyphHoverWidget } from 'vs/editor/contrib/hover/modesGlyphHover';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { editorHoverBackground, editorHoverBorder, editorHoverHighlight, textCodeBlockBackground, textLinkForeground, editorHoverStatusBarBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { IMarkerDecorationsService } from 'vs/editor/common/services/markersDecorationService';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\n\nexport class ModesHoverController implements IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.hover';\n\n\tprivate _toUnhook: IDisposable[];\n\tprivate readonly _didChangeConfigurationHandler: IDisposable;\n\n\tprivate _contentWidget: ModesContentHoverWidget;\n\tprivate _glyphWidget: ModesGlyphHoverWidget;\n\n\tget contentWidget(): ModesContentHoverWidget {\n\t\tif (!this._contentWidget) {\n\t\t\tthis._createHoverWidget();\n\t\t}\n\t\treturn this._contentWidget;\n\t}\n\n\tget glyphWidget(): ModesGlyphHoverWidget {\n\t\tif (!this._glyphWidget) {\n\t\t\tthis._createHoverWidget();\n\t\t}\n\t\treturn this._glyphWidget;\n\t}\n\n\tprivate _isMouseDown: boolean;\n\tprivate _hoverClicked: boolean;\n\tprivate _isHoverEnabled: boolean;\n\tprivate _isHoverSticky: boolean;\n\n\tstatic get(editor: ICodeEditor): ModesHoverController {\n\t\treturn editor.getContribution<ModesHoverController>(ModesHoverController.ID);\n\t}\n\n\tconstructor(private readonly _editor: ICodeEditor,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IModeService private readonly _modeService: IModeService,\n\t\t@IMarkerDecorationsService private readonly _markerDecorationsService: IMarkerDecorationsService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IThemeService private readonly _themeService: IThemeService\n\t) {\n\t\tthis._toUnhook = [];\n\n\t\tthis._isMouseDown = false;\n\t\tthis._hoverClicked = false;\n\n\t\tthis._hookEvents();\n\n\t\tthis._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {\n\t\t\tif (e.contribInfo) {\n\t\t\t\tthis._hideWidgets();\n\t\t\t\tthis._unhookEvents();\n\t\t\t\tthis._hookEvents();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _hookEvents(): void {\n\t\tconst hideWidgetsEventHandler = () => this._hideWidgets();\n\n\t\tconst hoverOpts = this._editor.getConfiguration().contribInfo.hover;\n\t\tthis._isHoverEnabled = hoverOpts.enabled;\n\t\tthis._isHoverSticky = hoverOpts.sticky;\n\t\tif (this._isHoverEnabled) {\n\t\t\tthis._toUnhook.push(this._editor.onMouseDown((e: IEditorMouseEvent) => this._onEditorMouseDown(e)));\n\t\t\tthis._toUnhook.push(this._editor.onMouseUp((e: IEditorMouseEvent) => this._onEditorMouseUp(e)));\n\t\t\tthis._toUnhook.push(this._editor.onMouseMove((e: IEditorMouseEvent) => this._onEditorMouseMove(e)));\n\t\t\tthis._toUnhook.push(this._editor.onKeyDown((e: IKeyboardEvent) => this._onKeyDown(e)));\n\t\t\tthis._toUnhook.push(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n\t\t} else {\n\t\t\tthis._toUnhook.push(this._editor.onMouseMove(hideWidgetsEventHandler));\n\t\t}\n\n\t\tthis._toUnhook.push(this._editor.onMouseLeave(hideWidgetsEventHandler));\n\t\tthis._toUnhook.push(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n\t\tthis._toUnhook.push(this._editor.onDidScrollChange((e: IScrollEvent) => this._onEditorScrollChanged(e)));\n\t}\n\n\tprivate _unhookEvents(): void {\n\t\tthis._toUnhook = dispose(this._toUnhook);\n\t}\n\n\tprivate _onModelDecorationsChanged(): void {\n\t\tthis.contentWidget.onModelDecorationsChanged();\n\t\tthis.glyphWidget.onModelDecorationsChanged();\n\t}\n\n\tprivate _onEditorScrollChanged(e: IScrollEvent): void {\n\t\tif (e.scrollTopChanged || e.scrollLeftChanged) {\n\t\t\tthis._hideWidgets();\n\t\t}\n\t}\n\n\tprivate _onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._isMouseDown = true;\n\n\t\tconst targetType = mouseEvent.target.type;\n\n\t\tif (targetType === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\n\t\t\tthis._hoverClicked = true;\n\t\t\t// mouse down on top of content hover widget\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetType === MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\n\t\t\t// mouse down on top of overlay hover widget\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetType !== MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail !== ModesGlyphHoverWidget.ID) {\n\t\t\tthis._hoverClicked = false;\n\t\t}\n\n\t\tthis._hideWidgets();\n\t}\n\n\tprivate _onEditorMouseUp(mouseEvent: IEditorMouseEvent): void {\n\t\tthis._isMouseDown = false;\n\t}\n\n\tprivate _onEditorMouseMove(mouseEvent: IEditorMouseEvent): void {\n\t\t// const this._editor.getConfiguration().contribInfo.hover.sticky;\n\t\tlet targetType = mouseEvent.target.type;\n\n\t\tif (this._isMouseDown && this._hoverClicked && this.contentWidget.isColorPickerVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isHoverSticky && targetType === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\n\t\t\t// mouse moved on top of content hover widget\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isHoverSticky && targetType === MouseTargetType.OVERLAY_WIDGET && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\n\t\t\t// mouse moved on top of overlay hover widget\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetType === MouseTargetType.CONTENT_EMPTY) {\n\t\t\tconst epsilon = this._editor.getConfiguration().fontInfo.typicalHalfwidthCharacterWidth / 2;\n\t\t\tconst data = <IEmptyContentData>mouseEvent.target.detail;\n\t\t\tif (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\n\t\t\t\t// Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n\t\t\t\ttargetType = MouseTargetType.CONTENT_TEXT;\n\t\t\t}\n\t\t}\n\n\t\tif (targetType === MouseTargetType.CONTENT_TEXT) {\n\t\t\tthis.glyphWidget.hide();\n\n\t\t\tif (this._isHoverEnabled && mouseEvent.target.range) {\n\t\t\t\tthis.contentWidget.startShowingAt(mouseEvent.target.range, HoverStartMode.Delayed, false);\n\t\t\t}\n\t\t} else if (targetType === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\tthis.contentWidget.hide();\n\n\t\t\tif (this._isHoverEnabled && mouseEvent.target.position) {\n\t\t\t\tthis.glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._hideWidgets();\n\t\t}\n\t}\n\n\tprivate _onKeyDown(e: IKeyboardEvent): void {\n\t\tif (e.keyCode !== KeyCode.Ctrl && e.keyCode !== KeyCode.Alt && e.keyCode !== KeyCode.Meta && e.keyCode !== KeyCode.Shift) {\n\t\t\t// Do not hide hover when a modifier key is pressed\n\t\t\tthis._hideWidgets();\n\t\t}\n\t}\n\n\tprivate _hideWidgets(): void {\n\t\tif (!this._contentWidget || (this._isMouseDown && this._hoverClicked && this._contentWidget.isColorPickerVisible())) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._glyphWidget.hide();\n\t\tthis._contentWidget.hide();\n\t}\n\n\tprivate _createHoverWidget() {\n\t\tthis._contentWidget = new ModesContentHoverWidget(this._editor, this._markerDecorationsService, this._themeService, this._keybindingService, this._contextMenuService, this._bulkEditService, this._commandService, this._modeService, this._openerService);\n\t\tthis._glyphWidget = new ModesGlyphHoverWidget(this._editor, this._modeService, this._openerService);\n\t}\n\n\tpublic showContentHover(range: Range, mode: HoverStartMode, focus: boolean): void {\n\t\tthis.contentWidget.startShowingAt(range, mode, focus);\n\t}\n\n\tpublic getId(): string {\n\t\treturn ModesHoverController.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._unhookEvents();\n\t\tthis._didChangeConfigurationHandler.dispose();\n\n\t\tif (this._glyphWidget) {\n\t\t\tthis._glyphWidget.dispose();\n\t\t}\n\t\tif (this._contentWidget) {\n\t\t\tthis._contentWidget.dispose();\n\t\t}\n\t}\n}\n\nclass ShowHoverAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.showHover',\n\t\t\tlabel: nls.localize({\n\t\t\t\tkey: 'showHover',\n\t\t\t\tcomment: [\n\t\t\t\t\t'Label for action that will trigger the showing of a hover in the editor.',\n\t\t\t\t\t'This allows for users to show the hover without using the mouse.'\n\t\t\t\t]\n\t\t\t}, \"Show Hover\"),\n\t\t\talias: 'Show Hover',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_I),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tlet controller = ModesHoverController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst position = editor.getPosition();\n\t\tconst range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\tconst focus = editor.getConfiguration().accessibilitySupport === AccessibilitySupport.Enabled;\n\t\tcontroller.showContentHover(range, HoverStartMode.Immediate, focus);\n\t}\n}\n\nregisterEditorContribution(ModesHoverController);\nregisterEditorAction(ShowHoverAction);\n\n// theming\nregisterThemingParticipant((theme, collector) => {\n\tconst editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\n\tif (editorHoverHighlightColor) {\n\t\tcollector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\n\t}\n\tconst hoverBackground = theme.getColor(editorHoverBackground);\n\tif (hoverBackground) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover { background-color: ${hoverBackground}; }`);\n\t}\n\tconst hoverBorder = theme.getColor(editorHoverBorder);\n\tif (hoverBorder) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover { border: 1px solid ${hoverBorder}; }`);\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n\t}\n\tconst link = theme.getColor(textLinkForeground);\n\tif (link) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover a { color: ${link}; }`);\n\t}\n\tconst actionsBackground = theme.getColor(editorHoverStatusBarBackground);\n\tif (actionsBackground) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\n\t}\n\tconst codeBackground = theme.getColor(textCodeBlockBackground);\n\tif (codeBackground) {\n\t\tcollector.addRule(`.monaco-editor .monaco-editor-hover code { background-color: ${codeBackground}; }`);\n\t}\n});\n"]}]}