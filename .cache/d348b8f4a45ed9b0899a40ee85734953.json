{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/common/proxyIdentifier.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/extensions/common/proxyIdentifier.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ProxyIdentifier {\n        constructor(isMain, sid) {\n            this.isMain = isMain;\n            this.sid = sid;\n            this.nid = (++ProxyIdentifier.count);\n        }\n    }\n    ProxyIdentifier.count = 0;\n    exports.ProxyIdentifier = ProxyIdentifier;\n    const identifiers = [];\n    function createMainContextProxyIdentifier(identifier) {\n        const result = new ProxyIdentifier(true, identifier);\n        identifiers[result.nid] = result;\n        return result;\n    }\n    exports.createMainContextProxyIdentifier = createMainContextProxyIdentifier;\n    function createExtHostContextProxyIdentifier(identifier) {\n        const result = new ProxyIdentifier(false, identifier);\n        identifiers[result.nid] = result;\n        return result;\n    }\n    exports.createExtHostContextProxyIdentifier = createExtHostContextProxyIdentifier;\n    function getStringIdentifierForProxy(nid) {\n        return identifiers[nid].sid;\n    }\n    exports.getStringIdentifierForProxy = getStringIdentifierForProxy;\n});\n",null]}