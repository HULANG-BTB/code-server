{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/controller/mouseHandler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/controller/mouseHandler.ts","mtime":1555846338028},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser = require(\"vs/base/browser/browser\");\nvar dom = require(\"vs/base/browser/dom\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar async_1 = require(\"vs/base/common/async\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar mouseTarget_1 = require(\"vs/editor/browser/controller/mouseTarget\");\nvar editorBrowser = require(\"vs/editor/browser/editorBrowser\");\nvar editorDom_1 = require(\"vs/editor/browser/editorDom\");\nvar editorZoom_1 = require(\"vs/editor/common/config/editorZoom\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar selection_1 = require(\"vs/editor/common/core/selection\");\nvar viewEventHandler_1 = require(\"vs/editor/common/viewModel/viewEventHandler\");\n/**\n * Merges mouse events when mouse move events are throttled\n */\nfunction createMouseMoveEventMerger(mouseTargetFactory) {\n    return function (lastEvent, currentEvent) {\n        var targetIsWidget = false;\n        if (mouseTargetFactory) {\n            targetIsWidget = mouseTargetFactory.mouseTargetIsWidget(currentEvent);\n        }\n        if (!targetIsWidget) {\n            currentEvent.preventDefault();\n        }\n        return currentEvent;\n    };\n}\nvar MouseHandler = /** @class */ (function (_super) {\n    tslib_1.__extends(MouseHandler, _super);\n    function MouseHandler(context, viewController, viewHelper) {\n        var _this = _super.call(this) || this;\n        _this._isFocused = false;\n        _this._context = context;\n        _this.viewController = viewController;\n        _this.viewHelper = viewHelper;\n        _this.mouseTargetFactory = new mouseTarget_1.MouseTargetFactory(_this._context, viewHelper);\n        _this._mouseDownOperation = _this._register(new MouseDownOperation(_this._context, _this.viewController, _this.viewHelper, function (e, testEventTarget) { return _this._createMouseTarget(e, testEventTarget); }, function (e) { return _this._getMouseColumn(e); }));\n        _this._asyncFocus = _this._register(new async_1.RunOnceScheduler(function () { return _this.viewHelper.focusTextArea(); }, 0));\n        _this.lastMouseLeaveTime = -1;\n        var mouseEvents = new editorDom_1.EditorMouseEventFactory(_this.viewHelper.viewDomNode);\n        _this._register(mouseEvents.onContextMenu(_this.viewHelper.viewDomNode, function (e) { return _this._onContextMenu(e, true); }));\n        _this._register(mouseEvents.onMouseMoveThrottled(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseMove(e); }, createMouseMoveEventMerger(_this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\n        _this._register(mouseEvents.onMouseUp(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseUp(e); }));\n        _this._register(mouseEvents.onMouseLeave(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseLeave(e); }));\n        _this._register(mouseEvents.onMouseDown(_this.viewHelper.viewDomNode, function (e) { return _this._onMouseDown(e); }));\n        var onMouseWheel = function (browserEvent) {\n            if (!_this._context.configuration.editor.viewInfo.mouseWheelZoom) {\n                return;\n            }\n            var e = new mouseEvent_1.StandardWheelEvent(browserEvent);\n            if (e.browserEvent.ctrlKey || e.browserEvent.metaKey) {\n                var zoomLevel = editorZoom_1.EditorZoom.getZoomLevel();\n                var delta = e.deltaY > 0 ? 1 : -1;\n                editorZoom_1.EditorZoom.setZoomLevel(zoomLevel + delta);\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n        _this._register(dom.addDisposableListener(_this.viewHelper.viewDomNode, 'mousewheel', onMouseWheel, true));\n        _this._context.addEventHandler(_this);\n        return _this;\n    }\n    MouseHandler.prototype.dispose = function () {\n        this._context.removeEventHandler(this);\n        _super.prototype.dispose.call(this);\n    };\n    // --- begin event handlers\n    MouseHandler.prototype.onCursorStateChanged = function (e) {\n        this._mouseDownOperation.onCursorStateChanged(e);\n        return false;\n    };\n    MouseHandler.prototype.onFocusChanged = function (e) {\n        this._isFocused = e.isFocused;\n        return false;\n    };\n    MouseHandler.prototype.onScrollChanged = function (e) {\n        this._mouseDownOperation.onScrollChanged();\n        return false;\n    };\n    // --- end event handlers\n    MouseHandler.prototype.getTargetAtClientPoint = function (clientX, clientY) {\n        var clientPos = new editorDom_1.ClientCoordinates(clientX, clientY);\n        var pos = clientPos.toPageCoordinates();\n        var editorPos = editorDom_1.createEditorPagePosition(this.viewHelper.viewDomNode);\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n            return null;\n        }\n        var lastViewCursorsRenderData = this.viewHelper.getLastViewCursorsRenderData();\n        return this.mouseTargetFactory.createMouseTarget(lastViewCursorsRenderData, editorPos, pos, null);\n    };\n    MouseHandler.prototype._createMouseTarget = function (e, testEventTarget) {\n        var lastViewCursorsRenderData = this.viewHelper.getLastViewCursorsRenderData();\n        return this.mouseTargetFactory.createMouseTarget(lastViewCursorsRenderData, e.editorPos, e.pos, testEventTarget ? e.target : null);\n    };\n    MouseHandler.prototype._getMouseColumn = function (e) {\n        return this.mouseTargetFactory.getMouseColumn(e.editorPos, e.pos);\n    };\n    MouseHandler.prototype._onContextMenu = function (e, testEventTarget) {\n        this.viewController.emitContextMenu({\n            event: e,\n            target: this._createMouseTarget(e, testEventTarget)\n        });\n    };\n    MouseHandler.prototype._onMouseMove = function (e) {\n        if (this._mouseDownOperation.isActive()) {\n            // In selection/drag operation\n            return;\n        }\n        var actualMouseMoveTime = e.timestamp;\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n            return;\n        }\n        this.viewController.emitMouseMove({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    };\n    MouseHandler.prototype._onMouseLeave = function (e) {\n        this.lastMouseLeaveTime = (new Date()).getTime();\n        this.viewController.emitMouseLeave({\n            event: e,\n            target: null\n        });\n    };\n    MouseHandler.prototype._onMouseUp = function (e) {\n        this.viewController.emitMouseUp({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    };\n    MouseHandler.prototype._onMouseDown = function (e) {\n        var _this = this;\n        var t = this._createMouseTarget(e, true);\n        var targetIsContent = (t.type === editorBrowser.MouseTargetType.CONTENT_TEXT || t.type === editorBrowser.MouseTargetType.CONTENT_EMPTY);\n        var targetIsGutter = (t.type === editorBrowser.MouseTargetType.GUTTER_GLYPH_MARGIN || t.type === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS || t.type === editorBrowser.MouseTargetType.GUTTER_LINE_DECORATIONS);\n        var targetIsLineNumbers = (t.type === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS);\n        var selectOnLineNumbers = this._context.configuration.editor.viewInfo.selectOnLineNumbers;\n        var targetIsViewZone = (t.type === editorBrowser.MouseTargetType.CONTENT_VIEW_ZONE || t.type === editorBrowser.MouseTargetType.GUTTER_VIEW_ZONE);\n        var targetIsWidget = (t.type === editorBrowser.MouseTargetType.CONTENT_WIDGET);\n        var shouldHandle = e.leftButton || e.middleButton;\n        if (browser.isMacintosh && e.leftButton && e.ctrlKey) {\n            shouldHandle = false;\n        }\n        var focus = function () {\n            // In IE11, if the focus is in the browser's address bar and\n            // then you click in the editor, calling preventDefault()\n            // will not move focus properly (focus remains the address bar)\n            if (browser.isIE && !_this._isFocused) {\n                _this._asyncFocus.schedule();\n            }\n            else {\n                e.preventDefault();\n                _this.viewHelper.focusTextArea();\n            }\n        };\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n            focus();\n            this._mouseDownOperation.start(t.type, e);\n        }\n        else if (targetIsGutter) {\n            // Do not steal focus\n            e.preventDefault();\n        }\n        else if (targetIsViewZone) {\n            var viewZoneData = t.detail;\n            if (this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n                focus();\n                this._mouseDownOperation.start(t.type, e);\n                e.preventDefault();\n            }\n        }\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n            focus();\n            e.preventDefault();\n        }\n        this.viewController.emitMouseDown({\n            event: e,\n            target: t\n        });\n    };\n    MouseHandler.MOUSE_MOVE_MINIMUM_TIME = 100; // ms\n    return MouseHandler;\n}(viewEventHandler_1.ViewEventHandler));\nexports.MouseHandler = MouseHandler;\nvar MouseDownOperation = /** @class */ (function (_super) {\n    tslib_1.__extends(MouseDownOperation, _super);\n    function MouseDownOperation(context, viewController, viewHelper, createMouseTarget, getMouseColumn) {\n        var _this = _super.call(this) || this;\n        _this._context = context;\n        _this._viewController = viewController;\n        _this._viewHelper = viewHelper;\n        _this._createMouseTarget = createMouseTarget;\n        _this._getMouseColumn = getMouseColumn;\n        _this._mouseMoveMonitor = _this._register(new editorDom_1.GlobalEditorMouseMoveMonitor(_this._viewHelper.viewDomNode));\n        _this._onScrollTimeout = _this._register(new async_1.TimeoutTimer());\n        _this._mouseState = new MouseDownState();\n        _this._currentSelection = new selection_1.Selection(1, 1, 1, 1);\n        _this._isActive = false;\n        _this._lastMouseEvent = null;\n        return _this;\n    }\n    MouseDownOperation.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    MouseDownOperation.prototype.isActive = function () {\n        return this._isActive;\n    };\n    MouseDownOperation.prototype._onMouseDownThenMove = function (e) {\n        this._lastMouseEvent = e;\n        this._mouseState.setModifiers(e);\n        var position = this._findMousePosition(e, true);\n        if (!position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        if (this._mouseState.isDragAndDrop) {\n            this._viewController.emitMouseDrag({\n                event: e,\n                target: position\n            });\n        }\n        else {\n            this._dispatchMouse(position, true);\n        }\n    };\n    MouseDownOperation.prototype.start = function (targetType, e) {\n        var _this = this;\n        this._lastMouseEvent = e;\n        this._mouseState.setStartedOnLineNumbers(targetType === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS);\n        this._mouseState.setStartButtons(e);\n        this._mouseState.setModifiers(e);\n        var position = this._findMousePosition(e, true);\n        if (!position || !position.position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        this._mouseState.trySetCount(e.detail, position.position);\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n        e.detail = this._mouseState.count;\n        if (!this._context.configuration.editor.readOnly\n            && this._context.configuration.editor.dragAndDrop\n            && !this._mouseState.altKey // we don't support multiple mouse\n            && e.detail < 2 // only single click on a selection can work\n            && !this._isActive // the mouse is not down yet\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\n            && (position.type === editorBrowser.MouseTargetType.CONTENT_TEXT) // single click on text\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n        ) {\n            this._mouseState.isDragAndDrop = true;\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(createMouseMoveEventMerger(null), function (e) { return _this._onMouseDownThenMove(e); }, function () {\n                var position = _this._findMousePosition(_this._lastMouseEvent, true);\n                _this._viewController.emitMouseDrop({\n                    event: _this._lastMouseEvent,\n                    target: (position ? _this._createMouseTarget(_this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n                });\n                _this._stop();\n            });\n            return;\n        }\n        this._mouseState.isDragAndDrop = false;\n        this._dispatchMouse(position, e.shiftKey);\n        if (!this._isActive) {\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(createMouseMoveEventMerger(null), function (e) { return _this._onMouseDownThenMove(e); }, function () { return _this._stop(); });\n        }\n    };\n    MouseDownOperation.prototype._stop = function () {\n        this._isActive = false;\n        this._onScrollTimeout.cancel();\n    };\n    MouseDownOperation.prototype.onScrollChanged = function () {\n        var _this = this;\n        if (!this._isActive) {\n            return;\n        }\n        this._onScrollTimeout.setIfNotSet(function () {\n            if (!_this._lastMouseEvent) {\n                return;\n            }\n            var position = _this._findMousePosition(_this._lastMouseEvent, false);\n            if (!position) {\n                // Ignoring because position is unknown\n                return;\n            }\n            if (_this._mouseState.isDragAndDrop) {\n                // Ignoring because users are dragging the text\n                return;\n            }\n            _this._dispatchMouse(position, true);\n        }, 10);\n    };\n    MouseDownOperation.prototype.onCursorStateChanged = function (e) {\n        this._currentSelection = e.selections[0];\n    };\n    MouseDownOperation.prototype._getPositionOutsideEditor = function (e) {\n        var editorContent = e.editorPos;\n        var model = this._context.model;\n        var viewLayout = this._context.viewLayout;\n        var mouseColumn = this._getMouseColumn(e);\n        if (e.posy < editorContent.y) {\n            var verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - (editorContent.y - e.posy), 0);\n            var viewZoneData = mouseTarget_1.HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                var newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, newPosition);\n                }\n            }\n            var aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new position_1.Position(aboveLineNumber, 1));\n        }\n        if (e.posy > editorContent.y + editorContent.height) {\n            var verticalOffset = viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y);\n            var viewZoneData = mouseTarget_1.HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                var newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, newPosition);\n                }\n            }\n            var belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new position_1.Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)));\n        }\n        var possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y));\n        if (e.posx < editorContent.x) {\n            return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new position_1.Position(possibleLineNumber, 1));\n        }\n        if (e.posx > editorContent.x + editorContent.width) {\n            return new mouseTarget_1.MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new position_1.Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)));\n        }\n        return null;\n    };\n    MouseDownOperation.prototype._findMousePosition = function (e, testEventTarget) {\n        var positionOutsideEditor = this._getPositionOutsideEditor(e);\n        if (positionOutsideEditor) {\n            return positionOutsideEditor;\n        }\n        var t = this._createMouseTarget(e, testEventTarget);\n        var hintedPosition = t.position;\n        if (!hintedPosition) {\n            return null;\n        }\n        if (t.type === editorBrowser.MouseTargetType.CONTENT_VIEW_ZONE || t.type === editorBrowser.MouseTargetType.GUTTER_VIEW_ZONE) {\n            var newPosition = this._helpPositionJumpOverViewZone(t.detail);\n            if (newPosition) {\n                return new mouseTarget_1.MouseTarget(t.element, t.type, t.mouseColumn, newPosition, null, t.detail);\n            }\n        }\n        return t;\n    };\n    MouseDownOperation.prototype._helpPositionJumpOverViewZone = function (viewZoneData) {\n        // Force position on view zones to go above or below depending on where selection started from\n        var selectionStart = new position_1.Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n        var positionBefore = viewZoneData.positionBefore;\n        var positionAfter = viewZoneData.positionAfter;\n        if (positionBefore && positionAfter) {\n            if (positionBefore.isBefore(selectionStart)) {\n                return positionBefore;\n            }\n            else {\n                return positionAfter;\n            }\n        }\n        return null;\n    };\n    MouseDownOperation.prototype._dispatchMouse = function (position, inSelectionMode) {\n        if (!position.position) {\n            return;\n        }\n        this._viewController.dispatchMouse({\n            position: position.position,\n            mouseColumn: position.mouseColumn,\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n            inSelectionMode: inSelectionMode,\n            mouseDownCount: this._mouseState.count,\n            altKey: this._mouseState.altKey,\n            ctrlKey: this._mouseState.ctrlKey,\n            metaKey: this._mouseState.metaKey,\n            shiftKey: this._mouseState.shiftKey,\n            leftButton: this._mouseState.leftButton,\n            middleButton: this._mouseState.middleButton,\n        });\n    };\n    return MouseDownOperation;\n}(lifecycle_1.Disposable));\nvar MouseDownState = /** @class */ (function () {\n    function MouseDownState() {\n        this._altKey = false;\n        this._ctrlKey = false;\n        this._metaKey = false;\n        this._shiftKey = false;\n        this._leftButton = false;\n        this._middleButton = false;\n        this._startedOnLineNumbers = false;\n        this._lastMouseDownPosition = null;\n        this._lastMouseDownPositionEqualCount = 0;\n        this._lastMouseDownCount = 0;\n        this._lastSetMouseDownCountTime = 0;\n        this.isDragAndDrop = false;\n    }\n    Object.defineProperty(MouseDownState.prototype, \"altKey\", {\n        get: function () { return this._altKey; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"ctrlKey\", {\n        get: function () { return this._ctrlKey; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"metaKey\", {\n        get: function () { return this._metaKey; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"shiftKey\", {\n        get: function () { return this._shiftKey; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"leftButton\", {\n        get: function () { return this._leftButton; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"middleButton\", {\n        get: function () { return this._middleButton; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"startedOnLineNumbers\", {\n        get: function () { return this._startedOnLineNumbers; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseDownState.prototype, \"count\", {\n        get: function () {\n            return this._lastMouseDownCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MouseDownState.prototype.setModifiers = function (source) {\n        this._altKey = source.altKey;\n        this._ctrlKey = source.ctrlKey;\n        this._metaKey = source.metaKey;\n        this._shiftKey = source.shiftKey;\n    };\n    MouseDownState.prototype.setStartButtons = function (source) {\n        this._leftButton = source.leftButton;\n        this._middleButton = source.middleButton;\n    };\n    MouseDownState.prototype.setStartedOnLineNumbers = function (startedOnLineNumbers) {\n        this._startedOnLineNumbers = startedOnLineNumbers;\n    };\n    MouseDownState.prototype.trySetCount = function (setMouseDownCount, newMouseDownPosition) {\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        var currentTime = (new Date()).getTime();\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n            setMouseDownCount = 1;\n        }\n        this._lastSetMouseDownCountTime = currentTime;\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\n            setMouseDownCount = this._lastMouseDownCount + 1;\n        }\n        // c. Invalidate multiple clicking if the logical position is different\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n            this._lastMouseDownPositionEqualCount++;\n        }\n        else {\n            this._lastMouseDownPositionEqualCount = 1;\n        }\n        this._lastMouseDownPosition = newMouseDownPosition;\n        // Finally set the lastMouseDownCount\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    };\n    MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n    return MouseDownState;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/controller/mouseHandler.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/controller/mouseHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardWheelEvent, IMouseWheelEvent } from 'vs/base/browser/mouseEvent';\nimport { RunOnceScheduler, TimeoutTimer } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { HitTestContext, IViewZoneData, MouseTarget, MouseTargetFactory } from 'vs/editor/browser/controller/mouseTarget';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorMouseMoveMonitor, createEditorPagePosition } from 'vs/editor/browser/editorDom';\nimport { ViewController } from 'vs/editor/browser/view/viewController';\nimport { IViewCursorRenderData } from 'vs/editor/browser/viewParts/viewCursors/viewCursor';\nimport { EditorZoom } from 'vs/editor/common/config/editorZoom';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { HorizontalRange } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\n\n/**\n * Merges mouse events when mouse move events are throttled\n */\nfunction createMouseMoveEventMerger(mouseTargetFactory: MouseTargetFactory | null) {\n\treturn function (lastEvent: EditorMouseEvent, currentEvent: EditorMouseEvent): EditorMouseEvent {\n\t\tlet targetIsWidget = false;\n\t\tif (mouseTargetFactory) {\n\t\t\ttargetIsWidget = mouseTargetFactory.mouseTargetIsWidget(currentEvent);\n\t\t}\n\t\tif (!targetIsWidget) {\n\t\t\tcurrentEvent.preventDefault();\n\t\t}\n\t\treturn currentEvent;\n\t};\n}\n\nexport interface IPointerHandlerHelper {\n\tviewDomNode: HTMLElement;\n\tlinesContentDomNode: HTMLElement;\n\n\tfocusTextArea(): void;\n\n\t/**\n\t * Get the last rendered information of the cursors.\n\t */\n\tgetLastViewCursorsRenderData(): IViewCursorRenderData[];\n\n\tshouldSuppressMouseDownOnViewZone(viewZoneId: number): boolean;\n\tshouldSuppressMouseDownOnWidget(widgetId: string): boolean;\n\n\t/**\n\t * Decode a position from a rendered dom node\n\t */\n\tgetPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null;\n\n\tvisibleRangeForPosition2(lineNumber: number, column: number): HorizontalRange | null;\n\tgetLineWidth(lineNumber: number): number;\n}\n\nexport class MouseHandler extends ViewEventHandler {\n\n\tstatic MOUSE_MOVE_MINIMUM_TIME = 100; // ms\n\n\tprotected _context: ViewContext;\n\tprotected viewController: ViewController;\n\tprotected viewHelper: IPointerHandlerHelper;\n\tprotected mouseTargetFactory: MouseTargetFactory;\n\tprivate readonly _asyncFocus: RunOnceScheduler;\n\n\tprivate readonly _mouseDownOperation: MouseDownOperation;\n\tprivate lastMouseLeaveTime: number;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis.viewController = viewController;\n\t\tthis.viewHelper = viewHelper;\n\t\tthis.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n\n\t\tthis._mouseDownOperation = this._register(new MouseDownOperation(\n\t\t\tthis._context,\n\t\t\tthis.viewController,\n\t\t\tthis.viewHelper,\n\t\t\t(e, testEventTarget) => this._createMouseTarget(e, testEventTarget),\n\t\t\t(e) => this._getMouseColumn(e)\n\t\t));\n\n\t\tthis._asyncFocus = this._register(new RunOnceScheduler(() => this.viewHelper.focusTextArea(), 0));\n\n\t\tthis.lastMouseLeaveTime = -1;\n\n\t\tconst mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n\n\t\tthis._register(mouseEvents.onMouseMoveThrottled(this.viewHelper.viewDomNode,\n\t\t\t(e) => this._onMouseMove(e),\n\t\t\tcreateMouseMoveEventMerger(this.mouseTargetFactory), MouseHandler.MOUSE_MOVE_MINIMUM_TIME));\n\n\t\tthis._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\n\t\tthis._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\n\t\tthis._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e)));\n\n\t\tconst onMouseWheel = (browserEvent: IMouseWheelEvent) => {\n\t\t\tif (!this._context.configuration.editor.viewInfo.mouseWheelZoom) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst e = new StandardWheelEvent(browserEvent);\n\t\t\tif (e.browserEvent!.ctrlKey || e.browserEvent!.metaKey) {\n\t\t\t\tconst zoomLevel: number = EditorZoom.getZoomLevel();\n\t\t\t\tconst delta = e.deltaY > 0 ? 1 : -1;\n\t\t\t\tEditorZoom.setZoomLevel(zoomLevel + delta);\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t};\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.viewDomNode, 'mousewheel', onMouseWheel, true));\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\tpublic onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._mouseDownOperation.onCursorStateChanged(e);\n\t\treturn false;\n\t}\n\tprivate _isFocused = false;\n\tpublic onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._isFocused = e.isFocused;\n\t\treturn false;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._mouseDownOperation.onScrollChanged();\n\t\treturn false;\n\t}\n\t// --- end event handlers\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): editorBrowser.IMouseTarget | null {\n\t\tconst clientPos = new ClientCoordinates(clientX, clientY);\n\t\tconst pos = clientPos.toPageCoordinates();\n\t\tconst editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n\n\t\tif (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst lastViewCursorsRenderData = this.viewHelper.getLastViewCursorsRenderData();\n\t\treturn this.mouseTargetFactory.createMouseTarget(lastViewCursorsRenderData, editorPos, pos, null);\n\t}\n\n\tprotected _createMouseTarget(e: EditorMouseEvent, testEventTarget: boolean): editorBrowser.IMouseTarget {\n\t\tconst lastViewCursorsRenderData = this.viewHelper.getLastViewCursorsRenderData();\n\t\treturn this.mouseTargetFactory.createMouseTarget(lastViewCursorsRenderData, e.editorPos, e.pos, testEventTarget ? e.target : null);\n\t}\n\n\tprivate _getMouseColumn(e: EditorMouseEvent): number {\n\t\treturn this.mouseTargetFactory.getMouseColumn(e.editorPos, e.pos);\n\t}\n\n\tprotected _onContextMenu(e: EditorMouseEvent, testEventTarget: boolean): void {\n\t\tthis.viewController.emitContextMenu({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, testEventTarget)\n\t\t});\n\t}\n\n\tprivate _onMouseMove(e: EditorMouseEvent): void {\n\t\tif (this._mouseDownOperation.isActive()) {\n\t\t\t// In selection/drag operation\n\t\t\treturn;\n\t\t}\n\t\tconst actualMouseMoveTime = e.timestamp;\n\t\tif (actualMouseMoveTime < this.lastMouseLeaveTime) {\n\t\t\t// Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewController.emitMouseMove({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tprivate _onMouseLeave(e: EditorMouseEvent): void {\n\t\tthis.lastMouseLeaveTime = (new Date()).getTime();\n\t\tthis.viewController.emitMouseLeave({\n\t\t\tevent: e,\n\t\t\ttarget: null\n\t\t});\n\t}\n\n\tpublic _onMouseUp(e: EditorMouseEvent): void {\n\t\tthis.viewController.emitMouseUp({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tpublic _onMouseDown(e: EditorMouseEvent): void {\n\t\tconst t = this._createMouseTarget(e, true);\n\n\t\tconst targetIsContent = (t.type === editorBrowser.MouseTargetType.CONTENT_TEXT || t.type === editorBrowser.MouseTargetType.CONTENT_EMPTY);\n\t\tconst targetIsGutter = (t.type === editorBrowser.MouseTargetType.GUTTER_GLYPH_MARGIN || t.type === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS || t.type === editorBrowser.MouseTargetType.GUTTER_LINE_DECORATIONS);\n\t\tconst targetIsLineNumbers = (t.type === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tconst selectOnLineNumbers = this._context.configuration.editor.viewInfo.selectOnLineNumbers;\n\t\tconst targetIsViewZone = (t.type === editorBrowser.MouseTargetType.CONTENT_VIEW_ZONE || t.type === editorBrowser.MouseTargetType.GUTTER_VIEW_ZONE);\n\t\tconst targetIsWidget = (t.type === editorBrowser.MouseTargetType.CONTENT_WIDGET);\n\n\t\tlet shouldHandle = e.leftButton || e.middleButton;\n\t\tif (browser.isMacintosh && e.leftButton && e.ctrlKey) {\n\t\t\tshouldHandle = false;\n\t\t}\n\n\t\tconst focus = () => {\n\t\t\t// In IE11, if the focus is in the browser's address bar and\n\t\t\t// then you click in the editor, calling preventDefault()\n\t\t\t// will not move focus properly (focus remains the address bar)\n\t\t\tif (browser.isIE && !this._isFocused) {\n\t\t\t\tthis._asyncFocus.schedule();\n\t\t\t} else {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.viewHelper.focusTextArea();\n\t\t\t}\n\t\t};\n\n\t\tif (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n\t\t\tfocus();\n\t\t\tthis._mouseDownOperation.start(t.type, e);\n\n\t\t} else if (targetIsGutter) {\n\t\t\t// Do not steal focus\n\t\t\te.preventDefault();\n\t\t} else if (targetIsViewZone) {\n\t\t\tconst viewZoneData = <IViewZoneData>t.detail;\n\t\t\tif (this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\tfocus();\n\t\t\t\tthis._mouseDownOperation.start(t.type, e);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t} else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(<string>t.detail)) {\n\t\t\tfocus();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tthis.viewController.emitMouseDown({\n\t\t\tevent: e,\n\t\t\ttarget: t\n\t\t});\n\t}\n}\n\nclass MouseDownOperation extends Disposable {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewController: ViewController;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\tprivate readonly _createMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => editorBrowser.IMouseTarget;\n\tprivate readonly _getMouseColumn: (e: EditorMouseEvent) => number;\n\n\tprivate readonly _mouseMoveMonitor: GlobalEditorMouseMoveMonitor;\n\tprivate readonly _onScrollTimeout: TimeoutTimer;\n\tprivate readonly _mouseState: MouseDownState;\n\n\tprivate _currentSelection: Selection;\n\tprivate _isActive: boolean;\n\tprivate _lastMouseEvent: EditorMouseEvent | null;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tviewController: ViewController,\n\t\tviewHelper: IPointerHandlerHelper,\n\t\tcreateMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => editorBrowser.IMouseTarget,\n\t\tgetMouseColumn: (e: EditorMouseEvent) => number\n\t) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._viewController = viewController;\n\t\tthis._viewHelper = viewHelper;\n\t\tthis._createMouseTarget = createMouseTarget;\n\t\tthis._getMouseColumn = getMouseColumn;\n\n\t\tthis._mouseMoveMonitor = this._register(new GlobalEditorMouseMoveMonitor(this._viewHelper.viewDomNode));\n\t\tthis._onScrollTimeout = this._register(new TimeoutTimer());\n\t\tthis._mouseState = new MouseDownState();\n\n\t\tthis._currentSelection = new Selection(1, 1, 1, 1);\n\t\tthis._isActive = false;\n\t\tthis._lastMouseEvent = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic isActive(): boolean {\n\t\treturn this._isActive;\n\t}\n\n\tprivate _onMouseDownThenMove(e: EditorMouseEvent): void {\n\t\tthis._lastMouseEvent = e;\n\t\tthis._mouseState.setModifiers(e);\n\n\t\tconst position = this._findMousePosition(e, true);\n\t\tif (!position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._mouseState.isDragAndDrop) {\n\t\t\tthis._viewController.emitMouseDrag({\n\t\t\t\tevent: e,\n\t\t\t\ttarget: position\n\t\t\t});\n\t\t} else {\n\t\t\tthis._dispatchMouse(position, true);\n\t\t}\n\t}\n\n\tpublic start(targetType: editorBrowser.MouseTargetType, e: EditorMouseEvent): void {\n\t\tthis._lastMouseEvent = e;\n\n\t\tthis._mouseState.setStartedOnLineNumbers(targetType === editorBrowser.MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tthis._mouseState.setStartButtons(e);\n\t\tthis._mouseState.setModifiers(e);\n\t\tconst position = this._findMousePosition(e, true);\n\t\tif (!position || !position.position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.trySetCount(e.detail, position.position);\n\n\t\t// Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n\t\te.detail = this._mouseState.count;\n\n\t\tif (!this._context.configuration.editor.readOnly\n\t\t\t&& this._context.configuration.editor.dragAndDrop\n\t\t\t&& !this._mouseState.altKey // we don't support multiple mouse\n\t\t\t&& e.detail < 2 // only single click on a selection can work\n\t\t\t&& !this._isActive // the mouse is not down yet\n\t\t\t&& !this._currentSelection.isEmpty() // we don't drag single cursor\n\t\t\t&& (position.type === editorBrowser.MouseTargetType.CONTENT_TEXT) // single click on text\n\t\t\t&& position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n\t\t) {\n\t\t\tthis._mouseState.isDragAndDrop = true;\n\t\t\tthis._isActive = true;\n\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tcreateMouseMoveEventMerger(null),\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t() => {\n\t\t\t\t\tconst position = this._findMousePosition(this._lastMouseEvent!, true);\n\n\t\t\t\t\tthis._viewController.emitMouseDrop({\n\t\t\t\t\t\tevent: this._lastMouseEvent!,\n\t\t\t\t\t\ttarget: (position ? this._createMouseTarget(this._lastMouseEvent!, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._stop();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.isDragAndDrop = false;\n\t\tthis._dispatchMouse(position, e.shiftKey);\n\n\t\tif (!this._isActive) {\n\t\t\tthis._isActive = true;\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tcreateMouseMoveEventMerger(null),\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t() => this._stop()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _stop(): void {\n\t\tthis._isActive = false;\n\t\tthis._onScrollTimeout.cancel();\n\t}\n\n\tpublic onScrollChanged(): void {\n\t\tif (!this._isActive) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onScrollTimeout.setIfNotSet(() => {\n\t\t\tif (!this._lastMouseEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst position = this._findMousePosition(this._lastMouseEvent, false);\n\t\t\tif (!position) {\n\t\t\t\t// Ignoring because position is unknown\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._mouseState.isDragAndDrop) {\n\t\t\t\t// Ignoring because users are dragging the text\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._dispatchMouse(position, true);\n\t\t}, 10);\n\t}\n\n\tpublic onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): void {\n\t\tthis._currentSelection = e.selections[0];\n\t}\n\n\tprivate _getPositionOutsideEditor(e: EditorMouseEvent): MouseTarget | null {\n\t\tconst editorContent = e.editorPos;\n\t\tconst model = this._context.model;\n\t\tconst viewLayout = this._context.viewLayout;\n\n\t\tconst mouseColumn = this._getMouseColumn(e);\n\n\t\tif (e.posy < editorContent.y) {\n\t\t\tconst verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - (editorContent.y - e.posy), 0);\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, newPosition);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new Position(aboveLineNumber, 1));\n\t\t}\n\n\t\tif (e.posy > editorContent.y + editorContent.height) {\n\t\t\tconst verticalOffset = viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y);\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, newPosition);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)));\n\t\t}\n\n\t\tconst possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + (e.posy - editorContent.y));\n\n\t\tif (e.posx < editorContent.x) {\n\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new Position(possibleLineNumber, 1));\n\t\t}\n\n\t\tif (e.posx > editorContent.x + editorContent.width) {\n\t\t\treturn new MouseTarget(null, editorBrowser.MouseTargetType.OUTSIDE_EDITOR, mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMousePosition(e: EditorMouseEvent, testEventTarget: boolean): MouseTarget | null {\n\t\tconst positionOutsideEditor = this._getPositionOutsideEditor(e);\n\t\tif (positionOutsideEditor) {\n\t\t\treturn positionOutsideEditor;\n\t\t}\n\n\t\tconst t = this._createMouseTarget(e, testEventTarget);\n\t\tconst hintedPosition = t.position;\n\t\tif (!hintedPosition) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (t.type === editorBrowser.MouseTargetType.CONTENT_VIEW_ZONE || t.type === editorBrowser.MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(<IViewZoneData>t.detail);\n\t\t\tif (newPosition) {\n\t\t\t\treturn new MouseTarget(t.element, t.type, t.mouseColumn, newPosition, null, t.detail);\n\t\t\t}\n\t\t}\n\n\t\treturn t;\n\t}\n\n\tprivate _helpPositionJumpOverViewZone(viewZoneData: IViewZoneData): Position | null {\n\t\t// Force position on view zones to go above or below depending on where selection started from\n\t\tconst selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n\t\tconst positionBefore = viewZoneData.positionBefore;\n\t\tconst positionAfter = viewZoneData.positionAfter;\n\n\t\tif (positionBefore && positionAfter) {\n\t\t\tif (positionBefore.isBefore(selectionStart)) {\n\t\t\t\treturn positionBefore;\n\t\t\t} else {\n\t\t\t\treturn positionAfter;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _dispatchMouse(position: MouseTarget, inSelectionMode: boolean): void {\n\t\tif (!position.position) {\n\t\t\treturn;\n\t\t}\n\t\tthis._viewController.dispatchMouse({\n\t\t\tposition: position.position,\n\t\t\tmouseColumn: position.mouseColumn,\n\t\t\tstartedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n\n\t\t\tinSelectionMode: inSelectionMode,\n\t\t\tmouseDownCount: this._mouseState.count,\n\t\t\taltKey: this._mouseState.altKey,\n\t\t\tctrlKey: this._mouseState.ctrlKey,\n\t\t\tmetaKey: this._mouseState.metaKey,\n\t\t\tshiftKey: this._mouseState.shiftKey,\n\n\t\t\tleftButton: this._mouseState.leftButton,\n\t\t\tmiddleButton: this._mouseState.middleButton,\n\t\t});\n\t}\n}\n\nclass MouseDownState {\n\n\tprivate static readonly CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n\n\tprivate _altKey: boolean;\n\tpublic get altKey(): boolean { return this._altKey; }\n\n\tprivate _ctrlKey: boolean;\n\tpublic get ctrlKey(): boolean { return this._ctrlKey; }\n\n\tprivate _metaKey: boolean;\n\tpublic get metaKey(): boolean { return this._metaKey; }\n\n\tprivate _shiftKey: boolean;\n\tpublic get shiftKey(): boolean { return this._shiftKey; }\n\n\tprivate _leftButton: boolean;\n\tpublic get leftButton(): boolean { return this._leftButton; }\n\n\tprivate _middleButton: boolean;\n\tpublic get middleButton(): boolean { return this._middleButton; }\n\n\tprivate _startedOnLineNumbers: boolean;\n\tpublic get startedOnLineNumbers(): boolean { return this._startedOnLineNumbers; }\n\n\tprivate _lastMouseDownPosition: Position | null;\n\tprivate _lastMouseDownPositionEqualCount: number;\n\tprivate _lastMouseDownCount: number;\n\tprivate _lastSetMouseDownCountTime: number;\n\tpublic isDragAndDrop: boolean;\n\n\tconstructor() {\n\t\tthis._altKey = false;\n\t\tthis._ctrlKey = false;\n\t\tthis._metaKey = false;\n\t\tthis._shiftKey = false;\n\t\tthis._leftButton = false;\n\t\tthis._middleButton = false;\n\t\tthis._startedOnLineNumbers = false;\n\t\tthis._lastMouseDownPosition = null;\n\t\tthis._lastMouseDownPositionEqualCount = 0;\n\t\tthis._lastMouseDownCount = 0;\n\t\tthis._lastSetMouseDownCountTime = 0;\n\t\tthis.isDragAndDrop = false;\n\t}\n\n\tpublic get count(): number {\n\t\treturn this._lastMouseDownCount;\n\t}\n\n\tpublic setModifiers(source: EditorMouseEvent) {\n\t\tthis._altKey = source.altKey;\n\t\tthis._ctrlKey = source.ctrlKey;\n\t\tthis._metaKey = source.metaKey;\n\t\tthis._shiftKey = source.shiftKey;\n\t}\n\n\tpublic setStartButtons(source: EditorMouseEvent) {\n\t\tthis._leftButton = source.leftButton;\n\t\tthis._middleButton = source.middleButton;\n\t}\n\n\tpublic setStartedOnLineNumbers(startedOnLineNumbers: boolean): void {\n\t\tthis._startedOnLineNumbers = startedOnLineNumbers;\n\t}\n\n\tpublic trySetCount(setMouseDownCount: number, newMouseDownPosition: Position): void {\n\t\t// a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tconst currentTime = (new Date()).getTime();\n\t\tif (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n\t\t\tsetMouseDownCount = 1;\n\t\t}\n\t\tthis._lastSetMouseDownCountTime = currentTime;\n\n\t\t// b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tif (setMouseDownCount > this._lastMouseDownCount + 1) {\n\t\t\tsetMouseDownCount = this._lastMouseDownCount + 1;\n\t\t}\n\n\t\t// c. Invalidate multiple clicking if the logical position is different\n\t\tif (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n\t\t\tthis._lastMouseDownPositionEqualCount++;\n\t\t} else {\n\t\t\tthis._lastMouseDownPositionEqualCount = 1;\n\t\t}\n\t\tthis._lastMouseDownPosition = newMouseDownPosition;\n\n\t\t// Finally set the lastMouseDownCount\n\t\tthis._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n\t}\n\n}\n"]}]}