{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar modes = require(\"vs/editor/common/modes\");\nvar search = require(\"vs/workbench/contrib/search/common/search\");\nvar extHost_protocol_1 = require(\"../common/extHost.protocol\");\nvar languageConfigurationRegistry_1 = require(\"vs/editor/common/modes/languageConfigurationRegistry\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar codeInset = require(\"vs/workbench/contrib/codeinset/common/codeInset\");\nvar callh = require(\"vs/workbench/contrib/callHierarchy/common/callHierarchy\");\nvar heap_1 = require(\"vs/workbench/services/heap/common/heap\");\nvar MainThreadLanguageFeatures = /** @class */ (function () {\n    function MainThreadLanguageFeatures(extHostContext, heapService, modeService) {\n        this._registrations = Object.create(null);\n        this._proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostLanguageFeatures);\n        this._heapService = heapService;\n        this._modeService = modeService;\n    }\n    MainThreadLanguageFeatures_1 = MainThreadLanguageFeatures;\n    MainThreadLanguageFeatures.prototype.dispose = function () {\n        for (var key in this._registrations) {\n            this._registrations[key].dispose();\n        }\n    };\n    MainThreadLanguageFeatures.prototype.$unregister = function (handle) {\n        var registration = this._registrations[handle];\n        if (registration) {\n            registration.dispose();\n            delete this._registrations[handle];\n        }\n    };\n    MainThreadLanguageFeatures._reviveLocationDto = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (Array.isArray(data)) {\n            data.forEach(function (l) { return MainThreadLanguageFeatures_1._reviveLocationDto(l); });\n            return data;\n        }\n        else {\n            data.uri = uri_1.URI.revive(data.uri);\n            return data;\n        }\n    };\n    MainThreadLanguageFeatures._reviveLocationLinkDto = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (Array.isArray(data)) {\n            data.forEach(function (l) { return MainThreadLanguageFeatures_1._reviveLocationLinkDto(l); });\n            return data;\n        }\n        else {\n            data.uri = uri_1.URI.revive(data.uri);\n            return data;\n        }\n    };\n    MainThreadLanguageFeatures._reviveWorkspaceSymbolDto = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (Array.isArray(data)) {\n            data.forEach(MainThreadLanguageFeatures_1._reviveWorkspaceSymbolDto);\n            return data;\n        }\n        else {\n            data.location = MainThreadLanguageFeatures_1._reviveLocationDto(data.location);\n            return data;\n        }\n    };\n    MainThreadLanguageFeatures._reviveCodeActionDto = function (data) {\n        if (data) {\n            data.forEach(function (code) { return extHost_protocol_1.reviveWorkspaceEditDto(code.edit); });\n        }\n        return data;\n    };\n    MainThreadLanguageFeatures._reviveLinkDTO = function (data) {\n        if (data.url && typeof data.url !== 'string') {\n            data.url = uri_1.URI.revive(data.url);\n        }\n        return data;\n    };\n    MainThreadLanguageFeatures._reviveCallHierarchyItemDto = function (data) {\n        if (data) {\n            data.uri = uri_1.URI.revive(data.uri);\n        }\n        return data;\n    };\n    //#endregion\n    // --- outline\n    MainThreadLanguageFeatures.prototype.$registerDocumentSymbolProvider = function (handle, selector, displayName) {\n        var _this = this;\n        this._registrations[handle] = modes.DocumentSymbolProviderRegistry.register(selector, {\n            displayName: displayName,\n            provideDocumentSymbols: function (model, token) {\n                return _this._proxy.$provideDocumentSymbols(handle, model.uri, token);\n            }\n        });\n    };\n    // --- code lens\n    MainThreadLanguageFeatures.prototype.$registerCodeLensSupport = function (handle, selector, eventHandle) {\n        var _this = this;\n        var provider = {\n            provideCodeLenses: function (model, token) {\n                return _this._proxy.$provideCodeLenses(handle, model.uri, token).then(function (dto) {\n                    if (dto) {\n                        dto.forEach(function (obj) {\n                            _this._heapService.trackObject(obj);\n                            _this._heapService.trackObject(obj.command);\n                        });\n                    }\n                    return dto;\n                });\n            },\n            resolveCodeLens: function (model, codeLens, token) {\n                return _this._proxy.$resolveCodeLens(handle, model.uri, codeLens, token).then(function (obj) {\n                    if (obj) {\n                        _this._heapService.trackObject(obj);\n                        _this._heapService.trackObject(obj.command);\n                    }\n                    return obj;\n                });\n            }\n        };\n        if (typeof eventHandle === 'number') {\n            var emitter = new event_1.Emitter();\n            this._registrations[eventHandle] = emitter;\n            provider.onDidChange = emitter.event;\n        }\n        this._registrations[handle] = modes.CodeLensProviderRegistry.register(selector, provider);\n    };\n    MainThreadLanguageFeatures.prototype.$emitCodeLensEvent = function (eventHandle, event) {\n        var obj = this._registrations[eventHandle];\n        if (obj instanceof event_1.Emitter) {\n            obj.fire(event);\n        }\n    };\n    // -- code inset\n    MainThreadLanguageFeatures.prototype.$registerCodeInsetSupport = function (handle, selector, eventHandle) {\n        var _this = this;\n        var provider = {\n            provideCodeInsets: function (model, token) {\n                return _this._proxy.$provideCodeInsets(handle, model.uri, token).then(function (dto) {\n                    if (dto) {\n                        dto.forEach(function (obj) { return _this._heapService.trackObject(obj); });\n                    }\n                    return dto;\n                });\n            },\n            resolveCodeInset: function (model, codeInset, token) {\n                return _this._proxy.$resolveCodeInset(handle, model.uri, codeInset, token).then(function (obj) {\n                    _this._heapService.trackObject(obj);\n                    return obj;\n                });\n            }\n        };\n        if (typeof eventHandle === 'number') {\n            var emitter = new event_1.Emitter();\n            this._registrations[eventHandle] = emitter;\n            provider.onDidChange = emitter.event;\n        }\n        var langSelector = selector;\n        this._registrations[handle] = codeInset.CodeInsetProviderRegistry.register(langSelector, provider);\n    };\n    // --- declaration\n    MainThreadLanguageFeatures.prototype.$registerDefinitionSupport = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.DefinitionProviderRegistry.register(selector, {\n            provideDefinition: function (model, position, token) {\n                return _this._proxy.$provideDefinition(handle, model.uri, position, token).then(MainThreadLanguageFeatures_1._reviveLocationLinkDto);\n            }\n        });\n    };\n    MainThreadLanguageFeatures.prototype.$registerDeclarationSupport = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.DeclarationProviderRegistry.register(selector, {\n            provideDeclaration: function (model, position, token) {\n                return _this._proxy.$provideDeclaration(handle, model.uri, position, token).then(MainThreadLanguageFeatures_1._reviveLocationLinkDto);\n            }\n        });\n    };\n    MainThreadLanguageFeatures.prototype.$registerImplementationSupport = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.ImplementationProviderRegistry.register(selector, {\n            provideImplementation: function (model, position, token) {\n                return _this._proxy.$provideImplementation(handle, model.uri, position, token).then(MainThreadLanguageFeatures_1._reviveLocationLinkDto);\n            }\n        });\n    };\n    MainThreadLanguageFeatures.prototype.$registerTypeDefinitionSupport = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.TypeDefinitionProviderRegistry.register(selector, {\n            provideTypeDefinition: function (model, position, token) {\n                return _this._proxy.$provideTypeDefinition(handle, model.uri, position, token).then(MainThreadLanguageFeatures_1._reviveLocationLinkDto);\n            }\n        });\n    };\n    // --- extra info\n    MainThreadLanguageFeatures.prototype.$registerHoverProvider = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.HoverProviderRegistry.register(selector, {\n            provideHover: function (model, position, token) {\n                return _this._proxy.$provideHover(handle, model.uri, position, token);\n            }\n        });\n    };\n    // --- occurrences\n    MainThreadLanguageFeatures.prototype.$registerDocumentHighlightProvider = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.DocumentHighlightProviderRegistry.register(selector, {\n            provideDocumentHighlights: function (model, position, token) {\n                return _this._proxy.$provideDocumentHighlights(handle, model.uri, position, token);\n            }\n        });\n    };\n    // --- references\n    MainThreadLanguageFeatures.prototype.$registerReferenceSupport = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.ReferenceProviderRegistry.register(selector, {\n            provideReferences: function (model, position, context, token) {\n                return _this._proxy.$provideReferences(handle, model.uri, position, context, token).then(MainThreadLanguageFeatures_1._reviveLocationDto);\n            }\n        });\n    };\n    // --- quick fix\n    MainThreadLanguageFeatures.prototype.$registerQuickFixSupport = function (handle, selector, providedCodeActionKinds) {\n        var _this = this;\n        this._registrations[handle] = modes.CodeActionProviderRegistry.register(selector, {\n            provideCodeActions: function (model, rangeOrSelection, context, token) {\n                return _this._proxy.$provideCodeActions(handle, model.uri, rangeOrSelection, context, token).then(function (dto) {\n                    if (dto) {\n                        dto.forEach(function (obj) { _this._heapService.trackObject(obj.command); });\n                    }\n                    return MainThreadLanguageFeatures_1._reviveCodeActionDto(dto);\n                });\n            },\n            providedCodeActionKinds: providedCodeActionKinds\n        });\n    };\n    // --- formatting\n    MainThreadLanguageFeatures.prototype.$registerDocumentFormattingSupport = function (handle, selector, extensionId, displayName) {\n        var _this = this;\n        this._registrations[handle] = modes.DocumentFormattingEditProviderRegistry.register(selector, {\n            extensionId: extensionId,\n            displayName: displayName,\n            provideDocumentFormattingEdits: function (model, options, token) {\n                return _this._proxy.$provideDocumentFormattingEdits(handle, model.uri, options, token);\n            }\n        });\n    };\n    MainThreadLanguageFeatures.prototype.$registerRangeFormattingSupport = function (handle, selector, extensionId, displayName) {\n        var _this = this;\n        this._registrations[handle] = modes.DocumentRangeFormattingEditProviderRegistry.register(selector, {\n            extensionId: extensionId,\n            displayName: displayName,\n            provideDocumentRangeFormattingEdits: function (model, range, options, token) {\n                return _this._proxy.$provideDocumentRangeFormattingEdits(handle, model.uri, range, options, token);\n            }\n        });\n    };\n    MainThreadLanguageFeatures.prototype.$registerOnTypeFormattingSupport = function (handle, selector, autoFormatTriggerCharacters, extensionId) {\n        var _this = this;\n        this._registrations[handle] = modes.OnTypeFormattingEditProviderRegistry.register(selector, {\n            extensionId: extensionId,\n            autoFormatTriggerCharacters: autoFormatTriggerCharacters,\n            provideOnTypeFormattingEdits: function (model, position, ch, options, token) {\n                return _this._proxy.$provideOnTypeFormattingEdits(handle, model.uri, position, ch, options, token);\n            }\n        });\n    };\n    // --- navigate type\n    MainThreadLanguageFeatures.prototype.$registerNavigateTypeSupport = function (handle) {\n        var _this = this;\n        var lastResultId;\n        this._registrations[handle] = search.WorkspaceSymbolProviderRegistry.register({\n            provideWorkspaceSymbols: function (search, token) {\n                return _this._proxy.$provideWorkspaceSymbols(handle, search, token).then(function (result) {\n                    if (lastResultId !== undefined) {\n                        _this._proxy.$releaseWorkspaceSymbols(handle, lastResultId);\n                    }\n                    lastResultId = result._id;\n                    return MainThreadLanguageFeatures_1._reviveWorkspaceSymbolDto(result.symbols);\n                });\n            },\n            resolveWorkspaceSymbol: function (item, token) {\n                return _this._proxy.$resolveWorkspaceSymbol(handle, item, token).then(function (i) {\n                    if (i) {\n                        return MainThreadLanguageFeatures_1._reviveWorkspaceSymbolDto(i);\n                    }\n                    return undefined;\n                });\n            }\n        });\n    };\n    // --- rename\n    MainThreadLanguageFeatures.prototype.$registerRenameSupport = function (handle, selector, supportResolveLocation) {\n        var _this = this;\n        this._registrations[handle] = modes.RenameProviderRegistry.register(selector, {\n            provideRenameEdits: function (model, position, newName, token) {\n                return _this._proxy.$provideRenameEdits(handle, model.uri, position, newName, token).then(extHost_protocol_1.reviveWorkspaceEditDto);\n            },\n            resolveRenameLocation: supportResolveLocation\n                ? function (model, position, token) { return _this._proxy.$resolveRenameLocation(handle, model.uri, position, token); }\n                : undefined\n        });\n    };\n    // --- suggest\n    MainThreadLanguageFeatures.prototype.$registerSuggestSupport = function (handle, selector, triggerCharacters, supportsResolveDetails) {\n        var _this = this;\n        this._registrations[handle] = modes.CompletionProviderRegistry.register(selector, {\n            triggerCharacters: triggerCharacters,\n            provideCompletionItems: function (model, position, context, token) {\n                return _this._proxy.$provideCompletionItems(handle, model.uri, position, context, token).then(function (result) {\n                    if (!result) {\n                        return result;\n                    }\n                    return {\n                        suggestions: result.suggestions,\n                        incomplete: result.incomplete,\n                        dispose: function () {\n                            if (typeof result._id === 'number') {\n                                _this._proxy.$releaseCompletionItems(handle, result._id);\n                            }\n                        }\n                    };\n                });\n            },\n            resolveCompletionItem: supportsResolveDetails\n                ? function (model, position, suggestion, token) { return _this._proxy.$resolveCompletionItem(handle, model.uri, position, suggestion, token); }\n                : undefined\n        });\n    };\n    // --- parameter hints\n    MainThreadLanguageFeatures.prototype.$registerSignatureHelpProvider = function (handle, selector, metadata) {\n        var _this = this;\n        this._registrations[handle] = modes.SignatureHelpProviderRegistry.register(selector, {\n            signatureHelpTriggerCharacters: metadata.triggerCharacters,\n            signatureHelpRetriggerCharacters: metadata.retriggerCharacters,\n            provideSignatureHelp: function (model, position, token, context) {\n                return _this._proxy.$provideSignatureHelp(handle, model.uri, position, context, token);\n            }\n        });\n    };\n    // --- links\n    MainThreadLanguageFeatures.prototype.$registerDocumentLinkProvider = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.LinkProviderRegistry.register(selector, {\n            provideLinks: function (model, token) {\n                return _this._proxy.$provideDocumentLinks(handle, model.uri, token).then(function (dto) {\n                    if (dto) {\n                        dto.forEach(function (obj) {\n                            MainThreadLanguageFeatures_1._reviveLinkDTO(obj);\n                            _this._heapService.trackObject(obj);\n                        });\n                    }\n                    return dto;\n                });\n            },\n            resolveLink: function (link, token) {\n                return _this._proxy.$resolveDocumentLink(handle, link, token).then(function (obj) {\n                    if (obj) {\n                        MainThreadLanguageFeatures_1._reviveLinkDTO(obj);\n                        _this._heapService.trackObject(obj);\n                    }\n                    return obj;\n                });\n            }\n        });\n    };\n    // --- colors\n    MainThreadLanguageFeatures.prototype.$registerDocumentColorProvider = function (handle, selector) {\n        var proxy = this._proxy;\n        this._registrations[handle] = modes.ColorProviderRegistry.register(selector, {\n            provideDocumentColors: function (model, token) {\n                return proxy.$provideDocumentColors(handle, model.uri, token)\n                    .then(function (documentColors) {\n                    return documentColors.map(function (documentColor) {\n                        var _a = documentColor.color, red = _a[0], green = _a[1], blue = _a[2], alpha = _a[3];\n                        var color = {\n                            red: red,\n                            green: green,\n                            blue: blue,\n                            alpha: alpha\n                        };\n                        return {\n                            color: color,\n                            range: documentColor.range\n                        };\n                    });\n                });\n            },\n            provideColorPresentations: function (model, colorInfo, token) {\n                return proxy.$provideColorPresentations(handle, model.uri, {\n                    color: [colorInfo.color.red, colorInfo.color.green, colorInfo.color.blue, colorInfo.color.alpha],\n                    range: colorInfo.range\n                }, token);\n            }\n        });\n    };\n    // --- folding\n    MainThreadLanguageFeatures.prototype.$registerFoldingRangeProvider = function (handle, selector) {\n        var proxy = this._proxy;\n        this._registrations[handle] = modes.FoldingRangeProviderRegistry.register(selector, {\n            provideFoldingRanges: function (model, context, token) {\n                return proxy.$provideFoldingRanges(handle, model.uri, context, token);\n            }\n        });\n    };\n    // -- smart select\n    MainThreadLanguageFeatures.prototype.$registerSelectionRangeProvider = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = modes.SelectionRangeRegistry.register(selector, {\n            provideSelectionRanges: function (model, positions, token) {\n                return _this._proxy.$provideSelectionRanges(handle, model.uri, positions, token);\n            }\n        });\n    };\n    // --- call hierarchy\n    MainThreadLanguageFeatures.prototype.$registerCallHierarchyProvider = function (handle, selector) {\n        var _this = this;\n        this._registrations[handle] = callh.CallHierarchyProviderRegistry.register(selector, {\n            provideCallHierarchyItem: function (document, position, token) {\n                return _this._proxy.$provideCallHierarchyItem(handle, document.uri, position, token).then(MainThreadLanguageFeatures_1._reviveCallHierarchyItemDto);\n            },\n            resolveCallHierarchyItem: function (item, direction, token) {\n                return _this._proxy.$resolveCallHierarchyItem(handle, item, direction, token).then(function (data) {\n                    if (data) {\n                        for (var i = 0; i < data.length; i++) {\n                            var _a = data[i], item_1 = _a[0], locations = _a[1];\n                            data[i] = [\n                                MainThreadLanguageFeatures_1._reviveCallHierarchyItemDto(item_1),\n                                MainThreadLanguageFeatures_1._reviveLocationDto(locations)\n                            ];\n                        }\n                    }\n                    return data;\n                });\n            }\n        });\n    };\n    // --- configuration\n    MainThreadLanguageFeatures._reviveRegExp = function (regExp) {\n        return new RegExp(regExp.pattern, regExp.flags);\n    };\n    MainThreadLanguageFeatures._reviveIndentationRule = function (indentationRule) {\n        return {\n            decreaseIndentPattern: MainThreadLanguageFeatures_1._reviveRegExp(indentationRule.decreaseIndentPattern),\n            increaseIndentPattern: MainThreadLanguageFeatures_1._reviveRegExp(indentationRule.increaseIndentPattern),\n            indentNextLinePattern: indentationRule.indentNextLinePattern ? MainThreadLanguageFeatures_1._reviveRegExp(indentationRule.indentNextLinePattern) : undefined,\n            unIndentedLinePattern: indentationRule.unIndentedLinePattern ? MainThreadLanguageFeatures_1._reviveRegExp(indentationRule.unIndentedLinePattern) : undefined,\n        };\n    };\n    MainThreadLanguageFeatures._reviveOnEnterRule = function (onEnterRule) {\n        return {\n            beforeText: MainThreadLanguageFeatures_1._reviveRegExp(onEnterRule.beforeText),\n            afterText: onEnterRule.afterText ? MainThreadLanguageFeatures_1._reviveRegExp(onEnterRule.afterText) : undefined,\n            oneLineAboveText: onEnterRule.oneLineAboveText ? MainThreadLanguageFeatures_1._reviveRegExp(onEnterRule.oneLineAboveText) : undefined,\n            action: onEnterRule.action\n        };\n    };\n    MainThreadLanguageFeatures._reviveOnEnterRules = function (onEnterRules) {\n        return onEnterRules.map(MainThreadLanguageFeatures_1._reviveOnEnterRule);\n    };\n    MainThreadLanguageFeatures.prototype.$setLanguageConfiguration = function (handle, languageId, _configuration) {\n        var configuration = {\n            comments: _configuration.comments,\n            brackets: _configuration.brackets,\n            wordPattern: _configuration.wordPattern ? MainThreadLanguageFeatures_1._reviveRegExp(_configuration.wordPattern) : undefined,\n            indentationRules: _configuration.indentationRules ? MainThreadLanguageFeatures_1._reviveIndentationRule(_configuration.indentationRules) : undefined,\n            onEnterRules: _configuration.onEnterRules ? MainThreadLanguageFeatures_1._reviveOnEnterRules(_configuration.onEnterRules) : undefined,\n            autoClosingPairs: undefined,\n            surroundingPairs: undefined,\n            __electricCharacterSupport: undefined\n        };\n        if (_configuration.__characterPairSupport) {\n            // backwards compatibility\n            configuration.autoClosingPairs = _configuration.__characterPairSupport.autoClosingPairs;\n        }\n        if (_configuration.__electricCharacterSupport && _configuration.__electricCharacterSupport.docComment) {\n            configuration.__electricCharacterSupport = {\n                docComment: {\n                    open: _configuration.__electricCharacterSupport.docComment.open,\n                    close: _configuration.__electricCharacterSupport.docComment.close\n                }\n            };\n        }\n        var languageIdentifier = this._modeService.getLanguageIdentifier(languageId);\n        if (languageIdentifier) {\n            this._registrations[handle] = languageConfigurationRegistry_1.LanguageConfigurationRegistry.register(languageIdentifier, configuration);\n        }\n    };\n    var MainThreadLanguageFeatures_1;\n    MainThreadLanguageFeatures = MainThreadLanguageFeatures_1 = tslib_1.__decorate([\n        extHostCustomers_1.extHostNamedCustomer(extHost_protocol_1.MainContext.MainThreadLanguageFeatures),\n        tslib_1.__param(1, heap_1.IHeapService),\n        tslib_1.__param(2, modeService_1.IModeService)\n    ], MainThreadLanguageFeatures);\n    return MainThreadLanguageFeatures;\n}());\nexports.MainThreadLanguageFeatures = MainThreadLanguageFeatures;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\nimport { ITextModel, ISingleEditOperation } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport * as search from 'vs/workbench/contrib/search/common/search';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Position as EditorPosition } from 'vs/editor/common/core/position';\nimport { Range as EditorRange } from 'vs/editor/common/core/range';\nimport { ExtHostContext, MainThreadLanguageFeaturesShape, ExtHostLanguageFeaturesShape, MainContext, IExtHostContext, ISerializedLanguageConfiguration, ISerializedRegExp, ISerializedIndentationRule, ISerializedOnEnterRule, LocationDto, WorkspaceSymbolDto, CodeActionDto, reviveWorkspaceEditDto, ISerializedDocumentFilter, DefinitionLinkDto, ISerializedSignatureHelpProviderMetadata, CodeInsetDto, LinkDto, CallHierarchyDto } from '../common/extHost.protocol';\nimport { LanguageConfigurationRegistry } from 'vs/editor/common/modes/languageConfigurationRegistry';\nimport { LanguageConfiguration, IndentationRule, OnEnterRule } from 'vs/editor/common/modes/languageConfiguration';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { URI } from 'vs/base/common/uri';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport * as codeInset from 'vs/workbench/contrib/codeinset/common/codeInset';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport * as callh from 'vs/workbench/contrib/callHierarchy/common/callHierarchy';\nimport { IHeapService } from 'vs/workbench/services/heap/common/heap';\n\n@extHostNamedCustomer(MainContext.MainThreadLanguageFeatures)\nexport class MainThreadLanguageFeatures implements MainThreadLanguageFeaturesShape {\n\n\tprivate readonly _proxy: ExtHostLanguageFeaturesShape;\n\tprivate readonly _heapService: IHeapService;\n\tprivate readonly _modeService: IModeService;\n\tprivate readonly _registrations: { [handle: number]: IDisposable; } = Object.create(null);\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IHeapService heapService: IHeapService,\n\t\t@IModeService modeService: IModeService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostLanguageFeatures);\n\t\tthis._heapService = heapService;\n\t\tthis._modeService = modeService;\n\t}\n\n\tdispose(): void {\n\t\tfor (const key in this._registrations) {\n\t\t\tthis._registrations[key].dispose();\n\t\t}\n\t}\n\n\t$unregister(handle: number): void {\n\t\tconst registration = this._registrations[handle];\n\t\tif (registration) {\n\t\t\tregistration.dispose();\n\t\t\tdelete this._registrations[handle];\n\t\t}\n\t}\n\n\t//#region --- revive functions\n\n\tprivate static _reviveLocationDto(data: LocationDto): modes.Location;\n\tprivate static _reviveLocationDto(data: LocationDto[]): modes.Location[];\n\tprivate static _reviveLocationDto(data: LocationDto | LocationDto[]): modes.Location | modes.Location[] {\n\t\tif (!data) {\n\t\t\treturn <modes.Location>data;\n\t\t} else if (Array.isArray(data)) {\n\t\t\tdata.forEach(l => MainThreadLanguageFeatures._reviveLocationDto(l));\n\t\t\treturn <modes.Location[]>data;\n\t\t} else {\n\t\t\tdata.uri = URI.revive(data.uri);\n\t\t\treturn <modes.Location>data;\n\t\t}\n\t}\n\n\tprivate static _reviveLocationLinkDto(data: DefinitionLinkDto): modes.LocationLink;\n\tprivate static _reviveLocationLinkDto(data: DefinitionLinkDto[]): modes.LocationLink[];\n\tprivate static _reviveLocationLinkDto(data: DefinitionLinkDto | DefinitionLinkDto[]): modes.LocationLink | modes.LocationLink[] {\n\t\tif (!data) {\n\t\t\treturn <modes.LocationLink>data;\n\t\t} else if (Array.isArray(data)) {\n\t\t\tdata.forEach(l => MainThreadLanguageFeatures._reviveLocationLinkDto(l));\n\t\t\treturn <modes.LocationLink[]>data;\n\t\t} else {\n\t\t\tdata.uri = URI.revive(data.uri);\n\t\t\treturn <modes.LocationLink>data;\n\t\t}\n\t}\n\n\tprivate static _reviveWorkspaceSymbolDto(data: WorkspaceSymbolDto): search.IWorkspaceSymbol;\n\tprivate static _reviveWorkspaceSymbolDto(data: WorkspaceSymbolDto[]): search.IWorkspaceSymbol[];\n\tprivate static _reviveWorkspaceSymbolDto(data: undefined): undefined;\n\tprivate static _reviveWorkspaceSymbolDto(data: WorkspaceSymbolDto | WorkspaceSymbolDto[] | undefined): search.IWorkspaceSymbol | search.IWorkspaceSymbol[] | undefined {\n\t\tif (!data) {\n\t\t\treturn <undefined>data;\n\t\t} else if (Array.isArray(data)) {\n\t\t\tdata.forEach(MainThreadLanguageFeatures._reviveWorkspaceSymbolDto);\n\t\t\treturn <search.IWorkspaceSymbol[]>data;\n\t\t} else {\n\t\t\tdata.location = MainThreadLanguageFeatures._reviveLocationDto(data.location);\n\t\t\treturn <search.IWorkspaceSymbol>data;\n\t\t}\n\t}\n\n\tprivate static _reviveCodeActionDto(data: CodeActionDto[] | undefined): modes.CodeAction[] {\n\t\tif (data) {\n\t\t\tdata.forEach(code => reviveWorkspaceEditDto(code.edit));\n\t\t}\n\t\treturn <modes.CodeAction[]>data;\n\t}\n\n\tprivate static _reviveLinkDTO(data: LinkDto): modes.ILink {\n\t\tif (data.url && typeof data.url !== 'string') {\n\t\t\tdata.url = URI.revive(data.url);\n\t\t}\n\t\treturn <modes.ILink>data;\n\t}\n\n\tprivate static _reviveCallHierarchyItemDto(data: CallHierarchyDto | undefined): callh.CallHierarchyItem {\n\t\tif (data) {\n\t\t\tdata.uri = URI.revive(data.uri);\n\t\t}\n\t\treturn data as callh.CallHierarchyItem;\n\t}\n\n\t//#endregion\n\n\t// --- outline\n\n\t$registerDocumentSymbolProvider(handle: number, selector: ISerializedDocumentFilter[], displayName: string): void {\n\t\tthis._registrations[handle] = modes.DocumentSymbolProviderRegistry.register(selector, <modes.DocumentSymbolProvider>{\n\t\t\tdisplayName,\n\t\t\tprovideDocumentSymbols: (model: ITextModel, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined> => {\n\t\t\t\treturn this._proxy.$provideDocumentSymbols(handle, model.uri, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- code lens\n\n\t$registerCodeLensSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number | undefined): void {\n\n\t\tconst provider = <modes.CodeLensProvider>{\n\t\t\tprovideCodeLenses: (model: ITextModel, token: CancellationToken): modes.ICodeLensSymbol[] | Promise<modes.ICodeLensSymbol[]> => {\n\t\t\t\treturn this._proxy.$provideCodeLenses(handle, model.uri, token).then(dto => {\n\t\t\t\t\tif (dto) {\n\t\t\t\t\t\tdto.forEach(obj => {\n\t\t\t\t\t\t\tthis._heapService.trackObject(obj);\n\t\t\t\t\t\t\tthis._heapService.trackObject(obj.command);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn dto;\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveCodeLens: (model: ITextModel, codeLens: modes.ICodeLensSymbol, token: CancellationToken): Promise<modes.ICodeLensSymbol | undefined> => {\n\t\t\t\treturn this._proxy.$resolveCodeLens(handle, model.uri, codeLens, token).then(obj => {\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis._heapService.trackObject(obj);\n\t\t\t\t\t\tthis._heapService.trackObject(obj.command);\n\t\t\t\t\t}\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tconst emitter = new Emitter<modes.CodeLensProvider>();\n\t\t\tthis._registrations[eventHandle] = emitter;\n\t\t\tprovider.onDidChange = emitter.event;\n\t\t}\n\n\t\tthis._registrations[handle] = modes.CodeLensProviderRegistry.register(selector, provider);\n\t}\n\n\t$emitCodeLensEvent(eventHandle: number, event?: any): void {\n\t\tconst obj = this._registrations[eventHandle];\n\t\tif (obj instanceof Emitter) {\n\t\t\tobj.fire(event);\n\t\t}\n\t}\n\n\t// -- code inset\n\n\t$registerCodeInsetSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number): void {\n\n\t\tconst provider = <codeInset.CodeInsetProvider>{\n\t\t\tprovideCodeInsets: (model: ITextModel, token: CancellationToken): CodeInsetDto[] | Thenable<CodeInsetDto[]> => {\n\t\t\t\treturn this._proxy.$provideCodeInsets(handle, model.uri, token).then(dto => {\n\t\t\t\t\tif (dto) { dto.forEach(obj => this._heapService.trackObject(obj)); }\n\t\t\t\t\treturn dto;\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveCodeInset: (model: ITextModel, codeInset: CodeInsetDto, token: CancellationToken): CodeInsetDto | Thenable<CodeInsetDto> => {\n\t\t\t\treturn this._proxy.$resolveCodeInset(handle, model.uri, codeInset, token).then(obj => {\n\t\t\t\t\tthis._heapService.trackObject(obj);\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tconst emitter = new Emitter<codeInset.CodeInsetProvider>();\n\t\t\tthis._registrations[eventHandle] = emitter;\n\t\t\tprovider.onDidChange = emitter.event;\n\t\t}\n\n\t\tconst langSelector = selector;\n\t\tthis._registrations[handle] = codeInset.CodeInsetProviderRegistry.register(langSelector, provider);\n\t}\n\n\t// --- declaration\n\n\t$registerDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.DefinitionProviderRegistry.register(selector, <modes.DefinitionProvider>{\n\t\t\tprovideDefinition: (model, position, token): Promise<modes.LocationLink[]> => {\n\t\t\t\treturn this._proxy.$provideDefinition(handle, model.uri, position, token).then(MainThreadLanguageFeatures._reviveLocationLinkDto);\n\t\t\t}\n\t\t});\n\t}\n\n\t$registerDeclarationSupport(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.DeclarationProviderRegistry.register(selector, <modes.DeclarationProvider>{\n\t\t\tprovideDeclaration: (model, position, token) => {\n\t\t\t\treturn this._proxy.$provideDeclaration(handle, model.uri, position, token).then(MainThreadLanguageFeatures._reviveLocationLinkDto);\n\t\t\t}\n\t\t});\n\t}\n\n\t$registerImplementationSupport(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.ImplementationProviderRegistry.register(selector, <modes.ImplementationProvider>{\n\t\t\tprovideImplementation: (model, position, token): Promise<modes.LocationLink[]> => {\n\t\t\t\treturn this._proxy.$provideImplementation(handle, model.uri, position, token).then(MainThreadLanguageFeatures._reviveLocationLinkDto);\n\t\t\t}\n\t\t});\n\t}\n\n\t$registerTypeDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.TypeDefinitionProviderRegistry.register(selector, <modes.TypeDefinitionProvider>{\n\t\t\tprovideTypeDefinition: (model, position, token): Promise<modes.LocationLink[]> => {\n\t\t\t\treturn this._proxy.$provideTypeDefinition(handle, model.uri, position, token).then(MainThreadLanguageFeatures._reviveLocationLinkDto);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- extra info\n\n\t$registerHoverProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.HoverProviderRegistry.register(selector, <modes.HoverProvider>{\n\t\t\tprovideHover: (model: ITextModel, position: EditorPosition, token: CancellationToken): Promise<modes.Hover | undefined> => {\n\t\t\t\treturn this._proxy.$provideHover(handle, model.uri, position, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- occurrences\n\n\t$registerDocumentHighlightProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.DocumentHighlightProviderRegistry.register(selector, <modes.DocumentHighlightProvider>{\n\t\t\tprovideDocumentHighlights: (model: ITextModel, position: EditorPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined> => {\n\t\t\t\treturn this._proxy.$provideDocumentHighlights(handle, model.uri, position, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- references\n\n\t$registerReferenceSupport(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.ReferenceProviderRegistry.register(selector, <modes.ReferenceProvider>{\n\t\t\tprovideReferences: (model: ITextModel, position: EditorPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<modes.Location[]> => {\n\t\t\t\treturn this._proxy.$provideReferences(handle, model.uri, position, context, token).then(MainThreadLanguageFeatures._reviveLocationDto);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- quick fix\n\n\t$registerQuickFixSupport(handle: number, selector: ISerializedDocumentFilter[], providedCodeActionKinds?: string[]): void {\n\t\tthis._registrations[handle] = modes.CodeActionProviderRegistry.register(selector, <modes.CodeActionProvider>{\n\t\t\tprovideCodeActions: (model: ITextModel, rangeOrSelection: EditorRange | Selection, context: modes.CodeActionContext, token: CancellationToken): Promise<modes.CodeAction[]> => {\n\t\t\t\treturn this._proxy.$provideCodeActions(handle, model.uri, rangeOrSelection, context, token).then(dto => {\n\t\t\t\t\tif (dto) {\n\t\t\t\t\t\tdto.forEach(obj => { this._heapService.trackObject(obj.command); });\n\t\t\t\t\t}\n\t\t\t\t\treturn MainThreadLanguageFeatures._reviveCodeActionDto(dto);\n\t\t\t\t});\n\t\t\t},\n\t\t\tprovidedCodeActionKinds\n\t\t});\n\t}\n\n\t// --- formatting\n\n\t$registerDocumentFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier, displayName: string): void {\n\t\tthis._registrations[handle] = modes.DocumentFormattingEditProviderRegistry.register(selector, <modes.DocumentFormattingEditProvider>{\n\t\t\textensionId,\n\t\t\tdisplayName,\n\t\t\tprovideDocumentFormattingEdits: (model: ITextModel, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> => {\n\t\t\t\treturn this._proxy.$provideDocumentFormattingEdits(handle, model.uri, options, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t$registerRangeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier, displayName: string): void {\n\t\tthis._registrations[handle] = modes.DocumentRangeFormattingEditProviderRegistry.register(selector, <modes.DocumentRangeFormattingEditProvider>{\n\t\t\textensionId,\n\t\t\tdisplayName,\n\t\t\tprovideDocumentRangeFormattingEdits: (model: ITextModel, range: EditorRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> => {\n\t\t\t\treturn this._proxy.$provideDocumentRangeFormattingEdits(handle, model.uri, range, options, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t$registerOnTypeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], autoFormatTriggerCharacters: string[], extensionId: ExtensionIdentifier): void {\n\t\tthis._registrations[handle] = modes.OnTypeFormattingEditProviderRegistry.register(selector, <modes.OnTypeFormattingEditProvider>{\n\t\t\textensionId,\n\t\t\tautoFormatTriggerCharacters,\n\t\t\tprovideOnTypeFormattingEdits: (model: ITextModel, position: EditorPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined> => {\n\t\t\t\treturn this._proxy.$provideOnTypeFormattingEdits(handle, model.uri, position, ch, options, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- navigate type\n\n\t$registerNavigateTypeSupport(handle: number): void {\n\t\tlet lastResultId: number | undefined;\n\t\tthis._registrations[handle] = search.WorkspaceSymbolProviderRegistry.register(<search.IWorkspaceSymbolProvider>{\n\t\t\tprovideWorkspaceSymbols: (search: string, token: CancellationToken): Promise<search.IWorkspaceSymbol[]> => {\n\t\t\t\treturn this._proxy.$provideWorkspaceSymbols(handle, search, token).then(result => {\n\t\t\t\t\tif (lastResultId !== undefined) {\n\t\t\t\t\t\tthis._proxy.$releaseWorkspaceSymbols(handle, lastResultId);\n\t\t\t\t\t}\n\t\t\t\t\tlastResultId = result._id;\n\t\t\t\t\treturn MainThreadLanguageFeatures._reviveWorkspaceSymbolDto(result.symbols);\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveWorkspaceSymbol: (item: search.IWorkspaceSymbol, token: CancellationToken): Promise<search.IWorkspaceSymbol | undefined> => {\n\t\t\t\treturn this._proxy.$resolveWorkspaceSymbol(handle, item, token).then(i => {\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\treturn MainThreadLanguageFeatures._reviveWorkspaceSymbolDto(i);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- rename\n\n\t$registerRenameSupport(handle: number, selector: ISerializedDocumentFilter[], supportResolveLocation: boolean): void {\n\n\t\tthis._registrations[handle] = modes.RenameProviderRegistry.register(selector, <modes.RenameProvider>{\n\t\t\tprovideRenameEdits: (model: ITextModel, position: EditorPosition, newName: string, token: CancellationToken): Promise<modes.WorkspaceEdit> => {\n\t\t\t\treturn this._proxy.$provideRenameEdits(handle, model.uri, position, newName, token).then(reviveWorkspaceEditDto);\n\t\t\t},\n\t\t\tresolveRenameLocation: supportResolveLocation\n\t\t\t\t? (model: ITextModel, position: EditorPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined> => this._proxy.$resolveRenameLocation(handle, model.uri, position, token)\n\t\t\t\t: undefined\n\t\t});\n\t}\n\n\t// --- suggest\n\n\t$registerSuggestSupport(handle: number, selector: ISerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void {\n\t\tthis._registrations[handle] = modes.CompletionProviderRegistry.register(selector, <modes.CompletionItemProvider>{\n\t\t\ttriggerCharacters,\n\t\t\tprovideCompletionItems: (model: ITextModel, position: EditorPosition, context: modes.CompletionContext, token: CancellationToken): Promise<modes.CompletionList | undefined> => {\n\t\t\t\treturn this._proxy.$provideCompletionItems(handle, model.uri, position, context, token).then(result => {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsuggestions: result.suggestions,\n\t\t\t\t\t\tincomplete: result.incomplete,\n\t\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\t\tif (typeof result._id === 'number') {\n\t\t\t\t\t\t\t\tthis._proxy.$releaseCompletionItems(handle, result._id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveCompletionItem: supportsResolveDetails\n\t\t\t\t? (model, position, suggestion, token) => this._proxy.$resolveCompletionItem(handle, model.uri, position, suggestion, token)\n\t\t\t\t: undefined\n\t\t});\n\t}\n\n\t// --- parameter hints\n\n\t$registerSignatureHelpProvider(handle: number, selector: ISerializedDocumentFilter[], metadata: ISerializedSignatureHelpProviderMetadata): void {\n\t\tthis._registrations[handle] = modes.SignatureHelpProviderRegistry.register(selector, <modes.SignatureHelpProvider>{\n\n\t\t\tsignatureHelpTriggerCharacters: metadata.triggerCharacters,\n\t\t\tsignatureHelpRetriggerCharacters: metadata.retriggerCharacters,\n\n\t\t\tprovideSignatureHelp: (model: ITextModel, position: EditorPosition, token: CancellationToken, context: modes.SignatureHelpContext): Promise<modes.SignatureHelp | undefined> => {\n\t\t\t\treturn this._proxy.$provideSignatureHelp(handle, model.uri, position, context, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- links\n\n\t$registerDocumentLinkProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.LinkProviderRegistry.register(selector, <modes.LinkProvider>{\n\t\t\tprovideLinks: (model, token) => {\n\t\t\t\treturn this._proxy.$provideDocumentLinks(handle, model.uri, token).then(dto => {\n\t\t\t\t\tif (dto) {\n\t\t\t\t\t\tdto.forEach(obj => {\n\t\t\t\t\t\t\tMainThreadLanguageFeatures._reviveLinkDTO(obj);\n\t\t\t\t\t\t\tthis._heapService.trackObject(obj);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn dto;\n\t\t\t\t});\n\t\t\t},\n\t\t\tresolveLink: (link, token) => {\n\t\t\t\treturn this._proxy.$resolveDocumentLink(handle, link, token).then(obj => {\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tMainThreadLanguageFeatures._reviveLinkDTO(obj);\n\t\t\t\t\t\tthis._heapService.trackObject(obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- colors\n\n\t$registerDocumentColorProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tconst proxy = this._proxy;\n\t\tthis._registrations[handle] = modes.ColorProviderRegistry.register(selector, <modes.DocumentColorProvider>{\n\t\t\tprovideDocumentColors: (model, token) => {\n\t\t\t\treturn proxy.$provideDocumentColors(handle, model.uri, token)\n\t\t\t\t\t.then(documentColors => {\n\t\t\t\t\t\treturn documentColors.map(documentColor => {\n\t\t\t\t\t\t\tconst [red, green, blue, alpha] = documentColor.color;\n\t\t\t\t\t\t\tconst color = {\n\t\t\t\t\t\t\t\tred: red,\n\t\t\t\t\t\t\t\tgreen: green,\n\t\t\t\t\t\t\t\tblue: blue,\n\t\t\t\t\t\t\t\talpha\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\trange: documentColor.range\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t},\n\n\t\t\tprovideColorPresentations: (model, colorInfo, token) => {\n\t\t\t\treturn proxy.$provideColorPresentations(handle, model.uri, {\n\t\t\t\t\tcolor: [colorInfo.color.red, colorInfo.color.green, colorInfo.color.blue, colorInfo.color.alpha],\n\t\t\t\t\trange: colorInfo.range\n\t\t\t\t}, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- folding\n\n\t$registerFoldingRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tconst proxy = this._proxy;\n\t\tthis._registrations[handle] = modes.FoldingRangeProviderRegistry.register(selector, <modes.FoldingRangeProvider>{\n\t\t\tprovideFoldingRanges: (model, context, token) => {\n\t\t\t\treturn proxy.$provideFoldingRanges(handle, model.uri, context, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// -- smart select\n\n\t$registerSelectionRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = modes.SelectionRangeRegistry.register(selector, {\n\t\t\tprovideSelectionRanges: (model, positions, token) => {\n\t\t\t\treturn this._proxy.$provideSelectionRanges(handle, model.uri, positions, token);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- call hierarchy\n\n\t$registerCallHierarchyProvider(handle: number, selector: ISerializedDocumentFilter[]): void {\n\t\tthis._registrations[handle] = callh.CallHierarchyProviderRegistry.register(selector, {\n\t\t\tprovideCallHierarchyItem: (document, position, token) => {\n\t\t\t\treturn this._proxy.$provideCallHierarchyItem(handle, document.uri, position, token).then(MainThreadLanguageFeatures._reviveCallHierarchyItemDto);\n\t\t\t},\n\t\t\tresolveCallHierarchyItem: (item, direction, token) => {\n\t\t\t\treturn this._proxy.$resolveCallHierarchyItem(handle, item, direction, token).then(data => {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\tconst [item, locations] = data[i];\n\t\t\t\t\t\t\tdata[i] = [\n\t\t\t\t\t\t\t\tMainThreadLanguageFeatures._reviveCallHierarchyItemDto(item),\n\t\t\t\t\t\t\t\tMainThreadLanguageFeatures._reviveLocationDto(locations)\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn data as [callh.CallHierarchyItem, modes.Location[]][];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- configuration\n\n\tprivate static _reviveRegExp(regExp: ISerializedRegExp): RegExp {\n\t\treturn new RegExp(regExp.pattern, regExp.flags);\n\t}\n\n\tprivate static _reviveIndentationRule(indentationRule: ISerializedIndentationRule): IndentationRule {\n\t\treturn {\n\t\t\tdecreaseIndentPattern: MainThreadLanguageFeatures._reviveRegExp(indentationRule.decreaseIndentPattern),\n\t\t\tincreaseIndentPattern: MainThreadLanguageFeatures._reviveRegExp(indentationRule.increaseIndentPattern),\n\t\t\tindentNextLinePattern: indentationRule.indentNextLinePattern ? MainThreadLanguageFeatures._reviveRegExp(indentationRule.indentNextLinePattern) : undefined,\n\t\t\tunIndentedLinePattern: indentationRule.unIndentedLinePattern ? MainThreadLanguageFeatures._reviveRegExp(indentationRule.unIndentedLinePattern) : undefined,\n\t\t};\n\t}\n\n\tprivate static _reviveOnEnterRule(onEnterRule: ISerializedOnEnterRule): OnEnterRule {\n\t\treturn {\n\t\t\tbeforeText: MainThreadLanguageFeatures._reviveRegExp(onEnterRule.beforeText),\n\t\t\tafterText: onEnterRule.afterText ? MainThreadLanguageFeatures._reviveRegExp(onEnterRule.afterText) : undefined,\n\t\t\toneLineAboveText: onEnterRule.oneLineAboveText ? MainThreadLanguageFeatures._reviveRegExp(onEnterRule.oneLineAboveText) : undefined,\n\t\t\taction: onEnterRule.action\n\t\t};\n\t}\n\n\tprivate static _reviveOnEnterRules(onEnterRules: ISerializedOnEnterRule[]): OnEnterRule[] {\n\t\treturn onEnterRules.map(MainThreadLanguageFeatures._reviveOnEnterRule);\n\t}\n\n\t$setLanguageConfiguration(handle: number, languageId: string, _configuration: ISerializedLanguageConfiguration): void {\n\n\t\tconst configuration: LanguageConfiguration = {\n\t\t\tcomments: _configuration.comments,\n\t\t\tbrackets: _configuration.brackets,\n\t\t\twordPattern: _configuration.wordPattern ? MainThreadLanguageFeatures._reviveRegExp(_configuration.wordPattern) : undefined,\n\t\t\tindentationRules: _configuration.indentationRules ? MainThreadLanguageFeatures._reviveIndentationRule(_configuration.indentationRules) : undefined,\n\t\t\tonEnterRules: _configuration.onEnterRules ? MainThreadLanguageFeatures._reviveOnEnterRules(_configuration.onEnterRules) : undefined,\n\n\t\t\tautoClosingPairs: undefined,\n\t\t\tsurroundingPairs: undefined,\n\t\t\t__electricCharacterSupport: undefined\n\t\t};\n\n\t\tif (_configuration.__characterPairSupport) {\n\t\t\t// backwards compatibility\n\t\t\tconfiguration.autoClosingPairs = _configuration.__characterPairSupport.autoClosingPairs;\n\t\t}\n\n\t\tif (_configuration.__electricCharacterSupport && _configuration.__electricCharacterSupport.docComment) {\n\t\t\tconfiguration.__electricCharacterSupport = {\n\t\t\t\tdocComment: {\n\t\t\t\t\topen: _configuration.__electricCharacterSupport.docComment.open,\n\t\t\t\t\tclose: _configuration.__electricCharacterSupport.docComment.close\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst languageIdentifier = this._modeService.getLanguageIdentifier(languageId);\n\t\tif (languageIdentifier) {\n\t\t\tthis._registrations[handle] = LanguageConfigurationRegistry.register(languageIdentifier, configuration);\n\t\t}\n\t}\n\n}\n"]}]}