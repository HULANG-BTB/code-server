{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBar.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBar.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar compositeBarActions_1 = require(\"vs/workbench/browser/parts/compositeBarActions\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar types_1 = require(\"vs/base/common/types\");\nvar dnd_1 = require(\"vs/workbench/browser/dnd\");\nvar event_1 = require(\"vs/base/common/event\");\nvar CompositeBar = /** @class */ (function (_super) {\n    tslib_1.__extends(CompositeBar, _super);\n    function CompositeBar(items, options, instantiationService, contextMenuService) {\n        var _this = _super.call(this) || this;\n        _this.options = options;\n        _this.instantiationService = instantiationService;\n        _this.contextMenuService = contextMenuService;\n        _this._onDidChange = _this._register(new event_1.Emitter());\n        _this.onDidChange = _this._onDidChange.event;\n        _this.model = new CompositeBarModel(items, options);\n        _this.visibleComposites = [];\n        _this.compositeSizeInBar = new Map();\n        _this.compositeTransfer = dnd_1.LocalSelectionTransfer.getInstance();\n        _this.computeSizes(_this.model.visibleItems);\n        return _this;\n    }\n    CompositeBar.prototype.getCompositeBarItems = function () {\n        return this.model.items.slice();\n    };\n    CompositeBar.prototype.setCompositeBarItems = function (items) {\n        if (this.model.setItems(items)) {\n            this.updateCompositeSwitcher();\n        }\n    };\n    CompositeBar.prototype.getPinnedComposites = function () {\n        return this.model.pinnedItems;\n    };\n    CompositeBar.prototype.create = function (parent) {\n        var _this = this;\n        var actionBarDiv = parent.appendChild(dom_1.$('.composite-bar'));\n        this.compositeSwitcherBar = this._register(new actionbar_1.ActionBar(actionBarDiv, {\n            actionItemProvider: function (action) {\n                if (action instanceof compositeBarActions_1.CompositeOverflowActivityAction) {\n                    return _this.compositeOverflowActionItem;\n                }\n                var item = _this.model.findItem(action.id);\n                return item && _this.instantiationService.createInstance(compositeBarActions_1.CompositeActionItem, action, item.pinnedAction, function () { return _this.getContextMenuActions(); }, _this.options.colors, _this.options.icon, _this);\n            },\n            orientation: this.options.orientation,\n            ariaLabel: nls.localize('activityBarAriaLabel', \"Active View Switcher\"),\n            animated: false,\n        }));\n        // Contextmenu for composites\n        this._register(dom_1.addDisposableListener(parent, dom_1.EventType.CONTEXT_MENU, function (e) { return _this.showContextMenu(e); }));\n        // Allow to drop at the end to move composites to the end\n        this._register(dom_1.addDisposableListener(parent, dom_1.EventType.DROP, function (e) {\n            if (_this.compositeTransfer.hasData(compositeBarActions_1.DraggedCompositeIdentifier.prototype)) {\n                dom_1.EventHelper.stop(e, true);\n                var draggedCompositeId = _this.compositeTransfer.getData(compositeBarActions_1.DraggedCompositeIdentifier.prototype)[0].id;\n                _this.compositeTransfer.clearData(compositeBarActions_1.DraggedCompositeIdentifier.prototype);\n                var targetItem = _this.model.visibleItems[_this.model.visibleItems.length - 1];\n                if (targetItem && targetItem.id !== draggedCompositeId) {\n                    _this.move(draggedCompositeId, targetItem.id);\n                }\n            }\n        }));\n        return actionBarDiv;\n    };\n    CompositeBar.prototype.layout = function (dimension) {\n        this.dimension = dimension;\n        if (dimension.height === 0 || dimension.width === 0) {\n            // Do not layout if not visible. Otherwise the size measurment would be computed wrongly\n            return;\n        }\n        if (this.compositeSizeInBar.size === 0) {\n            // Compute size of each composite by getting the size from the css renderer\n            // Size is later used for overflow computation\n            this.computeSizes(this.model.visibleItems);\n        }\n        this.updateCompositeSwitcher();\n    };\n    CompositeBar.prototype.addComposite = function (_a) {\n        var id = _a.id, name = _a.name, order = _a.order;\n        // Add to the model\n        if (this.model.add(id, name, order)) {\n            this.computeSizes([this.model.findItem(id)]);\n            this.updateCompositeSwitcher();\n        }\n    };\n    CompositeBar.prototype.removeComposite = function (id) {\n        // If it pinned, unpin it first\n        if (this.isPinned(id)) {\n            this.unpin(id);\n        }\n        // Remove from the model\n        if (this.model.remove(id)) {\n            this.updateCompositeSwitcher();\n        }\n    };\n    CompositeBar.prototype.hideComposite = function (id) {\n        if (this.model.hide(id)) {\n            this.resetActiveComposite(id);\n            this.updateCompositeSwitcher();\n        }\n    };\n    CompositeBar.prototype.activateComposite = function (id) {\n        var previousActiveItem = this.model.activeItem;\n        if (this.model.activate(id)) {\n            // Update if current composite is neither visible nor pinned\n            // or previous active composite is not pinned\n            if (this.visibleComposites.indexOf(id) === -1 || (!!this.model.activeItem && !this.model.activeItem.pinned) || (previousActiveItem && !previousActiveItem.pinned)) {\n                this.updateCompositeSwitcher();\n            }\n        }\n    };\n    CompositeBar.prototype.deactivateComposite = function (id) {\n        var previousActiveItem = this.model.activeItem;\n        if (this.model.deactivate()) {\n            if (previousActiveItem && !previousActiveItem.pinned) {\n                this.updateCompositeSwitcher();\n            }\n        }\n    };\n    CompositeBar.prototype.showActivity = function (compositeId, badge, clazz, priority) {\n        var _this = this;\n        if (!badge) {\n            throw errors_1.illegalArgument('badge');\n        }\n        if (typeof priority !== 'number') {\n            priority = 0;\n        }\n        var activity = { badge: badge, clazz: clazz, priority: priority };\n        this.model.addActivity(compositeId, activity);\n        return lifecycle_1.toDisposable(function () { return _this.model.removeActivity(compositeId, activity); });\n    };\n    CompositeBar.prototype.pin = function (compositeId, open) {\n        var _this = this;\n        if (this.model.setPinned(compositeId, true)) {\n            this.updateCompositeSwitcher();\n            if (open) {\n                this.options.openComposite(compositeId).then(function () { return _this.activateComposite(compositeId); }); // Activate after opening\n            }\n        }\n    };\n    CompositeBar.prototype.unpin = function (compositeId) {\n        if (this.model.setPinned(compositeId, false)) {\n            this.updateCompositeSwitcher();\n            this.resetActiveComposite(compositeId);\n        }\n    };\n    CompositeBar.prototype.resetActiveComposite = function (compositeId) {\n        var defaultCompositeId = this.options.getDefaultCompositeId();\n        // Case: composite is not the active one or the active one is a different one\n        // Solv: we do nothing\n        if (!this.model.activeItem || this.model.activeItem.id !== compositeId) {\n            return;\n        }\n        // Deactivate itself\n        this.deactivateComposite(compositeId);\n        // Case: composite is not the default composite and default composite is still showing\n        // Solv: we open the default composite\n        if (defaultCompositeId !== compositeId && this.isPinned(defaultCompositeId)) {\n            this.options.openComposite(defaultCompositeId);\n        }\n        // Case: we closed the last visible composite\n        // Solv: we hide the part\n        else if (this.visibleComposites.length === 1) {\n            this.options.hidePart();\n        }\n        // Case: we closed the default composite\n        // Solv: we open the next visible composite from top\n        else {\n            this.options.openComposite(this.visibleComposites.filter(function (cid) { return cid !== compositeId; })[0]);\n        }\n    };\n    CompositeBar.prototype.isPinned = function (compositeId) {\n        var item = this.model.findItem(compositeId);\n        return item && item.pinned;\n    };\n    CompositeBar.prototype.move = function (compositeId, toCompositeId) {\n        var _this = this;\n        if (this.model.move(compositeId, toCompositeId)) {\n            // timeout helps to prevent artifacts from showing up\n            setTimeout(function () { return _this.updateCompositeSwitcher(); }, 0);\n        }\n    };\n    CompositeBar.prototype.getAction = function (compositeId) {\n        var item = this.model.findItem(compositeId);\n        return item && item.activityAction;\n    };\n    CompositeBar.prototype.computeSizes = function (items) {\n        var _this = this;\n        var size = this.options.compositeSize;\n        if (size) {\n            items.forEach(function (composite) { return _this.compositeSizeInBar.set(composite.id, size); });\n        }\n        else {\n            if (this.dimension && this.dimension.height !== 0 && this.dimension.width !== 0) {\n                // Compute sizes only if visible. Otherwise the size measurment would be computed wrongly.\n                var currentItemsLength_1 = this.compositeSwitcherBar.items.length;\n                this.compositeSwitcherBar.push(items.map(function (composite) { return composite.activityAction; }));\n                items.map(function (composite, index) { return _this.compositeSizeInBar.set(composite.id, _this.options.orientation === actionbar_1.ActionsOrientation.VERTICAL\n                    ? _this.compositeSwitcherBar.getHeight(currentItemsLength_1 + index)\n                    : _this.compositeSwitcherBar.getWidth(currentItemsLength_1 + index)); });\n                items.forEach(function () { return _this.compositeSwitcherBar.pull(_this.compositeSwitcherBar.items.length - 1); });\n            }\n        }\n    };\n    CompositeBar.prototype.updateCompositeSwitcher = function () {\n        var _this = this;\n        if (!this.compositeSwitcherBar || !this.dimension) {\n            return; // We have not been rendered yet so there is nothing to update.\n        }\n        var compositesToShow = this.model.visibleItems.filter(function (item) {\n            return item.pinned\n                || (_this.model.activeItem && _this.model.activeItem.id === item.id);\n        } /* Show the active composite even if it is not pinned */).map(function (item) { return item.id; });\n        // Ensure we are not showing more composites than we have height for\n        var overflows = false;\n        var maxVisible = compositesToShow.length;\n        var size = 0;\n        var limit = this.options.orientation === actionbar_1.ActionsOrientation.VERTICAL ? this.dimension.height : this.dimension.width;\n        for (var i = 0; i < compositesToShow.length && size <= limit; i++) {\n            size += this.compositeSizeInBar.get(compositesToShow[i]);\n            if (size > limit) {\n                maxVisible = i;\n            }\n        }\n        overflows = compositesToShow.length > maxVisible;\n        if (overflows) {\n            size -= this.compositeSizeInBar.get(compositesToShow[maxVisible]);\n            compositesToShow = compositesToShow.slice(0, maxVisible);\n            size += this.options.overflowActionSize;\n        }\n        // Check if we need to make extra room for the overflow action\n        if (size > limit) {\n            size -= this.compositeSizeInBar.get(compositesToShow.pop());\n        }\n        // We always try show the active composite\n        if (this.model.activeItem && compositesToShow.every(function (compositeId) { return !!_this.model.activeItem && compositeId !== _this.model.activeItem.id; })) {\n            var removedComposite = compositesToShow.pop();\n            size = size - this.compositeSizeInBar.get(removedComposite) + this.compositeSizeInBar.get(this.model.activeItem.id);\n            compositesToShow.push(this.model.activeItem.id);\n        }\n        // The active composite might have bigger size than the removed composite, check for overflow again\n        if (size > limit) {\n            compositesToShow.length ? compositesToShow.splice(compositesToShow.length - 2, 1) : compositesToShow.pop();\n        }\n        var visibleCompositesChange = !arrays.equals(compositesToShow, this.visibleComposites);\n        // Pull out overflow action if there is a composite change so that we can add it to the end later\n        if (this.compositeOverflowAction && visibleCompositesChange) {\n            this.compositeSwitcherBar.pull(this.compositeSwitcherBar.length() - 1);\n            this.compositeOverflowAction.dispose();\n            this.compositeOverflowAction = null;\n            if (this.compositeOverflowActionItem) {\n                this.compositeOverflowActionItem.dispose();\n            }\n            this.compositeOverflowActionItem = undefined;\n        }\n        // Pull out composites that overflow or got hidden\n        var compositesToRemove = [];\n        this.visibleComposites.forEach(function (compositeId, index) {\n            if (compositesToShow.indexOf(compositeId) === -1) {\n                compositesToRemove.push(index);\n            }\n        });\n        compositesToRemove.reverse().forEach(function (index) {\n            var actionItem = _this.compositeSwitcherBar.items[index];\n            _this.compositeSwitcherBar.pull(index);\n            actionItem.dispose();\n            _this.visibleComposites.splice(index, 1);\n        });\n        // Update the positions of the composites\n        compositesToShow.forEach(function (compositeId, newIndex) {\n            var currentIndex = _this.visibleComposites.indexOf(compositeId);\n            if (newIndex !== currentIndex) {\n                if (currentIndex !== -1) {\n                    var actionItem = _this.compositeSwitcherBar.items[currentIndex];\n                    _this.compositeSwitcherBar.pull(currentIndex);\n                    actionItem.dispose();\n                    _this.visibleComposites.splice(currentIndex, 1);\n                }\n                _this.compositeSwitcherBar.push(_this.model.findItem(compositeId).activityAction, { label: true, icon: _this.options.icon, index: newIndex });\n                _this.visibleComposites.splice(newIndex, 0, compositeId);\n            }\n        });\n        // Add overflow action as needed\n        if ((visibleCompositesChange && overflows) || this.compositeSwitcherBar.length() === 0) {\n            this.compositeOverflowAction = this.instantiationService.createInstance(compositeBarActions_1.CompositeOverflowActivityAction, function () {\n                if (_this.compositeOverflowActionItem) {\n                    _this.compositeOverflowActionItem.showMenu();\n                }\n            });\n            this.compositeOverflowActionItem = this.instantiationService.createInstance(compositeBarActions_1.CompositeOverflowActivityActionItem, this.compositeOverflowAction, function () { return _this.getOverflowingComposites(); }, function () { return _this.model.activeItem ? _this.model.activeItem.id : undefined; }, function (compositeId) {\n                var item = _this.model.findItem(compositeId);\n                return item && item.activity[0] && item.activity[0].badge;\n            }, this.options.getOnCompositeClickAction, this.options.colors);\n            this.compositeSwitcherBar.push(this.compositeOverflowAction, { label: false, icon: true });\n        }\n        this._onDidChange.fire();\n    };\n    CompositeBar.prototype.getOverflowingComposites = function () {\n        var _this = this;\n        var overflowingIds = this.model.visibleItems.filter(function (item) { return item.pinned; }).map(function (item) { return item.id; });\n        // Show the active composite even if it is not pinned\n        if (this.model.activeItem && !this.model.activeItem.pinned) {\n            overflowingIds.push(this.model.activeItem.id);\n        }\n        overflowingIds = overflowingIds.filter(function (compositeId) { return _this.visibleComposites.indexOf(compositeId) === -1; });\n        return this.model.visibleItems.filter(function (c) { return overflowingIds.indexOf(c.id) !== -1; });\n    };\n    CompositeBar.prototype.showContextMenu = function (e) {\n        var _this = this;\n        dom_1.EventHelper.stop(e, true);\n        var event = new mouseEvent_1.StandardMouseEvent(e);\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return { x: event.posx, y: event.posy }; },\n            getActions: function () { return _this.getContextMenuActions(); }\n        });\n    };\n    CompositeBar.prototype.getContextMenuActions = function () {\n        var _this = this;\n        var actions = this.model.visibleItems\n            .map(function (_a) {\n            var id = _a.id, name = _a.name, activityAction = _a.activityAction;\n            return ({\n                id: id,\n                label: name || id,\n                checked: _this.isPinned(id),\n                enabled: activityAction.enabled,\n                run: function () {\n                    if (_this.isPinned(id)) {\n                        _this.unpin(id);\n                    }\n                    else {\n                        _this.pin(id, true);\n                    }\n                }\n            });\n        });\n        var otherActions = this.options.getContextMenuActions();\n        if (otherActions.length) {\n            actions.push(new actionbar_1.Separator());\n            actions.push.apply(actions, otherActions);\n        }\n        return actions;\n    };\n    CompositeBar = tslib_1.__decorate([\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, contextView_1.IContextMenuService)\n    ], CompositeBar);\n    return CompositeBar;\n}(widget_1.Widget));\nexports.CompositeBar = CompositeBar;\nvar CompositeBarModel = /** @class */ (function () {\n    function CompositeBarModel(items, options) {\n        this.options = options;\n        this.setItems(items);\n    }\n    Object.defineProperty(CompositeBarModel.prototype, \"items\", {\n        get: function () {\n            return this._items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompositeBarModel.prototype.setItems = function (items) {\n        var _this = this;\n        var result = [];\n        var hasChanges = false;\n        if (!this.items || this.items.length === 0) {\n            this._items = items.map(function (i) { return _this.createCompositeBarItem(i.id, i.name, i.order, i.pinned, i.visible); });\n            hasChanges = true;\n        }\n        else {\n            var existingItems = this.items;\n            var _loop_1 = function (index) {\n                var newItem = items[index];\n                var existingItem = existingItems.filter(function (_a) {\n                    var id = _a.id;\n                    return id === newItem.id;\n                })[0];\n                if (existingItem) {\n                    if (existingItem.pinned !== newItem.pinned ||\n                        index !== existingItems.indexOf(existingItem)) {\n                        existingItem.pinned = newItem.pinned;\n                        result.push(existingItem);\n                        hasChanges = true;\n                    }\n                    else {\n                        result.push(existingItem);\n                    }\n                }\n                else {\n                    result.push(this_1.createCompositeBarItem(newItem.id, newItem.name, newItem.order, newItem.pinned, newItem.visible));\n                    hasChanges = true;\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < items.length; index++) {\n                _loop_1(index);\n            }\n            this._items = result;\n        }\n        return hasChanges;\n    };\n    Object.defineProperty(CompositeBarModel.prototype, \"visibleItems\", {\n        get: function () {\n            return this.items.filter(function (item) { return item.visible; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompositeBarModel.prototype, \"pinnedItems\", {\n        get: function () {\n            return this.items.filter(function (item) { return item.visible && item.pinned; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompositeBarModel.prototype.createCompositeBarItem = function (id, name, order, pinned, visible) {\n        var options = this.options;\n        return {\n            id: id, name: name, pinned: pinned, order: order, visible: visible,\n            activity: [],\n            get activityAction() {\n                return options.getActivityAction(id);\n            },\n            get pinnedAction() {\n                return options.getCompositePinnedAction(id);\n            }\n        };\n    };\n    CompositeBarModel.prototype.add = function (id, name, order) {\n        var item = this.findItem(id);\n        if (item) {\n            var changed = false;\n            item.name = name;\n            if (!types_1.isUndefinedOrNull(order)) {\n                changed = item.order !== order;\n                item.order = order;\n            }\n            if (!item.visible) {\n                item.visible = true;\n                changed = true;\n            }\n            return changed;\n        }\n        else {\n            var item_1 = this.createCompositeBarItem(id, name, order, true, true);\n            if (types_1.isUndefinedOrNull(order)) {\n                this.items.push(item_1);\n            }\n            else {\n                var index = 0;\n                while (index < this.items.length && typeof this.items[index].order === 'number' && this.items[index].order < order) {\n                    index++;\n                }\n                this.items.splice(index, 0, item_1);\n            }\n            return true;\n        }\n    };\n    CompositeBarModel.prototype.remove = function (id) {\n        for (var index = 0; index < this.items.length; index++) {\n            if (this.items[index].id === id) {\n                this.items.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.hide = function (id) {\n        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === id) {\n                if (item.visible) {\n                    item.visible = false;\n                    return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.move = function (compositeId, toCompositeId) {\n        var fromIndex = this.findIndex(compositeId);\n        var toIndex = this.findIndex(toCompositeId);\n        // Make sure both items are known to the model\n        if (fromIndex === -1 || toIndex === -1) {\n            return false;\n        }\n        var sourceItem = this.items.splice(fromIndex, 1)[0];\n        this.items.splice(toIndex, 0, sourceItem);\n        // Make sure a moved composite gets pinned\n        sourceItem.pinned = true;\n        return true;\n    };\n    CompositeBarModel.prototype.setPinned = function (id, pinned) {\n        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.id === id) {\n                if (item.pinned !== pinned) {\n                    item.pinned = pinned;\n                    return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.addActivity = function (id, activity) {\n        var item = this.findItem(id);\n        if (item) {\n            var stack = item.activity;\n            for (var i = 0; i <= stack.length; i++) {\n                if (i === stack.length) {\n                    stack.push(activity);\n                    break;\n                }\n                else if (stack[i].priority <= activity.priority) {\n                    stack.splice(i, 0, activity);\n                    break;\n                }\n            }\n            this.updateActivity(id);\n            return true;\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.removeActivity = function (id, activity) {\n        var item = this.findItem(id);\n        if (item) {\n            var index = item.activity.indexOf(activity);\n            if (index !== -1) {\n                item.activity.splice(index, 1);\n                this.updateActivity(id);\n                return true;\n            }\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.updateActivity = function (id) {\n        var item = this.findItem(id);\n        if (item) {\n            if (item.activity.length) {\n                var _a = item.activity[0], badge = _a.badge, clazz = _a.clazz;\n                item.activityAction.setBadge(badge, clazz);\n            }\n            else {\n                item.activityAction.setBadge(undefined);\n            }\n        }\n    };\n    CompositeBarModel.prototype.activate = function (id) {\n        if (!this.activeItem || this.activeItem.id !== id) {\n            if (this.activeItem) {\n                this.deactivate();\n            }\n            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.id === id) {\n                    this.activeItem = item;\n                    this.activeItem.activityAction.activate();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.deactivate = function () {\n        if (this.activeItem) {\n            this.activeItem.activityAction.deactivate();\n            this.activeItem = undefined;\n            return true;\n        }\n        return false;\n    };\n    CompositeBarModel.prototype.findItem = function (id) {\n        return this.items.filter(function (item) { return item.id === id; })[0];\n    };\n    CompositeBarModel.prototype.findIndex = function (id) {\n        for (var index = 0; index < this.items.length; index++) {\n            if (this.items[index].id === id) {\n                return index;\n            }\n        }\n        return -1;\n    };\n    return CompositeBarModel;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBar.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositeBar.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport * as arrays from 'vs/base/common/arrays';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ActionBar, ActionsOrientation, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { CompositeActionItem, CompositeOverflowActivityAction, ICompositeActivity, CompositeOverflowActivityActionItem, ActivityAction, ICompositeBar, ICompositeBarColors, DraggedCompositeIdentifier } from 'vs/workbench/browser/parts/compositeBarActions';\nimport { Dimension, $, addDisposableListener, EventType, EventHelper } from 'vs/base/browser/dom';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { LocalSelectionTransfer } from 'vs/workbench/browser/dnd';\nimport { ITheme } from 'vs/platform/theme/common/themeService';\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport interface ICompositeBarItem {\n\tid: string;\n\tname?: string;\n\tpinned: boolean;\n\torder?: number;\n\tvisible: boolean;\n}\n\nexport interface ICompositeBarOptions {\n\ticon: boolean;\n\torientation: ActionsOrientation;\n\tcolors: (theme: ITheme) => ICompositeBarColors;\n\tcompositeSize: number;\n\toverflowActionSize: number;\n\tgetActivityAction: (compositeId: string) => ActivityAction;\n\tgetCompositePinnedAction: (compositeId: string) => Action;\n\tgetOnCompositeClickAction: (compositeId: string) => Action;\n\tgetContextMenuActions: () => Action[];\n\topenComposite: (compositeId: string) => Promise<any>;\n\tgetDefaultCompositeId: () => string;\n\thidePart: () => void;\n}\n\nexport class CompositeBar extends Widget implements ICompositeBar {\n\n\tprivate dimension: Dimension;\n\n\tprivate compositeSwitcherBar: ActionBar;\n\tprivate compositeOverflowAction: CompositeOverflowActivityAction | null;\n\tprivate compositeOverflowActionItem: CompositeOverflowActivityActionItem | undefined;\n\n\tprivate model: CompositeBarModel;\n\tprivate visibleComposites: string[];\n\tprivate compositeSizeInBar: Map<string, number>;\n\n\tprivate compositeTransfer: LocalSelectionTransfer<DraggedCompositeIdentifier>;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\titems: ICompositeBarItem[],\n\t\tprivate options: ICompositeBarOptions,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\n\t\tthis.model = new CompositeBarModel(items, options);\n\t\tthis.visibleComposites = [];\n\t\tthis.compositeSizeInBar = new Map<string, number>();\n\t\tthis.compositeTransfer = LocalSelectionTransfer.getInstance<DraggedCompositeIdentifier>();\n\t\tthis.computeSizes(this.model.visibleItems);\n\t}\n\n\tgetCompositeBarItems(): ICompositeBarItem[] {\n\t\treturn [...this.model.items];\n\t}\n\n\tsetCompositeBarItems(items: ICompositeBarItem[]): void {\n\t\tif (this.model.setItems(items)) {\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\tgetPinnedComposites(): ICompositeBarItem[] {\n\t\treturn this.model.pinnedItems;\n\t}\n\n\tcreate(parent: HTMLElement): HTMLElement {\n\t\tconst actionBarDiv = parent.appendChild($('.composite-bar'));\n\t\tthis.compositeSwitcherBar = this._register(new ActionBar(actionBarDiv, {\n\t\t\tactionItemProvider: (action: Action) => {\n\t\t\t\tif (action instanceof CompositeOverflowActivityAction) {\n\t\t\t\t\treturn this.compositeOverflowActionItem;\n\t\t\t\t}\n\t\t\t\tconst item = this.model.findItem(action.id);\n\t\t\t\treturn item && this.instantiationService.createInstance(CompositeActionItem, action, item.pinnedAction, () => this.getContextMenuActions(), this.options.colors, this.options.icon, this);\n\t\t\t},\n\t\t\torientation: this.options.orientation,\n\t\t\tariaLabel: nls.localize('activityBarAriaLabel', \"Active View Switcher\"),\n\t\t\tanimated: false,\n\t\t}));\n\n\t\t// Contextmenu for composites\n\t\tthis._register(addDisposableListener(parent, EventType.CONTEXT_MENU, e => this.showContextMenu(e)));\n\n\t\t// Allow to drop at the end to move composites to the end\n\t\tthis._register(addDisposableListener(parent, EventType.DROP, (e: DragEvent) => {\n\t\t\tif (this.compositeTransfer.hasData(DraggedCompositeIdentifier.prototype)) {\n\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\tconst draggedCompositeId = this.compositeTransfer.getData(DraggedCompositeIdentifier.prototype)![0].id;\n\t\t\t\tthis.compositeTransfer.clearData(DraggedCompositeIdentifier.prototype);\n\n\t\t\t\tconst targetItem = this.model.visibleItems[this.model.visibleItems.length - 1];\n\t\t\t\tif (targetItem && targetItem.id !== draggedCompositeId) {\n\t\t\t\t\tthis.move(draggedCompositeId, targetItem.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\treturn actionBarDiv;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis.dimension = dimension;\n\t\tif (dimension.height === 0 || dimension.width === 0) {\n\t\t\t// Do not layout if not visible. Otherwise the size measurment would be computed wrongly\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.compositeSizeInBar.size === 0) {\n\t\t\t// Compute size of each composite by getting the size from the css renderer\n\t\t\t// Size is later used for overflow computation\n\t\t\tthis.computeSizes(this.model.visibleItems);\n\t\t}\n\n\t\tthis.updateCompositeSwitcher();\n\t}\n\n\taddComposite({ id, name, order }: { id: string; name: string, order?: number }): void {\n\t\t// Add to the model\n\t\tif (this.model.add(id, name, order)) {\n\t\t\tthis.computeSizes([this.model.findItem(id)]);\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\tremoveComposite(id: string): void {\n\n\t\t// If it pinned, unpin it first\n\t\tif (this.isPinned(id)) {\n\t\t\tthis.unpin(id);\n\t\t}\n\n\t\t// Remove from the model\n\t\tif (this.model.remove(id)) {\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\thideComposite(id: string): void {\n\t\tif (this.model.hide(id)) {\n\t\t\tthis.resetActiveComposite(id);\n\t\t\tthis.updateCompositeSwitcher();\n\t\t}\n\t}\n\n\tactivateComposite(id: string): void {\n\t\tconst previousActiveItem = this.model.activeItem;\n\t\tif (this.model.activate(id)) {\n\t\t\t// Update if current composite is neither visible nor pinned\n\t\t\t// or previous active composite is not pinned\n\t\t\tif (this.visibleComposites.indexOf(id) === - 1 || (!!this.model.activeItem && !this.model.activeItem.pinned) || (previousActiveItem && !previousActiveItem.pinned)) {\n\t\t\t\tthis.updateCompositeSwitcher();\n\t\t\t}\n\t\t}\n\t}\n\n\tdeactivateComposite(id: string): void {\n\t\tconst previousActiveItem = this.model.activeItem;\n\t\tif (this.model.deactivate()) {\n\t\t\tif (previousActiveItem && !previousActiveItem.pinned) {\n\t\t\t\tthis.updateCompositeSwitcher();\n\t\t\t}\n\t\t}\n\t}\n\n\tshowActivity(compositeId: string, badge: IBadge, clazz?: string, priority?: number): IDisposable {\n\t\tif (!badge) {\n\t\t\tthrow illegalArgument('badge');\n\t\t}\n\n\t\tif (typeof priority !== 'number') {\n\t\t\tpriority = 0;\n\t\t}\n\n\t\tconst activity: ICompositeActivity = { badge, clazz, priority };\n\t\tthis.model.addActivity(compositeId, activity);\n\t\treturn toDisposable(() => this.model.removeActivity(compositeId, activity));\n\t}\n\n\tpin(compositeId: string, open?: boolean): void {\n\t\tif (this.model.setPinned(compositeId, true)) {\n\t\t\tthis.updateCompositeSwitcher();\n\n\t\t\tif (open) {\n\t\t\t\tthis.options.openComposite(compositeId).then(() => this.activateComposite(compositeId)); // Activate after opening\n\t\t\t}\n\t\t}\n\t}\n\n\tunpin(compositeId: string): void {\n\t\tif (this.model.setPinned(compositeId, false)) {\n\n\t\t\tthis.updateCompositeSwitcher();\n\n\t\t\tthis.resetActiveComposite(compositeId);\n\t\t}\n\t}\n\n\tprivate resetActiveComposite(compositeId: string) {\n\t\tconst defaultCompositeId = this.options.getDefaultCompositeId();\n\n\t\t// Case: composite is not the active one or the active one is a different one\n\t\t// Solv: we do nothing\n\t\tif (!this.model.activeItem || this.model.activeItem.id !== compositeId) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Deactivate itself\n\t\tthis.deactivateComposite(compositeId);\n\n\t\t// Case: composite is not the default composite and default composite is still showing\n\t\t// Solv: we open the default composite\n\t\tif (defaultCompositeId !== compositeId && this.isPinned(defaultCompositeId)) {\n\t\t\tthis.options.openComposite(defaultCompositeId);\n\t\t}\n\n\t\t// Case: we closed the last visible composite\n\t\t// Solv: we hide the part\n\t\telse if (this.visibleComposites.length === 1) {\n\t\t\tthis.options.hidePart();\n\t\t}\n\n\t\t// Case: we closed the default composite\n\t\t// Solv: we open the next visible composite from top\n\t\telse {\n\t\t\tthis.options.openComposite(this.visibleComposites.filter(cid => cid !== compositeId)[0]);\n\t\t}\n\t}\n\n\tisPinned(compositeId: string): boolean {\n\t\tconst item = this.model.findItem(compositeId);\n\t\treturn item && item.pinned;\n\t}\n\n\tmove(compositeId: string, toCompositeId: string): void {\n\t\tif (this.model.move(compositeId, toCompositeId)) {\n\t\t\t// timeout helps to prevent artifacts from showing up\n\t\t\tsetTimeout(() => this.updateCompositeSwitcher(), 0);\n\t\t}\n\t}\n\n\tgetAction(compositeId: string): ActivityAction {\n\t\tconst item = this.model.findItem(compositeId);\n\t\treturn item && item.activityAction;\n\t}\n\n\tprivate computeSizes(items: ICompositeBarModelItem[]): void {\n\t\tconst size = this.options.compositeSize;\n\t\tif (size) {\n\t\t\titems.forEach(composite => this.compositeSizeInBar.set(composite.id, size));\n\t\t} else {\n\t\t\tif (this.dimension && this.dimension.height !== 0 && this.dimension.width !== 0) {\n\t\t\t\t// Compute sizes only if visible. Otherwise the size measurment would be computed wrongly.\n\t\t\t\tconst currentItemsLength = this.compositeSwitcherBar.items.length;\n\t\t\t\tthis.compositeSwitcherBar.push(items.map(composite => composite.activityAction));\n\t\t\t\titems.map((composite, index) => this.compositeSizeInBar.set(composite.id, this.options.orientation === ActionsOrientation.VERTICAL\n\t\t\t\t\t? this.compositeSwitcherBar.getHeight(currentItemsLength + index)\n\t\t\t\t\t: this.compositeSwitcherBar.getWidth(currentItemsLength + index)\n\t\t\t\t));\n\t\t\t\titems.forEach(() => this.compositeSwitcherBar.pull(this.compositeSwitcherBar.items.length - 1));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateCompositeSwitcher(): void {\n\t\tif (!this.compositeSwitcherBar || !this.dimension) {\n\t\t\treturn; // We have not been rendered yet so there is nothing to update.\n\t\t}\n\n\t\tlet compositesToShow = this.model.visibleItems.filter(item =>\n\t\t\titem.pinned\n\t\t\t|| (this.model.activeItem && this.model.activeItem.id === item.id) /* Show the active composite even if it is not pinned */\n\t\t).map(item => item.id);\n\n\t\t// Ensure we are not showing more composites than we have height for\n\t\tlet overflows = false;\n\t\tlet maxVisible = compositesToShow.length;\n\t\tlet size = 0;\n\t\tconst limit = this.options.orientation === ActionsOrientation.VERTICAL ? this.dimension.height : this.dimension.width;\n\t\tfor (let i = 0; i < compositesToShow.length && size <= limit; i++) {\n\t\t\tsize += this.compositeSizeInBar.get(compositesToShow[i])!;\n\t\t\tif (size > limit) {\n\t\t\t\tmaxVisible = i;\n\t\t\t}\n\t\t}\n\t\toverflows = compositesToShow.length > maxVisible;\n\n\t\tif (overflows) {\n\t\t\tsize -= this.compositeSizeInBar.get(compositesToShow[maxVisible])!;\n\t\t\tcompositesToShow = compositesToShow.slice(0, maxVisible);\n\t\t\tsize += this.options.overflowActionSize;\n\t\t}\n\t\t// Check if we need to make extra room for the overflow action\n\t\tif (size > limit) {\n\t\t\tsize -= this.compositeSizeInBar.get(compositesToShow.pop()!)!;\n\t\t}\n\n\t\t// We always try show the active composite\n\t\tif (this.model.activeItem && compositesToShow.every(compositeId => !!this.model.activeItem && compositeId !== this.model.activeItem.id)) {\n\t\t\tconst removedComposite = compositesToShow.pop()!;\n\t\t\tsize = size - this.compositeSizeInBar.get(removedComposite)! + this.compositeSizeInBar.get(this.model.activeItem.id)!;\n\t\t\tcompositesToShow.push(this.model.activeItem.id);\n\t\t}\n\n\t\t// The active composite might have bigger size than the removed composite, check for overflow again\n\t\tif (size > limit) {\n\t\t\tcompositesToShow.length ? compositesToShow.splice(compositesToShow.length - 2, 1) : compositesToShow.pop();\n\t\t}\n\n\t\tconst visibleCompositesChange = !arrays.equals(compositesToShow, this.visibleComposites);\n\n\t\t// Pull out overflow action if there is a composite change so that we can add it to the end later\n\t\tif (this.compositeOverflowAction && visibleCompositesChange) {\n\t\t\tthis.compositeSwitcherBar.pull(this.compositeSwitcherBar.length() - 1);\n\n\t\t\tthis.compositeOverflowAction.dispose();\n\t\t\tthis.compositeOverflowAction = null;\n\n\t\t\tif (this.compositeOverflowActionItem) {\n\t\t\t\tthis.compositeOverflowActionItem.dispose();\n\t\t\t}\n\t\t\tthis.compositeOverflowActionItem = undefined;\n\t\t}\n\n\t\t// Pull out composites that overflow or got hidden\n\t\tconst compositesToRemove: number[] = [];\n\t\tthis.visibleComposites.forEach((compositeId, index) => {\n\t\t\tif (compositesToShow.indexOf(compositeId) === -1) {\n\t\t\t\tcompositesToRemove.push(index);\n\t\t\t}\n\t\t});\n\t\tcompositesToRemove.reverse().forEach(index => {\n\t\t\tconst actionItem = this.compositeSwitcherBar.items[index];\n\t\t\tthis.compositeSwitcherBar.pull(index);\n\t\t\tactionItem.dispose();\n\t\t\tthis.visibleComposites.splice(index, 1);\n\t\t});\n\n\t\t// Update the positions of the composites\n\t\tcompositesToShow.forEach((compositeId, newIndex) => {\n\t\t\tconst currentIndex = this.visibleComposites.indexOf(compositeId);\n\t\t\tif (newIndex !== currentIndex) {\n\t\t\t\tif (currentIndex !== -1) {\n\t\t\t\t\tconst actionItem = this.compositeSwitcherBar.items[currentIndex];\n\t\t\t\t\tthis.compositeSwitcherBar.pull(currentIndex);\n\t\t\t\t\tactionItem.dispose();\n\t\t\t\t\tthis.visibleComposites.splice(currentIndex, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.compositeSwitcherBar.push(this.model.findItem(compositeId).activityAction, { label: true, icon: this.options.icon, index: newIndex });\n\t\t\t\tthis.visibleComposites.splice(newIndex, 0, compositeId);\n\t\t\t}\n\t\t});\n\n\t\t// Add overflow action as needed\n\t\tif ((visibleCompositesChange && overflows) || this.compositeSwitcherBar.length() === 0) {\n\t\t\tthis.compositeOverflowAction = this.instantiationService.createInstance(CompositeOverflowActivityAction, () => {\n\t\t\t\tif (this.compositeOverflowActionItem) {\n\t\t\t\t\tthis.compositeOverflowActionItem.showMenu();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.compositeOverflowActionItem = this.instantiationService.createInstance(\n\t\t\t\tCompositeOverflowActivityActionItem,\n\t\t\t\tthis.compositeOverflowAction,\n\t\t\t\t() => this.getOverflowingComposites(),\n\t\t\t\t() => this.model.activeItem ? this.model.activeItem.id : undefined,\n\t\t\t\t(compositeId: string) => {\n\t\t\t\t\tconst item = this.model.findItem(compositeId);\n\t\t\t\t\treturn item && item.activity[0] && item.activity[0].badge;\n\t\t\t\t},\n\t\t\t\tthis.options.getOnCompositeClickAction,\n\t\t\t\tthis.options.colors\n\t\t\t);\n\n\t\t\tthis.compositeSwitcherBar.push(this.compositeOverflowAction, { label: false, icon: true });\n\t\t}\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate getOverflowingComposites(): { id: string, name?: string }[] {\n\t\tlet overflowingIds = this.model.visibleItems.filter(item => item.pinned).map(item => item.id);\n\n\t\t// Show the active composite even if it is not pinned\n\t\tif (this.model.activeItem && !this.model.activeItem.pinned) {\n\t\t\toverflowingIds.push(this.model.activeItem.id);\n\t\t}\n\n\t\toverflowingIds = overflowingIds.filter(compositeId => this.visibleComposites.indexOf(compositeId) === -1);\n\t\treturn this.model.visibleItems.filter(c => overflowingIds.indexOf(c.id) !== -1);\n\t}\n\n\tprivate showContextMenu(e: MouseEvent): void {\n\t\tEventHelper.stop(e, true);\n\t\tconst event = new StandardMouseEvent(e);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => { return { x: event.posx, y: event.posy }; },\n\t\t\tgetActions: () => this.getContextMenuActions()\n\t\t});\n\t}\n\n\tprivate getContextMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = this.model.visibleItems\n\t\t\t.map(({ id, name, activityAction }) => (<IAction>{\n\t\t\t\tid,\n\t\t\t\tlabel: name || id,\n\t\t\t\tchecked: this.isPinned(id),\n\t\t\t\tenabled: activityAction.enabled,\n\t\t\t\trun: () => {\n\t\t\t\t\tif (this.isPinned(id)) {\n\t\t\t\t\t\tthis.unpin(id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pin(id, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\tconst otherActions = this.options.getContextMenuActions();\n\t\tif (otherActions.length) {\n\t\t\tactions.push(new Separator());\n\t\t\tactions.push(...otherActions);\n\t\t}\n\t\treturn actions;\n\t}\n}\n\ninterface ICompositeBarModelItem extends ICompositeBarItem {\n\tactivityAction: ActivityAction;\n\tpinnedAction: Action;\n\tactivity: ICompositeActivity[];\n}\n\nclass CompositeBarModel {\n\n\tprivate _items: ICompositeBarModelItem[];\n\tprivate readonly options: ICompositeBarOptions;\n\tactiveItem?: ICompositeBarModelItem;\n\n\tconstructor(\n\t\titems: ICompositeBarItem[],\n\t\toptions: ICompositeBarOptions\n\t) {\n\t\tthis.options = options;\n\t\tthis.setItems(items);\n\t}\n\n\tget items(): ICompositeBarModelItem[] {\n\t\treturn this._items;\n\t}\n\n\tsetItems(items: ICompositeBarItem[]): boolean {\n\t\tconst result: ICompositeBarModelItem[] = [];\n\t\tlet hasChanges: boolean = false;\n\t\tif (!this.items || this.items.length === 0) {\n\t\t\tthis._items = items.map(i => this.createCompositeBarItem(i.id, i.name, i.order, i.pinned, i.visible));\n\t\t\thasChanges = true;\n\t\t} else {\n\t\t\tconst existingItems = this.items;\n\t\t\tfor (let index = 0; index < items.length; index++) {\n\t\t\t\tconst newItem = items[index];\n\t\t\t\tconst existingItem = existingItems.filter(({ id }) => id === newItem.id)[0];\n\t\t\t\tif (existingItem) {\n\t\t\t\t\tif (\n\t\t\t\t\t\texistingItem.pinned !== newItem.pinned ||\n\t\t\t\t\t\tindex !== existingItems.indexOf(existingItem)\n\t\t\t\t\t) {\n\t\t\t\t\t\texistingItem.pinned = newItem.pinned;\n\t\t\t\t\t\tresult.push(existingItem);\n\t\t\t\t\t\thasChanges = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push(existingItem);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(this.createCompositeBarItem(newItem.id, newItem.name, newItem.order, newItem.pinned, newItem.visible));\n\t\t\t\t\thasChanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._items = result;\n\t\t}\n\t\treturn hasChanges;\n\t}\n\n\tget visibleItems(): ICompositeBarModelItem[] {\n\t\treturn this.items.filter(item => item.visible);\n\t}\n\n\tget pinnedItems(): ICompositeBarModelItem[] {\n\t\treturn this.items.filter(item => item.visible && item.pinned);\n\t}\n\n\tprivate createCompositeBarItem(id: string, name: string | undefined, order: number | undefined, pinned: boolean, visible: boolean): ICompositeBarModelItem {\n\t\tconst options = this.options;\n\t\treturn {\n\t\t\tid, name, pinned, order, visible,\n\t\t\tactivity: [],\n\t\t\tget activityAction() {\n\t\t\t\treturn options.getActivityAction(id);\n\t\t\t},\n\t\t\tget pinnedAction() {\n\t\t\t\treturn options.getCompositePinnedAction(id);\n\t\t\t}\n\t\t};\n\t}\n\n\tadd(id: string, name: string, order: number | undefined): boolean {\n\t\tconst item = this.findItem(id);\n\t\tif (item) {\n\t\t\tlet changed = false;\n\t\t\titem.name = name;\n\t\t\tif (!isUndefinedOrNull(order)) {\n\t\t\t\tchanged = item.order !== order;\n\t\t\t\titem.order = order;\n\t\t\t}\n\t\t\tif (!item.visible) {\n\t\t\t\titem.visible = true;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\treturn changed;\n\t\t} else {\n\t\t\tconst item = this.createCompositeBarItem(id, name, order, true, true);\n\t\t\tif (isUndefinedOrNull(order)) {\n\t\t\t\tthis.items.push(item);\n\t\t\t} else {\n\t\t\t\tlet index = 0;\n\t\t\t\twhile (index < this.items.length && typeof this.items[index].order === 'number' && this.items[index].order! < order) {\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tthis.items.splice(index, 0, item);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tremove(id: string): boolean {\n\t\tfor (let index = 0; index < this.items.length; index++) {\n\t\t\tif (this.items[index].id === id) {\n\t\t\t\tthis.items.splice(index, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\thide(id: string): boolean {\n\t\tfor (const item of this.items) {\n\t\t\tif (item.id === id) {\n\t\t\t\tif (item.visible) {\n\t\t\t\t\titem.visible = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tmove(compositeId: string, toCompositeId: string): boolean {\n\n\t\tconst fromIndex = this.findIndex(compositeId);\n\t\tconst toIndex = this.findIndex(toCompositeId);\n\n\t\t// Make sure both items are known to the model\n\t\tif (fromIndex === -1 || toIndex === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst sourceItem = this.items.splice(fromIndex, 1)[0];\n\t\tthis.items.splice(toIndex, 0, sourceItem);\n\n\t\t// Make sure a moved composite gets pinned\n\t\tsourceItem.pinned = true;\n\n\t\treturn true;\n\t}\n\n\tsetPinned(id: string, pinned: boolean): boolean {\n\t\tfor (const item of this.items) {\n\t\t\tif (item.id === id) {\n\t\t\t\tif (item.pinned !== pinned) {\n\t\t\t\t\titem.pinned = pinned;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\taddActivity(id: string, activity: ICompositeActivity): boolean {\n\t\tconst item = this.findItem(id);\n\t\tif (item) {\n\t\t\tconst stack = item.activity;\n\t\t\tfor (let i = 0; i <= stack.length; i++) {\n\t\t\t\tif (i === stack.length) {\n\t\t\t\t\tstack.push(activity);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (stack[i].priority <= activity.priority) {\n\t\t\t\t\tstack.splice(i, 0, activity);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateActivity(id);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tremoveActivity(id: string, activity: ICompositeActivity): boolean {\n\t\tconst item = this.findItem(id);\n\t\tif (item) {\n\t\t\tconst index = item.activity.indexOf(activity);\n\t\t\tif (index !== -1) {\n\t\t\t\titem.activity.splice(index, 1);\n\t\t\t\tthis.updateActivity(id);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tupdateActivity(id: string): void {\n\t\tconst item = this.findItem(id);\n\t\tif (item) {\n\t\t\tif (item.activity.length) {\n\t\t\t\tconst [{ badge, clazz }] = item.activity;\n\t\t\t\titem.activityAction.setBadge(badge, clazz);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem.activityAction.setBadge(undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\tactivate(id: string): boolean {\n\t\tif (!this.activeItem || this.activeItem.id !== id) {\n\t\t\tif (this.activeItem) {\n\t\t\t\tthis.deactivate();\n\t\t\t}\n\t\t\tfor (const item of this.items) {\n\t\t\t\tif (item.id === id) {\n\t\t\t\t\tthis.activeItem = item;\n\t\t\t\t\tthis.activeItem.activityAction.activate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdeactivate(): boolean {\n\t\tif (this.activeItem) {\n\t\t\tthis.activeItem.activityAction.deactivate();\n\t\t\tthis.activeItem = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindItem(id: string): ICompositeBarModelItem {\n\t\treturn this.items.filter(item => item.id === id)[0];\n\t}\n\n\tprivate findIndex(id: string): number {\n\t\tfor (let index = 0; index < this.items.length; index++) {\n\t\t\tif (this.items[index].id === id) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n}\n"]}]}