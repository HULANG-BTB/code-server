{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/peekViewWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/peekViewWidget.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_1 = require(\"vs/base/common/event\");\nvar objects = require(\"vs/base/common/objects\");\nvar strings = require(\"vs/base/common/strings\");\nrequire(\"vs/css!./media/peekViewWidget\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar embeddedCodeEditorWidget_1 = require(\"vs/editor/browser/widget/embeddedCodeEditorWidget\");\nvar zoneWidget_1 = require(\"vs/editor/contrib/zoneWidget/zoneWidget\");\nvar nls = require(\"vs/nls\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nexports.IPeekViewService = instantiation_1.createDecorator('IPeekViewService');\nextensions_1.registerSingleton(exports.IPeekViewService, /** @class */ (function () {\n    function class_1() {\n        this._widgets = new Map();\n    }\n    class_1.prototype.addExclusiveWidget = function (editor, widget) {\n        var _this = this;\n        var existing = this._widgets.get(editor);\n        if (existing) {\n            existing.listener.dispose();\n            existing.widget.dispose();\n        }\n        var remove = function () {\n            var data = _this._widgets.get(editor);\n            if (data && data.widget === widget) {\n                data.listener.dispose();\n                _this._widgets.delete(editor);\n            }\n        };\n        this._widgets.set(editor, { widget: widget, listener: widget.onDidClose(remove) });\n    };\n    return class_1;\n}()));\nvar PeekContext;\n(function (PeekContext) {\n    PeekContext.inPeekEditor = new contextkey_1.RawContextKey('inReferenceSearchEditor', true);\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\n})(PeekContext = exports.PeekContext || (exports.PeekContext = {}));\nfunction getOuterEditor(accessor) {\n    var editor = accessor.get(codeEditorService_1.ICodeEditorService).getFocusedCodeEditor();\n    if (editor instanceof embeddedCodeEditorWidget_1.EmbeddedCodeEditorWidget) {\n        return editor.getParentEditor();\n    }\n    return editor;\n}\nexports.getOuterEditor = getOuterEditor;\nvar defaultOptions = {\n    headerBackgroundColor: color_1.Color.white,\n    primaryHeadingColor: color_1.Color.fromHex('#333333'),\n    secondaryHeadingColor: color_1.Color.fromHex('#6c6c6cb3')\n};\nvar PeekViewWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(PeekViewWidget, _super);\n    function PeekViewWidget(editor, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, editor, options) || this;\n        _this._onDidClose = new event_1.Emitter();\n        objects.mixin(_this.options, defaultOptions, false);\n        return _this;\n    }\n    PeekViewWidget.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._onDidClose.fire(this);\n    };\n    Object.defineProperty(PeekViewWidget.prototype, \"onDidClose\", {\n        get: function () {\n            return this._onDidClose.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PeekViewWidget.prototype.style = function (styles) {\n        var options = this.options;\n        if (styles.headerBackgroundColor) {\n            options.headerBackgroundColor = styles.headerBackgroundColor;\n        }\n        if (styles.primaryHeadingColor) {\n            options.primaryHeadingColor = styles.primaryHeadingColor;\n        }\n        if (styles.secondaryHeadingColor) {\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\n        }\n        _super.prototype.style.call(this, styles);\n    };\n    PeekViewWidget.prototype._applyStyles = function () {\n        _super.prototype._applyStyles.call(this);\n        var options = this.options;\n        if (this._headElement && options.headerBackgroundColor) {\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n        }\n        if (this._primaryHeading && options.primaryHeadingColor) {\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\n        }\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n        }\n        if (this._bodyElement && options.frameColor) {\n            this._bodyElement.style.borderColor = options.frameColor.toString();\n        }\n    };\n    PeekViewWidget.prototype._fillContainer = function (container) {\n        this.setCssClass('peekview-widget');\n        this._headElement = dom.$('.head');\n        this._bodyElement = dom.$('.body');\n        this._fillHead(this._headElement);\n        this._fillBody(this._bodyElement);\n        container.appendChild(this._headElement);\n        container.appendChild(this._bodyElement);\n    };\n    PeekViewWidget.prototype._fillHead = function (container) {\n        var _this = this;\n        var titleElement = dom.$('.peekview-title');\n        dom.append(this._headElement, titleElement);\n        dom.addStandardDisposableListener(titleElement, 'click', function (event) { return _this._onTitleClick(event); });\n        this._headingIcon = dom.$('span');\n        this._primaryHeading = dom.$('span.filename');\n        this._secondaryHeading = dom.$('span.dirname');\n        this._metaHeading = dom.$('span.meta');\n        dom.append(titleElement, this._headingIcon, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n        var actionsContainer = dom.$('.peekview-actions');\n        dom.append(this._headElement, actionsContainer);\n        var actionBarOptions = this._getActionBarOptions();\n        this._actionbarWidget = new actionbar_1.ActionBar(actionsContainer, actionBarOptions);\n        this._disposables.push(this._actionbarWidget);\n        this._actionbarWidget.push(new actions_1.Action('peekview.close', nls.localize('label.close', \"Close\"), 'close-peekview-action', true, function () {\n            _this.dispose();\n            return Promise.resolve();\n        }), { label: false, icon: true });\n    };\n    PeekViewWidget.prototype._getActionBarOptions = function () {\n        return {};\n    };\n    PeekViewWidget.prototype._onTitleClick = function (event) {\n        // implement me\n    };\n    PeekViewWidget.prototype.setTitleIcon = function (iconClassName) {\n        this._headingIcon.className = iconClassName ? \"icon \" + iconClassName : '';\n    };\n    PeekViewWidget.prototype.setTitle = function (primaryHeading, secondaryHeading) {\n        this._primaryHeading.innerHTML = strings.escape(primaryHeading);\n        this._primaryHeading.setAttribute('aria-label', primaryHeading);\n        if (secondaryHeading) {\n            this._secondaryHeading.innerHTML = strings.escape(secondaryHeading);\n        }\n        else {\n            dom.clearNode(this._secondaryHeading);\n        }\n    };\n    PeekViewWidget.prototype.setMetaTitle = function (value) {\n        if (value) {\n            this._metaHeading.innerHTML = strings.escape(value);\n        }\n        else {\n            dom.clearNode(this._metaHeading);\n        }\n    };\n    PeekViewWidget.prototype._doLayout = function (heightInPixel, widthInPixel) {\n        if (!this._isShowing && heightInPixel < 0) {\n            // Looks like the view zone got folded away!\n            this.dispose();\n            return;\n        }\n        var headHeight = Math.ceil(this.editor.getConfiguration().lineHeight * 1.2);\n        var bodyHeight = heightInPixel - (headHeight + 2 /* the border-top/bottom width*/);\n        this._doLayoutHead(headHeight, widthInPixel);\n        this._doLayoutBody(bodyHeight, widthInPixel);\n    };\n    PeekViewWidget.prototype._doLayoutHead = function (heightInPixel, widthInPixel) {\n        this._headElement.style.height = heightInPixel + \"px\";\n        this._headElement.style.lineHeight = this._headElement.style.height;\n    };\n    PeekViewWidget.prototype._doLayoutBody = function (heightInPixel, widthInPixel) {\n        this._bodyElement.style.height = heightInPixel + \"px\";\n    };\n    return PeekViewWidget;\n}(zoneWidget_1.ZoneWidget));\nexports.PeekViewWidget = PeekViewWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/peekViewWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/peekViewWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { ActionBar, IActionBarOptions } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Action } from 'vs/base/common/actions';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as objects from 'vs/base/common/objects';\nimport * as strings from 'vs/base/common/strings';\nimport 'vs/css!./media/peekViewWidget';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { IOptions, IStyles, ZoneWidget } from 'vs/editor/contrib/zoneWidget/zoneWidget';\nimport * as nls from 'vs/nls';\nimport { ContextKeyExpr, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\n\nexport const IPeekViewService = createDecorator<IPeekViewService>('IPeekViewService');\nexport interface IPeekViewService {\n\t_serviceBrand: any;\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void;\n}\n\nregisterSingleton(IPeekViewService, class implements IPeekViewService {\n\t_serviceBrand: any;\n\n\tprivate _widgets = new Map<ICodeEditor, { widget: PeekViewWidget, listener: IDisposable }>();\n\n\taddExclusiveWidget(editor: ICodeEditor, widget: PeekViewWidget): void {\n\t\tconst existing = this._widgets.get(editor);\n\t\tif (existing) {\n\t\t\texisting.listener.dispose();\n\t\t\texisting.widget.dispose();\n\t\t}\n\t\tconst remove = () => {\n\t\t\tconst data = this._widgets.get(editor);\n\t\t\tif (data && data.widget === widget) {\n\t\t\t\tdata.listener.dispose();\n\t\t\t\tthis._widgets.delete(editor);\n\t\t\t}\n\t\t};\n\t\tthis._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\n\t}\n});\n\nexport namespace PeekContext {\n\texport const inPeekEditor = new RawContextKey<boolean>('inReferenceSearchEditor', true);\n\texport const notInPeekEditor: ContextKeyExpr = inPeekEditor.toNegated();\n}\n\nexport function getOuterEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tlet editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\treturn editor.getParentEditor();\n\t}\n\treturn editor;\n}\n\nexport interface IPeekViewStyles extends IStyles {\n\theaderBackgroundColor?: Color;\n\tprimaryHeadingColor?: Color;\n\tsecondaryHeadingColor?: Color;\n}\n\nexport type IPeekViewOptions = IOptions & IPeekViewStyles;\n\nconst defaultOptions: IPeekViewOptions = {\n\theaderBackgroundColor: Color.white,\n\tprimaryHeadingColor: Color.fromHex('#333333'),\n\tsecondaryHeadingColor: Color.fromHex('#6c6c6cb3')\n};\n\nexport abstract class PeekViewWidget extends ZoneWidget {\n\n\tpublic _serviceBrand: any;\n\n\tprivate _onDidClose = new Emitter<PeekViewWidget>();\n\n\tprotected _headElement: HTMLDivElement;\n\tprotected _headingIcon: HTMLElement;\n\tprotected _primaryHeading: HTMLElement;\n\tprotected _secondaryHeading: HTMLElement;\n\tprotected _metaHeading: HTMLElement;\n\tprotected _actionbarWidget: ActionBar;\n\tprotected _bodyElement: HTMLDivElement;\n\n\tconstructor(editor: ICodeEditor, options: IPeekViewOptions = {}) {\n\t\tsuper(editor, options);\n\t\tobjects.mixin(this.options, defaultOptions, false);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._onDidClose.fire(this);\n\t}\n\n\tpublic get onDidClose(): Event<PeekViewWidget> {\n\t\treturn this._onDidClose.event;\n\t}\n\n\tpublic style(styles: IPeekViewStyles): void {\n\t\tlet options = <IPeekViewOptions>this.options;\n\t\tif (styles.headerBackgroundColor) {\n\t\t\toptions.headerBackgroundColor = styles.headerBackgroundColor;\n\t\t}\n\t\tif (styles.primaryHeadingColor) {\n\t\t\toptions.primaryHeadingColor = styles.primaryHeadingColor;\n\t\t}\n\t\tif (styles.secondaryHeadingColor) {\n\t\t\toptions.secondaryHeadingColor = styles.secondaryHeadingColor;\n\t\t}\n\t\tsuper.style(styles);\n\t}\n\n\tprotected _applyStyles(): void {\n\t\tsuper._applyStyles();\n\t\tlet options = <IPeekViewOptions>this.options;\n\t\tif (this._headElement && options.headerBackgroundColor) {\n\t\t\tthis._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\n\t\t}\n\t\tif (this._primaryHeading && options.primaryHeadingColor) {\n\t\t\tthis._primaryHeading.style.color = options.primaryHeadingColor.toString();\n\t\t}\n\t\tif (this._secondaryHeading && options.secondaryHeadingColor) {\n\t\t\tthis._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\n\t\t}\n\t\tif (this._bodyElement && options.frameColor) {\n\t\t\tthis._bodyElement.style.borderColor = options.frameColor.toString();\n\t\t}\n\t}\n\n\tprotected _fillContainer(container: HTMLElement): void {\n\t\tthis.setCssClass('peekview-widget');\n\n\t\tthis._headElement = dom.$('.head');\n\t\tthis._bodyElement = dom.$('.body');\n\n\t\tthis._fillHead(this._headElement);\n\t\tthis._fillBody(this._bodyElement);\n\n\t\tcontainer.appendChild(this._headElement);\n\t\tcontainer.appendChild(this._bodyElement);\n\t}\n\n\tprotected _fillHead(container: HTMLElement): void {\n\t\tconst titleElement = dom.$('.peekview-title');\n\t\tdom.append(this._headElement, titleElement);\n\t\tdom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\n\n\t\tthis._headingIcon = dom.$('span');\n\t\tthis._primaryHeading = dom.$('span.filename');\n\t\tthis._secondaryHeading = dom.$('span.dirname');\n\t\tthis._metaHeading = dom.$('span.meta');\n\t\tdom.append(titleElement, this._headingIcon, this._primaryHeading, this._secondaryHeading, this._metaHeading);\n\n\t\tconst actionsContainer = dom.$('.peekview-actions');\n\t\tdom.append(this._headElement, actionsContainer);\n\n\t\tconst actionBarOptions = this._getActionBarOptions();\n\t\tthis._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\n\t\tthis._disposables.push(this._actionbarWidget);\n\n\t\tthis._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), 'close-peekview-action', true, () => {\n\t\t\tthis.dispose();\n\t\t\treturn Promise.resolve();\n\t\t}), { label: false, icon: true });\n\t}\n\n\tprotected _getActionBarOptions(): IActionBarOptions {\n\t\treturn {};\n\t}\n\n\tprotected _onTitleClick(event: IMouseEvent): void {\n\t\t// implement me\n\t}\n\n\tpublic setTitleIcon(iconClassName: string): void {\n\t\tthis._headingIcon.className = iconClassName ? `icon ${iconClassName}` : '';\n\t}\n\n\tpublic setTitle(primaryHeading: string, secondaryHeading?: string): void {\n\t\tthis._primaryHeading.innerHTML = strings.escape(primaryHeading);\n\t\tthis._primaryHeading.setAttribute('aria-label', primaryHeading);\n\t\tif (secondaryHeading) {\n\t\t\tthis._secondaryHeading.innerHTML = strings.escape(secondaryHeading);\n\t\t} else {\n\t\t\tdom.clearNode(this._secondaryHeading);\n\t\t}\n\t}\n\n\tpublic setMetaTitle(value: string): void {\n\t\tif (value) {\n\t\t\tthis._metaHeading.innerHTML = strings.escape(value);\n\t\t} else {\n\t\t\tdom.clearNode(this._metaHeading);\n\t\t}\n\t}\n\n\tprotected abstract _fillBody(container: HTMLElement): void;\n\n\tpublic _doLayout(heightInPixel: number, widthInPixel: number): void {\n\n\t\tif (!this._isShowing && heightInPixel < 0) {\n\t\t\t// Looks like the view zone got folded away!\n\t\t\tthis.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tconst headHeight = Math.ceil(this.editor.getConfiguration().lineHeight * 1.2);\n\t\tconst bodyHeight = heightInPixel - (headHeight + 2 /* the border-top/bottom width*/);\n\n\t\tthis._doLayoutHead(headHeight, widthInPixel);\n\t\tthis._doLayoutBody(bodyHeight, widthInPixel);\n\t}\n\n\tprotected _doLayoutHead(heightInPixel: number, widthInPixel: number): void {\n\t\tthis._headElement.style.height = `${heightInPixel}px`;\n\t\tthis._headElement.style.lineHeight = this._headElement.style.height;\n\t}\n\n\tprotected _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n\t\tthis._bodyElement.style.height = `${heightInPixel}px`;\n\t}\n}\n"]}]}