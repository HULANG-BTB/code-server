{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/menusExtensionPoint.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/menusExtensionPoint.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls_1 = require(\"vs/nls\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar resources = require(\"vs/base/common/resources\");\nvar collections_1 = require(\"vs/base/common/collections\");\nvar extensionsRegistry_1 = require(\"vs/workbench/services/extensions/common/extensionsRegistry\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar schema;\n(function (schema) {\n    // --- menus contribution point\n    function parseMenuId(value) {\n        switch (value) {\n            case 'commandPalette': return actions_1.MenuId.CommandPalette;\n            case 'touchBar': return actions_1.MenuId.TouchBarContext;\n            case 'editor/title': return actions_1.MenuId.EditorTitle;\n            case 'editor/context': return actions_1.MenuId.EditorContext;\n            case 'explorer/context': return actions_1.MenuId.ExplorerContext;\n            case 'editor/title/context': return actions_1.MenuId.EditorTitleContext;\n            case 'debug/callstack/context': return actions_1.MenuId.DebugCallStackContext;\n            case 'debug/toolbar': return actions_1.MenuId.DebugToolBar;\n            case 'debug/toolBar': return actions_1.MenuId.DebugToolBar;\n            case 'menuBar/file': return actions_1.MenuId.MenubarFileMenu;\n            case 'scm/title': return actions_1.MenuId.SCMTitle;\n            case 'scm/sourceControl': return actions_1.MenuId.SCMSourceControl;\n            case 'scm/resourceGroup/context': return actions_1.MenuId.SCMResourceGroupContext;\n            case 'scm/resourceState/context': return actions_1.MenuId.SCMResourceContext;\n            case 'scm/change/title': return actions_1.MenuId.SCMChangeContext;\n            case 'statusBar/windowIndicator': return actions_1.MenuId.StatusBarWindowIndicatorMenu;\n            case 'view/title': return actions_1.MenuId.ViewTitle;\n            case 'view/item/context': return actions_1.MenuId.ViewItemContext;\n        }\n        return undefined;\n    }\n    schema.parseMenuId = parseMenuId;\n    function isProposedAPI(menuId) {\n        switch (menuId) {\n            case actions_1.MenuId.StatusBarWindowIndicatorMenu:\n            case actions_1.MenuId.MenubarFileMenu:\n                return true;\n        }\n        return false;\n    }\n    schema.isProposedAPI = isProposedAPI;\n    function isValidMenuItems(menu, collector) {\n        if (!Array.isArray(menu)) {\n            collector.error(nls_1.localize('requirearray', \"menu items must be an array\"));\n            return false;\n        }\n        for (var _i = 0, menu_1 = menu; _i < menu_1.length; _i++) {\n            var item = menu_1[_i];\n            if (typeof item.command !== 'string') {\n                collector.error(nls_1.localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n                return false;\n            }\n            if (item.alt && typeof item.alt !== 'string') {\n                collector.error(nls_1.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'alt'));\n                return false;\n            }\n            if (item.when && typeof item.when !== 'string') {\n                collector.error(nls_1.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'when'));\n                return false;\n            }\n            if (item.group && typeof item.group !== 'string') {\n                collector.error(nls_1.localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'group'));\n                return false;\n            }\n        }\n        return true;\n    }\n    schema.isValidMenuItems = isValidMenuItems;\n    var menuItem = {\n        type: 'object',\n        properties: {\n            command: {\n                description: nls_1.localize('vscode.extension.contributes.menuItem.command', 'Identifier of the command to execute. The command must be declared in the \\'commands\\'-section'),\n                type: 'string'\n            },\n            alt: {\n                description: nls_1.localize('vscode.extension.contributes.menuItem.alt', 'Identifier of an alternative command to execute. The command must be declared in the \\'commands\\'-section'),\n                type: 'string'\n            },\n            when: {\n                description: nls_1.localize('vscode.extension.contributes.menuItem.when', 'Condition which must be true to show this item'),\n                type: 'string'\n            },\n            group: {\n                description: nls_1.localize('vscode.extension.contributes.menuItem.group', 'Group into which this command belongs'),\n                type: 'string'\n            }\n        }\n    };\n    schema.menusContribtion = {\n        description: nls_1.localize('vscode.extension.contributes.menus', \"Contributes menu items to the editor\"),\n        type: 'object',\n        properties: {\n            'commandPalette': {\n                description: nls_1.localize('menus.commandPalette', \"The Command Palette\"),\n                type: 'array',\n                items: menuItem\n            },\n            'touchBar': {\n                description: nls_1.localize('menus.touchBar', \"The touch bar (macOS only)\"),\n                type: 'array',\n                items: menuItem\n            },\n            'editor/title': {\n                description: nls_1.localize('menus.editorTitle', \"The editor title menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'editor/context': {\n                description: nls_1.localize('menus.editorContext', \"The editor context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'explorer/context': {\n                description: nls_1.localize('menus.explorerContext', \"The file explorer context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'editor/title/context': {\n                description: nls_1.localize('menus.editorTabContext', \"The editor tabs context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'debug/callstack/context': {\n                description: nls_1.localize('menus.debugCallstackContext', \"The debug callstack context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'debug/toolBar': {\n                description: nls_1.localize('menus.debugToolBar', \"The debug toolbar menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'scm/title': {\n                description: nls_1.localize('menus.scmTitle', \"The Source Control title menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'scm/sourceControl': {\n                description: nls_1.localize('menus.scmSourceControl', \"The Source Control menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'scm/resourceGroup/context': {\n                description: nls_1.localize('menus.resourceGroupContext', \"The Source Control resource group context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'scm/resourceState/context': {\n                description: nls_1.localize('menus.resourceStateContext', \"The Source Control resource state context menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'view/title': {\n                description: nls_1.localize('view.viewTitle', \"The contributed view title menu\"),\n                type: 'array',\n                items: menuItem\n            },\n            'view/item/context': {\n                description: nls_1.localize('view.itemContext', \"The contributed view item context menu\"),\n                type: 'array',\n                items: menuItem\n            }\n        }\n    };\n    function isValidCommand(command, collector) {\n        if (!command) {\n            collector.error(nls_1.localize('nonempty', \"expected non-empty value.\"));\n            return false;\n        }\n        if (strings_1.isFalsyOrWhitespace(command.command)) {\n            collector.error(nls_1.localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n            return false;\n        }\n        if (!isValidLocalizedString(command.title, collector, 'title')) {\n            return false;\n        }\n        if (command.category && !isValidLocalizedString(command.category, collector, 'category')) {\n            return false;\n        }\n        if (!isValidIcon(command.icon, collector)) {\n            return false;\n        }\n        return true;\n    }\n    schema.isValidCommand = isValidCommand;\n    function isValidIcon(icon, collector) {\n        if (typeof icon === 'undefined') {\n            return true;\n        }\n        if (typeof icon === 'string') {\n            return true;\n        }\n        else if (typeof icon.dark === 'string' && typeof icon.light === 'string') {\n            return true;\n        }\n        collector.error(nls_1.localize('opticon', \"property `icon` can be omitted or must be either a string or a literal like `{dark, light}`\"));\n        return false;\n    }\n    function isValidLocalizedString(localized, collector, propertyName) {\n        if (typeof localized === 'undefined') {\n            collector.error(nls_1.localize('requireStringOrObject', \"property `{0}` is mandatory and must be of type `string` or `object`\", propertyName));\n            return false;\n        }\n        else if (typeof localized === 'string' && strings_1.isFalsyOrWhitespace(localized)) {\n            collector.error(nls_1.localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", propertyName));\n            return false;\n        }\n        else if (typeof localized !== 'string' && (strings_1.isFalsyOrWhitespace(localized.original) || strings_1.isFalsyOrWhitespace(localized.value))) {\n            collector.error(nls_1.localize('requirestrings', \"properties `{0}` and `{1}` are mandatory and must be of type `string`\", propertyName + \".value\", propertyName + \".original\"));\n            return false;\n        }\n        return true;\n    }\n    var commandType = {\n        type: 'object',\n        required: ['command', 'title'],\n        properties: {\n            command: {\n                description: nls_1.localize('vscode.extension.contributes.commandType.command', 'Identifier of the command to execute'),\n                type: 'string'\n            },\n            title: {\n                description: nls_1.localize('vscode.extension.contributes.commandType.title', 'Title by which the command is represented in the UI'),\n                type: 'string'\n            },\n            category: {\n                description: nls_1.localize('vscode.extension.contributes.commandType.category', '(Optional) Category string by the command is grouped in the UI'),\n                type: 'string'\n            },\n            icon: {\n                description: nls_1.localize('vscode.extension.contributes.commandType.icon', '(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration'),\n                anyOf: [{\n                        type: 'string'\n                    },\n                    {\n                        type: 'object',\n                        properties: {\n                            light: {\n                                description: nls_1.localize('vscode.extension.contributes.commandType.icon.light', 'Icon path when a light theme is used'),\n                                type: 'string'\n                            },\n                            dark: {\n                                description: nls_1.localize('vscode.extension.contributes.commandType.icon.dark', 'Icon path when a dark theme is used'),\n                                type: 'string'\n                            }\n                        }\n                    }]\n            }\n        }\n    };\n    schema.commandsContribution = {\n        description: nls_1.localize('vscode.extension.contributes.commands', \"Contributes commands to the command palette.\"),\n        oneOf: [\n            commandType,\n            {\n                type: 'array',\n                items: commandType\n            }\n        ]\n    };\n})(schema || (schema = {}));\nvar _commandRegistrations = [];\nextensionsRegistry_1.ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'commands',\n    jsonSchema: schema.commandsContribution\n}).setHandler(function (extensions) {\n    function handleCommand(userFriendlyCommand, extension, disposables) {\n        if (!schema.isValidCommand(userFriendlyCommand, extension.collector)) {\n            return;\n        }\n        var icon = userFriendlyCommand.icon, category = userFriendlyCommand.category, title = userFriendlyCommand.title, command = userFriendlyCommand.command;\n        var absoluteIcon;\n        if (icon) {\n            if (typeof icon === 'string') {\n                absoluteIcon = { dark: resources.joinPath(extension.description.extensionLocation, icon) };\n            }\n            else {\n                absoluteIcon = {\n                    dark: resources.joinPath(extension.description.extensionLocation, icon.dark),\n                    light: resources.joinPath(extension.description.extensionLocation, icon.light)\n                };\n            }\n        }\n        if (actions_1.MenuRegistry.getCommand(command)) {\n            extension.collector.info(nls_1.localize('dup', \"Command `{0}` appears multiple times in the `commands` section.\", userFriendlyCommand.command));\n        }\n        var registration = actions_1.MenuRegistry.addCommand({ id: command, title: title, category: category, iconLocation: absoluteIcon });\n        disposables.push(registration);\n    }\n    // remove all previous command registrations\n    _commandRegistrations = lifecycle_1.dispose(_commandRegistrations);\n    for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var extension = extensions_1[_i];\n        var value = extension.value;\n        if (Array.isArray(value)) {\n            for (var _a = 0, value_1 = value; _a < value_1.length; _a++) {\n                var command = value_1[_a];\n                handleCommand(command, extension, _commandRegistrations);\n            }\n        }\n        else {\n            handleCommand(value, extension, _commandRegistrations);\n        }\n    }\n});\nvar _menuRegistrations = [];\nextensionsRegistry_1.ExtensionsRegistry.registerExtensionPoint({\n    extensionPoint: 'menus',\n    jsonSchema: schema.menusContribtion\n}).setHandler(function (extensions) {\n    // remove all previous menu registrations\n    _menuRegistrations = lifecycle_1.dispose(_menuRegistrations);\n    var _loop_1 = function (extension) {\n        var value = extension.value, collector = extension.collector;\n        collections_1.forEach(value, function (entry) {\n            if (!schema.isValidMenuItems(entry.value, collector)) {\n                return;\n            }\n            var menu = schema.parseMenuId(entry.key);\n            if (typeof menu !== 'number') {\n                collector.warn(nls_1.localize('menuId.invalid', \"`{0}` is not a valid menu identifier\", entry.key));\n                return;\n            }\n            if (schema.isProposedAPI(menu) && !extension.description.enableProposedApi) {\n                collector.error(nls_1.localize('proposedAPI.invalid', \"{0} is a proposed menu identifier and is only available when running out of dev or with the following command line switch: --enable-proposed-api {1}\", entry.key, extension.description.identifier.value));\n                return;\n            }\n            for (var _i = 0, _a = entry.value; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var command = actions_1.MenuRegistry.getCommand(item.command);\n                var alt = item.alt && actions_1.MenuRegistry.getCommand(item.alt);\n                if (!command) {\n                    collector.error(nls_1.localize('missing.command', \"Menu item references a command `{0}` which is not defined in the 'commands' section.\", item.command));\n                    continue;\n                }\n                if (item.alt && !alt) {\n                    collector.warn(nls_1.localize('missing.altCommand', \"Menu item references an alt-command `{0}` which is not defined in the 'commands' section.\", item.alt));\n                }\n                if (item.command === item.alt) {\n                    collector.info(nls_1.localize('dupe.command', \"Menu item references the same command as default and alt-command\"));\n                }\n                var group = void 0;\n                var order = void 0;\n                if (item.group) {\n                    var idx = item.group.lastIndexOf('@');\n                    if (idx > 0) {\n                        group = item.group.substr(0, idx);\n                        order = Number(item.group.substr(idx + 1)) || undefined;\n                    }\n                    else {\n                        group = item.group;\n                    }\n                }\n                var registration = actions_1.MenuRegistry.appendMenuItem(menu, {\n                    command: command,\n                    alt: alt,\n                    group: group,\n                    order: order,\n                    when: contextkey_1.ContextKeyExpr.deserialize(item.when)\n                });\n                _menuRegistrations.push(registration);\n            }\n        });\n    };\n    for (var _i = 0, extensions_2 = extensions; _i < extensions_2.length; _i++) {\n        var extension = extensions_2[_i];\n        _loop_1(extension);\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/menusExtensionPoint.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/menusExtensionPoint.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport * as resources from 'vs/base/common/resources';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { forEach } from 'vs/base/common/collections';\nimport { IExtensionPointUser, ExtensionMessageCollector, ExtensionsRegistry } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { MenuId, MenuRegistry, ILocalizedString, IMenuItem } from 'vs/platform/actions/common/actions';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nnamespace schema {\n\n\t// --- menus contribution point\n\n\texport interface IUserFriendlyMenuItem {\n\t\tcommand: string;\n\t\talt?: string;\n\t\twhen?: string;\n\t\tgroup?: string;\n\t}\n\n\texport function parseMenuId(value: string): MenuId | undefined {\n\t\tswitch (value) {\n\t\t\tcase 'commandPalette': return MenuId.CommandPalette;\n\t\t\tcase 'touchBar': return MenuId.TouchBarContext;\n\t\t\tcase 'editor/title': return MenuId.EditorTitle;\n\t\t\tcase 'editor/context': return MenuId.EditorContext;\n\t\t\tcase 'explorer/context': return MenuId.ExplorerContext;\n\t\t\tcase 'editor/title/context': return MenuId.EditorTitleContext;\n\t\t\tcase 'debug/callstack/context': return MenuId.DebugCallStackContext;\n\t\t\tcase 'debug/toolbar': return MenuId.DebugToolBar;\n\t\t\tcase 'debug/toolBar': return MenuId.DebugToolBar;\n\t\t\tcase 'menuBar/file': return MenuId.MenubarFileMenu;\n\t\t\tcase 'scm/title': return MenuId.SCMTitle;\n\t\t\tcase 'scm/sourceControl': return MenuId.SCMSourceControl;\n\t\t\tcase 'scm/resourceGroup/context': return MenuId.SCMResourceGroupContext;\n\t\t\tcase 'scm/resourceState/context': return MenuId.SCMResourceContext;\n\t\t\tcase 'scm/change/title': return MenuId.SCMChangeContext;\n\t\t\tcase 'statusBar/windowIndicator': return MenuId.StatusBarWindowIndicatorMenu;\n\t\t\tcase 'view/title': return MenuId.ViewTitle;\n\t\t\tcase 'view/item/context': return MenuId.ViewItemContext;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function isProposedAPI(menuId: MenuId): boolean {\n\t\tswitch (menuId) {\n\t\t\tcase MenuId.StatusBarWindowIndicatorMenu:\n\t\t\tcase MenuId.MenubarFileMenu:\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function isValidMenuItems(menu: IUserFriendlyMenuItem[], collector: ExtensionMessageCollector): boolean {\n\t\tif (!Array.isArray(menu)) {\n\t\t\tcollector.error(localize('requirearray', \"menu items must be an array\"));\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let item of menu) {\n\t\t\tif (typeof item.command !== 'string') {\n\t\t\t\tcollector.error(localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (item.alt && typeof item.alt !== 'string') {\n\t\t\t\tcollector.error(localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'alt'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (item.when && typeof item.when !== 'string') {\n\t\t\t\tcollector.error(localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'when'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (item.group && typeof item.group !== 'string') {\n\t\t\t\tcollector.error(localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'group'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst menuItem: IJSONSchema = {\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tcommand: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.menuItem.command', 'Identifier of the command to execute. The command must be declared in the \\'commands\\'-section'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\talt: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.menuItem.alt', 'Identifier of an alternative command to execute. The command must be declared in the \\'commands\\'-section'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\twhen: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.menuItem.when', 'Condition which must be true to show this item'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tgroup: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.menuItem.group', 'Group into which this command belongs'),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t};\n\n\texport const menusContribtion: IJSONSchema = {\n\t\tdescription: localize('vscode.extension.contributes.menus', \"Contributes menu items to the editor\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'commandPalette': {\n\t\t\t\tdescription: localize('menus.commandPalette', \"The Command Palette\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'touchBar': {\n\t\t\t\tdescription: localize('menus.touchBar', \"The touch bar (macOS only)\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'editor/title': {\n\t\t\t\tdescription: localize('menus.editorTitle', \"The editor title menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'editor/context': {\n\t\t\t\tdescription: localize('menus.editorContext', \"The editor context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'explorer/context': {\n\t\t\t\tdescription: localize('menus.explorerContext', \"The file explorer context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'editor/title/context': {\n\t\t\t\tdescription: localize('menus.editorTabContext', \"The editor tabs context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'debug/callstack/context': {\n\t\t\t\tdescription: localize('menus.debugCallstackContext', \"The debug callstack context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'debug/toolBar': {\n\t\t\t\tdescription: localize('menus.debugToolBar', \"The debug toolbar menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'scm/title': {\n\t\t\t\tdescription: localize('menus.scmTitle', \"The Source Control title menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'scm/sourceControl': {\n\t\t\t\tdescription: localize('menus.scmSourceControl', \"The Source Control menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'scm/resourceGroup/context': {\n\t\t\t\tdescription: localize('menus.resourceGroupContext', \"The Source Control resource group context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'scm/resourceState/context': {\n\t\t\t\tdescription: localize('menus.resourceStateContext', \"The Source Control resource state context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'view/title': {\n\t\t\t\tdescription: localize('view.viewTitle', \"The contributed view title menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t},\n\t\t\t'view/item/context': {\n\t\t\t\tdescription: localize('view.itemContext', \"The contributed view item context menu\"),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: menuItem\n\t\t\t}\n\t\t}\n\t};\n\n\t// --- commands contribution point\n\n\texport interface IUserFriendlyCommand {\n\t\tcommand: string;\n\t\ttitle: string | ILocalizedString;\n\t\tcategory?: string | ILocalizedString;\n\t\ticon?: IUserFriendlyIcon;\n\t}\n\n\texport type IUserFriendlyIcon = string | { light: string; dark: string; };\n\n\texport function isValidCommand(command: IUserFriendlyCommand, collector: ExtensionMessageCollector): boolean {\n\t\tif (!command) {\n\t\t\tcollector.error(localize('nonempty', \"expected non-empty value.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (isFalsyOrWhitespace(command.command)) {\n\t\t\tcollector.error(localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!isValidLocalizedString(command.title, collector, 'title')) {\n\t\t\treturn false;\n\t\t}\n\t\tif (command.category && !isValidLocalizedString(command.category, collector, 'category')) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!isValidIcon(command.icon, collector)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction isValidIcon(icon: IUserFriendlyIcon | undefined, collector: ExtensionMessageCollector): boolean {\n\t\tif (typeof icon === 'undefined') {\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof icon === 'string') {\n\t\t\treturn true;\n\t\t} else if (typeof icon.dark === 'string' && typeof icon.light === 'string') {\n\t\t\treturn true;\n\t\t}\n\t\tcollector.error(localize('opticon', \"property `icon` can be omitted or must be either a string or a literal like `{dark, light}`\"));\n\t\treturn false;\n\t}\n\n\tfunction isValidLocalizedString(localized: string | ILocalizedString, collector: ExtensionMessageCollector, propertyName: string): boolean {\n\t\tif (typeof localized === 'undefined') {\n\t\t\tcollector.error(localize('requireStringOrObject', \"property `{0}` is mandatory and must be of type `string` or `object`\", propertyName));\n\t\t\treturn false;\n\t\t} else if (typeof localized === 'string' && isFalsyOrWhitespace(localized)) {\n\t\t\tcollector.error(localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", propertyName));\n\t\t\treturn false;\n\t\t} else if (typeof localized !== 'string' && (isFalsyOrWhitespace(localized.original) || isFalsyOrWhitespace(localized.value))) {\n\t\t\tcollector.error(localize('requirestrings', \"properties `{0}` and `{1}` are mandatory and must be of type `string`\", `${propertyName}.value`, `${propertyName}.original`));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst commandType: IJSONSchema = {\n\t\ttype: 'object',\n\t\trequired: ['command', 'title'],\n\t\tproperties: {\n\t\t\tcommand: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.command', 'Identifier of the command to execute'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.title', 'Title by which the command is represented in the UI'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tcategory: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.category', '(Optional) Category string by the command is grouped in the UI'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\ticon: {\n\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.icon', '(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration'),\n\t\t\t\tanyOf: [{\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.icon.light', 'Icon path when a light theme is used'),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.commandType.icon.dark', 'Icon path when a dark theme is used'),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t};\n\n\texport const commandsContribution: IJSONSchema = {\n\t\tdescription: localize('vscode.extension.contributes.commands', \"Contributes commands to the command palette.\"),\n\t\toneOf: [\n\t\t\tcommandType,\n\t\t\t{\n\t\t\t\ttype: 'array',\n\t\t\t\titems: commandType\n\t\t\t}\n\t\t]\n\t};\n}\n\nlet _commandRegistrations: IDisposable[] = [];\n\nExtensionsRegistry.registerExtensionPoint<schema.IUserFriendlyCommand | schema.IUserFriendlyCommand[]>({\n\textensionPoint: 'commands',\n\tjsonSchema: schema.commandsContribution\n}).setHandler(extensions => {\n\n\tfunction handleCommand(userFriendlyCommand: schema.IUserFriendlyCommand, extension: IExtensionPointUser<any>, disposables: IDisposable[]) {\n\n\t\tif (!schema.isValidCommand(userFriendlyCommand, extension.collector)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { icon, category, title, command } = userFriendlyCommand;\n\n\t\tlet absoluteIcon: { dark: URI; light?: URI; } | undefined;\n\t\tif (icon) {\n\t\t\tif (typeof icon === 'string') {\n\t\t\t\tabsoluteIcon = { dark: resources.joinPath(extension.description.extensionLocation, icon) };\n\t\t\t} else {\n\t\t\t\tabsoluteIcon = {\n\t\t\t\t\tdark: resources.joinPath(extension.description.extensionLocation, icon.dark),\n\t\t\t\t\tlight: resources.joinPath(extension.description.extensionLocation, icon.light)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (MenuRegistry.getCommand(command)) {\n\t\t\textension.collector.info(localize('dup', \"Command `{0}` appears multiple times in the `commands` section.\", userFriendlyCommand.command));\n\t\t}\n\t\tconst registration = MenuRegistry.addCommand({ id: command, title, category, iconLocation: absoluteIcon });\n\t\tdisposables.push(registration);\n\t}\n\n\t// remove all previous command registrations\n\t_commandRegistrations = dispose(_commandRegistrations);\n\n\tfor (let extension of extensions) {\n\t\tconst { value } = extension;\n\t\tif (Array.isArray<schema.IUserFriendlyCommand>(value)) {\n\t\t\tfor (let command of value) {\n\t\t\t\thandleCommand(command, extension, _commandRegistrations);\n\t\t\t}\n\t\t} else {\n\t\t\thandleCommand(value, extension, _commandRegistrations);\n\t\t}\n\t}\n});\n\nlet _menuRegistrations: IDisposable[] = [];\n\nExtensionsRegistry.registerExtensionPoint<{ [loc: string]: schema.IUserFriendlyMenuItem[] }>({\n\textensionPoint: 'menus',\n\tjsonSchema: schema.menusContribtion\n}).setHandler(extensions => {\n\n\t// remove all previous menu registrations\n\t_menuRegistrations = dispose(_menuRegistrations);\n\n\tfor (let extension of extensions) {\n\t\tconst { value, collector } = extension;\n\n\t\tforEach(value, entry => {\n\t\t\tif (!schema.isValidMenuItems(entry.value, collector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst menu = schema.parseMenuId(entry.key);\n\t\t\tif (typeof menu !== 'number') {\n\t\t\t\tcollector.warn(localize('menuId.invalid', \"`{0}` is not a valid menu identifier\", entry.key));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (schema.isProposedAPI(menu) && !extension.description.enableProposedApi) {\n\t\t\t\tcollector.error(localize('proposedAPI.invalid', \"{0} is a proposed menu identifier and is only available when running out of dev or with the following command line switch: --enable-proposed-api {1}\", entry.key, extension.description.identifier.value));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let item of entry.value) {\n\t\t\t\tlet command = MenuRegistry.getCommand(item.command);\n\t\t\t\tlet alt = item.alt && MenuRegistry.getCommand(item.alt);\n\n\t\t\t\tif (!command) {\n\t\t\t\t\tcollector.error(localize('missing.command', \"Menu item references a command `{0}` which is not defined in the 'commands' section.\", item.command));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (item.alt && !alt) {\n\t\t\t\t\tcollector.warn(localize('missing.altCommand', \"Menu item references an alt-command `{0}` which is not defined in the 'commands' section.\", item.alt));\n\t\t\t\t}\n\t\t\t\tif (item.command === item.alt) {\n\t\t\t\t\tcollector.info(localize('dupe.command', \"Menu item references the same command as default and alt-command\"));\n\t\t\t\t}\n\n\t\t\t\tlet group: string | undefined;\n\t\t\t\tlet order: number | undefined;\n\t\t\t\tif (item.group) {\n\t\t\t\t\tconst idx = item.group.lastIndexOf('@');\n\t\t\t\t\tif (idx > 0) {\n\t\t\t\t\t\tgroup = item.group.substr(0, idx);\n\t\t\t\t\t\torder = Number(item.group.substr(idx + 1)) || undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroup = item.group;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst registration = MenuRegistry.appendMenuItem(menu, {\n\t\t\t\t\tcommand,\n\t\t\t\t\talt,\n\t\t\t\t\tgroup,\n\t\t\t\t\torder,\n\t\t\t\t\twhen: ContextKeyExpr.deserialize(item.when)\n\t\t\t\t} as IMenuItem);\n\t\t\t\t_menuRegistrations.push(registration);\n\t\t\t}\n\t\t});\n\t}\n});\n"]}]}