{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/openFileHandler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/openFileHandler.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors = require(\"vs/base/common/errors\");\nvar idGenerator_1 = require(\"vs/base/common/idGenerator\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar network_1 = require(\"vs/base/common/network\");\nvar objects = require(\"vs/base/common/objects\");\nvar path_1 = require(\"vs/base/common/path\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar quickOpenModel_1 = require(\"vs/base/parts/quickopen/browser/quickOpenModel\");\nvar quickOpenScorer_1 = require(\"vs/base/parts/quickopen/common/quickOpenScorer\");\nvar getIconClasses_1 = require(\"vs/editor/common/services/getIconClasses\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar nls = require(\"vs/nls\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar quickopen_1 = require(\"vs/workbench/browser/quickopen\");\nvar queryBuilder_1 = require(\"vs/workbench/contrib/search/common/queryBuilder\");\nvar search_1 = require(\"vs/workbench/contrib/search/common/search\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar search_2 = require(\"vs/workbench/services/search/common/search\");\nvar workbenchThemeService_1 = require(\"vs/workbench/services/themes/common/workbenchThemeService\");\nvar FileQuickOpenModel = /** @class */ (function (_super) {\n    tslib_1.__extends(FileQuickOpenModel, _super);\n    function FileQuickOpenModel(entries, stats) {\n        return _super.call(this, entries) || this;\n    }\n    return FileQuickOpenModel;\n}(quickOpenModel_1.QuickOpenModel));\nexports.FileQuickOpenModel = FileQuickOpenModel;\nvar FileEntry = /** @class */ (function (_super) {\n    tslib_1.__extends(FileEntry, _super);\n    function FileEntry(resource, name, description, icon, editorService, modeService, modelService, configurationService, contextService) {\n        var _this = _super.call(this, editorService) || this;\n        _this.resource = resource;\n        _this.name = name;\n        _this.description = description;\n        _this.icon = icon;\n        _this.modeService = modeService;\n        _this.modelService = modelService;\n        _this.configurationService = configurationService;\n        return _this;\n    }\n    FileEntry.prototype.getLabel = function () {\n        return this.name;\n    };\n    FileEntry.prototype.getLabelOptions = function () {\n        return {\n            extraClasses: getIconClasses_1.getIconClasses(this.modelService, this.modeService, this.resource)\n        };\n    };\n    FileEntry.prototype.getAriaLabel = function () {\n        return nls.localize('entryAriaLabel', \"{0}, file picker\", this.getLabel());\n    };\n    FileEntry.prototype.getDescription = function () {\n        return this.description;\n    };\n    FileEntry.prototype.getIcon = function () {\n        return this.icon;\n    };\n    FileEntry.prototype.getResource = function () {\n        return this.resource;\n    };\n    FileEntry.prototype.setRange = function (range) {\n        this.range = range;\n    };\n    FileEntry.prototype.mergeWithEditorHistory = function () {\n        return true;\n    };\n    FileEntry.prototype.getInput = function () {\n        var input = {\n            resource: this.resource,\n            options: {\n                pinned: !this.configurationService.getValue().workbench.editor.enablePreviewFromQuickOpen,\n                selection: this.range ? this.range : undefined\n            }\n        };\n        return input;\n    };\n    FileEntry = tslib_1.__decorate([\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, modeService_1.IModeService),\n        tslib_1.__param(6, modelService_1.IModelService),\n        tslib_1.__param(7, configuration_1.IConfigurationService),\n        tslib_1.__param(8, workspace_1.IWorkspaceContextService)\n    ], FileEntry);\n    return FileEntry;\n}(quickopen_1.EditorQuickOpenEntry));\nexports.FileEntry = FileEntry;\nvar OpenFileHandler = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenFileHandler, _super);\n    function OpenFileHandler(editorService, instantiationService, themeService, contextService, searchService, environmentService, fileService, labelService) {\n        var _this = _super.call(this) || this;\n        _this.editorService = editorService;\n        _this.instantiationService = instantiationService;\n        _this.themeService = themeService;\n        _this.contextService = contextService;\n        _this.searchService = searchService;\n        _this.environmentService = environmentService;\n        _this.fileService = fileService;\n        _this.labelService = labelService;\n        _this.queryBuilder = _this.instantiationService.createInstance(queryBuilder_1.QueryBuilder);\n        return _this;\n    }\n    OpenFileHandler.prototype.setOptions = function (options) {\n        this.options = options;\n    };\n    OpenFileHandler.prototype.getResults = function (searchValue, token, maxSortedResults) {\n        var query = quickOpenScorer_1.prepareQuery(searchValue);\n        // Respond directly to empty search\n        if (!query.value) {\n            return Promise.resolve(new FileQuickOpenModel([]));\n        }\n        // Do find results\n        return this.doFindResults(query, token, this.cacheState.cacheKey, maxSortedResults);\n    };\n    OpenFileHandler.prototype.doFindResults = function (query, token, cacheKey, maxSortedResults) {\n        var _this = this;\n        var queryOptions = this.doResolveQueryOptions(query, cacheKey, maxSortedResults);\n        var iconClass;\n        if (this.options && this.options.forceUseIcons && !this.themeService.getFileIconTheme()) {\n            iconClass = 'file'; // only use a generic file icon if we are forced to use an icon and have no icon theme set otherwise\n        }\n        return this.getAbsolutePathResult(query).then(function (result) {\n            if (token.isCancellationRequested) {\n                return Promise.resolve({ results: [] });\n            }\n            // If the original search value is an existing file on disk, return it immediately and bypass the search service\n            if (result) {\n                return Promise.resolve({ results: [{ resource: result }] });\n            }\n            return _this.searchService.fileSearch(_this.queryBuilder.file(_this.contextService.getWorkspace().folders.map(function (folder) { return folder.uri; }), queryOptions), token);\n        }).then(function (complete) {\n            var results = [];\n            if (!token.isCancellationRequested) {\n                for (var _i = 0, _a = complete.results; _i < _a.length; _i++) {\n                    var fileMatch = _a[_i];\n                    var label = resources_1.basename(fileMatch.resource);\n                    var description = _this.labelService.getUriLabel(resources_1.dirname(fileMatch.resource), { relative: true });\n                    results.push(_this.instantiationService.createInstance(FileEntry, fileMatch.resource, label, description, iconClass));\n                }\n            }\n            return new FileQuickOpenModel(results, complete.stats);\n        });\n    };\n    OpenFileHandler.prototype.getAbsolutePathResult = function (query) {\n        var detildifiedQuery = labels_1.untildify(query.original, this.environmentService.userHome);\n        if (path_1.isAbsolute(detildifiedQuery)) {\n            var workspaceFolders = this.contextService.getWorkspace().folders;\n            var resource_1 = workspaceFolders[0] && workspaceFolders[0].uri.scheme !== network_1.Schemas.file ?\n                workspaceFolders[0].uri.with({ path: detildifiedQuery }) :\n                uri_1.URI.file(detildifiedQuery);\n            return this.fileService.resolveFile(resource_1).then(function (stat) { return stat.isDirectory ? undefined : resource_1; }, function (error) { return undefined; });\n        }\n        return Promise.resolve(undefined);\n    };\n    OpenFileHandler.prototype.doResolveQueryOptions = function (query, cacheKey, maxSortedResults) {\n        var queryOptions = {\n            _reason: 'openFileHandler',\n            extraFileResources: search_1.getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n            filePattern: query.value,\n            cacheKey: cacheKey\n        };\n        if (typeof maxSortedResults === 'number') {\n            queryOptions.maxResults = maxSortedResults;\n            queryOptions.sortByScore = true;\n        }\n        return queryOptions;\n    };\n    OpenFileHandler.prototype.hasShortResponseTime = function () {\n        return this.isCacheLoaded;\n    };\n    OpenFileHandler.prototype.onOpen = function () {\n        var _this = this;\n        this.cacheState = new CacheState(function (cacheKey) { return _this.cacheQuery(cacheKey); }, function (query) { return _this.searchService.fileSearch(query); }, function (cacheKey) { return _this.searchService.clearCache(cacheKey); }, this.cacheState);\n        this.cacheState.load();\n    };\n    OpenFileHandler.prototype.cacheQuery = function (cacheKey) {\n        var options = {\n            _reason: 'openFileHandler',\n            extraFileResources: search_1.getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n            filePattern: '',\n            cacheKey: cacheKey,\n            maxResults: 0,\n            sortByScore: true,\n        };\n        var folderResources = this.contextService.getWorkspace().folders.map(function (folder) { return folder.uri; });\n        var query = this.queryBuilder.file(folderResources, options);\n        return query;\n    };\n    Object.defineProperty(OpenFileHandler.prototype, \"isCacheLoaded\", {\n        get: function () {\n            return this.cacheState && this.cacheState.isLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OpenFileHandler.prototype.getGroupLabel = function () {\n        return nls.localize('searchResults', \"search results\");\n    };\n    OpenFileHandler.prototype.getAutoFocus = function (searchValue) {\n        return {\n            autoFocusFirstEntry: true\n        };\n    };\n    OpenFileHandler = tslib_1.__decorate([\n        tslib_1.__param(0, editorService_1.IEditorService),\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, workbenchThemeService_1.IWorkbenchThemeService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, search_2.ISearchService),\n        tslib_1.__param(5, environment_1.IEnvironmentService),\n        tslib_1.__param(6, files_1.IFileService),\n        tslib_1.__param(7, label_1.ILabelService)\n    ], OpenFileHandler);\n    return OpenFileHandler;\n}(quickopen_1.QuickOpenHandler));\nexports.OpenFileHandler = OpenFileHandler;\nvar LoadingPhase;\n(function (LoadingPhase) {\n    LoadingPhase[LoadingPhase[\"Created\"] = 1] = \"Created\";\n    LoadingPhase[LoadingPhase[\"Loading\"] = 2] = \"Loading\";\n    LoadingPhase[LoadingPhase[\"Loaded\"] = 3] = \"Loaded\";\n    LoadingPhase[LoadingPhase[\"Errored\"] = 4] = \"Errored\";\n    LoadingPhase[LoadingPhase[\"Disposed\"] = 5] = \"Disposed\";\n})(LoadingPhase || (LoadingPhase = {}));\n/**\n * Exported for testing.\n */\nvar CacheState = /** @class */ (function () {\n    function CacheState(cacheQuery, doLoad, doDispose, previous) {\n        this.doLoad = doLoad;\n        this.doDispose = doDispose;\n        this.previous = previous;\n        this._cacheKey = idGenerator_1.defaultGenerator.nextId();\n        this.loadingPhase = LoadingPhase.Created;\n        this.query = cacheQuery(this._cacheKey);\n        if (this.previous) {\n            var current = objects.assign({}, this.query, { cacheKey: null });\n            var previous_1 = objects.assign({}, this.previous.query, { cacheKey: null });\n            if (!objects.equals(current, previous_1)) {\n                this.previous.dispose();\n                this.previous = null;\n            }\n        }\n    }\n    Object.defineProperty(CacheState.prototype, \"cacheKey\", {\n        get: function () {\n            return this.loadingPhase === LoadingPhase.Loaded || !this.previous ? this._cacheKey : this.previous.cacheKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CacheState.prototype, \"isLoaded\", {\n        get: function () {\n            var isLoaded = this.loadingPhase === LoadingPhase.Loaded;\n            return isLoaded || !this.previous ? isLoaded : this.previous.isLoaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CacheState.prototype, \"isUpdating\", {\n        get: function () {\n            var isUpdating = this.loadingPhase === LoadingPhase.Loading;\n            return isUpdating || !this.previous ? isUpdating : this.previous.isUpdating;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CacheState.prototype.load = function () {\n        var _this = this;\n        if (this.isUpdating) {\n            return;\n        }\n        this.loadingPhase = LoadingPhase.Loading;\n        this.promise = this.doLoad(this.query)\n            .then(function () {\n            _this.loadingPhase = LoadingPhase.Loaded;\n            if (_this.previous) {\n                _this.previous.dispose();\n                _this.previous = null;\n            }\n        }, function (err) {\n            _this.loadingPhase = LoadingPhase.Errored;\n            errors.onUnexpectedError(err);\n        });\n    };\n    CacheState.prototype.dispose = function () {\n        var _this = this;\n        if (this.promise) {\n            this.promise.then(undefined, function () { })\n                .then(function () {\n                _this.loadingPhase = LoadingPhase.Disposed;\n                return _this.doDispose(_this._cacheKey);\n            }).then(undefined, function (err) {\n                errors.onUnexpectedError(err);\n            });\n        }\n        else {\n            this.loadingPhase = LoadingPhase.Disposed;\n        }\n        if (this.previous) {\n            this.previous.dispose();\n            this.previous = null;\n        }\n    };\n    return CacheState;\n}());\nexports.CacheState = CacheState;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/openFileHandler.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/openFileHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IIconLabelValueOptions } from 'vs/base/browser/ui/iconLabel/iconLabel';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport { untildify } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport * as objects from 'vs/base/common/objects';\nimport { isAbsolute } from 'vs/base/common/path';\nimport { basename, dirname } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { QuickOpenEntry, QuickOpenModel } from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport { IAutoFocus } from 'vs/base/parts/quickopen/common/quickOpen';\nimport { IPreparedQuery, prepareQuery } from 'vs/base/parts/quickopen/common/quickOpenScorer';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IResourceInput } from 'vs/platform/editor/common/editor';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { EditorQuickOpenEntry, QuickOpenHandler } from 'vs/workbench/browser/quickopen';\nimport { EditorInput, IWorkbenchEditorConfiguration } from 'vs/workbench/common/editor';\nimport { IFileQueryBuilderOptions, QueryBuilder } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { getOutOfWorkspaceEditorResources } from 'vs/workbench/contrib/search/common/search';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IFileQuery, IFileSearchStats, ISearchComplete, ISearchService } from 'vs/workbench/services/search/common/search';\nimport { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';\n\nexport class FileQuickOpenModel extends QuickOpenModel {\n\n\tconstructor(entries: QuickOpenEntry[], stats?: IFileSearchStats) {\n\t\tsuper(entries);\n\t}\n}\n\nexport class FileEntry extends EditorQuickOpenEntry {\n\tprivate range: IRange | null;\n\n\tconstructor(\n\t\tprivate resource: URI,\n\t\tprivate name: string,\n\t\tprivate description: string,\n\t\tprivate icon: string,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(editorService);\n\t}\n\n\tgetLabel(): string {\n\t\treturn this.name;\n\t}\n\n\tgetLabelOptions(): IIconLabelValueOptions {\n\t\treturn {\n\t\t\textraClasses: getIconClasses(this.modelService, this.modeService, this.resource)\n\t\t};\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, file picker\", this.getLabel());\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tgetIcon(): string {\n\t\treturn this.icon;\n\t}\n\n\tgetResource(): URI {\n\t\treturn this.resource;\n\t}\n\n\tsetRange(range: IRange | null): void {\n\t\tthis.range = range;\n\t}\n\n\tmergeWithEditorHistory(): boolean {\n\t\treturn true;\n\t}\n\n\tgetInput(): IResourceInput | EditorInput {\n\t\tconst input: IResourceInput = {\n\t\t\tresource: this.resource,\n\t\t\toptions: {\n\t\t\t\tpinned: !this.configurationService.getValue<IWorkbenchEditorConfiguration>().workbench.editor.enablePreviewFromQuickOpen,\n\t\t\t\tselection: this.range ? this.range : undefined\n\t\t\t}\n\t\t};\n\n\t\treturn input;\n\t}\n}\n\nexport interface IOpenFileOptions {\n\tforceUseIcons: boolean;\n}\n\nexport class OpenFileHandler extends QuickOpenHandler {\n\tprivate options: IOpenFileOptions;\n\tprivate queryBuilder: QueryBuilder;\n\tprivate cacheState: CacheState;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWorkbenchThemeService private readonly themeService: IWorkbenchThemeService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ISearchService private readonly searchService: ISearchService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\tsuper();\n\n\t\tthis.queryBuilder = this.instantiationService.createInstance(QueryBuilder);\n\t}\n\n\tsetOptions(options: IOpenFileOptions) {\n\t\tthis.options = options;\n\t}\n\n\tgetResults(searchValue: string, token: CancellationToken, maxSortedResults?: number): Promise<FileQuickOpenModel> {\n\t\tconst query = prepareQuery(searchValue);\n\n\t\t// Respond directly to empty search\n\t\tif (!query.value) {\n\t\t\treturn Promise.resolve(new FileQuickOpenModel([]));\n\t\t}\n\n\t\t// Do find results\n\t\treturn this.doFindResults(query, token, this.cacheState.cacheKey, maxSortedResults);\n\t}\n\n\tprivate doFindResults(query: IPreparedQuery, token: CancellationToken, cacheKey?: string, maxSortedResults?: number): Promise<FileQuickOpenModel> {\n\t\tconst queryOptions = this.doResolveQueryOptions(query, cacheKey, maxSortedResults);\n\n\t\tlet iconClass: string;\n\t\tif (this.options && this.options.forceUseIcons && !this.themeService.getFileIconTheme()) {\n\t\t\ticonClass = 'file'; // only use a generic file icon if we are forced to use an icon and have no icon theme set otherwise\n\t\t}\n\n\t\treturn this.getAbsolutePathResult(query).then(result => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn Promise.resolve(<ISearchComplete>{ results: [] });\n\t\t\t}\n\n\t\t\t// If the original search value is an existing file on disk, return it immediately and bypass the search service\n\t\t\tif (result) {\n\t\t\t\treturn Promise.resolve(<ISearchComplete>{ results: [{ resource: result }] });\n\t\t\t}\n\n\t\t\treturn this.searchService.fileSearch(this.queryBuilder.file(this.contextService.getWorkspace().folders.map(folder => folder.uri), queryOptions), token);\n\t\t}).then(complete => {\n\t\t\tconst results: QuickOpenEntry[] = [];\n\n\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\tfor (const fileMatch of complete.results) {\n\n\t\t\t\t\tconst label = basename(fileMatch.resource);\n\t\t\t\t\tconst description = this.labelService.getUriLabel(dirname(fileMatch.resource), { relative: true });\n\n\t\t\t\t\tresults.push(this.instantiationService.createInstance(FileEntry, fileMatch.resource, label, description, iconClass));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new FileQuickOpenModel(results, <IFileSearchStats>complete.stats);\n\t\t});\n\t}\n\n\tprivate getAbsolutePathResult(query: IPreparedQuery): Promise<URI | undefined> {\n\t\tconst detildifiedQuery = untildify(query.original, this.environmentService.userHome);\n\t\tif (isAbsolute(detildifiedQuery)) {\n\t\t\tconst workspaceFolders = this.contextService.getWorkspace().folders;\n\t\t\tconst resource = workspaceFolders[0] && workspaceFolders[0].uri.scheme !== Schemas.file ?\n\t\t\t\tworkspaceFolders[0].uri.with({ path: detildifiedQuery }) :\n\t\t\t\tURI.file(detildifiedQuery);\n\n\t\t\treturn this.fileService.resolveFile(resource).then(\n\t\t\t\tstat => stat.isDirectory ? undefined : resource,\n\t\t\t\terror => undefined);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate doResolveQueryOptions(query: IPreparedQuery, cacheKey?: string, maxSortedResults?: number): IFileQueryBuilderOptions {\n\t\tconst queryOptions: IFileQueryBuilderOptions = {\n\t\t\t_reason: 'openFileHandler',\n\t\t\textraFileResources: getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n\t\t\tfilePattern: query.value,\n\t\t\tcacheKey\n\t\t};\n\n\t\tif (typeof maxSortedResults === 'number') {\n\t\t\tqueryOptions.maxResults = maxSortedResults;\n\t\t\tqueryOptions.sortByScore = true;\n\t\t}\n\n\t\treturn queryOptions;\n\t}\n\n\thasShortResponseTime(): boolean {\n\t\treturn this.isCacheLoaded;\n\t}\n\n\tonOpen(): void {\n\t\tthis.cacheState = new CacheState(cacheKey => this.cacheQuery(cacheKey), query => this.searchService.fileSearch(query), cacheKey => this.searchService.clearCache(cacheKey), this.cacheState);\n\t\tthis.cacheState.load();\n\t}\n\n\tprivate cacheQuery(cacheKey: string): IFileQuery {\n\t\tconst options: IFileQueryBuilderOptions = {\n\t\t\t_reason: 'openFileHandler',\n\t\t\textraFileResources: getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n\t\t\tfilePattern: '',\n\t\t\tcacheKey: cacheKey,\n\t\t\tmaxResults: 0,\n\t\t\tsortByScore: true,\n\t\t};\n\n\t\tconst folderResources = this.contextService.getWorkspace().folders.map(folder => folder.uri);\n\t\tconst query = this.queryBuilder.file(folderResources, options);\n\n\t\treturn query;\n\t}\n\n\tget isCacheLoaded(): boolean {\n\t\treturn this.cacheState && this.cacheState.isLoaded;\n\t}\n\n\tgetGroupLabel(): string {\n\t\treturn nls.localize('searchResults', \"search results\");\n\t}\n\n\tgetAutoFocus(searchValue: string): IAutoFocus {\n\t\treturn {\n\t\t\tautoFocusFirstEntry: true\n\t\t};\n\t}\n}\n\nenum LoadingPhase {\n\tCreated = 1,\n\tLoading,\n\tLoaded,\n\tErrored,\n\tDisposed\n}\n\n/**\n * Exported for testing.\n */\nexport class CacheState {\n\n\tprivate _cacheKey = defaultGenerator.nextId();\n\tprivate query: IFileQuery;\n\n\tprivate loadingPhase = LoadingPhase.Created;\n\tprivate promise: Promise<void>;\n\n\tconstructor(cacheQuery: (cacheKey: string) => IFileQuery, private doLoad: (query: IFileQuery) => Promise<any>, private doDispose: (cacheKey: string) => Promise<void>, private previous: CacheState | null) {\n\t\tthis.query = cacheQuery(this._cacheKey);\n\t\tif (this.previous) {\n\t\t\tconst current = objects.assign({}, this.query, { cacheKey: null });\n\t\t\tconst previous = objects.assign({}, this.previous.query, { cacheKey: null });\n\t\t\tif (!objects.equals(current, previous)) {\n\t\t\t\tthis.previous.dispose();\n\t\t\t\tthis.previous = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tget cacheKey(): string {\n\t\treturn this.loadingPhase === LoadingPhase.Loaded || !this.previous ? this._cacheKey : this.previous.cacheKey;\n\t}\n\n\tget isLoaded(): boolean {\n\t\tconst isLoaded = this.loadingPhase === LoadingPhase.Loaded;\n\t\treturn isLoaded || !this.previous ? isLoaded : this.previous.isLoaded;\n\t}\n\n\tget isUpdating(): boolean {\n\t\tconst isUpdating = this.loadingPhase === LoadingPhase.Loading;\n\t\treturn isUpdating || !this.previous ? isUpdating : this.previous.isUpdating;\n\t}\n\n\tload(): void {\n\t\tif (this.isUpdating) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loadingPhase = LoadingPhase.Loading;\n\t\tthis.promise = this.doLoad(this.query)\n\t\t\t.then(() => {\n\t\t\t\tthis.loadingPhase = LoadingPhase.Loaded;\n\t\t\t\tif (this.previous) {\n\t\t\t\t\tthis.previous.dispose();\n\t\t\t\t\tthis.previous = null;\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tthis.loadingPhase = LoadingPhase.Errored;\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t});\n\t}\n\n\tdispose(): void {\n\t\tif (this.promise) {\n\t\t\tthis.promise.then(undefined, () => { })\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loadingPhase = LoadingPhase.Disposed;\n\t\t\t\t\treturn this.doDispose(this._cacheKey);\n\t\t\t\t}).then(undefined, err => {\n\t\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.loadingPhase = LoadingPhase.Disposed;\n\t\t}\n\t\tif (this.previous) {\n\t\t\tthis.previous.dispose();\n\t\t\tthis.previous = null;\n\t\t}\n\t}\n}\n"]}]}