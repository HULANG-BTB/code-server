{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/views/customView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/views/customView.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/views\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar views_1 = require(\"vs/workbench/common/views\");\nvar viewsViewlet_1 = require(\"vs/workbench/browser/parts/views/viewsViewlet\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar progress_1 = require(\"vs/platform/progress/common/progress\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar workbenchThemeService_1 = require(\"vs/workbench/services/themes/common/workbenchThemeService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar labels_1 = require(\"vs/workbench/browser/labels\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar nls_1 = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar treeDefaults_1 = require(\"vs/base/parts/tree/browser/treeDefaults\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar types_1 = require(\"vs/base/common/types\");\nvar htmlContentRenderer_1 = require(\"vs/base/browser/htmlContentRenderer\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar CustomTreeViewPanel = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomTreeViewPanel, _super);\n    function CustomTreeViewPanel(options, notificationService, keybindingService, contextMenuService, configurationService, viewsService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: options.title }), keybindingService, contextMenuService, configurationService) || this;\n        _this.notificationService = notificationService;\n        var treeView = platform_1.Registry.as(views_1.Extensions.ViewsRegistry).getView(options.id).treeView;\n        _this.treeView = treeView;\n        _this.treeView.onDidChangeActions(function () { return _this.updateActions(); }, _this, _this.disposables);\n        _this.disposables.push(lifecycle_1.toDisposable(function () { return _this.treeView.setVisibility(false); }));\n        _this.disposables.push(_this.onDidChangeBodyVisibility(function () { return _this.updateTreeVisibility(); }));\n        _this.updateTreeVisibility();\n        return _this;\n    }\n    CustomTreeViewPanel.prototype.focus = function () {\n        _super.prototype.focus.call(this);\n        this.treeView.focus();\n    };\n    CustomTreeViewPanel.prototype.renderBody = function (container) {\n        this.treeView.show(container);\n    };\n    CustomTreeViewPanel.prototype.layoutBody = function (size) {\n        this.treeView.layout(size);\n    };\n    CustomTreeViewPanel.prototype.getActions = function () {\n        return this.treeView.getPrimaryActions().slice();\n    };\n    CustomTreeViewPanel.prototype.getSecondaryActions = function () {\n        return this.treeView.getSecondaryActions().slice();\n    };\n    CustomTreeViewPanel.prototype.getActionItem = function (action) {\n        return action instanceof actions_2.MenuItemAction ? new menuItemActionItem_1.ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService) : undefined;\n    };\n    CustomTreeViewPanel.prototype.getOptimalWidth = function () {\n        return this.treeView.getOptimalWidth();\n    };\n    CustomTreeViewPanel.prototype.updateTreeVisibility = function () {\n        this.treeView.setVisibility(this.isBodyVisible());\n    };\n    CustomTreeViewPanel.prototype.dispose = function () {\n        lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    CustomTreeViewPanel = tslib_1.__decorate([\n        tslib_1.__param(1, notification_1.INotificationService),\n        tslib_1.__param(2, keybinding_1.IKeybindingService),\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, configuration_1.IConfigurationService),\n        tslib_1.__param(5, views_1.IViewsService)\n    ], CustomTreeViewPanel);\n    return CustomTreeViewPanel;\n}(panelViewlet_1.ViewletPanel));\nexports.CustomTreeViewPanel = CustomTreeViewPanel;\nvar TitleMenus = /** @class */ (function () {\n    function TitleMenus(id, contextKeyService, menuService) {\n        var _this = this;\n        this.contextKeyService = contextKeyService;\n        this.menuService = menuService;\n        this.disposables = [];\n        this.titleDisposable = lifecycle_1.Disposable.None;\n        this.titleActions = [];\n        this.titleSecondaryActions = [];\n        this._onDidChangeTitle = new event_1.Emitter();\n        if (this.titleDisposable) {\n            this.titleDisposable.dispose();\n            this.titleDisposable = lifecycle_1.Disposable.None;\n        }\n        var _contextKeyService = this.contextKeyService.createScoped();\n        _contextKeyService.createKey('view', id);\n        var titleMenu = this.menuService.createMenu(actions_2.MenuId.ViewTitle, _contextKeyService);\n        var updateActions = function () {\n            _this.titleActions = [];\n            _this.titleSecondaryActions = [];\n            menuItemActionItem_1.fillInActionBarActions(titleMenu, undefined, { primary: _this.titleActions, secondary: _this.titleSecondaryActions });\n            _this._onDidChangeTitle.fire();\n        };\n        var listener = titleMenu.onDidChange(updateActions);\n        updateActions();\n        this.titleDisposable = lifecycle_1.toDisposable(function () {\n            listener.dispose();\n            titleMenu.dispose();\n            _contextKeyService.dispose();\n            _this.titleActions = [];\n            _this.titleSecondaryActions = [];\n        });\n    }\n    Object.defineProperty(TitleMenus.prototype, \"onDidChangeTitle\", {\n        get: function () { return this._onDidChangeTitle.event; },\n        enumerable: true,\n        configurable: true\n    });\n    TitleMenus.prototype.getTitleActions = function () {\n        return this.titleActions;\n    };\n    TitleMenus.prototype.getTitleSecondaryActions = function () {\n        return this.titleSecondaryActions;\n    };\n    TitleMenus.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    TitleMenus = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService),\n        tslib_1.__param(2, actions_2.IMenuService)\n    ], TitleMenus);\n    return TitleMenus;\n}());\nvar Root = /** @class */ (function () {\n    function Root() {\n        this.label = { label: 'root' };\n        this.handle = '0';\n        this.parentHandle = undefined;\n        this.collapsibleState = views_1.TreeItemCollapsibleState.Expanded;\n        this.children = undefined;\n    }\n    return Root;\n}());\nvar noDataProviderMessage = nls_1.localize('no-dataprovider', \"There is no data provider registered that can provide view data.\");\nvar CustomTreeView = /** @class */ (function (_super) {\n    tslib_1.__extends(CustomTreeView, _super);\n    function CustomTreeView(id, viewContainer, extensionService, themeService, instantiationService, commandService, configurationService, progressService) {\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        _this.viewContainer = viewContainer;\n        _this.extensionService = extensionService;\n        _this.themeService = themeService;\n        _this.instantiationService = instantiationService;\n        _this.commandService = commandService;\n        _this.configurationService = configurationService;\n        _this.progressService = progressService;\n        _this.isVisible = false;\n        _this.activated = false;\n        _this._hasIconForParentNode = false;\n        _this._hasIconForLeafNode = false;\n        _this._showCollapseAllAction = false;\n        _this.focused = false;\n        _this.elementsToRefresh = [];\n        _this._onDidExpandItem = _this._register(new event_1.Emitter());\n        _this.onDidExpandItem = _this._onDidExpandItem.event;\n        _this._onDidCollapseItem = _this._register(new event_1.Emitter());\n        _this.onDidCollapseItem = _this._onDidCollapseItem.event;\n        _this._onDidChangeSelection = _this._register(new event_1.Emitter());\n        _this.onDidChangeSelection = _this._onDidChangeSelection.event;\n        _this._onDidChangeVisibility = _this._register(new event_1.Emitter());\n        _this.onDidChangeVisibility = _this._onDidChangeVisibility.event;\n        _this._onDidChangeActions = _this._register(new event_1.Emitter());\n        _this.onDidChangeActions = _this._onDidChangeActions.event;\n        _this.refreshing = false;\n        _this.root = new Root();\n        _this.menus = _this._register(instantiationService.createInstance(TitleMenus, _this.id));\n        _this._register(_this.menus.onDidChangeTitle(function () { return _this._onDidChangeActions.fire(); }));\n        _this._register(_this.themeService.onDidFileIconThemeChange(function () { return _this.doRefresh([_this.root]); } /** soft refresh **/));\n        _this._register(_this.themeService.onThemeChange(function () { return _this.doRefresh([_this.root]); } /** soft refresh **/));\n        _this._register(_this.configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('explorer.decorations')) {\n                _this.doRefresh([_this.root]); /** soft refresh **/\n            }\n        }));\n        _this.markdownRenderer = instantiationService.createInstance(MarkdownRenderer);\n        _this._register(lifecycle_1.toDisposable(function () {\n            if (_this.markdownResult) {\n                _this.markdownResult.dispose();\n            }\n        }));\n        _this._register(platform_1.Registry.as(views_1.Extensions.ViewsRegistry).onDidChangeContainer(function (_a) {\n            var views = _a.views, from = _a.from, to = _a.to;\n            if (from === _this.viewContainer && views.some(function (v) { return v.id === _this.id; })) {\n                _this.viewContainer = to;\n            }\n        }));\n        _this.create();\n        return _this;\n    }\n    Object.defineProperty(CustomTreeView.prototype, \"dataProvider\", {\n        get: function () {\n            return this._dataProvider;\n        },\n        set: function (dataProvider) {\n            if (dataProvider) {\n                this._dataProvider = new /** @class */ (function () {\n                    function class_1() {\n                    }\n                    class_1.prototype.getChildren = function (node) {\n                        if (node && node.children) {\n                            return Promise.resolve(node.children);\n                        }\n                        var promise = node instanceof Root ? dataProvider.getChildren() : dataProvider.getChildren(node);\n                        return promise.then(function (children) {\n                            node.children = children;\n                            return children;\n                        });\n                    };\n                    return class_1;\n                }());\n                this.updateMessage();\n                this.refresh();\n            }\n            else {\n                this._dataProvider = null;\n                this.updateMessage();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CustomTreeView.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        set: function (message) {\n            this._message = message;\n            this.updateMessage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CustomTreeView.prototype, \"hasIconForParentNode\", {\n        get: function () {\n            return this._hasIconForParentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CustomTreeView.prototype, \"hasIconForLeafNode\", {\n        get: function () {\n            return this._hasIconForLeafNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CustomTreeView.prototype, \"visible\", {\n        get: function () {\n            return this.isVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CustomTreeView.prototype, \"showCollapseAllAction\", {\n        get: function () {\n            return this._showCollapseAllAction;\n        },\n        set: function (showCollapseAllAction) {\n            if (this._showCollapseAllAction !== !!showCollapseAllAction) {\n                this._showCollapseAllAction = !!showCollapseAllAction;\n                this._onDidChangeActions.fire();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomTreeView.prototype.getPrimaryActions = function () {\n        var _this = this;\n        if (this.showCollapseAllAction) {\n            var collapseAllAction = new actions_1.Action('vs.tree.collapse', nls_1.localize('collapseAll', \"Collapse All\"), 'monaco-tree-action collapse-all', true, function () { return _this.tree ? new treeDefaults_1.CollapseAllAction(_this.tree, true).run() : Promise.resolve(); });\n            return this.menus.getTitleActions().concat([collapseAllAction]);\n        }\n        else {\n            return this.menus.getTitleActions();\n        }\n    };\n    CustomTreeView.prototype.getSecondaryActions = function () {\n        return this.menus.getTitleSecondaryActions();\n    };\n    CustomTreeView.prototype.setVisibility = function (isVisible) {\n        isVisible = !!isVisible;\n        if (this.isVisible === isVisible) {\n            return;\n        }\n        this.isVisible = isVisible;\n        if (this.isVisible) {\n            this.activate();\n        }\n        if (this.tree) {\n            if (this.isVisible) {\n                DOM.show(this.tree.getHTMLElement());\n            }\n            else {\n                DOM.hide(this.tree.getHTMLElement()); // make sure the tree goes out of the tabindex world by hiding it\n            }\n            if (this.isVisible) {\n                this.tree.onVisible();\n            }\n            else {\n                this.tree.onHidden();\n            }\n            if (this.isVisible && this.elementsToRefresh.length) {\n                this.doRefresh(this.elementsToRefresh);\n                this.elementsToRefresh = [];\n            }\n        }\n        this._onDidChangeVisibility.fire(this.isVisible);\n    };\n    CustomTreeView.prototype.focus = function () {\n        if (this.tree && this.root.children && this.root.children.length > 0) {\n            // Make sure the current selected element is revealed\n            var selectedElement = this.tree.getSelection()[0];\n            if (selectedElement) {\n                this.tree.reveal(selectedElement, 0.5);\n            }\n            // Pass Focus to Viewer\n            this.tree.domFocus();\n        }\n        else {\n            this.domNode.focus();\n        }\n    };\n    CustomTreeView.prototype.show = function (container) {\n        DOM.append(container, this.domNode);\n    };\n    CustomTreeView.prototype.create = function () {\n        var _this = this;\n        this.domNode = DOM.$('.tree-explorer-viewlet-tree-view');\n        this.messageElement = DOM.append(this.domNode, DOM.$('.message'));\n        this.treeContainer = DOM.append(this.domNode, DOM.$('.customview-tree'));\n        var focusTracker = this._register(DOM.trackFocus(this.domNode));\n        this._register(focusTracker.onDidFocus(function () { return _this.focused = true; }));\n        this._register(focusTracker.onDidBlur(function () { return _this.focused = false; }));\n    };\n    CustomTreeView.prototype.createTree = function () {\n        var _this = this;\n        var actionItemProvider = function (action) { return action instanceof actions_2.MenuItemAction ? _this.instantiationService.createInstance(menuItemActionItem_1.ContextAwareMenuItemActionItem, action) : undefined; };\n        var menus = this._register(this.instantiationService.createInstance(TreeMenus, this.id));\n        this.treeLabels = this._register(this.instantiationService.createInstance(labels_1.ResourceLabels, this));\n        var dataSource = this.instantiationService.createInstance(TreeDataSource, this, function (task) { return _this.progressService.withProgress({ location: _this.viewContainer.id }, function () { return task; }); });\n        var renderer = this.instantiationService.createInstance(TreeRenderer, this.id, menus, this.treeLabels, actionItemProvider);\n        var controller = this.instantiationService.createInstance(TreeController, this.id, menus);\n        this.tree = this._register(this.instantiationService.createInstance(viewsViewlet_1.FileIconThemableWorkbenchTree, this.treeContainer, { dataSource: dataSource, renderer: renderer, controller: controller }, {}));\n        this.tree.contextKeyService.createKey(this.id, true);\n        this._register(this.tree.onDidChangeSelection(function (e) { return _this.onSelection(e); }));\n        this._register(this.tree.onDidExpandItem(function (e) { return _this._onDidExpandItem.fire(e.item.getElement()); }));\n        this._register(this.tree.onDidCollapseItem(function (e) { return _this._onDidCollapseItem.fire(e.item.getElement()); }));\n        this._register(this.tree.onDidChangeSelection(function (e) { return _this._onDidChangeSelection.fire(e.selection); }));\n        this.tree.setInput(this.root).then(function () { return _this.updateContentAreas(); });\n    };\n    CustomTreeView.prototype.updateMessage = function () {\n        if (this._message) {\n            this.showMessage(this._message);\n        }\n        else if (!this.dataProvider) {\n            this.showMessage(noDataProviderMessage);\n        }\n        else {\n            this.hideMessage();\n        }\n        this.updateContentAreas();\n    };\n    CustomTreeView.prototype.showMessage = function (message) {\n        DOM.removeClass(this.messageElement, 'hide');\n        if (this._messageValue !== message) {\n            this.resetMessageElement();\n            this._messageValue = message;\n            if (types_1.isString(this._messageValue)) {\n                this.messageElement.textContent = this._messageValue;\n            }\n            else {\n                this.markdownResult = this.markdownRenderer.render(this._messageValue);\n                DOM.append(this.messageElement, this.markdownResult.element);\n            }\n            this.layout(this._size);\n        }\n    };\n    CustomTreeView.prototype.hideMessage = function () {\n        this.resetMessageElement();\n        DOM.addClass(this.messageElement, 'hide');\n        this.layout(this._size);\n    };\n    CustomTreeView.prototype.resetMessageElement = function () {\n        if (this.markdownResult) {\n            this.markdownResult.dispose();\n            this.markdownResult = null;\n        }\n        DOM.clearNode(this.messageElement);\n    };\n    CustomTreeView.prototype.layout = function (size) {\n        if (size) {\n            this._size = size;\n            var treeSize = size - DOM.getTotalHeight(this.messageElement);\n            this.treeContainer.style.height = treeSize + 'px';\n            if (this.tree) {\n                this.tree.layout(treeSize);\n            }\n        }\n    };\n    CustomTreeView.prototype.getOptimalWidth = function () {\n        if (this.tree) {\n            var parentNode = this.tree.getHTMLElement();\n            var childNodes = [].slice.call(parentNode.querySelectorAll('.outline-item-label > a'));\n            return DOM.getLargestChildWidth(parentNode, childNodes);\n        }\n        return 0;\n    };\n    CustomTreeView.prototype.refresh = function (elements) {\n        var _a;\n        if (this.dataProvider && this.tree) {\n            if (!elements) {\n                elements = [this.root];\n                // remove all waiting elements to refresh if root is asked to refresh\n                this.elementsToRefresh = [];\n            }\n            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n                var element = elements_1[_i];\n                element.children = undefined; // reset children\n            }\n            if (this.isVisible) {\n                return this.doRefresh(elements);\n            }\n            else {\n                if (this.elementsToRefresh.length) {\n                    var seen_1 = new Set();\n                    this.elementsToRefresh.forEach(function (element) { return seen_1.add(element.handle); });\n                    for (var _b = 0, elements_2 = elements; _b < elements_2.length; _b++) {\n                        var element = elements_2[_b];\n                        if (!seen_1.has(element.handle)) {\n                            this.elementsToRefresh.push(element);\n                        }\n                    }\n                }\n                else {\n                    (_a = this.elementsToRefresh).push.apply(_a, elements);\n                }\n            }\n        }\n        return Promise.resolve(undefined);\n    };\n    CustomTreeView.prototype.expand = function (itemOrItems) {\n        if (this.tree) {\n            itemOrItems = Array.isArray(itemOrItems) ? itemOrItems : [itemOrItems];\n            return this.tree.expandAll(itemOrItems);\n        }\n        return Promise.resolve(undefined);\n    };\n    CustomTreeView.prototype.setSelection = function (items) {\n        if (this.tree) {\n            this.tree.setSelection(items, { source: 'api' });\n        }\n    };\n    CustomTreeView.prototype.setFocus = function (item) {\n        if (this.tree) {\n            this.focus();\n            this.tree.setFocus(item);\n        }\n    };\n    CustomTreeView.prototype.reveal = function (item) {\n        if (this.tree) {\n            return this.tree.reveal(item);\n        }\n        return Promise.resolve();\n    };\n    CustomTreeView.prototype.activate = function () {\n        var _this = this;\n        if (!this.activated) {\n            this.createTree();\n            this.progressService.withProgress({ location: this.viewContainer.id }, function () { return _this.extensionService.activateByEvent(\"onView:\" + _this.id); })\n                .then(function () { return async_1.timeout(2000); })\n                .then(function () {\n                _this.updateMessage();\n            });\n            this.activated = true;\n        }\n    };\n    CustomTreeView.prototype.doRefresh = function (elements) {\n        var _this = this;\n        if (this.tree) {\n            this.refreshing = true;\n            return Promise.all(elements.map(function (e) { return _this.tree.refresh(e); }))\n                .then(function () {\n                _this.refreshing = false;\n                _this.updateContentAreas();\n                if (_this.focused) {\n                    _this.focus();\n                }\n            });\n        }\n        return Promise.resolve(undefined);\n    };\n    CustomTreeView.prototype.updateContentAreas = function () {\n        var isTreeEmpty = !this.root.children || this.root.children.length === 0;\n        // Hide tree container only when there is a message and tree is empty and not refreshing\n        if (this._messageValue && isTreeEmpty && !this.refreshing) {\n            DOM.addClass(this.treeContainer, 'hide');\n            this.domNode.setAttribute('tabindex', '0');\n        }\n        else {\n            DOM.removeClass(this.treeContainer, 'hide');\n            this.domNode.removeAttribute('tabindex');\n        }\n    };\n    CustomTreeView.prototype.onSelection = function (_a) {\n        var payload = _a.payload;\n        var _b;\n        if (payload && (!!payload.didClickOnTwistie || payload.source === 'api')) {\n            return;\n        }\n        var selection = this.tree.getSelection()[0];\n        if (selection) {\n            if (selection.command) {\n                var originalEvent = payload && payload.originalEvent;\n                var isMouseEvent = payload && payload.origin === 'mouse';\n                var isDoubleClick = isMouseEvent && originalEvent && originalEvent.detail === 2;\n                if (!isMouseEvent || this.tree.openOnSingleClick || isDoubleClick) {\n                    (_b = this.commandService).executeCommand.apply(_b, [selection.command.id].concat((selection.command.arguments || [])));\n                }\n            }\n        }\n    };\n    CustomTreeView = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionService),\n        tslib_1.__param(3, workbenchThemeService_1.IWorkbenchThemeService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, commands_1.ICommandService),\n        tslib_1.__param(6, configuration_1.IConfigurationService),\n        tslib_1.__param(7, progress_1.IProgressService2)\n    ], CustomTreeView);\n    return CustomTreeView;\n}(lifecycle_1.Disposable));\nexports.CustomTreeView = CustomTreeView;\nvar TreeDataSource = /** @class */ (function () {\n    function TreeDataSource(treeView, withProgress) {\n        this.treeView = treeView;\n        this.withProgress = withProgress;\n    }\n    TreeDataSource.prototype.getId = function (tree, node) {\n        return node.handle;\n    };\n    TreeDataSource.prototype.hasChildren = function (tree, node) {\n        return !!this.treeView.dataProvider && node.collapsibleState !== views_1.TreeItemCollapsibleState.None;\n    };\n    TreeDataSource.prototype.getChildren = function (tree, node) {\n        if (this.treeView.dataProvider) {\n            return this.withProgress(this.treeView.dataProvider.getChildren(node));\n        }\n        return Promise.resolve([]);\n    };\n    TreeDataSource.prototype.shouldAutoexpand = function (tree, node) {\n        return node.collapsibleState === views_1.TreeItemCollapsibleState.Expanded;\n    };\n    TreeDataSource.prototype.getParent = function (tree, node) {\n        return Promise.resolve(null);\n    };\n    return TreeDataSource;\n}());\n// todo@joh,sandy make this proper and contributable from extensions\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var findMatchHighlightColor = theme.getColor(colorRegistry_1.editorFindMatchHighlight);\n    if (findMatchHighlightColor) {\n        collector.addRule(\".file-icon-themable-tree .monaco-tree-row .content .monaco-highlighted-label .highlight { color: unset !important; background-color: \" + findMatchHighlightColor + \"; }\");\n        collector.addRule(\".monaco-tl-contents .monaco-highlighted-label .highlight { color: unset !important; background-color: \" + findMatchHighlightColor + \"; }\");\n    }\n    var findMatchHighlightColorBorder = theme.getColor(colorRegistry_1.editorFindMatchHighlightBorder);\n    if (findMatchHighlightColorBorder) {\n        collector.addRule(\".file-icon-themable-tree .monaco-tree-row .content .monaco-highlighted-label .highlight { color: unset !important; border: 1px dotted \" + findMatchHighlightColorBorder + \"; box-sizing: border-box; }\");\n        collector.addRule(\".monaco-tl-contents .monaco-highlighted-label .highlight { color: unset !important; border: 1px dotted \" + findMatchHighlightColorBorder + \"; box-sizing: border-box; }\");\n    }\n    var link = theme.getColor(colorRegistry_1.textLinkForeground);\n    if (link) {\n        collector.addRule(\".tree-explorer-viewlet-tree-view > .message a { color: \" + link + \"; }\");\n    }\n    var focustBorderColor = theme.getColor(colorRegistry_1.focusBorder);\n    if (focustBorderColor) {\n        collector.addRule(\".tree-explorer-viewlet-tree-view > .message a:focus { outline: 1px solid \" + focustBorderColor + \"; outline-offset: -1px; }\");\n    }\n    var codeBackground = theme.getColor(colorRegistry_1.textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(\".tree-explorer-viewlet-tree-view > .message code { background-color: \" + codeBackground + \"; }\");\n    }\n});\nvar TreeRenderer = /** @class */ (function () {\n    function TreeRenderer(treeViewId, menus, labels, actionItemProvider, themeService, configurationService, labelService) {\n        this.treeViewId = treeViewId;\n        this.menus = menus;\n        this.labels = labels;\n        this.actionItemProvider = actionItemProvider;\n        this.themeService = themeService;\n        this.configurationService = configurationService;\n        this.labelService = labelService;\n    }\n    TreeRenderer.prototype.getHeight = function (tree, element) {\n        return TreeRenderer.ITEM_HEIGHT;\n    };\n    TreeRenderer.prototype.getTemplateId = function (tree, element) {\n        return TreeRenderer.TREE_TEMPLATE_ID;\n    };\n    TreeRenderer.prototype.renderTemplate = function (tree, templateId, container) {\n        DOM.addClass(container, 'custom-view-tree-node-item');\n        var icon = DOM.append(container, DOM.$('.custom-view-tree-node-item-icon'));\n        var resourceLabel = this.labels.create(container, { supportHighlights: true, donotSupportOcticons: true });\n        DOM.addClass(resourceLabel.element, 'custom-view-tree-node-item-resourceLabel');\n        var actionsContainer = DOM.append(resourceLabel.element, DOM.$('.actions'));\n        var actionBar = new actionbar_1.ActionBar(actionsContainer, {\n            actionItemProvider: this.actionItemProvider,\n            actionRunner: new MultipleSelectionActionRunner(function () { return tree.getSelection(); })\n        });\n        return { resourceLabel: resourceLabel, icon: icon, actionBar: actionBar, aligner: new Aligner(container, tree, this.themeService) };\n    };\n    TreeRenderer.prototype.renderElement = function (tree, node, templateId, templateData) {\n        var resource = node.resourceUri ? uri_1.URI.revive(node.resourceUri) : null;\n        var treeItemLabel = node.label ? node.label : resource ? { label: resources_1.basename(resource) } : undefined;\n        var description = types_1.isString(node.description) ? node.description : resource && node.description === true ? this.labelService.getUriLabel(resources_1.dirname(resource), { relative: true }) : undefined;\n        var label = treeItemLabel ? treeItemLabel.label : undefined;\n        var matches = treeItemLabel && treeItemLabel.highlights ? treeItemLabel.highlights.map(function (_a) {\n            var start = _a[0], end = _a[1];\n            return ({ start: start, end: end });\n        }) : undefined;\n        var icon = this.themeService.getTheme().type === themeService_1.LIGHT ? node.icon : node.iconDark;\n        var iconUrl = icon ? uri_1.URI.revive(icon) : null;\n        var title = node.tooltip ? node.tooltip : resource ? undefined : label;\n        // reset\n        templateData.actionBar.clear();\n        if (resource || node.themeIcon) {\n            var fileDecorations = this.configurationService.getValue('explorer.decorations');\n            templateData.resourceLabel.setResource({ name: label, description: description, resource: resource ? resource : uri_1.URI.parse('missing:_icon_resource') }, { fileKind: this.getFileKind(node), title: title, hideIcon: !!iconUrl, fileDecorations: fileDecorations, extraClasses: ['custom-view-tree-node-item-resourceLabel'], matches: matches });\n        }\n        else {\n            templateData.resourceLabel.setResource({ name: label, description: description }, { title: title, hideIcon: true, extraClasses: ['custom-view-tree-node-item-resourceLabel'], matches: matches });\n        }\n        templateData.icon.style.backgroundImage = iconUrl ? \"url('\" + iconUrl.toString(true) + \"')\" : '';\n        DOM.toggleClass(templateData.icon, 'custom-view-tree-node-item-icon', !!iconUrl);\n        templateData.actionBar.context = { $treeViewId: this.treeViewId, $treeItemHandle: node.handle };\n        templateData.actionBar.push(this.menus.getResourceActions(node), { icon: true, label: false });\n        templateData.aligner.treeItem = node;\n    };\n    TreeRenderer.prototype.getFileKind = function (node) {\n        if (node.themeIcon) {\n            switch (node.themeIcon.id) {\n                case themeService_1.FileThemeIcon.id:\n                    return files_1.FileKind.FILE;\n                case themeService_1.FolderThemeIcon.id:\n                    return files_1.FileKind.FOLDER;\n            }\n        }\n        return node.collapsibleState === views_1.TreeItemCollapsibleState.Collapsed || node.collapsibleState === views_1.TreeItemCollapsibleState.Expanded ? files_1.FileKind.FOLDER : files_1.FileKind.FILE;\n    };\n    TreeRenderer.prototype.disposeTemplate = function (tree, templateId, templateData) {\n        templateData.resourceLabel.dispose();\n        templateData.actionBar.dispose();\n        templateData.aligner.dispose();\n    };\n    TreeRenderer.ITEM_HEIGHT = 22;\n    TreeRenderer.TREE_TEMPLATE_ID = 'treeExplorer';\n    TreeRenderer = tslib_1.__decorate([\n        tslib_1.__param(4, workbenchThemeService_1.IWorkbenchThemeService),\n        tslib_1.__param(5, configuration_1.IConfigurationService),\n        tslib_1.__param(6, label_1.ILabelService)\n    ], TreeRenderer);\n    return TreeRenderer;\n}());\nvar Aligner = /** @class */ (function (_super) {\n    tslib_1.__extends(Aligner, _super);\n    function Aligner(container, tree, themeService) {\n        var _this = _super.call(this) || this;\n        _this.container = container;\n        _this.tree = tree;\n        _this.themeService = themeService;\n        _this._register(_this.themeService.onDidFileIconThemeChange(function () { return _this.render(); }));\n        return _this;\n    }\n    Object.defineProperty(Aligner.prototype, \"treeItem\", {\n        set: function (treeItem) {\n            this._treeItem = treeItem;\n            this.render();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Aligner.prototype.render = function () {\n        if (this._treeItem) {\n            DOM.toggleClass(this.container, 'align-icon-with-twisty', this.hasToAlignIconWithTwisty());\n        }\n    };\n    Aligner.prototype.hasToAlignIconWithTwisty = function () {\n        var _this = this;\n        if (this._treeItem.collapsibleState !== views_1.TreeItemCollapsibleState.None) {\n            return false;\n        }\n        if (!this.hasIcon(this._treeItem)) {\n            return false;\n        }\n        var parent = this.tree.getNavigator(this._treeItem).parent() || this.tree.getInput();\n        if (this.hasIcon(parent)) {\n            return false;\n        }\n        return !!parent.children && parent.children.every(function (c) { return c.collapsibleState === views_1.TreeItemCollapsibleState.None || !_this.hasIcon(c); });\n    };\n    Aligner.prototype.hasIcon = function (node) {\n        var icon = this.themeService.getTheme().type === themeService_1.LIGHT ? node.icon : node.iconDark;\n        if (icon) {\n            return true;\n        }\n        if (node.resourceUri || node.themeIcon) {\n            var fileIconTheme = this.themeService.getFileIconTheme();\n            var isFolder = node.themeIcon ? node.themeIcon.id === themeService_1.FolderThemeIcon.id : node.collapsibleState !== views_1.TreeItemCollapsibleState.None;\n            if (isFolder) {\n                return fileIconTheme.hasFileIcons && fileIconTheme.hasFolderIcons;\n            }\n            return fileIconTheme.hasFileIcons;\n        }\n        return false;\n    };\n    return Aligner;\n}(lifecycle_1.Disposable));\nvar TreeController = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeController, _super);\n    function TreeController(treeViewId, menus, contextMenuService, _keybindingService, configurationService) {\n        var _this = _super.call(this, {}, configurationService) || this;\n        _this.treeViewId = treeViewId;\n        _this.menus = menus;\n        _this.contextMenuService = contextMenuService;\n        _this._keybindingService = _keybindingService;\n        return _this;\n    }\n    TreeController.prototype.shouldToggleExpansion = function (element, event, origin) {\n        return element.command ? this.isClickOnTwistie(event) : _super.prototype.shouldToggleExpansion.call(this, element, event, origin);\n    };\n    TreeController.prototype.onContextMenu = function (tree, node, event) {\n        var _this = this;\n        event.preventDefault();\n        event.stopPropagation();\n        tree.setFocus(node);\n        var actions = this.menus.getResourceContextActions(node);\n        if (!actions.length) {\n            return true;\n        }\n        var anchor = { x: event.posx, y: event.posy };\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActions: function () { return actions; },\n            getActionItem: function (action) {\n                var keybinding = _this._keybindingService.lookupKeybinding(action.id);\n                if (keybinding) {\n                    return new actionbar_1.ActionItem(action, action, { label: true, keybinding: keybinding.getLabel() });\n                }\n                return undefined;\n            },\n            onHide: function (wasCancelled) {\n                if (wasCancelled) {\n                    tree.domFocus();\n                }\n            },\n            getActionsContext: function () { return ({ $treeViewId: _this.treeViewId, $treeItemHandle: node.handle }); },\n            actionRunner: new MultipleSelectionActionRunner(function () { return tree.getSelection(); })\n        });\n        return true;\n    };\n    TreeController = tslib_1.__decorate([\n        tslib_1.__param(2, contextView_1.IContextMenuService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], TreeController);\n    return TreeController;\n}(listService_1.WorkbenchTreeController));\nvar MultipleSelectionActionRunner = /** @class */ (function (_super) {\n    tslib_1.__extends(MultipleSelectionActionRunner, _super);\n    function MultipleSelectionActionRunner(getSelectedResources) {\n        var _this = _super.call(this) || this;\n        _this.getSelectedResources = getSelectedResources;\n        return _this;\n    }\n    MultipleSelectionActionRunner.prototype.runAction = function (action, context) {\n        if (action instanceof actions_2.MenuItemAction) {\n            var selection = this.getSelectedResources();\n            var filteredSelection = selection.filter(function (s) { return s !== context; });\n            if (selection.length === filteredSelection.length || selection.length === 1) {\n                return action.run(context);\n            }\n            return action.run.apply(action, [context].concat(filteredSelection));\n        }\n        return _super.prototype.runAction.call(this, action, context);\n    };\n    return MultipleSelectionActionRunner;\n}(actions_1.ActionRunner));\nvar TreeMenus = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeMenus, _super);\n    function TreeMenus(id, contextKeyService, menuService, contextMenuService) {\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        _this.contextKeyService = contextKeyService;\n        _this.menuService = menuService;\n        _this.contextMenuService = contextMenuService;\n        return _this;\n    }\n    TreeMenus.prototype.getResourceActions = function (element) {\n        return this.getActions(actions_2.MenuId.ViewItemContext, { key: 'viewItem', value: element.contextValue }).primary;\n    };\n    TreeMenus.prototype.getResourceContextActions = function (element) {\n        return this.getActions(actions_2.MenuId.ViewItemContext, { key: 'viewItem', value: element.contextValue }).secondary;\n    };\n    TreeMenus.prototype.getActions = function (menuId, context) {\n        var contextKeyService = this.contextKeyService.createScoped();\n        contextKeyService.createKey('view', this.id);\n        contextKeyService.createKey(context.key, context.value);\n        var menu = this.menuService.createMenu(menuId, contextKeyService);\n        var primary = [];\n        var secondary = [];\n        var result = { primary: primary, secondary: secondary };\n        menuItemActionItem_1.fillInContextMenuActions(menu, { shouldForwardArgs: true }, result, this.contextMenuService, function (g) { return /^inline/.test(g); });\n        menu.dispose();\n        contextKeyService.dispose();\n        return result;\n    };\n    TreeMenus = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService),\n        tslib_1.__param(2, actions_2.IMenuService),\n        tslib_1.__param(3, contextView_1.IContextMenuService)\n    ], TreeMenus);\n    return TreeMenus;\n}(lifecycle_1.Disposable));\nvar MarkdownRenderer = /** @class */ (function () {\n    function MarkdownRenderer(_openerService) {\n        this._openerService = _openerService;\n    }\n    MarkdownRenderer.prototype.getOptions = function (disposeables) {\n        var _this = this;\n        return {\n            actionHandler: {\n                callback: function (content) {\n                    var uri;\n                    try {\n                        uri = uri_1.URI.parse(content);\n                    }\n                    catch (_a) {\n                        // ignore\n                    }\n                    if (uri && _this._openerService) {\n                        _this._openerService.open(uri).catch(errors_1.onUnexpectedError);\n                    }\n                },\n                disposeables: disposeables\n            }\n        };\n    };\n    MarkdownRenderer.prototype.render = function (markdown) {\n        var disposeables = [];\n        var element = markdown ? htmlContentRenderer_1.renderMarkdown(markdown, this.getOptions(disposeables)) : document.createElement('span');\n        return {\n            element: element,\n            dispose: function () { return lifecycle_1.dispose(disposeables); }\n        };\n    };\n    MarkdownRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, opener_1.IOpenerService)\n    ], MarkdownRenderer);\n    return MarkdownRenderer;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/views/customView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/views/customView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/views';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDisposable, dispose, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction, IActionItem, ActionRunner, Action } from 'vs/base/common/actions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IMenuService, MenuId, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { ContextAwareMenuItemActionItem, fillInActionBarActions, fillInContextMenuActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewsService, ITreeView, ITreeItem, TreeItemCollapsibleState, ITreeViewDataProvider, TreeViewItemHandleArg, ITreeViewDescriptor, IViewsRegistry, ViewContainer, ITreeItemLabel, Extensions } from 'vs/workbench/common/views';\nimport { IViewletViewOptions, FileIconThemableWorkbenchTree } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IProgressService2 } from 'vs/platform/progress/common/progress';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport * as DOM from 'vs/base/browser/dom';\nimport { IDataSource, ITree, IRenderer, ContextMenuEvent } from 'vs/base/parts/tree/browser/tree';\nimport { ResourceLabels, IResourceLabel } from 'vs/workbench/browser/labels';\nimport { ActionBar, IActionItemProvider, ActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { URI } from 'vs/base/common/uri';\nimport { dirname, basename } from 'vs/base/common/resources';\nimport { LIGHT, FileThemeIcon, FolderThemeIcon, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { WorkbenchTreeController } from 'vs/platform/list/browser/listService';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { localize } from 'vs/nls';\nimport { timeout } from 'vs/base/common/async';\nimport { CollapseAllAction } from 'vs/base/parts/tree/browser/treeDefaults';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder, textLinkForeground, textCodeBlockBackground, focusBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { isString } from 'vs/base/common/types';\nimport { renderMarkdown, RenderOptions } from 'vs/base/browser/htmlContentRenderer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { IMarkdownRenderResult } from 'vs/editor/contrib/markdown/markdownRenderer';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class CustomTreeViewPanel extends ViewletPanel {\n\n\tprivate treeView: ITreeView;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IViewsService viewsService: IViewsService,\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: options.title }, keybindingService, contextMenuService, configurationService);\n\t\tconst { treeView } = (<ITreeViewDescriptor>Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).getView(options.id));\n\t\tthis.treeView = treeView;\n\t\tthis.treeView.onDidChangeActions(() => this.updateActions(), this, this.disposables);\n\t\tthis.disposables.push(toDisposable(() => this.treeView.setVisibility(false)));\n\t\tthis.disposables.push(this.onDidChangeBodyVisibility(() => this.updateTreeVisibility()));\n\t\tthis.updateTreeVisibility();\n\t}\n\n\tfocus(): void {\n\t\tsuper.focus();\n\t\tthis.treeView.focus();\n\t}\n\n\trenderBody(container: HTMLElement): void {\n\t\tthis.treeView.show(container);\n\t}\n\n\tlayoutBody(size: number): void {\n\t\tthis.treeView.layout(size);\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn [...this.treeView.getPrimaryActions()];\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\treturn [...this.treeView.getSecondaryActions()];\n\t}\n\n\tgetActionItem(action: IAction): IActionItem | undefined {\n\t\treturn action instanceof MenuItemAction ? new ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService) : undefined;\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn this.treeView.getOptimalWidth();\n\t}\n\n\tprivate updateTreeVisibility(): void {\n\t\tthis.treeView.setVisibility(this.isBodyVisible());\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nclass TitleMenus implements IDisposable {\n\n\tprivate disposables: IDisposable[] = [];\n\tprivate titleDisposable: IDisposable = Disposable.None;\n\tprivate titleActions: IAction[] = [];\n\tprivate titleSecondaryActions: IAction[] = [];\n\n\tprivate _onDidChangeTitle = new Emitter<void>();\n\tget onDidChangeTitle(): Event<void> { return this._onDidChangeTitle.event; }\n\n\tconstructor(\n\t\tid: string,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t) {\n\t\tif (this.titleDisposable) {\n\t\t\tthis.titleDisposable.dispose();\n\t\t\tthis.titleDisposable = Disposable.None;\n\t\t}\n\n\t\tconst _contextKeyService = this.contextKeyService.createScoped();\n\t\t_contextKeyService.createKey('view', id);\n\n\t\tconst titleMenu = this.menuService.createMenu(MenuId.ViewTitle, _contextKeyService);\n\t\tconst updateActions = () => {\n\t\t\tthis.titleActions = [];\n\t\t\tthis.titleSecondaryActions = [];\n\t\t\tfillInActionBarActions(titleMenu, undefined, { primary: this.titleActions, secondary: this.titleSecondaryActions });\n\t\t\tthis._onDidChangeTitle.fire();\n\t\t};\n\n\t\tconst listener = titleMenu.onDidChange(updateActions);\n\t\tupdateActions();\n\n\t\tthis.titleDisposable = toDisposable(() => {\n\t\t\tlistener.dispose();\n\t\t\ttitleMenu.dispose();\n\t\t\t_contextKeyService.dispose();\n\t\t\tthis.titleActions = [];\n\t\t\tthis.titleSecondaryActions = [];\n\t\t});\n\t}\n\n\tgetTitleActions(): IAction[] {\n\t\treturn this.titleActions;\n\t}\n\n\tgetTitleSecondaryActions(): IAction[] {\n\t\treturn this.titleSecondaryActions;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nclass Root implements ITreeItem {\n\tlabel = { label: 'root' };\n\thandle = '0';\n\tparentHandle: string | undefined = undefined;\n\tcollapsibleState = TreeItemCollapsibleState.Expanded;\n\tchildren: ITreeItem[] | undefined = undefined;\n}\n\nconst noDataProviderMessage = localize('no-dataprovider', \"There is no data provider registered that can provide view data.\");\n\nexport class CustomTreeView extends Disposable implements ITreeView {\n\n\tprivate isVisible: boolean = false;\n\tprivate activated: boolean = false;\n\tprivate _hasIconForParentNode = false;\n\tprivate _hasIconForLeafNode = false;\n\tprivate _showCollapseAllAction = false;\n\n\tprivate focused: boolean = false;\n\tprivate domNode: HTMLElement;\n\tprivate treeContainer: HTMLElement;\n\tprivate _messageValue: string | IMarkdownString | undefined;\n\tprivate messageElement: HTMLDivElement;\n\tprivate tree: FileIconThemableWorkbenchTree;\n\tprivate treeLabels: ResourceLabels;\n\tprivate root: ITreeItem;\n\tprivate elementsToRefresh: ITreeItem[] = [];\n\tprivate menus: TitleMenus;\n\n\tprivate markdownRenderer: MarkdownRenderer;\n\tprivate markdownResult: IMarkdownRenderResult | null;\n\n\tprivate readonly _onDidExpandItem: Emitter<ITreeItem> = this._register(new Emitter<ITreeItem>());\n\treadonly onDidExpandItem: Event<ITreeItem> = this._onDidExpandItem.event;\n\n\tprivate readonly _onDidCollapseItem: Emitter<ITreeItem> = this._register(new Emitter<ITreeItem>());\n\treadonly onDidCollapseItem: Event<ITreeItem> = this._onDidCollapseItem.event;\n\n\tprivate _onDidChangeSelection: Emitter<ITreeItem[]> = this._register(new Emitter<ITreeItem[]>());\n\treadonly onDidChangeSelection: Event<ITreeItem[]> = this._onDidChangeSelection.event;\n\n\tprivate readonly _onDidChangeVisibility: Emitter<boolean> = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility: Event<boolean> = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDidChangeActions: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeActions: Event<void> = this._onDidChangeActions.event;\n\n\tconstructor(\n\t\tprivate id: string,\n\t\tprivate viewContainer: ViewContainer,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly themeService: IWorkbenchThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IProgressService2 private readonly progressService: IProgressService2\n\t) {\n\t\tsuper();\n\t\tthis.root = new Root();\n\t\tthis.menus = this._register(instantiationService.createInstance(TitleMenus, this.id));\n\t\tthis._register(this.menus.onDidChangeTitle(() => this._onDidChangeActions.fire()));\n\t\tthis._register(this.themeService.onDidFileIconThemeChange(() => this.doRefresh([this.root]) /** soft refresh **/));\n\t\tthis._register(this.themeService.onThemeChange(() => this.doRefresh([this.root]) /** soft refresh **/));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('explorer.decorations')) {\n\t\t\t\tthis.doRefresh([this.root]); /** soft refresh **/\n\t\t\t}\n\t\t}));\n\t\tthis.markdownRenderer = instantiationService.createInstance(MarkdownRenderer);\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.markdownResult) {\n\t\t\t\tthis.markdownResult.dispose();\n\t\t\t}\n\t\t}));\n\t\tthis._register(Registry.as<IViewsRegistry>(Extensions.ViewsRegistry).onDidChangeContainer(({ views, from, to }) => {\n\t\t\tif (from === this.viewContainer && views.some(v => v.id === this.id)) {\n\t\t\t\tthis.viewContainer = to;\n\t\t\t}\n\t\t}));\n\t\tthis.create();\n\t}\n\n\tprivate _dataProvider: ITreeViewDataProvider | null;\n\tget dataProvider(): ITreeViewDataProvider | null {\n\t\treturn this._dataProvider;\n\t}\n\n\tset dataProvider(dataProvider: ITreeViewDataProvider | null) {\n\t\tif (dataProvider) {\n\t\t\tthis._dataProvider = new class implements ITreeViewDataProvider {\n\t\t\t\tgetChildren(node: ITreeItem): Promise<ITreeItem[]> {\n\t\t\t\t\tif (node && node.children) {\n\t\t\t\t\t\treturn Promise.resolve(node.children);\n\t\t\t\t\t}\n\t\t\t\t\tconst promise = node instanceof Root ? dataProvider.getChildren() : dataProvider.getChildren(node);\n\t\t\t\t\treturn promise.then(children => {\n\t\t\t\t\t\tnode.children = children;\n\t\t\t\t\t\treturn children;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.updateMessage();\n\t\t\tthis.refresh();\n\t\t} else {\n\t\t\tthis._dataProvider = null;\n\t\t\tthis.updateMessage();\n\t\t}\n\t}\n\n\tprivate _message: string | IMarkdownString | undefined;\n\tget message(): string | IMarkdownString | undefined {\n\t\treturn this._message;\n\t}\n\n\tset message(message: string | IMarkdownString | undefined) {\n\t\tthis._message = message;\n\t\tthis.updateMessage();\n\t}\n\n\tget hasIconForParentNode(): boolean {\n\t\treturn this._hasIconForParentNode;\n\t}\n\n\tget hasIconForLeafNode(): boolean {\n\t\treturn this._hasIconForLeafNode;\n\t}\n\n\tget visible(): boolean {\n\t\treturn this.isVisible;\n\t}\n\n\tget showCollapseAllAction(): boolean {\n\t\treturn this._showCollapseAllAction;\n\t}\n\n\tset showCollapseAllAction(showCollapseAllAction: boolean) {\n\t\tif (this._showCollapseAllAction !== !!showCollapseAllAction) {\n\t\t\tthis._showCollapseAllAction = !!showCollapseAllAction;\n\t\t\tthis._onDidChangeActions.fire();\n\t\t}\n\t}\n\n\tgetPrimaryActions(): IAction[] {\n\t\tif (this.showCollapseAllAction) {\n\t\t\tconst collapseAllAction = new Action('vs.tree.collapse', localize('collapseAll', \"Collapse All\"), 'monaco-tree-action collapse-all', true, () => this.tree ? new CollapseAllAction(this.tree, true).run() : Promise.resolve());\n\t\t\treturn [...this.menus.getTitleActions(), collapseAllAction];\n\t\t} else {\n\t\t\treturn this.menus.getTitleActions();\n\t\t}\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\treturn this.menus.getTitleSecondaryActions();\n\t}\n\n\tsetVisibility(isVisible: boolean): void {\n\t\tisVisible = !!isVisible;\n\t\tif (this.isVisible === isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isVisible = isVisible;\n\t\tif (this.isVisible) {\n\t\t\tthis.activate();\n\t\t}\n\n\t\tif (this.tree) {\n\t\t\tif (this.isVisible) {\n\t\t\t\tDOM.show(this.tree.getHTMLElement());\n\t\t\t} else {\n\t\t\t\tDOM.hide(this.tree.getHTMLElement()); // make sure the tree goes out of the tabindex world by hiding it\n\t\t\t}\n\n\t\t\tif (this.isVisible) {\n\t\t\t\tthis.tree.onVisible();\n\t\t\t} else {\n\t\t\t\tthis.tree.onHidden();\n\t\t\t}\n\n\t\t\tif (this.isVisible && this.elementsToRefresh.length) {\n\t\t\t\tthis.doRefresh(this.elementsToRefresh);\n\t\t\t\tthis.elementsToRefresh = [];\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeVisibility.fire(this.isVisible);\n\t}\n\n\tfocus(): void {\n\t\tif (this.tree && this.root.children && this.root.children.length > 0) {\n\t\t\t// Make sure the current selected element is revealed\n\t\t\tconst selectedElement = this.tree.getSelection()[0];\n\t\t\tif (selectedElement) {\n\t\t\t\tthis.tree.reveal(selectedElement, 0.5);\n\t\t\t}\n\n\t\t\t// Pass Focus to Viewer\n\t\t\tthis.tree.domFocus();\n\t\t} else {\n\t\t\tthis.domNode.focus();\n\t\t}\n\t}\n\n\tshow(container: HTMLElement): void {\n\t\tDOM.append(container, this.domNode);\n\t}\n\n\tprivate create() {\n\t\tthis.domNode = DOM.$('.tree-explorer-viewlet-tree-view');\n\t\tthis.messageElement = DOM.append(this.domNode, DOM.$('.message'));\n\t\tthis.treeContainer = DOM.append(this.domNode, DOM.$('.customview-tree'));\n\t\tconst focusTracker = this._register(DOM.trackFocus(this.domNode));\n\t\tthis._register(focusTracker.onDidFocus(() => this.focused = true));\n\t\tthis._register(focusTracker.onDidBlur(() => this.focused = false));\n\t}\n\n\tprivate createTree() {\n\t\tconst actionItemProvider = (action: IAction) => action instanceof MenuItemAction ? this.instantiationService.createInstance(ContextAwareMenuItemActionItem, action) : undefined;\n\t\tconst menus = this._register(this.instantiationService.createInstance(TreeMenus, this.id));\n\t\tthis.treeLabels = this._register(this.instantiationService.createInstance(ResourceLabels, this));\n\t\tconst dataSource = this.instantiationService.createInstance(TreeDataSource, this, <T>(task: Promise<T>) => this.progressService.withProgress({ location: this.viewContainer.id }, () => task));\n\t\tconst renderer = this.instantiationService.createInstance(TreeRenderer, this.id, menus, this.treeLabels, actionItemProvider);\n\t\tconst controller = this.instantiationService.createInstance(TreeController, this.id, menus);\n\t\tthis.tree = this._register(this.instantiationService.createInstance(FileIconThemableWorkbenchTree, this.treeContainer, { dataSource, renderer, controller }, {}));\n\t\tthis.tree.contextKeyService.createKey<boolean>(this.id, true);\n\t\tthis._register(this.tree.onDidChangeSelection(e => this.onSelection(e)));\n\t\tthis._register(this.tree.onDidExpandItem(e => this._onDidExpandItem.fire(e.item.getElement())));\n\t\tthis._register(this.tree.onDidCollapseItem(e => this._onDidCollapseItem.fire(e.item.getElement())));\n\t\tthis._register(this.tree.onDidChangeSelection(e => this._onDidChangeSelection.fire(e.selection)));\n\t\tthis.tree.setInput(this.root).then(() => this.updateContentAreas());\n\t}\n\n\tprivate updateMessage(): void {\n\t\tif (this._message) {\n\t\t\tthis.showMessage(this._message);\n\t\t} else if (!this.dataProvider) {\n\t\t\tthis.showMessage(noDataProviderMessage);\n\t\t} else {\n\t\t\tthis.hideMessage();\n\t\t}\n\t\tthis.updateContentAreas();\n\t}\n\n\tprivate showMessage(message: string | IMarkdownString): void {\n\t\tDOM.removeClass(this.messageElement, 'hide');\n\t\tif (this._messageValue !== message) {\n\t\t\tthis.resetMessageElement();\n\t\t\tthis._messageValue = message;\n\t\t\tif (isString(this._messageValue)) {\n\t\t\t\tthis.messageElement.textContent = this._messageValue;\n\t\t\t} else {\n\t\t\t\tthis.markdownResult = this.markdownRenderer.render(this._messageValue);\n\t\t\t\tDOM.append(this.messageElement, this.markdownResult.element);\n\t\t\t}\n\t\t\tthis.layout(this._size);\n\t\t}\n\t}\n\n\tprivate hideMessage(): void {\n\t\tthis.resetMessageElement();\n\t\tDOM.addClass(this.messageElement, 'hide');\n\t\tthis.layout(this._size);\n\t}\n\n\tprivate resetMessageElement(): void {\n\t\tif (this.markdownResult) {\n\t\t\tthis.markdownResult.dispose();\n\t\t\tthis.markdownResult = null;\n\t\t}\n\t\tDOM.clearNode(this.messageElement);\n\t}\n\n\tprivate _size: number;\n\tlayout(size: number) {\n\t\tif (size) {\n\t\t\tthis._size = size;\n\t\t\tconst treeSize = size - DOM.getTotalHeight(this.messageElement);\n\t\t\tthis.treeContainer.style.height = treeSize + 'px';\n\t\t\tif (this.tree) {\n\t\t\t\tthis.tree.layout(treeSize);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetOptimalWidth(): number {\n\t\tif (this.tree) {\n\t\t\tconst parentNode = this.tree.getHTMLElement();\n\t\t\tconst childNodes = ([] as HTMLElement[]).slice.call(parentNode.querySelectorAll('.outline-item-label > a'));\n\t\t\treturn DOM.getLargestChildWidth(parentNode, childNodes);\n\t\t}\n\t\treturn 0;\n\t}\n\n\trefresh(elements?: ITreeItem[]): Promise<void> {\n\t\tif (this.dataProvider && this.tree) {\n\t\t\tif (!elements) {\n\t\t\t\telements = [this.root];\n\t\t\t\t// remove all waiting elements to refresh if root is asked to refresh\n\t\t\t\tthis.elementsToRefresh = [];\n\t\t\t}\n\t\t\tfor (const element of elements) {\n\t\t\t\telement.children = undefined; // reset children\n\t\t\t}\n\t\t\tif (this.isVisible) {\n\t\t\t\treturn this.doRefresh(elements);\n\t\t\t} else {\n\t\t\t\tif (this.elementsToRefresh.length) {\n\t\t\t\t\tconst seen: Set<string> = new Set<string>();\n\t\t\t\t\tthis.elementsToRefresh.forEach(element => seen.add(element.handle));\n\t\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t\tif (!seen.has(element.handle)) {\n\t\t\t\t\t\t\tthis.elementsToRefresh.push(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.elementsToRefresh.push(...elements);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\texpand(itemOrItems: ITreeItem | ITreeItem[]): Promise<void> {\n\t\tif (this.tree) {\n\t\t\titemOrItems = Array.isArray(itemOrItems) ? itemOrItems : [itemOrItems];\n\t\t\treturn this.tree.expandAll(itemOrItems);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tsetSelection(items: ITreeItem[]): void {\n\t\tif (this.tree) {\n\t\t\tthis.tree.setSelection(items, { source: 'api' });\n\t\t}\n\t}\n\n\tsetFocus(item: ITreeItem): void {\n\t\tif (this.tree) {\n\t\t\tthis.focus();\n\t\t\tthis.tree.setFocus(item);\n\t\t}\n\t}\n\n\treveal(item: ITreeItem): Promise<void> {\n\t\tif (this.tree) {\n\t\t\treturn this.tree.reveal(item);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate activate() {\n\t\tif (!this.activated) {\n\t\t\tthis.createTree();\n\t\t\tthis.progressService.withProgress({ location: this.viewContainer.id }, () => this.extensionService.activateByEvent(`onView:${this.id}`))\n\t\t\t\t.then(() => timeout(2000))\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.updateMessage();\n\t\t\t\t});\n\t\t\tthis.activated = true;\n\t\t}\n\t}\n\n\tprivate refreshing: boolean = false;\n\tprivate doRefresh(elements: ITreeItem[]): Promise<void> {\n\t\tif (this.tree) {\n\t\t\tthis.refreshing = true;\n\t\t\treturn Promise.all(elements.map(e => this.tree.refresh(e)))\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.refreshing = false;\n\t\t\t\t\tthis.updateContentAreas();\n\t\t\t\t\tif (this.focused) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate updateContentAreas(): void {\n\t\tconst isTreeEmpty = !this.root.children || this.root.children.length === 0;\n\t\t// Hide tree container only when there is a message and tree is empty and not refreshing\n\t\tif (this._messageValue && isTreeEmpty && !this.refreshing) {\n\t\t\tDOM.addClass(this.treeContainer, 'hide');\n\t\t\tthis.domNode.setAttribute('tabindex', '0');\n\t\t} else {\n\t\t\tDOM.removeClass(this.treeContainer, 'hide');\n\t\t\tthis.domNode.removeAttribute('tabindex');\n\t\t}\n\t}\n\n\tprivate onSelection({ payload }: any): void {\n\t\tif (payload && (!!payload.didClickOnTwistie || payload.source === 'api')) {\n\t\t\treturn;\n\t\t}\n\t\tconst selection: ITreeItem = this.tree.getSelection()[0];\n\t\tif (selection) {\n\t\t\tif (selection.command) {\n\t\t\t\tconst originalEvent: KeyboardEvent | MouseEvent = payload && payload.originalEvent;\n\t\t\t\tconst isMouseEvent = payload && payload.origin === 'mouse';\n\t\t\t\tconst isDoubleClick = isMouseEvent && originalEvent && originalEvent.detail === 2;\n\n\t\t\t\tif (!isMouseEvent || this.tree.openOnSingleClick || isDoubleClick) {\n\t\t\t\t\tthis.commandService.executeCommand(selection.command.id, ...(selection.command.arguments || []));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass TreeDataSource implements IDataSource {\n\n\tconstructor(\n\t\tprivate treeView: ITreeView,\n\t\tprivate withProgress: <T>(task: Promise<T>) => Promise<T>\n\t) {\n\t}\n\n\tgetId(tree: ITree, node: ITreeItem): string {\n\t\treturn node.handle;\n\t}\n\n\thasChildren(tree: ITree, node: ITreeItem): boolean {\n\t\treturn !!this.treeView.dataProvider && node.collapsibleState !== TreeItemCollapsibleState.None;\n\t}\n\n\tgetChildren(tree: ITree, node: ITreeItem): Promise<any[]> {\n\t\tif (this.treeView.dataProvider) {\n\t\t\treturn this.withProgress(this.treeView.dataProvider.getChildren(node));\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\tshouldAutoexpand(tree: ITree, node: ITreeItem): boolean {\n\t\treturn node.collapsibleState === TreeItemCollapsibleState.Expanded;\n\t}\n\n\tgetParent(tree: ITree, node: any): Promise<any> {\n\t\treturn Promise.resolve(null);\n\t}\n}\n\ninterface ITreeExplorerTemplateData {\n\tresourceLabel: IResourceLabel;\n\ticon: HTMLElement;\n\tactionBar: ActionBar;\n\taligner: Aligner;\n}\n\n// todo@joh,sandy make this proper and contributable from extensions\nregisterThemingParticipant((theme, collector) => {\n\n\tconst findMatchHighlightColor = theme.getColor(editorFindMatchHighlight);\n\tif (findMatchHighlightColor) {\n\t\tcollector.addRule(`.file-icon-themable-tree .monaco-tree-row .content .monaco-highlighted-label .highlight { color: unset !important; background-color: ${findMatchHighlightColor}; }`);\n\t\tcollector.addRule(`.monaco-tl-contents .monaco-highlighted-label .highlight { color: unset !important; background-color: ${findMatchHighlightColor}; }`);\n\t}\n\tconst findMatchHighlightColorBorder = theme.getColor(editorFindMatchHighlightBorder);\n\tif (findMatchHighlightColorBorder) {\n\t\tcollector.addRule(`.file-icon-themable-tree .monaco-tree-row .content .monaco-highlighted-label .highlight { color: unset !important; border: 1px dotted ${findMatchHighlightColorBorder}; box-sizing: border-box; }`);\n\t\tcollector.addRule(`.monaco-tl-contents .monaco-highlighted-label .highlight { color: unset !important; border: 1px dotted ${findMatchHighlightColorBorder}; box-sizing: border-box; }`);\n\t}\n\tconst link = theme.getColor(textLinkForeground);\n\tif (link) {\n\t\tcollector.addRule(`.tree-explorer-viewlet-tree-view > .message a { color: ${link}; }`);\n\t}\n\tconst focustBorderColor = theme.getColor(focusBorder);\n\tif (focustBorderColor) {\n\t\tcollector.addRule(`.tree-explorer-viewlet-tree-view > .message a:focus { outline: 1px solid ${focustBorderColor}; outline-offset: -1px; }`);\n\t}\n\tconst codeBackground = theme.getColor(textCodeBlockBackground);\n\tif (codeBackground) {\n\t\tcollector.addRule(`.tree-explorer-viewlet-tree-view > .message code { background-color: ${codeBackground}; }`);\n\t}\n});\n\nclass TreeRenderer implements IRenderer {\n\n\tprivate static readonly ITEM_HEIGHT = 22;\n\tprivate static readonly TREE_TEMPLATE_ID = 'treeExplorer';\n\n\tconstructor(\n\t\tprivate treeViewId: string,\n\t\tprivate menus: TreeMenus,\n\t\tprivate labels: ResourceLabels,\n\t\tprivate actionItemProvider: IActionItemProvider,\n\t\t@IWorkbenchThemeService private readonly themeService: IWorkbenchThemeService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t}\n\n\tgetHeight(tree: ITree, element: any): number {\n\t\treturn TreeRenderer.ITEM_HEIGHT;\n\t}\n\n\tgetTemplateId(tree: ITree, element: any): string {\n\t\treturn TreeRenderer.TREE_TEMPLATE_ID;\n\t}\n\n\trenderTemplate(tree: ITree, templateId: string, container: HTMLElement): ITreeExplorerTemplateData {\n\t\tDOM.addClass(container, 'custom-view-tree-node-item');\n\n\t\tconst icon = DOM.append(container, DOM.$('.custom-view-tree-node-item-icon'));\n\t\tconst resourceLabel = this.labels.create(container, { supportHighlights: true, donotSupportOcticons: true });\n\t\tDOM.addClass(resourceLabel.element, 'custom-view-tree-node-item-resourceLabel');\n\t\tconst actionsContainer = DOM.append(resourceLabel.element, DOM.$('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionItemProvider: this.actionItemProvider,\n\t\t\tactionRunner: new MultipleSelectionActionRunner(() => tree.getSelection())\n\t\t});\n\n\t\treturn { resourceLabel, icon, actionBar, aligner: new Aligner(container, tree, this.themeService) };\n\t}\n\n\trenderElement(tree: ITree, node: ITreeItem, templateId: string, templateData: ITreeExplorerTemplateData): void {\n\t\tconst resource = node.resourceUri ? URI.revive(node.resourceUri) : null;\n\t\tconst treeItemLabel: ITreeItemLabel | undefined = node.label ? node.label : resource ? { label: basename(resource) } : undefined;\n\t\tconst description = isString(node.description) ? node.description : resource && node.description === true ? this.labelService.getUriLabel(dirname(resource), { relative: true }) : undefined;\n\t\tconst label = treeItemLabel ? treeItemLabel.label : undefined;\n\t\tconst matches = treeItemLabel && treeItemLabel.highlights ? treeItemLabel.highlights.map(([start, end]) => ({ start, end })) : undefined;\n\t\tconst icon = this.themeService.getTheme().type === LIGHT ? node.icon : node.iconDark;\n\t\tconst iconUrl = icon ? URI.revive(icon) : null;\n\t\tconst title = node.tooltip ? node.tooltip : resource ? undefined : label;\n\n\t\t// reset\n\t\ttemplateData.actionBar.clear();\n\n\t\tif (resource || node.themeIcon) {\n\t\t\tconst fileDecorations = this.configurationService.getValue<{ colors: boolean, badges: boolean }>('explorer.decorations');\n\t\t\ttemplateData.resourceLabel.setResource({ name: label, description, resource: resource ? resource : URI.parse('missing:_icon_resource') }, { fileKind: this.getFileKind(node), title, hideIcon: !!iconUrl, fileDecorations, extraClasses: ['custom-view-tree-node-item-resourceLabel'], matches });\n\t\t} else {\n\t\t\ttemplateData.resourceLabel.setResource({ name: label, description }, { title, hideIcon: true, extraClasses: ['custom-view-tree-node-item-resourceLabel'], matches });\n\t\t}\n\n\t\ttemplateData.icon.style.backgroundImage = iconUrl ? `url('${iconUrl.toString(true)}')` : '';\n\t\tDOM.toggleClass(templateData.icon, 'custom-view-tree-node-item-icon', !!iconUrl);\n\t\ttemplateData.actionBar.context = (<TreeViewItemHandleArg>{ $treeViewId: this.treeViewId, $treeItemHandle: node.handle });\n\t\ttemplateData.actionBar.push(this.menus.getResourceActions(node), { icon: true, label: false });\n\n\t\ttemplateData.aligner.treeItem = node;\n\t}\n\n\tprivate getFileKind(node: ITreeItem): FileKind {\n\t\tif (node.themeIcon) {\n\t\t\tswitch (node.themeIcon.id) {\n\t\t\t\tcase FileThemeIcon.id:\n\t\t\t\t\treturn FileKind.FILE;\n\t\t\t\tcase FolderThemeIcon.id:\n\t\t\t\t\treturn FileKind.FOLDER;\n\t\t\t}\n\t\t}\n\t\treturn node.collapsibleState === TreeItemCollapsibleState.Collapsed || node.collapsibleState === TreeItemCollapsibleState.Expanded ? FileKind.FOLDER : FileKind.FILE;\n\t}\n\n\tdisposeTemplate(tree: ITree, templateId: string, templateData: ITreeExplorerTemplateData): void {\n\t\ttemplateData.resourceLabel.dispose();\n\t\ttemplateData.actionBar.dispose();\n\t\ttemplateData.aligner.dispose();\n\t}\n}\n\nclass Aligner extends Disposable {\n\n\tprivate _treeItem: ITreeItem;\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate tree: ITree,\n\t\tprivate themeService: IWorkbenchThemeService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.themeService.onDidFileIconThemeChange(() => this.render()));\n\t}\n\n\tset treeItem(treeItem: ITreeItem) {\n\t\tthis._treeItem = treeItem;\n\t\tthis.render();\n\t}\n\n\tprivate render(): void {\n\t\tif (this._treeItem) {\n\t\t\tDOM.toggleClass(this.container, 'align-icon-with-twisty', this.hasToAlignIconWithTwisty());\n\t\t}\n\t}\n\n\tprivate hasToAlignIconWithTwisty(): boolean {\n\t\tif (this._treeItem.collapsibleState !== TreeItemCollapsibleState.None) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.hasIcon(this._treeItem)) {\n\t\t\treturn false;\n\n\t\t}\n\t\tconst parent: ITreeItem = this.tree.getNavigator(this._treeItem).parent() || this.tree.getInput();\n\t\tif (this.hasIcon(parent)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !!parent.children && parent.children.every(c => c.collapsibleState === TreeItemCollapsibleState.None || !this.hasIcon(c));\n\t}\n\n\tprivate hasIcon(node: ITreeItem): boolean {\n\t\tconst icon = this.themeService.getTheme().type === LIGHT ? node.icon : node.iconDark;\n\t\tif (icon) {\n\t\t\treturn true;\n\t\t}\n\t\tif (node.resourceUri || node.themeIcon) {\n\t\t\tconst fileIconTheme = this.themeService.getFileIconTheme();\n\t\t\tconst isFolder = node.themeIcon ? node.themeIcon.id === FolderThemeIcon.id : node.collapsibleState !== TreeItemCollapsibleState.None;\n\t\t\tif (isFolder) {\n\t\t\t\treturn fileIconTheme.hasFileIcons && fileIconTheme.hasFolderIcons;\n\t\t\t}\n\t\t\treturn fileIconTheme.hasFileIcons;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass TreeController extends WorkbenchTreeController {\n\n\tconstructor(\n\t\tprivate treeViewId: string,\n\t\tprivate menus: TreeMenus,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper({}, configurationService);\n\t}\n\n\tprotected shouldToggleExpansion(element: ITreeItem, event: IMouseEvent, origin: string): boolean {\n\t\treturn element.command ? this.isClickOnTwistie(event) : super.shouldToggleExpansion(element, event, origin);\n\t}\n\n\tonContextMenu(tree: ITree, node: ITreeItem, event: ContextMenuEvent): boolean {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\ttree.setFocus(node);\n\t\tconst actions = this.menus.getResourceContextActions(node);\n\t\tif (!actions.length) {\n\t\t\treturn true;\n\t\t}\n\t\tconst anchor = { x: event.posx, y: event.posy };\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\n\t\t\tgetActions: () => actions,\n\n\t\t\tgetActionItem: (action) => {\n\t\t\t\tconst keybinding = this._keybindingService.lookupKeybinding(action.id);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\treturn new ActionItem(action, action, { label: true, keybinding: keybinding.getLabel() });\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\n\t\t\tonHide: (wasCancelled?: boolean) => {\n\t\t\t\tif (wasCancelled) {\n\t\t\t\t\ttree.domFocus();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgetActionsContext: () => (<TreeViewItemHandleArg>{ $treeViewId: this.treeViewId, $treeItemHandle: node.handle }),\n\n\t\t\tactionRunner: new MultipleSelectionActionRunner(() => tree.getSelection())\n\t\t});\n\n\t\treturn true;\n\t}\n}\n\nclass MultipleSelectionActionRunner extends ActionRunner {\n\n\tconstructor(private getSelectedResources: () => any[]) {\n\t\tsuper();\n\t}\n\n\trunAction(action: IAction, context: any): Promise<any> {\n\t\tif (action instanceof MenuItemAction) {\n\t\t\tconst selection = this.getSelectedResources();\n\t\t\tconst filteredSelection = selection.filter(s => s !== context);\n\n\t\t\tif (selection.length === filteredSelection.length || selection.length === 1) {\n\t\t\t\treturn action.run(context);\n\t\t\t}\n\n\t\t\treturn action.run(context, ...filteredSelection);\n\t\t}\n\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nclass TreeMenus extends Disposable implements IDisposable {\n\n\tconstructor(\n\t\tprivate id: string,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\t}\n\n\tgetResourceActions(element: ITreeItem): IAction[] {\n\t\treturn this.getActions(MenuId.ViewItemContext, { key: 'viewItem', value: element.contextValue }).primary;\n\t}\n\n\tgetResourceContextActions(element: ITreeItem): IAction[] {\n\t\treturn this.getActions(MenuId.ViewItemContext, { key: 'viewItem', value: element.contextValue }).secondary;\n\t}\n\n\tprivate getActions(menuId: MenuId, context: { key: string, value?: string }): { primary: IAction[]; secondary: IAction[]; } {\n\t\tconst contextKeyService = this.contextKeyService.createScoped();\n\t\tcontextKeyService.createKey('view', this.id);\n\t\tcontextKeyService.createKey(context.key, context.value);\n\n\t\tconst menu = this.menuService.createMenu(menuId, contextKeyService);\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\t\tfillInContextMenuActions(menu, { shouldForwardArgs: true }, result, this.contextMenuService, g => /^inline/.test(g));\n\n\t\tmenu.dispose();\n\t\tcontextKeyService.dispose();\n\n\t\treturn result;\n\t}\n}\n\nclass MarkdownRenderer {\n\n\tconstructor(\n\t\t@IOpenerService private readonly _openerService: IOpenerService\n\t) {\n\t}\n\n\tprivate getOptions(disposeables: IDisposable[]): RenderOptions {\n\t\treturn {\n\t\t\tactionHandler: {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\tlet uri: URI | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = URI.parse(content);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t\tif (uri && this._openerService) {\n\t\t\t\t\t\tthis._openerService.open(uri).catch(onUnexpectedError);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdisposeables\n\t\t\t}\n\t\t};\n\t}\n\n\trender(markdown: IMarkdownString): IMarkdownRenderResult {\n\t\tlet disposeables: IDisposable[] = [];\n\t\tconst element: HTMLElement = markdown ? renderMarkdown(markdown, this.getOptions(disposeables)) : document.createElement('span');\n\t\treturn {\n\t\t\telement,\n\t\t\tdispose: () => dispose(disposeables)\n\t\t};\n\t}\n}\n"]}]}