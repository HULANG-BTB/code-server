{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar BaseBadge = /** @class */ (function () {\n    function BaseBadge(descriptorFn) {\n        this.descriptorFn = descriptorFn;\n    }\n    BaseBadge.prototype.getDescription = function () {\n        return this.descriptorFn(null);\n    };\n    return BaseBadge;\n}());\nexports.BaseBadge = BaseBadge;\nvar NumberBadge = /** @class */ (function (_super) {\n    tslib_1.__extends(NumberBadge, _super);\n    function NumberBadge(number, descriptorFn) {\n        var _this = _super.call(this, descriptorFn) || this;\n        _this.number = number;\n        return _this;\n    }\n    NumberBadge.prototype.getDescription = function () {\n        return this.descriptorFn(this.number);\n    };\n    return NumberBadge;\n}(BaseBadge));\nexports.NumberBadge = NumberBadge;\nvar TextBadge = /** @class */ (function (_super) {\n    tslib_1.__extends(TextBadge, _super);\n    function TextBadge(text, descriptorFn) {\n        var _this = _super.call(this, descriptorFn) || this;\n        _this.text = text;\n        return _this;\n    }\n    return TextBadge;\n}(BaseBadge));\nexports.TextBadge = TextBadge;\nvar IconBadge = /** @class */ (function (_super) {\n    tslib_1.__extends(IconBadge, _super);\n    function IconBadge(descriptorFn) {\n        return _super.call(this, descriptorFn) || this;\n    }\n    return IconBadge;\n}(BaseBadge));\nexports.IconBadge = IconBadge;\nvar ProgressBadge = /** @class */ (function (_super) {\n    tslib_1.__extends(ProgressBadge, _super);\n    function ProgressBadge() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ProgressBadge;\n}(BaseBadge));\nexports.ProgressBadge = ProgressBadge;\nexports.IActivityService = instantiation_1.createDecorator('activityService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,gFAAiF;AAMjF;IAGC,mBAAY,YAAmC;QAC9C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAClC,CAAC;IAED,kCAAc,GAAd;QACC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IACF,gBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,8BAAS;AAYtB;IAAiC,uCAAS;IAGzC,qBAAY,MAAc,EAAE,YAAmC;QAA/D,YACC,kBAAM,YAAY,CAAC,SAGnB;QADA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACtB,CAAC;IAED,oCAAc,GAAd;QACC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IACF,kBAAC;AAAD,CAAC,AAZD,CAAiC,SAAS,GAYzC;AAZY,kCAAW;AAcxB;IAA+B,qCAAS;IAGvC,mBAAY,IAAY,EAAE,YAAmC;QAA7D,YACC,kBAAM,YAAY,CAAC,SAGnB;QADA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IAClB,CAAC;IACF,gBAAC;AAAD,CAAC,AARD,CAA+B,SAAS,GAQvC;AARY,8BAAS;AAUtB;IAA+B,qCAAS;IAEvC,mBAAY,YAAmC;eAC9C,kBAAM,YAAY,CAAC;IACpB,CAAC;IACF,gBAAC;AAAD,CAAC,AALD,CAA+B,SAAS,GAKvC;AALY,8BAAS;AAOtB;IAAmC,yCAAS;IAA5C;;IAA+C,CAAC;IAAD,oBAAC;AAAD,CAAC,AAAhD,CAAmC,SAAS,GAAI;AAAnC,sCAAa;AAEb,QAAA,gBAAgB,GAAG,+BAAe,CAAmB,iBAAiB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IBadge {\n\tgetDescription(): string;\n}\n\nexport class BaseBadge implements IBadge {\n\tdescriptorFn: (args: any) => string;\n\n\tconstructor(descriptorFn: (args: any) => string) {\n\t\tthis.descriptorFn = descriptorFn;\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.descriptorFn(null);\n\t}\n}\n\nexport class NumberBadge extends BaseBadge {\n\tnumber: number;\n\n\tconstructor(number: number, descriptorFn: (args: any) => string) {\n\t\tsuper(descriptorFn);\n\n\t\tthis.number = number;\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.descriptorFn(this.number);\n\t}\n}\n\nexport class TextBadge extends BaseBadge {\n\ttext: string;\n\n\tconstructor(text: string, descriptorFn: (args: any) => string) {\n\t\tsuper(descriptorFn);\n\n\t\tthis.text = text;\n\t}\n}\n\nexport class IconBadge extends BaseBadge {\n\n\tconstructor(descriptorFn: (args: any) => string) {\n\t\tsuper(descriptorFn);\n\t}\n}\n\nexport class ProgressBadge extends BaseBadge { }\n\nexport const IActivityService = createDecorator<IActivityService>('activityService');\n\nexport interface IActivityService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Show activity in the panel for the given panel or in the activitybar for the given viewlet or global action.\n\t */\n\tshowActivity(compositeOrActionId: string, badge: IBadge, clazz?: string, priority?: number): IDisposable;\n}\n"]}]}