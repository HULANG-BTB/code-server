{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n})(Schemas = exports.Schemas || (exports.Schemas = {}));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,IAAiB,OAAO,CAyCvB;AAzCD,WAAiB,OAAO;IAEvB;;;OAGG;IACU,gBAAQ,GAAW,UAAU,CAAC;IAE3C;;OAEG;IACU,cAAM,GAAW,QAAQ,CAAC;IAEvC;;OAEG;IACU,gBAAQ,GAAW,SAAS,CAAC;IAE1C;;OAEG;IACU,mBAAW,GAAW,aAAa,CAAC;IAEjD;;OAEG;IACU,0BAAkB,GAAW,oBAAoB,CAAC;IAElD,YAAI,GAAW,MAAM,CAAC;IAEtB,aAAK,GAAW,OAAO,CAAC;IAExB,YAAI,GAAW,MAAM,CAAC;IAEtB,cAAM,GAAW,QAAQ,CAAC;IAE1B,gBAAQ,GAAW,UAAU,CAAC;IAE9B,YAAI,GAAW,MAAM,CAAC;IAEtB,eAAO,GAAW,SAAS,CAAC;AAC1C,CAAC,EAzCgB,OAAO,GAAP,eAAO,KAAP,eAAO,QAyCvB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory: string = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode: string = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal: string = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough: string = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet: string = 'walkThroughSnippet';\n\n\texport const http: string = 'http';\n\n\texport const https: string = 'https';\n\n\texport const file: string = 'file';\n\n\texport const mailto: string = 'mailto';\n\n\texport const untitled: string = 'untitled';\n\n\texport const data: string = 'data';\n\n\texport const command: string = 'command';\n}\n"]}]}