{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/base/common/numbers.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/numbers.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function clamp(value, min, max) {\n        return Math.min(Math.max(value, min), max);\n    }\n    exports.clamp = clamp;\n    function rot(index, modulo) {\n        return (modulo + (index % modulo)) % modulo;\n    }\n    exports.rot = rot;\n    class Counter {\n        constructor() {\n            this._next = 0;\n        }\n        getNext() {\n            return this._next++;\n        }\n    }\n    exports.Counter = Counter;\n});\n",null]}