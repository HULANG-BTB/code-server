{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/client.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/client.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ide_1 = require(\"@coder/ide\");\nvar client_1 = require(\"@coder/ide/src/fill/client\");\nvar severity_1 = require(\"vs/base/common/severity\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar statusbar_1 = require(\"vs/platform/statusbar/common/statusbar\");\nvar paths = require(\"./fill/paths\");\nvar product_1 = require(\"./fill/product\");\nrequire(\"./vscode.scss\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar terminal_1 = require(\"vs/workbench/contrib/terminal/common/terminal\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\n// NOTE: shouldn't import anything from VS Code here or anything that will\n// depend on a synchronous fill like `os`.\nvar VSClient = /** @class */ (function (_super) {\n    tslib_1.__extends(VSClient, _super);\n    function VSClient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VSClient.prototype.initialize = function () {\n        var _this = this;\n        return this.task(\"Start workbench\", 1000, function (data, sharedData) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var workbench, getService, event;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        paths._paths.initialize(data, sharedData);\n                        product_1.default.initialize(data);\n                        process.env.SHELL = data.shell;\n                        workbench = require(\"./workbench\").workbench;\n                        return [4 /*yield*/, workbench.initialize()];\n                    case 1:\n                        _a.sent();\n                        getService = function (id) { return workbench.serviceCollection.get(id); };\n                        window.ide = {\n                            client: client_1.client,\n                            workbench: {\n                                commandRegistry: commands_1.CommandsRegistry,\n                                // tslint:disable-next-line:no-any\n                                menuRegistry: actions_1.MenuRegistry,\n                                // tslint:disable-next-line:no-any\n                                statusbarService: getService(statusbar_1.IStatusbarService),\n                                notificationService: getService(notification_1.INotificationService),\n                                storageService: {\n                                    save: function () {\n                                        // tslint:disable-next-line:no-any\n                                        var storageService = getService(storage_1.IStorageService);\n                                        return storageService.close();\n                                    },\n                                },\n                                onFileCreate: function (cb) {\n                                    getService(files_1.IFileService).onAfterOperation(function (e) {\n                                        if (e.operation === files_1.FileOperation.CREATE) {\n                                            cb(e.resource.path);\n                                        }\n                                    });\n                                },\n                                onFileMove: function (cb) {\n                                    getService(files_1.IFileService).onAfterOperation(function (e) {\n                                        if (e.operation === files_1.FileOperation.MOVE) {\n                                            cb(e.resource.path, e.target ? e.target.resource.path : undefined);\n                                        }\n                                    });\n                                },\n                                onFileDelete: function (cb) {\n                                    getService(files_1.IFileService).onAfterOperation(function (e) {\n                                        if (e.operation === files_1.FileOperation.DELETE) {\n                                            cb(e.resource.path);\n                                        }\n                                    });\n                                },\n                                onFileSaved: function (cb) {\n                                    getService(textfiles_1.ITextFileService).models.onModelSaved(function (e) {\n                                        cb(e.resource.path);\n                                    });\n                                },\n                                onFileCopy: function (cb) {\n                                    getService(files_1.IFileService).onAfterOperation(function (e) {\n                                        if (e.operation === files_1.FileOperation.COPY) {\n                                            cb(e.resource.path, e.target ? e.target.resource.path : undefined);\n                                        }\n                                    });\n                                },\n                                onModelAdded: function (cb) {\n                                    getService(modelService_1.IModelService).onModelAdded(function (e) {\n                                        cb(e.uri.path, e.getLanguageIdentifier().language);\n                                    });\n                                },\n                                onModelRemoved: function (cb) {\n                                    getService(modelService_1.IModelService).onModelRemoved(function (e) {\n                                        cb(e.uri.path, e.getLanguageIdentifier().language);\n                                    });\n                                },\n                                onModelLanguageChange: function (cb) {\n                                    getService(modelService_1.IModelService).onModelModeChanged(function (e) {\n                                        cb(e.model.uri.path, e.model.getLanguageIdentifier().language, e.oldModeId);\n                                    });\n                                },\n                                onTerminalAdded: function (cb) {\n                                    getService(terminal_1.ITerminalService).onInstanceCreated(function () { return cb(); });\n                                },\n                                onTerminalRemoved: function (cb) {\n                                    getService(terminal_1.ITerminalService).onInstanceDisposed(function () { return cb(); });\n                                },\n                            },\n                            // @ts-ignore\n                            // tslint:disable-next-line:no-any\n                            MenuId: actions_1.MenuId,\n                            // tslint:disable-next-line:no-any\n                            Severity: severity_1.default,\n                            // @ts-ignore\n                            // tslint:disable-next-line:no-any\n                            StatusbarAlignment: statusbar_1.StatusbarAlignment,\n                        };\n                        event = new CustomEvent(\"ide-ready\");\n                        // tslint:disable-next-line:no-any\n                        event.ide = window.ide;\n                        window.dispatchEvent(event);\n                        return [2 /*return*/];\n                }\n            });\n        }); }, this.initData, this.sharedProcessData);\n    };\n    return VSClient;\n}(ide_1.IdeClient));\nexports.client = new VSClient();\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/client.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/client.ts"],"names":[],"mappings":"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","sourcesContent":["import { IdeClient } from \"@coder/ide\";\nimport { client as ideClientInstance } from \"@coder/ide/src/fill/client\";\nimport Severity from \"vs/base/common/severity\";\nimport { INotificationService } from \"vs/platform/notification/common/notification\";\nimport { IStatusbarService, StatusbarAlignment } from \"vs/platform/statusbar/common/statusbar\";\nimport * as paths from \"./fill/paths\";\nimport product from \"./fill/product\";\nimport \"./vscode.scss\";\nimport { MenuId, MenuRegistry } from \"vs/platform/actions/common/actions\";\nimport { CommandsRegistry } from \"vs/platform/commands/common/commands\";\nimport { IFileService, FileOperation } from \"vs/platform/files/common/files\";\nimport { ITextFileService } from \"vs/workbench/services/textfile/common/textfiles\";\nimport { IModelService } from \"vs/editor/common/services/modelService\";\nimport { ITerminalService } from \"vs/workbench/contrib/terminal/common/terminal\";\nimport { IStorageService } from \"vs/platform/storage/common/storage\";\n// NOTE: shouldn't import anything from VS Code here or anything that will\n// depend on a synchronous fill like `os`.\n\nclass VSClient extends IdeClient {\n\tprotected initialize(): Promise<void> {\n\t\treturn this.task(\"Start workbench\", 1000, async (data, sharedData) => {\n\t\t\tpaths._paths.initialize(data, sharedData);\n\t\t\tproduct.initialize(data);\n\t\t\tprocess.env.SHELL = data.shell;\n\t\t\t// At this point everything should be filled, including `os`. `os` also\n\t\t\t// relies on `initData` but it listens first so it initialize before this\n\t\t\t// callback, meaning we are safe to include everything from VS Code now.\n\t\t\tconst { workbench } = require(\"./workbench\") as typeof import(\"./workbench\");\n\t\t\tawait workbench.initialize();\n\n\t\t\t// tslint:disable-next-line:no-any\n\t\t\tconst getService = <T>(id: any): T => workbench.serviceCollection.get<T>(id) as T;\n\t\t\twindow.ide = {\n\t\t\t\tclient: ideClientInstance,\n\t\t\t\tworkbench: {\n\t\t\t\t\tcommandRegistry: CommandsRegistry,\n\t\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\t\tmenuRegistry: MenuRegistry as any,\n\t\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\t\tstatusbarService: getService<IStatusbarService>(IStatusbarService) as any,\n\t\t\t\t\tnotificationService: getService<INotificationService>(INotificationService),\n\t\t\t\t\tstorageService: {\n\t\t\t\t\t\tsave: (): Promise<void> => {\n\t\t\t\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\t\t\t\tconst storageService = getService<IStorageService>(IStorageService) as any;\n\n\t\t\t\t\t\t\treturn storageService.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\tonFileCreate: (cb): void => {\n\t\t\t\t\t\tgetService<IFileService>(IFileService).onAfterOperation((e) => {\n\t\t\t\t\t\t\tif (e.operation === FileOperation.CREATE) {\n\t\t\t\t\t\t\t\tcb(e.resource.path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonFileMove: (cb): void => {\n\t\t\t\t\t\tgetService<IFileService>(IFileService).onAfterOperation((e) => {\n\t\t\t\t\t\t\tif (e.operation === FileOperation.MOVE) {\n\t\t\t\t\t\t\t\tcb(e.resource.path, e.target ? e.target.resource.path : undefined!);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonFileDelete: (cb): void => {\n\t\t\t\t\t\tgetService<IFileService>(IFileService).onAfterOperation((e) => {\n\t\t\t\t\t\t\tif (e.operation === FileOperation.DELETE) {\n\t\t\t\t\t\t\t\tcb(e.resource.path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonFileSaved: (cb): void => {\n\t\t\t\t\t\tgetService<ITextFileService>(ITextFileService).models.onModelSaved((e) => {\n\t\t\t\t\t\t\tcb(e.resource.path);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonFileCopy: (cb): void => {\n\t\t\t\t\t\tgetService<IFileService>(IFileService).onAfterOperation((e) => {\n\t\t\t\t\t\t\tif (e.operation === FileOperation.COPY) {\n\t\t\t\t\t\t\t\tcb(e.resource.path, e.target ? e.target.resource.path : undefined!);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tonModelAdded: (cb): void => {\n\t\t\t\t\t\tgetService<IModelService>(IModelService).onModelAdded((e) => {\n\t\t\t\t\t\t\tcb(e.uri.path, e.getLanguageIdentifier().language);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonModelRemoved: (cb): void => {\n\t\t\t\t\t\tgetService<IModelService>(IModelService).onModelRemoved((e) => {\n\t\t\t\t\t\t\tcb(e.uri.path, e.getLanguageIdentifier().language);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonModelLanguageChange: (cb): void => {\n\t\t\t\t\t\tgetService<IModelService>(IModelService).onModelModeChanged((e) => {\n\t\t\t\t\t\t\tcb(e.model.uri.path, e.model.getLanguageIdentifier().language, e.oldModeId);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tonTerminalAdded: (cb): void => {\n\t\t\t\t\t\tgetService<ITerminalService>(ITerminalService).onInstanceCreated(() => cb());\n\t\t\t\t\t},\n\t\t\t\t\tonTerminalRemoved: (cb): void => {\n\t\t\t\t\t\tgetService<ITerminalService>(ITerminalService).onInstanceDisposed(() => cb());\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// @ts-ignore\n\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\tMenuId: MenuId as any,\n\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\tSeverity: Severity as any,\n\t\t\t\t// @ts-ignore\n\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\tStatusbarAlignment: StatusbarAlignment as any,\n\t\t\t};\n\n\t\t\tconst event = new CustomEvent(\"ide-ready\");\n\t\t\t// tslint:disable-next-line:no-any\n\t\t\t(<any>event).ide = window.ide;\n\t\t\twindow.dispatchEvent(event);\n\t\t}, this.initData, this.sharedProcessData);\n\t}\n}\n\nexport const client = new VSClient();\n"]}]}