{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/navigationActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/navigationActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar actions_3 = require(\"vs/workbench/common/actions\");\nvar BaseNavigationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseNavigationAction, _super);\n    function BaseNavigationAction(id, label, editorGroupService, panelService, layoutService, viewletService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorGroupService = editorGroupService;\n        _this.panelService = panelService;\n        _this.layoutService = layoutService;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    BaseNavigationAction.prototype.run = function () {\n        var isEditorFocus = this.layoutService.hasFocus(layoutService_1.Parts.EDITOR_PART);\n        var isPanelFocus = this.layoutService.hasFocus(layoutService_1.Parts.PANEL_PART);\n        var isSidebarFocus = this.layoutService.hasFocus(layoutService_1.Parts.SIDEBAR_PART);\n        var isSidebarPositionLeft = this.layoutService.getSideBarPosition() === layoutService_1.Position.LEFT;\n        var isPanelPositionDown = this.layoutService.getPanelPosition() === layoutService_1.Position.BOTTOM;\n        if (isEditorFocus) {\n            return this.navigateOnEditorFocus(isSidebarPositionLeft, isPanelPositionDown);\n        }\n        if (isPanelFocus) {\n            return this.navigateOnPanelFocus(isSidebarPositionLeft, isPanelPositionDown);\n        }\n        if (isSidebarFocus) {\n            return Promise.resolve(this.navigateOnSidebarFocus(isSidebarPositionLeft, isPanelPositionDown));\n        }\n        return Promise.resolve(false);\n    };\n    BaseNavigationAction.prototype.navigateOnEditorFocus = function (_isSidebarPositionLeft, _isPanelPositionDown) {\n        return Promise.resolve(true);\n    };\n    BaseNavigationAction.prototype.navigateOnPanelFocus = function (_isSidebarPositionLeft, _isPanelPositionDown) {\n        return Promise.resolve(true);\n    };\n    BaseNavigationAction.prototype.navigateOnSidebarFocus = function (_isSidebarPositionLeft, _isPanelPositionDown) {\n        return true;\n    };\n    BaseNavigationAction.prototype.navigateToPanel = function () {\n        if (!this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART)) {\n            return false;\n        }\n        var activePanelId = this.panelService.getActivePanel().getId();\n        return this.panelService.openPanel(activePanelId, true);\n    };\n    BaseNavigationAction.prototype.navigateToSidebar = function () {\n        if (!this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n            return Promise.resolve(false);\n        }\n        var activeViewlet = this.viewletService.getActiveViewlet();\n        if (!activeViewlet) {\n            return Promise.resolve(false);\n        }\n        var activeViewletId = activeViewlet.getId();\n        return this.viewletService.openViewlet(activeViewletId, true)\n            .then(function (value) { return value === null ? false : value; });\n    };\n    BaseNavigationAction.prototype.navigateAcrossEditorGroup = function (direction) {\n        return this.doNavigateToEditorGroup({ direction: direction });\n    };\n    BaseNavigationAction.prototype.navigateToEditorGroup = function (location) {\n        return this.doNavigateToEditorGroup({ location: location });\n    };\n    BaseNavigationAction.prototype.doNavigateToEditorGroup = function (scope) {\n        var targetGroup = this.editorGroupService.findGroup(scope, this.editorGroupService.activeGroup);\n        if (targetGroup) {\n            targetGroup.focus();\n            return true;\n        }\n        return false;\n    };\n    BaseNavigationAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, viewlet_1.IViewletService)\n    ], BaseNavigationAction);\n    return BaseNavigationAction;\n}(actions_1.Action));\nvar NavigateLeftAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateLeftAction, _super);\n    function NavigateLeftAction(id, label, editorGroupService, panelService, layoutService, viewletService) {\n        return _super.call(this, id, label, editorGroupService, panelService, layoutService, viewletService) || this;\n    }\n    NavigateLeftAction.prototype.navigateOnEditorFocus = function (isSidebarPositionLeft, _isPanelPositionDown) {\n        var didNavigate = this.navigateAcrossEditorGroup(editorGroupsService_1.GroupDirection.LEFT);\n        if (didNavigate) {\n            return Promise.resolve(true);\n        }\n        if (isSidebarPositionLeft) {\n            return this.navigateToSidebar();\n        }\n        return Promise.resolve(false);\n    };\n    NavigateLeftAction.prototype.navigateOnPanelFocus = function (isSidebarPositionLeft, isPanelPositionDown) {\n        if (isPanelPositionDown && isSidebarPositionLeft) {\n            return this.navigateToSidebar();\n        }\n        if (!isPanelPositionDown) {\n            return Promise.resolve(this.navigateToEditorGroup(editorGroupsService_1.GroupLocation.LAST));\n        }\n        return Promise.resolve(false);\n    };\n    NavigateLeftAction.prototype.navigateOnSidebarFocus = function (isSidebarPositionLeft, _isPanelPositionDown) {\n        if (!isSidebarPositionLeft) {\n            return this.navigateToEditorGroup(editorGroupsService_1.GroupLocation.LAST);\n        }\n        return false;\n    };\n    NavigateLeftAction.ID = 'workbench.action.navigateLeft';\n    NavigateLeftAction.LABEL = nls.localize('navigateLeft', \"Navigate to the View on the Left\");\n    NavigateLeftAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, viewlet_1.IViewletService)\n    ], NavigateLeftAction);\n    return NavigateLeftAction;\n}(BaseNavigationAction));\nvar NavigateRightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateRightAction, _super);\n    function NavigateRightAction(id, label, editorGroupService, panelService, layoutService, viewletService) {\n        return _super.call(this, id, label, editorGroupService, panelService, layoutService, viewletService) || this;\n    }\n    NavigateRightAction.prototype.navigateOnEditorFocus = function (isSidebarPositionLeft, isPanelPositionDown) {\n        var didNavigate = this.navigateAcrossEditorGroup(editorGroupsService_1.GroupDirection.RIGHT);\n        if (didNavigate) {\n            return Promise.resolve(true);\n        }\n        if (!isPanelPositionDown) {\n            return Promise.resolve(this.navigateToPanel());\n        }\n        if (!isSidebarPositionLeft) {\n            return this.navigateToSidebar();\n        }\n        return Promise.resolve(false);\n    };\n    NavigateRightAction.prototype.navigateOnPanelFocus = function (isSidebarPositionLeft, _isPanelPositionDown) {\n        if (!isSidebarPositionLeft) {\n            return this.navigateToSidebar();\n        }\n        return Promise.resolve(false);\n    };\n    NavigateRightAction.prototype.navigateOnSidebarFocus = function (isSidebarPositionLeft, _isPanelPositionDown) {\n        if (isSidebarPositionLeft) {\n            return this.navigateToEditorGroup(editorGroupsService_1.GroupLocation.FIRST);\n        }\n        return false;\n    };\n    NavigateRightAction.ID = 'workbench.action.navigateRight';\n    NavigateRightAction.LABEL = nls.localize('navigateRight', \"Navigate to the View on the Right\");\n    NavigateRightAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, viewlet_1.IViewletService)\n    ], NavigateRightAction);\n    return NavigateRightAction;\n}(BaseNavigationAction));\nvar NavigateUpAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateUpAction, _super);\n    function NavigateUpAction(id, label, editorGroupService, panelService, layoutService, viewletService) {\n        return _super.call(this, id, label, editorGroupService, panelService, layoutService, viewletService) || this;\n    }\n    NavigateUpAction.prototype.navigateOnEditorFocus = function (_isSidebarPositionLeft, _isPanelPositionDown) {\n        return Promise.resolve(this.navigateAcrossEditorGroup(editorGroupsService_1.GroupDirection.UP));\n    };\n    NavigateUpAction.prototype.navigateOnPanelFocus = function (_isSidebarPositionLeft, isPanelPositionDown) {\n        if (isPanelPositionDown) {\n            return Promise.resolve(this.navigateToEditorGroup(editorGroupsService_1.GroupLocation.LAST));\n        }\n        return Promise.resolve(false);\n    };\n    NavigateUpAction.ID = 'workbench.action.navigateUp';\n    NavigateUpAction.LABEL = nls.localize('navigateUp', \"Navigate to the View Above\");\n    NavigateUpAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, viewlet_1.IViewletService)\n    ], NavigateUpAction);\n    return NavigateUpAction;\n}(BaseNavigationAction));\nvar NavigateDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigateDownAction, _super);\n    function NavigateDownAction(id, label, editorGroupService, panelService, layoutService, viewletService) {\n        return _super.call(this, id, label, editorGroupService, panelService, layoutService, viewletService) || this;\n    }\n    NavigateDownAction.prototype.navigateOnEditorFocus = function (_isSidebarPositionLeft, isPanelPositionDown) {\n        var didNavigate = this.navigateAcrossEditorGroup(editorGroupsService_1.GroupDirection.DOWN);\n        if (didNavigate) {\n            return Promise.resolve(true);\n        }\n        if (isPanelPositionDown) {\n            return Promise.resolve(this.navigateToPanel());\n        }\n        return Promise.resolve(false);\n    };\n    NavigateDownAction.ID = 'workbench.action.navigateDown';\n    NavigateDownAction.LABEL = nls.localize('navigateDown', \"Navigate to the View Below\");\n    NavigateDownAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, viewlet_1.IViewletService)\n    ], NavigateDownAction);\n    return NavigateDownAction;\n}(BaseNavigationAction));\nvar registry = platform_1.Registry.as(actions_3.Extensions.WorkbenchActions);\nvar viewCategory = nls.localize('view', \"View\");\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(NavigateUpAction, NavigateUpAction.ID, NavigateUpAction.LABEL, undefined), 'View: Navigate to the View Above', viewCategory);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(NavigateDownAction, NavigateDownAction.ID, NavigateDownAction.LABEL, undefined), 'View: Navigate to the View Below', viewCategory);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(NavigateLeftAction, NavigateLeftAction.ID, NavigateLeftAction.LABEL, undefined), 'View: Navigate to the View on the Left', viewCategory);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(NavigateRightAction, NavigateRightAction.ID, NavigateRightAction.LABEL, undefined), 'View: Navigate to the View on the Right', viewCategory);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/navigationActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/navigationActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Action } from 'vs/base/common/actions';\nimport { IEditorGroupsService, GroupDirection, GroupLocation, IFindGroupScope } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IWorkbenchLayoutService, Parts, Position as PartPosition } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IViewlet } from 'vs/workbench/common/viewlet';\nimport { IPanel } from 'vs/workbench/common/panel';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchActionRegistry, Extensions } from 'vs/workbench/common/actions';\n\nabstract class BaseNavigationAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService protected editorGroupService: IEditorGroupsService,\n\t\t@IPanelService protected panelService: IPanelService,\n\t\t@IWorkbenchLayoutService protected layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService protected viewletService: IViewletService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst isEditorFocus = this.layoutService.hasFocus(Parts.EDITOR_PART);\n\t\tconst isPanelFocus = this.layoutService.hasFocus(Parts.PANEL_PART);\n\t\tconst isSidebarFocus = this.layoutService.hasFocus(Parts.SIDEBAR_PART);\n\n\t\tconst isSidebarPositionLeft = this.layoutService.getSideBarPosition() === PartPosition.LEFT;\n\t\tconst isPanelPositionDown = this.layoutService.getPanelPosition() === PartPosition.BOTTOM;\n\n\t\tif (isEditorFocus) {\n\t\t\treturn this.navigateOnEditorFocus(isSidebarPositionLeft, isPanelPositionDown);\n\t\t}\n\n\t\tif (isPanelFocus) {\n\t\t\treturn this.navigateOnPanelFocus(isSidebarPositionLeft, isPanelPositionDown);\n\t\t}\n\n\t\tif (isSidebarFocus) {\n\t\t\treturn Promise.resolve(this.navigateOnSidebarFocus(isSidebarPositionLeft, isPanelPositionDown));\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprotected navigateOnEditorFocus(_isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): Promise<boolean | IViewlet | IPanel> {\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprotected navigateOnPanelFocus(_isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): Promise<boolean | IPanel> {\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprotected navigateOnSidebarFocus(_isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): boolean | IViewlet {\n\t\treturn true;\n\t}\n\n\tprotected navigateToPanel(): IPanel | boolean {\n\t\tif (!this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst activePanelId = this.panelService.getActivePanel()!.getId();\n\n\t\treturn this.panelService.openPanel(activePanelId, true)!;\n\t}\n\n\tprotected navigateToSidebar(): Promise<IViewlet | boolean> {\n\t\tif (!this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tconst activeViewlet = this.viewletService.getActiveViewlet();\n\t\tif (!activeViewlet) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tconst activeViewletId = activeViewlet.getId();\n\n\t\treturn this.viewletService.openViewlet(activeViewletId, true)\n\t\t\t.then(value => value === null ? false : value);\n\t}\n\n\tprotected navigateAcrossEditorGroup(direction: GroupDirection): boolean {\n\t\treturn this.doNavigateToEditorGroup({ direction });\n\t}\n\n\tprotected navigateToEditorGroup(location: GroupLocation): boolean {\n\t\treturn this.doNavigateToEditorGroup({ location });\n\t}\n\n\tprivate doNavigateToEditorGroup(scope: IFindGroupScope): boolean {\n\t\tconst targetGroup = this.editorGroupService.findGroup(scope, this.editorGroupService.activeGroup);\n\t\tif (targetGroup) {\n\t\t\ttargetGroup.focus();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nclass NavigateLeftAction extends BaseNavigationAction {\n\n\tstatic readonly ID = 'workbench.action.navigateLeft';\n\tstatic readonly LABEL = nls.localize('navigateLeft', \"Navigate to the View on the Left\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, editorGroupService, panelService, layoutService, viewletService);\n\t}\n\n\tprotected navigateOnEditorFocus(isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): Promise<boolean | IViewlet> {\n\t\tconst didNavigate = this.navigateAcrossEditorGroup(GroupDirection.LEFT);\n\t\tif (didNavigate) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (isSidebarPositionLeft) {\n\t\t\treturn this.navigateToSidebar();\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprotected navigateOnPanelFocus(isSidebarPositionLeft: boolean, isPanelPositionDown: boolean): Promise<boolean | IViewlet> {\n\t\tif (isPanelPositionDown && isSidebarPositionLeft) {\n\t\t\treturn this.navigateToSidebar();\n\t\t}\n\n\t\tif (!isPanelPositionDown) {\n\t\t\treturn Promise.resolve(this.navigateToEditorGroup(GroupLocation.LAST));\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprotected navigateOnSidebarFocus(isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): boolean {\n\t\tif (!isSidebarPositionLeft) {\n\t\t\treturn this.navigateToEditorGroup(GroupLocation.LAST);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nclass NavigateRightAction extends BaseNavigationAction {\n\n\tstatic readonly ID = 'workbench.action.navigateRight';\n\tstatic readonly LABEL = nls.localize('navigateRight', \"Navigate to the View on the Right\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, editorGroupService, panelService, layoutService, viewletService);\n\t}\n\n\tprotected navigateOnEditorFocus(isSidebarPositionLeft: boolean, isPanelPositionDown: boolean): Promise<boolean | IViewlet | IPanel> {\n\t\tconst didNavigate = this.navigateAcrossEditorGroup(GroupDirection.RIGHT);\n\t\tif (didNavigate) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (!isPanelPositionDown) {\n\t\t\treturn Promise.resolve(this.navigateToPanel());\n\t\t}\n\n\t\tif (!isSidebarPositionLeft) {\n\t\t\treturn this.navigateToSidebar();\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprotected navigateOnPanelFocus(isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): Promise<boolean | IViewlet> {\n\t\tif (!isSidebarPositionLeft) {\n\t\t\treturn this.navigateToSidebar();\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprotected navigateOnSidebarFocus(isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): boolean {\n\t\tif (isSidebarPositionLeft) {\n\t\t\treturn this.navigateToEditorGroup(GroupLocation.FIRST);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nclass NavigateUpAction extends BaseNavigationAction {\n\n\tstatic readonly ID = 'workbench.action.navigateUp';\n\tstatic readonly LABEL = nls.localize('navigateUp', \"Navigate to the View Above\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, editorGroupService, panelService, layoutService, viewletService);\n\t}\n\n\tprotected navigateOnEditorFocus(_isSidebarPositionLeft: boolean, _isPanelPositionDown: boolean): Promise<boolean> {\n\t\treturn Promise.resolve(this.navigateAcrossEditorGroup(GroupDirection.UP));\n\t}\n\n\tprotected navigateOnPanelFocus(_isSidebarPositionLeft: boolean, isPanelPositionDown: boolean): Promise<boolean> {\n\t\tif (isPanelPositionDown) {\n\t\t\treturn Promise.resolve(this.navigateToEditorGroup(GroupLocation.LAST));\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nclass NavigateDownAction extends BaseNavigationAction {\n\n\tstatic readonly ID = 'workbench.action.navigateDown';\n\tstatic readonly LABEL = nls.localize('navigateDown', \"Navigate to the View Below\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, editorGroupService, panelService, layoutService, viewletService);\n\t}\n\n\tprotected navigateOnEditorFocus(_isSidebarPositionLeft: boolean, isPanelPositionDown: boolean): Promise<boolean | IPanel> {\n\t\tconst didNavigate = this.navigateAcrossEditorGroup(GroupDirection.DOWN);\n\t\tif (didNavigate) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (isPanelPositionDown) {\n\t\t\treturn Promise.resolve(this.navigateToPanel());\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n}\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\nconst viewCategory = nls.localize('view', \"View\");\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateUpAction, NavigateUpAction.ID, NavigateUpAction.LABEL, undefined), 'View: Navigate to the View Above', viewCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateDownAction, NavigateDownAction.ID, NavigateDownAction.LABEL, undefined), 'View: Navigate to the View Below', viewCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateLeftAction, NavigateLeftAction.ID, NavigateLeftAction.LABEL, undefined), 'View: Navigate to the View on the Left', viewCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateRightAction, NavigateRightAction.ID, NavigateRightAction.LABEL, undefined), 'View: Navigate to the View on the Right', viewCategory);\n"]}]}