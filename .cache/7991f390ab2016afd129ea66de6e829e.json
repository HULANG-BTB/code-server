{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLogService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLogService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar log_1 = require(\"vs/platform/log/common/log\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar MainThreadLogService = /** @class */ (function (_super) {\n    tslib_1.__extends(MainThreadLogService, _super);\n    function MainThreadLogService(extHostContext, logService) {\n        var _this = _super.call(this) || this;\n        _this._register(logService.onDidChangeLogLevel(function (level) { return extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostLogService).$setLevel(level); }));\n        return _this;\n    }\n    MainThreadLogService = tslib_1.__decorate([\n        extHostCustomers_1.extHostCustomer,\n        tslib_1.__param(1, log_1.ILogService)\n    ], MainThreadLogService);\n    return MainThreadLogService;\n}(lifecycle_1.Disposable));\nexports.MainThreadLogService = MainThreadLogService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLogService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadLogService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,6EAA2E;AAC3E,kDAAyD;AACzD,sDAAsD;AACtD,6EAA2F;AAG3F;IAA0C,gDAAU;IAEnD,8BACC,cAA+B,EAClB,UAAuB;QAFrC,YAIC,iBAAO,SAEP;QADA,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,mBAAmB,CAAC,UAAA,KAAK,IAAI,OAAA,cAAc,CAAC,QAAQ,CAAC,iCAAc,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAA1E,CAA0E,CAAC,CAAC,CAAC;;IACrI,CAAC;IARW,oBAAoB;QADhC,kCAAe;QAKb,mBAAA,iBAAW,CAAA;OAJD,oBAAoB,CAUhC;IAAD,2BAAC;CAAA,AAVD,CAA0C,sBAAU,GAUnD;AAVY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extHostCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtHostContext, ExtHostContext } from 'vs/workbench/api/common/extHost.protocol';\n\n@extHostCustomer\nexport class MainThreadLogService extends Disposable {\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis._register(logService.onDidChangeLogLevel(level => extHostContext.getProxy(ExtHostContext.ExtHostLogService).$setLevel(level)));\n\t}\n\n}"]}]}