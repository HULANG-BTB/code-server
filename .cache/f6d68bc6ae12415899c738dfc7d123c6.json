{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./overlayWidgets\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar viewPart_1 = require(\"vs/editor/browser/view/viewPart\");\nvar ViewOverlayWidgets = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewOverlayWidgets, _super);\n    function ViewOverlayWidgets(context) {\n        var _this = _super.call(this, context) || this;\n        _this._widgets = {};\n        _this._verticalScrollbarWidth = _this._context.configuration.editor.layoutInfo.verticalScrollbarWidth;\n        _this._minimapWidth = _this._context.configuration.editor.layoutInfo.minimapWidth;\n        _this._horizontalScrollbarHeight = _this._context.configuration.editor.layoutInfo.horizontalScrollbarHeight;\n        _this._editorHeight = _this._context.configuration.editor.layoutInfo.height;\n        _this._editorWidth = _this._context.configuration.editor.layoutInfo.width;\n        _this._domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        viewPart_1.PartFingerprints.write(_this._domNode, viewPart_1.PartFingerprint.OverlayWidgets);\n        _this._domNode.setClassName('overlayWidgets');\n        return _this;\n    }\n    ViewOverlayWidgets.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._widgets = {};\n    };\n    ViewOverlayWidgets.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    // ---- begin view event handlers\n    ViewOverlayWidgets.prototype.onConfigurationChanged = function (e) {\n        if (e.layoutInfo) {\n            this._verticalScrollbarWidth = this._context.configuration.editor.layoutInfo.verticalScrollbarWidth;\n            this._minimapWidth = this._context.configuration.editor.layoutInfo.minimapWidth;\n            this._horizontalScrollbarHeight = this._context.configuration.editor.layoutInfo.horizontalScrollbarHeight;\n            this._editorHeight = this._context.configuration.editor.layoutInfo.height;\n            this._editorWidth = this._context.configuration.editor.layoutInfo.width;\n            return true;\n        }\n        return false;\n    };\n    // ---- end view event handlers\n    ViewOverlayWidgets.prototype.addWidget = function (widget) {\n        var domNode = fastDomNode_1.createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        this._domNode.appendChild(domNode);\n        this.setShouldRender();\n    };\n    ViewOverlayWidgets.prototype.setWidgetPosition = function (widget, preference) {\n        var widgetData = this._widgets[widget.getId()];\n        if (widgetData.preference === preference) {\n            return false;\n        }\n        widgetData.preference = preference;\n        this.setShouldRender();\n        return true;\n    };\n    ViewOverlayWidgets.prototype.removeWidget = function (widget) {\n        var widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            var widgetData = this._widgets[widgetId];\n            var domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.parentNode.removeChild(domNode);\n            this.setShouldRender();\n        }\n    };\n    ViewOverlayWidgets.prototype._renderWidget = function (widgetData) {\n        var domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.unsetTop();\n            return;\n        }\n        if (widgetData.preference === editorBrowser_1.OverlayWidgetPositionPreference.TOP_RIGHT_CORNER) {\n            domNode.setTop(0);\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === editorBrowser_1.OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n            var widgetHeight = domNode.domNode.clientHeight;\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === editorBrowser_1.OverlayWidgetPositionPreference.TOP_CENTER) {\n            domNode.setTop(0);\n            domNode.domNode.style.right = '50%';\n        }\n    };\n    ViewOverlayWidgets.prototype.prepareRender = function (ctx) {\n        // Nothing to read\n    };\n    ViewOverlayWidgets.prototype.render = function (ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        var keys = Object.keys(this._widgets);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId]);\n        }\n    };\n    return ViewOverlayWidgets;\n}(viewPart_1.ViewPart));\nexports.ViewOverlayWidgets = ViewOverlayWidgets;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,mCAAiC;AACjC,2DAA6E;AAC7E,iEAAkG;AAClG,4DAA8F;AAe9F;IAAwC,8CAAQ;IAW/C,4BAAY,OAAoB;QAAhC,YACC,kBAAM,OAAO,CAAC,SAYd;QAVA,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC;QACpG,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;QAChF,KAAI,CAAC,0BAA0B,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,yBAAyB,CAAC;QAC1G,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QAC1E,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;QAExE,KAAI,CAAC,QAAQ,GAAG,+BAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACjE,2BAAgB,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,0BAAe,CAAC,cAAc,CAAC,CAAC;QACtE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;;IAC9C,CAAC;IAEM,oCAAO,GAAd;QACC,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC;IAEM,uCAAU,GAAjB;QACC,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,iCAAiC;IAE1B,mDAAsB,GAA7B,UAA8B,CAA2C;QACxE,IAAI,CAAC,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC;YACpG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;YAChF,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,yBAAyB,CAAC;YAC1G,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;YACxE,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,+BAA+B;IAExB,sCAAS,GAAhB,UAAiB,MAAsB;QACtC,IAAM,OAAO,GAAG,+BAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;QAEvD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG;YAC/B,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,OAAO;SAChB,CAAC;QAEF,uDAAuD;QACvD,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAChC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,MAAsB,EAAE,UAAkD;QAClG,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACjD,IAAI,UAAU,CAAC,UAAU,KAAK,UAAU,EAAE;YACzC,OAAO,KAAK,CAAC;SACb;QAED,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,yCAAY,GAAnB,UAAoB,MAAsB;QACzC,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YAC3C,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC;YAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE/B,OAAO,CAAC,UAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,EAAE,CAAC;SACvB;IACF,CAAC;IAEO,0CAAa,GAArB,UAAsB,UAAuB;QAC5C,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAEnC,IAAI,UAAU,CAAC,UAAU,KAAK,IAAI,EAAE;YACnC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO;SACP;QAED,IAAI,UAAU,CAAC,UAAU,KAAK,+CAA+B,CAAC,gBAAgB,EAAE;YAC/E,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1E;aAAM,IAAI,UAAU,CAAC,UAAU,KAAK,+CAA+B,CAAC,mBAAmB,EAAE;YACzF,IAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;YAClD,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAC1F,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1E;aAAM,IAAI,UAAU,CAAC,UAAU,KAAK,+CAA+B,CAAC,UAAU,EAAE;YAChF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;SACpC;IACF,CAAC;IAEM,0CAAa,GAApB,UAAqB,GAAqB;QACzC,kBAAkB;IACnB,CAAC;IAEM,mCAAM,GAAb,UAAc,GAA+B;QAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE1C,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAChD,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5C;IACF,CAAC;IACF,yBAAC;AAAD,CAAC,AA9HD,CAAwC,mBAAQ,GA8H/C;AA9HY,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./overlayWidgets';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IOverlayWidget, OverlayWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\n\ninterface IWidgetData {\n\twidget: IOverlayWidget;\n\tpreference: OverlayWidgetPositionPreference | null;\n\tdomNode: FastDomNode<HTMLElement>;\n}\n\ninterface IWidgetMap {\n\t[key: string]: IWidgetData;\n}\n\nexport class ViewOverlayWidgets extends ViewPart {\n\n\tprivate _widgets: IWidgetMap;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate _verticalScrollbarWidth: number;\n\tprivate _minimapWidth: number;\n\tprivate _horizontalScrollbarHeight: number;\n\tprivate _editorHeight: number;\n\tprivate _editorWidth: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._widgets = {};\n\t\tthis._verticalScrollbarWidth = this._context.configuration.editor.layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = this._context.configuration.editor.layoutInfo.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = this._context.configuration.editor.layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = this._context.configuration.editor.layoutInfo.height;\n\t\tthis._editorWidth = this._context.configuration.editor.layoutInfo.width;\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.OverlayWidgets);\n\t\tthis._domNode.setClassName('overlayWidgets');\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.layoutInfo) {\n\t\t\tthis._verticalScrollbarWidth = this._context.configuration.editor.layoutInfo.verticalScrollbarWidth;\n\t\t\tthis._minimapWidth = this._context.configuration.editor.layoutInfo.minimapWidth;\n\t\t\tthis._horizontalScrollbarHeight = this._context.configuration.editor.layoutInfo.horizontalScrollbarHeight;\n\t\t\tthis._editorHeight = this._context.configuration.editor.layoutInfo.height;\n\t\t\tthis._editorWidth = this._context.configuration.editor.layoutInfo.width;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic addWidget(widget: IOverlayWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: null,\n\t\t\tdomNode: domNode\n\t\t};\n\n\t\t// This is sync because a widget wants to be in the dom\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.setAttribute('widgetId', widget.getId());\n\t\tthis._domNode.appendChild(domNode);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IOverlayWidget, preference: OverlayWidgetPositionPreference | null): boolean {\n\t\tconst widgetData = this._widgets[widget.getId()];\n\t\tif (widgetData.preference === preference) {\n\t\t\treturn false;\n\t\t}\n\n\t\twidgetData.preference = preference;\n\t\tthis.setShouldRender();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IOverlayWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.parentNode!.removeChild(domNode);\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\tprivate _renderWidget(widgetData: IWidgetData): void {\n\t\tconst domNode = widgetData.domNode;\n\n\t\tif (widgetData.preference === null) {\n\t\t\tdomNode.unsetTop();\n\t\t\treturn;\n\t\t}\n\n\t\tif (widgetData.preference === OverlayWidgetPositionPreference.TOP_RIGHT_CORNER) {\n\t\t\tdomNode.setTop(0);\n\t\t\tdomNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n\t\t} else if (widgetData.preference === OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n\t\t\tconst widgetHeight = domNode.domNode.clientHeight;\n\t\t\tdomNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n\t\t\tdomNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n\t\t} else if (widgetData.preference === OverlayWidgetPositionPreference.TOP_CENTER) {\n\t\t\tdomNode.setTop(0);\n\t\t\tdomNode.domNode.style.right = '50%';\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._editorWidth);\n\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tthis._renderWidget(this._widgets[widgetId]);\n\t\t}\n\t}\n}\n"]}]}