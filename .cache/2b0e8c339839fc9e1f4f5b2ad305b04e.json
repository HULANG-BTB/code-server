{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/wordHighlighter/wordHighlighter.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/wordHighlighter/wordHighlighter.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar async_1 = require(\"vs/base/common/async\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar cursorEvents_1 = require(\"vs/editor/common/controller/cursorEvents\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nexports.editorWordHighlight = colorRegistry_1.registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hc: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nexports.editorWordHighlightStrong = colorRegistry_1.registerColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hc: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nexports.editorWordHighlightBorder = colorRegistry_1.registerColor('editor.wordHighlightBorder', { light: null, dark: null, hc: colorRegistry_1.activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\nexports.editorWordHighlightStrongBorder = colorRegistry_1.registerColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hc: colorRegistry_1.activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\nexports.overviewRulerWordHighlightForeground = colorRegistry_1.registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexports.overviewRulerWordHighlightStrongForeground = colorRegistry_1.registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hc: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexports.ctxHasWordHighlights = new contextkey_1.RawContextKey('hasWordHighlights', false);\nfunction getOccurrencesAtPosition(model, position, token) {\n    var orderedByScore = modes_1.DocumentHighlightProviderRegistry.ordered(model);\n    // in order of score ask the occurrences provider\n    // until someone response with a good result\n    // (good = none empty array)\n    return async_1.first(orderedByScore.map(function (provider) { return function () {\n        return Promise.resolve(provider.provideDocumentHighlights(model, position, token))\n            .then(undefined, errors_1.onUnexpectedExternalError);\n    }; }), arrays.isNonEmptyArray);\n}\nexports.getOccurrencesAtPosition = getOccurrencesAtPosition;\nvar OccurenceAtPositionRequest = /** @class */ (function () {\n    function OccurenceAtPositionRequest(model, selection, wordSeparators) {\n        var _this = this;\n        this._wordRange = this._getCurrentWordRange(model, selection);\n        this.result = async_1.createCancelablePromise(function (token) { return _this._compute(model, selection, wordSeparators, token); });\n    }\n    OccurenceAtPositionRequest.prototype._getCurrentWordRange = function (model, selection) {\n        var word = model.getWordAtPosition(selection.getPosition());\n        if (word) {\n            return new range_1.Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n        }\n        return null;\n    };\n    OccurenceAtPositionRequest.prototype.isValid = function (model, selection, decorationIds) {\n        var lineNumber = selection.startLineNumber;\n        var startColumn = selection.startColumn;\n        var endColumn = selection.endColumn;\n        var currentWordRange = this._getCurrentWordRange(model, selection);\n        var requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\n        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n        // (Same symbol)\n        for (var i = 0, len = decorationIds.length; !requestIsValid && i < len; i++) {\n            var range = model.getDecorationRange(decorationIds[i]);\n            if (range && range.startLineNumber === lineNumber) {\n                if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\n                    requestIsValid = true;\n                }\n            }\n        }\n        return requestIsValid;\n    };\n    OccurenceAtPositionRequest.prototype.cancel = function () {\n        this.result.cancel();\n    };\n    return OccurenceAtPositionRequest;\n}());\nvar SemanticOccurenceAtPositionRequest = /** @class */ (function (_super) {\n    tslib_1.__extends(SemanticOccurenceAtPositionRequest, _super);\n    function SemanticOccurenceAtPositionRequest() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SemanticOccurenceAtPositionRequest.prototype._compute = function (model, selection, wordSeparators, token) {\n        return getOccurrencesAtPosition(model, selection.getPosition(), token).then(function (value) { return value || []; });\n    };\n    return SemanticOccurenceAtPositionRequest;\n}(OccurenceAtPositionRequest));\nvar TextualOccurenceAtPositionRequest = /** @class */ (function (_super) {\n    tslib_1.__extends(TextualOccurenceAtPositionRequest, _super);\n    function TextualOccurenceAtPositionRequest(model, selection, wordSeparators) {\n        var _this = _super.call(this, model, selection, wordSeparators) || this;\n        _this._selectionIsEmpty = selection.isEmpty();\n        return _this;\n    }\n    TextualOccurenceAtPositionRequest.prototype._compute = function (model, selection, wordSeparators, token) {\n        return async_1.timeout(250, token).then(function () {\n            if (!selection.isEmpty()) {\n                return [];\n            }\n            var word = model.getWordAtPosition(selection.getPosition());\n            if (!word) {\n                return [];\n            }\n            var matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\n            return matches.map(function (m) {\n                return {\n                    range: m.range,\n                    kind: modes_1.DocumentHighlightKind.Text\n                };\n            });\n        });\n    };\n    TextualOccurenceAtPositionRequest.prototype.isValid = function (model, selection, decorationIds) {\n        var currentSelectionIsEmpty = selection.isEmpty();\n        if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\n            return false;\n        }\n        return _super.prototype.isValid.call(this, model, selection, decorationIds);\n    };\n    return TextualOccurenceAtPositionRequest;\n}(OccurenceAtPositionRequest));\nfunction computeOccurencesAtPosition(model, selection, wordSeparators) {\n    if (modes_1.DocumentHighlightProviderRegistry.has(model)) {\n        return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);\n    }\n    return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\n}\neditorExtensions_1.registerDefaultLanguageCommand('_executeDocumentHighlights', function (model, position) { return getOccurrencesAtPosition(model, position, cancellation_1.CancellationToken.None); });\nvar WordHighlighter = /** @class */ (function () {\n    function WordHighlighter(editor, contextKeyService) {\n        var _this = this;\n        this.workerRequestTokenId = 0;\n        this.workerRequestCompleted = false;\n        this.workerRequestValue = [];\n        this.lastCursorPositionChangeTime = 0;\n        this.renderDecorationsTimer = -1;\n        this.editor = editor;\n        this._hasWordHighlights = exports.ctxHasWordHighlights.bindTo(contextKeyService);\n        this._ignorePositionChangeEvent = false;\n        this.occurrencesHighlight = this.editor.getConfiguration().contribInfo.occurrencesHighlight;\n        this.model = this.editor.getModel();\n        this.toUnhook = [];\n        this.toUnhook.push(editor.onDidChangeCursorPosition(function (e) {\n            if (_this._ignorePositionChangeEvent) {\n                // We are changing the position => ignore this event\n                return;\n            }\n            if (!_this.occurrencesHighlight) {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            _this._onPositionChanged(e);\n        }));\n        this.toUnhook.push(editor.onDidChangeModelContent(function (e) {\n            _this._stopAll();\n        }));\n        this.toUnhook.push(editor.onDidChangeConfiguration(function (e) {\n            var newValue = _this.editor.getConfiguration().contribInfo.occurrencesHighlight;\n            if (_this.occurrencesHighlight !== newValue) {\n                _this.occurrencesHighlight = newValue;\n                _this._stopAll();\n            }\n        }));\n        this._decorationIds = [];\n        this.workerRequestTokenId = 0;\n        this.workerRequest = null;\n        this.workerRequestCompleted = false;\n        this.lastCursorPositionChangeTime = 0;\n        this.renderDecorationsTimer = -1;\n    }\n    WordHighlighter.prototype.hasDecorations = function () {\n        return (this._decorationIds.length > 0);\n    };\n    WordHighlighter.prototype.restore = function () {\n        if (!this.occurrencesHighlight) {\n            return;\n        }\n        this._run();\n    };\n    WordHighlighter.prototype._getSortedHighlights = function () {\n        var _this = this;\n        return arrays.coalesce(this._decorationIds\n            .map(function (id) { return _this.model.getDecorationRange(id); })\n            .sort(range_1.Range.compareRangesUsingStarts));\n    };\n    WordHighlighter.prototype.moveNext = function () {\n        var _this = this;\n        var highlights = this._getSortedHighlights();\n        var index = arrays.firstIndex(highlights, function (range) { return range.containsPosition(_this.editor.getPosition()); });\n        var newIndex = ((index + 1) % highlights.length);\n        var dest = highlights[newIndex];\n        try {\n            this._ignorePositionChangeEvent = true;\n            this.editor.setPosition(dest.getStartPosition());\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\n        }\n        finally {\n            this._ignorePositionChangeEvent = false;\n        }\n    };\n    WordHighlighter.prototype.moveBack = function () {\n        var _this = this;\n        var highlights = this._getSortedHighlights();\n        var index = arrays.firstIndex(highlights, function (range) { return range.containsPosition(_this.editor.getPosition()); });\n        var newIndex = ((index - 1 + highlights.length) % highlights.length);\n        var dest = highlights[newIndex];\n        try {\n            this._ignorePositionChangeEvent = true;\n            this.editor.setPosition(dest.getStartPosition());\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\n        }\n        finally {\n            this._ignorePositionChangeEvent = false;\n        }\n    };\n    WordHighlighter.prototype._removeDecorations = function () {\n        if (this._decorationIds.length > 0) {\n            // remove decorations\n            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\n            this._hasWordHighlights.set(false);\n        }\n    };\n    WordHighlighter.prototype._stopAll = function () {\n        // Remove any existing decorations\n        this._removeDecorations();\n        // Cancel any renderDecorationsTimer\n        if (this.renderDecorationsTimer !== -1) {\n            clearTimeout(this.renderDecorationsTimer);\n            this.renderDecorationsTimer = -1;\n        }\n        // Cancel any worker request\n        if (this.workerRequest !== null) {\n            this.workerRequest.cancel();\n            this.workerRequest = null;\n        }\n        // Invalidate any worker request callback\n        if (!this.workerRequestCompleted) {\n            this.workerRequestTokenId++;\n            this.workerRequestCompleted = true;\n        }\n    };\n    WordHighlighter.prototype._onPositionChanged = function (e) {\n        // disabled\n        if (!this.occurrencesHighlight) {\n            this._stopAll();\n            return;\n        }\n        // ignore typing & other\n        if (e.reason !== cursorEvents_1.CursorChangeReason.Explicit) {\n            this._stopAll();\n            return;\n        }\n        this._run();\n    };\n    WordHighlighter.prototype._run = function () {\n        var _this = this;\n        var editorSelection = this.editor.getSelection();\n        // ignore multiline selection\n        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n            this._stopAll();\n            return;\n        }\n        var lineNumber = editorSelection.startLineNumber;\n        var startColumn = editorSelection.startColumn;\n        var endColumn = editorSelection.endColumn;\n        var word = this.model.getWordAtPosition({\n            lineNumber: lineNumber,\n            column: startColumn\n        });\n        // The selection must be inside a word or surround one word at most\n        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n            this._stopAll();\n            return;\n        }\n        // All the effort below is trying to achieve this:\n        // - when cursor is moved to a word, trigger immediately a findOccurrences request\n        // - 250ms later after the last cursor move event, render the occurrences\n        // - no flickering!\n        var workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds));\n        // There are 4 cases:\n        // a) old workerRequest is valid & completed, renderDecorationsTimer fired\n        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\n        // c) old workerRequest is valid, but not completed\n        // d) old workerRequest is not valid\n        // For a) no action is needed\n        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\n        this.lastCursorPositionChangeTime = (new Date()).getTime();\n        if (workerRequestIsValid) {\n            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\n                // case b)\n                // Delay the firing of renderDecorationsTimer by an extra 250 ms\n                clearTimeout(this.renderDecorationsTimer);\n                this.renderDecorationsTimer = -1;\n                this._beginRenderDecorations();\n            }\n        }\n        else {\n            // case d)\n            // Stop all previous actions and start fresh\n            this._stopAll();\n            var myRequestId_1 = ++this.workerRequestTokenId;\n            this.workerRequestCompleted = false;\n            this.workerRequest = computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getConfiguration().wordSeparators);\n            this.workerRequest.result.then(function (data) {\n                if (myRequestId_1 === _this.workerRequestTokenId) {\n                    _this.workerRequestCompleted = true;\n                    _this.workerRequestValue = data || [];\n                    _this._beginRenderDecorations();\n                }\n            }, errors_1.onUnexpectedError);\n        }\n    };\n    WordHighlighter.prototype._beginRenderDecorations = function () {\n        var _this = this;\n        var currentTime = (new Date()).getTime();\n        var minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n        if (currentTime >= minimumRenderTime) {\n            // Synchronous\n            this.renderDecorationsTimer = -1;\n            this.renderDecorations();\n        }\n        else {\n            // Asynchronous\n            this.renderDecorationsTimer = setTimeout(function () {\n                _this.renderDecorations();\n            }, (minimumRenderTime - currentTime));\n        }\n    };\n    WordHighlighter.prototype.renderDecorations = function () {\n        this.renderDecorationsTimer = -1;\n        var decorations = [];\n        for (var i = 0, len = this.workerRequestValue.length; i < len; i++) {\n            var info = this.workerRequestValue[i];\n            decorations.push({\n                range: info.range,\n                options: WordHighlighter._getDecorationOptions(info.kind)\n            });\n        }\n        this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\n        this._hasWordHighlights.set(this.hasDecorations());\n    };\n    WordHighlighter._getDecorationOptions = function (kind) {\n        if (kind === modes_1.DocumentHighlightKind.Write) {\n            return this._WRITE_OPTIONS;\n        }\n        else if (kind === modes_1.DocumentHighlightKind.Text) {\n            return this._TEXT_OPTIONS;\n        }\n        else {\n            return this._REGULAR_OPTIONS;\n        }\n    };\n    WordHighlighter.prototype.dispose = function () {\n        this._stopAll();\n        this.toUnhook = lifecycle_1.dispose(this.toUnhook);\n    };\n    WordHighlighter._WRITE_OPTIONS = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'wordHighlightStrong',\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(exports.overviewRulerWordHighlightStrongForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    WordHighlighter._TEXT_OPTIONS = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'selectionHighlight',\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(colorRegistry_1.overviewRulerSelectionHighlightForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    WordHighlighter._REGULAR_OPTIONS = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'wordHighlight',\n        overviewRuler: {\n            color: themeService_1.themeColorFromId(exports.overviewRulerWordHighlightForeground),\n            position: model_1.OverviewRulerLane.Center\n        }\n    });\n    return WordHighlighter;\n}());\nvar WordHighlighterContribution = /** @class */ (function (_super) {\n    tslib_1.__extends(WordHighlighterContribution, _super);\n    function WordHighlighterContribution(editor, contextKeyService) {\n        var _this = _super.call(this) || this;\n        var createWordHighlighterIfPossible = function () {\n            if (editor.hasModel()) {\n                _this.wordHighligher = new WordHighlighter(editor, contextKeyService);\n            }\n        };\n        _this._register(editor.onDidChangeModel(function (e) {\n            if (_this.wordHighligher) {\n                _this.wordHighligher.dispose();\n                _this.wordHighligher = null;\n            }\n            createWordHighlighterIfPossible();\n        }));\n        createWordHighlighterIfPossible();\n        return _this;\n    }\n    WordHighlighterContribution.get = function (editor) {\n        return editor.getContribution(WordHighlighterContribution.ID);\n    };\n    WordHighlighterContribution.prototype.getId = function () {\n        return WordHighlighterContribution.ID;\n    };\n    WordHighlighterContribution.prototype.saveViewState = function () {\n        if (this.wordHighligher && this.wordHighligher.hasDecorations()) {\n            return true;\n        }\n        return false;\n    };\n    WordHighlighterContribution.prototype.moveNext = function () {\n        if (this.wordHighligher) {\n            this.wordHighligher.moveNext();\n        }\n    };\n    WordHighlighterContribution.prototype.moveBack = function () {\n        if (this.wordHighligher) {\n            this.wordHighligher.moveBack();\n        }\n    };\n    WordHighlighterContribution.prototype.restoreViewState = function (state) {\n        if (this.wordHighligher && state) {\n            this.wordHighligher.restore();\n        }\n    };\n    WordHighlighterContribution.prototype.dispose = function () {\n        if (this.wordHighligher) {\n            this.wordHighligher.dispose();\n            this.wordHighligher = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    WordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\n    WordHighlighterContribution = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService)\n    ], WordHighlighterContribution);\n    return WordHighlighterContribution;\n}(lifecycle_1.Disposable));\nvar WordHighlightNavigationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(WordHighlightNavigationAction, _super);\n    function WordHighlightNavigationAction(next, opts) {\n        var _this = _super.call(this, opts) || this;\n        _this._isNext = next;\n        return _this;\n    }\n    WordHighlightNavigationAction.prototype.run = function (accessor, editor) {\n        var controller = WordHighlighterContribution.get(editor);\n        if (!controller) {\n            return;\n        }\n        if (this._isNext) {\n            controller.moveNext();\n        }\n        else {\n            controller.moveBack();\n        }\n    };\n    return WordHighlightNavigationAction;\n}(editorExtensions_1.EditorAction));\nvar NextWordHighlightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NextWordHighlightAction, _super);\n    function NextWordHighlightAction() {\n        return _super.call(this, true, {\n            id: 'editor.action.wordHighlight.next',\n            label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\n            alias: 'Go to Next Symbol Highlight',\n            precondition: exports.ctxHasWordHighlights,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyCode.F7,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    return NextWordHighlightAction;\n}(WordHighlightNavigationAction));\nvar PrevWordHighlightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(PrevWordHighlightAction, _super);\n    function PrevWordHighlightAction() {\n        return _super.call(this, false, {\n            id: 'editor.action.wordHighlight.prev',\n            label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\n            alias: 'Go to Previous Symbol Highlight',\n            precondition: exports.ctxHasWordHighlights,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F7,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    return PrevWordHighlightAction;\n}(WordHighlightNavigationAction));\nvar TriggerWordHighlightAction = /** @class */ (function (_super) {\n    tslib_1.__extends(TriggerWordHighlightAction, _super);\n    function TriggerWordHighlightAction() {\n        return _super.call(this, {\n            id: 'editor.action.wordHighlight.trigger',\n            label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\n            alias: 'Trigger Symbol Highlight',\n            precondition: exports.ctxHasWordHighlights.toNegated(),\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: 0,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    TriggerWordHighlightAction.prototype.run = function (accessor, editor, args) {\n        var controller = WordHighlighterContribution.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.restoreViewState(true);\n    };\n    return TriggerWordHighlightAction;\n}(editorExtensions_1.EditorAction));\neditorExtensions_1.registerEditorContribution(WordHighlighterContribution);\neditorExtensions_1.registerEditorAction(NextWordHighlightAction);\neditorExtensions_1.registerEditorAction(PrevWordHighlightAction);\neditorExtensions_1.registerEditorAction(TriggerWordHighlightAction);\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var selectionHighlight = theme.getColor(colorRegistry_1.editorSelectionHighlight);\n    if (selectionHighlight) {\n        collector.addRule(\".monaco-editor .focused .selectionHighlight { background-color: \" + selectionHighlight + \"; }\");\n        collector.addRule(\".monaco-editor .selectionHighlight { background-color: \" + selectionHighlight.transparent(0.5) + \"; }\");\n    }\n    var wordHighlight = theme.getColor(exports.editorWordHighlight);\n    if (wordHighlight) {\n        collector.addRule(\".monaco-editor .wordHighlight { background-color: \" + wordHighlight + \"; }\");\n    }\n    var wordHighlightStrong = theme.getColor(exports.editorWordHighlightStrong);\n    if (wordHighlightStrong) {\n        collector.addRule(\".monaco-editor .wordHighlightStrong { background-color: \" + wordHighlightStrong + \"; }\");\n    }\n    var selectionHighlightBorder = theme.getColor(colorRegistry_1.editorSelectionHighlightBorder);\n    if (selectionHighlightBorder) {\n        collector.addRule(\".monaco-editor .selectionHighlight { border: 1px \" + (theme.type === 'hc' ? 'dotted' : 'solid') + \" \" + selectionHighlightBorder + \"; box-sizing: border-box; }\");\n    }\n    var wordHighlightBorder = theme.getColor(exports.editorWordHighlightBorder);\n    if (wordHighlightBorder) {\n        collector.addRule(\".monaco-editor .wordHighlight { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + wordHighlightBorder + \"; box-sizing: border-box; }\");\n    }\n    var wordHighlightStrongBorder = theme.getColor(exports.editorWordHighlightStrongBorder);\n    if (wordHighlightStrongBorder) {\n        collector.addRule(\".monaco-editor .wordHighlightStrong { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + wordHighlightStrongBorder + \"; box-sizing: border-box; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/wordHighlighter/wordHighlighter.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/wordHighlighter/wordHighlighter.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, first, timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IActiveCodeEditor, ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, IActionOptions, registerDefaultLanguageCommand, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { CursorChangeReason, ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IModelDeltaDecoration, ITextModel, OverviewRulerLane, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { DocumentHighlight, DocumentHighlightKind, DocumentHighlightProviderRegistry } from 'vs/editor/common/modes';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { activeContrastBorder, editorSelectionHighlight, editorSelectionHighlightBorder, overviewRulerSelectionHighlightForeground, registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant, themeColorFromId } from 'vs/platform/theme/common/themeService';\n\nexport const editorWordHighlight = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hc: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWordHighlightStrong = registerColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hc: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\nexport const editorWordHighlightStrongBorder = registerColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\n\nexport const overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hc: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\n\nexport const ctxHasWordHighlights = new RawContextKey<boolean>('hasWordHighlights', false);\n\nexport function getOccurrencesAtPosition(model: ITextModel, position: Position, token: CancellationToken): Promise<DocumentHighlight[] | null | undefined> {\n\n\tconst orderedByScore = DocumentHighlightProviderRegistry.ordered(model);\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = none empty array)\n\treturn first<DocumentHighlight[] | null | undefined>(orderedByScore.map(provider => () => {\n\t\treturn Promise.resolve(provider.provideDocumentHighlights(model, position, token))\n\t\t\t.then(undefined, onUnexpectedExternalError);\n\t}), arrays.isNonEmptyArray);\n}\n\ninterface IOccurenceAtPositionRequest {\n\treadonly result: Promise<DocumentHighlight[]>;\n\tisValid(model: ITextModel, selection: Selection, decorationIds: string[]): boolean;\n\tcancel(): void;\n}\n\nabstract class OccurenceAtPositionRequest implements IOccurenceAtPositionRequest {\n\n\tprivate readonly _wordRange: Range | null;\n\tpublic readonly result: CancelablePromise<DocumentHighlight[]>;\n\n\tconstructor(model: ITextModel, selection: Selection, wordSeparators: string) {\n\t\tthis._wordRange = this._getCurrentWordRange(model, selection);\n\t\tthis.result = createCancelablePromise(token => this._compute(model, selection, wordSeparators, token));\n\t}\n\n\tprotected abstract _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<DocumentHighlight[]>;\n\n\tprivate _getCurrentWordRange(model: ITextModel, selection: Selection): Range | null {\n\t\tconst word = model.getWordAtPosition(selection.getPosition());\n\t\tif (word) {\n\t\t\treturn new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic isValid(model: ITextModel, selection: Selection, decorationIds: string[]): boolean {\n\n\t\tconst lineNumber = selection.startLineNumber;\n\t\tconst startColumn = selection.startColumn;\n\t\tconst endColumn = selection.endColumn;\n\t\tconst currentWordRange = this._getCurrentWordRange(model, selection);\n\n\t\tlet requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\n\n\t\t// Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n\t\t// (Same symbol)\n\t\tfor (let i = 0, len = decorationIds.length; !requestIsValid && i < len; i++) {\n\t\t\tlet range = model.getDecorationRange(decorationIds[i]);\n\t\t\tif (range && range.startLineNumber === lineNumber) {\n\t\t\t\tif (range.startColumn <= startColumn && range.endColumn >= endColumn) {\n\t\t\t\t\trequestIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn requestIsValid;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.result.cancel();\n\t}\n}\n\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n\tprotected _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<DocumentHighlight[]> {\n\t\treturn getOccurrencesAtPosition(model, selection.getPosition(), token).then(value => value || []);\n\t}\n}\n\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\n\n\tprivate readonly _selectionIsEmpty: boolean;\n\n\tconstructor(model: ITextModel, selection: Selection, wordSeparators: string) {\n\t\tsuper(model, selection, wordSeparators);\n\t\tthis._selectionIsEmpty = selection.isEmpty();\n\t}\n\n\tprotected _compute(model: ITextModel, selection: Selection, wordSeparators: string, token: CancellationToken): Promise<DocumentHighlight[]> {\n\t\treturn timeout(250, token).then(() => {\n\t\t\tif (!selection.isEmpty()) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst word = model.getWordAtPosition(selection.getPosition());\n\n\t\t\tif (!word) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\n\t\t\treturn matches.map(m => {\n\t\t\t\treturn {\n\t\t\t\t\trange: m.range,\n\t\t\t\t\tkind: DocumentHighlightKind.Text\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic isValid(model: ITextModel, selection: Selection, decorationIds: string[]): boolean {\n\t\tconst currentSelectionIsEmpty = selection.isEmpty();\n\t\tif (this._selectionIsEmpty !== currentSelectionIsEmpty) {\n\t\t\treturn false;\n\t\t}\n\t\treturn super.isValid(model, selection, decorationIds);\n\t}\n}\n\nfunction computeOccurencesAtPosition(model: ITextModel, selection: Selection, wordSeparators: string): IOccurenceAtPositionRequest {\n\tif (DocumentHighlightProviderRegistry.has(model)) {\n\t\treturn new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);\n\t}\n\treturn new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\n}\n\nregisterDefaultLanguageCommand('_executeDocumentHighlights', (model, position) => getOccurrencesAtPosition(model, position, CancellationToken.None));\n\nclass WordHighlighter {\n\n\tprivate readonly editor: IActiveCodeEditor;\n\tprivate occurrencesHighlight: boolean;\n\tprivate readonly model: ITextModel;\n\tprivate _decorationIds: string[];\n\tprivate toUnhook: IDisposable[];\n\n\tprivate workerRequestTokenId: number = 0;\n\tprivate workerRequest: IOccurenceAtPositionRequest | null;\n\tprivate workerRequestCompleted: boolean = false;\n\tprivate workerRequestValue: DocumentHighlight[] = [];\n\n\tprivate lastCursorPositionChangeTime: number = 0;\n\tprivate renderDecorationsTimer: any = -1;\n\n\tprivate readonly _hasWordHighlights: IContextKey<boolean>;\n\tprivate _ignorePositionChangeEvent: boolean;\n\n\tconstructor(editor: IActiveCodeEditor, contextKeyService: IContextKeyService) {\n\t\tthis.editor = editor;\n\t\tthis._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\n\t\tthis._ignorePositionChangeEvent = false;\n\t\tthis.occurrencesHighlight = this.editor.getConfiguration().contribInfo.occurrencesHighlight;\n\t\tthis.model = this.editor.getModel();\n\t\tthis.toUnhook = [];\n\t\tthis.toUnhook.push(editor.onDidChangeCursorPosition((e: ICursorPositionChangedEvent) => {\n\n\t\t\tif (this._ignorePositionChangeEvent) {\n\t\t\t\t// We are changing the position => ignore this event\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.occurrencesHighlight) {\n\t\t\t\t// Early exit if nothing needs to be done!\n\t\t\t\t// Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._onPositionChanged(e);\n\t\t}));\n\t\tthis.toUnhook.push(editor.onDidChangeModelContent((e) => {\n\t\t\tthis._stopAll();\n\t\t}));\n\t\tthis.toUnhook.push(editor.onDidChangeConfiguration((e) => {\n\t\t\tlet newValue = this.editor.getConfiguration().contribInfo.occurrencesHighlight;\n\t\t\tif (this.occurrencesHighlight !== newValue) {\n\t\t\t\tthis.occurrencesHighlight = newValue;\n\t\t\t\tthis._stopAll();\n\t\t\t}\n\t\t}));\n\n\t\tthis._decorationIds = [];\n\t\tthis.workerRequestTokenId = 0;\n\t\tthis.workerRequest = null;\n\t\tthis.workerRequestCompleted = false;\n\n\t\tthis.lastCursorPositionChangeTime = 0;\n\t\tthis.renderDecorationsTimer = -1;\n\t}\n\n\tpublic hasDecorations(): boolean {\n\t\treturn (this._decorationIds.length > 0);\n\t}\n\n\tpublic restore(): void {\n\t\tif (!this.occurrencesHighlight) {\n\t\t\treturn;\n\t\t}\n\t\tthis._run();\n\t}\n\n\tprivate _getSortedHighlights(): Range[] {\n\t\treturn arrays.coalesce(\n\t\t\tthis._decorationIds\n\t\t\t\t.map((id) => this.model.getDecorationRange(id))\n\t\t\t\t.sort(Range.compareRangesUsingStarts)\n\t\t);\n\t}\n\n\tpublic moveNext() {\n\t\tlet highlights = this._getSortedHighlights();\n\t\tlet index = arrays.firstIndex(highlights, (range) => range.containsPosition(this.editor.getPosition()));\n\t\tlet newIndex = ((index + 1) % highlights.length);\n\t\tlet dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tpublic moveBack() {\n\t\tlet highlights = this._getSortedHighlights();\n\t\tlet index = arrays.firstIndex(highlights, (range) => range.containsPosition(this.editor.getPosition()));\n\t\tlet newIndex = ((index - 1 + highlights.length) % highlights.length);\n\t\tlet dest = highlights[newIndex];\n\t\ttry {\n\t\t\tthis._ignorePositionChangeEvent = true;\n\t\t\tthis.editor.setPosition(dest.getStartPosition());\n\t\t\tthis.editor.revealRangeInCenterIfOutsideViewport(dest);\n\t\t} finally {\n\t\t\tthis._ignorePositionChangeEvent = false;\n\t\t}\n\t}\n\n\tprivate _removeDecorations(): void {\n\t\tif (this._decorationIds.length > 0) {\n\t\t\t// remove decorations\n\t\t\tthis._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\n\t\t\tthis._hasWordHighlights.set(false);\n\t\t}\n\t}\n\n\tprivate _stopAll(): void {\n\t\t// Remove any existing decorations\n\t\tthis._removeDecorations();\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _onPositionChanged(e: ICursorPositionChangedEvent): void {\n\n\t\t// disabled\n\t\tif (!this.occurrencesHighlight) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore typing & other\n\t\tif (e.reason !== CursorChangeReason.Explicit) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._run();\n\t}\n\n\tprivate _run(): void {\n\t\tlet editorSelection = this.editor.getSelection();\n\n\t\t// ignore multiline selection\n\t\tif (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tlet lineNumber = editorSelection.startLineNumber;\n\t\tlet startColumn = editorSelection.startColumn;\n\t\tlet endColumn = editorSelection.endColumn;\n\n\t\tlet word = this.model.getWordAtPosition({\n\t\t\tlineNumber: lineNumber,\n\t\t\tcolumn: startColumn\n\t\t});\n\n\t\t// The selection must be inside a word or surround one word at most\n\t\tif (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// All the effort below is trying to achieve this:\n\t\t// - when cursor is moved to a word, trigger immediately a findOccurrences request\n\t\t// - 250ms later after the last cursor move event, render the occurrences\n\t\t// - no flickering!\n\n\t\tconst workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds));\n\n\t\t// There are 4 cases:\n\t\t// a) old workerRequest is valid & completed, renderDecorationsTimer fired\n\t\t// b) old workerRequest is valid & completed, renderDecorationsTimer not fired\n\t\t// c) old workerRequest is valid, but not completed\n\t\t// d) old workerRequest is not valid\n\n\t\t// For a) no action is needed\n\t\t// For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\n\n\t\tthis.lastCursorPositionChangeTime = (new Date()).getTime();\n\n\t\tif (workerRequestIsValid) {\n\t\t\tif (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\n\t\t\t\t// case b)\n\t\t\t\t// Delay the firing of renderDecorationsTimer by an extra 250 ms\n\t\t\t\tclearTimeout(this.renderDecorationsTimer);\n\t\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\t\tthis._beginRenderDecorations();\n\t\t\t}\n\t\t} else {\n\t\t\t// case d)\n\t\t\t// Stop all previous actions and start fresh\n\t\t\tthis._stopAll();\n\n\t\t\tlet myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tthis.workerRequest = computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getConfiguration().wordSeparators);\n\n\t\t\tthis.workerRequest.result.then(data => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate _beginRenderDecorations(): void {\n\t\tlet currentTime = (new Date()).getTime();\n\t\tlet minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n\n\t\tif (currentTime >= minimumRenderTime) {\n\t\t\t// Synchronous\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\tthis.renderDecorations();\n\t\t} else {\n\t\t\t// Asynchronous\n\t\t\tthis.renderDecorationsTimer = setTimeout(() => {\n\t\t\t\tthis.renderDecorations();\n\t\t\t}, (minimumRenderTime - currentTime));\n\t\t}\n\t}\n\n\tprivate renderDecorations(): void {\n\t\tthis.renderDecorationsTimer = -1;\n\t\tlet decorations: IModelDeltaDecoration[] = [];\n\t\tfor (let i = 0, len = this.workerRequestValue.length; i < len; i++) {\n\t\t\tlet info = this.workerRequestValue[i];\n\t\t\tdecorations.push({\n\t\t\t\trange: info.range,\n\t\t\t\toptions: WordHighlighter._getDecorationOptions(info.kind)\n\t\t\t});\n\t\t}\n\n\t\tthis._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\n\t\tthis._hasWordHighlights.set(this.hasDecorations());\n\t}\n\n\tprivate static _getDecorationOptions(kind: DocumentHighlightKind | undefined): ModelDecorationOptions {\n\t\tif (kind === DocumentHighlightKind.Write) {\n\t\t\treturn this._WRITE_OPTIONS;\n\t\t} else if (kind === DocumentHighlightKind.Text) {\n\t\t\treturn this._TEXT_OPTIONS;\n\t\t} else {\n\t\t\treturn this._REGULAR_OPTIONS;\n\t\t}\n\t}\n\n\tprivate static readonly _WRITE_OPTIONS = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'wordHighlightStrong',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerWordHighlightStrongForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _TEXT_OPTIONS = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'selectionHighlight',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerSelectionHighlightForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tprivate static readonly _REGULAR_OPTIONS = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'wordHighlight',\n\t\toverviewRuler: {\n\t\t\tcolor: themeColorFromId(overviewRulerWordHighlightForeground),\n\t\t\tposition: OverviewRulerLane.Center\n\t\t}\n\t});\n\n\tpublic dispose(): void {\n\t\tthis._stopAll();\n\t\tthis.toUnhook = dispose(this.toUnhook);\n\t}\n}\n\nclass WordHighlighterContribution extends Disposable implements editorCommon.IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.wordHighlighter';\n\n\tpublic static get(editor: ICodeEditor): WordHighlighterContribution {\n\t\treturn editor.getContribution<WordHighlighterContribution>(WordHighlighterContribution.ID);\n\t}\n\n\tprivate wordHighligher: WordHighlighter | null;\n\n\tconstructor(editor: ICodeEditor, @IContextKeyService contextKeyService: IContextKeyService) {\n\t\tsuper();\n\t\tconst createWordHighlighterIfPossible = () => {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\tthis.wordHighligher = new WordHighlighter(editor, contextKeyService);\n\t\t\t}\n\t\t};\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tif (this.wordHighligher) {\n\t\t\t\tthis.wordHighligher.dispose();\n\t\t\t\tthis.wordHighligher = null;\n\t\t\t}\n\t\t\tcreateWordHighlighterIfPossible();\n\t\t}));\n\t\tcreateWordHighlighterIfPossible();\n\t}\n\n\tpublic getId(): string {\n\t\treturn WordHighlighterContribution.ID;\n\t}\n\n\tpublic saveViewState(): boolean {\n\t\tif (this.wordHighligher && this.wordHighligher.hasDecorations()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic moveNext() {\n\t\tif (this.wordHighligher) {\n\t\t\tthis.wordHighligher.moveNext();\n\t\t}\n\t}\n\n\tpublic moveBack() {\n\t\tif (this.wordHighligher) {\n\t\t\tthis.wordHighligher.moveBack();\n\t\t}\n\t}\n\n\tpublic restoreViewState(state: boolean | undefined): void {\n\t\tif (this.wordHighligher && state) {\n\t\t\tthis.wordHighligher.restore();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.wordHighligher) {\n\t\t\tthis.wordHighligher.dispose();\n\t\t\tthis.wordHighligher = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\n\nclass WordHighlightNavigationAction extends EditorAction {\n\n\tprivate readonly _isNext: boolean;\n\n\tconstructor(next: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._isNext = next;\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isNext) {\n\t\t\tcontroller.moveNext();\n\t\t} else {\n\t\t\tcontroller.moveBack();\n\t\t}\n\t}\n}\n\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.action.wordHighlight.next',\n\t\t\tlabel: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\n\t\t\talias: 'Go to Next Symbol Highlight',\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.action.wordHighlight.prev',\n\t\t\tlabel: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\n\t\t\talias: 'Go to Previous Symbol Highlight',\n\t\t\tprecondition: ctxHasWordHighlights,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass TriggerWordHighlightAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.wordHighlight.trigger',\n\t\t\tlabel: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\n\t\t\talias: 'Trigger Symbol Highlight',\n\t\t\tprecondition: ctxHasWordHighlights.toNegated(),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: 0,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tconst controller = WordHighlighterContribution.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.restoreViewState(true);\n\t}\n}\n\nregisterEditorContribution(WordHighlighterContribution);\nregisterEditorAction(NextWordHighlightAction);\nregisterEditorAction(PrevWordHighlightAction);\nregisterEditorAction(TriggerWordHighlightAction);\n\nregisterThemingParticipant((theme, collector) => {\n\tconst selectionHighlight = theme.getColor(editorSelectionHighlight);\n\tif (selectionHighlight) {\n\t\tcollector.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${selectionHighlight}; }`);\n\t\tcollector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\n\t}\n\n\tconst wordHighlight = theme.getColor(editorWordHighlight);\n\tif (wordHighlight) {\n\t\tcollector.addRule(`.monaco-editor .wordHighlight { background-color: ${wordHighlight}; }`);\n\t}\n\n\tconst wordHighlightStrong = theme.getColor(editorWordHighlightStrong);\n\tif (wordHighlightStrong) {\n\t\tcollector.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${wordHighlightStrong}; }`);\n\t}\n\n\tconst selectionHighlightBorder = theme.getColor(editorSelectionHighlightBorder);\n\tif (selectionHighlightBorder) {\n\t\tcollector.addRule(`.monaco-editor .selectionHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${selectionHighlightBorder}; box-sizing: border-box; }`);\n\t}\n\n\tconst wordHighlightBorder = theme.getColor(editorWordHighlightBorder);\n\tif (wordHighlightBorder) {\n\t\tcollector.addRule(`.monaco-editor .wordHighlight { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightBorder}; box-sizing: border-box; }`);\n\t}\n\n\tconst wordHighlightStrongBorder = theme.getColor(editorWordHighlightStrongBorder);\n\tif (wordHighlightStrongBorder) {\n\t\tcollector.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightStrongBorder}; box-sizing: border-box; }`);\n\t}\n});\n"]}]}