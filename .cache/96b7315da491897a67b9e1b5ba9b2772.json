{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/titleControl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/titleControl.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dnd_1 = require(\"vs/base/browser/dnd\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar toolbar_1 = require(\"vs/base/browser/ui/toolbar/toolbar\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nrequire(\"vs/css!./media/titlecontrol\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar nls_1 = require(\"vs/nls\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar quickOpen_1 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar actions_2 = require(\"vs/workbench/browser/actions\");\nvar dnd_2 = require(\"vs/workbench/browser/dnd\");\nvar baseEditor_1 = require(\"vs/workbench/browser/parts/editor/baseEditor\");\nvar breadcrumbs_1 = require(\"vs/workbench/browser/parts/editor/breadcrumbs\");\nvar breadcrumbsControl_1 = require(\"vs/workbench/browser/parts/editor/breadcrumbsControl\");\nvar editor_1 = require(\"vs/workbench/browser/parts/editor/editor\");\nvar editor_2 = require(\"vs/workbench/common/editor\");\nvar resources_1 = require(\"vs/workbench/common/resources\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar contextview_1 = require(\"vs/base/browser/ui/contextview/contextview\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar types_1 = require(\"vs/base/common/types\");\nvar TitleControl = /** @class */ (function (_super) {\n    tslib_1.__extends(TitleControl, _super);\n    function TitleControl(parent, accessor, group, contextMenuService, instantiationService, contextKeyService, keybindingService, telemetryService, notificationService, menuService, quickOpenService, themeService, extensionService, configurationService, fileService) {\n        var _this = _super.call(this, themeService) || this;\n        _this.accessor = accessor;\n        _this.group = group;\n        _this.contextMenuService = contextMenuService;\n        _this.instantiationService = instantiationService;\n        _this.contextKeyService = contextKeyService;\n        _this.keybindingService = keybindingService;\n        _this.telemetryService = telemetryService;\n        _this.notificationService = notificationService;\n        _this.menuService = menuService;\n        _this.quickOpenService = quickOpenService;\n        _this.extensionService = extensionService;\n        _this.configurationService = configurationService;\n        _this.fileService = fileService;\n        _this.groupTransfer = dnd_2.LocalSelectionTransfer.getInstance();\n        _this.editorTransfer = dnd_2.LocalSelectionTransfer.getInstance();\n        _this.currentPrimaryEditorActionIds = [];\n        _this.currentSecondaryEditorActionIds = [];\n        _this.editorToolBarMenuDisposables = [];\n        _this.resourceContext = _this._register(instantiationService.createInstance(resources_1.ResourceContextKey));\n        _this.contextMenu = _this._register(_this.menuService.createMenu(actions_1.MenuId.EditorTitleContext, _this.contextKeyService));\n        _this.create(parent);\n        _this.registerListeners();\n        return _this;\n    }\n    TitleControl.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.extensionService.onDidRegisterExtensions(function () { return _this.updateEditorActionsToolbar(); }));\n    };\n    TitleControl.prototype.createBreadcrumbsControl = function (container, options) {\n        var _this = this;\n        var config = this._register(breadcrumbs_1.BreadcrumbsConfig.IsEnabled.bindTo(this.configurationService));\n        this._register(config.onDidChange(function () {\n            var value = config.getValue();\n            if (!value && _this.breadcrumbsControl) {\n                _this.breadcrumbsControl.dispose();\n                _this.breadcrumbsControl = undefined;\n                _this.handleBreadcrumbsEnablementChange();\n            }\n            else if (value && !_this.breadcrumbsControl) {\n                _this.breadcrumbsControl = _this.instantiationService.createInstance(breadcrumbsControl_1.BreadcrumbsControl, container, options, _this.group);\n                _this.breadcrumbsControl.update();\n                _this.handleBreadcrumbsEnablementChange();\n            }\n        }));\n        if (config.getValue()) {\n            this.breadcrumbsControl = this.instantiationService.createInstance(breadcrumbsControl_1.BreadcrumbsControl, container, options, this.group);\n        }\n        this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(function () {\n            if (_this.breadcrumbsControl && _this.breadcrumbsControl.update()) {\n                _this.handleBreadcrumbsEnablementChange();\n            }\n        }));\n    };\n    TitleControl.prototype.createEditorActionsToolBar = function (container) {\n        var _this = this;\n        var context = { groupId: this.group.id };\n        this.editorActionsToolbar = this._register(new toolbar_1.ToolBar(container, this.contextMenuService, {\n            actionItemProvider: function (action) { return _this.actionItemProvider(action); },\n            orientation: actionbar_1.ActionsOrientation.HORIZONTAL,\n            ariaLabel: nls_1.localize('araLabelEditorActions', \"Editor actions\"),\n            getKeyBinding: function (action) { return _this.getKeybinding(action); },\n            actionRunner: this._register(new editor_2.EditorCommandsContextActionRunner(context)),\n            anchorAlignmentProvider: function () { return contextview_1.AnchorAlignment.RIGHT; }\n        }));\n        // Context\n        this.editorActionsToolbar.context = context;\n        // Action Run Handling\n        this._register(this.editorActionsToolbar.actionRunner.onDidRun(function (e) {\n            // Notify for Error\n            _this.notificationService.error(e.error);\n            // Log in telemetry\n            if (_this.telemetryService) {\n                /* __GDPR__\n                    \"workbenchActionExecuted\" : {\n                        \"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                        \"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: 'editorPart' });\n            }\n        }));\n    };\n    TitleControl.prototype.actionItemProvider = function (action) {\n        var activeControl = this.group.activeControl;\n        // Check Active Editor\n        var actionItem = undefined;\n        if (activeControl instanceof baseEditor_1.BaseEditor) {\n            actionItem = activeControl.getActionItem(action);\n        }\n        // Check extensions\n        if (!actionItem) {\n            actionItem = menuItemActionItem_1.createActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n        }\n        return actionItem;\n    };\n    TitleControl.prototype.updateEditorActionsToolbar = function () {\n        // Update Editor Actions Toolbar\n        var _a = this.prepareEditorActions(this.getEditorActions()), primaryEditorActions = _a.primaryEditorActions, secondaryEditorActions = _a.secondaryEditorActions;\n        // Only update if something actually has changed\n        var primaryEditorActionIds = primaryEditorActions.map(function (a) { return a.id; });\n        var secondaryEditorActionIds = secondaryEditorActions.map(function (a) { return a.id; });\n        if (!arrays.equals(primaryEditorActionIds, this.currentPrimaryEditorActionIds) ||\n            !arrays.equals(secondaryEditorActionIds, this.currentSecondaryEditorActionIds) ||\n            primaryEditorActions.some(function (action) { return action instanceof actions_1.ExecuteCommandAction; }) || // execute command actions can have the same ID but different arguments\n            secondaryEditorActions.some(function (action) { return action instanceof actions_1.ExecuteCommandAction; }) // see also https://github.com/Microsoft/vscode/issues/16298\n        ) {\n            this.editorActionsToolbar.setActions(primaryEditorActions, secondaryEditorActions)();\n            this.currentPrimaryEditorActionIds = primaryEditorActionIds;\n            this.currentSecondaryEditorActionIds = secondaryEditorActionIds;\n        }\n    };\n    TitleControl.prototype.prepareEditorActions = function (editorActions) {\n        var primaryEditorActions;\n        var secondaryEditorActions;\n        // Primary actions only for the active group\n        if (this.accessor.activeGroup === this.group) {\n            primaryEditorActions = actions_2.prepareActions(editorActions.primary);\n        }\n        else {\n            primaryEditorActions = [];\n        }\n        // Secondary actions for all groups\n        secondaryEditorActions = actions_2.prepareActions(editorActions.secondary);\n        return { primaryEditorActions: primaryEditorActions, secondaryEditorActions: secondaryEditorActions };\n    };\n    TitleControl.prototype.getEditorActions = function () {\n        var _this = this;\n        var primary = [];\n        var secondary = [];\n        // Dispose previous listeners\n        this.editorToolBarMenuDisposables = lifecycle_1.dispose(this.editorToolBarMenuDisposables);\n        // Update the resource context\n        this.resourceContext.set(this.group.activeEditor ? editor_2.toResource(this.group.activeEditor, { supportSideBySide: true }) : null);\n        // Editor actions require the editor control to be there, so we retrieve it via service\n        var activeControl = this.group.activeControl;\n        if (activeControl instanceof baseEditor_1.BaseEditor) {\n            var codeEditor = editorBrowser_1.getCodeEditor(activeControl.getControl());\n            var scopedContextKeyService = codeEditor && codeEditor.invokeWithinContext(function (accessor) { return accessor.get(contextkey_1.IContextKeyService); }) || this.contextKeyService;\n            var titleBarMenu = this.menuService.createMenu(actions_1.MenuId.EditorTitle, scopedContextKeyService);\n            this.editorToolBarMenuDisposables.push(titleBarMenu);\n            this.editorToolBarMenuDisposables.push(titleBarMenu.onDidChange(function () {\n                _this.updateEditorActionsToolbar(); // Update editor toolbar whenever contributed actions change\n            }));\n            menuItemActionItem_1.fillInActionBarActions(titleBarMenu, { arg: this.resourceContext.get(), shouldForwardArgs: true }, { primary: primary, secondary: secondary });\n        }\n        return { primary: primary, secondary: secondary };\n    };\n    TitleControl.prototype.clearEditorActionsToolbar = function () {\n        this.editorActionsToolbar.setActions([], [])();\n        this.currentPrimaryEditorActionIds = [];\n        this.currentSecondaryEditorActionIds = [];\n    };\n    TitleControl.prototype.enableGroupDragging = function (element) {\n        var _this = this;\n        // Drag start\n        this._register(dom_1.addDisposableListener(element, dom_1.EventType.DRAG_START, function (e) {\n            if (e.target !== element) {\n                return; // only if originating from tabs container\n            }\n            // Set editor group as transfer\n            _this.groupTransfer.setData([new dnd_2.DraggedEditorGroupIdentifier(_this.group.id)], dnd_2.DraggedEditorGroupIdentifier.prototype);\n            e.dataTransfer.effectAllowed = 'copyMove';\n            // If tabs are disabled, treat dragging as if an editor tab was dragged\n            if (!_this.accessor.partOptions.showTabs) {\n                var resource = _this.group.activeEditor ? editor_2.toResource(_this.group.activeEditor, { supportSideBySide: true }) : null;\n                if (resource) {\n                    _this.instantiationService.invokeFunction(dnd_2.fillResourceDataTransfers, [resource], e);\n                }\n            }\n            // Drag Image\n            if (_this.group.activeEditor) {\n                var label = _this.group.activeEditor.getName();\n                if (_this.accessor.partOptions.showTabs && _this.group.count > 1) {\n                    label = nls_1.localize('draggedEditorGroup', \"{0} (+{1})\", label, _this.group.count - 1);\n                }\n                dnd_1.applyDragImage(e, label, 'monaco-editor-group-drag-image');\n            }\n        }));\n        // Drag end\n        this._register(dom_1.addDisposableListener(element, dom_1.EventType.DRAG_END, function () {\n            _this.groupTransfer.clearData(dnd_2.DraggedEditorGroupIdentifier.prototype);\n        }));\n    };\n    TitleControl.prototype.onContextMenu = function (editor, e, node) {\n        var _this = this;\n        // Update the resource context\n        var currentContext = this.resourceContext.get();\n        this.resourceContext.set(editor_2.toResource(editor, { supportSideBySide: true }));\n        // Find target anchor\n        var anchor = node;\n        if (e instanceof MouseEvent) {\n            var event = new mouseEvent_1.StandardMouseEvent(e);\n            anchor = { x: event.posx, y: event.posy };\n        }\n        // Fill in contributed actions\n        var actions = [];\n        menuItemActionItem_1.fillInContextMenuActions(this.contextMenu, { shouldForwardArgs: true, arg: this.resourceContext.get() }, actions, this.contextMenuService);\n        // Show it\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActions: function () { return actions; },\n            getActionsContext: function () { return ({ groupId: _this.group.id, editorIndex: _this.group.getIndexOfEditor(editor) }); },\n            getKeyBinding: function (action) { return _this.getKeybinding(action); },\n            onHide: function () {\n                // restore previous context\n                _this.resourceContext.set(currentContext || null);\n                // restore focus to active group\n                _this.accessor.activeGroup.focus();\n            }\n        });\n    };\n    TitleControl.prototype.getKeybinding = function (action) {\n        return this.keybindingService.lookupKeybinding(action.id);\n    };\n    TitleControl.prototype.getKeybindingLabel = function (action) {\n        var keybinding = this.getKeybinding(action);\n        return keybinding ? types_1.withNullAsUndefined(keybinding.getLabel()) : undefined;\n    };\n    TitleControl.prototype.layout = function (dimension) {\n        if (this.breadcrumbsControl) {\n            this.breadcrumbsControl.layout(undefined);\n        }\n    };\n    TitleControl.prototype.getPreferredHeight = function () {\n        return editor_1.EDITOR_TITLE_HEIGHT + (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden() ? breadcrumbsControl_1.BreadcrumbsControl.HEIGHT : 0);\n    };\n    TitleControl.prototype.dispose = function () {\n        lifecycle_1.dispose(this.breadcrumbsControl);\n        this.breadcrumbsControl = undefined;\n        this.editorToolBarMenuDisposables = lifecycle_1.dispose(this.editorToolBarMenuDisposables);\n        _super.prototype.dispose.call(this);\n    };\n    TitleControl = tslib_1.__decorate([\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, contextkey_1.IContextKeyService),\n        tslib_1.__param(6, keybinding_1.IKeybindingService),\n        tslib_1.__param(7, telemetry_1.ITelemetryService),\n        tslib_1.__param(8, notification_1.INotificationService),\n        tslib_1.__param(9, actions_1.IMenuService),\n        tslib_1.__param(10, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(11, themeService_1.IThemeService),\n        tslib_1.__param(12, extensions_1.IExtensionService),\n        tslib_1.__param(13, configuration_1.IConfigurationService),\n        tslib_1.__param(14, files_1.IFileService)\n    ], TitleControl);\n    return TitleControl;\n}(theme_1.Themable));\nexports.TitleControl = TitleControl;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    // Drag Feedback\n    var dragImageBackground = theme.getColor(colorRegistry_1.listActiveSelectionBackground);\n    var dragImageForeground = theme.getColor(colorRegistry_1.listActiveSelectionForeground);\n    collector.addRule(\"\\n\\t\\t.monaco-editor-group-drag-image {\\n\\t\\t\\tbackground: \" + dragImageBackground + \";\\n\\t\\t\\tcolor: \" + dragImageForeground + \";\\n\\t\\t}\\n\\t\");\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/titleControl.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/titleControl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { applyDragImage } from 'vs/base/browser/dnd';\nimport { addDisposableListener, Dimension, EventType } from 'vs/base/browser/dom';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { ActionsOrientation, IActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ToolBar } from 'vs/base/browser/ui/toolbar/toolbar';\nimport { Action, IAction, IRunEvent } from 'vs/base/common/actions';\nimport * as arrays from 'vs/base/common/arrays';\nimport { ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./media/titlecontrol';\nimport { getCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { localize } from 'vs/nls';\nimport { createActionItem, fillInActionBarActions, fillInContextMenuActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { ExecuteCommandAction, IMenu, IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ICssStyleCollector, ITheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { prepareActions } from 'vs/workbench/browser/actions';\nimport { DraggedEditorGroupIdentifier, DraggedEditorIdentifier, fillResourceDataTransfers, LocalSelectionTransfer } from 'vs/workbench/browser/dnd';\nimport { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';\nimport { BreadcrumbsConfig } from 'vs/workbench/browser/parts/editor/breadcrumbs';\nimport { BreadcrumbsControl, IBreadcrumbsControlOptions } from 'vs/workbench/browser/parts/editor/breadcrumbsControl';\nimport { EDITOR_TITLE_HEIGHT, IEditorGroupsAccessor, IEditorGroupView } from 'vs/workbench/browser/parts/editor/editor';\nimport { EditorCommandsContextActionRunner, IEditorCommandsContext, IEditorInput, toResource, IEditorPartOptions } from 'vs/workbench/common/editor';\nimport { ResourceContextKey } from 'vs/workbench/common/resources';\nimport { Themable } from 'vs/workbench/common/theme';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { withNullAsUndefined } from 'vs/base/common/types';\n\nexport interface IToolbarActions {\n\tprimary: IAction[];\n\tsecondary: IAction[];\n}\n\nexport abstract class TitleControl extends Themable {\n\n\tprotected readonly groupTransfer = LocalSelectionTransfer.getInstance<DraggedEditorGroupIdentifier>();\n\tprotected readonly editorTransfer = LocalSelectionTransfer.getInstance<DraggedEditorIdentifier>();\n\n\tprotected breadcrumbsControl?: BreadcrumbsControl;\n\n\tprivate currentPrimaryEditorActionIds: string[] = [];\n\tprivate currentSecondaryEditorActionIds: string[] = [];\n\tprotected editorActionsToolbar: ToolBar;\n\n\tprivate resourceContext: ResourceContextKey;\n\tprivate editorToolBarMenuDisposables: IDisposable[] = [];\n\n\tprivate contextMenu: IMenu;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tprotected accessor: IEditorGroupsAccessor,\n\t\tprotected group: IEditorGroupView,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IQuickOpenService protected quickOpenService: IQuickOpenService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.resourceContext = this._register(instantiationService.createInstance(ResourceContextKey));\n\t\tthis.contextMenu = this._register(this.menuService.createMenu(MenuId.EditorTitleContext, this.contextKeyService));\n\n\t\tthis.create(parent);\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.extensionService.onDidRegisterExtensions(() => this.updateEditorActionsToolbar()));\n\t}\n\n\tprotected abstract create(parent: HTMLElement): void;\n\n\tprotected createBreadcrumbsControl(container: HTMLElement, options: IBreadcrumbsControlOptions): void {\n\t\tconst config = this._register(BreadcrumbsConfig.IsEnabled.bindTo(this.configurationService));\n\t\tthis._register(config.onDidChange(() => {\n\t\t\tconst value = config.getValue();\n\t\t\tif (!value && this.breadcrumbsControl) {\n\t\t\t\tthis.breadcrumbsControl.dispose();\n\t\t\t\tthis.breadcrumbsControl = undefined;\n\t\t\t\tthis.handleBreadcrumbsEnablementChange();\n\t\t\t} else if (value && !this.breadcrumbsControl) {\n\t\t\t\tthis.breadcrumbsControl = this.instantiationService.createInstance(BreadcrumbsControl, container, options, this.group);\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\tthis.handleBreadcrumbsEnablementChange();\n\t\t\t}\n\t\t}));\n\t\tif (config.getValue()) {\n\t\t\tthis.breadcrumbsControl = this.instantiationService.createInstance(BreadcrumbsControl, container, options, this.group);\n\t\t}\n\n\t\tthis._register(this.fileService.onDidChangeFileSystemProviderRegistrations(() => {\n\t\t\tif (this.breadcrumbsControl && this.breadcrumbsControl.update()) {\n\t\t\t\tthis.handleBreadcrumbsEnablementChange();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected abstract handleBreadcrumbsEnablementChange(): void;\n\n\tprotected createEditorActionsToolBar(container: HTMLElement): void {\n\t\tconst context = { groupId: this.group.id } as IEditorCommandsContext;\n\n\t\tthis.editorActionsToolbar = this._register(new ToolBar(container, this.contextMenuService, {\n\t\t\tactionItemProvider: action => this.actionItemProvider(action as Action),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tariaLabel: localize('araLabelEditorActions', \"Editor actions\"),\n\t\t\tgetKeyBinding: action => this.getKeybinding(action),\n\t\t\tactionRunner: this._register(new EditorCommandsContextActionRunner(context)),\n\t\t\tanchorAlignmentProvider: () => AnchorAlignment.RIGHT\n\t\t}));\n\n\t\t// Context\n\t\tthis.editorActionsToolbar.context = context;\n\n\t\t// Action Run Handling\n\t\tthis._register(this.editorActionsToolbar.actionRunner.onDidRun((e: IRunEvent) => {\n\n\t\t\t// Notify for Error\n\t\t\tthis.notificationService.error(e.error);\n\n\t\t\t// Log in telemetry\n\t\t\tif (this.telemetryService) {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"workbenchActionExecuted\" : {\n\t\t\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: 'editorPart' });\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate actionItemProvider(action: Action): IActionItem | undefined {\n\t\tconst activeControl = this.group.activeControl;\n\n\t\t// Check Active Editor\n\t\tlet actionItem: IActionItem | undefined = undefined;\n\t\tif (activeControl instanceof BaseEditor) {\n\t\t\tactionItem = activeControl.getActionItem(action);\n\t\t}\n\n\t\t// Check extensions\n\t\tif (!actionItem) {\n\t\t\tactionItem = createActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n\t\t}\n\n\t\treturn actionItem;\n\t}\n\n\tprotected updateEditorActionsToolbar(): void {\n\n\t\t// Update Editor Actions Toolbar\n\t\tconst { primaryEditorActions, secondaryEditorActions } = this.prepareEditorActions(this.getEditorActions());\n\n\t\t// Only update if something actually has changed\n\t\tconst primaryEditorActionIds = primaryEditorActions.map(a => a.id);\n\t\tconst secondaryEditorActionIds = secondaryEditorActions.map(a => a.id);\n\t\tif (\n\t\t\t!arrays.equals(primaryEditorActionIds, this.currentPrimaryEditorActionIds) ||\n\t\t\t!arrays.equals(secondaryEditorActionIds, this.currentSecondaryEditorActionIds) ||\n\t\t\tprimaryEditorActions.some(action => action instanceof ExecuteCommandAction) || // execute command actions can have the same ID but different arguments\n\t\t\tsecondaryEditorActions.some(action => action instanceof ExecuteCommandAction)  // see also https://github.com/Microsoft/vscode/issues/16298\n\t\t) {\n\t\t\tthis.editorActionsToolbar.setActions(primaryEditorActions, secondaryEditorActions)();\n\n\t\t\tthis.currentPrimaryEditorActionIds = primaryEditorActionIds;\n\t\t\tthis.currentSecondaryEditorActionIds = secondaryEditorActionIds;\n\t\t}\n\t}\n\n\tprotected prepareEditorActions(editorActions: IToolbarActions): { primaryEditorActions: IAction[]; secondaryEditorActions: IAction[]; } {\n\t\tlet primaryEditorActions: IAction[];\n\t\tlet secondaryEditorActions: IAction[];\n\n\t\t// Primary actions only for the active group\n\t\tif (this.accessor.activeGroup === this.group) {\n\t\t\tprimaryEditorActions = prepareActions(editorActions.primary);\n\t\t} else {\n\t\t\tprimaryEditorActions = [];\n\t\t}\n\n\t\t// Secondary actions for all groups\n\t\tsecondaryEditorActions = prepareActions(editorActions.secondary);\n\n\t\treturn { primaryEditorActions, secondaryEditorActions };\n\t}\n\n\tprivate getEditorActions(): IToolbarActions {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\n\t\t// Dispose previous listeners\n\t\tthis.editorToolBarMenuDisposables = dispose(this.editorToolBarMenuDisposables);\n\n\t\t// Update the resource context\n\t\tthis.resourceContext.set(this.group.activeEditor ? toResource(this.group.activeEditor, { supportSideBySide: true }) : null);\n\n\t\t// Editor actions require the editor control to be there, so we retrieve it via service\n\t\tconst activeControl = this.group.activeControl;\n\t\tif (activeControl instanceof BaseEditor) {\n\t\t\tconst codeEditor = getCodeEditor(activeControl.getControl());\n\t\t\tconst scopedContextKeyService = codeEditor && codeEditor.invokeWithinContext(accessor => accessor.get(IContextKeyService)) || this.contextKeyService;\n\t\t\tconst titleBarMenu = this.menuService.createMenu(MenuId.EditorTitle, scopedContextKeyService);\n\t\t\tthis.editorToolBarMenuDisposables.push(titleBarMenu);\n\t\t\tthis.editorToolBarMenuDisposables.push(titleBarMenu.onDidChange(() => {\n\t\t\t\tthis.updateEditorActionsToolbar(); // Update editor toolbar whenever contributed actions change\n\t\t\t}));\n\n\t\t\tfillInActionBarActions(titleBarMenu, { arg: this.resourceContext.get(), shouldForwardArgs: true }, { primary, secondary });\n\t\t}\n\n\t\treturn { primary, secondary };\n\t}\n\n\tprotected clearEditorActionsToolbar(): void {\n\t\tthis.editorActionsToolbar.setActions([], [])();\n\n\t\tthis.currentPrimaryEditorActionIds = [];\n\t\tthis.currentSecondaryEditorActionIds = [];\n\t}\n\n\tprotected enableGroupDragging(element: HTMLElement): void {\n\n\t\t// Drag start\n\t\tthis._register(addDisposableListener(element, EventType.DRAG_START, (e: DragEvent) => {\n\t\t\tif (e.target !== element) {\n\t\t\t\treturn; // only if originating from tabs container\n\t\t\t}\n\n\t\t\t// Set editor group as transfer\n\t\t\tthis.groupTransfer.setData([new DraggedEditorGroupIdentifier(this.group.id)], DraggedEditorGroupIdentifier.prototype);\n\t\t\te.dataTransfer!.effectAllowed = 'copyMove';\n\n\t\t\t// If tabs are disabled, treat dragging as if an editor tab was dragged\n\t\t\tif (!this.accessor.partOptions.showTabs) {\n\t\t\t\tconst resource = this.group.activeEditor ? toResource(this.group.activeEditor, { supportSideBySide: true }) : null;\n\t\t\t\tif (resource) {\n\t\t\t\t\tthis.instantiationService.invokeFunction(fillResourceDataTransfers, [resource], e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Drag Image\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tlet label = this.group.activeEditor.getName();\n\t\t\t\tif (this.accessor.partOptions.showTabs && this.group.count > 1) {\n\t\t\t\t\tlabel = localize('draggedEditorGroup', \"{0} (+{1})\", label, this.group.count - 1);\n\t\t\t\t}\n\n\t\t\t\tapplyDragImage(e, label, 'monaco-editor-group-drag-image');\n\t\t\t}\n\t\t}));\n\n\t\t// Drag end\n\t\tthis._register(addDisposableListener(element, EventType.DRAG_END, () => {\n\t\t\tthis.groupTransfer.clearData(DraggedEditorGroupIdentifier.prototype);\n\t\t}));\n\t}\n\n\tprotected onContextMenu(editor: IEditorInput, e: Event, node: HTMLElement): void {\n\n\t\t// Update the resource context\n\t\tconst currentContext = this.resourceContext.get();\n\t\tthis.resourceContext.set(toResource(editor, { supportSideBySide: true }));\n\n\t\t// Find target anchor\n\t\tlet anchor: HTMLElement | { x: number, y: number } = node;\n\t\tif (e instanceof MouseEvent) {\n\t\t\tconst event = new StandardMouseEvent(e);\n\t\t\tanchor = { x: event.posx, y: event.posy };\n\t\t}\n\n\t\t// Fill in contributed actions\n\t\tconst actions: IAction[] = [];\n\t\tfillInContextMenuActions(this.contextMenu, { shouldForwardArgs: true, arg: this.resourceContext.get() }, actions, this.contextMenuService);\n\n\t\t// Show it\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => ({ groupId: this.group.id, editorIndex: this.group.getIndexOfEditor(editor) } as IEditorCommandsContext),\n\t\t\tgetKeyBinding: (action) => this.getKeybinding(action),\n\t\t\tonHide: () => {\n\n\t\t\t\t// restore previous context\n\t\t\t\tthis.resourceContext.set(currentContext || null);\n\n\t\t\t\t// restore focus to active group\n\t\t\t\tthis.accessor.activeGroup.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getKeybinding(action: IAction): ResolvedKeybinding | undefined {\n\t\treturn this.keybindingService.lookupKeybinding(action.id);\n\t}\n\n\tprotected getKeybindingLabel(action: IAction): string | undefined {\n\t\tconst keybinding = this.getKeybinding(action);\n\n\t\treturn keybinding ? withNullAsUndefined(keybinding.getLabel()) : undefined;\n\t}\n\n\tabstract openEditor(editor: IEditorInput): void;\n\n\tabstract closeEditor(editor: IEditorInput): void;\n\n\tabstract closeEditors(editors: IEditorInput[]): void;\n\n\tabstract closeAllEditors(): void;\n\n\tabstract moveEditor(editor: IEditorInput, fromIndex: number, targetIndex: number): void;\n\n\tabstract pinEditor(editor: IEditorInput): void;\n\n\tabstract setActive(isActive: boolean): void;\n\n\tabstract updateEditorLabel(editor: IEditorInput): void;\n\n\tabstract updateEditorDirty(editor: IEditorInput): void;\n\n\tabstract updateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void;\n\n\tabstract updateStyles(): void;\n\n\tlayout(dimension: Dimension): void {\n\t\tif (this.breadcrumbsControl) {\n\t\t\tthis.breadcrumbsControl.layout(undefined);\n\t\t}\n\t}\n\n\tgetPreferredHeight(): number {\n\t\treturn EDITOR_TITLE_HEIGHT + (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden() ? BreadcrumbsControl.HEIGHT : 0);\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.breadcrumbsControl);\n\t\tthis.breadcrumbsControl = undefined;\n\t\tthis.editorToolBarMenuDisposables = dispose(this.editorToolBarMenuDisposables);\n\n\t\tsuper.dispose();\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\n\t// Drag Feedback\n\tconst dragImageBackground = theme.getColor(listActiveSelectionBackground);\n\tconst dragImageForeground = theme.getColor(listActiveSelectionForeground);\n\tcollector.addRule(`\n\t\t.monaco-editor-group-drag-image {\n\t\t\tbackground: ${dragImageBackground};\n\t\t\tcolor: ${dragImageForeground};\n\t\t}\n\t`);\n});\n"]}]}