{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/findinput/findInputCheckboxes.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/findinput/findInputCheckboxes.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar checkbox_1 = require(\"vs/base/browser/ui/checkbox/checkbox\");\nrequire(\"vs/css!./findInputCheckboxes\");\nvar nls = require(\"vs/nls\");\nvar NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\nvar NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\nvar NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\nvar CaseSensitiveCheckbox = /** @class */ (function (_super) {\n    tslib_1.__extends(CaseSensitiveCheckbox, _super);\n    function CaseSensitiveCheckbox(opts) {\n        return _super.call(this, {\n            actionClassName: 'monaco-case-sensitive',\n            title: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\n            isChecked: opts.isChecked,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder\n        }) || this;\n    }\n    return CaseSensitiveCheckbox;\n}(checkbox_1.Checkbox));\nexports.CaseSensitiveCheckbox = CaseSensitiveCheckbox;\nvar WholeWordsCheckbox = /** @class */ (function (_super) {\n    tslib_1.__extends(WholeWordsCheckbox, _super);\n    function WholeWordsCheckbox(opts) {\n        return _super.call(this, {\n            actionClassName: 'monaco-whole-word',\n            title: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\n            isChecked: opts.isChecked,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder\n        }) || this;\n    }\n    return WholeWordsCheckbox;\n}(checkbox_1.Checkbox));\nexports.WholeWordsCheckbox = WholeWordsCheckbox;\nvar RegexCheckbox = /** @class */ (function (_super) {\n    tslib_1.__extends(RegexCheckbox, _super);\n    function RegexCheckbox(opts) {\n        return _super.call(this, {\n            actionClassName: 'monaco-regex',\n            title: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\n            isChecked: opts.isChecked,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder\n        }) || this;\n    }\n    return RegexCheckbox;\n}(checkbox_1.Checkbox));\nexports.RegexCheckbox = RegexCheckbox;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/findinput/findInputCheckboxes.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/findinput/findInputCheckboxes.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,iEAAgE;AAEhE,wCAAsC;AACtC,4BAA8B;AAQ9B,IAAM,iCAAiC,GAAG,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;AACxF,IAAM,6BAA6B,GAAG,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;AAC3F,IAAM,wBAAwB,GAAG,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,wBAAwB,CAAC,CAAC;AAE5F;IAA2C,iDAAQ;IAClD,+BAAY,IAA4B;eACvC,kBAAM;YACL,eAAe,EAAE,uBAAuB;YACxC,KAAK,EAAE,iCAAiC,GAAG,IAAI,CAAC,WAAW;YAC3D,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;SACrD,CAAC;IACH,CAAC;IACF,4BAAC;AAAD,CAAC,AATD,CAA2C,mBAAQ,GASlD;AATY,sDAAqB;AAWlC;IAAwC,8CAAQ;IAC/C,4BAAY,IAA4B;eACvC,kBAAM;YACL,eAAe,EAAE,mBAAmB;YACpC,KAAK,EAAE,6BAA6B,GAAG,IAAI,CAAC,WAAW;YACvD,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;SACrD,CAAC;IACH,CAAC;IACF,yBAAC;AAAD,CAAC,AATD,CAAwC,mBAAQ,GAS/C;AATY,gDAAkB;AAW/B;IAAmC,yCAAQ;IAC1C,uBAAY,IAA4B;eACvC,kBAAM;YACL,eAAe,EAAE,cAAc;YAC/B,KAAK,EAAE,wBAAwB,GAAG,IAAI,CAAC,WAAW;YAClD,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;SACrD,CAAC;IACH,CAAC;IACF,oBAAC;AAAD,CAAC,AATD,CAAmC,mBAAQ,GAS1C;AATY,sCAAa","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Checkbox } from 'vs/base/browser/ui/checkbox/checkbox';\nimport { Color } from 'vs/base/common/color';\nimport 'vs/css!./findInputCheckboxes';\nimport * as nls from 'vs/nls';\n\nexport interface IFindInputCheckboxOpts {\n\treadonly appendTitle: string;\n\treadonly isChecked: boolean;\n\treadonly inputActiveOptionBorder?: Color;\n}\n\nconst NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\nconst NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\nconst NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\n\nexport class CaseSensitiveCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\tactionClassName: 'monaco-case-sensitive',\n\t\t\ttitle: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder\n\t\t});\n\t}\n}\n\nexport class WholeWordsCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\tactionClassName: 'monaco-whole-word',\n\t\t\ttitle: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder\n\t\t});\n\t}\n}\n\nexport class RegexCheckbox extends Checkbox {\n\tconstructor(opts: IFindInputCheckboxOpts) {\n\t\tsuper({\n\t\t\tactionClassName: 'monaco-regex',\n\t\t\ttitle: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\n\t\t\tisChecked: opts.isChecked,\n\t\t\tinputActiveOptionBorder: opts.inputActiveOptionBorder\n\t\t});\n\t}\n}\n"]}]}