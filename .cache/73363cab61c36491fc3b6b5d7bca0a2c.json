{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/driver/electron-browser/driver.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/driver/electron-browser/driver.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar driver_1 = require(\"vs/platform/driver/node/driver\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar mainProcessService_1 = require(\"vs/platform/ipc/electron-browser/mainProcessService\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar electron = require(\"electron\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar async_1 = require(\"vs/base/common/async\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nfunction serializeElement(element, recursive) {\n    var attributes = Object.create(null);\n    for (var j = 0; j < element.attributes.length; j++) {\n        var attr = element.attributes.item(j);\n        if (attr) {\n            attributes[attr.name] = attr.value;\n        }\n    }\n    var children = [];\n    if (recursive) {\n        for (var i = 0; i < element.children.length; i++) {\n            var child = element.children.item(i);\n            if (child) {\n                children.push(serializeElement(child, true));\n            }\n        }\n    }\n    var _a = dom_1.getTopLeftOffset(element), left = _a.left, top = _a.top;\n    return {\n        tagName: element.tagName,\n        className: element.className,\n        textContent: element.textContent || '',\n        attributes: attributes,\n        children: children,\n        left: left,\n        top: top\n    };\n}\nvar WindowDriver = /** @class */ (function () {\n    function WindowDriver(windowService) {\n        this.windowService = windowService;\n    }\n    WindowDriver.prototype.click = function (selector, xoffset, yoffset) {\n        var offset = typeof xoffset === 'number' && typeof yoffset === 'number' ? { x: xoffset, y: yoffset } : undefined;\n        return this._click(selector, 1, offset);\n    };\n    WindowDriver.prototype.doubleClick = function (selector) {\n        return this._click(selector, 2);\n    };\n    WindowDriver.prototype._getElementXY = function (selector, offset) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, _a, left, top, _b, width, height, x, y;\n            return tslib_1.__generator(this, function (_c) {\n                element = document.querySelector(selector);\n                if (!element) {\n                    return [2 /*return*/, Promise.reject(new Error(\"Element not found: \" + selector))];\n                }\n                _a = dom_1.getTopLeftOffset(element), left = _a.left, top = _a.top;\n                _b = dom_1.getClientArea(element), width = _b.width, height = _b.height;\n                if (offset) {\n                    x = left + offset.x;\n                    y = top + offset.y;\n                }\n                else {\n                    x = left + (width / 2);\n                    y = top + (height / 2);\n                }\n                x = Math.round(x);\n                y = Math.round(y);\n                return [2 /*return*/, { x: x, y: y }];\n            });\n        });\n    };\n    WindowDriver.prototype._click = function (selector, clickCount, offset) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var _a, x, y, webContents;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._getElementXY(selector, offset)];\n                    case 1:\n                        _a = _b.sent(), x = _a.x, y = _a.y;\n                        webContents = electron.remote.getCurrentWebContents();\n                        webContents.sendInputEvent({ type: 'mouseDown', x: x, y: y, button: 'left', clickCount: clickCount });\n                        return [4 /*yield*/, async_1.timeout(10)];\n                    case 2:\n                        _b.sent();\n                        webContents.sendInputEvent({ type: 'mouseUp', x: x, y: y, button: 'left', clickCount: clickCount });\n                        return [4 /*yield*/, async_1.timeout(100)];\n                    case 3:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WindowDriver.prototype.setValue = function (selector, text) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, inputElement, event;\n            return tslib_1.__generator(this, function (_a) {\n                element = document.querySelector(selector);\n                if (!element) {\n                    return [2 /*return*/, Promise.reject(new Error(\"Element not found: \" + selector))];\n                }\n                inputElement = element;\n                inputElement.value = text;\n                event = new Event('input', { bubbles: true, cancelable: true });\n                inputElement.dispatchEvent(event);\n                return [2 /*return*/];\n            });\n        });\n    };\n    WindowDriver.prototype.getTitle = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, document.title];\n            });\n        });\n    };\n    WindowDriver.prototype.isActiveElement = function (selector) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, chain, el, tagName, id, classes;\n            return tslib_1.__generator(this, function (_a) {\n                element = document.querySelector(selector);\n                if (element !== document.activeElement) {\n                    chain = [];\n                    el = document.activeElement;\n                    while (el) {\n                        tagName = el.tagName;\n                        id = el.id ? \"#\" + el.id : '';\n                        classes = arrays_1.coalesce(el.className.split(/\\s+/g).map(function (c) { return c.trim(); })).map(function (c) { return \".\" + c; }).join('');\n                        chain.unshift(\"\" + tagName + id + classes);\n                        el = el.parentElement;\n                    }\n                    throw new Error(\"Active element not found. Current active element is '\" + chain.join(' > ') + \"'. Looking for \" + selector);\n                }\n                return [2 /*return*/, true];\n            });\n        });\n    };\n    WindowDriver.prototype.getElements = function (selector, recursive) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var query, result, i, element;\n            return tslib_1.__generator(this, function (_a) {\n                query = document.querySelectorAll(selector);\n                result = [];\n                for (i = 0; i < query.length; i++) {\n                    element = query.item(i);\n                    result.push(serializeElement(element, recursive));\n                }\n                return [2 /*return*/, result];\n            });\n        });\n    };\n    WindowDriver.prototype.typeInEditor = function (selector, text) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, textarea, start, newStart, value, newValue, event;\n            return tslib_1.__generator(this, function (_a) {\n                element = document.querySelector(selector);\n                if (!element) {\n                    throw new Error(\"Editor not found: \" + selector);\n                }\n                textarea = element;\n                start = textarea.selectionStart;\n                newStart = start + text.length;\n                value = textarea.value;\n                newValue = value.substr(0, start) + text + value.substr(start);\n                textarea.value = newValue;\n                textarea.setSelectionRange(newStart, newStart);\n                event = new Event('input', { 'bubbles': true, 'cancelable': true });\n                textarea.dispatchEvent(event);\n                return [2 /*return*/];\n            });\n        });\n    };\n    WindowDriver.prototype.getTerminalBuffer = function (selector) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, xterm, lines, i;\n            return tslib_1.__generator(this, function (_a) {\n                element = document.querySelector(selector);\n                if (!element) {\n                    throw new Error(\"Terminal not found: \" + selector);\n                }\n                xterm = element.xterm;\n                if (!xterm) {\n                    throw new Error(\"Xterm not found: \" + selector);\n                }\n                lines = [];\n                for (i = 0; i < xterm._core.buffer.lines.length; i++) {\n                    lines.push(xterm._core.buffer.translateBufferLineToString(i, true));\n                }\n                return [2 /*return*/, lines];\n            });\n        });\n    };\n    WindowDriver.prototype.writeInTerminal = function (selector, text) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var element, xterm;\n            return tslib_1.__generator(this, function (_a) {\n                element = document.querySelector(selector);\n                if (!element) {\n                    throw new Error(\"Element not found: \" + selector);\n                }\n                xterm = element.xterm;\n                if (!xterm) {\n                    throw new Error(\"Xterm not found: \" + selector);\n                }\n                xterm._core.handler(text);\n                return [2 /*return*/];\n            });\n        });\n    };\n    WindowDriver.prototype.openDevTools = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.windowService.openDevTools({ mode: 'detach' })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WindowDriver = tslib_1.__decorate([\n        tslib_1.__param(0, windows_1.IWindowService)\n    ], WindowDriver);\n    return WindowDriver;\n}());\nfunction registerWindowDriver(accessor) {\n    return tslib_1.__awaiter(this, void 0, Promise, function () {\n        var instantiationService, mainProcessService, windowService, windowDriver, windowDriverChannel, windowDriverRegistryChannel, windowDriverRegistry;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    instantiationService = accessor.get(instantiation_1.IInstantiationService);\n                    mainProcessService = accessor.get(mainProcessService_1.IMainProcessService);\n                    windowService = accessor.get(windows_1.IWindowService);\n                    windowDriver = instantiationService.createInstance(WindowDriver);\n                    windowDriverChannel = new driver_1.WindowDriverChannel(windowDriver);\n                    mainProcessService.registerChannel('windowDriver', windowDriverChannel);\n                    windowDriverRegistryChannel = mainProcessService.getChannel('windowDriverRegistry');\n                    windowDriverRegistry = new driver_1.WindowDriverRegistryChannelClient(windowDriverRegistryChannel);\n                    return [4 /*yield*/, windowDriverRegistry.registerWindowDriver(windowService.getCurrentWindowId())];\n                case 1:\n                    _a.sent();\n                    // const options = await windowDriverRegistry.registerWindowDriver(windowId);\n                    // if (options.verbose) {\n                    // \twindowDriver.openDevTools();\n                    // }\n                    return [2 /*return*/, lifecycle_1.toDisposable(function () { return windowDriverRegistry.reloadWindowDriver(windowService.getCurrentWindowId()); })];\n            }\n        });\n    });\n}\nexports.registerWindowDriver = registerWindowDriver;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/driver/electron-browser/driver.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/driver/electron-browser/driver.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IWindowDriver, IElement, WindowDriverChannel, WindowDriverRegistryChannelClient } from 'vs/platform/driver/node/driver';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\nimport { getTopLeftOffset, getClientArea } from 'vs/base/browser/dom';\nimport * as electron from 'electron';\nimport { IWindowService } from 'vs/platform/windows/common/windows';\nimport { Terminal } from 'vscode-xterm';\nimport { timeout } from 'vs/base/common/async';\nimport { coalesce } from 'vs/base/common/arrays';\n\nfunction serializeElement(element: Element, recursive: boolean): IElement {\n\tconst attributes = Object.create(null);\n\n\tfor (let j = 0; j < element.attributes.length; j++) {\n\t\tconst attr = element.attributes.item(j);\n\t\tif (attr) {\n\t\t\tattributes[attr.name] = attr.value;\n\t\t}\n\t}\n\n\tconst children: IElement[] = [];\n\n\tif (recursive) {\n\t\tfor (let i = 0; i < element.children.length; i++) {\n\t\t\tconst child = element.children.item(i);\n\t\t\tif (child) {\n\t\t\t\tchildren.push(serializeElement(child, true));\n\t\t\t}\n\t\t}\n\t}\n\n\tconst { left, top } = getTopLeftOffset(element as HTMLElement);\n\n\treturn {\n\t\ttagName: element.tagName,\n\t\tclassName: element.className,\n\t\ttextContent: element.textContent || '',\n\t\tattributes,\n\t\tchildren,\n\t\tleft,\n\t\ttop\n\t};\n}\n\nclass WindowDriver implements IWindowDriver {\n\n\tconstructor(\n\t\t@IWindowService private readonly windowService: IWindowService\n\t) { }\n\n\tclick(selector: string, xoffset?: number, yoffset?: number): Promise<void> {\n\t\tconst offset = typeof xoffset === 'number' && typeof yoffset === 'number' ? { x: xoffset, y: yoffset } : undefined;\n\t\treturn this._click(selector, 1, offset);\n\t}\n\n\tdoubleClick(selector: string): Promise<void> {\n\t\treturn this._click(selector, 2);\n\t}\n\n\tprivate async _getElementXY(selector: string, offset?: { x: number, y: number }): Promise<{ x: number; y: number; }> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (!element) {\n\t\t\treturn Promise.reject(new Error(`Element not found: ${selector}`));\n\t\t}\n\n\t\tconst { left, top } = getTopLeftOffset(element as HTMLElement);\n\t\tconst { width, height } = getClientArea(element as HTMLElement);\n\t\tlet x: number, y: number;\n\n\t\tif (offset) {\n\t\t\tx = left + offset.x;\n\t\t\ty = top + offset.y;\n\t\t} else {\n\t\t\tx = left + (width / 2);\n\t\t\ty = top + (height / 2);\n\t\t}\n\n\t\tx = Math.round(x);\n\t\ty = Math.round(y);\n\n\t\treturn { x, y };\n\t}\n\n\tprivate async _click(selector: string, clickCount: number, offset?: { x: number, y: number }): Promise<void> {\n\t\tconst { x, y } = await this._getElementXY(selector, offset);\n\n\t\tconst webContents: electron.WebContents = (electron as any).remote.getCurrentWebContents();\n\t\twebContents.sendInputEvent({ type: 'mouseDown', x, y, button: 'left', clickCount } as any);\n\t\tawait timeout(10);\n\n\t\twebContents.sendInputEvent({ type: 'mouseUp', x, y, button: 'left', clickCount } as any);\n\t\tawait timeout(100);\n\t}\n\n\tasync setValue(selector: string, text: string): Promise<void> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (!element) {\n\t\t\treturn Promise.reject(new Error(`Element not found: ${selector}`));\n\t\t}\n\n\t\tconst inputElement = element as HTMLInputElement;\n\t\tinputElement.value = text;\n\n\t\tconst event = new Event('input', { bubbles: true, cancelable: true });\n\t\tinputElement.dispatchEvent(event);\n\t}\n\n\tasync getTitle(): Promise<string> {\n\t\treturn document.title;\n\t}\n\n\tasync isActiveElement(selector: string): Promise<boolean> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (element !== document.activeElement) {\n\t\t\tconst chain: string[] = [];\n\t\t\tlet el = document.activeElement;\n\n\t\t\twhile (el) {\n\t\t\t\tconst tagName = el.tagName;\n\t\t\t\tconst id = el.id ? `#${el.id}` : '';\n\t\t\t\tconst classes = coalesce(el.className.split(/\\s+/g).map(c => c.trim())).map(c => `.${c}`).join('');\n\t\t\t\tchain.unshift(`${tagName}${id}${classes}`);\n\n\t\t\t\tel = el.parentElement;\n\t\t\t}\n\n\t\t\tthrow new Error(`Active element not found. Current active element is '${chain.join(' > ')}'. Looking for ${selector}`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync getElements(selector: string, recursive: boolean): Promise<IElement[]> {\n\t\tconst query = document.querySelectorAll(selector);\n\t\tconst result: IElement[] = [];\n\n\t\tfor (let i = 0; i < query.length; i++) {\n\t\t\tconst element = query.item(i);\n\t\t\tresult.push(serializeElement(element, recursive));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync typeInEditor(selector: string, text: string): Promise<void> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (!element) {\n\t\t\tthrow new Error(`Editor not found: ${selector}`);\n\t\t}\n\n\t\tconst textarea = element as HTMLTextAreaElement;\n\t\tconst start = textarea.selectionStart;\n\t\tconst newStart = start + text.length;\n\t\tconst value = textarea.value;\n\t\tconst newValue = value.substr(0, start) + text + value.substr(start);\n\n\t\ttextarea.value = newValue;\n\t\ttextarea.setSelectionRange(newStart, newStart);\n\n\t\tconst event = new Event('input', { 'bubbles': true, 'cancelable': true });\n\t\ttextarea.dispatchEvent(event);\n\t}\n\n\tasync getTerminalBuffer(selector: string): Promise<string[]> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (!element) {\n\t\t\tthrow new Error(`Terminal not found: ${selector}`);\n\t\t}\n\n\t\tconst xterm: Terminal = (element as any).xterm;\n\n\t\tif (!xterm) {\n\t\t\tthrow new Error(`Xterm not found: ${selector}`);\n\t\t}\n\n\t\tconst lines: string[] = [];\n\n\t\tfor (let i = 0; i < xterm._core.buffer.lines.length; i++) {\n\t\t\tlines.push(xterm._core.buffer.translateBufferLineToString(i, true));\n\t\t}\n\n\t\treturn lines;\n\t}\n\n\tasync writeInTerminal(selector: string, text: string): Promise<void> {\n\t\tconst element = document.querySelector(selector);\n\n\t\tif (!element) {\n\t\t\tthrow new Error(`Element not found: ${selector}`);\n\t\t}\n\n\t\tconst xterm: Terminal = (element as any).xterm;\n\n\t\tif (!xterm) {\n\t\t\tthrow new Error(`Xterm not found: ${selector}`);\n\t\t}\n\n\t\txterm._core.handler(text);\n\t}\n\n\tasync openDevTools(): Promise<void> {\n\t\tawait this.windowService.openDevTools({ mode: 'detach' });\n\t}\n}\n\nexport async function registerWindowDriver(accessor: ServicesAccessor): Promise<IDisposable> {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst mainProcessService = accessor.get(IMainProcessService);\n\tconst windowService = accessor.get(IWindowService);\n\n\tconst windowDriver = instantiationService.createInstance(WindowDriver);\n\tconst windowDriverChannel = new WindowDriverChannel(windowDriver);\n\tmainProcessService.registerChannel('windowDriver', windowDriverChannel);\n\n\tconst windowDriverRegistryChannel = mainProcessService.getChannel('windowDriverRegistry');\n\tconst windowDriverRegistry = new WindowDriverRegistryChannelClient(windowDriverRegistryChannel);\n\n\tawait windowDriverRegistry.registerWindowDriver(windowService.getCurrentWindowId());\n\t// const options = await windowDriverRegistry.registerWindowDriver(windowId);\n\n\t// if (options.verbose) {\n\t// \twindowDriver.openDevTools();\n\t// }\n\n\treturn toDisposable(() => windowDriverRegistry.reloadWindowDriver(windowService.getCurrentWindowId()));\n}\n"]}]}