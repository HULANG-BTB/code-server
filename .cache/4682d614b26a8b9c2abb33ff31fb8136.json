{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/lightBulbWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/lightBulbWidget.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar globalMouseMoveMonitor_1 = require(\"vs/base/browser/globalMouseMoveMonitor\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nrequire(\"vs/css!./lightBulbWidget\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar codeActionModel_1 = require(\"./codeActionModel\");\nvar LightBulbWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(LightBulbWidget, _super);\n    function LightBulbWidget(editor) {\n        var _this = _super.call(this) || this;\n        _this._onClick = _this._register(new event_1.Emitter());\n        _this.onClick = _this._onClick.event;\n        _this._state = codeActionModel_1.CodeActionsState.Empty;\n        _this._futureFixes = new cancellation_1.CancellationTokenSource();\n        _this._domNode = document.createElement('div');\n        _this._domNode.className = 'lightbulb-glyph';\n        _this._editor = editor;\n        _this._editor.addContentWidget(_this);\n        _this._register(_this._editor.onDidChangeModel(function (_) { return _this._futureFixes.cancel(); }));\n        _this._register(_this._editor.onDidChangeModelLanguage(function (_) { return _this._futureFixes.cancel(); }));\n        _this._register(_this._editor.onDidChangeModelContent(function (_) {\n            // cancel when the line in question has been removed\n            var editorModel = _this._editor.getModel();\n            if (_this._state.type !== codeActionModel_1.CodeActionsState.Type.Triggered || !editorModel || _this._state.position.lineNumber >= editorModel.getLineCount()) {\n                _this._futureFixes.cancel();\n            }\n        }));\n        _this._register(dom.addStandardDisposableListener(_this._domNode, 'click', function (e) {\n            if (_this._state.type !== codeActionModel_1.CodeActionsState.Type.Triggered) {\n                return;\n            }\n            // Make sure that focus / cursor location is not lost when clicking widget icon\n            _this._editor.focus();\n            // a bit of extra work to make sure the menu\n            // doesn't cover the line-text\n            var _a = dom.getDomNodePagePosition(_this._domNode), top = _a.top, height = _a.height;\n            var lineHeight = _this._editor.getConfiguration().lineHeight;\n            var pad = Math.floor(lineHeight / 3);\n            if (_this._position && _this._position.position !== null && _this._position.position.lineNumber < _this._state.position.lineNumber) {\n                pad += lineHeight;\n            }\n            _this._onClick.fire({\n                x: e.posx,\n                y: top + height + pad,\n                state: _this._state\n            });\n        }));\n        _this._register(dom.addDisposableListener(_this._domNode, 'mouseenter', function (e) {\n            if ((e.buttons & 1) !== 1) {\n                return;\n            }\n            // mouse enters lightbulb while the primary/left button\n            // is being pressed -> hide the lightbulb and block future\n            // showings until mouse is released\n            _this.hide();\n            var monitor = new globalMouseMoveMonitor_1.GlobalMouseMoveMonitor();\n            monitor.startMonitoring(globalMouseMoveMonitor_1.standardMouseMoveMerger, function () { }, function () {\n                monitor.dispose();\n            });\n        }));\n        _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n            // hide when told to do so\n            if (e.contribInfo && !_this._editor.getConfiguration().contribInfo.lightbulbEnabled) {\n                _this.hide();\n            }\n        }));\n        return _this;\n    }\n    LightBulbWidget.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._editor.removeContentWidget(this);\n    };\n    LightBulbWidget.prototype.getId = function () {\n        return 'LightBulbWidget';\n    };\n    LightBulbWidget.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    LightBulbWidget.prototype.getPosition = function () {\n        return this._position;\n    };\n    LightBulbWidget.prototype.tryShow = function (newState) {\n        var _this = this;\n        if (newState.type !== codeActionModel_1.CodeActionsState.Type.Triggered || this._position && (!newState.position || this._position.position && this._position.position.lineNumber !== newState.position.lineNumber)) {\n            // hide when getting a 'hide'-request or when currently\n            // showing on another line\n            this.hide();\n        }\n        else if (this._futureFixes) {\n            // cancel pending show request in any case\n            this._futureFixes.cancel();\n        }\n        this._futureFixes = new cancellation_1.CancellationTokenSource();\n        var token = this._futureFixes.token;\n        this._state = newState;\n        if (this._state.type === codeActionModel_1.CodeActionsState.Empty.type) {\n            return;\n        }\n        var selection = this._state.rangeOrSelection;\n        this._state.actions.then(function (fixes) {\n            if (!token.isCancellationRequested && fixes.actions.length > 0 && selection) {\n                _this._show(fixes);\n            }\n            else {\n                _this.hide();\n            }\n        }).catch(function () {\n            _this.hide();\n        });\n    };\n    Object.defineProperty(LightBulbWidget.prototype, \"title\", {\n        get: function () {\n            return this._domNode.title;\n        },\n        set: function (value) {\n            this._domNode.title = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBulbWidget.prototype._show = function (codeActions) {\n        var _this = this;\n        var config = this._editor.getConfiguration();\n        if (!config.contribInfo.lightbulbEnabled) {\n            return;\n        }\n        if (this._state.type !== codeActionModel_1.CodeActionsState.Type.Triggered) {\n            return;\n        }\n        var _a = this._state.position, lineNumber = _a.lineNumber, column = _a.column;\n        var model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        var tabSize = model.getOptions().tabSize;\n        var lineContent = model.getLineContent(lineNumber);\n        var indent = textModel_1.TextModel.computeIndentLevel(lineContent, tabSize);\n        var lineHasSpace = config.fontInfo.spaceWidth * indent > 22;\n        var isFolded = function (lineNumber) {\n            return lineNumber > 2 && _this._editor.getTopForLineNumber(lineNumber) === _this._editor.getTopForLineNumber(lineNumber - 1);\n        };\n        var effectiveLineNumber = lineNumber;\n        if (!lineHasSpace) {\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n                effectiveLineNumber -= 1;\n            }\n            else if (!isFolded(lineNumber + 1)) {\n                effectiveLineNumber += 1;\n            }\n            else if (column * config.fontInfo.spaceWidth < 22) {\n                // cannot show lightbulb above/below and showing\n                // it inline would overlay the cursor...\n                this.hide();\n                return;\n            }\n        }\n        this._position = {\n            position: { lineNumber: effectiveLineNumber, column: 1 },\n            preference: LightBulbWidget._posPref\n        };\n        dom.toggleClass(this._domNode, 'autofixable', codeActions.hasAutoFix);\n        this._editor.layoutContentWidget(this);\n    };\n    LightBulbWidget.prototype.hide = function () {\n        this._position = null;\n        this._state = codeActionModel_1.CodeActionsState.Empty;\n        this._futureFixes.cancel();\n        this._editor.layoutContentWidget(this);\n    };\n    LightBulbWidget._posPref = [editorBrowser_1.ContentWidgetPositionPreference.EXACT];\n    return LightBulbWidget;\n}(lifecycle_1.Disposable));\nexports.LightBulbWidget = LightBulbWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/lightBulbWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/lightBulbWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { GlobalMouseMoveMonitor, IStandardMouseMoveEventData, standardMouseMoveMerger } from 'vs/base/browser/globalMouseMoveMonitor';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./lightBulbWidget';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { TextModel } from 'vs/editor/common/model/textModel';\nimport { CodeActionSet } from 'vs/editor/contrib/codeAction/codeAction';\nimport { CodeActionsState } from './codeActionModel';\n\nexport class LightBulbWidget extends Disposable implements IContentWidget {\n\n\tprivate static readonly _posPref = [ContentWidgetPositionPreference.EXACT];\n\n\tprivate readonly _domNode: HTMLDivElement;\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate readonly _onClick = this._register(new Emitter<{ x: number; y: number; state: CodeActionsState.Triggered }>());\n\tpublic readonly onClick = this._onClick.event;\n\n\tprivate _position: IContentWidgetPosition | null;\n\tprivate _state: CodeActionsState.State = CodeActionsState.Empty;\n\tprivate _futureFixes = new CancellationTokenSource();\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'lightbulb-glyph';\n\n\t\tthis._editor = editor;\n\t\tthis._editor.addContentWidget(this);\n\n\t\tthis._register(this._editor.onDidChangeModel(_ => this._futureFixes.cancel()));\n\t\tthis._register(this._editor.onDidChangeModelLanguage(_ => this._futureFixes.cancel()));\n\t\tthis._register(this._editor.onDidChangeModelContent(_ => {\n\t\t\t// cancel when the line in question has been removed\n\t\t\tconst editorModel = this._editor.getModel();\n\t\t\tif (this._state.type !== CodeActionsState.Type.Triggered || !editorModel || this._state.position.lineNumber >= editorModel.getLineCount()) {\n\t\t\t\tthis._futureFixes.cancel();\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode, 'click', e => {\n\t\t\tif (this._state.type !== CodeActionsState.Type.Triggered) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure that focus / cursor location is not lost when clicking widget icon\n\t\t\tthis._editor.focus();\n\t\t\t// a bit of extra work to make sure the menu\n\t\t\t// doesn't cover the line-text\n\t\t\tconst { top, height } = dom.getDomNodePagePosition(this._domNode);\n\t\t\tconst { lineHeight } = this._editor.getConfiguration();\n\n\t\t\tlet pad = Math.floor(lineHeight / 3);\n\t\t\tif (this._position && this._position.position !== null && this._position.position.lineNumber < this._state.position.lineNumber) {\n\t\t\t\tpad += lineHeight;\n\t\t\t}\n\n\t\t\tthis._onClick.fire({\n\t\t\t\tx: e.posx,\n\t\t\t\ty: top + height + pad,\n\t\t\t\tstate: this._state\n\t\t\t});\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e: MouseEvent) => {\n\t\t\tif ((e.buttons & 1) !== 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// mouse enters lightbulb while the primary/left button\n\t\t\t// is being pressed -> hide the lightbulb and block future\n\t\t\t// showings until mouse is released\n\t\t\tthis.hide();\n\t\t\tconst monitor = new GlobalMouseMoveMonitor<IStandardMouseMoveEventData>();\n\t\t\tmonitor.startMonitoring(standardMouseMoveMerger, () => { }, () => {\n\t\t\t\tmonitor.dispose();\n\t\t\t});\n\t\t}));\n\t\tthis._register(this._editor.onDidChangeConfiguration(e => {\n\t\t\t// hide when told to do so\n\t\t\tif (e.contribInfo && !this._editor.getConfiguration().contribInfo.lightbulbEnabled) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tgetId(): string {\n\t\treturn 'LightBulbWidget';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._position;\n\t}\n\n\ttryShow(newState: CodeActionsState.State) {\n\n\t\tif (newState.type !== CodeActionsState.Type.Triggered || this._position && (!newState.position || this._position.position && this._position.position.lineNumber !== newState.position.lineNumber)) {\n\t\t\t// hide when getting a 'hide'-request or when currently\n\t\t\t// showing on another line\n\t\t\tthis.hide();\n\t\t} else if (this._futureFixes) {\n\t\t\t// cancel pending show request in any case\n\t\t\tthis._futureFixes.cancel();\n\t\t}\n\n\t\tthis._futureFixes = new CancellationTokenSource();\n\t\tconst { token } = this._futureFixes;\n\t\tthis._state = newState;\n\n\t\tif (this._state.type === CodeActionsState.Empty.type) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selection = this._state.rangeOrSelection;\n\t\tthis._state.actions.then(fixes => {\n\t\t\tif (!token.isCancellationRequested && fixes.actions.length > 0 && selection) {\n\t\t\t\tthis._show(fixes);\n\t\t\t} else {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}).catch(() => {\n\t\t\tthis.hide();\n\t\t});\n\t}\n\n\tset title(value: string) {\n\t\tthis._domNode.title = value;\n\t}\n\n\tget title(): string {\n\t\treturn this._domNode.title;\n\t}\n\n\tprivate _show(codeActions: CodeActionSet): void {\n\t\tconst config = this._editor.getConfiguration();\n\t\tif (!config.contribInfo.lightbulbEnabled) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._state.type !== CodeActionsState.Type.Triggered) {\n\t\t\treturn;\n\t\t}\n\t\tconst { lineNumber, column } = this._state.position;\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tabSize = model.getOptions().tabSize;\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst indent = TextModel.computeIndentLevel(lineContent, tabSize);\n\t\tconst lineHasSpace = config.fontInfo.spaceWidth * indent > 22;\n\t\tconst isFolded = (lineNumber: number) => {\n\t\t\treturn lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\n\t\t};\n\n\t\tlet effectiveLineNumber = lineNumber;\n\t\tif (!lineHasSpace) {\n\t\t\tif (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n\t\t\t\teffectiveLineNumber -= 1;\n\t\t\t} else if (!isFolded(lineNumber + 1)) {\n\t\t\t\teffectiveLineNumber += 1;\n\t\t\t} else if (column * config.fontInfo.spaceWidth < 22) {\n\t\t\t\t// cannot show lightbulb above/below and showing\n\t\t\t\t// it inline would overlay the cursor...\n\t\t\t\tthis.hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._position = {\n\t\t\tposition: { lineNumber: effectiveLineNumber, column: 1 },\n\t\t\tpreference: LightBulbWidget._posPref\n\t\t};\n\t\tdom.toggleClass(this._domNode, 'autofixable', codeActions.hasAutoFix);\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n\n\thide(): void {\n\t\tthis._position = null;\n\t\tthis._state = CodeActionsState.Empty;\n\t\tthis._futureFixes.cancel();\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n}\n"]}]}