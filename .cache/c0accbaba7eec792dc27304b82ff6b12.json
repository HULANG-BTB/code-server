{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/gettingStarted/electron-browser/gettingStarted.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/gettingStarted/electron-browser/gettingStarted.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/platform/storage/common/storage\", \"vs/platform/telemetry/common/telemetry\", \"vs/platform/environment/common/environment\", \"vs/base/common/platform\", \"vs/platform/product/node/product\"], function (require, exports, storage_1, telemetry_1, environment_1, platform, product_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let GettingStarted = class GettingStarted {\n        constructor(storageService, environmentService, telemetryService) {\n            this.storageService = storageService;\n            this.telemetryService = telemetryService;\n            this.appName = product_1.default.nameLong;\n            if (!product_1.default.welcomePage) {\n                return;\n            }\n            if (environmentService.skipGettingStarted) {\n                return;\n            }\n            if (environmentService.isExtensionDevelopment) {\n                return;\n            }\n            this.welcomePageURL = product_1.default.welcomePage;\n            this.handleWelcome();\n        }\n        getUrl(telemetryInfo) {\n            return `${this.welcomePageURL}&&from=${this.appName}&&id=${telemetryInfo.machineId}`;\n        }\n        openExternal(url) {\n            // Don't open the welcome page as the root user on Linux, this is due to a bug with xdg-open\n            // which recommends against running itself as root.\n            if (platform.isLinux && platform.isRootUser()) {\n                return;\n            }\n            window.open(url);\n        }\n        handleWelcome() {\n            //make sure the user is online, otherwise refer to the next run to show the welcome page\n            if (!navigator.onLine) {\n                return;\n            }\n            let firstStartup = !this.storageService.get(GettingStarted.hideWelcomeSettingskey, storage_1.StorageScope.GLOBAL);\n            if (firstStartup && this.welcomePageURL) {\n                this.telemetryService.getTelemetryInfo().then(info => {\n                    let url = this.getUrl(info);\n                    this.openExternal(url);\n                    this.storageService.store(GettingStarted.hideWelcomeSettingskey, true, storage_1.StorageScope.GLOBAL);\n                });\n            }\n        }\n    };\n    GettingStarted.hideWelcomeSettingskey = 'workbench.hide.welcome';\n    GettingStarted = __decorate([\n        __param(0, storage_1.IStorageService),\n        __param(1, environment_1.IEnvironmentService),\n        __param(2, telemetry_1.ITelemetryService)\n    ], GettingStarted);\n    exports.GettingStarted = GettingStarted;\n});\n",null]}