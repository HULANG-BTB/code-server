{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositePart.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositePart.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/compositepart\");\nvar nls = require(\"vs/nls\");\nvar idGenerator_1 = require(\"vs/base/common/idGenerator\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar strings = require(\"vs/base/common/strings\");\nvar event_1 = require(\"vs/base/common/event\");\nvar errors = require(\"vs/base/common/errors\");\nvar toolbar_1 = require(\"vs/base/browser/ui/toolbar/toolbar\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar progressbar_1 = require(\"vs/base/browser/ui/progressbar/progressbar\");\nvar actions_1 = require(\"vs/workbench/browser/actions\");\nvar part_1 = require(\"vs/workbench/browser/part\");\nvar progressService_1 = require(\"vs/workbench/services/progress/browser/progressService\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar serviceCollection_1 = require(\"vs/platform/instantiation/common/serviceCollection\");\nvar progress_1 = require(\"vs/platform/progress/common/progress\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar contextview_1 = require(\"vs/base/browser/ui/contextview/contextview\");\nvar types_1 = require(\"vs/base/common/types\");\nvar CompositePart = /** @class */ (function (_super) {\n    tslib_1.__extends(CompositePart, _super);\n    function CompositePart(notificationService, storageService, telemetryService, contextMenuService, layoutService, keybindingService, instantiationService, themeService, registry, activeCompositeSettingsKey, defaultCompositeId, nameForTelemetry, compositeCSSClass, titleForegroundColor, id, options) {\n        var _this = _super.call(this, id, options, themeService, storageService, layoutService) || this;\n        _this.notificationService = notificationService;\n        _this.storageService = storageService;\n        _this.telemetryService = telemetryService;\n        _this.contextMenuService = contextMenuService;\n        _this.layoutService = layoutService;\n        _this.keybindingService = keybindingService;\n        _this.instantiationService = instantiationService;\n        _this.registry = registry;\n        _this.activeCompositeSettingsKey = activeCompositeSettingsKey;\n        _this.defaultCompositeId = defaultCompositeId;\n        _this.nameForTelemetry = nameForTelemetry;\n        _this.compositeCSSClass = compositeCSSClass;\n        _this.titleForegroundColor = titleForegroundColor;\n        _this.onDidCompositeOpen = _this._register(new event_1.Emitter());\n        _this.onDidCompositeClose = _this._register(new event_1.Emitter());\n        _this.mapCompositeToCompositeContainer = {};\n        _this.mapActionsBindingToComposite = {};\n        _this.activeComposite = null;\n        _this.instantiatedCompositeItems = new Map();\n        _this.lastActiveCompositeId = storageService.get(activeCompositeSettingsKey, storage_1.StorageScope.WORKSPACE, _this.defaultCompositeId);\n        return _this;\n    }\n    CompositePart.prototype.openComposite = function (id, focus) {\n        // Check if composite already visible and just focus in that case\n        if (this.activeComposite && this.activeComposite.getId() === id) {\n            if (focus) {\n                this.activeComposite.focus();\n            }\n            // Fullfill promise with composite that is being opened\n            return this.activeComposite;\n        }\n        // Open\n        return this.doOpenComposite(id, focus);\n    };\n    CompositePart.prototype.doOpenComposite = function (id, focus) {\n        if (focus === void 0) { focus = false; }\n        // Use a generated token to avoid race conditions from long running promises\n        var currentCompositeOpenToken = idGenerator_1.defaultGenerator.nextId();\n        this.currentCompositeOpenToken = currentCompositeOpenToken;\n        // Hide current\n        if (this.activeComposite) {\n            this.hideActiveComposite();\n        }\n        // Update Title\n        this.updateTitle(id);\n        // Create composite\n        var composite = this.createComposite(id, true);\n        // Check if another composite opened meanwhile and return in that case\n        if ((this.currentCompositeOpenToken !== currentCompositeOpenToken) || (this.activeComposite && this.activeComposite.getId() !== composite.getId())) {\n            return undefined;\n        }\n        // Check if composite already visible and just focus in that case\n        if (this.activeComposite && this.activeComposite.getId() === composite.getId()) {\n            if (focus) {\n                composite.focus();\n            }\n            this.onDidCompositeOpen.fire({ composite: composite, focus: focus });\n            return composite;\n        }\n        // Show Composite and Focus\n        this.showComposite(composite);\n        if (focus) {\n            composite.focus();\n        }\n        // Return with the composite that is being opened\n        if (composite) {\n            this.onDidCompositeOpen.fire({ composite: composite, focus: focus });\n        }\n        return composite;\n    };\n    CompositePart.prototype.createComposite = function (id, isActive) {\n        var _this = this;\n        // Check if composite is already created\n        var compositeItem = this.instantiatedCompositeItems.get(id);\n        if (compositeItem) {\n            return compositeItem.composite;\n        }\n        // Instantiate composite from registry otherwise\n        var compositeDescriptor = this.registry.getComposite(id);\n        if (compositeDescriptor) {\n            var progressService = this.instantiationService.createInstance(progressService_1.ScopedProgressService, this.progressBar, compositeDescriptor.id, isActive);\n            var compositeInstantiationService = this.instantiationService.createChild(new serviceCollection_1.ServiceCollection([progress_1.IProgressService, progressService]));\n            var composite_1 = compositeDescriptor.instantiate(compositeInstantiationService);\n            var disposables_1 = [];\n            // Remember as Instantiated\n            this.instantiatedCompositeItems.set(id, { composite: composite_1, disposable: lifecycle_1.toDisposable(function () { return lifecycle_1.dispose(disposables_1); }), progressService: progressService });\n            // Register to title area update events from the composite\n            composite_1.onTitleAreaUpdate(function () { return _this.onTitleAreaUpdate(composite_1.getId()); }, this, disposables_1);\n            return composite_1;\n        }\n        throw new Error(\"Unable to find composite with id \" + id);\n    };\n    CompositePart.prototype.showComposite = function (composite) {\n        var _this = this;\n        // Remember Composite\n        this.activeComposite = composite;\n        // Store in preferences\n        var id = this.activeComposite.getId();\n        if (id !== this.defaultCompositeId) {\n            this.storageService.store(this.activeCompositeSettingsKey, id, storage_1.StorageScope.WORKSPACE);\n        }\n        else {\n            this.storageService.remove(this.activeCompositeSettingsKey, storage_1.StorageScope.WORKSPACE);\n        }\n        // Remember\n        this.lastActiveCompositeId = this.activeComposite.getId();\n        // Composites created for the first time\n        var compositeContainer = this.mapCompositeToCompositeContainer[composite.getId()];\n        if (!compositeContainer) {\n            // Build Container off-DOM\n            compositeContainer = dom_1.$('.composite');\n            dom_1.addClasses(compositeContainer, this.compositeCSSClass);\n            compositeContainer.id = composite.getId();\n            composite.create(compositeContainer);\n            composite.updateStyles();\n            // Remember composite container\n            this.mapCompositeToCompositeContainer[composite.getId()] = compositeContainer;\n        }\n        // Report progress for slow loading composites (but only if we did not create the composites before already)\n        var compositeItem = this.instantiatedCompositeItems.get(composite.getId());\n        if (compositeItem && !compositeContainer) {\n            compositeItem.progressService.showWhile(Promise.resolve(), this.layoutService.isRestored() ? 800 : 3200 /* less ugly initial startup */);\n        }\n        // Fill Content and Actions\n        // Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n        if (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n            return undefined;\n        }\n        // Take Composite on-DOM and show\n        var contentArea = this.getContentArea();\n        if (contentArea) {\n            contentArea.appendChild(compositeContainer);\n        }\n        dom_1.show(compositeContainer);\n        // Setup action runner\n        this.toolBar.actionRunner = composite.getActionRunner();\n        // Update title with composite title if it differs from descriptor\n        var descriptor = this.registry.getComposite(composite.getId());\n        if (descriptor && descriptor.name !== composite.getTitle()) {\n            this.updateTitle(composite.getId(), types_1.withNullAsUndefined(composite.getTitle()));\n        }\n        // Handle Composite Actions\n        var actionsBinding = this.mapActionsBindingToComposite[composite.getId()];\n        if (!actionsBinding) {\n            actionsBinding = this.collectCompositeActions(composite);\n            this.mapActionsBindingToComposite[composite.getId()] = actionsBinding;\n        }\n        actionsBinding();\n        if (this.telemetryActionsListener) {\n            this.telemetryActionsListener.dispose();\n            this.telemetryActionsListener = null;\n        }\n        // Action Run Handling\n        this.telemetryActionsListener = this.toolBar.actionRunner.onDidRun(function (e) {\n            // Check for Error\n            if (e.error && !errors.isPromiseCanceledError(e.error)) {\n                _this.notificationService.error(e.error);\n            }\n            // Log in telemetry\n            if (_this.telemetryService) {\n                /* __GDPR__\n                    \"workbenchActionExecuted\" : {\n                        \"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                        \"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: _this.nameForTelemetry });\n            }\n        });\n        // Indicate to composite that it is now visible\n        composite.setVisible(true);\n        // Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n        if (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n            return;\n        }\n        // Make sure the composite is layed out\n        if (this.contentAreaSize) {\n            composite.layout(this.contentAreaSize);\n        }\n    };\n    CompositePart.prototype.onTitleAreaUpdate = function (compositeId) {\n        // Active Composite\n        if (this.activeComposite && this.activeComposite.getId() === compositeId) {\n            // Title\n            this.updateTitle(this.activeComposite.getId(), this.activeComposite.getTitle() || undefined);\n            // Actions\n            var actionsBinding = this.collectCompositeActions(this.activeComposite);\n            this.mapActionsBindingToComposite[this.activeComposite.getId()] = actionsBinding;\n            actionsBinding();\n        }\n        // Otherwise invalidate actions binding for next time when the composite becomes visible\n        else {\n            delete this.mapActionsBindingToComposite[compositeId];\n        }\n    };\n    CompositePart.prototype.updateTitle = function (compositeId, compositeTitle) {\n        var compositeDescriptor = this.registry.getComposite(compositeId);\n        if (!compositeDescriptor || !this.titleLabel) {\n            return;\n        }\n        if (!compositeTitle) {\n            compositeTitle = compositeDescriptor.name;\n        }\n        var keybinding = this.keybindingService.lookupKeybinding(compositeId);\n        this.titleLabel.updateTitle(compositeId, compositeTitle, (keybinding && keybinding.getLabel()) || undefined);\n        this.toolBar.setAriaLabel(nls.localize('ariaCompositeToolbarLabel', \"{0} actions\", compositeTitle));\n    };\n    CompositePart.prototype.collectCompositeActions = function (composite) {\n        // From Composite\n        var primaryActions = composite.getActions().slice(0);\n        var secondaryActions = composite.getSecondaryActions().slice(0);\n        // From Part\n        primaryActions.push.apply(primaryActions, this.getActions());\n        secondaryActions.push.apply(secondaryActions, this.getSecondaryActions());\n        // Update context\n        this.toolBar.context = this.actionsContextProvider();\n        // Return fn to set into toolbar\n        return this.toolBar.setActions(actions_1.prepareActions(primaryActions), actions_1.prepareActions(secondaryActions));\n    };\n    CompositePart.prototype.getActiveComposite = function () {\n        return this.activeComposite;\n    };\n    CompositePart.prototype.getLastActiveCompositetId = function () {\n        return this.lastActiveCompositeId;\n    };\n    CompositePart.prototype.hideActiveComposite = function () {\n        if (!this.activeComposite) {\n            return undefined; // Nothing to do\n        }\n        var composite = this.activeComposite;\n        this.activeComposite = null;\n        var compositeContainer = this.mapCompositeToCompositeContainer[composite.getId()];\n        // Indicate to Composite\n        composite.setVisible(false);\n        // Take Container Off-DOM and hide\n        compositeContainer.remove();\n        dom_1.hide(compositeContainer);\n        // Clear any running Progress\n        this.progressBar.stop().hide();\n        // Empty Actions\n        this.toolBar.setActions([])();\n        this.onDidCompositeClose.fire(composite);\n        return composite;\n    };\n    CompositePart.prototype.createTitleArea = function (parent) {\n        var _this = this;\n        // Title Area Container\n        var titleArea = dom_1.append(parent, dom_1.$('.composite'));\n        dom_1.addClass(titleArea, 'title');\n        // Left Title Label\n        this.titleLabel = this.createTitleLabel(titleArea);\n        // Right Actions Container\n        var titleActionsContainer = dom_1.append(titleArea, dom_1.$('.title-actions'));\n        // Toolbar\n        this.toolBar = this._register(new toolbar_1.ToolBar(titleActionsContainer, this.contextMenuService, {\n            actionItemProvider: function (action) { return _this.actionItemProvider(action); },\n            orientation: actionbar_1.ActionsOrientation.HORIZONTAL,\n            getKeyBinding: function (action) { return _this.keybindingService.lookupKeybinding(action.id); },\n            anchorAlignmentProvider: function () { return _this.getTitleAreaDropDownAnchorAlignment(); }\n        }));\n        return titleArea;\n    };\n    CompositePart.prototype.createTitleLabel = function (parent) {\n        var titleContainer = dom_1.append(parent, dom_1.$('.title-label'));\n        var titleLabel = dom_1.append(titleContainer, dom_1.$('h2'));\n        var $this = this;\n        return {\n            updateTitle: function (id, title, keybinding) {\n                titleLabel.innerHTML = strings.escape(title);\n                titleLabel.title = keybinding ? nls.localize('titleTooltip', \"{0} ({1})\", title, keybinding) : title;\n            },\n            updateStyles: function () {\n                titleLabel.style.color = $this.titleForegroundColor ? $this.getColor($this.titleForegroundColor) : null;\n            }\n        };\n    };\n    CompositePart.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n        // Forward to title label\n        this.titleLabel.updateStyles();\n    };\n    CompositePart.prototype.actionItemProvider = function (action) {\n        // Check Active Composite\n        if (this.activeComposite) {\n            return this.activeComposite.getActionItem(action);\n        }\n        return undefined;\n    };\n    CompositePart.prototype.actionsContextProvider = function () {\n        // Check Active Composite\n        if (this.activeComposite) {\n            return this.activeComposite.getActionsContext();\n        }\n        return null;\n    };\n    CompositePart.prototype.createContentArea = function (parent) {\n        var contentContainer = dom_1.append(parent, dom_1.$('.content'));\n        this.progressBar = this._register(new progressbar_1.ProgressBar(contentContainer));\n        this._register(styler_1.attachProgressBarStyler(this.progressBar, this.themeService));\n        this.progressBar.hide();\n        return contentContainer;\n    };\n    CompositePart.prototype.getProgressIndicator = function (id) {\n        var compositeItem = this.instantiatedCompositeItems.get(id);\n        return compositeItem ? compositeItem.progressService : null;\n    };\n    CompositePart.prototype.getActions = function () {\n        return [];\n    };\n    CompositePart.prototype.getSecondaryActions = function () {\n        return [];\n    };\n    CompositePart.prototype.getTitleAreaDropDownAnchorAlignment = function () {\n        return contextview_1.AnchorAlignment.RIGHT;\n    };\n    CompositePart.prototype.layout = function (width, height) {\n        // Layout contents\n        this.contentAreaSize = _super.prototype.layoutContents.call(this, width, height).contentSize;\n        // Layout composite\n        if (this.activeComposite) {\n            this.activeComposite.layout(this.contentAreaSize);\n        }\n    };\n    CompositePart.prototype.removeComposite = function (compositeId) {\n        if (this.activeComposite && this.activeComposite.getId() === compositeId) {\n            return false; // do not remove active composite\n        }\n        delete this.mapCompositeToCompositeContainer[compositeId];\n        delete this.mapActionsBindingToComposite[compositeId];\n        var compositeItem = this.instantiatedCompositeItems.get(compositeId);\n        if (compositeItem) {\n            compositeItem.composite.dispose();\n            lifecycle_1.dispose(compositeItem.disposable);\n            this.instantiatedCompositeItems.delete(compositeId);\n        }\n        return true;\n    };\n    CompositePart.prototype.dispose = function () {\n        this.mapCompositeToCompositeContainer = null; // StrictNullOverride: nulling out ok in dispose\n        this.mapActionsBindingToComposite = null; // StrictNullOverride: nulling out ok in dispose\n        this.instantiatedCompositeItems.forEach(function (compositeItem) {\n            compositeItem.composite.dispose();\n            lifecycle_1.dispose(compositeItem.disposable);\n        });\n        this.instantiatedCompositeItems.clear();\n        _super.prototype.dispose.call(this);\n    };\n    return CompositePart;\n}(part_1.Part));\nexports.CompositePart = CompositePart;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositePart.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/compositePart.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/compositepart';\nimport * as nls from 'vs/nls';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport { IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { Emitter } from 'vs/base/common/event';\nimport * as errors from 'vs/base/common/errors';\nimport { ToolBar } from 'vs/base/browser/ui/toolbar/toolbar';\nimport { IActionItem, ActionsOrientation } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { prepareActions } from 'vs/workbench/browser/actions';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { Part, IPartOptions } from 'vs/workbench/browser/part';\nimport { Composite, CompositeRegistry } from 'vs/workbench/browser/composite';\nimport { IComposite } from 'vs/workbench/common/composite';\nimport { ScopedProgressService } from 'vs/workbench/services/progress/browser/progressService';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachProgressBarStyler } from 'vs/platform/theme/common/styler';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { Dimension, append, $, addClass, hide, show, addClasses } from 'vs/base/browser/dom';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { withNullAsUndefined } from 'vs/base/common/types';\n\nexport interface ICompositeTitleLabel {\n\n\t/**\n\t * Asks to update the title for the composite with the given ID.\n\t */\n\tupdateTitle(id: string, title: string, keybinding?: string): void;\n\n\t/**\n\t * Called when theming information changes.\n\t */\n\tupdateStyles(): void;\n}\n\ninterface CompositeItem {\n\tcomposite: Composite;\n\tdisposable: IDisposable;\n\tprogressService: IProgressService;\n}\n\nexport abstract class CompositePart<T extends Composite> extends Part {\n\n\tprotected readonly onDidCompositeOpen = this._register(new Emitter<{ composite: IComposite, focus: boolean }>());\n\tprotected readonly onDidCompositeClose = this._register(new Emitter<IComposite>());\n\n\tprotected toolBar: ToolBar;\n\n\tprivate mapCompositeToCompositeContainer: { [compositeId: string]: HTMLElement; };\n\tprivate mapActionsBindingToComposite: { [compositeId: string]: () => void; };\n\tprivate activeComposite: Composite | null;\n\tprivate lastActiveCompositeId: string;\n\tprivate instantiatedCompositeItems: Map<string, CompositeItem>;\n\tprivate titleLabel: ICompositeTitleLabel;\n\tprivate progressBar: ProgressBar;\n\tprivate contentAreaSize: Dimension;\n\tprivate telemetryActionsListener: IDisposable | null;\n\tprivate currentCompositeOpenToken: string;\n\n\tconstructor(\n\t\tprivate notificationService: INotificationService,\n\t\tprotected storageService: IStorageService,\n\t\tprivate telemetryService: ITelemetryService,\n\t\tprotected contextMenuService: IContextMenuService,\n\t\tprotected layoutService: IWorkbenchLayoutService,\n\t\tprotected keybindingService: IKeybindingService,\n\t\tprotected instantiationService: IInstantiationService,\n\t\tthemeService: IThemeService,\n\t\tprotected readonly registry: CompositeRegistry<T>,\n\t\tprivate activeCompositeSettingsKey: string,\n\t\tprivate defaultCompositeId: string,\n\t\tprivate nameForTelemetry: string,\n\t\tprivate compositeCSSClass: string,\n\t\tprivate titleForegroundColor: string | undefined,\n\t\tid: string,\n\t\toptions: IPartOptions\n\t) {\n\t\tsuper(id, options, themeService, storageService, layoutService);\n\n\t\tthis.mapCompositeToCompositeContainer = {};\n\t\tthis.mapActionsBindingToComposite = {};\n\t\tthis.activeComposite = null;\n\t\tthis.instantiatedCompositeItems = new Map<string, CompositeItem>();\n\t\tthis.lastActiveCompositeId = storageService.get(activeCompositeSettingsKey, StorageScope.WORKSPACE, this.defaultCompositeId);\n\t}\n\n\tprotected openComposite(id: string, focus?: boolean): Composite | undefined {\n\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite && this.activeComposite.getId() === id) {\n\t\t\tif (focus) {\n\t\t\t\tthis.activeComposite.focus();\n\t\t\t}\n\n\t\t\t// Fullfill promise with composite that is being opened\n\t\t\treturn this.activeComposite;\n\t\t}\n\n\t\t// Open\n\t\treturn this.doOpenComposite(id, focus);\n\t}\n\n\tprivate doOpenComposite(id: string, focus: boolean = false): Composite | undefined {\n\n\t\t// Use a generated token to avoid race conditions from long running promises\n\t\tconst currentCompositeOpenToken = defaultGenerator.nextId();\n\t\tthis.currentCompositeOpenToken = currentCompositeOpenToken;\n\n\t\t// Hide current\n\t\tif (this.activeComposite) {\n\t\t\tthis.hideActiveComposite();\n\t\t}\n\n\t\t// Update Title\n\t\tthis.updateTitle(id);\n\n\t\t// Create composite\n\t\tconst composite = this.createComposite(id, true);\n\n\t\t// Check if another composite opened meanwhile and return in that case\n\t\tif ((this.currentCompositeOpenToken !== currentCompositeOpenToken) || (this.activeComposite && this.activeComposite.getId() !== composite.getId())) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite && this.activeComposite.getId() === composite.getId()) {\n\t\t\tif (focus) {\n\t\t\t\tcomposite.focus();\n\t\t\t}\n\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t\treturn composite;\n\t\t}\n\n\t\t// Show Composite and Focus\n\t\tthis.showComposite(composite);\n\t\tif (focus) {\n\t\t\tcomposite.focus();\n\t\t}\n\n\t\t// Return with the composite that is being opened\n\t\tif (composite) {\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t}\n\n\t\treturn composite;\n\t}\n\n\tprotected createComposite(id: string, isActive?: boolean): Composite {\n\n\t\t// Check if composite is already created\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\t\tif (compositeItem) {\n\t\t\treturn compositeItem.composite;\n\t\t}\n\n\t\t// Instantiate composite from registry otherwise\n\t\tconst compositeDescriptor = this.registry.getComposite(id);\n\t\tif (compositeDescriptor) {\n\t\t\tconst progressService = this.instantiationService.createInstance(ScopedProgressService, this.progressBar, compositeDescriptor.id, isActive);\n\t\t\tconst compositeInstantiationService = this.instantiationService.createChild(new ServiceCollection([IProgressService, progressService]));\n\n\t\t\tconst composite = compositeDescriptor.instantiate(compositeInstantiationService);\n\t\t\tconst disposables: IDisposable[] = [];\n\n\t\t\t// Remember as Instantiated\n\t\t\tthis.instantiatedCompositeItems.set(id, { composite, disposable: toDisposable(() => dispose(disposables)), progressService });\n\n\t\t\t// Register to title area update events from the composite\n\t\t\tcomposite.onTitleAreaUpdate(() => this.onTitleAreaUpdate(composite.getId()), this, disposables);\n\n\t\t\treturn composite;\n\t\t}\n\n\t\tthrow new Error(`Unable to find composite with id ${id}`);\n\t}\n\n\tprotected showComposite(composite: Composite): void {\n\n\t\t// Remember Composite\n\t\tthis.activeComposite = composite;\n\n\t\t// Store in preferences\n\t\tconst id = this.activeComposite.getId();\n\t\tif (id !== this.defaultCompositeId) {\n\t\t\tthis.storageService.store(this.activeCompositeSettingsKey, id, StorageScope.WORKSPACE);\n\t\t} else {\n\t\t\tthis.storageService.remove(this.activeCompositeSettingsKey, StorageScope.WORKSPACE);\n\t\t}\n\n\t\t// Remember\n\t\tthis.lastActiveCompositeId = this.activeComposite.getId();\n\n\t\t// Composites created for the first time\n\t\tlet compositeContainer = this.mapCompositeToCompositeContainer[composite.getId()];\n\t\tif (!compositeContainer) {\n\n\t\t\t// Build Container off-DOM\n\t\t\tcompositeContainer = $('.composite');\n\t\t\taddClasses(compositeContainer, this.compositeCSSClass);\n\t\t\tcompositeContainer.id = composite.getId();\n\n\t\t\tcomposite.create(compositeContainer);\n\t\t\tcomposite.updateStyles();\n\n\t\t\t// Remember composite container\n\t\t\tthis.mapCompositeToCompositeContainer[composite.getId()] = compositeContainer;\n\t\t}\n\n\t\t// Report progress for slow loading composites (but only if we did not create the composites before already)\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(composite.getId());\n\t\tif (compositeItem && !compositeContainer) {\n\t\t\tcompositeItem.progressService.showWhile(Promise.resolve(), this.layoutService.isRestored() ? 800 : 3200 /* less ugly initial startup */);\n\t\t}\n\n\t\t// Fill Content and Actions\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Take Composite on-DOM and show\n\t\tconst contentArea = this.getContentArea();\n\t\tif (contentArea) {\n\t\t\tcontentArea.appendChild(compositeContainer);\n\t\t}\n\t\tshow(compositeContainer);\n\n\t\t// Setup action runner\n\t\tthis.toolBar.actionRunner = composite.getActionRunner();\n\n\t\t// Update title with composite title if it differs from descriptor\n\t\tconst descriptor = this.registry.getComposite(composite.getId());\n\t\tif (descriptor && descriptor.name !== composite.getTitle()) {\n\t\t\tthis.updateTitle(composite.getId(), withNullAsUndefined(composite.getTitle()));\n\t\t}\n\n\t\t// Handle Composite Actions\n\t\tlet actionsBinding = this.mapActionsBindingToComposite[composite.getId()];\n\t\tif (!actionsBinding) {\n\t\t\tactionsBinding = this.collectCompositeActions(composite);\n\t\t\tthis.mapActionsBindingToComposite[composite.getId()] = actionsBinding;\n\t\t}\n\t\tactionsBinding();\n\n\t\tif (this.telemetryActionsListener) {\n\t\t\tthis.telemetryActionsListener.dispose();\n\t\t\tthis.telemetryActionsListener = null;\n\t\t}\n\n\t\t// Action Run Handling\n\t\tthis.telemetryActionsListener = this.toolBar.actionRunner.onDidRun(e => {\n\n\t\t\t// Check for Error\n\t\t\tif (e.error && !errors.isPromiseCanceledError(e.error)) {\n\t\t\t\tthis.notificationService.error(e.error);\n\t\t\t}\n\n\t\t\t// Log in telemetry\n\t\t\tif (this.telemetryService) {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"workbenchActionExecuted\" : {\n\t\t\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: this.nameForTelemetry });\n\t\t\t}\n\t\t});\n\n\t\t// Indicate to composite that it is now visible\n\t\tcomposite.setVisible(true);\n\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the composite is layed out\n\t\tif (this.contentAreaSize) {\n\t\t\tcomposite.layout(this.contentAreaSize);\n\t\t}\n\t}\n\n\tprotected onTitleAreaUpdate(compositeId: string): void {\n\n\t\t// Active Composite\n\t\tif (this.activeComposite && this.activeComposite.getId() === compositeId) {\n\n\t\t\t// Title\n\t\t\tthis.updateTitle(this.activeComposite.getId(), this.activeComposite.getTitle() || undefined);\n\n\t\t\t// Actions\n\t\t\tconst actionsBinding = this.collectCompositeActions(this.activeComposite);\n\t\t\tthis.mapActionsBindingToComposite[this.activeComposite.getId()] = actionsBinding;\n\t\t\tactionsBinding();\n\t\t}\n\n\t\t// Otherwise invalidate actions binding for next time when the composite becomes visible\n\t\telse {\n\t\t\tdelete this.mapActionsBindingToComposite[compositeId];\n\t\t}\n\t}\n\n\tprivate updateTitle(compositeId: string, compositeTitle?: string): void {\n\t\tconst compositeDescriptor = this.registry.getComposite(compositeId);\n\t\tif (!compositeDescriptor || !this.titleLabel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!compositeTitle) {\n\t\t\tcompositeTitle = compositeDescriptor.name;\n\t\t}\n\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(compositeId);\n\n\t\tthis.titleLabel.updateTitle(compositeId, compositeTitle, (keybinding && keybinding.getLabel()) || undefined);\n\n\t\tthis.toolBar.setAriaLabel(nls.localize('ariaCompositeToolbarLabel', \"{0} actions\", compositeTitle));\n\t}\n\n\tprivate collectCompositeActions(composite: Composite): () => void {\n\n\t\t// From Composite\n\t\tconst primaryActions: IAction[] = composite.getActions().slice(0);\n\t\tconst secondaryActions: IAction[] = composite.getSecondaryActions().slice(0);\n\n\t\t// From Part\n\t\tprimaryActions.push(...this.getActions());\n\t\tsecondaryActions.push(...this.getSecondaryActions());\n\n\t\t// Update context\n\t\tthis.toolBar.context = this.actionsContextProvider();\n\n\t\t// Return fn to set into toolbar\n\t\treturn this.toolBar.setActions(prepareActions(primaryActions), prepareActions(secondaryActions));\n\t}\n\n\tprotected getActiveComposite(): IComposite | null {\n\t\treturn this.activeComposite;\n\t}\n\n\tprotected getLastActiveCompositetId(): string {\n\t\treturn this.lastActiveCompositeId;\n\t}\n\n\tprotected hideActiveComposite(): Composite | undefined {\n\t\tif (!this.activeComposite) {\n\t\t\treturn undefined; // Nothing to do\n\t\t}\n\n\t\tconst composite = this.activeComposite;\n\t\tthis.activeComposite = null;\n\n\t\tconst compositeContainer = this.mapCompositeToCompositeContainer[composite.getId()];\n\n\t\t// Indicate to Composite\n\t\tcomposite.setVisible(false);\n\n\t\t// Take Container Off-DOM and hide\n\t\tcompositeContainer.remove();\n\t\thide(compositeContainer);\n\n\t\t// Clear any running Progress\n\t\tthis.progressBar.stop().hide();\n\n\t\t// Empty Actions\n\t\tthis.toolBar.setActions([])();\n\t\tthis.onDidCompositeClose.fire(composite);\n\n\t\treturn composite;\n\t}\n\n\tcreateTitleArea(parent: HTMLElement): HTMLElement {\n\n\t\t// Title Area Container\n\t\tconst titleArea = append(parent, $('.composite'));\n\t\taddClass(titleArea, 'title');\n\n\t\t// Left Title Label\n\t\tthis.titleLabel = this.createTitleLabel(titleArea);\n\n\t\t// Right Actions Container\n\t\tconst titleActionsContainer = append(titleArea, $('.title-actions'));\n\n\t\t// Toolbar\n\t\tthis.toolBar = this._register(new ToolBar(titleActionsContainer, this.contextMenuService, {\n\t\t\tactionItemProvider: action => this.actionItemProvider(action as Action),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tgetKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n\t\t\tanchorAlignmentProvider: () => this.getTitleAreaDropDownAnchorAlignment()\n\t\t}));\n\n\t\treturn titleArea;\n\t}\n\n\tprotected createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tconst titleContainer = append(parent, $('.title-label'));\n\t\tconst titleLabel = append(titleContainer, $('h2'));\n\n\t\tconst $this = this;\n\t\treturn {\n\t\t\tupdateTitle: (id, title, keybinding) => {\n\t\t\t\ttitleLabel.innerHTML = strings.escape(title);\n\t\t\t\ttitleLabel.title = keybinding ? nls.localize('titleTooltip', \"{0} ({1})\", title, keybinding) : title;\n\t\t\t},\n\n\t\t\tupdateStyles: () => {\n\t\t\t\ttitleLabel.style.color = $this.titleForegroundColor ? $this.getColor($this.titleForegroundColor) : null;\n\t\t\t}\n\t\t};\n\t}\n\n\tupdateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\t// Forward to title label\n\t\tthis.titleLabel.updateStyles();\n\t}\n\n\tprotected actionItemProvider(action: Action): IActionItem | undefined {\n\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionItem(action);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected actionsContextProvider(): any {\n\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionsContext();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateContentArea(parent: HTMLElement): HTMLElement {\n\t\tconst contentContainer = append(parent, $('.content'));\n\n\t\tthis.progressBar = this._register(new ProgressBar(contentContainer));\n\t\tthis._register(attachProgressBarStyler(this.progressBar, this.themeService));\n\t\tthis.progressBar.hide();\n\n\t\treturn contentContainer;\n\t}\n\n\tgetProgressIndicator(id: string): IProgressService | null {\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\n\t\treturn compositeItem ? compositeItem.progressService : null;\n\t}\n\n\tprotected getActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tprotected getSecondaryActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tprotected getTitleAreaDropDownAnchorAlignment(): AnchorAlignment {\n\t\treturn AnchorAlignment.RIGHT;\n\t}\n\n\tlayout(width: number, height: number): void {\n\n\t\t// Layout contents\n\t\tthis.contentAreaSize = super.layoutContents(width, height).contentSize;\n\n\t\t// Layout composite\n\t\tif (this.activeComposite) {\n\t\t\tthis.activeComposite.layout(this.contentAreaSize);\n\t\t}\n\t}\n\n\tprotected removeComposite(compositeId: string): boolean {\n\t\tif (this.activeComposite && this.activeComposite.getId() === compositeId) {\n\t\t\treturn false; // do not remove active composite\n\t\t}\n\n\t\tdelete this.mapCompositeToCompositeContainer[compositeId];\n\t\tdelete this.mapActionsBindingToComposite[compositeId];\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(compositeId);\n\t\tif (compositeItem) {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t\tthis.instantiatedCompositeItems.delete(compositeId);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdispose(): void {\n\t\tthis.mapCompositeToCompositeContainer = null!; // StrictNullOverride: nulling out ok in dispose\n\t\tthis.mapActionsBindingToComposite = null!; // StrictNullOverride: nulling out ok in dispose\n\n\t\tthis.instantiatedCompositeItems.forEach(compositeItem => {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t});\n\n\t\tthis.instantiatedCompositeItems.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}]}