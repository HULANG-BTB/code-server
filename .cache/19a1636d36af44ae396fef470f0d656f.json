{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/network.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Schemas;\n    (function (Schemas) {\n        /**\n         * A schema that is used for models that exist in memory\n         * only and that have no correspondence on a server or such.\n         */\n        Schemas.inMemory = 'inmemory';\n        /**\n         * A schema that is used for setting files\n         */\n        Schemas.vscode = 'vscode';\n        /**\n         * A schema that is used for internal private files\n         */\n        Schemas.internal = 'private';\n        /**\n         * A walk-through document.\n         */\n        Schemas.walkThrough = 'walkThrough';\n        /**\n         * An embedded code snippet.\n         */\n        Schemas.walkThroughSnippet = 'walkThroughSnippet';\n        Schemas.http = 'http';\n        Schemas.https = 'https';\n        Schemas.file = 'file';\n        Schemas.mailto = 'mailto';\n        Schemas.untitled = 'untitled';\n        Schemas.data = 'data';\n        Schemas.command = 'command';\n    })(Schemas = exports.Schemas || (exports.Schemas = {}));\n});\n",null]}