{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeModel.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Assert = require(\"vs/base/common/assert\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar LockData = /** @class */ (function () {\n    function LockData(item) {\n        this._onDispose = new event_1.Emitter();\n        this.onDispose = this._onDispose.event;\n        this._item = item;\n    }\n    Object.defineProperty(LockData.prototype, \"item\", {\n        get: function () {\n            return this._item;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LockData.prototype.dispose = function () {\n        if (this._onDispose) {\n            this._onDispose.fire();\n            this._onDispose.dispose();\n            this._onDispose = undefined;\n        }\n    };\n    return LockData;\n}());\nexports.LockData = LockData;\nvar Lock = /** @class */ (function () {\n    function Lock() {\n        this.locks = Object.create({});\n    }\n    Lock.prototype.isLocked = function (item) {\n        return !!this.locks[item.id];\n    };\n    Lock.prototype.run = function (item, fn) {\n        var _this = this;\n        var lock = this.getLock(item);\n        if (lock) {\n            return new Promise(function (c, e) {\n                event_1.Event.once(lock.onDispose)(function () {\n                    return _this.run(item, fn).then(c, e);\n                });\n            });\n        }\n        var result;\n        return new Promise(function (c, e) {\n            if (item.isDisposed()) {\n                return e(new Error('Item is disposed.'));\n            }\n            var lock = _this.locks[item.id] = new LockData(item);\n            result = fn().then(function (r) {\n                delete _this.locks[item.id];\n                lock.dispose();\n                return r;\n            }).then(c, e);\n            return result;\n        });\n    };\n    Lock.prototype.getLock = function (item) {\n        var key;\n        for (key in this.locks) {\n            var lock = this.locks[key];\n            if (item.intersects(lock.item)) {\n                return lock;\n            }\n        }\n        return null;\n    };\n    return Lock;\n}());\nexports.Lock = Lock;\nvar ItemRegistry = /** @class */ (function () {\n    function ItemRegistry() {\n        this._isDisposed = false;\n        this._onDidRevealItem = new event_1.EventMultiplexer();\n        this.onDidRevealItem = this._onDidRevealItem.event;\n        this._onExpandItem = new event_1.EventMultiplexer();\n        this.onExpandItem = this._onExpandItem.event;\n        this._onDidExpandItem = new event_1.EventMultiplexer();\n        this.onDidExpandItem = this._onDidExpandItem.event;\n        this._onCollapseItem = new event_1.EventMultiplexer();\n        this.onCollapseItem = this._onCollapseItem.event;\n        this._onDidCollapseItem = new event_1.EventMultiplexer();\n        this.onDidCollapseItem = this._onDidCollapseItem.event;\n        this._onDidAddTraitItem = new event_1.EventMultiplexer();\n        this.onDidAddTraitItem = this._onDidAddTraitItem.event;\n        this._onDidRemoveTraitItem = new event_1.EventMultiplexer();\n        this.onDidRemoveTraitItem = this._onDidRemoveTraitItem.event;\n        this._onDidRefreshItem = new event_1.EventMultiplexer();\n        this.onDidRefreshItem = this._onDidRefreshItem.event;\n        this._onRefreshItemChildren = new event_1.EventMultiplexer();\n        this.onRefreshItemChildren = this._onRefreshItemChildren.event;\n        this._onDidRefreshItemChildren = new event_1.EventMultiplexer();\n        this.onDidRefreshItemChildren = this._onDidRefreshItemChildren.event;\n        this._onDidDisposeItem = new event_1.EventMultiplexer();\n        this.onDidDisposeItem = this._onDidDisposeItem.event;\n        this.items = {};\n    }\n    ItemRegistry.prototype.register = function (item) {\n        Assert.ok(!this.isRegistered(item.id), 'item already registered: ' + item.id);\n        var disposable = lifecycle_1.combinedDisposable([\n            this._onDidRevealItem.add(item.onDidReveal),\n            this._onExpandItem.add(item.onExpand),\n            this._onDidExpandItem.add(item.onDidExpand),\n            this._onCollapseItem.add(item.onCollapse),\n            this._onDidCollapseItem.add(item.onDidCollapse),\n            this._onDidAddTraitItem.add(item.onDidAddTrait),\n            this._onDidRemoveTraitItem.add(item.onDidRemoveTrait),\n            this._onDidRefreshItem.add(item.onDidRefresh),\n            this._onRefreshItemChildren.add(item.onRefreshChildren),\n            this._onDidRefreshItemChildren.add(item.onDidRefreshChildren),\n            this._onDidDisposeItem.add(item.onDidDispose)\n        ]);\n        this.items[item.id] = { item: item, disposable: disposable };\n    };\n    ItemRegistry.prototype.deregister = function (item) {\n        Assert.ok(this.isRegistered(item.id), 'item not registered: ' + item.id);\n        this.items[item.id].disposable.dispose();\n        delete this.items[item.id];\n    };\n    ItemRegistry.prototype.isRegistered = function (id) {\n        return this.items.hasOwnProperty(id);\n    };\n    ItemRegistry.prototype.getItem = function (id) {\n        var result = this.items[id];\n        return result ? result.item : null;\n    };\n    ItemRegistry.prototype.dispose = function () {\n        this.items = null; // StrictNullOverride: nulling out ok in dispose\n        this._onDidRevealItem.dispose();\n        this._onExpandItem.dispose();\n        this._onDidExpandItem.dispose();\n        this._onCollapseItem.dispose();\n        this._onDidCollapseItem.dispose();\n        this._onDidAddTraitItem.dispose();\n        this._onDidRemoveTraitItem.dispose();\n        this._onDidRefreshItem.dispose();\n        this._onRefreshItemChildren.dispose();\n        this._onDidRefreshItemChildren.dispose();\n        this._isDisposed = true;\n    };\n    ItemRegistry.prototype.isDisposed = function () {\n        return this._isDisposed;\n    };\n    return ItemRegistry;\n}());\nexports.ItemRegistry = ItemRegistry;\nvar Item = /** @class */ (function () {\n    function Item(id, registry, context, lock, element) {\n        this._onDidCreate = new event_1.Emitter();\n        this.onDidCreate = this._onDidCreate.event;\n        this._onDidReveal = new event_1.Emitter();\n        this.onDidReveal = this._onDidReveal.event;\n        this._onExpand = new event_1.Emitter();\n        this.onExpand = this._onExpand.event;\n        this._onDidExpand = new event_1.Emitter();\n        this.onDidExpand = this._onDidExpand.event;\n        this._onCollapse = new event_1.Emitter();\n        this.onCollapse = this._onCollapse.event;\n        this._onDidCollapse = new event_1.Emitter();\n        this.onDidCollapse = this._onDidCollapse.event;\n        this._onDidAddTrait = new event_1.Emitter();\n        this.onDidAddTrait = this._onDidAddTrait.event;\n        this._onDidRemoveTrait = new event_1.Emitter();\n        this.onDidRemoveTrait = this._onDidRemoveTrait.event;\n        this._onDidRefresh = new event_1.Emitter();\n        this.onDidRefresh = this._onDidRefresh.event;\n        this._onRefreshChildren = new event_1.Emitter();\n        this.onRefreshChildren = this._onRefreshChildren.event;\n        this._onDidRefreshChildren = new event_1.Emitter();\n        this.onDidRefreshChildren = this._onDidRefreshChildren.event;\n        this._onDidDispose = new event_1.Emitter();\n        this.onDidDispose = this._onDidDispose.event;\n        this.registry = registry;\n        this.context = context;\n        this.lock = lock;\n        this.element = element;\n        this.id = id;\n        this.registry.register(this);\n        this.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element);\n        this.needsChildrenRefresh = true;\n        this.parent = null;\n        this.previous = null;\n        this.next = null;\n        this.firstChild = null;\n        this.lastChild = null;\n        this.traits = {};\n        this.depth = 0;\n        this.expanded = !!(this.context.dataSource.shouldAutoexpand && this.context.dataSource.shouldAutoexpand(this.context.tree, element));\n        this._onDidCreate.fire(this);\n        this.visible = this._isVisible();\n        this.height = this._getHeight();\n        this._isDisposed = false;\n    }\n    Item.prototype.getElement = function () {\n        return this.element;\n    };\n    Item.prototype.hasChildren = function () {\n        return this.doesHaveChildren;\n    };\n    Item.prototype.getDepth = function () {\n        return this.depth;\n    };\n    Item.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Item.prototype.setVisible = function (value) {\n        this.visible = value;\n    };\n    Item.prototype.isExpanded = function () {\n        return this.expanded;\n    };\n    /* protected */ Item.prototype._setExpanded = function (value) {\n        this.expanded = value;\n    };\n    Item.prototype.reveal = function (relativeTop) {\n        if (relativeTop === void 0) { relativeTop = null; }\n        var eventData = { item: this, relativeTop: relativeTop };\n        this._onDidReveal.fire(eventData);\n    };\n    Item.prototype.expand = function () {\n        var _this = this;\n        if (this.isExpanded() || !this.doesHaveChildren || this.lock.isLocked(this)) {\n            return Promise.resolve(false);\n        }\n        var result = this.lock.run(this, function () {\n            if (_this.isExpanded() || !_this.doesHaveChildren) {\n                return Promise.resolve(false);\n            }\n            var eventData = { item: _this };\n            var result;\n            _this._onExpand.fire(eventData);\n            if (_this.needsChildrenRefresh) {\n                result = _this.refreshChildren(false, true, true);\n            }\n            else {\n                result = Promise.resolve(null);\n            }\n            return result.then(function () {\n                _this._setExpanded(true);\n                _this._onDidExpand.fire(eventData);\n                return true;\n            });\n        });\n        return result.then(function (r) {\n            if (_this.isDisposed()) {\n                return false;\n            }\n            // Auto expand single child folders\n            if (_this.context.options.autoExpandSingleChildren && r && _this.firstChild !== null && _this.firstChild === _this.lastChild && _this.firstChild.isVisible()) {\n                return _this.firstChild.expand().then(function () { return true; });\n            }\n            return r;\n        });\n    };\n    Item.prototype.collapse = function (recursive) {\n        var _this = this;\n        if (recursive === void 0) { recursive = false; }\n        if (recursive) {\n            var collapseChildrenPromise_1 = Promise.resolve(null);\n            this.forEachChild(function (child) {\n                collapseChildrenPromise_1 = collapseChildrenPromise_1.then(function () { return child.collapse(true); });\n            });\n            return collapseChildrenPromise_1.then(function () {\n                return _this.collapse(false);\n            });\n        }\n        else {\n            if (!this.isExpanded() || this.lock.isLocked(this)) {\n                return Promise.resolve(false);\n            }\n            return this.lock.run(this, function () {\n                var eventData = { item: _this };\n                _this._onCollapse.fire(eventData);\n                _this._setExpanded(false);\n                _this._onDidCollapse.fire(eventData);\n                return Promise.resolve(true);\n            });\n        }\n    };\n    Item.prototype.addTrait = function (trait) {\n        var eventData = { item: this, trait: trait };\n        this.traits[trait] = true;\n        this._onDidAddTrait.fire(eventData);\n    };\n    Item.prototype.removeTrait = function (trait) {\n        var eventData = { item: this, trait: trait };\n        delete this.traits[trait];\n        this._onDidRemoveTrait.fire(eventData);\n    };\n    Item.prototype.hasTrait = function (trait) {\n        return this.traits[trait] || false;\n    };\n    Item.prototype.getAllTraits = function () {\n        var result = [];\n        var trait;\n        for (trait in this.traits) {\n            if (this.traits.hasOwnProperty(trait) && this.traits[trait]) {\n                result.push(trait);\n            }\n        }\n        return result;\n    };\n    Item.prototype.getHeight = function () {\n        return this.height;\n    };\n    Item.prototype.refreshChildren = function (recursive, safe, force) {\n        var _this = this;\n        if (safe === void 0) { safe = false; }\n        if (force === void 0) { force = false; }\n        if (!force && !this.isExpanded()) {\n            var setNeedsChildrenRefresh_1 = function (item) {\n                item.needsChildrenRefresh = true;\n                item.forEachChild(setNeedsChildrenRefresh_1);\n            };\n            setNeedsChildrenRefresh_1(this);\n            return Promise.resolve(this);\n        }\n        this.needsChildrenRefresh = false;\n        var doRefresh = function () {\n            var eventData = { item: _this, isNested: safe };\n            _this._onRefreshChildren.fire(eventData);\n            var childrenPromise;\n            if (_this.doesHaveChildren) {\n                childrenPromise = _this.context.dataSource.getChildren(_this.context.tree, _this.element);\n            }\n            else {\n                childrenPromise = Promise.resolve([]);\n            }\n            var result = childrenPromise.then(function (elements) {\n                if (_this.isDisposed() || _this.registry.isDisposed()) {\n                    return Promise.resolve(null);\n                }\n                if (!Array.isArray(elements)) {\n                    return Promise.reject(new Error('Please return an array of children.'));\n                }\n                elements = !elements ? [] : elements.slice(0);\n                elements = _this.sort(elements);\n                var staleItems = {};\n                while (_this.firstChild !== null) {\n                    staleItems[_this.firstChild.id] = _this.firstChild;\n                    _this.removeChild(_this.firstChild);\n                }\n                for (var i = 0, len = elements.length; i < len; i++) {\n                    var element = elements[i];\n                    var id = _this.context.dataSource.getId(_this.context.tree, element);\n                    var item = staleItems[id] || new Item(id, _this.registry, _this.context, _this.lock, element);\n                    item.element = element;\n                    if (recursive) {\n                        item.needsChildrenRefresh = recursive;\n                    }\n                    delete staleItems[id];\n                    _this.addChild(item);\n                }\n                for (var staleItemId in staleItems) {\n                    if (staleItems.hasOwnProperty(staleItemId)) {\n                        staleItems[staleItemId].dispose();\n                    }\n                }\n                if (recursive) {\n                    return Promise.all(_this.mapEachChild(function (child) {\n                        return child.doRefresh(recursive, true);\n                    }));\n                }\n                else {\n                    return Promise.all(_this.mapEachChild(function (child) {\n                        if (child.isExpanded() && child.needsChildrenRefresh) {\n                            return child.doRefresh(recursive, true);\n                        }\n                        else {\n                            child.updateVisibility();\n                            return Promise.resolve(null);\n                        }\n                    }));\n                }\n            });\n            return result\n                .then(undefined, errors_1.onUnexpectedError)\n                .then(function () { return _this._onDidRefreshChildren.fire(eventData); });\n        };\n        return safe ? doRefresh() : this.lock.run(this, doRefresh);\n    };\n    Item.prototype.doRefresh = function (recursive, safe) {\n        if (safe === void 0) { safe = false; }\n        this.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element);\n        this.height = this._getHeight();\n        this.updateVisibility();\n        this._onDidRefresh.fire(this);\n        return this.refreshChildren(recursive, safe);\n    };\n    Item.prototype.updateVisibility = function () {\n        this.setVisible(this._isVisible());\n    };\n    Item.prototype.refresh = function (recursive) {\n        return this.doRefresh(recursive);\n    };\n    Item.prototype.getNavigator = function () {\n        return new TreeNavigator(this);\n    };\n    Item.prototype.intersects = function (other) {\n        return this.isAncestorOf(other) || other.isAncestorOf(this);\n    };\n    Item.prototype.getHierarchy = function () {\n        var result = [];\n        var node = this;\n        do {\n            result.push(node);\n            node = node.parent;\n        } while (node);\n        result.reverse();\n        return result;\n    };\n    Item.prototype.isAncestorOf = function (startItem) {\n        var item = startItem;\n        while (item) {\n            if (item.id === this.id) {\n                return true;\n            }\n            item = item.parent;\n        }\n        return false;\n    };\n    Item.prototype.addChild = function (item, afterItem) {\n        if (afterItem === void 0) { afterItem = this.lastChild; }\n        var isEmpty = this.firstChild === null;\n        var atHead = afterItem === null;\n        var atTail = afterItem === this.lastChild;\n        if (isEmpty) {\n            this.firstChild = this.lastChild = item;\n            item.next = item.previous = null;\n        }\n        else if (atHead) {\n            if (!this.firstChild) {\n                throw new Error('Invalid tree state');\n            }\n            this.firstChild.previous = item;\n            item.next = this.firstChild;\n            item.previous = null;\n            this.firstChild = item;\n        }\n        else if (atTail) {\n            if (!this.lastChild) {\n                throw new Error('Invalid tree state');\n            }\n            this.lastChild.next = item;\n            item.next = null;\n            item.previous = this.lastChild;\n            this.lastChild = item;\n        }\n        else {\n            item.previous = afterItem;\n            if (!afterItem) {\n                throw new Error('Invalid tree state');\n            }\n            item.next = afterItem.next;\n            if (!afterItem.next) {\n                throw new Error('Invalid tree state');\n            }\n            afterItem.next.previous = item;\n            afterItem.next = item;\n        }\n        item.parent = this;\n        item.depth = this.depth + 1;\n    };\n    Item.prototype.removeChild = function (item) {\n        var isFirstChild = this.firstChild === item;\n        var isLastChild = this.lastChild === item;\n        if (isFirstChild && isLastChild) {\n            this.firstChild = this.lastChild = null;\n        }\n        else if (isFirstChild) {\n            if (!item.next) {\n                throw new Error('Invalid tree state');\n            }\n            item.next.previous = null;\n            this.firstChild = item.next;\n        }\n        else if (isLastChild) {\n            if (!item.previous) {\n                throw new Error('Invalid tree state');\n            }\n            item.previous.next = null;\n            this.lastChild = item.previous;\n        }\n        else {\n            if (!item.next) {\n                throw new Error('Invalid tree state');\n            }\n            item.next.previous = item.previous;\n            if (!item.previous) {\n                throw new Error('Invalid tree state');\n            }\n            item.previous.next = item.next;\n        }\n        item.parent = null;\n        item.depth = NaN;\n    };\n    Item.prototype.forEachChild = function (fn) {\n        var child = this.firstChild;\n        var next;\n        while (child) {\n            next = child.next;\n            fn(child);\n            child = next;\n        }\n    };\n    Item.prototype.mapEachChild = function (fn) {\n        var result = [];\n        this.forEachChild(function (child) {\n            result.push(fn(child));\n        });\n        return result;\n    };\n    Item.prototype.sort = function (elements) {\n        var _this = this;\n        var sorter = this.context.sorter;\n        if (sorter) {\n            return elements.sort(function (element, otherElement) {\n                return sorter.compare(_this.context.tree, element, otherElement);\n            });\n        }\n        return elements;\n    };\n    /* protected */ Item.prototype._getHeight = function () {\n        if (!this.context.renderer) {\n            return 0;\n        }\n        return this.context.renderer.getHeight(this.context.tree, this.element);\n    };\n    /* protected */ Item.prototype._isVisible = function () {\n        if (!this.context.filter) {\n            return false;\n        }\n        return this.context.filter.isVisible(this.context.tree, this.element);\n    };\n    Item.prototype.isDisposed = function () {\n        return this._isDisposed;\n    };\n    Item.prototype.dispose = function () {\n        this.forEachChild(function (child) { return child.dispose(); });\n        this.parent = null;\n        this.previous = null;\n        this.next = null;\n        this.firstChild = null;\n        this.lastChild = null;\n        this._onDidDispose.fire(this);\n        this.registry.deregister(this);\n        this._onDidCreate.dispose();\n        this._onDidReveal.dispose();\n        this._onExpand.dispose();\n        this._onDidExpand.dispose();\n        this._onCollapse.dispose();\n        this._onDidCollapse.dispose();\n        this._onDidAddTrait.dispose();\n        this._onDidRemoveTrait.dispose();\n        this._onDidRefresh.dispose();\n        this._onRefreshChildren.dispose();\n        this._onDidRefreshChildren.dispose();\n        this._onDidDispose.dispose();\n        this._isDisposed = true;\n    };\n    return Item;\n}());\nexports.Item = Item;\nvar RootItem = /** @class */ (function (_super) {\n    tslib_1.__extends(RootItem, _super);\n    function RootItem(id, registry, context, lock, element) {\n        return _super.call(this, id, registry, context, lock, element) || this;\n    }\n    RootItem.prototype.isVisible = function () {\n        return false;\n    };\n    RootItem.prototype.setVisible = function (value) {\n        // no-op\n    };\n    RootItem.prototype.isExpanded = function () {\n        return true;\n    };\n    /* protected */ RootItem.prototype._setExpanded = function (value) {\n        // no-op\n    };\n    RootItem.prototype.render = function () {\n        // no-op\n    };\n    /* protected */ RootItem.prototype._getHeight = function () {\n        return 0;\n    };\n    /* protected */ RootItem.prototype._isVisible = function () {\n        return false;\n    };\n    return RootItem;\n}(Item));\nvar TreeNavigator = /** @class */ (function () {\n    function TreeNavigator(item, subTreeOnly) {\n        if (subTreeOnly === void 0) { subTreeOnly = true; }\n        this.item = item;\n        this.start = subTreeOnly ? item : null;\n    }\n    TreeNavigator.lastDescendantOf = function (item) {\n        if (!item) {\n            return null;\n        }\n        if (item instanceof RootItem) {\n            return TreeNavigator.lastDescendantOf(item.lastChild);\n        }\n        if (!item.isVisible()) {\n            return TreeNavigator.lastDescendantOf(item.previous);\n        }\n        if (!item.isExpanded() || item.lastChild === null) {\n            return item;\n        }\n        return TreeNavigator.lastDescendantOf(item.lastChild);\n    };\n    TreeNavigator.prototype.current = function () {\n        return this.item || null;\n    };\n    TreeNavigator.prototype.next = function () {\n        if (this.item) {\n            do {\n                if ((this.item instanceof RootItem || (this.item.isVisible() && this.item.isExpanded())) && this.item.firstChild) {\n                    this.item = this.item.firstChild;\n                }\n                else if (this.item === this.start) {\n                    this.item = null;\n                }\n                else {\n                    // select next brother, next uncle, next great-uncle, etc...\n                    while (this.item && this.item !== this.start && !this.item.next) {\n                        this.item = this.item.parent;\n                    }\n                    if (this.item === this.start) {\n                        this.item = null;\n                    }\n                    this.item = !this.item ? null : this.item.next;\n                }\n            } while (this.item && !this.item.isVisible());\n        }\n        return this.item || null;\n    };\n    TreeNavigator.prototype.previous = function () {\n        if (this.item) {\n            do {\n                var previous = TreeNavigator.lastDescendantOf(this.item.previous);\n                if (previous) {\n                    this.item = previous;\n                }\n                else if (this.item.parent && this.item.parent !== this.start && this.item.parent.isVisible()) {\n                    this.item = this.item.parent;\n                }\n                else {\n                    this.item = null;\n                }\n            } while (this.item && !this.item.isVisible());\n        }\n        return this.item || null;\n    };\n    TreeNavigator.prototype.parent = function () {\n        if (this.item) {\n            var parent = this.item.parent;\n            if (parent && parent !== this.start && parent.isVisible()) {\n                this.item = parent;\n            }\n            else {\n                this.item = null;\n            }\n        }\n        return this.item || null;\n    };\n    TreeNavigator.prototype.first = function () {\n        this.item = this.start;\n        this.next();\n        return this.item || null;\n    };\n    TreeNavigator.prototype.last = function () {\n        return TreeNavigator.lastDescendantOf(this.start);\n    };\n    return TreeNavigator;\n}());\nexports.TreeNavigator = TreeNavigator;\nvar TreeModel = /** @class */ (function () {\n    function TreeModel(context) {\n        this._onSetInput = new event_1.Emitter();\n        this.onSetInput = this._onSetInput.event;\n        this._onDidSetInput = new event_1.Emitter();\n        this.onDidSetInput = this._onDidSetInput.event;\n        this._onRefresh = new event_1.Emitter();\n        this.onRefresh = this._onRefresh.event;\n        this._onDidRefresh = new event_1.Emitter();\n        this.onDidRefresh = this._onDidRefresh.event;\n        this._onDidHighlight = new event_1.Emitter();\n        this.onDidHighlight = this._onDidHighlight.event;\n        this._onDidSelect = new event_1.Emitter();\n        this.onDidSelect = this._onDidSelect.event;\n        this._onDidFocus = new event_1.Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidRevealItem = new event_1.Relay();\n        this.onDidRevealItem = this._onDidRevealItem.event;\n        this._onExpandItem = new event_1.Relay();\n        this.onExpandItem = this._onExpandItem.event;\n        this._onDidExpandItem = new event_1.Relay();\n        this.onDidExpandItem = this._onDidExpandItem.event;\n        this._onCollapseItem = new event_1.Relay();\n        this.onCollapseItem = this._onCollapseItem.event;\n        this._onDidCollapseItem = new event_1.Relay();\n        this.onDidCollapseItem = this._onDidCollapseItem.event;\n        this._onDidAddTraitItem = new event_1.Relay();\n        this.onDidAddTraitItem = this._onDidAddTraitItem.event;\n        this._onDidRemoveTraitItem = new event_1.Relay();\n        this.onDidRemoveTraitItem = this._onDidRemoveTraitItem.event;\n        this._onDidRefreshItem = new event_1.Relay();\n        this.onDidRefreshItem = this._onDidRefreshItem.event;\n        this._onRefreshItemChildren = new event_1.Relay();\n        this.onRefreshItemChildren = this._onRefreshItemChildren.event;\n        this._onDidRefreshItemChildren = new event_1.Relay();\n        this.onDidRefreshItemChildren = this._onDidRefreshItemChildren.event;\n        this._onDidDisposeItem = new event_1.Relay();\n        this.onDidDisposeItem = this._onDidDisposeItem.event;\n        this.context = context;\n        this.input = null;\n        this.traitsToItems = {};\n    }\n    TreeModel.prototype.setInput = function (element) {\n        var _this = this;\n        var eventData = { item: this.input };\n        this._onSetInput.fire(eventData);\n        this.setSelection([]);\n        this.setFocus();\n        this.setHighlight();\n        this.lock = new Lock();\n        if (this.input) {\n            this.input.dispose();\n        }\n        if (this.registry) {\n            this.registry.dispose();\n            this.registryDisposable.dispose();\n        }\n        this.registry = new ItemRegistry();\n        this._onDidRevealItem.input = this.registry.onDidRevealItem;\n        this._onExpandItem.input = this.registry.onExpandItem;\n        this._onDidExpandItem.input = this.registry.onDidExpandItem;\n        this._onCollapseItem.input = this.registry.onCollapseItem;\n        this._onDidCollapseItem.input = this.registry.onDidCollapseItem;\n        this._onDidAddTraitItem.input = this.registry.onDidAddTraitItem;\n        this._onDidRemoveTraitItem.input = this.registry.onDidRemoveTraitItem;\n        this._onDidRefreshItem.input = this.registry.onDidRefreshItem;\n        this._onRefreshItemChildren.input = this.registry.onRefreshItemChildren;\n        this._onDidRefreshItemChildren.input = this.registry.onDidRefreshItemChildren;\n        this._onDidDisposeItem.input = this.registry.onDidDisposeItem;\n        this.registryDisposable = this.registry\n            .onDidDisposeItem(function (item) { return item.getAllTraits().forEach(function (trait) { return delete _this.traitsToItems[trait][item.id]; }); });\n        var id = this.context.dataSource.getId(this.context.tree, element);\n        this.input = new RootItem(id, this.registry, this.context, this.lock, element);\n        eventData = { item: this.input };\n        this._onDidSetInput.fire(eventData);\n        return this.refresh(this.input);\n    };\n    TreeModel.prototype.getInput = function () {\n        return this.input ? this.input.getElement() : null;\n    };\n    TreeModel.prototype.refresh = function (element, recursive) {\n        var _this = this;\n        if (element === void 0) { element = null; }\n        if (recursive === void 0) { recursive = true; }\n        var item = this.getItem(element);\n        if (!item) {\n            return Promise.resolve(null);\n        }\n        var eventData = { item: item, recursive: recursive };\n        this._onRefresh.fire(eventData);\n        return item.refresh(recursive).then(function () {\n            _this._onDidRefresh.fire(eventData);\n        });\n    };\n    TreeModel.prototype.expand = function (element) {\n        var item = this.getItem(element);\n        if (!item) {\n            return Promise.resolve(false);\n        }\n        return item.expand();\n    };\n    TreeModel.prototype.expandAll = function (elements) {\n        if (!elements) {\n            elements = [];\n            var item = void 0;\n            var nav = this.getNavigator();\n            while (item = nav.next()) {\n                elements.push(item);\n            }\n        }\n        return this._expandAll(elements);\n    };\n    TreeModel.prototype._expandAll = function (elements) {\n        var _this = this;\n        if (elements.length === 0) {\n            return Promise.resolve(null);\n        }\n        var elementsToExpand = [];\n        var elementsToDelay = [];\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var item = this.getItem(element);\n            if (item) {\n                elementsToExpand.push(element);\n            }\n            else {\n                elementsToDelay.push(element);\n            }\n        }\n        if (elementsToExpand.length === 0) {\n            return Promise.resolve(null);\n        }\n        return this.__expandAll(elementsToExpand)\n            .then(function () { return _this._expandAll(elementsToDelay); });\n    };\n    TreeModel.prototype.__expandAll = function (elements) {\n        var promises = [];\n        for (var i = 0, len = elements.length; i < len; i++) {\n            promises.push(this.expand(elements[i]));\n        }\n        return Promise.all(promises);\n    };\n    TreeModel.prototype.collapse = function (element, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        var item = this.getItem(element);\n        if (!item) {\n            return Promise.resolve(false);\n        }\n        return item.collapse(recursive);\n    };\n    TreeModel.prototype.collapseAll = function (elements, recursive) {\n        if (elements === void 0) { elements = null; }\n        if (recursive === void 0) { recursive = false; }\n        if (!elements) {\n            elements = [this.input];\n            recursive = true;\n        }\n        var promises = [];\n        for (var i = 0, len = elements.length; i < len; i++) {\n            promises.push(this.collapse(elements[i], recursive));\n        }\n        return Promise.all(promises);\n    };\n    TreeModel.prototype.toggleExpansion = function (element, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.isExpanded(element) ? this.collapse(element, recursive) : this.expand(element);\n    };\n    TreeModel.prototype.toggleExpansionAll = function (elements) {\n        var promises = [];\n        for (var i = 0, len = elements.length; i < len; i++) {\n            promises.push(this.toggleExpansion(elements[i]));\n        }\n        return Promise.all(promises);\n    };\n    TreeModel.prototype.isExpanded = function (element) {\n        var item = this.getItem(element);\n        if (!item) {\n            return false;\n        }\n        return item.isExpanded();\n    };\n    TreeModel.prototype.getExpandedElements = function () {\n        var result = [];\n        var item;\n        var nav = this.getNavigator();\n        while (item = nav.next()) {\n            if (item.isExpanded()) {\n                result.push(item.getElement());\n            }\n        }\n        return result;\n    };\n    TreeModel.prototype.reveal = function (element, relativeTop) {\n        var _this = this;\n        if (relativeTop === void 0) { relativeTop = null; }\n        return this.resolveUnknownParentChain(element).then(function (chain) {\n            var result = Promise.resolve(null);\n            chain.forEach(function (e) {\n                result = result.then(function () { return _this.expand(e); });\n            });\n            return result;\n        }).then(function () {\n            var item = _this.getItem(element);\n            if (item) {\n                return item.reveal(relativeTop);\n            }\n        });\n    };\n    TreeModel.prototype.resolveUnknownParentChain = function (element) {\n        var _this = this;\n        return this.context.dataSource.getParent(this.context.tree, element).then(function (parent) {\n            if (!parent) {\n                return Promise.resolve([]);\n            }\n            return _this.resolveUnknownParentChain(parent).then(function (result) {\n                result.push(parent);\n                return result;\n            });\n        });\n    };\n    TreeModel.prototype.setHighlight = function (element, eventPayload) {\n        this.setTraits('highlighted', element ? [element] : []);\n        var eventData = { highlight: this.getHighlight(), payload: eventPayload };\n        this._onDidHighlight.fire(eventData);\n    };\n    TreeModel.prototype.getHighlight = function (includeHidden) {\n        if (includeHidden === void 0) { includeHidden = false; }\n        var result = this.getElementsWithTrait('highlighted', includeHidden);\n        return result.length === 0 ? null : result[0];\n    };\n    TreeModel.prototype.isHighlighted = function (element) {\n        var item = this.getItem(element);\n        if (!item) {\n            return false;\n        }\n        return item.hasTrait('highlighted');\n    };\n    TreeModel.prototype.select = function (element, eventPayload) {\n        this.selectAll([element], eventPayload);\n    };\n    TreeModel.prototype.selectAll = function (elements, eventPayload) {\n        this.addTraits('selected', elements);\n        var eventData = { selection: this.getSelection(), payload: eventPayload };\n        this._onDidSelect.fire(eventData);\n    };\n    TreeModel.prototype.deselect = function (element, eventPayload) {\n        this.deselectAll([element], eventPayload);\n    };\n    TreeModel.prototype.deselectAll = function (elements, eventPayload) {\n        this.removeTraits('selected', elements);\n        var eventData = { selection: this.getSelection(), payload: eventPayload };\n        this._onDidSelect.fire(eventData);\n    };\n    TreeModel.prototype.setSelection = function (elements, eventPayload) {\n        this.setTraits('selected', elements);\n        var eventData = { selection: this.getSelection(), payload: eventPayload };\n        this._onDidSelect.fire(eventData);\n    };\n    TreeModel.prototype.isSelected = function (element) {\n        var item = this.getItem(element);\n        if (!item) {\n            return false;\n        }\n        return item.hasTrait('selected');\n    };\n    TreeModel.prototype.getSelection = function (includeHidden) {\n        if (includeHidden === void 0) { includeHidden = false; }\n        return this.getElementsWithTrait('selected', includeHidden);\n    };\n    TreeModel.prototype.selectNext = function (count, clearSelection, eventPayload) {\n        if (count === void 0) { count = 1; }\n        if (clearSelection === void 0) { clearSelection = true; }\n        var selection = this.getSelection();\n        var item = selection.length > 0 ? selection[0] : this.input;\n        var nextItem;\n        var nav = this.getNavigator(item, false);\n        for (var i = 0; i < count; i++) {\n            nextItem = nav.next();\n            if (!nextItem) {\n                break;\n            }\n            item = nextItem;\n        }\n        if (clearSelection) {\n            this.setSelection([item], eventPayload);\n        }\n        else {\n            this.select(item, eventPayload);\n        }\n    };\n    TreeModel.prototype.selectPrevious = function (count, clearSelection, eventPayload) {\n        if (count === void 0) { count = 1; }\n        if (clearSelection === void 0) { clearSelection = true; }\n        var selection = this.getSelection(), item = null, previousItem = null;\n        if (selection.length === 0) {\n            var nav = this.getNavigator(this.input);\n            while (item = nav.next()) {\n                previousItem = item;\n            }\n            item = previousItem;\n        }\n        else {\n            item = selection[0];\n            var nav = this.getNavigator(item, false);\n            for (var i = 0; i < count; i++) {\n                previousItem = nav.previous();\n                if (!previousItem) {\n                    break;\n                }\n                item = previousItem;\n            }\n        }\n        if (clearSelection) {\n            this.setSelection([item], eventPayload);\n        }\n        else {\n            this.select(item, eventPayload);\n        }\n    };\n    TreeModel.prototype.setFocus = function (element, eventPayload) {\n        this.setTraits('focused', element ? [element] : []);\n        var eventData = { focus: this.getFocus(), payload: eventPayload };\n        this._onDidFocus.fire(eventData);\n    };\n    TreeModel.prototype.isFocused = function (element) {\n        var item = this.getItem(element);\n        if (!item) {\n            return false;\n        }\n        return item.hasTrait('focused');\n    };\n    TreeModel.prototype.getFocus = function (includeHidden) {\n        if (includeHidden === void 0) { includeHidden = false; }\n        var result = this.getElementsWithTrait('focused', includeHidden);\n        return result.length === 0 ? null : result[0];\n    };\n    TreeModel.prototype.focusNext = function (count, eventPayload) {\n        if (count === void 0) { count = 1; }\n        var item = this.getFocus() || this.input;\n        var nextItem;\n        var nav = this.getNavigator(item, false);\n        for (var i = 0; i < count; i++) {\n            nextItem = nav.next();\n            if (!nextItem) {\n                break;\n            }\n            item = nextItem;\n        }\n        this.setFocus(item, eventPayload);\n    };\n    TreeModel.prototype.focusPrevious = function (count, eventPayload) {\n        if (count === void 0) { count = 1; }\n        var item = this.getFocus() || this.input;\n        var previousItem;\n        var nav = this.getNavigator(item, false);\n        for (var i = 0; i < count; i++) {\n            previousItem = nav.previous();\n            if (!previousItem) {\n                break;\n            }\n            item = previousItem;\n        }\n        this.setFocus(item, eventPayload);\n    };\n    TreeModel.prototype.focusParent = function (eventPayload) {\n        var item = this.getFocus() || this.input;\n        var nav = this.getNavigator(item, false);\n        var parent = nav.parent();\n        if (parent) {\n            this.setFocus(parent, eventPayload);\n        }\n    };\n    TreeModel.prototype.focusFirstChild = function (eventPayload) {\n        var item = this.getItem(this.getFocus() || this.input);\n        var nav = this.getNavigator(item, false);\n        var next = nav.next();\n        var parent = nav.parent();\n        if (parent === item) {\n            this.setFocus(next, eventPayload);\n        }\n    };\n    TreeModel.prototype.focusFirst = function (eventPayload, from) {\n        this.focusNth(0, eventPayload, from);\n    };\n    TreeModel.prototype.focusNth = function (index, eventPayload, from) {\n        var navItem = this.getParent(from);\n        var nav = this.getNavigator(navItem);\n        var item = nav.first();\n        for (var i = 0; i < index; i++) {\n            item = nav.next();\n        }\n        if (item) {\n            this.setFocus(item, eventPayload);\n        }\n    };\n    TreeModel.prototype.focusLast = function (eventPayload, from) {\n        var navItem = this.getParent(from);\n        var item;\n        if (from && navItem) {\n            item = navItem.lastChild;\n        }\n        else {\n            var nav = this.getNavigator(navItem);\n            item = nav.last();\n        }\n        if (item) {\n            this.setFocus(item, eventPayload);\n        }\n    };\n    TreeModel.prototype.getParent = function (from) {\n        if (from) {\n            var fromItem = this.getItem(from);\n            if (fromItem && fromItem.parent) {\n                return fromItem.parent;\n            }\n        }\n        return this.getItem(this.input);\n    };\n    TreeModel.prototype.getNavigator = function (element, subTreeOnly) {\n        if (element === void 0) { element = null; }\n        if (subTreeOnly === void 0) { subTreeOnly = true; }\n        return new TreeNavigator(this.getItem(element), subTreeOnly);\n    };\n    TreeModel.prototype.getItem = function (element) {\n        if (element === void 0) { element = null; }\n        if (element === null) {\n            return this.input;\n        }\n        else if (element instanceof Item) {\n            return element;\n        }\n        else if (typeof element === 'string') {\n            return this.registry.getItem(element);\n        }\n        else {\n            return this.registry.getItem(this.context.dataSource.getId(this.context.tree, element));\n        }\n    };\n    TreeModel.prototype.addTraits = function (trait, elements) {\n        var items = this.traitsToItems[trait] || {};\n        var item;\n        for (var i = 0, len = elements.length; i < len; i++) {\n            item = this.getItem(elements[i]);\n            if (item) {\n                item.addTrait(trait);\n                items[item.id] = item;\n            }\n        }\n        this.traitsToItems[trait] = items;\n    };\n    TreeModel.prototype.removeTraits = function (trait, elements) {\n        var items = this.traitsToItems[trait] || {};\n        var item;\n        var id;\n        if (elements.length === 0) {\n            for (id in items) {\n                if (items.hasOwnProperty(id)) {\n                    item = items[id];\n                    item.removeTrait(trait);\n                }\n            }\n            delete this.traitsToItems[trait];\n        }\n        else {\n            for (var i = 0, len = elements.length; i < len; i++) {\n                item = this.getItem(elements[i]);\n                if (item) {\n                    item.removeTrait(trait);\n                    delete items[item.id];\n                }\n            }\n        }\n    };\n    TreeModel.prototype.setTraits = function (trait, elements) {\n        if (elements.length === 0) {\n            this.removeTraits(trait, elements);\n        }\n        else {\n            var items = {};\n            var item = void 0;\n            for (var i = 0, len = elements.length; i < len; i++) {\n                item = this.getItem(elements[i]);\n                if (item) {\n                    items[item.id] = item;\n                }\n            }\n            var traitItems = this.traitsToItems[trait] || {};\n            var itemsToRemoveTrait = [];\n            var id = void 0;\n            for (id in traitItems) {\n                if (traitItems.hasOwnProperty(id)) {\n                    if (items.hasOwnProperty(id)) {\n                        delete items[id];\n                    }\n                    else {\n                        itemsToRemoveTrait.push(traitItems[id]);\n                    }\n                }\n            }\n            for (var i = 0, len = itemsToRemoveTrait.length; i < len; i++) {\n                item = itemsToRemoveTrait[i];\n                item.removeTrait(trait);\n                delete traitItems[item.id];\n            }\n            for (id in items) {\n                if (items.hasOwnProperty(id)) {\n                    item = items[id];\n                    item.addTrait(trait);\n                    traitItems[id] = item;\n                }\n            }\n            this.traitsToItems[trait] = traitItems;\n        }\n    };\n    TreeModel.prototype.getElementsWithTrait = function (trait, includeHidden) {\n        var elements = [];\n        var items = this.traitsToItems[trait] || {};\n        var id;\n        for (id in items) {\n            if (items.hasOwnProperty(id) && (items[id].isVisible() || includeHidden)) {\n                elements.push(items[id].getElement());\n            }\n        }\n        return elements;\n    };\n    TreeModel.prototype.dispose = function () {\n        if (this.registry) {\n            this.registry.dispose();\n            this.registry = null; // StrictNullOverride: nulling out ok in dispose\n        }\n        this._onSetInput.dispose();\n        this._onDidSetInput.dispose();\n        this._onRefresh.dispose();\n        this._onDidRefresh.dispose();\n        this._onDidHighlight.dispose();\n        this._onDidSelect.dispose();\n        this._onDidFocus.dispose();\n        this._onDidRevealItem.dispose();\n        this._onExpandItem.dispose();\n        this._onDidExpandItem.dispose();\n        this._onCollapseItem.dispose();\n        this._onDidCollapseItem.dispose();\n        this._onDidAddTraitItem.dispose();\n        this._onDidRemoveTraitItem.dispose();\n        this._onDidRefreshItem.dispose();\n        this._onRefreshItemChildren.dispose();\n        this._onDidRefreshItemChildren.dispose();\n        this._onDidDisposeItem.dispose();\n    };\n    return TreeModel;\n}());\nexports.TreeModel = TreeModel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/parts/tree/browser/treeModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Assert from 'vs/base/common/assert';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IDisposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { INavigator } from 'vs/base/common/iterator';\nimport * as _ from './tree';\nimport { Event, Emitter, EventMultiplexer, Relay } from 'vs/base/common/event';\n\ninterface IMap<T> { [id: string]: T; }\ninterface IItemMap extends IMap<Item> { }\ninterface ITraitMap extends IMap<IItemMap> { }\n\nexport class LockData {\n\n\tprivate _item: Item;\n\tprivate _onDispose?= new Emitter<void>();\n\treadonly onDispose: Event<void> = this._onDispose!.event;\n\n\tconstructor(item: Item) {\n\t\tthis._item = item;\n\t}\n\n\tget item(): Item {\n\t\treturn this._item;\n\t}\n\n\tdispose(): void {\n\t\tif (this._onDispose) {\n\t\t\tthis._onDispose.fire();\n\t\t\tthis._onDispose.dispose();\n\t\t\tthis._onDispose = undefined;\n\t\t}\n\t}\n}\n\nexport class Lock {\n\n\t/* When refreshing tree items, the tree's structured can be altered, by\n\t\tinserting and removing sub-items. This lock helps to manage several\n\t\tpossibly-structure-changing calls.\n\n\t\tAPI-wise, there are two possibly-structure-changing: refresh(...),\n\t\texpand(...) and collapse(...). All these calls must call Lock#run(...).\n\n\t\tAny call to Lock#run(...) needs to provide the affecting item and a\n\t\tcallback to execute when unlocked. It must also return a promise\n\t\twhich fulfills once the operation ends. Once it is called, there\n\t\tare three possibilities:\n\n\t\t- Nothing is currently running. The affecting item is remembered, and\n\t\tthe callback is executed.\n\n\t\t- Or, there are on-going operations. There are two outcomes:\n\n\t\t\t- The affecting item intersects with any other affecting items\n\t\t\tof on-going run calls. In such a case, the given callback should\n\t\t\tbe executed only when the on-going one completes.\n\n\t\t\t- Or, it doesn't. In such a case, both operations can be run in\n\t\t\tparallel.\n\n\t\tNote: two items A and B intersect if A is a descendant of B, or\n\t\tvice-versa.\n\t*/\n\n\tprivate locks: { [id: string]: LockData; };\n\n\tconstructor() {\n\t\tthis.locks = Object.create({});\n\t}\n\n\tpublic isLocked(item: Item): boolean {\n\t\treturn !!this.locks[item.id];\n\t}\n\n\tpublic run(item: Item, fn: () => Promise<any>): Promise<any> {\n\t\tconst lock = this.getLock(item);\n\n\t\tif (lock) {\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tEvent.once(lock.onDispose)(() => {\n\t\t\t\t\treturn this.run(item, fn).then(c, e);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tlet result: Promise<any>;\n\n\t\treturn new Promise((c, e) => {\n\n\t\t\tif (item.isDisposed()) {\n\t\t\t\treturn e(new Error('Item is disposed.'));\n\t\t\t}\n\n\t\t\tlet lock = this.locks[item.id] = new LockData(item);\n\n\t\t\tresult = fn().then((r) => {\n\t\t\t\tdelete this.locks[item.id];\n\t\t\t\tlock.dispose();\n\n\t\t\t\treturn r;\n\t\t\t}).then(c, e);\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate getLock(item: Item): LockData | null {\n\t\tlet key: string;\n\n\t\tfor (key in this.locks) {\n\t\t\tlet lock = this.locks[key];\n\n\t\t\tif (item.intersects(lock.item)) {\n\t\t\t\treturn lock;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class ItemRegistry {\n\n\tprivate _isDisposed = false;\n\tprivate items: IMap<{ item: Item; disposable: IDisposable; }>;\n\n\tprivate _onDidRevealItem = new EventMultiplexer<IItemRevealEvent>();\n\treadonly onDidRevealItem: Event<IItemRevealEvent> = this._onDidRevealItem.event;\n\tprivate _onExpandItem = new EventMultiplexer<IItemExpandEvent>();\n\treadonly onExpandItem: Event<IItemExpandEvent> = this._onExpandItem.event;\n\tprivate _onDidExpandItem = new EventMultiplexer<IItemExpandEvent>();\n\treadonly onDidExpandItem: Event<IItemExpandEvent> = this._onDidExpandItem.event;\n\tprivate _onCollapseItem = new EventMultiplexer<IItemCollapseEvent>();\n\treadonly onCollapseItem: Event<IItemCollapseEvent> = this._onCollapseItem.event;\n\tprivate _onDidCollapseItem = new EventMultiplexer<IItemCollapseEvent>();\n\treadonly onDidCollapseItem: Event<IItemCollapseEvent> = this._onDidCollapseItem.event;\n\tprivate _onDidAddTraitItem = new EventMultiplexer<IItemTraitEvent>();\n\treadonly onDidAddTraitItem: Event<IItemTraitEvent> = this._onDidAddTraitItem.event;\n\tprivate _onDidRemoveTraitItem = new EventMultiplexer<IItemCollapseEvent>();\n\treadonly onDidRemoveTraitItem: Event<IItemCollapseEvent> = this._onDidRemoveTraitItem.event;\n\tprivate _onDidRefreshItem = new EventMultiplexer<Item>();\n\treadonly onDidRefreshItem: Event<Item> = this._onDidRefreshItem.event;\n\tprivate _onRefreshItemChildren = new EventMultiplexer<IItemChildrenRefreshEvent>();\n\treadonly onRefreshItemChildren: Event<IItemChildrenRefreshEvent> = this._onRefreshItemChildren.event;\n\tprivate _onDidRefreshItemChildren = new EventMultiplexer<IItemChildrenRefreshEvent>();\n\treadonly onDidRefreshItemChildren: Event<IItemChildrenRefreshEvent> = this._onDidRefreshItemChildren.event;\n\tprivate _onDidDisposeItem = new EventMultiplexer<Item>();\n\treadonly onDidDisposeItem: Event<Item> = this._onDidDisposeItem.event;\n\n\tconstructor() {\n\t\tthis.items = {};\n\t}\n\n\tpublic register(item: Item): void {\n\t\tAssert.ok(!this.isRegistered(item.id), 'item already registered: ' + item.id);\n\n\t\tconst disposable = combinedDisposable([\n\t\t\tthis._onDidRevealItem.add(item.onDidReveal),\n\t\t\tthis._onExpandItem.add(item.onExpand),\n\t\t\tthis._onDidExpandItem.add(item.onDidExpand),\n\t\t\tthis._onCollapseItem.add(item.onCollapse),\n\t\t\tthis._onDidCollapseItem.add(item.onDidCollapse),\n\t\t\tthis._onDidAddTraitItem.add(item.onDidAddTrait),\n\t\t\tthis._onDidRemoveTraitItem.add(item.onDidRemoveTrait),\n\t\t\tthis._onDidRefreshItem.add(item.onDidRefresh),\n\t\t\tthis._onRefreshItemChildren.add(item.onRefreshChildren),\n\t\t\tthis._onDidRefreshItemChildren.add(item.onDidRefreshChildren),\n\t\t\tthis._onDidDisposeItem.add(item.onDidDispose)\n\t\t]);\n\n\t\tthis.items[item.id] = { item, disposable };\n\t}\n\n\tpublic deregister(item: Item): void {\n\t\tAssert.ok(this.isRegistered(item.id), 'item not registered: ' + item.id);\n\t\tthis.items[item.id].disposable.dispose();\n\t\tdelete this.items[item.id];\n\t}\n\n\tpublic isRegistered(id: string): boolean {\n\t\treturn this.items.hasOwnProperty(id);\n\t}\n\n\tpublic getItem(id: string): Item | null {\n\t\tconst result = this.items[id];\n\t\treturn result ? result.item : null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.items = null!; // StrictNullOverride: nulling out ok in dispose\n\n\t\tthis._onDidRevealItem.dispose();\n\t\tthis._onExpandItem.dispose();\n\t\tthis._onDidExpandItem.dispose();\n\t\tthis._onCollapseItem.dispose();\n\t\tthis._onDidCollapseItem.dispose();\n\t\tthis._onDidAddTraitItem.dispose();\n\t\tthis._onDidRemoveTraitItem.dispose();\n\t\tthis._onDidRefreshItem.dispose();\n\t\tthis._onRefreshItemChildren.dispose();\n\t\tthis._onDidRefreshItemChildren.dispose();\n\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n}\n\nexport interface IBaseItemEvent {\n\titem: Item;\n}\n\nexport interface IItemRefreshEvent extends IBaseItemEvent { }\nexport interface IItemExpandEvent extends IBaseItemEvent { }\nexport interface IItemCollapseEvent extends IBaseItemEvent { }\n\nexport interface IItemTraitEvent extends IBaseItemEvent {\n\ttrait: string;\n}\n\nexport interface IItemRevealEvent extends IBaseItemEvent {\n\trelativeTop: number | null;\n}\n\nexport interface IItemChildrenRefreshEvent extends IBaseItemEvent {\n\tisNested: boolean;\n}\n\nexport class Item {\n\n\tprivate registry: ItemRegistry;\n\tprivate context: _.ITreeContext;\n\tprivate element: any;\n\tprivate lock: Lock;\n\n\tpublic id: string;\n\n\tprivate needsChildrenRefresh: boolean;\n\tprivate doesHaveChildren: boolean;\n\n\tpublic parent: Item | null;\n\tpublic previous: Item | null;\n\tpublic next: Item | null;\n\tpublic firstChild: Item | null;\n\tpublic lastChild: Item | null;\n\n\tprivate height: number;\n\tprivate depth: number;\n\n\tprivate visible: boolean;\n\tprivate expanded: boolean;\n\n\tprivate traits: { [trait: string]: boolean; };\n\n\tprivate _onDidCreate = new Emitter<Item>();\n\treadonly onDidCreate: Event<Item> = this._onDidCreate.event;\n\tprivate _onDidReveal = new Emitter<IItemRevealEvent>();\n\treadonly onDidReveal: Event<IItemRevealEvent> = this._onDidReveal.event;\n\tprivate _onExpand = new Emitter<IItemExpandEvent>();\n\treadonly onExpand: Event<IItemExpandEvent> = this._onExpand.event;\n\tprivate _onDidExpand = new Emitter<IItemExpandEvent>();\n\treadonly onDidExpand: Event<IItemExpandEvent> = this._onDidExpand.event;\n\tprivate _onCollapse = new Emitter<IItemCollapseEvent>();\n\treadonly onCollapse: Event<IItemCollapseEvent> = this._onCollapse.event;\n\tprivate _onDidCollapse = new Emitter<IItemCollapseEvent>();\n\treadonly onDidCollapse: Event<IItemCollapseEvent> = this._onDidCollapse.event;\n\tprivate _onDidAddTrait = new Emitter<IItemTraitEvent>();\n\treadonly onDidAddTrait: Event<IItemTraitEvent> = this._onDidAddTrait.event;\n\tprivate _onDidRemoveTrait = new Emitter<IItemCollapseEvent>();\n\treadonly onDidRemoveTrait: Event<IItemCollapseEvent> = this._onDidRemoveTrait.event;\n\tprivate _onDidRefresh = new Emitter<Item>();\n\treadonly onDidRefresh: Event<Item> = this._onDidRefresh.event;\n\tprivate _onRefreshChildren = new Emitter<IItemChildrenRefreshEvent>();\n\treadonly onRefreshChildren: Event<IItemChildrenRefreshEvent> = this._onRefreshChildren.event;\n\tprivate _onDidRefreshChildren = new Emitter<IItemChildrenRefreshEvent>();\n\treadonly onDidRefreshChildren: Event<IItemChildrenRefreshEvent> = this._onDidRefreshChildren.event;\n\tprivate _onDidDispose = new Emitter<Item>();\n\treadonly onDidDispose: Event<Item> = this._onDidDispose.event;\n\n\tprivate _isDisposed: boolean;\n\n\tconstructor(id: string, registry: ItemRegistry, context: _.ITreeContext, lock: Lock, element: any) {\n\t\tthis.registry = registry;\n\t\tthis.context = context;\n\t\tthis.lock = lock;\n\t\tthis.element = element;\n\n\t\tthis.id = id;\n\t\tthis.registry.register(this);\n\n\t\tthis.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element);\n\t\tthis.needsChildrenRefresh = true;\n\n\t\tthis.parent = null;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tthis.firstChild = null;\n\t\tthis.lastChild = null;\n\n\t\tthis.traits = {};\n\t\tthis.depth = 0;\n\t\tthis.expanded = !!(this.context.dataSource.shouldAutoexpand && this.context.dataSource.shouldAutoexpand(this.context.tree, element));\n\n\t\tthis._onDidCreate.fire(this);\n\n\t\tthis.visible = this._isVisible();\n\t\tthis.height = this._getHeight();\n\n\t\tthis._isDisposed = false;\n\t}\n\n\tpublic getElement(): any {\n\t\treturn this.element;\n\t}\n\n\tpublic hasChildren(): boolean {\n\t\treturn this.doesHaveChildren;\n\t}\n\n\tpublic getDepth(): number {\n\t\treturn this.depth;\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn this.visible;\n\t}\n\n\tpublic setVisible(value: boolean): void {\n\t\tthis.visible = value;\n\t}\n\n\tpublic isExpanded(): boolean {\n\t\treturn this.expanded;\n\t}\n\n\t/* protected */ public _setExpanded(value: boolean): void {\n\t\tthis.expanded = value;\n\t}\n\n\tpublic reveal(relativeTop: number | null = null): void {\n\t\tlet eventData: IItemRevealEvent = { item: this, relativeTop: relativeTop };\n\t\tthis._onDidReveal.fire(eventData);\n\t}\n\n\tpublic expand(): Promise<any> {\n\t\tif (this.isExpanded() || !this.doesHaveChildren || this.lock.isLocked(this)) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tlet result = this.lock.run(this, () => {\n\t\t\tif (this.isExpanded() || !this.doesHaveChildren) {\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\n\t\t\tlet eventData: IItemExpandEvent = { item: this };\n\t\t\tlet result: Promise<any>;\n\t\t\tthis._onExpand.fire(eventData);\n\n\t\t\tif (this.needsChildrenRefresh) {\n\t\t\t\tresult = this.refreshChildren(false, true, true);\n\t\t\t} else {\n\t\t\t\tresult = Promise.resolve(null);\n\t\t\t}\n\n\t\t\treturn result.then(() => {\n\t\t\t\tthis._setExpanded(true);\n\t\t\t\tthis._onDidExpand.fire(eventData);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t});\n\n\t\treturn result.then((r) => {\n\t\t\tif (this.isDisposed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Auto expand single child folders\n\t\t\tif (this.context.options.autoExpandSingleChildren && r && this.firstChild !== null && this.firstChild === this.lastChild && this.firstChild.isVisible()) {\n\t\t\t\treturn this.firstChild.expand().then(() => { return true; });\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\tpublic collapse(recursive: boolean = false): Promise<any> {\n\t\tif (recursive) {\n\t\t\tlet collapseChildrenPromise = Promise.resolve(null);\n\t\t\tthis.forEachChild((child) => {\n\t\t\t\tcollapseChildrenPromise = collapseChildrenPromise.then(() => child.collapse(true));\n\t\t\t});\n\t\t\treturn collapseChildrenPromise.then(() => {\n\t\t\t\treturn this.collapse(false);\n\t\t\t});\n\t\t} else {\n\t\t\tif (!this.isExpanded() || this.lock.isLocked(this)) {\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\n\t\t\treturn this.lock.run(this, () => {\n\t\t\t\tlet eventData: IItemCollapseEvent = { item: this };\n\t\t\t\tthis._onCollapse.fire(eventData);\n\t\t\t\tthis._setExpanded(false);\n\t\t\t\tthis._onDidCollapse.fire(eventData);\n\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic addTrait(trait: string): void {\n\t\tlet eventData: IItemTraitEvent = { item: this, trait: trait };\n\t\tthis.traits[trait] = true;\n\t\tthis._onDidAddTrait.fire(eventData);\n\t}\n\n\tpublic removeTrait(trait: string): void {\n\t\tlet eventData: IItemTraitEvent = { item: this, trait: trait };\n\t\tdelete this.traits[trait];\n\t\tthis._onDidRemoveTrait.fire(eventData);\n\t}\n\n\tpublic hasTrait(trait: string): boolean {\n\t\treturn this.traits[trait] || false;\n\t}\n\n\tpublic getAllTraits(): string[] {\n\t\tlet result: string[] = [];\n\t\tlet trait: string;\n\t\tfor (trait in this.traits) {\n\t\t\tif (this.traits.hasOwnProperty(trait) && this.traits[trait]) {\n\t\t\t\tresult.push(trait);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tprivate refreshChildren(recursive: boolean, safe: boolean = false, force: boolean = false): Promise<any> {\n\t\tif (!force && !this.isExpanded()) {\n\t\t\tconst setNeedsChildrenRefresh = (item: Item) => {\n\t\t\t\titem.needsChildrenRefresh = true;\n\t\t\t\titem.forEachChild(setNeedsChildrenRefresh);\n\t\t\t};\n\n\t\t\tsetNeedsChildrenRefresh(this);\n\n\t\t\treturn Promise.resolve(this);\n\t\t}\n\n\t\tthis.needsChildrenRefresh = false;\n\n\t\tlet doRefresh = () => {\n\t\t\tlet eventData: IItemChildrenRefreshEvent = { item: this, isNested: safe };\n\t\t\tthis._onRefreshChildren.fire(eventData);\n\n\t\t\tlet childrenPromise: Promise<any>;\n\t\t\tif (this.doesHaveChildren) {\n\t\t\t\tchildrenPromise = this.context.dataSource.getChildren(this.context.tree, this.element);\n\t\t\t} else {\n\t\t\t\tchildrenPromise = Promise.resolve([]);\n\t\t\t}\n\n\t\t\tconst result = childrenPromise.then((elements: any[]) => {\n\t\t\t\tif (this.isDisposed() || this.registry.isDisposed()) {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tif (!Array.isArray(elements)) {\n\t\t\t\t\treturn Promise.reject(new Error('Please return an array of children.'));\n\t\t\t\t}\n\n\t\t\t\telements = !elements ? [] : elements.slice(0);\n\t\t\t\telements = this.sort(elements);\n\n\t\t\t\tlet staleItems: IItemMap = {};\n\t\t\t\twhile (this.firstChild !== null) {\n\t\t\t\t\tstaleItems[this.firstChild.id] = this.firstChild;\n\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\t\tlet element = elements[i];\n\t\t\t\t\tlet id = this.context.dataSource.getId(this.context.tree, element);\n\t\t\t\t\tlet item = staleItems[id] || new Item(id, this.registry, this.context, this.lock, element);\n\t\t\t\t\titem.element = element;\n\t\t\t\t\tif (recursive) {\n\t\t\t\t\t\titem.needsChildrenRefresh = recursive;\n\t\t\t\t\t}\n\t\t\t\t\tdelete staleItems[id];\n\t\t\t\t\tthis.addChild(item);\n\t\t\t\t}\n\n\t\t\t\tfor (let staleItemId in staleItems) {\n\t\t\t\t\tif (staleItems.hasOwnProperty(staleItemId)) {\n\t\t\t\t\t\tstaleItems[staleItemId].dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (recursive) {\n\t\t\t\t\treturn Promise.all(this.mapEachChild((child) => {\n\t\t\t\t\t\treturn child.doRefresh(recursive, true);\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.all(this.mapEachChild((child) => {\n\t\t\t\t\t\tif (child.isExpanded() && child.needsChildrenRefresh) {\n\t\t\t\t\t\t\treturn child.doRefresh(recursive, true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchild.updateVisibility();\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn result\n\t\t\t\t.then(undefined, onUnexpectedError)\n\t\t\t\t.then(() => this._onDidRefreshChildren.fire(eventData));\n\t\t};\n\n\t\treturn safe ? doRefresh() : this.lock.run(this, doRefresh);\n\t}\n\n\tprivate doRefresh(recursive: boolean, safe: boolean = false): Promise<any> {\n\t\tthis.doesHaveChildren = this.context.dataSource.hasChildren(this.context.tree, this.element);\n\t\tthis.height = this._getHeight();\n\t\tthis.updateVisibility();\n\n\t\tthis._onDidRefresh.fire(this);\n\n\t\treturn this.refreshChildren(recursive, safe);\n\t}\n\n\tprivate updateVisibility(): void {\n\t\tthis.setVisible(this._isVisible());\n\t}\n\n\tpublic refresh(recursive: boolean): Promise<any> {\n\t\treturn this.doRefresh(recursive);\n\t}\n\n\tpublic getNavigator(): INavigator<Item> {\n\t\treturn new TreeNavigator(this);\n\t}\n\n\tpublic intersects(other: Item): boolean {\n\t\treturn this.isAncestorOf(other) || other.isAncestorOf(this);\n\t}\n\n\tpublic getHierarchy(): Item[] {\n\t\tlet result: Item[] = [];\n\t\tlet node: Item | null = this;\n\n\t\tdo {\n\t\t\tresult.push(node);\n\t\t\tnode = node.parent;\n\t\t} while (node);\n\n\t\tresult.reverse();\n\t\treturn result;\n\t}\n\n\tprivate isAncestorOf(startItem: Item): boolean {\n\t\tlet item: Item | null = startItem;\n\t\twhile (item) {\n\t\t\tif (item.id === this.id) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\titem = item.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addChild(item: Item, afterItem: Item | null = this.lastChild): void {\n\t\tlet isEmpty = this.firstChild === null;\n\t\tlet atHead = afterItem === null;\n\t\tlet atTail = afterItem === this.lastChild;\n\n\t\tif (isEmpty) {\n\t\t\tthis.firstChild = this.lastChild = item;\n\t\t\titem.next = item.previous = null;\n\t\t} else if (atHead) {\n\t\t\tif (!this.firstChild) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\tthis.firstChild.previous = item;\n\t\t\titem.next = this.firstChild;\n\t\t\titem.previous = null;\n\t\t\tthis.firstChild = item;\n\t\t} else if (atTail) {\n\t\t\tif (!this.lastChild) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\tthis.lastChild.next = item;\n\t\t\titem.next = null;\n\t\t\titem.previous = this.lastChild;\n\t\t\tthis.lastChild = item;\n\t\t} else {\n\t\t\titem.previous = afterItem;\n\t\t\tif (!afterItem) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\titem.next = afterItem.next;\n\t\t\tif (!afterItem.next) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\tafterItem.next.previous = item;\n\t\t\tafterItem.next = item;\n\t\t}\n\n\t\titem.parent = this;\n\t\titem.depth = this.depth + 1;\n\t}\n\n\tprivate removeChild(item: Item): void {\n\t\tlet isFirstChild = this.firstChild === item;\n\t\tlet isLastChild = this.lastChild === item;\n\n\t\tif (isFirstChild && isLastChild) {\n\t\t\tthis.firstChild = this.lastChild = null;\n\t\t} else if (isFirstChild) {\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\titem.next.previous = null;\n\t\t\tthis.firstChild = item.next;\n\t\t} else if (isLastChild) {\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\titem.previous.next = null;\n\t\t\tthis.lastChild = item.previous;\n\t\t} else {\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\titem.next.previous = item.previous;\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid tree state');\n\t\t\t}\n\t\t\titem.previous.next = item.next;\n\t\t}\n\n\t\titem.parent = null;\n\t\titem.depth = NaN;\n\t}\n\n\tprivate forEachChild(fn: (child: Item) => void): void {\n\t\tlet child = this.firstChild;\n\t\tlet next: Item | null;\n\t\twhile (child) {\n\t\t\tnext = child.next;\n\t\t\tfn(child);\n\t\t\tchild = next;\n\t\t}\n\t}\n\n\tprivate mapEachChild<T>(fn: (child: Item) => T): T[] {\n\t\tlet result: T[] = [];\n\t\tthis.forEachChild((child) => {\n\t\t\tresult.push(fn(child));\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate sort(elements: any[]): any[] {\n\t\tconst sorter = this.context.sorter;\n\t\tif (sorter) {\n\t\t\treturn elements.sort((element, otherElement) => {\n\t\t\t\treturn sorter.compare(this.context.tree, element, otherElement);\n\t\t\t});\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/* protected */ public _getHeight(): number {\n\t\tif (!this.context.renderer) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.context.renderer.getHeight(this.context.tree, this.element);\n\t}\n\n\t/* protected */ public _isVisible(): boolean {\n\t\tif (!this.context.filter) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.context.filter.isVisible(this.context.tree, this.element);\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.forEachChild((child) => child.dispose());\n\n\t\tthis.parent = null;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tthis.firstChild = null;\n\t\tthis.lastChild = null;\n\n\t\tthis._onDidDispose.fire(this);\n\n\t\tthis.registry.deregister(this);\n\n\t\tthis._onDidCreate.dispose();\n\t\tthis._onDidReveal.dispose();\n\t\tthis._onExpand.dispose();\n\t\tthis._onDidExpand.dispose();\n\t\tthis._onCollapse.dispose();\n\t\tthis._onDidCollapse.dispose();\n\t\tthis._onDidAddTrait.dispose();\n\t\tthis._onDidRemoveTrait.dispose();\n\t\tthis._onDidRefresh.dispose();\n\t\tthis._onRefreshChildren.dispose();\n\t\tthis._onDidRefreshChildren.dispose();\n\t\tthis._onDidDispose.dispose();\n\n\t\tthis._isDisposed = true;\n\t}\n}\n\nclass RootItem extends Item {\n\n\tconstructor(id: string, registry: ItemRegistry, context: _.ITreeContext, lock: Lock, element: any) {\n\t\tsuper(id, registry, context, lock, element);\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic setVisible(value: boolean): void {\n\t\t// no-op\n\t}\n\n\tpublic isExpanded(): boolean {\n\t\treturn true;\n\t}\n\n\t/* protected */ public _setExpanded(value: boolean): void {\n\t\t// no-op\n\t}\n\n\tpublic render(): void {\n\t\t// no-op\n\t}\n\n\t/* protected */ public _getHeight(): number {\n\t\treturn 0;\n\t}\n\n\t/* protected */ public _isVisible(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class TreeNavigator implements INavigator<Item> {\n\n\tprivate start: Item | null;\n\tprivate item: Item | null;\n\n\tstatic lastDescendantOf(item: Item | null): Item | null {\n\t\tif (!item) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (item instanceof RootItem) {\n\t\t\treturn TreeNavigator.lastDescendantOf(item.lastChild);\n\t\t}\n\n\t\tif (!item.isVisible()) {\n\t\t\treturn TreeNavigator.lastDescendantOf(item.previous);\n\t\t}\n\n\t\tif (!item.isExpanded() || item.lastChild === null) {\n\t\t\treturn item;\n\t\t}\n\n\t\treturn TreeNavigator.lastDescendantOf(item.lastChild);\n\t}\n\n\tconstructor(item: Item | null, subTreeOnly: boolean = true) {\n\t\tthis.item = item;\n\t\tthis.start = subTreeOnly ? item : null;\n\t}\n\n\tpublic current(): Item | null {\n\t\treturn this.item || null;\n\t}\n\n\tpublic next(): Item | null {\n\t\tif (this.item) {\n\t\t\tdo {\n\t\t\t\tif ((this.item instanceof RootItem || (this.item.isVisible() && this.item.isExpanded())) && this.item.firstChild) {\n\t\t\t\t\tthis.item = this.item.firstChild;\n\t\t\t\t} else if (this.item === this.start) {\n\t\t\t\t\tthis.item = null;\n\t\t\t\t} else {\n\t\t\t\t\t// select next brother, next uncle, next great-uncle, etc...\n\t\t\t\t\twhile (this.item && this.item !== this.start && !this.item.next) {\n\t\t\t\t\t\tthis.item = this.item.parent;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.item === this.start) {\n\t\t\t\t\t\tthis.item = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.item = !this.item ? null : this.item.next;\n\t\t\t\t}\n\t\t\t} while (this.item && !this.item.isVisible());\n\t\t}\n\t\treturn this.item || null;\n\t}\n\n\tpublic previous(): Item | null {\n\t\tif (this.item) {\n\t\t\tdo {\n\t\t\t\tlet previous = TreeNavigator.lastDescendantOf(this.item.previous);\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis.item = previous;\n\t\t\t\t} else if (this.item.parent && this.item.parent !== this.start && this.item.parent.isVisible()) {\n\t\t\t\t\tthis.item = this.item.parent;\n\t\t\t\t} else {\n\t\t\t\t\tthis.item = null;\n\t\t\t\t}\n\t\t\t} while (this.item && !this.item.isVisible());\n\t\t}\n\t\treturn this.item || null;\n\t}\n\n\tpublic parent(): Item | null {\n\t\tif (this.item) {\n\t\t\tlet parent = this.item.parent;\n\t\t\tif (parent && parent !== this.start && parent.isVisible()) {\n\t\t\t\tthis.item = parent;\n\t\t\t} else {\n\t\t\t\tthis.item = null;\n\t\t\t}\n\t\t}\n\t\treturn this.item || null;\n\t}\n\n\tpublic first(): Item | null {\n\t\tthis.item = this.start;\n\t\tthis.next();\n\t\treturn this.item || null;\n\t}\n\n\tpublic last(): Item | null {\n\t\treturn TreeNavigator.lastDescendantOf(this.start);\n\t}\n}\n\nexport interface IBaseEvent {\n\titem: Item | null;\n}\n\nexport interface IInputEvent extends IBaseEvent { }\n\nexport interface IRefreshEvent extends IBaseEvent {\n\trecursive: boolean;\n}\n\nexport class TreeModel {\n\n\tprivate context: _.ITreeContext;\n\tprivate lock: Lock;\n\tprivate input: Item | null;\n\tprivate registry: ItemRegistry;\n\tprivate registryDisposable: IDisposable;\n\tprivate traitsToItems: ITraitMap;\n\n\tprivate _onSetInput = new Emitter<IInputEvent>();\n\treadonly onSetInput: Event<IInputEvent> = this._onSetInput.event;\n\tprivate _onDidSetInput = new Emitter<IInputEvent>();\n\treadonly onDidSetInput: Event<IInputEvent> = this._onDidSetInput.event;\n\tprivate _onRefresh = new Emitter<IRefreshEvent>();\n\treadonly onRefresh: Event<IRefreshEvent> = this._onRefresh.event;\n\tprivate _onDidRefresh = new Emitter<IRefreshEvent>();\n\treadonly onDidRefresh: Event<IRefreshEvent> = this._onDidRefresh.event;\n\tprivate _onDidHighlight = new Emitter<_.IHighlightEvent>();\n\treadonly onDidHighlight: Event<_.IHighlightEvent> = this._onDidHighlight.event;\n\tprivate _onDidSelect = new Emitter<_.ISelectionEvent>();\n\treadonly onDidSelect: Event<_.ISelectionEvent> = this._onDidSelect.event;\n\tprivate _onDidFocus = new Emitter<_.IFocusEvent>();\n\treadonly onDidFocus: Event<_.IFocusEvent> = this._onDidFocus.event;\n\n\tprivate _onDidRevealItem = new Relay<IItemRevealEvent>();\n\treadonly onDidRevealItem: Event<IItemRevealEvent> = this._onDidRevealItem.event;\n\tprivate _onExpandItem = new Relay<IItemExpandEvent>();\n\treadonly onExpandItem: Event<IItemExpandEvent> = this._onExpandItem.event;\n\tprivate _onDidExpandItem = new Relay<IItemExpandEvent>();\n\treadonly onDidExpandItem: Event<IItemExpandEvent> = this._onDidExpandItem.event;\n\tprivate _onCollapseItem = new Relay<IItemCollapseEvent>();\n\treadonly onCollapseItem: Event<IItemCollapseEvent> = this._onCollapseItem.event;\n\tprivate _onDidCollapseItem = new Relay<IItemCollapseEvent>();\n\treadonly onDidCollapseItem: Event<IItemCollapseEvent> = this._onDidCollapseItem.event;\n\tprivate _onDidAddTraitItem = new Relay<IItemTraitEvent>();\n\treadonly onDidAddTraitItem: Event<IItemTraitEvent> = this._onDidAddTraitItem.event;\n\tprivate _onDidRemoveTraitItem = new Relay<IItemCollapseEvent>();\n\treadonly onDidRemoveTraitItem: Event<IItemCollapseEvent> = this._onDidRemoveTraitItem.event;\n\tprivate _onDidRefreshItem = new Relay<Item>();\n\treadonly onDidRefreshItem: Event<Item> = this._onDidRefreshItem.event;\n\tprivate _onRefreshItemChildren = new Relay<IItemChildrenRefreshEvent>();\n\treadonly onRefreshItemChildren: Event<IItemChildrenRefreshEvent> = this._onRefreshItemChildren.event;\n\tprivate _onDidRefreshItemChildren = new Relay<IItemChildrenRefreshEvent>();\n\treadonly onDidRefreshItemChildren: Event<IItemChildrenRefreshEvent> = this._onDidRefreshItemChildren.event;\n\tprivate _onDidDisposeItem = new Relay<Item>();\n\treadonly onDidDisposeItem: Event<Item> = this._onDidDisposeItem.event;\n\n\tconstructor(context: _.ITreeContext) {\n\t\tthis.context = context;\n\t\tthis.input = null;\n\t\tthis.traitsToItems = {};\n\t}\n\n\tpublic setInput(element: any): Promise<any> {\n\t\tlet eventData: IInputEvent = { item: this.input };\n\t\tthis._onSetInput.fire(eventData);\n\n\t\tthis.setSelection([]);\n\t\tthis.setFocus();\n\t\tthis.setHighlight();\n\n\t\tthis.lock = new Lock();\n\n\t\tif (this.input) {\n\t\t\tthis.input.dispose();\n\t\t}\n\n\t\tif (this.registry) {\n\t\t\tthis.registry.dispose();\n\t\t\tthis.registryDisposable.dispose();\n\t\t}\n\n\t\tthis.registry = new ItemRegistry();\n\n\t\tthis._onDidRevealItem.input = this.registry.onDidRevealItem;\n\t\tthis._onExpandItem.input = this.registry.onExpandItem;\n\t\tthis._onDidExpandItem.input = this.registry.onDidExpandItem;\n\t\tthis._onCollapseItem.input = this.registry.onCollapseItem;\n\t\tthis._onDidCollapseItem.input = this.registry.onDidCollapseItem;\n\t\tthis._onDidAddTraitItem.input = this.registry.onDidAddTraitItem;\n\t\tthis._onDidRemoveTraitItem.input = this.registry.onDidRemoveTraitItem;\n\t\tthis._onDidRefreshItem.input = this.registry.onDidRefreshItem;\n\t\tthis._onRefreshItemChildren.input = this.registry.onRefreshItemChildren;\n\t\tthis._onDidRefreshItemChildren.input = this.registry.onDidRefreshItemChildren;\n\t\tthis._onDidDisposeItem.input = this.registry.onDidDisposeItem;\n\n\t\tthis.registryDisposable = this.registry\n\t\t\t.onDidDisposeItem(item => item.getAllTraits().forEach(trait => delete this.traitsToItems[trait][item.id]));\n\n\t\tlet id = this.context.dataSource.getId(this.context.tree, element);\n\t\tthis.input = new RootItem(id, this.registry, this.context, this.lock, element);\n\t\teventData = { item: this.input };\n\t\tthis._onDidSetInput.fire(eventData);\n\t\treturn this.refresh(this.input);\n\t}\n\n\tpublic getInput(): any {\n\t\treturn this.input ? this.input.getElement() : null;\n\t}\n\n\tpublic refresh(element: any = null, recursive: boolean = true): Promise<any> {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet eventData: IRefreshEvent = { item: item, recursive: recursive };\n\t\tthis._onRefresh.fire(eventData);\n\t\treturn item.refresh(recursive).then(() => {\n\t\t\tthis._onDidRefresh.fire(eventData);\n\t\t});\n\t}\n\n\tpublic expand(element: any): Promise<any> {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn item.expand();\n\t}\n\n\tpublic expandAll(elements?: any[]): Promise<any> {\n\t\tif (!elements) {\n\t\t\telements = [];\n\n\t\t\tlet item: Item | null;\n\t\t\tlet nav = this.getNavigator();\n\n\t\t\twhile (item = nav.next()) {\n\t\t\t\telements.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn this._expandAll(elements);\n\t}\n\n\tprivate _expandAll(elements: any[]): Promise<any> {\n\t\tif (elements.length === 0) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst elementsToExpand: any[] = [];\n\t\tconst elementsToDelay: any[] = [];\n\n\t\tfor (const element of elements) {\n\t\t\tlet item = this.getItem(element);\n\n\t\t\tif (item) {\n\t\t\t\telementsToExpand.push(element);\n\t\t\t} else {\n\t\t\t\telementsToDelay.push(element);\n\t\t\t}\n\t\t}\n\n\t\tif (elementsToExpand.length === 0) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn this.__expandAll(elementsToExpand)\n\t\t\t.then(() => this._expandAll(elementsToDelay));\n\t}\n\n\tprivate __expandAll(elements: any[]): Promise<any> {\n\t\tconst promises: Array<Promise<any>> = [];\n\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\tpromises.push(this.expand(elements[i]));\n\t\t}\n\t\treturn Promise.all(promises);\n\t}\n\n\tpublic collapse(element: any, recursive: boolean = false): Promise<any> {\n\t\tconst item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn item.collapse(recursive);\n\t}\n\n\tpublic collapseAll(elements: any[] | null = null, recursive: boolean = false): Promise<any> {\n\t\tif (!elements) {\n\t\t\telements = [this.input];\n\t\t\trecursive = true;\n\t\t}\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\tpromises.push(this.collapse(elements[i], recursive));\n\t\t}\n\t\treturn Promise.all(promises);\n\t}\n\n\tpublic toggleExpansion(element: any, recursive: boolean = false): Promise<any> {\n\t\treturn this.isExpanded(element) ? this.collapse(element, recursive) : this.expand(element);\n\t}\n\n\tpublic toggleExpansionAll(elements: any[]): Promise<any> {\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\tpromises.push(this.toggleExpansion(elements[i]));\n\t\t}\n\t\treturn Promise.all(promises);\n\t}\n\n\tpublic isExpanded(element: any): boolean {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn item.isExpanded();\n\t}\n\n\tpublic getExpandedElements(): any[] {\n\t\tlet result: any[] = [];\n\t\tlet item: Item | null;\n\t\tlet nav = this.getNavigator();\n\n\t\twhile (item = nav.next()) {\n\t\t\tif (item.isExpanded()) {\n\t\t\t\tresult.push(item.getElement());\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic reveal(element: any, relativeTop: number | null = null): Promise<any> {\n\t\treturn this.resolveUnknownParentChain(element).then((chain: any[]) => {\n\t\t\tlet result = Promise.resolve(null);\n\n\t\t\tchain.forEach((e) => {\n\t\t\t\tresult = result.then(() => this.expand(e));\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}).then(() => {\n\t\t\tlet item = this.getItem(element);\n\n\t\t\tif (item) {\n\t\t\t\treturn item.reveal(relativeTop);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate resolveUnknownParentChain(element: any): Promise<any> {\n\t\treturn this.context.dataSource.getParent(this.context.tree, element).then((parent) => {\n\t\t\tif (!parent) {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\n\t\t\treturn this.resolveUnknownParentChain(parent).then((result) => {\n\t\t\t\tresult.push(parent);\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic setHighlight(element?: any, eventPayload?: any): void {\n\t\tthis.setTraits('highlighted', element ? [element] : []);\n\t\tlet eventData: _.IHighlightEvent = { highlight: this.getHighlight(), payload: eventPayload };\n\t\tthis._onDidHighlight.fire(eventData);\n\t}\n\n\tpublic getHighlight(includeHidden: boolean = false): any {\n\t\tlet result = this.getElementsWithTrait('highlighted', includeHidden);\n\t\treturn result.length === 0 ? null : result[0];\n\t}\n\n\tpublic isHighlighted(element: any): boolean {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn item.hasTrait('highlighted');\n\t}\n\n\tpublic select(element: any, eventPayload?: any): void {\n\t\tthis.selectAll([element], eventPayload);\n\t}\n\n\tpublic selectAll(elements: any[], eventPayload?: any): void {\n\t\tthis.addTraits('selected', elements);\n\t\tlet eventData: _.ISelectionEvent = { selection: this.getSelection(), payload: eventPayload };\n\t\tthis._onDidSelect.fire(eventData);\n\t}\n\n\tpublic deselect(element: any, eventPayload?: any): void {\n\t\tthis.deselectAll([element], eventPayload);\n\t}\n\n\tpublic deselectAll(elements: any[], eventPayload?: any): void {\n\t\tthis.removeTraits('selected', elements);\n\t\tlet eventData: _.ISelectionEvent = { selection: this.getSelection(), payload: eventPayload };\n\t\tthis._onDidSelect.fire(eventData);\n\t}\n\n\tpublic setSelection(elements: any[], eventPayload?: any): void {\n\t\tthis.setTraits('selected', elements);\n\t\tlet eventData: _.ISelectionEvent = { selection: this.getSelection(), payload: eventPayload };\n\t\tthis._onDidSelect.fire(eventData);\n\t}\n\n\tpublic isSelected(element: any): boolean {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn item.hasTrait('selected');\n\t}\n\n\tpublic getSelection(includeHidden: boolean = false): any[] {\n\t\treturn this.getElementsWithTrait('selected', includeHidden);\n\t}\n\n\tpublic selectNext(count: number = 1, clearSelection: boolean = true, eventPayload?: any): void {\n\t\tlet selection = this.getSelection();\n\t\tlet item: Item = selection.length > 0 ? selection[0] : this.input;\n\t\tlet nextItem: Item | null;\n\t\tlet nav = this.getNavigator(item, false);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tnextItem = nav.next();\n\t\t\tif (!nextItem) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem = nextItem;\n\t\t}\n\n\t\tif (clearSelection) {\n\t\t\tthis.setSelection([item], eventPayload);\n\t\t} else {\n\t\t\tthis.select(item, eventPayload);\n\t\t}\n\t}\n\n\tpublic selectPrevious(count: number = 1, clearSelection: boolean = true, eventPayload?: any): void {\n\t\tlet selection = this.getSelection(),\n\t\t\titem: Item | null = null,\n\t\t\tpreviousItem: Item | null = null;\n\n\t\tif (selection.length === 0) {\n\t\t\tlet nav = this.getNavigator(this.input);\n\n\t\t\twhile (item = nav.next()) {\n\t\t\t\tpreviousItem = item;\n\t\t\t}\n\n\t\t\titem = previousItem;\n\n\t\t} else {\n\t\t\titem = selection[0];\n\t\t\tlet nav = this.getNavigator(item, false);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tpreviousItem = nav.previous();\n\t\t\t\tif (!previousItem) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\titem = previousItem;\n\t\t\t}\n\t\t}\n\n\t\tif (clearSelection) {\n\t\t\tthis.setSelection([item], eventPayload);\n\t\t} else {\n\t\t\tthis.select(item, eventPayload);\n\t\t}\n\t}\n\n\tpublic setFocus(element?: any, eventPayload?: any): void {\n\t\tthis.setTraits('focused', element ? [element] : []);\n\t\tlet eventData: _.IFocusEvent = { focus: this.getFocus(), payload: eventPayload };\n\t\tthis._onDidFocus.fire(eventData);\n\t}\n\n\tpublic isFocused(element: any): boolean {\n\t\tlet item = this.getItem(element);\n\n\t\tif (!item) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn item.hasTrait('focused');\n\t}\n\n\tpublic getFocus(includeHidden: boolean = false): any {\n\t\tlet result = this.getElementsWithTrait('focused', includeHidden);\n\t\treturn result.length === 0 ? null : result[0];\n\t}\n\n\tpublic focusNext(count: number = 1, eventPayload?: any): void {\n\t\tlet item: Item = this.getFocus() || this.input;\n\t\tlet nextItem: Item | null;\n\t\tlet nav = this.getNavigator(item, false);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tnextItem = nav.next();\n\t\t\tif (!nextItem) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem = nextItem;\n\t\t}\n\n\t\tthis.setFocus(item, eventPayload);\n\t}\n\n\tpublic focusPrevious(count: number = 1, eventPayload?: any): void {\n\t\tlet item: Item = this.getFocus() || this.input;\n\t\tlet previousItem: Item | null;\n\t\tlet nav = this.getNavigator(item, false);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tpreviousItem = nav.previous();\n\t\t\tif (!previousItem) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem = previousItem;\n\t\t}\n\n\t\tthis.setFocus(item, eventPayload);\n\t}\n\n\tpublic focusParent(eventPayload?: any): void {\n\t\tlet item: Item = this.getFocus() || this.input;\n\t\tlet nav = this.getNavigator(item, false);\n\t\tlet parent = nav.parent();\n\n\t\tif (parent) {\n\t\t\tthis.setFocus(parent, eventPayload);\n\t\t}\n\t}\n\n\tpublic focusFirstChild(eventPayload?: any): void {\n\t\tconst item = this.getItem(this.getFocus() || this.input);\n\t\tconst nav = this.getNavigator(item, false);\n\t\tconst next = nav.next();\n\t\tconst parent = nav.parent();\n\n\t\tif (parent === item) {\n\t\t\tthis.setFocus(next, eventPayload);\n\t\t}\n\t}\n\n\tpublic focusFirst(eventPayload?: any, from?: any): void {\n\t\tthis.focusNth(0, eventPayload, from);\n\t}\n\n\tpublic focusNth(index: number, eventPayload?: any, from?: any): void {\n\t\tlet navItem = this.getParent(from);\n\t\tlet nav = this.getNavigator(navItem);\n\t\tlet item = nav.first();\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\titem = nav.next();\n\t\t}\n\n\t\tif (item) {\n\t\t\tthis.setFocus(item, eventPayload);\n\t\t}\n\t}\n\n\tpublic focusLast(eventPayload?: any, from?: any): void {\n\t\tconst navItem = this.getParent(from);\n\t\tlet item: Item | null;\n\t\tif (from && navItem) {\n\t\t\titem = navItem.lastChild;\n\t\t} else {\n\t\t\tconst nav = this.getNavigator(navItem);\n\t\t\titem = nav.last();\n\t\t}\n\n\t\tif (item) {\n\t\t\tthis.setFocus(item, eventPayload);\n\t\t}\n\t}\n\n\tprivate getParent(from?: any): Item | null {\n\t\tif (from) {\n\t\t\tconst fromItem = this.getItem(from);\n\t\t\tif (fromItem && fromItem.parent) {\n\t\t\t\treturn fromItem.parent;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getItem(this.input);\n\t}\n\n\tpublic getNavigator(element: any = null, subTreeOnly: boolean = true): INavigator<Item> {\n\t\treturn new TreeNavigator(this.getItem(element), subTreeOnly);\n\t}\n\n\tpublic getItem(element: any = null): Item | null {\n\t\tif (element === null) {\n\t\t\treturn this.input;\n\t\t} else if (element instanceof Item) {\n\t\t\treturn element;\n\t\t} else if (typeof element === 'string') {\n\t\t\treturn this.registry.getItem(element);\n\t\t} else {\n\t\t\treturn this.registry.getItem(this.context.dataSource.getId(this.context.tree, element));\n\t\t}\n\t}\n\n\tpublic addTraits(trait: string, elements: any[]): void {\n\t\tlet items: IItemMap = this.traitsToItems[trait] || <IItemMap>{};\n\t\tlet item: Item | null;\n\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\titem = this.getItem(elements[i]);\n\n\t\t\tif (item) {\n\t\t\t\titem.addTrait(trait);\n\t\t\t\titems[item.id] = item;\n\t\t\t}\n\t\t}\n\t\tthis.traitsToItems[trait] = items;\n\t}\n\n\tpublic removeTraits(trait: string, elements: any[]): void {\n\t\tlet items: IItemMap = this.traitsToItems[trait] || <IItemMap>{};\n\t\tlet item: Item | null;\n\t\tlet id: string;\n\n\t\tif (elements.length === 0) {\n\t\t\tfor (id in items) {\n\t\t\t\tif (items.hasOwnProperty(id)) {\n\t\t\t\t\titem = items[id];\n\t\t\t\t\titem.removeTrait(trait);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdelete this.traitsToItems[trait];\n\n\t\t} else {\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\titem = this.getItem(elements[i]);\n\n\t\t\t\tif (item) {\n\t\t\t\t\titem.removeTrait(trait);\n\t\t\t\t\tdelete items[item.id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setTraits(trait: string, elements: any[]): void {\n\t\tif (elements.length === 0) {\n\t\t\tthis.removeTraits(trait, elements);\n\t\t} else {\n\t\t\tlet items: { [id: string]: Item; } = {};\n\t\t\tlet item: Item | null;\n\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\titem = this.getItem(elements[i]);\n\n\t\t\t\tif (item) {\n\t\t\t\t\titems[item.id] = item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet traitItems: IItemMap = this.traitsToItems[trait] || <IItemMap>{};\n\t\t\tlet itemsToRemoveTrait: Item[] = [];\n\t\t\tlet id: string;\n\n\t\t\tfor (id in traitItems) {\n\t\t\t\tif (traitItems.hasOwnProperty(id)) {\n\t\t\t\t\tif (items.hasOwnProperty(id)) {\n\t\t\t\t\t\tdelete items[id];\n\t\t\t\t\t} else {\n\t\t\t\t\t\titemsToRemoveTrait.push(traitItems[id]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = itemsToRemoveTrait.length; i < len; i++) {\n\t\t\t\titem = itemsToRemoveTrait[i];\n\t\t\t\titem.removeTrait(trait);\n\t\t\t\tdelete traitItems[item.id];\n\t\t\t}\n\n\t\t\tfor (id in items) {\n\t\t\t\tif (items.hasOwnProperty(id)) {\n\t\t\t\t\titem = items[id];\n\t\t\t\t\titem.addTrait(trait);\n\t\t\t\t\ttraitItems[id] = item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.traitsToItems[trait] = traitItems;\n\t\t}\n\t}\n\n\tprivate getElementsWithTrait(trait: string, includeHidden: boolean): any[] {\n\t\tlet elements: any[] = [];\n\t\tlet items = this.traitsToItems[trait] || {};\n\t\tlet id: string;\n\t\tfor (id in items) {\n\t\t\tif (items.hasOwnProperty(id) && (items[id].isVisible() || includeHidden)) {\n\t\t\t\telements.push(items[id].getElement());\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.registry) {\n\t\t\tthis.registry.dispose();\n\t\t\tthis.registry = null!; // StrictNullOverride: nulling out ok in dispose\n\t\t}\n\n\t\tthis._onSetInput.dispose();\n\t\tthis._onDidSetInput.dispose();\n\t\tthis._onRefresh.dispose();\n\t\tthis._onDidRefresh.dispose();\n\t\tthis._onDidHighlight.dispose();\n\t\tthis._onDidSelect.dispose();\n\t\tthis._onDidFocus.dispose();\n\t\tthis._onDidRevealItem.dispose();\n\t\tthis._onExpandItem.dispose();\n\t\tthis._onDidExpandItem.dispose();\n\t\tthis._onCollapseItem.dispose();\n\t\tthis._onDidCollapseItem.dispose();\n\t\tthis._onDidAddTraitItem.dispose();\n\t\tthis._onDidRemoveTraitItem.dispose();\n\t\tthis._onDidRefreshItem.dispose();\n\t\tthis._onRefreshItemChildren.dispose();\n\t\tthis._onDidRefreshItemChildren.dispose();\n\t\tthis._onDidDisposeItem.dispose();\n\t}\n}\n"]}]}