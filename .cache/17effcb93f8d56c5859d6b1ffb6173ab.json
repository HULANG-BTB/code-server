{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/iframe.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/iframe.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hasDifferentOriginAncestorFlag = false;\nvar sameOriginWindowChainCache = null;\nfunction getParentWindowIfSameOrigin(w) {\n    if (!w.parent || w.parent === w) {\n        return null;\n    }\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\n    try {\n        var location = w.location;\n        var parentLocation = w.parent.location;\n        if (location.protocol !== parentLocation.protocol || location.hostname !== parentLocation.hostname || location.port !== parentLocation.port) {\n            hasDifferentOriginAncestorFlag = true;\n            return null;\n        }\n    }\n    catch (e) {\n        hasDifferentOriginAncestorFlag = true;\n        return null;\n    }\n    return w.parent;\n}\nfunction findIframeElementInParentWindow(parentWindow, childWindow) {\n    var parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n    var iframe;\n    for (var i = 0, len = parentWindowIframes.length; i < len; i++) {\n        iframe = parentWindowIframes[i];\n        if (iframe.contentWindow === childWindow) {\n            return iframe;\n        }\n    }\n    return null;\n}\nvar IframeUtils = /** @class */ (function () {\n    function IframeUtils() {\n    }\n    /**\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n     */\n    IframeUtils.getSameOriginWindowChain = function () {\n        if (!sameOriginWindowChainCache) {\n            sameOriginWindowChainCache = [];\n            var w = window;\n            var parent = void 0;\n            do {\n                parent = getParentWindowIfSameOrigin(w);\n                if (parent) {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: findIframeElementInParentWindow(parent, w)\n                    });\n                }\n                else {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: null\n                    });\n                }\n                w = parent;\n            } while (w);\n        }\n        return sameOriginWindowChainCache.slice(0);\n    };\n    /**\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n     */\n    IframeUtils.hasDifferentOriginAncestor = function () {\n        if (!sameOriginWindowChainCache) {\n            this.getSameOriginWindowChain();\n        }\n        return hasDifferentOriginAncestorFlag;\n    };\n    /**\n     * Returns the position of `childWindow` relative to `ancestorWindow`\n     */\n    IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow = function (childWindow, ancestorWindow) {\n        if (!ancestorWindow || childWindow === ancestorWindow) {\n            return {\n                top: 0,\n                left: 0\n            };\n        }\n        var top = 0, left = 0;\n        var windowChain = this.getSameOriginWindowChain();\n        for (var _i = 0, windowChain_1 = windowChain; _i < windowChain_1.length; _i++) {\n            var windowChainEl = windowChain_1[_i];\n            if (windowChainEl.window === ancestorWindow) {\n                break;\n            }\n            if (!windowChainEl.iframeElement) {\n                break;\n            }\n            var boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n            top += boundingRect.top;\n            left += boundingRect.left;\n        }\n        return {\n            top: top,\n            left: left\n        };\n    };\n    return IframeUtils;\n}());\nexports.IframeUtils = IframeUtils;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/iframe.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/iframe.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a window in a possible chain of iframes\n */\nexport interface IWindowChainElement {\n\t/**\n\t * The window object for it\n\t */\n\twindow: Window;\n\t/**\n\t * The iframe element inside the window.parent corresponding to window\n\t */\n\tiframeElement: HTMLIFrameElement | null;\n}\n\nlet hasDifferentOriginAncestorFlag: boolean = false;\nlet sameOriginWindowChainCache: IWindowChainElement[] | null = null;\n\nfunction getParentWindowIfSameOrigin(w: Window): Window | null {\n\tif (!w.parent || w.parent === w) {\n\t\treturn null;\n\t}\n\n\t// Cannot really tell if we have access to the parent window unless we try to access something in it\n\ttry {\n\t\tlet location = w.location;\n\t\tlet parentLocation = w.parent.location;\n\t\tif (location.protocol !== parentLocation.protocol || location.hostname !== parentLocation.hostname || location.port !== parentLocation.port) {\n\t\t\thasDifferentOriginAncestorFlag = true;\n\t\t\treturn null;\n\t\t}\n\t} catch (e) {\n\t\thasDifferentOriginAncestorFlag = true;\n\t\treturn null;\n\t}\n\n\treturn w.parent;\n}\n\nfunction findIframeElementInParentWindow(parentWindow: Window, childWindow: Window): HTMLIFrameElement | null {\n\tlet parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n\tlet iframe: HTMLIFrameElement;\n\tfor (let i = 0, len = parentWindowIframes.length; i < len; i++) {\n\t\tiframe = parentWindowIframes[i];\n\t\tif (iframe.contentWindow === childWindow) {\n\t\t\treturn iframe;\n\t\t}\n\t}\n\treturn null;\n}\n\nexport class IframeUtils {\n\n\t/**\n\t * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n\t * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n\t * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n\t */\n\tpublic static getSameOriginWindowChain(): IWindowChainElement[] {\n\t\tif (!sameOriginWindowChainCache) {\n\t\t\tsameOriginWindowChainCache = [];\n\t\t\tlet w: Window | null = window;\n\t\t\tlet parent: Window | null;\n\t\t\tdo {\n\t\t\t\tparent = getParentWindowIfSameOrigin(w);\n\t\t\t\tif (parent) {\n\t\t\t\t\tsameOriginWindowChainCache.push({\n\t\t\t\t\t\twindow: w,\n\t\t\t\t\t\tiframeElement: findIframeElementInParentWindow(parent, w)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsameOriginWindowChainCache.push({\n\t\t\t\t\t\twindow: w,\n\t\t\t\t\t\tiframeElement: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tw = parent;\n\t\t\t} while (w);\n\t\t}\n\t\treturn sameOriginWindowChainCache.slice(0);\n\t}\n\n\t/**\n\t * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n\t * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n\t */\n\tpublic static hasDifferentOriginAncestor(): boolean {\n\t\tif (!sameOriginWindowChainCache) {\n\t\t\tthis.getSameOriginWindowChain();\n\t\t}\n\t\treturn hasDifferentOriginAncestorFlag;\n\t}\n\n\t/**\n\t * Returns the position of `childWindow` relative to `ancestorWindow`\n\t */\n\tpublic static getPositionOfChildWindowRelativeToAncestorWindow(childWindow: Window, ancestorWindow: any) {\n\n\t\tif (!ancestorWindow || childWindow === ancestorWindow) {\n\t\t\treturn {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t};\n\t\t}\n\n\t\tlet top = 0, left = 0;\n\n\t\tlet windowChain = this.getSameOriginWindowChain();\n\n\t\tfor (const windowChainEl of windowChain) {\n\n\t\t\tif (windowChainEl.window === ancestorWindow) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!windowChainEl.iframeElement) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n\t\t\ttop += boundingRect.top;\n\t\t\tleft += boundingRect.left;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left\n\t\t};\n\t}\n}\n"]}]}