{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uri_1 = require(\"vs/base/common/uri\");\nvar proxyIdentifier_1 = require(\"vs/workbench/services/extensions/common/proxyIdentifier\");\nvar TextEditorRevealType;\n(function (TextEditorRevealType) {\n    TextEditorRevealType[TextEditorRevealType[\"Default\"] = 0] = \"Default\";\n    TextEditorRevealType[TextEditorRevealType[\"InCenter\"] = 1] = \"InCenter\";\n    TextEditorRevealType[TextEditorRevealType[\"InCenterIfOutsideViewport\"] = 2] = \"InCenterIfOutsideViewport\";\n    TextEditorRevealType[TextEditorRevealType[\"AtTop\"] = 3] = \"AtTop\";\n})(TextEditorRevealType = exports.TextEditorRevealType || (exports.TextEditorRevealType = {}));\nvar ObjectIdentifier;\n(function (ObjectIdentifier) {\n    ObjectIdentifier.name = '$ident';\n    function mixin(obj, id) {\n        Object.defineProperty(obj, ObjectIdentifier.name, { value: id, enumerable: true });\n        return obj;\n    }\n    ObjectIdentifier.mixin = mixin;\n    function of(obj) {\n        return obj[ObjectIdentifier.name];\n    }\n    ObjectIdentifier.of = of;\n})(ObjectIdentifier = exports.ObjectIdentifier || (exports.ObjectIdentifier = {}));\nvar IdObject = /** @class */ (function () {\n    function IdObject() {\n    }\n    IdObject.mixin = function (object) {\n        object._id = IdObject._n++;\n        return object;\n    };\n    IdObject._n = 0;\n    return IdObject;\n}());\nexports.IdObject = IdObject;\nfunction reviveWorkspaceEditDto(data) {\n    if (data && data.edits) {\n        for (var _i = 0, _a = data.edits; _i < _a.length; _i++) {\n            var edit = _a[_i];\n            if (typeof edit.resource === 'object') {\n                edit.resource = uri_1.URI.revive(edit.resource);\n            }\n            else {\n                edit.newUri = uri_1.URI.revive(edit.newUri);\n                edit.oldUri = uri_1.URI.revive(edit.oldUri);\n            }\n        }\n    }\n    return data;\n}\nexports.reviveWorkspaceEditDto = reviveWorkspaceEditDto;\n// --- proxy identifiers\nexports.MainContext = {\n    MainThreadClipboard: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadClipboard'),\n    MainThreadCommands: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadCommands'),\n    MainThreadComments: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadComments'),\n    MainThreadConfiguration: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadConfiguration'),\n    MainThreadConsole: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadConsole'),\n    MainThreadDebugService: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDebugService'),\n    MainThreadDecorations: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDecorations'),\n    MainThreadDiagnostics: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDiagnostics'),\n    MainThreadDialogs: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDiaglogs'),\n    MainThreadDocuments: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDocuments'),\n    MainThreadDocumentContentProviders: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadDocumentContentProviders'),\n    MainThreadTextEditors: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadTextEditors'),\n    MainThreadErrors: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadErrors'),\n    MainThreadTreeViews: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadTreeViews'),\n    MainThreadLanguageFeatures: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadLanguageFeatures'),\n    MainThreadLanguages: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadLanguages'),\n    MainThreadMessageService: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadMessageService'),\n    MainThreadOutputService: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadOutputService'),\n    MainThreadProgress: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadProgress'),\n    MainThreadQuickOpen: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadQuickOpen'),\n    MainThreadStatusBar: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadStatusBar'),\n    MainThreadStorage: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadStorage'),\n    MainThreadTelemetry: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadTelemetry'),\n    MainThreadTerminalService: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadTerminalService'),\n    MainThreadWebviews: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadWebviews'),\n    MainThreadUrls: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadUrls'),\n    MainThreadWorkspace: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadWorkspace'),\n    MainThreadFileSystem: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadFileSystem'),\n    MainThreadExtensionService: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadExtensionService'),\n    MainThreadSCM: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadSCM'),\n    MainThreadSearch: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadSearch'),\n    MainThreadTask: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadTask'),\n    MainThreadWindow: proxyIdentifier_1.createMainContextProxyIdentifier('MainThreadWindow'),\n};\nexports.ExtHostContext = {\n    ExtHostCommands: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostCommands'),\n    ExtHostConfiguration: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostConfiguration'),\n    ExtHostDiagnostics: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDiagnostics'),\n    ExtHostDebugService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDebugService'),\n    ExtHostDecorations: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDecorations'),\n    ExtHostDocumentsAndEditors: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDocumentsAndEditors'),\n    ExtHostDocuments: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDocuments'),\n    ExtHostDocumentContentProviders: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDocumentContentProviders'),\n    ExtHostDocumentSaveParticipant: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostDocumentSaveParticipant'),\n    ExtHostEditors: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostEditors'),\n    ExtHostTreeViews: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostTreeViews'),\n    ExtHostFileSystem: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostFileSystem'),\n    ExtHostFileSystemEventService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostFileSystemEventService'),\n    ExtHostHeapService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostHeapMonitor'),\n    ExtHostLanguageFeatures: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostLanguageFeatures'),\n    ExtHostQuickOpen: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostQuickOpen'),\n    ExtHostExtensionService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostExtensionService'),\n    ExtHostLogService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostLogService'),\n    ExtHostTerminalService: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostTerminalService'),\n    ExtHostSCM: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostSCM'),\n    ExtHostSearch: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostSearch'),\n    ExtHostTask: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostTask'),\n    ExtHostWorkspace: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostWorkspace'),\n    ExtHostWindow: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostWindow'),\n    ExtHostWebviews: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostWebviews'),\n    ExtHostProgress: proxyIdentifier_1.createMainContextProxyIdentifier('ExtHostProgress'),\n    ExtHostComments: proxyIdentifier_1.createMainContextProxyIdentifier('ExtHostComments'),\n    ExtHostStorage: proxyIdentifier_1.createMainContextProxyIdentifier('ExtHostStorage'),\n    ExtHostUrls: proxyIdentifier_1.createExtHostContextProxyIdentifier('ExtHostUrls'),\n    ExtHostOutputService: proxyIdentifier_1.createMainContextProxyIdentifier('ExtHostOutputService'),\n};\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHost.protocol.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { SerializedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { TextEditorCursorStyle, RenderLineNumbersType } from 'vs/editor/common/config/editorOptions';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection, Selection } from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation, EndOfLineSequence } from 'vs/editor/common/model';\nimport { IModelChangedEvent } from 'vs/editor/common/model/mirrorTextModel';\nimport * as modes from 'vs/editor/common/modes';\nimport { CharacterPair, CommentRule, EnterAction } from 'vs/editor/common/modes/languageConfiguration';\nimport { ICommandHandlerDescription } from 'vs/platform/commands/common/commands';\nimport { ConfigurationTarget, IConfigurationData, IConfigurationModel } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport * as files from 'vs/platform/files/common/files';\nimport { ResourceLabelFormatter } from 'vs/platform/label/common/label';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport * as quickInput from 'vs/platform/quickinput/common/quickInput';\nimport * as search from 'vs/workbench/services/search/common/search';\nimport * as statusbar from 'vs/platform/statusbar/common/statusbar';\nimport { ITelemetryInfo } from 'vs/platform/telemetry/common/telemetry';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { EditorViewColumn } from 'vs/workbench/api/common/shared/editor';\nimport * as tasks from 'vs/workbench/api/common/shared/tasks';\nimport { ITreeItem, IRevealOptions } from 'vs/workbench/common/views';\nimport { IAdapterDescriptor, IConfig, ITerminalSettings } from 'vs/workbench/contrib/debug/common/debug';\nimport { ITextQueryBuilderOptions } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { ITerminalDimensions } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ExtensionActivationError } from 'vs/workbench/services/extensions/common/extensions';\nimport { IRPCProtocol, createExtHostContextProxyIdentifier as createExtId, createMainContextProxyIdentifier as createMainId } from 'vs/workbench/services/extensions/common/proxyIdentifier';\nimport { IProgressOptions, IProgressStep } from 'vs/platform/progress/common/progress';\nimport { SaveReason } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { ResolvedAuthority } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport * as codeInset from 'vs/workbench/contrib/codeinset/common/codeInset';\nimport * as callHierarchy from 'vs/workbench/contrib/callHierarchy/common/callHierarchy';\nimport { IRelativePattern } from 'vs/base/common/glob';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\n\nexport interface IEnvironment {\n\tisExtensionDevelopmentDebug: boolean;\n\tappRoot?: URI;\n\tappSettingsHome?: URI;\n\textensionDevelopmentLocationURI?: URI;\n\textensionTestsLocationURI?: URI;\n\tglobalStorageHome: URI;\n\tuserHome: URI;\n}\n\nexport interface IStaticWorkspaceData {\n\tid: string;\n\tname: string;\n\tconfiguration?: UriComponents | null;\n}\n\nexport interface IWorkspaceData extends IStaticWorkspaceData {\n\tfolders: { uri: UriComponents, name: string, index: number }[];\n}\n\nexport interface IInitData {\n\tcommit?: string;\n\tparentPid: number;\n\tenvironment: IEnvironment;\n\tworkspace?: IStaticWorkspaceData | null;\n\tresolvedExtensions: ExtensionIdentifier[];\n\thostExtensions: ExtensionIdentifier[];\n\textensions: IExtensionDescription[];\n\ttelemetryInfo: ITelemetryInfo;\n\tlogLevel: LogLevel;\n\tlogsLocation: URI;\n\tautoStart: boolean;\n\tremoteAuthority?: string | null;\n}\n\nexport interface IConfigurationInitData extends IConfigurationData {\n\tconfigurationScopes: { [key: string]: ConfigurationScope };\n}\n\nexport interface IWorkspaceConfigurationChangeEventData {\n\tchangedConfiguration: IConfigurationModel;\n\tchangedConfigurationByResource: { [folder: string]: IConfigurationModel };\n}\n\nexport interface IExtHostContext extends IRPCProtocol {\n\tremoteAuthority: string;\n}\n\nexport interface IMainContext extends IRPCProtocol {\n}\n\n// --- main thread\n\nexport interface MainThreadClipboardShape extends IDisposable {\n\t$readText(): Promise<string>;\n\t$writeText(value: string): Promise<void>;\n}\n\nexport interface MainThreadCommandsShape extends IDisposable {\n\t$registerCommand(id: string): void;\n\t$unregisterCommand(id: string): void;\n\t$executeCommand<T>(id: string, args: any[]): Promise<T | undefined>;\n\t$getCommands(): Promise<string[]>;\n}\n\nexport interface CommentProviderFeatures {\n\tstartDraftLabel?: string;\n\tdeleteDraftLabel?: string;\n\tfinishDraftLabel?: string;\n\treactionGroup?: modes.CommentReaction[];\n}\n\nexport interface MainThreadCommentsShape extends IDisposable {\n\t$registerCommentController(handle: number, id: string, label: string): void;\n\t$unregisterCommentController(handle: number): void;\n\t$updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n\t$createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: IRange, comments: modes.Comment[], acceptInputCommand: modes.Command | undefined, additionalCommands: modes.Command[], deleteCommand: modes.Command | undefined, collapseState: modes.CommentThreadCollapsibleState): modes.CommentThread2 | undefined;\n\t$deleteCommentThread(handle: number, commentThreadHandle: number): void;\n\t$updateComments(handle: number, commentThreadHandle: number, comments: modes.Comment[]): void;\n\t$setInputValue(handle: number, input: string): void;\n\t$updateCommentThreadAcceptInputCommand(handle: number, commentThreadHandle: number, acceptInputCommand: modes.Command): void;\n\t$updateCommentThreadAdditionalCommands(handle: number, commentThreadHandle: number, additionalCommands: modes.Command[]): void;\n\t$updateCommentThreadDeleteCommand(handle: number, commentThreadHandle: number, deleteCommand: modes.Command): void;\n\t$updateCommentThreadCollapsibleState(handle: number, commentThreadHandle: number, collapseState: modes.CommentThreadCollapsibleState): void;\n\t$updateCommentThreadRange(handle: number, commentThreadHandle: number, range: IRange): void;\n\t$updateCommentThreadLabel(handle: number, commentThreadHandle: number, label: string): void;\n\t$registerDocumentCommentProvider(handle: number, features: CommentProviderFeatures): void;\n\t$unregisterDocumentCommentProvider(handle: number): void;\n\t$registerWorkspaceCommentProvider(handle: number, extensionId: ExtensionIdentifier): void;\n\t$unregisterWorkspaceCommentProvider(handle: number): void;\n\t$onDidCommentThreadsChange(handle: number, event: modes.CommentThreadChangedEvent): void;\n}\n\nexport interface MainThreadConfigurationShape extends IDisposable {\n\t$updateConfigurationOption(target: ConfigurationTarget | null, key: string, value: any, resource: UriComponents | undefined): Promise<void>;\n\t$removeConfigurationOption(target: ConfigurationTarget | null, key: string, resource: UriComponents | undefined): Promise<void>;\n}\n\nexport interface MainThreadDiagnosticsShape extends IDisposable {\n\t$changeMany(owner: string, entries: [UriComponents, IMarkerData[] | undefined][]): void;\n\t$clear(owner: string): void;\n}\n\nexport interface MainThreadDialogOpenOptions {\n\tdefaultUri?: UriComponents;\n\topenLabel?: string;\n\tcanSelectFiles?: boolean;\n\tcanSelectFolders?: boolean;\n\tcanSelectMany?: boolean;\n\tfilters?: { [name: string]: string[] };\n}\n\nexport interface MainThreadDialogSaveOptions {\n\tdefaultUri?: UriComponents;\n\tsaveLabel?: string;\n\tfilters?: { [name: string]: string[] };\n}\n\nexport interface MainThreadDiaglogsShape extends IDisposable {\n\t$showOpenDialog(options: MainThreadDialogOpenOptions): Promise<UriComponents[] | undefined>;\n\t$showSaveDialog(options: MainThreadDialogSaveOptions): Promise<UriComponents | undefined>;\n}\n\nexport interface MainThreadDecorationsShape extends IDisposable {\n\t$registerDecorationProvider(handle: number, label: string): void;\n\t$unregisterDecorationProvider(handle: number): void;\n\t$onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface MainThreadDocumentContentProvidersShape extends IDisposable {\n\t$registerTextContentProvider(handle: number, scheme: string): void;\n\t$unregisterTextContentProvider(handle: number): void;\n\t$onVirtualDocumentChange(uri: UriComponents, value: string): void;\n}\n\nexport interface MainThreadDocumentsShape extends IDisposable {\n\t$tryCreateDocument(options?: { language?: string; content?: string; }): Promise<UriComponents>;\n\t$tryOpenDocument(uri: UriComponents): Promise<void>;\n\t$trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number | 'auto';\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean | 'auto';\n\tcursorStyle?: TextEditorCursorStyle;\n\tlineNumbers?: RenderLineNumbersType;\n}\n\nexport interface IResolvedTextEditorConfiguration {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tcursorStyle: TextEditorCursorStyle;\n\tlineNumbers: RenderLineNumbersType;\n}\n\nexport enum TextEditorRevealType {\n\tDefault = 0,\n\tInCenter = 1,\n\tInCenterIfOutsideViewport = 2,\n\tAtTop = 3\n}\n\nexport interface IUndoStopOptions {\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nexport interface IApplyEditsOptions extends IUndoStopOptions {\n\tsetEndOfLine?: EndOfLineSequence;\n}\n\nexport interface ITextDocumentShowOptions {\n\tposition?: EditorViewColumn;\n\tpreserveFocus?: boolean;\n\tpinned?: boolean;\n\tselection?: IRange;\n}\n\nexport interface MainThreadTextEditorsShape extends IDisposable {\n\t$tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined>;\n\t$registerTextEditorDecorationType(key: string, options: editorCommon.IDecorationRenderOptions): void;\n\t$removeTextEditorDecorationType(key: string): void;\n\t$tryShowEditor(id: string, position: EditorViewColumn): Promise<void>;\n\t$tryHideEditor(id: string): Promise<void>;\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void>;\n\t$trySetDecorations(id: string, key: string, ranges: editorCommon.IDecorationOptions[]): Promise<void>;\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void>;\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void>;\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean>;\n\t$tryApplyWorkspaceEdit(workspaceEditDto: WorkspaceEditDto): Promise<boolean>;\n\t$tryInsertSnippet(id: string, template: string, selections: IRange[], opts: IUndoStopOptions): Promise<boolean>;\n\t$getDiffInformation(id: string): Promise<editorCommon.ILineChange[]>;\n}\n\nexport interface MainThreadTreeViewsShape extends IDisposable {\n\t$registerTreeViewDataProvider(treeViewId: string, options: { showCollapseAll: boolean }): void;\n\t$refresh(treeViewId: string, itemsToRefresh?: { [treeItemHandle: string]: ITreeItem }): Promise<void>;\n\t$reveal(treeViewId: string, treeItem: ITreeItem, parentChain: ITreeItem[], options: IRevealOptions): Promise<void>;\n\t$setMessage(treeViewId: string, message: string | IMarkdownString): void;\n}\n\nexport interface MainThreadErrorsShape extends IDisposable {\n\t$onUnexpectedError(err: any | SerializedError): void;\n}\n\nexport interface MainThreadConsoleShape extends IDisposable {\n\t$logExtensionHostMessage(msg: IRemoteConsoleLog): void;\n}\n\nexport interface ISerializedRegExp {\n\tpattern: string;\n\tflags?: string;\n}\nexport interface ISerializedIndentationRule {\n\tdecreaseIndentPattern: ISerializedRegExp;\n\tincreaseIndentPattern: ISerializedRegExp;\n\tindentNextLinePattern?: ISerializedRegExp;\n\tunIndentedLinePattern?: ISerializedRegExp;\n}\nexport interface ISerializedOnEnterRule {\n\tbeforeText: ISerializedRegExp;\n\tafterText?: ISerializedRegExp;\n\toneLineAboveText?: ISerializedRegExp;\n\taction: EnterAction;\n}\nexport interface ISerializedLanguageConfiguration {\n\tcomments?: CommentRule;\n\tbrackets?: CharacterPair[];\n\twordPattern?: ISerializedRegExp;\n\tindentationRules?: ISerializedIndentationRule;\n\tonEnterRules?: ISerializedOnEnterRule[];\n\t__electricCharacterSupport?: {\n\t\tbrackets?: any;\n\t\tdocComment?: {\n\t\t\tscope: string;\n\t\t\topen: string;\n\t\t\tlineStart: string;\n\t\t\tclose?: string;\n\t\t};\n\t};\n\t__characterPairSupport?: {\n\t\tautoClosingPairs: {\n\t\t\topen: string;\n\t\t\tclose: string;\n\t\t\tnotIn?: string[];\n\t\t}[];\n\t};\n}\n\nexport type GlobPattern = string | { base: string; pattern: string };\n\nexport interface ISerializedDocumentFilter {\n\t$serialized: true;\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\texclusive?: boolean;\n}\n\nexport interface ISerializedSignatureHelpProviderMetadata {\n\treadonly triggerCharacters: ReadonlyArray<string>;\n\treadonly retriggerCharacters: ReadonlyArray<string>;\n}\n\nexport interface MainThreadLanguageFeaturesShape extends IDisposable {\n\t$unregister(handle: number): void;\n\t$registerDocumentSymbolProvider(handle: number, selector: ISerializedDocumentFilter[], label: string): void;\n\t$registerCodeLensSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number | undefined): void;\n\t$registerCodeInsetSupport(handle: number, selector: ISerializedDocumentFilter[], eventHandle: number | undefined): void;\n\t$emitCodeLensEvent(eventHandle: number, event?: any): void;\n\t$registerDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDeclarationSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerImplementationSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerTypeDefinitionSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerHoverProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDocumentHighlightProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerReferenceSupport(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerQuickFixSupport(handle: number, selector: ISerializedDocumentFilter[], supportedKinds?: string[]): void;\n\t$registerDocumentFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerRangeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], extensionId: ExtensionIdentifier, displayName: string): void;\n\t$registerOnTypeFormattingSupport(handle: number, selector: ISerializedDocumentFilter[], autoFormatTriggerCharacters: string[], extensionId: ExtensionIdentifier): void;\n\t$registerNavigateTypeSupport(handle: number): void;\n\t$registerRenameSupport(handle: number, selector: ISerializedDocumentFilter[], supportsResolveInitialValues: boolean): void;\n\t$registerSuggestSupport(handle: number, selector: ISerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void;\n\t$registerSignatureHelpProvider(handle: number, selector: ISerializedDocumentFilter[], metadata: ISerializedSignatureHelpProviderMetadata): void;\n\t$registerDocumentLinkProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerDocumentColorProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerFoldingRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerSelectionRangeProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$registerCallHierarchyProvider(handle: number, selector: ISerializedDocumentFilter[]): void;\n\t$setLanguageConfiguration(handle: number, languageId: string, configuration: ISerializedLanguageConfiguration): void;\n}\n\nexport interface MainThreadLanguagesShape extends IDisposable {\n\t$getLanguages(): Promise<string[]>;\n\t$changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n}\n\nexport interface MainThreadMessageOptions {\n\textension?: IExtensionDescription;\n\tmodal?: boolean;\n}\n\nexport interface MainThreadMessageServiceShape extends IDisposable {\n\t$showMessage(severity: Severity, message: string, options: MainThreadMessageOptions, commands: { title: string; isCloseAffordance: boolean; handle: number; }[]): Promise<number | undefined>;\n}\n\nexport interface MainThreadOutputServiceShape extends IDisposable {\n\t$register(label: string, log: boolean, file?: UriComponents): Promise<string>;\n\t$append(channelId: string, value: string): Promise<void> | undefined;\n\t$update(channelId: string): Promise<void> | undefined;\n\t$clear(channelId: string, till: number): Promise<void> | undefined;\n\t$reveal(channelId: string, preserveFocus: boolean): Promise<void> | undefined;\n\t$close(channelId: string): Promise<void> | undefined;\n\t$dispose(channelId: string): Promise<void> | undefined;\n}\n\nexport interface MainThreadProgressShape extends IDisposable {\n\n\t$startProgress(handle: number, options: IProgressOptions): void;\n\t$progressReport(handle: number, message: IProgressStep): void;\n\t$progressEnd(handle: number): void;\n}\n\nexport interface MainThreadTerminalServiceShape extends IDisposable {\n\t$createTerminal(name?: string, shellPath?: string, shellArgs?: string[] | string, cwd?: string | UriComponents, env?: { [key: string]: string | null }, waitOnExit?: boolean, strictEnv?: boolean): Promise<{ id: number, name: string }>;\n\t$createTerminalRenderer(name: string): Promise<number>;\n\t$dispose(terminalId: number): void;\n\t$hide(terminalId: number): void;\n\t$sendText(terminalId: number, text: string, addNewLine: boolean): void;\n\t$show(terminalId: number, preserveFocus: boolean): void;\n\t$registerOnDataListener(terminalId: number): void;\n\n\t// Process\n\t$sendProcessTitle(terminalId: number, title: string): void;\n\t$sendProcessData(terminalId: number, data: string): void;\n\t$sendProcessPid(terminalId: number, pid: number): void;\n\t$sendProcessExit(terminalId: number, exitCode: number): void;\n\t$sendProcessInitialCwd(terminalId: number, cwd: string): void;\n\t$sendProcessCwd(terminalId: number, initialCwd: string): void;\n\n\t// Renderer\n\t$terminalRendererSetName(terminalId: number, name: string): void;\n\t$terminalRendererSetDimensions(terminalId: number, dimensions: ITerminalDimensions): void;\n\t$terminalRendererWrite(terminalId: number, text: string): void;\n\t$terminalRendererRegisterOnInputListener(terminalId: number): void;\n}\n\nexport interface TransferQuickPickItems extends quickInput.IQuickPickItem {\n\thandle: number;\n}\n\nexport interface TransferQuickInputButton extends quickInput.IQuickInputButton {\n\thandle: number;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n\n\tid: number;\n\n\ttype?: 'quickPick' | 'inputBox';\n\n\tenabled?: boolean;\n\n\tbusy?: boolean;\n\n\tvisible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n\n\ttype?: 'quickPick';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\titems?: TransferQuickPickItems[];\n\n\tactiveItems?: number[];\n\n\tselectedItems?: number[];\n\n\tcanSelectMany?: boolean;\n\n\tignoreFocusOut?: boolean;\n\n\tmatchOnDescription?: boolean;\n\n\tmatchOnDetail?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n\n\ttype?: 'inputBox';\n\n\tvalue?: string;\n\n\tplaceholder?: string;\n\n\tpassword?: boolean;\n\n\tbuttons?: TransferQuickInputButton[];\n\n\tprompt?: string;\n\n\tvalidationMessage?: string;\n}\n\nexport interface IInputBoxOptions {\n\tvalue?: string;\n\tvalueSelection?: [number, number];\n\tprompt?: string;\n\tplaceHolder?: string;\n\tpassword?: boolean;\n\tignoreFocusOut?: boolean;\n}\n\nexport interface MainThreadQuickOpenShape extends IDisposable {\n\t$show(instance: number, options: quickInput.IPickOptions<TransferQuickPickItems>, token: CancellationToken): Promise<number | number[] | undefined>;\n\t$setItems(instance: number, items: TransferQuickPickItems[]): Promise<void>;\n\t$setError(instance: number, error: Error): Promise<void>;\n\t$input(options: IInputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string>;\n\t$createOrUpdate(params: TransferQuickInput): Promise<void>;\n\t$dispose(id: number): Promise<void>;\n}\n\nexport interface MainThreadStatusBarShape extends IDisposable {\n\t$setEntry(id: number, extensionId: ExtensionIdentifier | undefined, text: string, tooltip: string, command: string, color: string | ThemeColor, alignment: statusbar.StatusbarAlignment, priority: number | undefined): void;\n\t$dispose(id: number): void;\n}\n\nexport interface MainThreadStorageShape extends IDisposable {\n\t$getValue<T>(shared: boolean, key: string): Promise<T | undefined>;\n\t$setValue(shared: boolean, key: string, value: object): Promise<void>;\n}\n\nexport interface MainThreadTelemetryShape extends IDisposable {\n\t$publicLog(eventName: string, data?: any): void;\n}\n\nexport type WebviewPanelHandle = string;\n\nexport type WebviewInsetHandle = number;\n\nexport interface WebviewPanelShowOptions {\n\treadonly viewColumn?: EditorViewColumn;\n\treadonly preserveFocus?: boolean;\n}\n\nexport interface MainThreadWebviewsShape extends IDisposable {\n\t$createWebviewPanel(handle: WebviewPanelHandle, viewType: string, title: string, showOptions: WebviewPanelShowOptions, options: modes.IWebviewPanelOptions & modes.IWebviewOptions, extensionId: ExtensionIdentifier, extensionLocation: UriComponents): void;\n\t$createWebviewCodeInset(handle: WebviewInsetHandle, symbolId: string, options: modes.IWebviewOptions, extensionId: ExtensionIdentifier | undefined, extensionLocation: UriComponents | undefined): void;\n\t$disposeWebview(handle: WebviewPanelHandle): void;\n\t$reveal(handle: WebviewPanelHandle, showOptions: WebviewPanelShowOptions): void;\n\t$setTitle(handle: WebviewPanelHandle, value: string): void;\n\t$setIconPath(handle: WebviewPanelHandle, value: { light: UriComponents, dark: UriComponents } | undefined): void;\n\n\t$setHtml(handle: WebviewPanelHandle | WebviewInsetHandle, value: string): void;\n\t$setOptions(handle: WebviewPanelHandle | WebviewInsetHandle, options: modes.IWebviewOptions): void;\n\t$postMessage(handle: WebviewPanelHandle | WebviewInsetHandle, value: any): Promise<boolean>;\n\n\t$registerSerializer(viewType: string): void;\n\t$unregisterSerializer(viewType: string): void;\n}\n\nexport interface WebviewPanelViewState {\n\treadonly active: boolean;\n\treadonly visible: boolean;\n\treadonly position: EditorViewColumn;\n}\n\nexport interface ExtHostWebviewsShape {\n\t$onMessage(handle: WebviewPanelHandle, message: any): void;\n\t$onDidChangeWebviewPanelViewState(handle: WebviewPanelHandle, newState: WebviewPanelViewState): void;\n\t$onDidDisposeWebviewPanel(handle: WebviewPanelHandle): Promise<void>;\n\t$deserializeWebviewPanel(newWebviewHandle: WebviewPanelHandle, viewType: string, title: string, state: any, position: EditorViewColumn, options: modes.IWebviewOptions): Promise<void>;\n}\n\nexport interface MainThreadUrlsShape extends IDisposable {\n\t$registerUriHandler(handle: number, extensionId: ExtensionIdentifier): Promise<void>;\n\t$unregisterUriHandler(handle: number): Promise<void>;\n}\n\nexport interface ExtHostUrlsShape {\n\t$handleExternalUri(handle: number, uri: UriComponents): Promise<void>;\n}\n\nexport interface ITextSearchComplete {\n\tlimitHit?: boolean;\n}\n\nexport interface MainThreadWorkspaceShape extends IDisposable {\n\t$startFileSearch(includePattern: string | undefined, includeFolder: UriComponents | undefined, excludePatternOrDisregardExcludes: string | false | undefined, maxResults: number | undefined, token: CancellationToken): Promise<UriComponents[] | undefined>;\n\t$startTextSearch(query: search.IPatternInfo, options: ITextQueryBuilderOptions, requestId: number, token: CancellationToken): Promise<ITextSearchComplete>;\n\t$checkExists(includes: string[], token: CancellationToken): Promise<boolean>;\n\t$saveAll(includeUntitled?: boolean): Promise<boolean>;\n\t$updateWorkspaceFolders(extensionName: string, index: number, deleteCount: number, workspaceFoldersToAdd: { uri: UriComponents, name?: string }[]): Promise<void>;\n\t$resolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: files.FileChangeType;\n}\n\nexport interface MainThreadFileSystemShape extends IDisposable {\n\t$registerFileSystemProvider(handle: number, scheme: string, capabilities: files.FileSystemProviderCapabilities): void;\n\t$unregisterProvider(handle: number): void;\n\t$registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n\t$unregisterResourceLabelFormatter(handle: number): void;\n\t$onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n}\n\nexport interface MainThreadSearchShape extends IDisposable {\n\t$registerFileSearchProvider(handle: number, scheme: string): void;\n\t$registerTextSearchProvider(handle: number, scheme: string): void;\n\t$unregisterProvider(handle: number): void;\n\t$handleFileMatch(handle: number, session: number, data: UriComponents[]): void;\n\t$handleTextMatch(handle: number, session: number, data: search.IRawFileMatch2[]): void;\n\t$handleTelemetry(eventName: string, data: any): void;\n}\n\nexport interface MainThreadTaskShape extends IDisposable {\n\t$createTaskId(task: tasks.TaskDTO): Promise<string>;\n\t$registerTaskProvider(handle: number): Promise<void>;\n\t$unregisterTaskProvider(handle: number): Promise<void>;\n\t$fetchTasks(filter?: tasks.TaskFilterDTO): Promise<tasks.TaskDTO[]>;\n\t$executeTask(task: tasks.TaskHandleDTO | tasks.TaskDTO): Promise<tasks.TaskExecutionDTO>;\n\t$terminateTask(id: string): Promise<void>;\n\t$registerTaskSystem(scheme: string, info: tasks.TaskSystemInfoDTO): void;\n\t$customExecutionComplete(id: string, result?: number): Promise<void>;\n}\n\nexport interface MainThreadExtensionServiceShape extends IDisposable {\n\t$activateExtension(extensionId: ExtensionIdentifier, activationEvent: string | null): Promise<void>;\n\t$onWillActivateExtension(extensionId: ExtensionIdentifier): void;\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, startup: boolean, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationEvent: string | null): void;\n\t$onExtensionActivationError(extensionId: ExtensionIdentifier, error: ExtensionActivationError): Promise<void>;\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, error: SerializedError): void;\n\t$onExtensionHostExit(code: number): void;\n}\n\nexport interface SCMProviderFeatures {\n\thasQuickDiffProvider?: boolean;\n\tcount?: number;\n\tcommitTemplate?: string;\n\tacceptInputCommand?: modes.Command;\n\tstatusBarCommands?: CommandDto[];\n}\n\nexport interface SCMGroupFeatures {\n\thideWhenEmpty?: boolean;\n}\n\nexport type SCMRawResource = [\n\tnumber /*handle*/,\n\tUriComponents /*resourceUri*/,\n\tstring[] /*icons: light, dark*/,\n\tstring /*tooltip*/,\n\tboolean /*strike through*/,\n\tboolean /*faded*/,\n\n\tstring | undefined /*source*/,\n\tstring | undefined /*letter*/,\n\tThemeColor | null /*color*/\n];\n\nexport type SCMRawResourceSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tSCMRawResource[]\n];\n\nexport type SCMRawResourceSplices = [\n\tnumber, /*handle*/\n\tSCMRawResourceSplice[]\n];\n\nexport interface MainThreadSCMShape extends IDisposable {\n\t$registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined): void;\n\t$updateSourceControl(handle: number, features: SCMProviderFeatures): void;\n\t$unregisterSourceControl(handle: number): void;\n\n\t$registerGroup(sourceControlHandle: number, handle: number, id: string, label: string): void;\n\t$updateGroup(sourceControlHandle: number, handle: number, features: SCMGroupFeatures): void;\n\t$updateGroupLabel(sourceControlHandle: number, handle: number, label: string): void;\n\t$unregisterGroup(sourceControlHandle: number, handle: number): void;\n\n\t$spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): void;\n\n\t$setInputBoxValue(sourceControlHandle: number, value: string): void;\n\t$setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n\t$setInputBoxVisibility(sourceControlHandle: number, visible: boolean): void;\n\t$setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport type DebugSessionUUID = string;\n\nexport interface IDebugConfiguration {\n\ttype: string;\n\tname: string;\n\trequest: string;\n\t[key: string]: any;\n}\n\nexport interface MainThreadDebugServiceShape extends IDisposable {\n\t$registerDebugTypes(debugTypes: string[]): void;\n\t$sessionCached(sessionID: string): void;\n\t$acceptDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$acceptDAError(handle: number, name: string, message: string, stack: string | undefined): void;\n\t$acceptDAExit(handle: number, code: number | undefined, signal: string | undefined): void;\n\t$registerDebugConfigurationProvider(type: string, hasProvideMethod: boolean, hasResolveMethod: boolean, hasProvideDaMethod: boolean, handle: number): Promise<void>;\n\t$registerDebugAdapterDescriptorFactory(type: string, handle: number): Promise<void>;\n\t$registerDebugAdapterTrackerFactory(type: string, handle: number): Promise<any>;\n\t$unregisterDebugConfigurationProvider(handle: number): void;\n\t$unregisterDebugAdapterDescriptorFactory(handle: number): void;\n\t$unregisterDebugAdapterTrackerFactory(handle: number): void;\n\t$startDebugging(folder: UriComponents | undefined, nameOrConfig: string | IDebugConfiguration, parentSessionID: string | undefined): Promise<boolean>;\n\t$customDebugAdapterRequest(id: DebugSessionUUID, command: string, args: any): Promise<any>;\n\t$appendDebugConsole(value: string): void;\n\t$startBreakpointEvents(): void;\n\t$registerBreakpoints(breakpoints: Array<ISourceMultiBreakpointDto | IFunctionBreakpointDto>): Promise<void>;\n\t$unregisterBreakpoints(breakpointIds: string[], functionBreakpointIds: string[]): Promise<void>;\n}\n\nexport interface MainThreadWindowShape extends IDisposable {\n\t$getWindowVisibility(): Promise<boolean>;\n\t$openUri(uri: UriComponents): Promise<boolean>;\n}\n\n// -- extension host\n\nexport interface ExtHostCommandsShape {\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Promise<T>;\n\t$getContributedCommandHandlerDescriptions(): Promise<{ [id: string]: string | ICommandHandlerDescription }>;\n}\n\nexport interface ExtHostConfigurationShape {\n\t$initializeConfiguration(data: IConfigurationInitData): void;\n\t$acceptConfigurationChanged(data: IConfigurationInitData, eventData: IWorkspaceConfigurationChangeEventData): void;\n}\n\nexport interface ExtHostDiagnosticsShape {\n\n}\n\nexport interface ExtHostDocumentContentProvidersShape {\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined>;\n}\n\nexport interface IModelAddedData {\n\turi: UriComponents;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n\tmodeId: string;\n\tisDirty: boolean;\n}\nexport interface ExtHostDocumentsShape {\n\t$acceptModelModeChanged(strURL: UriComponents, oldModeId: string, newModeId: string): void;\n\t$acceptModelSaved(strURL: UriComponents): void;\n\t$acceptDirtyStateChanged(strURL: UriComponents, isDirty: boolean): void;\n\t$acceptModelChanged(strURL: UriComponents, e: IModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface ExtHostDocumentSaveParticipantShape {\n\t$participateInSave(resource: UriComponents, reason: SaveReason): Promise<boolean[]>;\n}\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocumentUri: UriComponents;\n\toptions: IResolvedTextEditorConfiguration;\n\tselections: ISelection[];\n\tvisibleRanges: IRange[];\n\teditorPosition: EditorViewColumn | undefined;\n}\nexport interface ITextEditorPositionData {\n\t[id: string]: EditorViewColumn;\n}\nexport interface IEditorPropertiesChangeData {\n\toptions: IResolvedTextEditorConfiguration | null;\n\tselections: ISelectionChangeEvent | null;\n\tvisibleRanges: IRange[] | null;\n}\nexport interface ISelectionChangeEvent {\n\tselections: Selection[];\n\tsource?: string;\n}\n\nexport interface ExtHostEditorsShape {\n\t$acceptEditorPropertiesChanged(id: string, props: IEditorPropertiesChangeData): void;\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void;\n}\n\nexport interface IDocumentsAndEditorsDelta {\n\tremovedDocuments?: UriComponents[];\n\taddedDocuments?: IModelAddedData[];\n\tremovedEditors?: string[];\n\taddedEditors?: ITextEditorAddData[];\n\tnewActiveEditor?: string | null;\n}\n\nexport interface ExtHostDocumentsAndEditorsShape {\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void;\n}\n\nexport interface ExtHostTreeViewsShape {\n\t$getChildren(treeViewId: string, treeItemHandle?: string): Promise<ITreeItem[]>;\n\t$setExpanded(treeViewId: string, treeItemHandle: string, expanded: boolean): void;\n\t$setSelection(treeViewId: string, treeItemHandles: string[]): void;\n\t$setVisible(treeViewId: string, visible: boolean): void;\n}\n\nexport interface ExtHostWorkspaceShape {\n\t$initializeWorkspace(workspace: IWorkspaceData | null): void;\n\t$acceptWorkspaceData(workspace: IWorkspaceData | null): void;\n\t$handleTextSearchResult(result: search.IRawFileMatch2, requestId: number): void;\n}\n\nexport interface ExtHostFileSystemShape {\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat>;\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]>;\n\t$readFile(handle: number, resource: UriComponents): Promise<Buffer>;\n\t$writeFile(handle: number, resource: UriComponents, content: Buffer, opts: files.FileWriteOptions): Promise<void>;\n\t$rename(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$copy(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n\t$mkdir(handle: number, resource: UriComponents): Promise<void>;\n\t$delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void;\n\t$unwatch(handle: number, session: number): void;\n\t$open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number>;\n\t$close(handle: number, fd: number): Promise<void>;\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<Buffer>;\n\t$write(handle: number, fd: number, pos: number, data: Buffer): Promise<number>;\n}\n\nexport interface ExtHostSearchShape {\n\t$provideFileSearchResults(handle: number, session: number, query: search.IRawQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$provideTextSearchResults(handle: number, session: number, query: search.IRawTextQuery, token: CancellationToken): Promise<search.ISearchCompleteStats>;\n\t$clearCache(cacheKey: string): Promise<void>;\n}\n\nexport interface ExtHostExtensionServiceShape {\n\t$resolveAuthority(remoteAuthority: string): Promise<ResolvedAuthority>;\n\t$startExtensionHost(enabledExtensionIds: ExtensionIdentifier[]): Promise<void>;\n\t$activateByEvent(activationEvent: string): Promise<void>;\n\t$activate(extensionId: ExtensionIdentifier, activationEvent: string): Promise<boolean>;\n\n\t$deltaExtensions(toAdd: IExtensionDescription[], toRemove: ExtensionIdentifier[]): Promise<void>;\n\n\t$test_latency(n: number): Promise<number>;\n\t$test_up(b: Buffer): Promise<number>;\n\t$test_down(size: number): Promise<Buffer>;\n}\n\nexport interface FileSystemEvents {\n\tcreated: UriComponents[];\n\tchanged: UriComponents[];\n\tdeleted: UriComponents[];\n}\nexport interface ExtHostFileSystemEventServiceShape {\n\t$onFileEvent(events: FileSystemEvents): void;\n\t$onFileRename(oldUri: UriComponents, newUri: UriComponents): void;\n\t$onWillRename(oldUri: UriComponents, newUri: UriComponents): Promise<any>;\n}\n\nexport interface ObjectIdentifier {\n\t$ident?: number;\n}\n\nexport namespace ObjectIdentifier {\n\texport const name = '$ident';\n\texport function mixin<T>(obj: T, id: number): T & ObjectIdentifier {\n\t\tObject.defineProperty(obj, name, { value: id, enumerable: true });\n\t\treturn <T & ObjectIdentifier>obj;\n\t}\n\texport function of(obj: any): number {\n\t\treturn obj[name];\n\t}\n}\n\nexport interface ExtHostHeapServiceShape {\n\t$onGarbageCollection(ids: number[]): void;\n}\nexport interface IRawColorInfo {\n\tcolor: [number, number, number, number];\n\trange: IRange;\n}\n\nexport class IdObject {\n\t_id?: number;\n\tprivate static _n = 0;\n\tstatic mixin<T extends object>(object: T): T & IdObject {\n\t\t(<any>object)._id = IdObject._n++;\n\t\treturn <any>object;\n\t}\n}\n\nexport interface SuggestionDto extends modes.CompletionItem {\n\t_id: number;\n\t_parentId: number;\n}\n\nexport interface SuggestResultDto extends IdObject {\n\tsuggestions: SuggestionDto[];\n\tincomplete?: boolean;\n}\n\nexport interface LocationDto {\n\turi: UriComponents;\n\trange: IRange;\n}\n\nexport interface DefinitionLinkDto {\n\toriginSelectionRange?: IRange;\n\turi: UriComponents;\n\trange: IRange;\n\ttargetSelectionRange?: IRange;\n}\n\nexport interface WorkspaceSymbolDto extends IdObject {\n\tname: string;\n\tcontainerName?: string;\n\tkind: modes.SymbolKind;\n\tlocation: LocationDto;\n}\n\nexport interface WorkspaceSymbolsDto extends IdObject {\n\tsymbols: WorkspaceSymbolDto[];\n}\n\nexport interface ResourceFileEditDto {\n\toldUri?: UriComponents;\n\tnewUri?: UriComponents;\n\toptions?: {\n\t\toverwrite?: boolean;\n\t\tignoreIfExists?: boolean;\n\t\tignoreIfNotExists?: boolean;\n\t\trecursive?: boolean;\n\t};\n}\n\nexport interface ResourceTextEditDto {\n\tresource: UriComponents;\n\tmodelVersionId?: number;\n\tedits: modes.TextEdit[];\n}\n\nexport interface WorkspaceEditDto {\n\tedits: Array<ResourceFileEditDto | ResourceTextEditDto>;\n\n\t// todo@joh reject should go into rename\n\trejectReason?: string;\n}\n\nexport function reviveWorkspaceEditDto(data: WorkspaceEditDto | undefined): modes.WorkspaceEdit {\n\tif (data && data.edits) {\n\t\tfor (const edit of data.edits) {\n\t\t\tif (typeof (<ResourceTextEditDto>edit).resource === 'object') {\n\t\t\t\t(<ResourceTextEditDto>edit).resource = URI.revive((<ResourceTextEditDto>edit).resource);\n\t\t\t} else {\n\t\t\t\t(<ResourceFileEditDto>edit).newUri = URI.revive((<ResourceFileEditDto>edit).newUri);\n\t\t\t\t(<ResourceFileEditDto>edit).oldUri = URI.revive((<ResourceFileEditDto>edit).oldUri);\n\t\t\t}\n\t\t}\n\t}\n\treturn <modes.WorkspaceEdit>data;\n}\n\nexport type CommandDto = ObjectIdentifier & modes.Command;\n\nexport interface CodeActionDto {\n\ttitle: string;\n\tedit?: WorkspaceEditDto;\n\tdiagnostics?: IMarkerData[];\n\tcommand?: CommandDto;\n\tkind?: string;\n\tisPreferred?: boolean;\n}\n\nexport interface LinkDto extends ObjectIdentifier {\n\trange: IRange;\n\turl?: string | UriComponents;\n}\n\nexport interface CodeLensDto extends ObjectIdentifier {\n\trange: IRange;\n\tid?: string;\n\tcommand?: CommandDto;\n}\n\nexport type CodeInsetDto = ObjectIdentifier & codeInset.ICodeInsetSymbol;\n\nexport interface CallHierarchyDto {\n\t_id: number;\n\tkind: modes.SymbolKind;\n\tname: string;\n\tdetail?: string;\n\turi: UriComponents;\n\trange: IRange;\n\tselectionRange: IRange;\n}\n\nexport interface ExtHostLanguageFeaturesShape {\n\t$provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<modes.DocumentSymbol[] | undefined>;\n\t$provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeLensDto[]>;\n\t$resolveCodeLens(handle: number, resource: UriComponents, symbol: CodeLensDto, token: CancellationToken): Promise<CodeLensDto | undefined>;\n\t$provideCodeInsets(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeInsetDto[] | undefined>;\n\t$resolveCodeInset(handle: number, resource: UriComponents, symbol: CodeInsetDto, token: CancellationToken): Promise<CodeInsetDto>;\n\t$provideDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideDeclaration(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideImplementation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideTypeDefinition(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<DefinitionLinkDto[]>;\n\t$provideHover(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.Hover | undefined>;\n\t$provideDocumentHighlights(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.DocumentHighlight[] | undefined>;\n\t$provideReferences(handle: number, resource: UriComponents, position: IPosition, context: modes.ReferenceContext, token: CancellationToken): Promise<LocationDto[] | undefined>;\n\t$provideCodeActions(handle: number, resource: UriComponents, rangeOrSelection: IRange | ISelection, context: modes.CodeActionContext, token: CancellationToken): Promise<CodeActionDto[] | undefined>;\n\t$provideDocumentFormattingEdits(handle: number, resource: UriComponents, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: IRange, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: IPosition, ch: string, options: modes.FormattingOptions, token: CancellationToken): Promise<ISingleEditOperation[] | undefined>;\n\t$provideWorkspaceSymbols(handle: number, search: string, token: CancellationToken): Promise<WorkspaceSymbolsDto>;\n\t$resolveWorkspaceSymbol(handle: number, symbol: WorkspaceSymbolDto, token: CancellationToken): Promise<WorkspaceSymbolDto | undefined>;\n\t$releaseWorkspaceSymbols(handle: number, id: number): void;\n\t$provideRenameEdits(handle: number, resource: UriComponents, position: IPosition, newName: string, token: CancellationToken): Promise<WorkspaceEditDto | undefined>;\n\t$resolveRenameLocation(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<modes.RenameLocation | undefined>;\n\t$provideCompletionItems(handle: number, resource: UriComponents, position: IPosition, context: modes.CompletionContext, token: CancellationToken): Promise<SuggestResultDto | undefined>;\n\t$resolveCompletionItem(handle: number, resource: UriComponents, position: IPosition, suggestion: modes.CompletionItem, token: CancellationToken): Promise<modes.CompletionItem>;\n\t$releaseCompletionItems(handle: number, id: number): void;\n\t$provideSignatureHelp(handle: number, resource: UriComponents, position: IPosition, context: modes.SignatureHelpContext, token: CancellationToken): Promise<modes.SignatureHelp | undefined>;\n\t$provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<LinkDto[] | undefined>;\n\t$resolveDocumentLink(handle: number, link: LinkDto, token: CancellationToken): Promise<LinkDto | undefined>;\n\t$provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): Promise<IRawColorInfo[]>;\n\t$provideColorPresentations(handle: number, resource: UriComponents, colorInfo: IRawColorInfo, token: CancellationToken): Promise<modes.IColorPresentation[] | undefined>;\n\t$provideFoldingRanges(handle: number, resource: UriComponents, context: modes.FoldingContext, token: CancellationToken): Promise<modes.FoldingRange[] | undefined>;\n\t$provideSelectionRanges(handle: number, resource: UriComponents, positions: IPosition[], token: CancellationToken): Promise<modes.SelectionRange[][]>;\n\t$provideCallHierarchyItem(handle: number, resource: UriComponents, position: IPosition, token: CancellationToken): Promise<CallHierarchyDto | undefined>;\n\t$resolveCallHierarchyItem(handle: number, item: callHierarchy.CallHierarchyItem, direction: callHierarchy.CallHierarchyDirection, token: CancellationToken): Promise<[CallHierarchyDto, modes.Location[]][]>;\n}\n\nexport interface ExtHostQuickOpenShape {\n\t$onItemSelected(handle: number): void;\n\t$validateInput(input: string): Promise<string | null | undefined>;\n\t$onDidChangeActive(sessionId: number, handles: number[]): void;\n\t$onDidChangeSelection(sessionId: number, handles: number[]): void;\n\t$onDidAccept(sessionId: number): void;\n\t$onDidChangeValue(sessionId: number, value: string): void;\n\t$onDidTriggerButton(sessionId: number, handle: number): void;\n\t$onDidHide(sessionId: number): void;\n}\n\nexport interface ShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null };\n}\n\nexport interface ExtHostTerminalServiceShape {\n\t$acceptTerminalClosed(id: number): void;\n\t$acceptTerminalOpened(id: number, name: string): void;\n\t$acceptActiveTerminalChanged(id: number | null): void;\n\t$acceptTerminalProcessId(id: number, processId: number): void;\n\t$acceptTerminalProcessData(id: number, data: string): void;\n\t$acceptTerminalRendererInput(id: number, data: string): void;\n\t$acceptTerminalTitleChange(id: number, name: string): void;\n\t$acceptTerminalDimensions(id: number, cols: number, rows: number): void;\n\t$createProcess(id: number, shellLaunchConfig: ShellLaunchConfigDto, activeWorkspaceRootUri: UriComponents, cols: number, rows: number): void;\n\t$acceptProcessInput(id: number, data: string): void;\n\t$acceptProcessResize(id: number, cols: number, rows: number): void;\n\t$acceptProcessShutdown(id: number, immediate: boolean): void;\n\t$acceptProcessRequestInitialCwd(id: number): void;\n\t$acceptProcessRequestCwd(id: number): void;\n\t$acceptProcessRequestLatency(id: number): number;\n}\n\nexport interface ExtHostSCMShape {\n\t$provideOriginalResource(sourceControlHandle: number, uri: UriComponents, token: CancellationToken): Promise<UriComponents | null>;\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): void;\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number): Promise<void>;\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined>;\n\t$setSelectedSourceControls(selectedSourceControlHandles: number[]): Promise<void>;\n}\n\nexport interface ExtHostTaskShape {\n\t$provideTasks(handle: number, validTypes: { [key: string]: boolean; }): Thenable<tasks.TaskSetDTO>;\n\t$onDidStartTask(execution: tasks.TaskExecutionDTO, terminalId: number): void;\n\t$onDidStartTaskProcess(value: tasks.TaskProcessStartedDTO): void;\n\t$onDidEndTaskProcess(value: tasks.TaskProcessEndedDTO): void;\n\t$OnDidEndTask(execution: tasks.TaskExecutionDTO): void;\n\t$resolveVariables(workspaceFolder: UriComponents, toResolve: { process?: { name: string; cwd?: string }, variables: string[] }): Promise<{ process?: string; variables: { [key: string]: string } }>;\n}\n\nexport interface IBreakpointDto {\n\ttype: string;\n\tid?: string;\n\tenabled: boolean;\n\tcondition?: string;\n\thitCondition?: string;\n\tlogMessage?: string;\n}\n\nexport interface IFunctionBreakpointDto extends IBreakpointDto {\n\ttype: 'function';\n\tfunctionName: string;\n}\n\nexport interface ISourceBreakpointDto extends IBreakpointDto {\n\ttype: 'source';\n\turi: UriComponents;\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface IBreakpointsDeltaDto {\n\tadded?: Array<ISourceBreakpointDto | IFunctionBreakpointDto>;\n\tremoved?: string[];\n\tchanged?: Array<ISourceBreakpointDto | IFunctionBreakpointDto>;\n}\n\nexport interface ISourceMultiBreakpointDto {\n\ttype: 'sourceMulti';\n\turi: UriComponents;\n\tlines: {\n\t\tid: string;\n\t\tenabled: boolean;\n\t\tcondition?: string;\n\t\thitCondition?: string;\n\t\tlogMessage?: string;\n\t\tline: number;\n\t\tcharacter: number;\n\t}[];\n}\n\nexport interface IDebugSessionFullDto {\n\tid: DebugSessionUUID;\n\ttype: string;\n\tname: string;\n\tfolderUri: UriComponents | undefined;\n\tconfiguration: IConfig;\n}\n\nexport type IDebugSessionDto = IDebugSessionFullDto | DebugSessionUUID;\n\nexport interface ExtHostDebugServiceShape {\n\t$substituteVariables(folder: UriComponents | undefined, config: IConfig): Promise<IConfig>;\n\t$runInTerminal(args: DebugProtocol.RunInTerminalRequestArguments, config: ITerminalSettings): Promise<number | undefined>;\n\t$startDASession(handle: number, session: IDebugSessionDto): Promise<void>;\n\t$stopDASession(handle: number): Promise<void>;\n\t$sendDAMessage(handle: number, message: DebugProtocol.ProtocolMessage): void;\n\t$resolveDebugConfiguration(handle: number, folder: UriComponents | undefined, debugConfiguration: IConfig): Promise<IConfig | null | undefined>;\n\t$provideDebugConfigurations(handle: number, folder: UriComponents | undefined): Promise<IConfig[]>;\n\t$legacyDebugAdapterExecutable(handle: number, folderUri: UriComponents | undefined): Promise<IAdapterDescriptor>; // TODO@AW legacy\n\t$provideDebugAdapter(handle: number, session: IDebugSessionDto): Promise<IAdapterDescriptor>;\n\t$acceptDebugSessionStarted(session: IDebugSessionDto): void;\n\t$acceptDebugSessionTerminated(session: IDebugSessionDto): void;\n\t$acceptDebugSessionActiveChanged(session: IDebugSessionDto | undefined): void;\n\t$acceptDebugSessionCustomEvent(session: IDebugSessionDto, event: any): void;\n\t$acceptBreakpointsDelta(delta: IBreakpointsDeltaDto): void;\n}\n\n\nexport interface DecorationRequest {\n\treadonly id: number;\n\treadonly handle: number;\n\treadonly uri: UriComponents;\n}\n\nexport type DecorationData = [number, boolean, string, string, ThemeColor, string];\nexport type DecorationReply = { [id: number]: DecorationData };\n\nexport interface ExtHostDecorationsShape {\n\t$provideDecorations(requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface ExtHostWindowShape {\n\t$onDidChangeWindowFocus(value: boolean): void;\n}\n\nexport interface ExtHostLogServiceShape {\n\t$setLevel(level: LogLevel): void;\n}\n\nexport interface ExtHostOutputServiceShape {\n\t$setVisibleChannel(channelId: string | null): void;\n}\n\nexport interface ExtHostProgressShape {\n\t$acceptProgressCanceled(handle: number): void;\n}\n\nexport interface ExtHostCommentsShape {\n\t$provideDocumentComments(handle: number, document: UriComponents): Promise<modes.CommentInfo | null>;\n\t$createNewCommentThread(handle: number, document: UriComponents, range: IRange, text: string): Promise<modes.CommentThread | null>;\n\t$onCommentWidgetInputChange(commentControllerHandle: number, input: string | undefined): Promise<number | undefined>;\n\t$provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<IRange[] | undefined>;\n\t$provideReactionGroup(commentControllerHandle: number): Promise<modes.CommentReaction[] | undefined>;\n\t$toggleReaction(commentControllerHandle: number, threadHandle: number, uri: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$createNewCommentWidgetCallback(commentControllerHandle: number, uriComponents: UriComponents, range: IRange, token: CancellationToken): Promise<void>;\n\t$replyToCommentThread(handle: number, document: UriComponents, range: IRange, commentThread: modes.CommentThread, text: string): Promise<modes.CommentThread | null>;\n\t$editComment(handle: number, document: UriComponents, comment: modes.Comment, text: string): Promise<void>;\n\t$deleteComment(handle: number, document: UriComponents, comment: modes.Comment): Promise<void>;\n\t$startDraft(handle: number, document: UriComponents): Promise<void>;\n\t$deleteDraft(handle: number, document: UriComponents): Promise<void>;\n\t$finishDraft(handle: number, document: UriComponents): Promise<void>;\n\t$addReaction(handle: number, document: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$deleteReaction(handle: number, document: UriComponents, comment: modes.Comment, reaction: modes.CommentReaction): Promise<void>;\n\t$provideWorkspaceComments(handle: number): Promise<modes.CommentThread[] | null>;\n}\n\nexport interface ExtHostStorageShape {\n\t$acceptValue(shared: boolean, key: string, value: object | undefined): void;\n}\n\n// --- proxy identifiers\n\nexport const MainContext = {\n\tMainThreadClipboard: createMainId<MainThreadClipboardShape>('MainThreadClipboard'),\n\tMainThreadCommands: createMainId<MainThreadCommandsShape>('MainThreadCommands'),\n\tMainThreadComments: createMainId<MainThreadCommentsShape>('MainThreadComments'),\n\tMainThreadConfiguration: createMainId<MainThreadConfigurationShape>('MainThreadConfiguration'),\n\tMainThreadConsole: createMainId<MainThreadConsoleShape>('MainThreadConsole'),\n\tMainThreadDebugService: createMainId<MainThreadDebugServiceShape>('MainThreadDebugService'),\n\tMainThreadDecorations: createMainId<MainThreadDecorationsShape>('MainThreadDecorations'),\n\tMainThreadDiagnostics: createMainId<MainThreadDiagnosticsShape>('MainThreadDiagnostics'),\n\tMainThreadDialogs: createMainId<MainThreadDiaglogsShape>('MainThreadDiaglogs'),\n\tMainThreadDocuments: createMainId<MainThreadDocumentsShape>('MainThreadDocuments'),\n\tMainThreadDocumentContentProviders: createMainId<MainThreadDocumentContentProvidersShape>('MainThreadDocumentContentProviders'),\n\tMainThreadTextEditors: createMainId<MainThreadTextEditorsShape>('MainThreadTextEditors'),\n\tMainThreadErrors: createMainId<MainThreadErrorsShape>('MainThreadErrors'),\n\tMainThreadTreeViews: createMainId<MainThreadTreeViewsShape>('MainThreadTreeViews'),\n\tMainThreadLanguageFeatures: createMainId<MainThreadLanguageFeaturesShape>('MainThreadLanguageFeatures'),\n\tMainThreadLanguages: createMainId<MainThreadLanguagesShape>('MainThreadLanguages'),\n\tMainThreadMessageService: createMainId<MainThreadMessageServiceShape>('MainThreadMessageService'),\n\tMainThreadOutputService: createMainId<MainThreadOutputServiceShape>('MainThreadOutputService'),\n\tMainThreadProgress: createMainId<MainThreadProgressShape>('MainThreadProgress'),\n\tMainThreadQuickOpen: createMainId<MainThreadQuickOpenShape>('MainThreadQuickOpen'),\n\tMainThreadStatusBar: createMainId<MainThreadStatusBarShape>('MainThreadStatusBar'),\n\tMainThreadStorage: createMainId<MainThreadStorageShape>('MainThreadStorage'),\n\tMainThreadTelemetry: createMainId<MainThreadTelemetryShape>('MainThreadTelemetry'),\n\tMainThreadTerminalService: createMainId<MainThreadTerminalServiceShape>('MainThreadTerminalService'),\n\tMainThreadWebviews: createMainId<MainThreadWebviewsShape>('MainThreadWebviews'),\n\tMainThreadUrls: createMainId<MainThreadUrlsShape>('MainThreadUrls'),\n\tMainThreadWorkspace: createMainId<MainThreadWorkspaceShape>('MainThreadWorkspace'),\n\tMainThreadFileSystem: createMainId<MainThreadFileSystemShape>('MainThreadFileSystem'),\n\tMainThreadExtensionService: createMainId<MainThreadExtensionServiceShape>('MainThreadExtensionService'),\n\tMainThreadSCM: createMainId<MainThreadSCMShape>('MainThreadSCM'),\n\tMainThreadSearch: createMainId<MainThreadSearchShape>('MainThreadSearch'),\n\tMainThreadTask: createMainId<MainThreadTaskShape>('MainThreadTask'),\n\tMainThreadWindow: createMainId<MainThreadWindowShape>('MainThreadWindow'),\n};\n\nexport const ExtHostContext = {\n\tExtHostCommands: createExtId<ExtHostCommandsShape>('ExtHostCommands'),\n\tExtHostConfiguration: createExtId<ExtHostConfigurationShape>('ExtHostConfiguration'),\n\tExtHostDiagnostics: createExtId<ExtHostDiagnosticsShape>('ExtHostDiagnostics'),\n\tExtHostDebugService: createExtId<ExtHostDebugServiceShape>('ExtHostDebugService'),\n\tExtHostDecorations: createExtId<ExtHostDecorationsShape>('ExtHostDecorations'),\n\tExtHostDocumentsAndEditors: createExtId<ExtHostDocumentsAndEditorsShape>('ExtHostDocumentsAndEditors'),\n\tExtHostDocuments: createExtId<ExtHostDocumentsShape>('ExtHostDocuments'),\n\tExtHostDocumentContentProviders: createExtId<ExtHostDocumentContentProvidersShape>('ExtHostDocumentContentProviders'),\n\tExtHostDocumentSaveParticipant: createExtId<ExtHostDocumentSaveParticipantShape>('ExtHostDocumentSaveParticipant'),\n\tExtHostEditors: createExtId<ExtHostEditorsShape>('ExtHostEditors'),\n\tExtHostTreeViews: createExtId<ExtHostTreeViewsShape>('ExtHostTreeViews'),\n\tExtHostFileSystem: createExtId<ExtHostFileSystemShape>('ExtHostFileSystem'),\n\tExtHostFileSystemEventService: createExtId<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n\tExtHostHeapService: createExtId<ExtHostHeapServiceShape>('ExtHostHeapMonitor'),\n\tExtHostLanguageFeatures: createExtId<ExtHostLanguageFeaturesShape>('ExtHostLanguageFeatures'),\n\tExtHostQuickOpen: createExtId<ExtHostQuickOpenShape>('ExtHostQuickOpen'),\n\tExtHostExtensionService: createExtId<ExtHostExtensionServiceShape>('ExtHostExtensionService'),\n\tExtHostLogService: createExtId<ExtHostLogServiceShape>('ExtHostLogService'),\n\tExtHostTerminalService: createExtId<ExtHostTerminalServiceShape>('ExtHostTerminalService'),\n\tExtHostSCM: createExtId<ExtHostSCMShape>('ExtHostSCM'),\n\tExtHostSearch: createExtId<ExtHostSearchShape>('ExtHostSearch'),\n\tExtHostTask: createExtId<ExtHostTaskShape>('ExtHostTask'),\n\tExtHostWorkspace: createExtId<ExtHostWorkspaceShape>('ExtHostWorkspace'),\n\tExtHostWindow: createExtId<ExtHostWindowShape>('ExtHostWindow'),\n\tExtHostWebviews: createExtId<ExtHostWebviewsShape>('ExtHostWebviews'),\n\tExtHostProgress: createMainId<ExtHostProgressShape>('ExtHostProgress'),\n\tExtHostComments: createMainId<ExtHostCommentsShape>('ExtHostComments'),\n\tExtHostStorage: createMainId<ExtHostStorageShape>('ExtHostStorage'),\n\tExtHostUrls: createExtId<ExtHostUrlsShape>('ExtHostUrls'),\n\tExtHostOutputService: createMainId<ExtHostOutputServiceShape>('ExtHostOutputService'),\n};\n"]}]}