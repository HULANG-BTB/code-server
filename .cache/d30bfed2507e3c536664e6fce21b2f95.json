{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar log_1 = require(\"vs/platform/log/common/log\");\nexports.NullTelemetryService = new /** @class */ (function () {\n    function class_1() {\n    }\n    class_1.prototype.publicLog = function (eventName, data) {\n        return Promise.resolve(undefined);\n    };\n    class_1.prototype.getTelemetryInfo = function () {\n        return Promise.resolve({\n            instanceId: 'someValue.instanceId',\n            sessionId: 'someValue.sessionId',\n            machineId: 'someValue.machineId'\n        });\n    };\n    return class_1;\n}());\nfunction combinedAppender() {\n    var appenders = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        appenders[_i] = arguments[_i];\n    }\n    return {\n        log: function (e, d) { return appenders.forEach(function (a) { return a.log(e, d); }); },\n        dispose: function () { return Promise.all(appenders.map(function (a) { return a.dispose(); })); }\n    };\n}\nexports.combinedAppender = combinedAppender;\nexports.NullAppender = { log: function () { return null; }, dispose: function () { return Promise.resolve(null); } };\nvar LogAppender = /** @class */ (function () {\n    function LogAppender(_logService) {\n        this._logService = _logService;\n        this.commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n    }\n    LogAppender.prototype.dispose = function () {\n        return Promise.resolve(undefined);\n    };\n    LogAppender.prototype.log = function (eventName, data) {\n        var _this = this;\n        var strippedData = {};\n        Object.keys(data).forEach(function (key) {\n            if (!_this.commonPropertiesRegex.test(key)) {\n                strippedData[key] = data[key];\n            }\n        });\n        this._logService.trace(\"telemetry/\" + eventName, strippedData);\n    };\n    LogAppender = tslib_1.__decorate([\n        tslib_1.__param(0, log_1.ILogService)\n    ], LogAppender);\n    return LogAppender;\n}());\nexports.LogAppender = LogAppender;\n/**\n * Only add settings that cannot contain any personal/private information of users (PII).\n */\nvar configurationValueWhitelist = [\n    'editor.fontFamily',\n    'editor.fontWeight',\n    'editor.fontSize',\n    'editor.lineHeight',\n    'editor.letterSpacing',\n    'editor.lineNumbers',\n    'editor.rulers',\n    'editor.wordSeparators',\n    'editor.tabSize',\n    'editor.indentSize',\n    'editor.insertSpaces',\n    'editor.detectIndentation',\n    'editor.roundedSelection',\n    'editor.scrollBeyondLastLine',\n    'editor.minimap.enabled',\n    'editor.minimap.side',\n    'editor.minimap.renderCharacters',\n    'editor.minimap.maxColumn',\n    'editor.find.seedSearchStringFromSelection',\n    'editor.find.autoFindInSelection',\n    'editor.wordWrap',\n    'editor.wordWrapColumn',\n    'editor.wrappingIndent',\n    'editor.mouseWheelScrollSensitivity',\n    'editor.multiCursorModifier',\n    'editor.quickSuggestions',\n    'editor.quickSuggestionsDelay',\n    'editor.parameterHints.enabled',\n    'editor.parameterHints.cycle',\n    'editor.autoClosingBrackets',\n    'editor.autoClosingQuotes',\n    'editor.autoSurround',\n    'editor.autoIndent',\n    'editor.formatOnType',\n    'editor.formatOnPaste',\n    'editor.suggestOnTriggerCharacters',\n    'editor.acceptSuggestionOnEnter',\n    'editor.acceptSuggestionOnCommitCharacter',\n    'editor.snippetSuggestions',\n    'editor.emptySelectionClipboard',\n    'editor.wordBasedSuggestions',\n    'editor.suggestSelection',\n    'editor.suggestFontSize',\n    'editor.suggestLineHeight',\n    'editor.tabCompletion',\n    'editor.selectionHighlight',\n    'editor.occurrencesHighlight',\n    'editor.overviewRulerLanes',\n    'editor.overviewRulerBorder',\n    'editor.cursorBlinking',\n    'editor.cursorSmoothCaretAnimation',\n    'editor.cursorStyle',\n    'editor.mouseWheelZoom',\n    'editor.fontLigatures',\n    'editor.hideCursorInOverviewRuler',\n    'editor.renderWhitespace',\n    'editor.renderControlCharacters',\n    'editor.renderIndentGuides',\n    'editor.renderLineHighlight',\n    'editor.codeLens',\n    'editor.folding',\n    'editor.showFoldingControls',\n    'editor.matchBrackets',\n    'editor.glyphMargin',\n    'editor.useTabStops',\n    'editor.trimAutoWhitespace',\n    'editor.stablePeek',\n    'editor.dragAndDrop',\n    'editor.formatOnSave',\n    'editor.colorDecorators',\n    'breadcrumbs.enabled',\n    'breadcrumbs.filePath',\n    'breadcrumbs.symbolPath',\n    'breadcrumbs.symbolSortOrder',\n    'breadcrumbs.useQuickPick',\n    'explorer.openEditors.visible',\n    'extensions.autoUpdate',\n    'files.associations',\n    'files.autoGuessEncoding',\n    'files.autoSave',\n    'files.autoSaveDelay',\n    'files.encoding',\n    'files.eol',\n    'files.hotExit',\n    'files.trimTrailingWhitespace',\n    'git.confirmSync',\n    'git.enabled',\n    'http.proxyStrictSSL',\n    'javascript.validate.enable',\n    'php.builtInCompletions.enable',\n    'php.validate.enable',\n    'php.validate.run',\n    'terminal.integrated.fontFamily',\n    'window.openFilesInNewWindow',\n    'window.restoreWindows',\n    'window.zoomLevel',\n    'workbench.editor.enablePreview',\n    'workbench.editor.enablePreviewFromQuickOpen',\n    'workbench.editor.showTabs',\n    'workbench.editor.highlightModifiedTabs',\n    'workbench.editor.swipeToNavigate',\n    'workbench.sideBar.location',\n    'workbench.startupEditor',\n    'workbench.statusBar.visible',\n    'workbench.welcome.enabled',\n];\nfunction configurationTelemetry(telemetryService, configurationService) {\n    return configurationService.onDidChangeConfiguration(function (event) {\n        if (event.source !== configuration_1.ConfigurationTarget.DEFAULT) {\n            /* __GDPR__\n                \"updateConfiguration\" : {\n                    \"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                    \"configurationKeys\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                }\n            */\n            telemetryService.publicLog('updateConfiguration', {\n                configurationSource: configuration_1.ConfigurationTargetToString(event.source),\n                configurationKeys: flattenKeys(event.sourceConfig)\n            });\n            /* __GDPR__\n                \"updateConfigurationValues\" : {\n                    \"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                    \"configurationValues\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n                }\n            */\n            telemetryService.publicLog('updateConfigurationValues', {\n                configurationSource: configuration_1.ConfigurationTargetToString(event.source),\n                configurationValues: flattenValues(event.sourceConfig, configurationValueWhitelist)\n            });\n        }\n    });\n}\nexports.configurationTelemetry = configurationTelemetry;\nfunction keybindingsTelemetry(telemetryService, keybindingService) {\n    return keybindingService.onDidUpdateKeybindings(function (event) {\n        if (event.source === keybinding_1.KeybindingSource.User && event.keybindings) {\n            /* __GDPR__\n                \"updateKeybindings\" : {\n                    \"bindings\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n                }\n            */\n            telemetryService.publicLog('updateKeybindings', {\n                bindings: event.keybindings.map(function (binding) { return ({\n                    key: binding.key,\n                    command: binding.command,\n                    when: binding.when,\n                    args: binding.args ? true : undefined\n                }); })\n            });\n        }\n    });\n}\nexports.keybindingsTelemetry = keybindingsTelemetry;\nfunction flattenKeys(value) {\n    if (!value) {\n        return [];\n    }\n    var result = [];\n    flatKeys(result, '', value);\n    return result;\n}\nfunction flatKeys(result, prefix, value) {\n    if (value && typeof value === 'object' && !Array.isArray(value)) {\n        Object.keys(value)\n            .forEach(function (key) { return flatKeys(result, prefix ? prefix + \".\" + key : key, value[key]); });\n    }\n    else {\n        result.push(prefix);\n    }\n}\nfunction flattenValues(value, keys) {\n    if (!value) {\n        return [];\n    }\n    return keys.reduce(function (array, key) {\n        var _a;\n        var v = key.split('.')\n            .reduce(function (tmp, k) { return tmp && typeof tmp === 'object' ? tmp[k] : undefined; }, value);\n        if (typeof v !== 'undefined') {\n            array.push((_a = {}, _a[key] = v, _a));\n        }\n        return array;\n    }, []);\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { IKeybindingService, KeybindingSource } from 'vs/platform/keybinding/common/keybinding';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tisOptedIn: true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tdispose(): Promise<any> | undefined;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tdispose: () => Promise.all(appenders.map(a => a.dispose()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, dispose: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tdispose(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\n/**\n * Only add settings that cannot contain any personal/private information of users (PII).\n */\nconst configurationValueWhitelist = [\n\t'editor.fontFamily',\n\t'editor.fontWeight',\n\t'editor.fontSize',\n\t'editor.lineHeight',\n\t'editor.letterSpacing',\n\t'editor.lineNumbers',\n\t'editor.rulers',\n\t'editor.wordSeparators',\n\t'editor.tabSize',\n\t'editor.indentSize',\n\t'editor.insertSpaces',\n\t'editor.detectIndentation',\n\t'editor.roundedSelection',\n\t'editor.scrollBeyondLastLine',\n\t'editor.minimap.enabled',\n\t'editor.minimap.side',\n\t'editor.minimap.renderCharacters',\n\t'editor.minimap.maxColumn',\n\t'editor.find.seedSearchStringFromSelection',\n\t'editor.find.autoFindInSelection',\n\t'editor.wordWrap',\n\t'editor.wordWrapColumn',\n\t'editor.wrappingIndent',\n\t'editor.mouseWheelScrollSensitivity',\n\t'editor.multiCursorModifier',\n\t'editor.quickSuggestions',\n\t'editor.quickSuggestionsDelay',\n\t'editor.parameterHints.enabled',\n\t'editor.parameterHints.cycle',\n\t'editor.autoClosingBrackets',\n\t'editor.autoClosingQuotes',\n\t'editor.autoSurround',\n\t'editor.autoIndent',\n\t'editor.formatOnType',\n\t'editor.formatOnPaste',\n\t'editor.suggestOnTriggerCharacters',\n\t'editor.acceptSuggestionOnEnter',\n\t'editor.acceptSuggestionOnCommitCharacter',\n\t'editor.snippetSuggestions',\n\t'editor.emptySelectionClipboard',\n\t'editor.wordBasedSuggestions',\n\t'editor.suggestSelection',\n\t'editor.suggestFontSize',\n\t'editor.suggestLineHeight',\n\t'editor.tabCompletion',\n\t'editor.selectionHighlight',\n\t'editor.occurrencesHighlight',\n\t'editor.overviewRulerLanes',\n\t'editor.overviewRulerBorder',\n\t'editor.cursorBlinking',\n\t'editor.cursorSmoothCaretAnimation',\n\t'editor.cursorStyle',\n\t'editor.mouseWheelZoom',\n\t'editor.fontLigatures',\n\t'editor.hideCursorInOverviewRuler',\n\t'editor.renderWhitespace',\n\t'editor.renderControlCharacters',\n\t'editor.renderIndentGuides',\n\t'editor.renderLineHighlight',\n\t'editor.codeLens',\n\t'editor.folding',\n\t'editor.showFoldingControls',\n\t'editor.matchBrackets',\n\t'editor.glyphMargin',\n\t'editor.useTabStops',\n\t'editor.trimAutoWhitespace',\n\t'editor.stablePeek',\n\t'editor.dragAndDrop',\n\t'editor.formatOnSave',\n\t'editor.colorDecorators',\n\n\t'breadcrumbs.enabled',\n\t'breadcrumbs.filePath',\n\t'breadcrumbs.symbolPath',\n\t'breadcrumbs.symbolSortOrder',\n\t'breadcrumbs.useQuickPick',\n\t'explorer.openEditors.visible',\n\t'extensions.autoUpdate',\n\t'files.associations',\n\t'files.autoGuessEncoding',\n\t'files.autoSave',\n\t'files.autoSaveDelay',\n\t'files.encoding',\n\t'files.eol',\n\t'files.hotExit',\n\t'files.trimTrailingWhitespace',\n\t'git.confirmSync',\n\t'git.enabled',\n\t'http.proxyStrictSSL',\n\t'javascript.validate.enable',\n\t'php.builtInCompletions.enable',\n\t'php.validate.enable',\n\t'php.validate.run',\n\t'terminal.integrated.fontFamily',\n\t'window.openFilesInNewWindow',\n\t'window.restoreWindows',\n\t'window.zoomLevel',\n\t'workbench.editor.enablePreview',\n\t'workbench.editor.enablePreviewFromQuickOpen',\n\t'workbench.editor.showTabs',\n\t'workbench.editor.highlightModifiedTabs',\n\t'workbench.editor.swipeToNavigate',\n\t'workbench.sideBar.location',\n\t'workbench.startupEditor',\n\t'workbench.statusBar.visible',\n\t'workbench.welcome.enabled',\n];\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfiguration\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationKeys\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateConfigurationValues\" : {\n\t\t\t\t\t\"configurationSource\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"configurationValues\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateConfigurationValues', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationValues: flattenValues(event.sourceConfig, configurationValueWhitelist)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function keybindingsTelemetry(telemetryService: ITelemetryService, keybindingService: IKeybindingService): IDisposable {\n\treturn keybindingService.onDidUpdateKeybindings(event => {\n\t\tif (event.source === KeybindingSource.User && event.keybindings) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"updateKeybindings\" : {\n\t\t\t\t\t\"bindings\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\ttelemetryService.publicLog('updateKeybindings', {\n\t\t\t\tbindings: event.keybindings.map(binding => ({\n\t\t\t\t\tkey: binding.key,\n\t\t\t\t\tcommand: binding.command,\n\t\t\t\t\twhen: binding.when,\n\t\t\t\t\targs: binding.args ? true : undefined\n\t\t\t\t}))\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction flattenKeys(value: Object): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: Object): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n\nfunction flattenValues(value: Object, keys: string[]): { [key: string]: any }[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\n\treturn keys.reduce((array, key) => {\n\t\tconst v = key.split('.')\n\t\t\t.reduce((tmp, k) => tmp && typeof tmp === 'object' ? tmp[k] : undefined, value);\n\t\tif (typeof v !== 'undefined') {\n\t\t\tarray.push({ [key]: v });\n\t\t}\n\t\treturn array;\n\t}, <{ [key: string]: any }[]>[]);\n}\n"]}]}