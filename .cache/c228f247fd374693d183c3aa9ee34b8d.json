{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar languageSelector_1 = require(\"vs/editor/common/modes/languageSelector\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nfunction isExclusive(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return selector.every(isExclusive);\n    }\n    else {\n        return !!selector.exclusive;\n    }\n}\nvar LanguageFeatureRegistry = /** @class */ (function () {\n    function LanguageFeatureRegistry() {\n        this._clock = 0;\n        this._entries = [];\n        this._onDidChange = new event_1.Emitter();\n    }\n    Object.defineProperty(LanguageFeatureRegistry.prototype, \"onDidChange\", {\n        get: function () {\n            return this._onDidChange.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageFeatureRegistry.prototype.register = function (selector, provider) {\n        var _this = this;\n        var entry = {\n            selector: selector,\n            provider: provider,\n            _score: -1,\n            _time: this._clock++\n        };\n        this._entries.push(entry);\n        this._lastCandidate = undefined;\n        this._onDidChange.fire(this._entries.length);\n        return lifecycle_1.toDisposable(function () {\n            if (entry) {\n                var idx = _this._entries.indexOf(entry);\n                if (idx >= 0) {\n                    _this._entries.splice(idx, 1);\n                    _this._lastCandidate = undefined;\n                    _this._onDidChange.fire(_this._entries.length);\n                    entry = undefined;\n                }\n            }\n        });\n    };\n    LanguageFeatureRegistry.prototype.has = function (model) {\n        return this.all(model).length > 0;\n    };\n    LanguageFeatureRegistry.prototype.all = function (model) {\n        if (!model) {\n            return [];\n        }\n        this._updateScores(model);\n        var result = [];\n        // from registry\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry._score > 0) {\n                result.push(entry.provider);\n            }\n        }\n        return result;\n    };\n    LanguageFeatureRegistry.prototype.ordered = function (model) {\n        var result = [];\n        this._orderedForEach(model, function (entry) { return result.push(entry.provider); });\n        return result;\n    };\n    LanguageFeatureRegistry.prototype.orderedGroups = function (model) {\n        var result = [];\n        var lastBucket;\n        var lastBucketScore;\n        this._orderedForEach(model, function (entry) {\n            if (lastBucket && lastBucketScore === entry._score) {\n                lastBucket.push(entry.provider);\n            }\n            else {\n                lastBucketScore = entry._score;\n                lastBucket = [entry.provider];\n                result.push(lastBucket);\n            }\n        });\n        return result;\n    };\n    LanguageFeatureRegistry.prototype._orderedForEach = function (model, callback) {\n        if (!model) {\n            return;\n        }\n        this._updateScores(model);\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry._score > 0) {\n                callback(entry);\n            }\n        }\n    };\n    LanguageFeatureRegistry.prototype._updateScores = function (model) {\n        var candidate = {\n            uri: model.uri.toString(),\n            language: model.getLanguageIdentifier().language\n        };\n        if (this._lastCandidate\n            && this._lastCandidate.language === candidate.language\n            && this._lastCandidate.uri === candidate.uri) {\n            // nothing has changed\n            return;\n        }\n        this._lastCandidate = candidate;\n        for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            entry._score = languageSelector_1.score(entry.selector, model.uri, model.getLanguageIdentifier().language, modelService_1.shouldSynchronizeModel(model));\n            if (isExclusive(entry.selector) && entry._score > 0) {\n                // support for one exclusive selector that overwrites\n                // any other selector\n                for (var _b = 0, _c = this._entries; _b < _c.length; _b++) {\n                    var entry_1 = _c[_b];\n                    entry_1._score = 0;\n                }\n                entry._score = 1000;\n                break;\n            }\n        }\n        // needs sorting\n        this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n    };\n    LanguageFeatureRegistry._compareByScoreAndTime = function (a, b) {\n        if (a._score < b._score) {\n            return 1;\n        }\n        else if (a._score > b._score) {\n            return -1;\n        }\n        else if (a._time < b._time) {\n            return 1;\n        }\n        else if (a._time > b._time) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    return LanguageFeatureRegistry;\n}());\nexports.LanguageFeatureRegistry = LanguageFeatureRegistry;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { LanguageSelector, score } from 'vs/editor/common/modes/languageSelector';\nimport { shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\t_score: number;\n\t_time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!selector.exclusive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\tprivate readonly _onDidChange = new Emitter<number>();\n\n\tconstructor() {\n\t}\n\n\tget onDidChange(): Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateScores(model);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; } | undefined;\n\n\tprivate _updateScores(model: ITextModel): void {\n\n\t\tlet candidate = {\n\t\t\turi: model.uri.toString(),\n\t\t\tlanguage: model.getLanguageIdentifier().language\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.uri, model.getLanguageIdentifier().language, shouldSynchronizeModel(model));\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t// any other selector\n\t\t\t\tfor (let entry of this._entries) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t}\n\t\t\t\tentry._score = 1000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"]}]}