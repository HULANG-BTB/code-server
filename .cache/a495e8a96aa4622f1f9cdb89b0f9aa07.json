{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentEnvironmentChannel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentEnvironmentChannel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform = require(\"vs/base/common/platform\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar RemoteExtensionEnvironmentChannelClient = /** @class */ (function () {\n    function RemoteExtensionEnvironmentChannelClient(channel) {\n        this.channel = channel;\n    }\n    RemoteExtensionEnvironmentChannelClient.prototype.getEnvironmentData = function (remoteAuthority, extensionDevelopmentPath) {\n        var args = {\n            language: platform.language,\n            remoteAuthority: remoteAuthority,\n            extensionDevelopmentPath: extensionDevelopmentPath\n        };\n        return this.channel.call('getEnvironmentData', args)\n            .then(function (data) {\n            return {\n                pid: data.pid,\n                appRoot: uri_1.URI.revive(data.appRoot),\n                appSettingsHome: uri_1.URI.revive(data.appSettingsHome),\n                appSettingsPath: uri_1.URI.revive(data.appSettingsPath),\n                logsPath: uri_1.URI.revive(data.logsPath),\n                extensionsPath: uri_1.URI.revive(data.extensionsPath),\n                extensionHostLogsPath: uri_1.URI.revive(data.extensionHostLogsPath),\n                globalStorageHome: uri_1.URI.revive(data.globalStorageHome),\n                userHome: uri_1.URI.revive(data.userHome),\n                extensions: data.extensions.map(function (ext) { ext.extensionLocation = uri_1.URI.revive(ext.extensionLocation); return ext; }),\n                os: data.os,\n                syncExtensions: data.syncExtensions\n            };\n        });\n    };\n    return RemoteExtensionEnvironmentChannelClient;\n}());\nexports.RemoteExtensionEnvironmentChannelClient = RemoteExtensionEnvironmentChannelClient;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentEnvironmentChannel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentEnvironmentChannel.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,kDAAoD;AACpD,0CAAwD;AA0BxD;IAEC,iDAAoB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;IAAI,CAAC;IAE1C,oEAAkB,GAAlB,UAAmB,eAAuB,EAAE,wBAA8B;QACzE,IAAM,IAAI,GAAiC;YAC1C,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,eAAe,iBAAA;YACf,wBAAwB,0BAAA;SACxB,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAA6B,oBAAoB,EAAE,IAAI,CAAC;aAC9E,IAAI,CAAC,UAAC,IAAgC;YACtC,OAAO;gBACN,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,OAAO,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACjC,eAAe,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;gBACjD,eAAe,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;gBACjD,QAAQ,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACnC,cAAc,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC/C,qBAAqB,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAC7D,iBAAiB,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACrD,QAAQ,EAAE,SAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACnC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,GAAG,IAAY,GAAI,CAAC,iBAAiB,GAAG,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzH,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,cAAc,EAAE,IAAI,CAAC,cAAc;aACnC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACF,8CAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,0FAAuC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\n\nexport interface IGetEnvironmentDataArguments {\n\tlanguage: string;\n\tremoteAuthority: string;\n\textensionDevelopmentPath: UriComponents | undefined;\n}\n\nexport interface IRemoteAgentEnvironmentDTO {\n\tpid: number;\n\tappRoot: UriComponents;\n\tappSettingsHome: UriComponents;\n\tappSettingsPath: UriComponents;\n\tlogsPath: UriComponents;\n\textensionsPath: UriComponents;\n\textensionHostLogsPath: UriComponents;\n\tglobalStorageHome: UriComponents;\n\tuserHome: UriComponents;\n\textensions: IExtensionDescription[];\n\tos: platform.OperatingSystem;\n\tsyncExtensions: boolean;\n}\n\nexport class RemoteExtensionEnvironmentChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tgetEnvironmentData(remoteAuthority: string, extensionDevelopmentPath?: URI): Promise<IRemoteAgentEnvironment> {\n\t\tconst args: IGetEnvironmentDataArguments = {\n\t\t\tlanguage: platform.language,\n\t\t\tremoteAuthority,\n\t\t\textensionDevelopmentPath\n\t\t};\n\t\treturn this.channel.call<IRemoteAgentEnvironmentDTO>('getEnvironmentData', args)\n\t\t\t.then((data: IRemoteAgentEnvironmentDTO): IRemoteAgentEnvironment => {\n\t\t\t\treturn {\n\t\t\t\t\tpid: data.pid,\n\t\t\t\t\tappRoot: URI.revive(data.appRoot),\n\t\t\t\t\tappSettingsHome: URI.revive(data.appSettingsHome),\n\t\t\t\t\tappSettingsPath: URI.revive(data.appSettingsPath),\n\t\t\t\t\tlogsPath: URI.revive(data.logsPath),\n\t\t\t\t\textensionsPath: URI.revive(data.extensionsPath),\n\t\t\t\t\textensionHostLogsPath: URI.revive(data.extensionHostLogsPath),\n\t\t\t\t\tglobalStorageHome: URI.revive(data.globalStorageHome),\n\t\t\t\t\tuserHome: URI.revive(data.userHome),\n\t\t\t\t\textensions: data.extensions.map(ext => { (<any>ext).extensionLocation = URI.revive(ext.extensionLocation); return ext; }),\n\t\t\t\t\tos: data.os,\n\t\t\t\t\tsyncExtensions: data.syncExtensions\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n"]}]}