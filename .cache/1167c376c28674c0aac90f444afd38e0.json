{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/linkedList.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/linkedList.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterator_1 = require(\"vs/base/common/iterator\");\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.clear = function () {\n        this._first = undefined;\n        this._last = undefined;\n        this._size = 0;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype.pop = function () {\n        if (!this._last) {\n            return undefined;\n        }\n        else {\n            var res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return iterator_1.FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    LinkedList.prototype.toArray = function () {\n        var result = [];\n        for (var node = this._first; node instanceof Node; node = node.next) {\n            result.push(node.element);\n        }\n        return result;\n    };\n    return LinkedList;\n}());\nexports.LinkedList = LinkedList;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/linkedList.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/linkedList.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\telement: E;\n\tnext: Node<E> | undefined;\n\tprev: Node<E> | undefined;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> | undefined;\n\tprivate _last: Node<E> | undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._first;\n\t}\n\n\tclear(): void {\n\t\tthis._first = undefined;\n\t\tthis._last = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (!this._first) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\t\treturn this._remove.bind(this, newNode);\n\t}\n\n\n\tshift(): E | undefined {\n\t\tif (!this._first) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (!this._last) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tlet candidate: Node<E> | undefined = this._first;\n\t\twhile (candidate instanceof Node) {\n\t\t\tif (candidate !== node) {\n\t\t\t\tcandidate = candidate.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (candidate.prev && candidate.next) {\n\t\t\t\t// middle\n\t\t\t\tconst anchor = candidate.prev;\n\t\t\t\tanchor.next = candidate.next;\n\t\t\t\tcandidate.next.prev = anchor;\n\n\t\t\t} else if (!candidate.prev && !candidate.next) {\n\t\t\t\t// only node\n\t\t\t\tthis._first = undefined;\n\t\t\t\tthis._last = undefined;\n\n\t\t\t} else if (!candidate.next) {\n\t\t\t\t// last\n\t\t\t\tthis._last = this._last!.prev!;\n\t\t\t\tthis._last.next = undefined;\n\n\t\t\t} else if (!candidate.prev) {\n\t\t\t\t// first\n\t\t\t\tthis._first = this._first!.next!;\n\t\t\t\tthis._first.prev = undefined;\n\t\t\t}\n\n\t\t\t// done\n\t\t\tthis._size -= 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node instanceof Node; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n"]}]}