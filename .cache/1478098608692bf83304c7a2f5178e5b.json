{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar commonEditorConfig_1 = require(\"vs/editor/common/config/commonEditorConfig\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar ToggleTabFocusModeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleTabFocusModeAction, _super);\n    function ToggleTabFocusModeAction() {\n        return _super.call(this, {\n            id: ToggleTabFocusModeAction.ID,\n            label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\n            alias: 'Toggle Tab Key Moves Focus',\n            precondition: null,\n            kbOpts: {\n                kbExpr: null,\n                primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_M,\n                mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_M },\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    ToggleTabFocusModeAction.prototype.run = function (accessor, editor) {\n        var oldValue = commonEditorConfig_1.TabFocus.getTabFocusMode();\n        var newValue = !oldValue;\n        commonEditorConfig_1.TabFocus.setTabFocusMode(newValue);\n        if (newValue) {\n            aria_1.alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n        }\n        else {\n            aria_1.alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n        }\n    };\n    ToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\n    return ToggleTabFocusModeAction;\n}(editorExtensions_1.EditorAction));\nexports.ToggleTabFocusModeAction = ToggleTabFocusModeAction;\neditorExtensions_1.registerEditorAction(ToggleTabFocusModeAction);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4BAA8B;AAC9B,qDAAqD;AACrD,oDAA0D;AAE1D,uEAA0G;AAC1G,iFAAsE;AACtE,yFAAqF;AAErF;IAA8C,oDAAY;IAIzD;eACC,kBAAM;YACL,EAAE,EAAE,wBAAwB,CAAC,EAAE;YAC/B,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,sBAAsB,EAAE,OAAO,EAAE,CAAC,4DAA4D,CAAC,EAAE,EAAE,4BAA4B,CAAC;YAC3J,KAAK,EAAE,4BAA4B;YACnC,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE;gBACP,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,kBAAO,CAAC,KAAK;gBACvC,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,KAAK,GAAG,kBAAO,CAAC,KAAK,EAAE;gBAC/D,MAAM,EAAE,sCAAgB,CAAC,aAAa;aACtC;SACD,CAAC;IACH,CAAC;IAEM,sCAAG,GAAV,UAAW,QAA0B,EAAE,MAAmB;QACzD,IAAM,QAAQ,GAAG,6BAAQ,CAAC,eAAe,EAAE,CAAC;QAC5C,IAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC;QAC3B,6BAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,QAAQ,EAAE;YACb,YAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,yBAAyB,EAAE,gEAAgE,CAAC,CAAC,CAAC;SACjH;aAAM;YACN,YAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,gDAAgD,CAAC,CAAC,CAAC;SAClG;IACF,CAAC;IA1BsB,2BAAE,GAAG,kCAAkC,CAAC;IA2BhE,+BAAC;CAAA,AA7BD,CAA8C,+BAAY,GA6BzD;AA7BY,4DAAwB;AA+BrC,uCAAoB,CAAC,wBAAwB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { TabFocus } from 'vs/editor/common/config/commonEditorConfig';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nexport class ToggleTabFocusModeAction extends EditorAction {\n\n\tpublic static readonly ID = 'editor.action.toggleTabFocusMode';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleTabFocusModeAction.ID,\n\t\t\tlabel: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\n\t\t\talias: 'Toggle Tab Key Moves Focus',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_M,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_M },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst oldValue = TabFocus.getTabFocusMode();\n\t\tconst newValue = !oldValue;\n\t\tTabFocus.setTabFocusMode(newValue);\n\t\tif (newValue) {\n\t\t\talert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n\t\t} else {\n\t\t\talert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n\t\t}\n\t}\n}\n\nregisterEditorAction(ToggleTabFocusModeAction);\n"]}]}