{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/replaceService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/replaceService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar errors = require(\"vs/base/common/errors\");\nvar network = require(\"vs/base/common/network\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar replace_1 = require(\"vs/workbench/contrib/search/common/replace\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar searchModel_1 = require(\"vs/workbench/contrib/search/common/searchModel\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar bulkEditService_1 = require(\"vs/editor/browser/services/bulkEditService\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editOperation_1 = require(\"vs/editor/common/core/editOperation\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar REPLACE_PREVIEW = 'replacePreview';\nvar toReplaceResource = function (fileResource) {\n    return fileResource.with({ scheme: network.Schemas.internal, fragment: REPLACE_PREVIEW, query: JSON.stringify({ scheme: fileResource.scheme }) });\n};\nvar toFileResource = function (replaceResource) {\n    return replaceResource.with({ scheme: JSON.parse(replaceResource.query)['scheme'], fragment: '', query: '' });\n};\nvar ReplacePreviewContentProvider = /** @class */ (function () {\n    function ReplacePreviewContentProvider(instantiationService, textModelResolverService) {\n        this.instantiationService = instantiationService;\n        this.textModelResolverService = textModelResolverService;\n        this.textModelResolverService.registerTextModelContentProvider(network.Schemas.internal, this);\n    }\n    ReplacePreviewContentProvider.prototype.provideTextContent = function (uri) {\n        if (uri.fragment === REPLACE_PREVIEW) {\n            return this.instantiationService.createInstance(ReplacePreviewModel).resolve(uri);\n        }\n        return null;\n    };\n    ReplacePreviewContentProvider = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService),\n        tslib_1.__param(1, resolverService_1.ITextModelService)\n    ], ReplacePreviewContentProvider);\n    return ReplacePreviewContentProvider;\n}());\nexports.ReplacePreviewContentProvider = ReplacePreviewContentProvider;\nvar ReplacePreviewModel = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplacePreviewModel, _super);\n    function ReplacePreviewModel(modelService, modeService, textModelResolverService, replaceService, searchWorkbenchService) {\n        var _this = _super.call(this) || this;\n        _this.modelService = modelService;\n        _this.modeService = modeService;\n        _this.textModelResolverService = textModelResolverService;\n        _this.replaceService = replaceService;\n        _this.searchWorkbenchService = searchWorkbenchService;\n        return _this;\n    }\n    ReplacePreviewModel.prototype.resolve = function (replacePreviewUri) {\n        var _this = this;\n        var fileResource = toFileResource(replacePreviewUri);\n        var fileMatch = this.searchWorkbenchService.searchModel.searchResult.matches().filter(function (match) { return match.resource().toString() === fileResource.toString(); })[0];\n        return this.textModelResolverService.createModelReference(fileResource).then(function (ref) {\n            ref = _this._register(ref);\n            var sourceModel = ref.object.textEditorModel;\n            var sourceModelModeId = sourceModel.getLanguageIdentifier().language;\n            var replacePreviewModel = _this.modelService.createModel(textModel_1.createTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()), _this.modeService.create(sourceModelModeId), replacePreviewUri);\n            _this._register(fileMatch.onChange(function (modelChange) { return _this.update(sourceModel, replacePreviewModel, fileMatch, modelChange); }));\n            _this._register(_this.searchWorkbenchService.searchModel.onReplaceTermChanged(function () { return _this.update(sourceModel, replacePreviewModel, fileMatch); }));\n            _this._register(fileMatch.onDispose(function () { return replacePreviewModel.dispose(); })); // TODO@Sandeep we should not dispose a model directly but rather the reference (depends on https://github.com/Microsoft/vscode/issues/17073)\n            _this._register(replacePreviewModel.onWillDispose(function () { return _this.dispose(); }));\n            _this._register(sourceModel.onWillDispose(function () { return _this.dispose(); }));\n            return replacePreviewModel;\n        });\n    };\n    ReplacePreviewModel.prototype.update = function (sourceModel, replacePreviewModel, fileMatch, override) {\n        if (override === void 0) { override = false; }\n        if (!sourceModel.isDisposed() && !replacePreviewModel.isDisposed()) {\n            this.replaceService.updateReplacePreview(fileMatch, override);\n        }\n    };\n    ReplacePreviewModel = tslib_1.__decorate([\n        tslib_1.__param(0, modelService_1.IModelService),\n        tslib_1.__param(1, modeService_1.IModeService),\n        tslib_1.__param(2, resolverService_1.ITextModelService),\n        tslib_1.__param(3, replace_1.IReplaceService),\n        tslib_1.__param(4, searchModel_1.ISearchWorkbenchService)\n    ], ReplacePreviewModel);\n    return ReplacePreviewModel;\n}(lifecycle_1.Disposable));\nvar ReplaceService = /** @class */ (function () {\n    function ReplaceService(textFileService, editorService, textModelResolverService, bulkEditorService) {\n        this.textFileService = textFileService;\n        this.editorService = editorService;\n        this.textModelResolverService = textModelResolverService;\n        this.bulkEditorService = bulkEditorService;\n    }\n    ReplaceService.prototype.replace = function (arg, progress, resource) {\n        var _this = this;\n        if (progress === void 0) { progress = undefined; }\n        if (resource === void 0) { resource = null; }\n        var edits = this.createEdits(arg, resource);\n        return this.bulkEditorService.apply({ edits: edits }, { progress: progress }).then(function () { return _this.textFileService.saveAll(edits.map(function (e) { return e.resource; })); });\n    };\n    ReplaceService.prototype.openReplacePreview = function (element, preserveFocus, sideBySide, pinned) {\n        var _this = this;\n        var fileMatch = element instanceof searchModel_1.Match ? element.parent() : element;\n        return this.editorService.openEditor({\n            leftResource: fileMatch.resource(),\n            rightResource: toReplaceResource(fileMatch.resource()),\n            label: nls.localize('fileReplaceChanges', \"{0} â†” {1} (Replace Preview)\", fileMatch.name(), fileMatch.name()),\n            options: {\n                preserveFocus: preserveFocus,\n                pinned: pinned,\n                revealIfVisible: true\n            }\n        }).then(function (editor) {\n            var disposable = fileMatch.onDispose(function () {\n                if (editor && editor.input) {\n                    editor.input.dispose();\n                }\n                disposable.dispose();\n            });\n            _this.updateReplacePreview(fileMatch).then(function () {\n                if (editor) {\n                    var editorControl = editor.getControl();\n                    if (element instanceof searchModel_1.Match) {\n                        editorControl.revealLineInCenter(element.range().startLineNumber, editorCommon_1.ScrollType.Immediate);\n                    }\n                }\n            });\n        }, errors.onUnexpectedError);\n    };\n    ReplaceService.prototype.updateReplacePreview = function (fileMatch, override) {\n        var _this = this;\n        if (override === void 0) { override = false; }\n        var replacePreviewUri = toReplaceResource(fileMatch.resource());\n        return Promise.all([this.textModelResolverService.createModelReference(fileMatch.resource()), this.textModelResolverService.createModelReference(replacePreviewUri)])\n            .then(function (_a) {\n            var sourceModelRef = _a[0], replaceModelRef = _a[1];\n            var sourceModel = sourceModelRef.object.textEditorModel;\n            var replaceModel = replaceModelRef.object.textEditorModel;\n            var returnValue = Promise.resolve(null);\n            // If model is disposed do not update\n            if (sourceModel && replaceModel) {\n                if (override) {\n                    replaceModel.setValue(sourceModel.getValue());\n                }\n                else {\n                    replaceModel.undo();\n                }\n                _this.applyEditsToPreview(fileMatch, replaceModel);\n            }\n            return returnValue.then(function () {\n                sourceModelRef.dispose();\n                replaceModelRef.dispose();\n            });\n        });\n    };\n    ReplaceService.prototype.applyEditsToPreview = function (fileMatch, replaceModel) {\n        var resourceEdits = this.createEdits(fileMatch, replaceModel.uri);\n        var modelEdits = [];\n        for (var _i = 0, resourceEdits_1 = resourceEdits; _i < resourceEdits_1.length; _i++) {\n            var resourceEdit = resourceEdits_1[_i];\n            for (var _a = 0, _b = resourceEdit.edits; _a < _b.length; _a++) {\n                var edit = _b[_a];\n                var range = range_1.Range.lift(edit.range);\n                modelEdits.push(editOperation_1.EditOperation.replaceMove(range, edit.text));\n            }\n        }\n        replaceModel.pushEditOperations([], arrays_1.mergeSort(modelEdits, function (a, b) { return range_1.Range.compareRangesUsingStarts(a.range, b.range); }), function () { return []; });\n    };\n    ReplaceService.prototype.createEdits = function (arg, resource) {\n        var _this = this;\n        if (resource === void 0) { resource = null; }\n        var edits = [];\n        if (arg instanceof searchModel_1.Match) {\n            var match = arg;\n            edits.push(this.createEdit(match, match.replaceString, resource));\n        }\n        if (arg instanceof searchModel_1.FileMatch) {\n            arg = [arg];\n        }\n        if (arg instanceof Array) {\n            arg.forEach(function (element) {\n                var fileMatch = element;\n                if (fileMatch.count() > 0) {\n                    edits.push.apply(edits, fileMatch.matches().map(function (match) { return _this.createEdit(match, match.replaceString, resource); }));\n                }\n            });\n        }\n        return edits;\n    };\n    ReplaceService.prototype.createEdit = function (match, text, resource) {\n        if (resource === void 0) { resource = null; }\n        var fileMatch = match.parent();\n        var resourceEdit = {\n            resource: resource !== null ? resource : fileMatch.resource(),\n            edits: [{\n                    range: match.range(),\n                    text: text\n                }]\n        };\n        return resourceEdit;\n    };\n    ReplaceService = tslib_1.__decorate([\n        tslib_1.__param(0, textfiles_1.ITextFileService),\n        tslib_1.__param(1, editorService_1.IEditorService),\n        tslib_1.__param(2, resolverService_1.ITextModelService),\n        tslib_1.__param(3, bulkEditService_1.IBulkEditService)\n    ], ReplaceService);\n    return ReplaceService;\n}());\nexports.ReplaceService = ReplaceService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/replaceService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/replaceService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as errors from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport * as network from 'vs/base/common/network';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IReplaceService } from 'vs/workbench/contrib/search/common/replace';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { Match, FileMatch, FileMatchOrMatch, ISearchWorkbenchService } from 'vs/workbench/contrib/search/common/searchModel';\nimport { IProgressRunner } from 'vs/platform/progress/common/progress';\nimport { ITextModelService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel, IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ResourceTextEdit } from 'vs/editor/common/modes';\nimport { createTextBufferFactoryFromSnapshot } from 'vs/editor/common/model/textModel';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { mergeSort } from 'vs/base/common/arrays';\n\nconst REPLACE_PREVIEW = 'replacePreview';\n\nconst toReplaceResource = (fileResource: URI): URI => {\n\treturn fileResource.with({ scheme: network.Schemas.internal, fragment: REPLACE_PREVIEW, query: JSON.stringify({ scheme: fileResource.scheme }) });\n};\n\nconst toFileResource = (replaceResource: URI): URI => {\n\treturn replaceResource.with({ scheme: JSON.parse(replaceResource.query)['scheme'], fragment: '', query: '' });\n};\n\nexport class ReplacePreviewContentProvider implements ITextModelContentProvider, IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(network.Schemas.internal, this);\n\t}\n\n\tprovideTextContent(uri: URI): Promise<ITextModel> | null {\n\t\tif (uri.fragment === REPLACE_PREVIEW) {\n\t\t\treturn this.instantiationService.createInstance(ReplacePreviewModel).resolve(uri);\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ReplacePreviewModel extends Disposable {\n\tconstructor(\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@ISearchWorkbenchService private readonly searchWorkbenchService: ISearchWorkbenchService\n\t) {\n\t\tsuper();\n\t}\n\n\tresolve(replacePreviewUri: URI): Promise<ITextModel> {\n\t\tconst fileResource = toFileResource(replacePreviewUri);\n\t\tconst fileMatch = <FileMatch>this.searchWorkbenchService.searchModel.searchResult.matches().filter(match => match.resource().toString() === fileResource.toString())[0];\n\t\treturn this.textModelResolverService.createModelReference(fileResource).then(ref => {\n\t\t\tref = this._register(ref);\n\t\t\tconst sourceModel = ref.object.textEditorModel;\n\t\t\tconst sourceModelModeId = sourceModel.getLanguageIdentifier().language;\n\t\t\tconst replacePreviewModel = this.modelService.createModel(createTextBufferFactoryFromSnapshot(sourceModel.createSnapshot()), this.modeService.create(sourceModelModeId), replacePreviewUri);\n\t\t\tthis._register(fileMatch.onChange(modelChange => this.update(sourceModel, replacePreviewModel, fileMatch, modelChange)));\n\t\t\tthis._register(this.searchWorkbenchService.searchModel.onReplaceTermChanged(() => this.update(sourceModel, replacePreviewModel, fileMatch)));\n\t\t\tthis._register(fileMatch.onDispose(() => replacePreviewModel.dispose())); // TODO@Sandeep we should not dispose a model directly but rather the reference (depends on https://github.com/Microsoft/vscode/issues/17073)\n\t\t\tthis._register(replacePreviewModel.onWillDispose(() => this.dispose()));\n\t\t\tthis._register(sourceModel.onWillDispose(() => this.dispose()));\n\t\t\treturn replacePreviewModel;\n\t\t});\n\t}\n\n\tprivate update(sourceModel: ITextModel, replacePreviewModel: ITextModel, fileMatch: FileMatch, override: boolean = false): void {\n\t\tif (!sourceModel.isDisposed() && !replacePreviewModel.isDisposed()) {\n\t\t\tthis.replaceService.updateReplacePreview(fileMatch, override);\n\t\t}\n\t}\n}\n\nexport class ReplaceService implements IReplaceService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IBulkEditService private readonly bulkEditorService: IBulkEditService\n\t) { }\n\n\treplace(match: Match): Promise<any>;\n\treplace(files: FileMatch[], progress?: IProgressRunner): Promise<any>;\n\treplace(match: FileMatchOrMatch, progress?: IProgressRunner, resource?: URI): Promise<any>;\n\treplace(arg: any, progress: IProgressRunner | undefined = undefined, resource: URI | null = null): Promise<any> {\n\n\t\tconst edits: ResourceTextEdit[] = this.createEdits(arg, resource);\n\t\treturn this.bulkEditorService.apply({ edits }, { progress }).then(() => this.textFileService.saveAll(edits.map(e => e.resource)));\n\n\t}\n\n\topenReplacePreview(element: FileMatchOrMatch, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<any> {\n\t\tconst fileMatch = element instanceof Match ? element.parent() : element;\n\n\t\treturn this.editorService.openEditor({\n\t\t\tleftResource: fileMatch.resource(),\n\t\t\trightResource: toReplaceResource(fileMatch.resource()),\n\t\t\tlabel: nls.localize('fileReplaceChanges', \"{0} â†” {1} (Replace Preview)\", fileMatch.name(), fileMatch.name()),\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tpinned,\n\t\t\t\trevealIfVisible: true\n\t\t\t}\n\t\t}).then(editor => {\n\t\t\tconst disposable = fileMatch.onDispose(() => {\n\t\t\t\tif (editor && editor.input) {\n\t\t\t\t\teditor.input.dispose();\n\t\t\t\t}\n\t\t\t\tdisposable.dispose();\n\t\t\t});\n\t\t\tthis.updateReplacePreview(fileMatch).then(() => {\n\t\t\t\tif (editor) {\n\t\t\t\t\tconst editorControl = editor.getControl();\n\t\t\t\t\tif (element instanceof Match) {\n\t\t\t\t\t\teditorControl.revealLineInCenter(element.range().startLineNumber, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, errors.onUnexpectedError);\n\t}\n\n\tupdateReplacePreview(fileMatch: FileMatch, override: boolean = false): Promise<void> {\n\t\tconst replacePreviewUri = toReplaceResource(fileMatch.resource());\n\t\treturn Promise.all([this.textModelResolverService.createModelReference(fileMatch.resource()), this.textModelResolverService.createModelReference(replacePreviewUri)])\n\t\t\t.then(([sourceModelRef, replaceModelRef]) => {\n\t\t\t\tconst sourceModel = sourceModelRef.object.textEditorModel;\n\t\t\t\tconst replaceModel = replaceModelRef.object.textEditorModel;\n\t\t\t\tconst returnValue = Promise.resolve(null);\n\t\t\t\t// If model is disposed do not update\n\t\t\t\tif (sourceModel && replaceModel) {\n\t\t\t\t\tif (override) {\n\t\t\t\t\t\treplaceModel.setValue(sourceModel.getValue());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treplaceModel.undo();\n\t\t\t\t\t}\n\t\t\t\t\tthis.applyEditsToPreview(fileMatch, replaceModel);\n\t\t\t\t}\n\t\t\t\treturn returnValue.then(() => {\n\t\t\t\t\tsourceModelRef.dispose();\n\t\t\t\t\treplaceModelRef.dispose();\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate applyEditsToPreview(fileMatch: FileMatch, replaceModel: ITextModel): void {\n\t\tconst resourceEdits = this.createEdits(fileMatch, replaceModel.uri);\n\t\tconst modelEdits: IIdentifiedSingleEditOperation[] = [];\n\t\tfor (const resourceEdit of resourceEdits) {\n\t\t\tfor (const edit of resourceEdit.edits) {\n\t\t\t\tconst range = Range.lift(edit.range);\n\t\t\t\tmodelEdits.push(EditOperation.replaceMove(range, edit.text));\n\t\t\t}\n\t\t}\n\t\treplaceModel.pushEditOperations([], mergeSort(modelEdits, (a, b) => Range.compareRangesUsingStarts(a.range, b.range)), () => []);\n\t}\n\n\tprivate createEdits(arg: FileMatchOrMatch | FileMatch[], resource: URI | null = null): ResourceTextEdit[] {\n\t\tconst edits: ResourceTextEdit[] = [];\n\n\t\tif (arg instanceof Match) {\n\t\t\tconst match = <Match>arg;\n\t\t\tedits.push(this.createEdit(match, match.replaceString, resource));\n\t\t}\n\n\t\tif (arg instanceof FileMatch) {\n\t\t\targ = [arg];\n\t\t}\n\n\t\tif (arg instanceof Array) {\n\t\t\targ.forEach(element => {\n\t\t\t\tconst fileMatch = <FileMatch>element;\n\t\t\t\tif (fileMatch.count() > 0) {\n\t\t\t\t\tedits.push(...fileMatch.matches().map(match => this.createEdit(match, match.replaceString, resource)));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn edits;\n\t}\n\n\tprivate createEdit(match: Match, text: string, resource: URI | null = null): ResourceTextEdit {\n\t\tconst fileMatch: FileMatch = match.parent();\n\t\tconst resourceEdit: ResourceTextEdit = {\n\t\t\tresource: resource !== null ? resource : fileMatch.resource(),\n\t\t\tedits: [{\n\t\t\t\trange: match.range(),\n\t\t\t\ttext: text\n\t\t\t}]\n\t\t};\n\t\treturn resourceEdit;\n\t}\n}\n"]}]}