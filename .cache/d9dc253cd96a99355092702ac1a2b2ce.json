{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugActionItems.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugActionItems.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar dom = require(\"vs/base/browser/dom\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar selectBox_1 = require(\"vs/base/browser/ui/selectBox/selectBox\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar $ = dom.$;\nvar StartDebugActionItem = /** @class */ (function () {\n    function StartDebugActionItem(context, action, debugService, themeService, configurationService, commandService, contextService, contextViewService) {\n        this.context = context;\n        this.action = action;\n        this.debugService = debugService;\n        this.themeService = themeService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.contextService = contextService;\n        this.toDispose = [];\n        this.selectBox = new selectBox_1.SelectBox([], -1, contextViewService, undefined, { ariaLabel: nls.localize('debugLaunchConfigurations', 'Debug Launch Configurations') });\n        this.toDispose.push(this.selectBox);\n        this.toDispose.push(styler_1.attachSelectBoxStyler(this.selectBox, themeService, {\n            selectBackground: theme_1.SIDE_BAR_BACKGROUND\n        }));\n        this.registerListeners();\n    }\n    StartDebugActionItem.prototype.registerListeners = function () {\n        var _this = this;\n        this.toDispose.push(this.configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('launch')) {\n                _this.updateOptions();\n            }\n        }));\n        this.toDispose.push(this.debugService.getConfigurationManager().onDidSelectConfiguration(function () {\n            _this.updateOptions();\n        }));\n    };\n    StartDebugActionItem.prototype.render = function (container) {\n        var _this = this;\n        this.container = container;\n        dom.addClass(container, 'start-debug-action-item');\n        this.start = dom.append(container, $('.icon'));\n        this.start.title = this.action.label;\n        this.start.setAttribute('role', 'button');\n        this.start.tabIndex = 0;\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.CLICK, function () {\n            _this.start.blur();\n            _this.actionRunner.run(_this.action, _this.context);\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_DOWN, function (e) {\n            if (_this.action.enabled && e.button === 0) {\n                dom.addClass(_this.start, 'active');\n            }\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_UP, function () {\n            dom.removeClass(_this.start, 'active');\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_OUT, function () {\n            dom.removeClass(_this.start, 'active');\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.equals(keyCodes_1.KeyCode.Enter)) {\n                _this.actionRunner.run(_this.action, _this.context);\n            }\n            if (event.equals(keyCodes_1.KeyCode.RightArrow)) {\n                _this.selectBox.focus();\n                event.stopPropagation();\n            }\n        }));\n        this.toDispose.push(this.selectBox.onDidSelect(function (e) {\n            var target = _this.options[e.index];\n            var shouldBeSelected = target.handler ? target.handler() : false;\n            if (shouldBeSelected) {\n                _this.selected = e.index;\n            }\n            else {\n                // Some select options should not remain selected https://github.com/Microsoft/vscode/issues/31526\n                _this.selectBox.select(_this.selected);\n            }\n        }));\n        var selectBoxContainer = $('.configuration');\n        this.selectBox.render(dom.append(container, selectBoxContainer));\n        this.toDispose.push(dom.addDisposableListener(selectBoxContainer, dom.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.equals(keyCodes_1.KeyCode.LeftArrow)) {\n                _this.start.focus();\n                event.stopPropagation();\n            }\n        }));\n        this.toDispose.push(styler_1.attachStylerCallback(this.themeService, { selectBorder: colorRegistry_1.selectBorder }, function (colors) {\n            _this.container.style.border = colors.selectBorder ? \"1px solid \" + colors.selectBorder : null;\n            selectBoxContainer.style.borderLeft = colors.selectBorder ? \"1px solid \" + colors.selectBorder : null;\n        }));\n        this.updateOptions();\n    };\n    StartDebugActionItem.prototype.setActionContext = function (context) {\n        this.context = context;\n    };\n    StartDebugActionItem.prototype.isEnabled = function () {\n        return true;\n    };\n    StartDebugActionItem.prototype.focus = function (fromRight) {\n        if (fromRight) {\n            this.selectBox.focus();\n        }\n        else {\n            this.start.focus();\n        }\n    };\n    StartDebugActionItem.prototype.blur = function () {\n        this.container.blur();\n    };\n    StartDebugActionItem.prototype.dispose = function () {\n        this.toDispose = lifecycle_1.dispose(this.toDispose);\n    };\n    StartDebugActionItem.prototype.updateOptions = function () {\n        var _this = this;\n        this.selected = 0;\n        this.options = [];\n        var manager = this.debugService.getConfigurationManager();\n        var launches = manager.getLaunches();\n        var inWorkspace = this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE;\n        launches.forEach(function (launch) {\n            return launch.getConfigurationNames().forEach(function (name) {\n                if (name === manager.selectedConfiguration.name && launch === manager.selectedConfiguration.launch) {\n                    _this.selected = _this.options.length;\n                }\n                var label = inWorkspace ? name + \" (\" + launch.name + \")\" : name;\n                _this.options.push({ label: label, handler: function () { manager.selectConfiguration(launch, name); return true; } });\n            });\n        });\n        if (this.options.length === 0) {\n            this.options.push({ label: nls.localize('noConfigurations', \"No Configurations\"), handler: function () { return false; } });\n        }\n        else {\n            this.options.push({ label: StartDebugActionItem.SEPARATOR, handler: undefined });\n        }\n        var disabledIdx = this.options.length - 1;\n        launches.filter(function (l) { return !l.hidden; }).forEach(function (l) {\n            var label = inWorkspace ? nls.localize(\"addConfigTo\", \"Add Config ({0})...\", l.name) : nls.localize('addConfiguration', \"Add Configuration...\");\n            _this.options.push({\n                label: label, handler: function () {\n                    _this.commandService.executeCommand('debug.addConfiguration', l.uri.toString());\n                    return false;\n                }\n            });\n        });\n        this.selectBox.setOptions(this.options.map(function (data, index) { return ({ text: data.label, isDisabled: (index === disabledIdx ? true : undefined) }); }), this.selected);\n    };\n    StartDebugActionItem.SEPARATOR = '─────────';\n    StartDebugActionItem = tslib_1.__decorate([\n        tslib_1.__param(2, debug_1.IDebugService),\n        tslib_1.__param(3, themeService_1.IThemeService),\n        tslib_1.__param(4, configuration_1.IConfigurationService),\n        tslib_1.__param(5, commands_1.ICommandService),\n        tslib_1.__param(6, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(7, contextView_1.IContextViewService)\n    ], StartDebugActionItem);\n    return StartDebugActionItem;\n}());\nexports.StartDebugActionItem = StartDebugActionItem;\nvar FocusSessionActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusSessionActionItem, _super);\n    function FocusSessionActionItem(action, debugService, themeService, contextViewService) {\n        var _this = _super.call(this, null, action, [], -1, contextViewService, { ariaLabel: nls.localize('debugSession', 'Debug Session') }) || this;\n        _this.debugService = debugService;\n        _this.toDispose.push(styler_1.attachSelectBoxStyler(_this.selectBox, themeService));\n        _this.toDispose.push(_this.debugService.getViewModel().onDidFocusSession(function () {\n            var session = _this.debugService.getViewModel().focusedSession;\n            if (session) {\n                var index = _this.getSessions().indexOf(session);\n                _this.select(index);\n            }\n        }));\n        _this.toDispose.push(_this.debugService.onDidNewSession(function () { return _this.update(); }));\n        _this.toDispose.push(_this.debugService.onDidEndSession(function () { return _this.update(); }));\n        _this.update();\n        return _this;\n    }\n    FocusSessionActionItem.prototype.getActionContext = function (_, index) {\n        return this.debugService.getModel().getSessions()[index];\n    };\n    FocusSessionActionItem.prototype.update = function () {\n        var session = this.debugService.getViewModel().focusedSession;\n        var sessions = this.getSessions();\n        var names = sessions.map(function (s) {\n            var label = s.getLabel();\n            if (s.parentSession) {\n                // Indent child sessions so they look like children\n                return \"\\u00A0\\u00A0\" + label;\n            }\n            return label;\n        });\n        this.setOptions(names.map(function (data) { return ({ text: data }); }), session ? sessions.indexOf(session) : undefined);\n    };\n    FocusSessionActionItem.prototype.getSessions = function () {\n        return this.debugService.getModel().getSessions();\n    };\n    FocusSessionActionItem = tslib_1.__decorate([\n        tslib_1.__param(1, debug_1.IDebugService),\n        tslib_1.__param(2, themeService_1.IThemeService),\n        tslib_1.__param(3, contextView_1.IContextViewService)\n    ], FocusSessionActionItem);\n    return FocusSessionActionItem;\n}(actionbar_1.SelectActionItem));\nexports.FocusSessionActionItem = FocusSessionActionItem;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugActionItems.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugActionItems.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4BAA8B;AAE9B,oDAAkD;AAClD,yCAA2C;AAC3C,+DAAsE;AACtE,oEAAsF;AACtF,oEAAuF;AACvF,gFAAuF;AACvF,iEAAuE;AACvE,iEAAuF;AACvF,sEAAsE;AACtE,0DAA8F;AAC9F,mDAAgE;AAChE,wEAAsE;AACtE,2EAAkF;AAClF,oEAAkG;AAClG,sDAAgE;AAEhE,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAEhB;IAYC,8BACS,OAAY,EACZ,MAAe,EACS,YAA2B,EAC3B,YAA2B,EACnB,oBAA2C,EACjD,cAA+B,EACtB,cAAwC,EAC9D,kBAAuC;QAPpD,YAAO,GAAP,OAAO,CAAK;QACZ,WAAM,GAAN,MAAM,CAAS;QACS,iBAAY,GAAZ,YAAY,CAAe;QAC3B,iBAAY,GAAZ,YAAY,CAAe;QACnB,yBAAoB,GAApB,oBAAoB,CAAuB;QACjD,mBAAc,GAAd,cAAc,CAAiB;QACtB,mBAAc,GAAd,cAAc,CAA0B;QAGnF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,kBAAkB,EAAE,SAAS,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,2BAA2B,EAAE,6BAA6B,CAAC,EAAE,CAAC,CAAC;QAC/J,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE;YACvE,gBAAgB,EAAE,2BAAmB;SACrC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEO,gDAAiB,GAAzB;QAAA,iBASC;QARA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,UAAA,CAAC;YACvE,IAAI,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE;gBACrC,KAAI,CAAC,aAAa,EAAE,CAAC;aACrB;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC,wBAAwB,CAAC;YACxF,KAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,qCAAM,GAAb,UAAc,SAAsB;QAApC,iBA6DC;QA5DA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE;YAC9E,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,CAAa;YACjG,IAAI,KAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1C,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACnC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE;YACjF,GAAG,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE;YAClF,GAAG,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAgB;YAClG,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,KAAK,CAAC,EAAE;gBAChC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;aACjD;YACD,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,UAAU,CAAC,EAAE;gBACrC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;aACxB;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAA,CAAC;YAC/C,IAAM,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACrC,IAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACnE,IAAI,gBAAgB,EAAE;gBACrB,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;aACxB;iBAAM;gBACN,kGAAkG;gBAClG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;aACrC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAM,kBAAkB,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAgB;YAC1G,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,EAAE;gBACpC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACnB,KAAK,CAAC,eAAe,EAAE,CAAC;aACxB;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,6BAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,YAAY,8BAAA,EAAE,EAAE,UAAA,MAAM;YACnF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,eAAa,MAAM,CAAC,YAAc,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9F,kBAAkB,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,eAAa,MAAM,CAAC,YAAc,CAAC,CAAC,CAAC,IAAI,CAAC;QACvG,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,aAAa,EAAE,CAAC;IACtB,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,OAAY;QACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEM,wCAAS,GAAhB;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,oCAAK,GAAZ,UAAa,SAAmB;QAC/B,IAAI,SAAS,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACvB;aAAM;YACN,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACnB;IACF,CAAC;IAEM,mCAAI,GAAX;QACC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,sCAAO,GAAd;QACC,IAAI,CAAC,SAAS,GAAG,mBAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAEO,4CAAa,GAArB;QAAA,iBAiCC;QAhCA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;QAC5D,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACvC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,0BAAc,CAAC,SAAS,CAAC;QACzF,QAAQ,CAAC,OAAO,CAAC,UAAA,MAAM;YACtB,OAAA,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,CAAC,UAAA,IAAI;gBAC1C,IAAI,IAAI,KAAK,OAAO,CAAC,qBAAqB,CAAC,IAAI,IAAI,MAAM,KAAK,OAAO,CAAC,qBAAqB,CAAC,MAAM,EAAE;oBACnG,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC;iBACpC;gBACD,IAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAI,IAAI,UAAK,MAAM,CAAC,IAAI,MAAG,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC9D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,EAAE,cAAQ,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC1G,CAAC,CAAC;QANF,CAME,CAAC,CAAC;QAEL,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,EAAE,OAAO,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK,EAAE,CAAC,CAAC;SAC1G;aAAM;YACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,oBAAoB,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;SACjF;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,MAAM,EAAT,CAAS,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;YACxC,IAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,qBAAqB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;YAClJ,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACjB,KAAK,OAAA,EAAE,OAAO,EAAE;oBACf,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,wBAAwB,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAC/E,OAAO,KAAK,CAAC;gBACd,CAAC;aACD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAA,EAA/F,CAA+F,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9K,CAAC;IAjKuB,8BAAS,GAAG,WAAW,CAAC;IAFpC,oBAAoB;QAe9B,mBAAA,qBAAa,CAAA;QACb,mBAAA,4BAAa,CAAA;QACb,mBAAA,qCAAqB,CAAA;QACrB,mBAAA,0BAAe,CAAA;QACf,mBAAA,oCAAwB,CAAA;QACxB,mBAAA,iCAAmB,CAAA;OApBT,oBAAoB,CAoKhC;IAAD,2BAAC;CAAA,AApKD,IAoKC;AApKY,oDAAoB;AAsKjC;IAA4C,kDAAgB;IAC3D,gCACC,MAAe,EACU,YAA2B,EACrC,YAA2B,EACrB,kBAAuC;QAJ7D,YAMC,kBAAM,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,kBAAkB,EAAE,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC,EAAE,CAAC,SAgB7G;QApByB,kBAAY,GAAZ,YAAY,CAAe;QAMpD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,8BAAqB,CAAC,KAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;QAEzE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC;YACtE,IAAM,OAAO,GAAG,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC;YAChE,IAAI,OAAO,EAAE;gBACZ,IAAM,KAAK,GAAG,KAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAClD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACnB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC,CAAC;QAC5E,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC,CAAC;QAE5E,KAAI,CAAC,MAAM,EAAE,CAAC;;IACf,CAAC;IAES,iDAAgB,GAA1B,UAA2B,CAAS,EAAE,KAAa;QAClD,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEO,uCAAM,GAAd;QACC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC;QAChE,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC;YAC3B,IAAM,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,aAAa,EAAE;gBACpB,mDAAmD;gBACnD,OAAO,iBAAe,KAAO,CAAC;aAC9B;YAED,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,CAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAA,EAAjC,CAAiC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACxH,CAAC;IAES,4CAAW,GAArB;QACC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;IACnD,CAAC;IA9CW,sBAAsB;QAGhC,mBAAA,qBAAa,CAAA;QACb,mBAAA,4BAAa,CAAA;QACb,mBAAA,iCAAmB,CAAA;OALT,sBAAsB,CA+ClC;IAAD,6BAAC;CAAA,AA/CD,CAA4C,4BAAgB,GA+C3D;AA/CY,wDAAsB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IAction, IActionRunner } from 'vs/base/common/actions';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { SelectBox, ISelectOptionItem } from 'vs/base/browser/ui/selectBox/selectBox';\nimport { SelectActionItem, IActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IDebugService, IDebugSession } from 'vs/workbench/contrib/debug/common/debug';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachSelectBoxStyler, attachStylerCallback } from 'vs/platform/theme/common/styler';\nimport { SIDE_BAR_BACKGROUND } from 'vs/workbench/common/theme';\nimport { selectBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nconst $ = dom.$;\n\nexport class StartDebugActionItem implements IActionItem {\n\n\tprivate static readonly SEPARATOR = '─────────';\n\n\tpublic actionRunner: IActionRunner;\n\tprivate container: HTMLElement;\n\tprivate start: HTMLElement;\n\tprivate selectBox: SelectBox;\n\tprivate options: { label: string, handler?: (() => boolean) }[];\n\tprivate toDispose: IDisposable[];\n\tprivate selected: number;\n\n\tconstructor(\n\t\tprivate context: any,\n\t\tprivate action: IAction,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t) {\n\t\tthis.toDispose = [];\n\t\tthis.selectBox = new SelectBox([], -1, contextViewService, undefined, { ariaLabel: nls.localize('debugLaunchConfigurations', 'Debug Launch Configurations') });\n\t\tthis.toDispose.push(this.selectBox);\n\t\tthis.toDispose.push(attachSelectBoxStyler(this.selectBox, themeService, {\n\t\t\tselectBackground: SIDE_BAR_BACKGROUND\n\t\t}));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('launch')) {\n\t\t\t\tthis.updateOptions();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.getConfigurationManager().onDidSelectConfiguration(() => {\n\t\t\tthis.updateOptions();\n\t\t}));\n\t}\n\n\tpublic render(container: HTMLElement): void {\n\t\tthis.container = container;\n\t\tdom.addClass(container, 'start-debug-action-item');\n\t\tthis.start = dom.append(container, $('.icon'));\n\t\tthis.start.title = this.action.label;\n\t\tthis.start.setAttribute('role', 'button');\n\t\tthis.start.tabIndex = 0;\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.CLICK, () => {\n\t\t\tthis.start.blur();\n\t\t\tthis.actionRunner.run(this.action, this.context);\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_DOWN, (e: MouseEvent) => {\n\t\t\tif (this.action.enabled && e.button === 0) {\n\t\t\t\tdom.addClass(this.start, 'active');\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_UP, () => {\n\t\t\tdom.removeClass(this.start, 'active');\n\t\t}));\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.MOUSE_OUT, () => {\n\t\t\tdom.removeClass(this.start, 'active');\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.start, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Enter)) {\n\t\t\t\tthis.actionRunner.run(this.action, this.context);\n\t\t\t}\n\t\t\tif (event.equals(KeyCode.RightArrow)) {\n\t\t\t\tthis.selectBox.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.selectBox.onDidSelect(e => {\n\t\t\tconst target = this.options[e.index];\n\t\t\tconst shouldBeSelected = target.handler ? target.handler() : false;\n\t\t\tif (shouldBeSelected) {\n\t\t\t\tthis.selected = e.index;\n\t\t\t} else {\n\t\t\t\t// Some select options should not remain selected https://github.com/Microsoft/vscode/issues/31526\n\t\t\t\tthis.selectBox.select(this.selected);\n\t\t\t}\n\t\t}));\n\n\t\tconst selectBoxContainer = $('.configuration');\n\t\tthis.selectBox.render(dom.append(container, selectBoxContainer));\n\t\tthis.toDispose.push(dom.addDisposableListener(selectBoxContainer, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\tthis.start.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(attachStylerCallback(this.themeService, { selectBorder }, colors => {\n\t\t\tthis.container.style.border = colors.selectBorder ? `1px solid ${colors.selectBorder}` : null;\n\t\t\tselectBoxContainer.style.borderLeft = colors.selectBorder ? `1px solid ${colors.selectBorder}` : null;\n\t\t}));\n\n\t\tthis.updateOptions();\n\t}\n\n\tpublic setActionContext(context: any): void {\n\t\tthis.context = context;\n\t}\n\n\tpublic isEnabled(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic focus(fromRight?: boolean): void {\n\t\tif (fromRight) {\n\t\t\tthis.selectBox.focus();\n\t\t} else {\n\t\t\tthis.start.focus();\n\t\t}\n\t}\n\n\tpublic blur(): void {\n\t\tthis.container.blur();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = dispose(this.toDispose);\n\t}\n\n\tprivate updateOptions(): void {\n\t\tthis.selected = 0;\n\t\tthis.options = [];\n\t\tconst manager = this.debugService.getConfigurationManager();\n\t\tconst launches = manager.getLaunches();\n\t\tconst inWorkspace = this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE;\n\t\tlaunches.forEach(launch =>\n\t\t\tlaunch.getConfigurationNames().forEach(name => {\n\t\t\t\tif (name === manager.selectedConfiguration.name && launch === manager.selectedConfiguration.launch) {\n\t\t\t\t\tthis.selected = this.options.length;\n\t\t\t\t}\n\t\t\t\tconst label = inWorkspace ? `${name} (${launch.name})` : name;\n\t\t\t\tthis.options.push({ label, handler: () => { manager.selectConfiguration(launch, name); return true; } });\n\t\t\t}));\n\n\t\tif (this.options.length === 0) {\n\t\t\tthis.options.push({ label: nls.localize('noConfigurations', \"No Configurations\"), handler: () => false });\n\t\t} else {\n\t\t\tthis.options.push({ label: StartDebugActionItem.SEPARATOR, handler: undefined });\n\t\t}\n\n\t\tconst disabledIdx = this.options.length - 1;\n\t\tlaunches.filter(l => !l.hidden).forEach(l => {\n\t\t\tconst label = inWorkspace ? nls.localize(\"addConfigTo\", \"Add Config ({0})...\", l.name) : nls.localize('addConfiguration', \"Add Configuration...\");\n\t\t\tthis.options.push({\n\t\t\t\tlabel, handler: () => {\n\t\t\t\t\tthis.commandService.executeCommand('debug.addConfiguration', l.uri.toString());\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.selectBox.setOptions(this.options.map((data, index) => <ISelectOptionItem>{ text: data.label, isDisabled: (index === disabledIdx ? true : undefined) }), this.selected);\n\t}\n}\n\nexport class FocusSessionActionItem extends SelectActionItem {\n\tconstructor(\n\t\taction: IAction,\n\t\t@IDebugService protected debugService: IDebugService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t) {\n\t\tsuper(null, action, [], -1, contextViewService, { ariaLabel: nls.localize('debugSession', 'Debug Session') });\n\n\t\tthis.toDispose.push(attachSelectBoxStyler(this.selectBox, themeService));\n\n\t\tthis.toDispose.push(this.debugService.getViewModel().onDidFocusSession(() => {\n\t\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\t\tif (session) {\n\t\t\t\tconst index = this.getSessions().indexOf(session);\n\t\t\t\tthis.select(index);\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(this.debugService.onDidNewSession(() => this.update()));\n\t\tthis.toDispose.push(this.debugService.onDidEndSession(() => this.update()));\n\n\t\tthis.update();\n\t}\n\n\tprotected getActionContext(_: string, index: number): any {\n\t\treturn this.debugService.getModel().getSessions()[index];\n\t}\n\n\tprivate update() {\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst sessions = this.getSessions();\n\t\tconst names = sessions.map(s => {\n\t\t\tconst label = s.getLabel();\n\t\t\tif (s.parentSession) {\n\t\t\t\t// Indent child sessions so they look like children\n\t\t\t\treturn `\\u00A0\\u00A0${label}`;\n\t\t\t}\n\n\t\t\treturn label;\n\t\t});\n\t\tthis.setOptions(names.map(data => <ISelectOptionItem>{ text: data }), session ? sessions.indexOf(session) : undefined);\n\t}\n\n\tprotected getSessions(): ReadonlyArray<IDebugSession> {\n\t\treturn this.debugService.getModel().getSessions();\n\t}\n}\n"]}]}