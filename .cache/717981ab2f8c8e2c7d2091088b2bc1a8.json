{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/ipc/electron-browser/sharedProcessService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/ipc/electron-browser/sharedProcessService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/platform/instantiation/common/instantiation\", \"vs/base/parts/ipc/node/ipc.net\", \"vs/platform/windows/common/windows\", \"vs/platform/environment/common/environment\", \"vs/base/parts/ipc/common/ipc\"], function (require, exports, instantiation_1, ipc_net_1, windows_1, environment_1, ipc_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.ISharedProcessService = instantiation_1.createDecorator('sharedProcessService');\n    let SharedProcessService = class SharedProcessService {\n        constructor(windowsService, windowService, environmentService) {\n            this.withSharedProcessConnection = windowsService.whenSharedProcessReady()\n                .then(() => ipc_net_1.connect(environmentService.sharedIPCHandle, `window:${windowService.getCurrentWindowId()}`));\n        }\n        getChannel(channelName) {\n            return ipc_1.getDelayedChannel(this.withSharedProcessConnection.then(connection => connection.getChannel(channelName)));\n        }\n        registerChannel(channelName, channel) {\n            this.withSharedProcessConnection.then(connection => connection.registerChannel(channelName, channel));\n        }\n    };\n    SharedProcessService = __decorate([\n        __param(0, windows_1.IWindowsService),\n        __param(1, windows_1.IWindowService),\n        __param(2, environment_1.IEnvironmentService)\n    ], SharedProcessService);\n    exports.SharedProcessService = SharedProcessService;\n});\n",null]}