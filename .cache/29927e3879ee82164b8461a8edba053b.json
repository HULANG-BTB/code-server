{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/worker/defaultWorkerFactory.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/worker/defaultWorkerFactory.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"vs/base/common/platform\");\nvar simpleWorker_1 = require(\"vs/base/common/worker/simpleWorker\");\nfunction getWorker(workerId, label) {\n    // Option for hosts to overwrite the worker script (used in the standalone editor)\n    if (platform_1.globals.MonacoEnvironment) {\n        if (typeof platform_1.globals.MonacoEnvironment.getWorker === 'function') {\n            return platform_1.globals.MonacoEnvironment.getWorker(workerId, label);\n        }\n        if (typeof platform_1.globals.MonacoEnvironment.getWorkerUrl === 'function') {\n            return new Worker(platform_1.globals.MonacoEnvironment.getWorkerUrl(workerId, label));\n        }\n    }\n    // ESM-comment-begin\n    if (typeof require === 'function') {\n        // check if the JS lives on a different origin\n        var workerMain = require.toUrl('./' + workerId);\n        if (/^(http:)|(https:)|(file:)/.test(workerMain)) {\n            var currentUrl = String(window.location);\n            var currentOrigin = currentUrl.substr(0, currentUrl.length - window.location.hash.length - window.location.search.length - window.location.pathname.length);\n            if (workerMain.substring(0, currentOrigin.length) !== currentOrigin) {\n                // this is the cross-origin case\n                // i.e. the webpage is running at a different origin than where the scripts are loaded from\n                var workerBaseUrl = workerMain.substr(0, workerMain.length - 'vs/base/worker/workerMain.js'.length);\n                var js = \"/*\" + label + \"*/self.MonacoEnvironment={baseUrl: '\" + workerBaseUrl + \"'};importScripts('\" + workerMain + \"');/*\" + label + \"*/\";\n                var url = \"data:text/javascript;charset=utf-8,\" + encodeURIComponent(js);\n                return new Worker(url);\n            }\n        }\n        return new Worker(workerMain + '#' + label);\n    }\n    // ESM-comment-end\n    throw new Error(\"You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker\");\n}\nfunction isPromiseLike(obj) {\n    if (typeof obj.then === 'function') {\n        return true;\n    }\n    return false;\n}\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nvar WebWorker = /** @class */ (function () {\n    function WebWorker(moduleId, id, label, onMessageCallback, onErrorCallback) {\n        this.id = id;\n        var workerOrPromise = getWorker('workerMain.js', label);\n        if (isPromiseLike(workerOrPromise)) {\n            this.worker = workerOrPromise;\n        }\n        else {\n            this.worker = Promise.resolve(workerOrPromise);\n        }\n        this.postMessage(moduleId);\n        this.worker.then(function (w) {\n            w.onmessage = function (ev) {\n                onMessageCallback(ev.data);\n            };\n            w.onmessageerror = onErrorCallback;\n            if (typeof w.addEventListener === 'function') {\n                w.addEventListener('error', onErrorCallback);\n            }\n        });\n    }\n    WebWorker.prototype.getId = function () {\n        return this.id;\n    };\n    WebWorker.prototype.postMessage = function (msg) {\n        if (this.worker) {\n            this.worker.then(function (w) { return w.postMessage(msg); });\n        }\n    };\n    WebWorker.prototype.dispose = function () {\n        if (this.worker) {\n            this.worker.then(function (w) { return w.terminate(); });\n        }\n        this.worker = null;\n    };\n    return WebWorker;\n}());\nvar DefaultWorkerFactory = /** @class */ (function () {\n    function DefaultWorkerFactory(label) {\n        this._label = label;\n        this._webWorkerFailedBeforeError = false;\n    }\n    DefaultWorkerFactory.prototype.create = function (moduleId, onMessageCallback, onErrorCallback) {\n        var _this = this;\n        var workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n        if (this._webWorkerFailedBeforeError) {\n            throw this._webWorkerFailedBeforeError;\n        }\n        return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, function (err) {\n            simpleWorker_1.logOnceWebWorkerWarning(err);\n            _this._webWorkerFailedBeforeError = err;\n            onErrorCallback(err);\n        });\n    };\n    DefaultWorkerFactory.LAST_WORKER_ID = 0;\n    return DefaultWorkerFactory;\n}());\nexports.DefaultWorkerFactory = DefaultWorkerFactory;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/worker/defaultWorkerFactory.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/worker/defaultWorkerFactory.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,oDAAkD;AAClD,mEAAuH;AAEvH,SAAS,SAAS,CAAC,QAAgB,EAAE,KAAa;IACjD,kFAAkF;IAClF,IAAI,kBAAO,CAAC,iBAAiB,EAAE;QAC9B,IAAI,OAAO,kBAAO,CAAC,iBAAiB,CAAC,SAAS,KAAK,UAAU,EAAE;YAC9D,OAAO,kBAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC5D;QACD,IAAI,OAAO,kBAAO,CAAC,iBAAiB,CAAC,YAAY,KAAK,UAAU,EAAE;YACjE,OAAO,IAAI,MAAM,CAAC,kBAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;SAC3E;KACD;IACD,oBAAoB;IACpB,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;QAClC,8CAA8C;QAE9C,IAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;QAClD,IAAI,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACjD,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9J,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,KAAK,aAAa,EAAE;gBACpE,gCAAgC;gBAChC,2FAA2F;gBAC3F,IAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,8BAA8B,CAAC,MAAM,CAAC,CAAC;gBACtG,IAAM,EAAE,GAAG,OAAK,KAAK,4CAAuC,aAAa,0BAAqB,UAAU,aAAQ,KAAK,OAAI,CAAC;gBAC1H,IAAM,GAAG,GAAG,wCAAsC,kBAAkB,CAAC,EAAE,CAAG,CAAC;gBAC3E,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;aACvB;SACD;QACD,OAAO,IAAI,MAAM,CAAC,UAAU,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;KAC5C;IACD,kBAAkB;IAClB,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;AAC7G,CAAC;AAED,SAAS,aAAa,CAAI,GAAQ;IACjC,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;QACnC,OAAO,IAAI,CAAC;KACZ;IACD,OAAO,KAAK,CAAC;AACd,CAAC;AAED;;;GAGG;AACH;IAKC,mBAAY,QAAgB,EAAE,EAAU,EAAE,KAAa,EAAE,iBAAkC,EAAE,eAAmC;QAC/H,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAM,eAAe,GAAG,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,aAAa,CAAC,eAAe,CAAC,EAAE;YACnC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;SAC9B;aAAM;YACN,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC;YAClB,CAAC,CAAC,SAAS,GAAG,UAAU,EAAO;gBAC9B,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAC;YACI,CAAE,CAAC,cAAc,GAAG,eAAe,CAAC;YAC1C,IAAI,OAAO,CAAC,CAAC,gBAAgB,KAAK,UAAU,EAAE;gBAC7C,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;aAC7C;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,yBAAK,GAAZ;QACC,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,+BAAW,GAAlB,UAAmB,GAAW;QAC7B,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;SAC1C;IACF,CAAC;IAEM,2BAAO,GAAd;QACC,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,EAAE,EAAb,CAAa,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,CAAC;IACF,gBAAC;AAAD,CAAC,AAzCD,IAyCC;AAED;IAOC,8BAAY,KAAyB;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;IAC1C,CAAC;IAEM,qCAAM,GAAb,UAAc,QAAgB,EAAE,iBAAkC,EAAE,eAAmC;QAAvG,iBAYC;QAXA,IAAI,QAAQ,GAAG,CAAC,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACrC,MAAM,IAAI,CAAC,2BAA2B,CAAC;SACvC;QAED,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,WAAW,GAAG,QAAQ,EAAE,iBAAiB,EAAE,UAAC,GAAG;YACtG,sCAAuB,CAAC,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,2BAA2B,GAAG,GAAG,CAAC;YACvC,eAAe,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAtBc,mCAAc,GAAG,CAAC,CAAC;IAuBnC,2BAAC;CAAA,AAzBD,IAyBC;AAzBY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\nimport { IWorker, IWorkerCallback, IWorkerFactory, logOnceWebWorkerWarning } from 'vs/base/common/worker/simpleWorker';\n\nfunction getWorker(workerId: string, label: string): Worker | Promise<Worker> {\n\t// Option for hosts to overwrite the worker script (used in the standalone editor)\n\tif (globals.MonacoEnvironment) {\n\t\tif (typeof globals.MonacoEnvironment.getWorker === 'function') {\n\t\t\treturn globals.MonacoEnvironment.getWorker(workerId, label);\n\t\t}\n\t\tif (typeof globals.MonacoEnvironment.getWorkerUrl === 'function') {\n\t\t\treturn new Worker(globals.MonacoEnvironment.getWorkerUrl(workerId, label));\n\t\t}\n\t}\n\t// ESM-comment-begin\n\tif (typeof require === 'function') {\n\t\t// check if the JS lives on a different origin\n\n\t\tconst workerMain = require.toUrl('./' + workerId);\n\t\tif (/^(http:)|(https:)|(file:)/.test(workerMain)) {\n\t\t\tconst currentUrl = String(window.location);\n\t\t\tconst currentOrigin = currentUrl.substr(0, currentUrl.length - window.location.hash.length - window.location.search.length - window.location.pathname.length);\n\t\t\tif (workerMain.substring(0, currentOrigin.length) !== currentOrigin) {\n\t\t\t\t// this is the cross-origin case\n\t\t\t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n\t\t\t\tconst workerBaseUrl = workerMain.substr(0, workerMain.length - 'vs/base/worker/workerMain.js'.length);\n\t\t\t\tconst js = `/*${label}*/self.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};importScripts('${workerMain}');/*${label}*/`;\n\t\t\t\tconst url = `data:text/javascript;charset=utf-8,${encodeURIComponent(js)}`;\n\t\t\t\treturn new Worker(url);\n\t\t\t}\n\t\t}\n\t\treturn new Worker(workerMain + '#' + label);\n\t}\n\t// ESM-comment-end\n\tthrow new Error(`You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker`);\n}\n\nfunction isPromiseLike<T>(obj: any): obj is PromiseLike<T> {\n\tif (typeof obj.then === 'function') {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nclass WebWorker implements IWorker {\n\n\tprivate id: number;\n\tprivate worker: Promise<Worker> | null;\n\n\tconstructor(moduleId: string, id: number, label: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void) {\n\t\tthis.id = id;\n\t\tconst workerOrPromise = getWorker('workerMain.js', label);\n\t\tif (isPromiseLike(workerOrPromise)) {\n\t\t\tthis.worker = workerOrPromise;\n\t\t} else {\n\t\t\tthis.worker = Promise.resolve(workerOrPromise);\n\t\t}\n\t\tthis.postMessage(moduleId);\n\t\tthis.worker.then((w) => {\n\t\t\tw.onmessage = function (ev: any) {\n\t\t\t\tonMessageCallback(ev.data);\n\t\t\t};\n\t\t\t(<any>w).onmessageerror = onErrorCallback;\n\t\t\tif (typeof w.addEventListener === 'function') {\n\t\t\t\tw.addEventListener('error', onErrorCallback);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic postMessage(msg: string): void {\n\t\tif (this.worker) {\n\t\t\tthis.worker.then(w => w.postMessage(msg));\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.worker) {\n\t\t\tthis.worker.then(w => w.terminate());\n\t\t}\n\t\tthis.worker = null;\n\t}\n}\n\nexport class DefaultWorkerFactory implements IWorkerFactory {\n\n\tprivate static LAST_WORKER_ID = 0;\n\n\tprivate _label: string | undefined;\n\tprivate _webWorkerFailedBeforeError: any;\n\n\tconstructor(label: string | undefined) {\n\t\tthis._label = label;\n\t\tthis._webWorkerFailedBeforeError = false;\n\t}\n\n\tpublic create(moduleId: string, onMessageCallback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker {\n\t\tlet workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n\n\t\tif (this._webWorkerFailedBeforeError) {\n\t\t\tthrow this._webWorkerFailedBeforeError;\n\t\t}\n\n\t\treturn new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, (err) => {\n\t\t\tlogOnceWebWorkerWarning(err);\n\t\t\tthis._webWorkerFailedBeforeError = err;\n\t\t\tonErrorCallback(err);\n\t\t});\n\t}\n}\n"]}]}