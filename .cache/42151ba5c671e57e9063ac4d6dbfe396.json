{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/lifecycle\", \"vs/base/common/async\", \"vs/base/common/map\"], function (require, exports, lifecycle_1, async_1, map_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class URLService {\n        constructor() {\n            this.handlers = new Set();\n        }\n        open(uri) {\n            const handlers = map_1.values(this.handlers);\n            return async_1.first(handlers.map(h => () => h.handleURL(uri)), undefined, false).then(val => val || false);\n        }\n        registerHandler(handler) {\n            this.handlers.add(handler);\n            return lifecycle_1.toDisposable(() => this.handlers.delete(handler));\n        }\n    }\n    exports.URLService = URLService;\n});\n",null]}