{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar nls_1 = require(\"vs/nls\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar files_1 = require(\"vs/workbench/contrib/files/common/files\");\nvar ExplorerDecorationsProvider = /** @class */ (function () {\n    function ExplorerDecorationsProvider(explorerService, contextService) {\n        var _this = this;\n        this.explorerService = explorerService;\n        this.label = nls_1.localize('label', \"Explorer\");\n        this._onDidChange = new event_1.Emitter();\n        this.toDispose = [];\n        this.toDispose.push(contextService.onDidChangeWorkspaceFolders(function (e) {\n            _this._onDidChange.fire(e.changed.concat(e.added).map(function (wf) { return wf.uri; }));\n        }));\n        this.toDispose.push(explorerService.onDidChangeItem(function (item) {\n            if (item) {\n                _this._onDidChange.fire([item.resource]);\n            }\n        }));\n    }\n    Object.defineProperty(ExplorerDecorationsProvider.prototype, \"onDidChange\", {\n        get: function () {\n            return this._onDidChange.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExplorerDecorationsProvider.prototype.provideDecorations = function (resource) {\n        var fileStat = this.explorerService.findClosest(resource);\n        if (fileStat && fileStat.isRoot && fileStat.isError) {\n            return {\n                tooltip: nls_1.localize('canNotResolve', \"Can not resolve workspace folder\"),\n                letter: '!',\n                color: colorRegistry_1.listInvalidItemForeground,\n            };\n        }\n        if (fileStat && fileStat.isSymbolicLink) {\n            return {\n                tooltip: nls_1.localize('symbolicLlink', \"Symbolic Link\"),\n                letter: '\\u2937'\n            };\n        }\n        return undefined;\n    };\n    ExplorerDecorationsProvider.prototype.dispose = function () {\n        return lifecycle_1.dispose(this.toDispose);\n    };\n    ExplorerDecorationsProvider = tslib_1.__decorate([\n        tslib_1.__param(0, files_1.IExplorerService),\n        tslib_1.__param(1, workspace_1.IWorkspaceContextService)\n    ], ExplorerDecorationsProvider);\n    return ExplorerDecorationsProvider;\n}());\nexports.ExplorerDecorationsProvider = ExplorerDecorationsProvider;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/views/explorerDecorationsProvider.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,8CAAsD;AACtD,8BAAkC;AAClC,oEAAkF;AAElF,wEAAmF;AACnF,sDAAgE;AAChE,iEAA2E;AAE3E;IAKC,qCAC2B,eAAiC,EACjC,cAAwC;QAFnE,iBAaC;QAZ0B,oBAAe,GAAf,eAAe,CAAkB;QALnD,UAAK,GAAW,cAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC/C,iBAAY,GAAG,IAAI,eAAO,EAAS,CAAC;QAO3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,UAAA,CAAC;YAC/D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,GAAG,EAAN,CAAM,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,UAAA,IAAI;YACvD,IAAI,IAAI,EAAE;gBACT,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aACxC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,oDAAW;aAAf;YACC,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAChC,CAAC;;;OAAA;IAED,wDAAkB,GAAlB,UAAmB,QAAa;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpD,OAAO;gBACN,OAAO,EAAE,cAAQ,CAAC,eAAe,EAAE,kCAAkC,CAAC;gBACtE,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,yCAAyB;aAChC,CAAC;SACF;QACD,IAAI,QAAQ,IAAI,QAAQ,CAAC,cAAc,EAAE;YACxC,OAAO;gBACN,OAAO,EAAE,cAAQ,CAAC,eAAe,EAAE,eAAe,CAAC;gBACnD,MAAM,EAAE,QAAQ;aAChB,CAAC;SACF;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,6CAAO,GAAP;QACC,OAAO,mBAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IA7CW,2BAA2B;QAMrC,mBAAA,wBAAgB,CAAA;QAChB,mBAAA,oCAAwB,CAAA;OAPd,2BAA2B,CA8CvC;IAAD,kCAAC;CAAA,AA9CD,IA8CC;AA9CY,kEAA2B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IDecorationsProvider, IDecorationData } from 'vs/workbench/services/decorations/browser/decorations';\nimport { listInvalidItemForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IExplorerService } from 'vs/workbench/contrib/files/common/files';\n\nexport class ExplorerDecorationsProvider implements IDecorationsProvider {\n\treadonly label: string = localize('label', \"Explorer\");\n\tprivate _onDidChange = new Emitter<URI[]>();\n\tprivate toDispose: IDisposable[];\n\n\tconstructor(\n\t\t@IExplorerService private explorerService: IExplorerService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(contextService.onDidChangeWorkspaceFolders(e => {\n\t\t\tthis._onDidChange.fire(e.changed.concat(e.added).map(wf => wf.uri));\n\t\t}));\n\t\tthis.toDispose.push(explorerService.onDidChangeItem(item => {\n\t\t\tif (item) {\n\t\t\t\tthis._onDidChange.fire([item.resource]);\n\t\t\t}\n\t\t}));\n\t}\n\n\tget onDidChange(): Event<URI[]> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprovideDecorations(resource: URI): IDecorationData | undefined {\n\t\tconst fileStat = this.explorerService.findClosest(resource);\n\t\tif (fileStat && fileStat.isRoot && fileStat.isError) {\n\t\t\treturn {\n\t\t\t\ttooltip: localize('canNotResolve', \"Can not resolve workspace folder\"),\n\t\t\t\tletter: '!',\n\t\t\t\tcolor: listInvalidItemForeground,\n\t\t\t};\n\t\t}\n\t\tif (fileStat && fileStat.isSymbolicLink) {\n\t\t\treturn {\n\t\t\t\ttooltip: localize('symbolicLlink', \"Symbolic Link\"),\n\t\t\t\tletter: '\\u2937'\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdispose(): IDisposable[] {\n\t\treturn dispose(this.toDispose);\n\t}\n}\n"]}]}