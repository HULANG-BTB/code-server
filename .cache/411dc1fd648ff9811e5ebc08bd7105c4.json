{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewPart.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewPart.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar viewEventHandler_1 = require(\"vs/editor/common/viewModel/viewEventHandler\");\nvar ViewPart = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewPart, _super);\n    function ViewPart(context) {\n        var _this = _super.call(this) || this;\n        _this._context = context;\n        _this._context.addEventHandler(_this);\n        return _this;\n    }\n    ViewPart.prototype.dispose = function () {\n        this._context.removeEventHandler(this);\n        _super.prototype.dispose.call(this);\n    };\n    return ViewPart;\n}(viewEventHandler_1.ViewEventHandler));\nexports.ViewPart = ViewPart;\nvar PartFingerprint;\n(function (PartFingerprint) {\n    PartFingerprint[PartFingerprint[\"None\"] = 0] = \"None\";\n    PartFingerprint[PartFingerprint[\"ContentWidgets\"] = 1] = \"ContentWidgets\";\n    PartFingerprint[PartFingerprint[\"OverflowingContentWidgets\"] = 2] = \"OverflowingContentWidgets\";\n    PartFingerprint[PartFingerprint[\"OverflowGuard\"] = 3] = \"OverflowGuard\";\n    PartFingerprint[PartFingerprint[\"OverlayWidgets\"] = 4] = \"OverlayWidgets\";\n    PartFingerprint[PartFingerprint[\"ScrollableElement\"] = 5] = \"ScrollableElement\";\n    PartFingerprint[PartFingerprint[\"TextArea\"] = 6] = \"TextArea\";\n    PartFingerprint[PartFingerprint[\"ViewLines\"] = 7] = \"ViewLines\";\n    PartFingerprint[PartFingerprint[\"Minimap\"] = 8] = \"Minimap\";\n})(PartFingerprint = exports.PartFingerprint || (exports.PartFingerprint = {}));\nvar PartFingerprints = /** @class */ (function () {\n    function PartFingerprints() {\n    }\n    PartFingerprints.write = function (target, partId) {\n        if (target instanceof fastDomNode_1.FastDomNode) {\n            target.setAttribute('data-mprt', String(partId));\n        }\n        else {\n            target.setAttribute('data-mprt', String(partId));\n        }\n    };\n    PartFingerprints.read = function (target) {\n        var r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return PartFingerprint.None;\n        }\n        return parseInt(r, 10);\n    };\n    PartFingerprints.collect = function (child, stopAt) {\n        var result = [], resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        var r = new Uint8Array(resultLen);\n        for (var i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    };\n    return PartFingerprints;\n}());\nexports.PartFingerprints = PartFingerprints;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewPart.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewPart.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,2DAA0D;AAG1D,gFAA+E;AAE/E;IAAuC,oCAAgB;IAItD,kBAAY,OAAoB;QAAhC,YACC,iBAAO,SAGP;QAFA,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,CAAC;;IACrC,CAAC;IAEM,0BAAO,GAAd;QACC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACvC,iBAAM,OAAO,WAAE,CAAC;IACjB,CAAC;IAIF,eAAC;AAAD,CAAC,AAjBD,CAAuC,mCAAgB,GAiBtD;AAjBqB,4BAAQ;AAmB9B,IAAkB,eAUjB;AAVD,WAAkB,eAAe;IAChC,qDAAI,CAAA;IACJ,yEAAc,CAAA;IACd,+FAAyB,CAAA;IACzB,uEAAa,CAAA;IACb,yEAAc,CAAA;IACd,+EAAiB,CAAA;IACjB,6DAAQ,CAAA;IACR,+DAAS,CAAA;IACT,2DAAO,CAAA;AACR,CAAC,EAViB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAUhC;AAED;IAAA;IAqCA,CAAC;IAnCc,sBAAK,GAAnB,UAAoB,MAA0C,EAAE,MAAuB;QACtF,IAAI,MAAM,YAAY,yBAAW,EAAE;YAClC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SACjD;aAAM;YACN,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SACjD;IACF,CAAC;IAEa,qBAAI,GAAlB,UAAmB,MAAe;QACjC,IAAM,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,KAAK,IAAI,EAAE;YACf,OAAO,eAAe,CAAC,IAAI,CAAC;SAC5B;QACD,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACxB,CAAC;IAEa,wBAAO,GAArB,UAAsB,KAAqB,EAAE,MAAe;QAC3D,IAAI,MAAM,GAAsB,EAAE,EAAE,SAAS,GAAG,CAAC,CAAC;QAElD,OAAO,KAAK,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,EAAE;YACxC,IAAI,KAAK,KAAK,MAAM,EAAE;gBACrB,MAAM;aACN;YACD,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,YAAY,EAAE;gBAC1C,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvC;YACD,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;SAC5B;QAED,IAAM,CAAC,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YACnC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACjC;QACD,OAAO,CAAC,CAAC;IACV,CAAC;IACF,uBAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\n\nexport abstract class ViewPart extends ViewEventHandler {\n\n\t_context: ViewContext;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tpublic abstract prepareRender(ctx: RenderingContext): void;\n\tpublic abstract render(ctx: RestrictedRenderingContext): void;\n}\n\nexport const enum PartFingerprint {\n\tNone,\n\tContentWidgets,\n\tOverflowingContentWidgets,\n\tOverflowGuard,\n\tOverlayWidgets,\n\tScrollableElement,\n\tTextArea,\n\tViewLines,\n\tMinimap\n}\n\nexport class PartFingerprints {\n\n\tpublic static write(target: Element | FastDomNode<HTMLElement>, partId: PartFingerprint) {\n\t\tif (target instanceof FastDomNode) {\n\t\t\ttarget.setAttribute('data-mprt', String(partId));\n\t\t} else {\n\t\t\ttarget.setAttribute('data-mprt', String(partId));\n\t\t}\n\t}\n\n\tpublic static read(target: Element): PartFingerprint {\n\t\tconst r = target.getAttribute('data-mprt');\n\t\tif (r === null) {\n\t\t\treturn PartFingerprint.None;\n\t\t}\n\t\treturn parseInt(r, 10);\n\t}\n\n\tpublic static collect(child: Element | null, stopAt: Element): Uint8Array {\n\t\tlet result: PartFingerprint[] = [], resultLen = 0;\n\n\t\twhile (child && child !== document.body) {\n\t\t\tif (child === stopAt) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (child.nodeType === child.ELEMENT_NODE) {\n\t\t\t\tresult[resultLen++] = this.read(child);\n\t\t\t}\n\t\t\tchild = child.parentElement;\n\t\t}\n\n\t\tconst r = new Uint8Array(resultLen);\n\t\tfor (let i = 0; i < resultLen; i++) {\n\t\t\tr[i] = result[resultLen - i - 1];\n\t\t}\n\t\treturn r;\n\t}\n}\n"]}]}