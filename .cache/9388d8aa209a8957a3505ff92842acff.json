{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDialogs.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDialogs.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar extHost_protocol_1 = require(\"../common/extHost.protocol\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar collections_1 = require(\"vs/base/common/collections\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar MainThreadDialogs = /** @class */ (function () {\n    function MainThreadDialogs(context, _fileDialogService) {\n        this._fileDialogService = _fileDialogService;\n        //\n    }\n    MainThreadDialogs_1 = MainThreadDialogs;\n    MainThreadDialogs.prototype.dispose = function () {\n        //\n    };\n    MainThreadDialogs.prototype.$showOpenDialog = function (options) {\n        return Promise.resolve(this._fileDialogService.showOpenDialog(MainThreadDialogs_1._convertOpenOptions(options)));\n    };\n    MainThreadDialogs.prototype.$showSaveDialog = function (options) {\n        return Promise.resolve(this._fileDialogService.showSaveDialog(MainThreadDialogs_1._convertSaveOptions(options)));\n    };\n    MainThreadDialogs._convertOpenOptions = function (options) {\n        var result = {\n            openLabel: options.openLabel,\n            canSelectFiles: options.canSelectFiles || (!options.canSelectFiles && !options.canSelectFolders),\n            canSelectFolders: options.canSelectFolders,\n            canSelectMany: options.canSelectMany,\n            defaultUri: uri_1.URI.revive(options.defaultUri)\n        };\n        if (options.filters) {\n            result.filters = [];\n            collections_1.forEach(options.filters, function (entry) { return result.filters.push({ name: entry.key, extensions: entry.value }); });\n        }\n        return result;\n    };\n    MainThreadDialogs._convertSaveOptions = function (options) {\n        var result = {\n            defaultUri: uri_1.URI.revive(options.defaultUri),\n            saveLabel: options.saveLabel\n        };\n        if (options.filters) {\n            result.filters = [];\n            collections_1.forEach(options.filters, function (entry) { return result.filters.push({ name: entry.key, extensions: entry.value }); });\n        }\n        return result;\n    };\n    var MainThreadDialogs_1;\n    MainThreadDialogs = MainThreadDialogs_1 = tslib_1.__decorate([\n        extHostCustomers_1.extHostNamedCustomer(extHost_protocol_1.MainContext.MainThreadDialogs),\n        tslib_1.__param(1, dialogs_1.IFileDialogService)\n    ], MainThreadDialogs);\n    return MainThreadDialogs;\n}());\nexports.MainThreadDialogs = MainThreadDialogs;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDialogs.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDialogs.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,0CAAyC;AACzC,+DAA6J;AAC7J,6EAAgF;AAChF,0DAAqD;AACrD,8DAAgH;AAGhH;IAEC,2BACC,OAAwB,EACa,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAE3E,EAAE;IACH,CAAC;0BAPW,iBAAiB;IAS7B,mCAAO,GAAP;QACC,EAAE;IACH,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAoC;QACnD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,mBAAiB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC;IAED,2CAAe,GAAf,UAAgB,OAAoC;QACnD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,mBAAiB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChH,CAAC;IAEc,qCAAmB,GAAlC,UAAmC,OAAoC;QACtE,IAAM,MAAM,GAAuB;YAClC,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;YAChG,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;YAC1C,aAAa,EAAE,OAAO,CAAC,aAAa;YACpC,UAAU,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;SAC1C,CAAC;QACF,IAAI,OAAO,CAAC,OAAO,EAAE;YACpB,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,qBAAO,CAAC,OAAO,CAAC,OAAO,EAAE,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,OAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAlE,CAAkE,CAAC,CAAC;SACtG;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEc,qCAAmB,GAAlC,UAAmC,OAAoC;QACtE,IAAM,MAAM,GAAuB;YAClC,UAAU,EAAE,SAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC1C,SAAS,EAAE,OAAO,CAAC,SAAS;SAC5B,CAAC;QACF,IAAI,OAAO,CAAC,OAAO,EAAE;YACpB,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,qBAAO,CAAC,OAAO,CAAC,OAAO,EAAE,UAAA,KAAK,IAAI,OAAA,MAAM,CAAC,OAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAlE,CAAkE,CAAC,CAAC;SACtG;QACD,OAAO,MAAM,CAAC;IACf,CAAC;;IA9CW,iBAAiB;QAD7B,uCAAoB,CAAC,8BAAW,CAAC,iBAAiB,CAAC;QAKjD,mBAAA,4BAAkB,CAAA;OAJR,iBAAiB,CA+C7B;IAAD,wBAAC;CAAA,AA/CD,IA+CC;AA/CY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { MainThreadDiaglogsShape, MainContext, IExtHostContext, MainThreadDialogOpenOptions, MainThreadDialogSaveOptions } from '../common/extHost.protocol';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { forEach } from 'vs/base/common/collections';\nimport { IFileDialogService, IOpenDialogOptions, ISaveDialogOptions } from 'vs/platform/dialogs/common/dialogs';\n\n@extHostNamedCustomer(MainContext.MainThreadDialogs)\nexport class MainThreadDialogs implements MainThreadDiaglogsShape {\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService,\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\t//\n\t}\n\n\t$showOpenDialog(options: MainThreadDialogOpenOptions): Promise<URI[] | undefined> {\n\t\treturn Promise.resolve(this._fileDialogService.showOpenDialog(MainThreadDialogs._convertOpenOptions(options)));\n\t}\n\n\t$showSaveDialog(options: MainThreadDialogSaveOptions): Promise<URI | undefined> {\n\t\treturn Promise.resolve(this._fileDialogService.showSaveDialog(MainThreadDialogs._convertSaveOptions(options)));\n\t}\n\n\tprivate static _convertOpenOptions(options: MainThreadDialogOpenOptions): IOpenDialogOptions {\n\t\tconst result: IOpenDialogOptions = {\n\t\t\topenLabel: options.openLabel,\n\t\t\tcanSelectFiles: options.canSelectFiles || (!options.canSelectFiles && !options.canSelectFolders),\n\t\t\tcanSelectFolders: options.canSelectFolders,\n\t\t\tcanSelectMany: options.canSelectMany,\n\t\t\tdefaultUri: URI.revive(options.defaultUri)\n\t\t};\n\t\tif (options.filters) {\n\t\t\tresult.filters = [];\n\t\t\tforEach(options.filters, entry => result.filters!.push({ name: entry.key, extensions: entry.value }));\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _convertSaveOptions(options: MainThreadDialogSaveOptions): ISaveDialogOptions {\n\t\tconst result: ISaveDialogOptions = {\n\t\t\tdefaultUri: URI.revive(options.defaultUri),\n\t\t\tsaveLabel: options.saveLabel\n\t\t};\n\t\tif (options.filters) {\n\t\t\tresult.filters = [];\n\t\t\tforEach(options.filters, entry => result.filters!.push({ name: entry.key, extensions: entry.value }));\n\t\t}\n\t\treturn result;\n\t}\n}\n"]}]}