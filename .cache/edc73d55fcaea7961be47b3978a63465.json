{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/callStackView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/callStackView.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar dom = require(\"vs/base/browser/dom\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar debugModel_1 = require(\"vs/workbench/contrib/debug/common/debugModel\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar baseDebugView_1 = require(\"vs/workbench/contrib/debug/browser/baseDebugView\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar highlightedLabel_1 = require(\"vs/base/browser/ui/highlightedlabel/highlightedLabel\");\nvar filters_1 = require(\"vs/base/common/filters\");\nvar event_1 = require(\"vs/base/common/event\");\nvar $ = dom.$;\nvar CallStackView = /** @class */ (function (_super) {\n    tslib_1.__extends(CallStackView, _super);\n    function CallStackView(options, contextMenuService, debugService, keybindingService, instantiationService, editorService, configurationService, menuService, contextKeyService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: nls.localize('callstackSection', \"Call Stack Section\") }), keybindingService, contextMenuService, configurationService) || this;\n        _this.options = options;\n        _this.debugService = debugService;\n        _this.instantiationService = instantiationService;\n        _this.editorService = editorService;\n        _this.contextKeyService = contextKeyService;\n        _this.parentSessionToExpand = new Set();\n        _this.callStackItemType = debug_1.CONTEXT_CALLSTACK_ITEM_TYPE.bindTo(contextKeyService);\n        _this.contributedContextMenu = menuService.createMenu(actions_1.MenuId.DebugCallStackContext, contextKeyService);\n        _this.disposables.push(_this.contributedContextMenu);\n        // Create scheduler to prevent unnecessary flashing of tree when reacting to changes\n        _this.onCallStackChangeScheduler = new async_1.RunOnceScheduler(function () {\n            // Only show the global pause message if we do not display threads.\n            // Otherwise there will be a pause message per thread and there is no need for a global one.\n            var sessions = _this.debugService.getModel().getSessions();\n            var thread = sessions.length === 1 && sessions[0].getAllThreads().length === 1 ? sessions[0].getAllThreads()[0] : undefined;\n            if (thread && thread.stoppedDetails) {\n                _this.pauseMessageLabel.textContent = thread.stoppedDetails.description || nls.localize('debugStopped', \"Paused on {0}\", thread.stoppedDetails.reason || '');\n                _this.pauseMessageLabel.title = thread.stoppedDetails.text || '';\n                dom.toggleClass(_this.pauseMessageLabel, 'exception', thread.stoppedDetails.reason === 'exception');\n                _this.pauseMessage.hidden = false;\n            }\n            else {\n                _this.pauseMessage.hidden = true;\n            }\n            _this.needsRefresh = false;\n            _this.dataSource.deemphasizedStackFramesToShow = [];\n            _this.tree.updateChildren().then(function () {\n                _this.parentSessionToExpand.forEach(function (s) { return _this.tree.expand(s); });\n                _this.parentSessionToExpand.clear();\n                _this.updateTreeSelection();\n            });\n        }, 50);\n        return _this;\n    }\n    CallStackView.prototype.renderHeaderTitle = function (container) {\n        var titleContainer = dom.append(container, $('.debug-call-stack-title'));\n        _super.prototype.renderHeaderTitle.call(this, titleContainer, this.options.title);\n        this.pauseMessage = dom.append(titleContainer, $('span.pause-message'));\n        this.pauseMessage.hidden = true;\n        this.pauseMessageLabel = dom.append(this.pauseMessage, $('span.label'));\n    };\n    CallStackView.prototype.renderBody = function (container) {\n        var _this = this;\n        dom.addClass(container, 'debug-call-stack');\n        var treeContainer = baseDebugView_1.renderViewTree(container);\n        this.dataSource = new CallStackDataSource(this.debugService);\n        this.tree = this.instantiationService.createInstance(listService_1.WorkbenchAsyncDataTree, treeContainer, new CallStackDelegate(), [\n            new SessionsRenderer(),\n            new ThreadsRenderer(),\n            this.instantiationService.createInstance(StackFramesRenderer),\n            new ErrorsRenderer(),\n            new LoadMoreRenderer(),\n            new ShowMoreRenderer()\n        ], this.dataSource, {\n            accessibilityProvider: new CallStackAccessibilityProvider(),\n            ariaLabel: nls.localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'callStackAriaLabel' }, \"Debug Call Stack\"),\n            identityProvider: {\n                getId: function (element) {\n                    if (typeof element === 'string') {\n                        return element;\n                    }\n                    if (element instanceof Array) {\n                        return \"showMore \" + element[0].getId();\n                    }\n                    return element.getId();\n                }\n            },\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: function (e) {\n                    if (isDebugSession(e)) {\n                        return e.getLabel();\n                    }\n                    if (e instanceof debugModel_1.Thread) {\n                        return e.name + \" \" + e.stateLabel;\n                    }\n                    if (e instanceof debugModel_1.StackFrame || typeof e === 'string') {\n                        return e;\n                    }\n                    if (e instanceof debugModel_1.ThreadAndSessionIds) {\n                        return LoadMoreRenderer.LABEL;\n                    }\n                    return nls.localize('showMoreStackFrames2', \"Show More Stack Frames\");\n                }\n            }\n        });\n        this.tree.setInput(this.debugService.getModel()).then(undefined, errors_1.onUnexpectedError);\n        var callstackNavigator = new listService_1.TreeResourceNavigator2(this.tree);\n        this.disposables.push(callstackNavigator);\n        this.disposables.push(callstackNavigator.onDidOpenResource(function (e) {\n            var _a;\n            if (_this.ignoreSelectionChangedEvent) {\n                return;\n            }\n            var focusStackFrame = function (stackFrame, thread, session) {\n                _this.ignoreFocusStackFrameEvent = true;\n                try {\n                    _this.debugService.focusStackFrame(stackFrame, thread, session, true);\n                }\n                finally {\n                    _this.ignoreFocusStackFrameEvent = false;\n                }\n            };\n            var element = e.element;\n            if (element instanceof debugModel_1.StackFrame) {\n                focusStackFrame(element, element.thread, element.thread.session);\n                element.openInEditor(_this.editorService, e.editorOptions.preserveFocus, e.sideBySide, e.editorOptions.pinned);\n            }\n            if (element instanceof debugModel_1.Thread) {\n                focusStackFrame(undefined, element, element.session);\n            }\n            if (isDebugSession(element)) {\n                focusStackFrame(undefined, undefined, element);\n            }\n            if (element instanceof debugModel_1.ThreadAndSessionIds) {\n                var session = _this.debugService.getModel().getSession(element.sessionId);\n                var thread = session && session.getThread(element.threadId);\n                if (thread) {\n                    thread.fetchCallStack()\n                        .then(function () { return _this.tree.updateChildren(); });\n                }\n            }\n            if (element instanceof Array) {\n                (_a = _this.dataSource.deemphasizedStackFramesToShow).push.apply(_a, element);\n                _this.tree.updateChildren();\n            }\n        }));\n        this.disposables.push(this.debugService.getModel().onDidChangeCallStack(function () {\n            if (!_this.isBodyVisible()) {\n                _this.needsRefresh = true;\n                return;\n            }\n            if (!_this.onCallStackChangeScheduler.isScheduled()) {\n                _this.onCallStackChangeScheduler.schedule();\n            }\n        }));\n        var onCallStackChange = event_1.Event.any(this.debugService.getViewModel().onDidFocusStackFrame, this.debugService.getViewModel().onDidFocusSession);\n        this.disposables.push(onCallStackChange(function () {\n            if (_this.ignoreFocusStackFrameEvent) {\n                return;\n            }\n            if (!_this.isBodyVisible()) {\n                _this.needsRefresh = true;\n                return;\n            }\n            _this.updateTreeSelection();\n        }));\n        this.disposables.push(this.tree.onContextMenu(function (e) { return _this.onContextMenu(e); }));\n        // Schedule the update of the call stack tree if the viewlet is opened after a session started #14684\n        if (this.debugService.state === debug_1.State.Stopped) {\n            this.onCallStackChangeScheduler.schedule(0);\n        }\n        this.disposables.push(this.onDidChangeBodyVisibility(function (visible) {\n            if (visible && _this.needsRefresh) {\n                _this.onCallStackChangeScheduler.schedule();\n            }\n        }));\n        this.disposables.push(this.debugService.onDidNewSession(function (s) {\n            if (s.parentSession) {\n                // Auto expand sessions that have sub sessions\n                _this.parentSessionToExpand.add(s.parentSession);\n            }\n        }));\n    };\n    CallStackView.prototype.layoutBody = function (height, width) {\n        this.tree.layout(height, width);\n    };\n    CallStackView.prototype.focus = function () {\n        this.tree.domFocus();\n    };\n    CallStackView.prototype.updateTreeSelection = function () {\n        var _this = this;\n        if (!this.tree || !this.tree.getInput()) {\n            // Tree not initialized yet\n            return;\n        }\n        var updateSelectionAndReveal = function (element) {\n            _this.ignoreSelectionChangedEvent = true;\n            try {\n                _this.tree.setSelection([element]);\n                _this.tree.reveal(element);\n            }\n            catch (e) { }\n            finally {\n                _this.ignoreSelectionChangedEvent = false;\n            }\n        };\n        var thread = this.debugService.getViewModel().focusedThread;\n        var session = this.debugService.getViewModel().focusedSession;\n        var stackFrame = this.debugService.getViewModel().focusedStackFrame;\n        if (!thread) {\n            if (!session) {\n                this.tree.setSelection([]);\n            }\n            else {\n                updateSelectionAndReveal(session);\n            }\n        }\n        else {\n            var expandPromises = [function () { return async_1.ignoreErrors(_this.tree.expand(thread)); }];\n            var s = thread.session;\n            var _loop_1 = function () {\n                var sessionToExpand = s;\n                expandPromises.push(function () { return async_1.ignoreErrors(_this.tree.expand(sessionToExpand)); });\n                s = s.parentSession;\n            };\n            while (s) {\n                _loop_1();\n            }\n            async_1.sequence(expandPromises.reverse()).then(function () {\n                var toReveal = stackFrame || session;\n                if (toReveal) {\n                    updateSelectionAndReveal(toReveal);\n                }\n            });\n        }\n    };\n    CallStackView.prototype.onContextMenu = function (e) {\n        var _this = this;\n        var element = e.element;\n        if (isDebugSession(element)) {\n            this.callStackItemType.set('session');\n        }\n        else if (element instanceof debugModel_1.Thread) {\n            this.callStackItemType.set('thread');\n        }\n        else if (element instanceof debugModel_1.StackFrame) {\n            this.callStackItemType.set('stackFrame');\n        }\n        else {\n            this.callStackItemType.reset();\n        }\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return e.anchor; },\n            getActions: function () {\n                var actions = [];\n                menuItemActionItem_1.fillInContextMenuActions(_this.contributedContextMenu, { arg: _this.getContextForContributedActions(element), shouldForwardArgs: true }, actions, _this.contextMenuService);\n                return actions;\n            },\n            getActionsContext: function () { return element; }\n        });\n    };\n    CallStackView.prototype.getContextForContributedActions = function (element) {\n        if (element instanceof debugModel_1.StackFrame) {\n            if (element.source.inMemory) {\n                return element.source.raw.path || element.source.reference;\n            }\n            return element.source.uri.toString();\n        }\n        if (element instanceof debugModel_1.Thread) {\n            return element.threadId;\n        }\n        if (isDebugSession(element)) {\n            return element.getId();\n        }\n        return undefined;\n    };\n    CallStackView = tslib_1.__decorate([\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, debug_1.IDebugService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, editorService_1.IEditorService),\n        tslib_1.__param(6, configuration_1.IConfigurationService),\n        tslib_1.__param(7, actions_1.IMenuService),\n        tslib_1.__param(8, contextkey_1.IContextKeyService)\n    ], CallStackView);\n    return CallStackView;\n}(panelViewlet_1.ViewletPanel));\nexports.CallStackView = CallStackView;\nvar SessionsRenderer = /** @class */ (function () {\n    function SessionsRenderer() {\n    }\n    Object.defineProperty(SessionsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return SessionsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SessionsRenderer.prototype.renderTemplate = function (container) {\n        var session = dom.append(container, $('.session'));\n        var name = dom.append(session, $('.name'));\n        var state = dom.append(session, $('.state'));\n        var stateLabel = dom.append(state, $('span.label'));\n        var label = new highlightedLabel_1.HighlightedLabel(name, false);\n        return { session: session, name: name, state: state, stateLabel: stateLabel, label: label };\n    };\n    SessionsRenderer.prototype.renderElement = function (element, index, data) {\n        var session = element.element;\n        data.session.title = nls.localize({ key: 'session', comment: ['Session is a noun'] }, \"Session\");\n        data.label.set(session.getLabel(), filters_1.createMatches(element.filterData));\n        var stoppedThread = session.getAllThreads().filter(function (t) { return t.stopped; }).pop();\n        data.stateLabel.textContent = stoppedThread ? nls.localize('paused', \"Paused\")\n            : nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n    };\n    SessionsRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    SessionsRenderer.ID = 'session';\n    return SessionsRenderer;\n}());\nvar ThreadsRenderer = /** @class */ (function () {\n    function ThreadsRenderer() {\n    }\n    Object.defineProperty(ThreadsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return ThreadsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ThreadsRenderer.prototype.renderTemplate = function (container) {\n        var thread = dom.append(container, $('.thread'));\n        var name = dom.append(thread, $('.name'));\n        var state = dom.append(thread, $('.state'));\n        var stateLabel = dom.append(state, $('span.label'));\n        var label = new highlightedLabel_1.HighlightedLabel(name, false);\n        return { thread: thread, name: name, state: state, stateLabel: stateLabel, label: label };\n    };\n    ThreadsRenderer.prototype.renderElement = function (element, index, data) {\n        var thread = element.element;\n        data.thread.title = nls.localize('thread', \"Thread\");\n        data.label.set(thread.name, filters_1.createMatches(element.filterData));\n        data.stateLabel.textContent = thread.stateLabel;\n    };\n    ThreadsRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    ThreadsRenderer.ID = 'thread';\n    return ThreadsRenderer;\n}());\nvar StackFramesRenderer = /** @class */ (function () {\n    function StackFramesRenderer(labelService) {\n        this.labelService = labelService;\n    }\n    Object.defineProperty(StackFramesRenderer.prototype, \"templateId\", {\n        get: function () {\n            return StackFramesRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StackFramesRenderer.prototype.renderTemplate = function (container) {\n        var stackFrame = dom.append(container, $('.stack-frame'));\n        var labelDiv = dom.append(stackFrame, $('span.label.expression'));\n        var file = dom.append(stackFrame, $('.file'));\n        var fileName = dom.append(file, $('span.file-name'));\n        var wrapper = dom.append(file, $('span.line-number-wrapper'));\n        var lineNumber = dom.append(wrapper, $('span.line-number'));\n        var label = new highlightedLabel_1.HighlightedLabel(labelDiv, false);\n        return { file: file, fileName: fileName, label: label, lineNumber: lineNumber, stackFrame: stackFrame };\n    };\n    StackFramesRenderer.prototype.renderElement = function (element, index, data) {\n        var stackFrame = element.element;\n        dom.toggleClass(data.stackFrame, 'disabled', !stackFrame.source || !stackFrame.source.available || isDeemphasized(stackFrame));\n        dom.toggleClass(data.stackFrame, 'label', stackFrame.presentationHint === 'label');\n        dom.toggleClass(data.stackFrame, 'subtle', stackFrame.presentationHint === 'subtle');\n        data.file.title = stackFrame.source.inMemory ? stackFrame.source.uri.path : this.labelService.getUriLabel(stackFrame.source.uri);\n        if (stackFrame.source.raw.origin) {\n            data.file.title += \"\\n\" + stackFrame.source.raw.origin;\n        }\n        data.label.set(stackFrame.name, filters_1.createMatches(element.filterData), stackFrame.name);\n        data.fileName.textContent = stackFrame.getSpecificSourceName();\n        if (stackFrame.range.startLineNumber !== undefined) {\n            data.lineNumber.textContent = \"\" + stackFrame.range.startLineNumber;\n            if (stackFrame.range.startColumn) {\n                data.lineNumber.textContent += \":\" + stackFrame.range.startColumn;\n            }\n            dom.removeClass(data.lineNumber, 'unavailable');\n        }\n        else {\n            dom.addClass(data.lineNumber, 'unavailable');\n        }\n    };\n    StackFramesRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    StackFramesRenderer.ID = 'stackFrame';\n    StackFramesRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, label_1.ILabelService)\n    ], StackFramesRenderer);\n    return StackFramesRenderer;\n}());\nvar ErrorsRenderer = /** @class */ (function () {\n    function ErrorsRenderer() {\n    }\n    Object.defineProperty(ErrorsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return ErrorsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ErrorsRenderer.prototype.renderTemplate = function (container) {\n        var label = dom.append(container, $('.error'));\n        return { label: label };\n    };\n    ErrorsRenderer.prototype.renderElement = function (element, index, data) {\n        var error = element.element;\n        data.label.textContent = error;\n        data.label.title = error;\n    };\n    ErrorsRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    ErrorsRenderer.ID = 'error';\n    return ErrorsRenderer;\n}());\nvar LoadMoreRenderer = /** @class */ (function () {\n    function LoadMoreRenderer() {\n    }\n    Object.defineProperty(LoadMoreRenderer.prototype, \"templateId\", {\n        get: function () {\n            return LoadMoreRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoadMoreRenderer.prototype.renderTemplate = function (container) {\n        var label = dom.append(container, $('.load-more'));\n        return { label: label };\n    };\n    LoadMoreRenderer.prototype.renderElement = function (element, index, data) {\n        data.label.textContent = LoadMoreRenderer.LABEL;\n    };\n    LoadMoreRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    LoadMoreRenderer.ID = 'loadMore';\n    LoadMoreRenderer.LABEL = nls.localize('loadMoreStackFrames', \"Load More Stack Frames\");\n    return LoadMoreRenderer;\n}());\nvar ShowMoreRenderer = /** @class */ (function () {\n    function ShowMoreRenderer() {\n    }\n    Object.defineProperty(ShowMoreRenderer.prototype, \"templateId\", {\n        get: function () {\n            return ShowMoreRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowMoreRenderer.prototype.renderTemplate = function (container) {\n        var label = dom.append(container, $('.show-more'));\n        return { label: label };\n    };\n    ShowMoreRenderer.prototype.renderElement = function (element, index, data) {\n        var stackFrames = element.element;\n        if (stackFrames.every(function (sf) { return !!(sf.source && sf.source.origin && sf.source.origin === stackFrames[0].source.origin); })) {\n            data.label.textContent = nls.localize('showMoreAndOrigin', \"Show {0} More: {1}\", stackFrames.length, stackFrames[0].source.origin);\n        }\n        else {\n            data.label.textContent = nls.localize('showMoreStackFrames', \"Show {0} More Stack Frames\", stackFrames.length);\n        }\n    };\n    ShowMoreRenderer.prototype.disposeTemplate = function (templateData) {\n        // noop\n    };\n    ShowMoreRenderer.ID = 'showMore';\n    return ShowMoreRenderer;\n}());\nvar CallStackDelegate = /** @class */ (function () {\n    function CallStackDelegate() {\n    }\n    CallStackDelegate.prototype.getHeight = function (element) {\n        return 22;\n    };\n    CallStackDelegate.prototype.getTemplateId = function (element) {\n        if (isDebugSession(element)) {\n            return SessionsRenderer.ID;\n        }\n        if (element instanceof debugModel_1.Thread) {\n            return ThreadsRenderer.ID;\n        }\n        if (element instanceof debugModel_1.StackFrame) {\n            return StackFramesRenderer.ID;\n        }\n        if (typeof element === 'string') {\n            return ErrorsRenderer.ID;\n        }\n        if (element instanceof debugModel_1.ThreadAndSessionIds) {\n            return LoadMoreRenderer.ID;\n        }\n        // element instanceof Array\n        return ShowMoreRenderer.ID;\n    };\n    return CallStackDelegate;\n}());\nfunction isDebugModel(obj) {\n    return typeof obj.getSessions === 'function';\n}\nfunction isDebugSession(obj) {\n    return typeof obj.getAllThreads === 'function';\n}\nfunction isDeemphasized(frame) {\n    return frame.source.presentationHint === 'deemphasize' || frame.presentationHint === 'deemphasize';\n}\nvar CallStackDataSource = /** @class */ (function () {\n    function CallStackDataSource(debugService) {\n        this.debugService = debugService;\n    }\n    CallStackDataSource.prototype.hasChildren = function (element) {\n        return isDebugModel(element) || isDebugSession(element) || (element instanceof debugModel_1.Thread && element.stopped);\n    };\n    CallStackDataSource.prototype.getChildren = function (element) {\n        if (isDebugModel(element)) {\n            var sessions = element.getSessions();\n            if (sessions.length === 0) {\n                return Promise.resolve([]);\n            }\n            if (sessions.length > 1 || this.debugService.getViewModel().isMultiSessionView()) {\n                return Promise.resolve(sessions.filter(function (s) { return !s.parentSession; }));\n            }\n            var threads = sessions[0].getAllThreads();\n            // Only show the threads in the call stack if there is more than 1 thread.\n            return threads.length === 1 ? this.getThreadChildren(threads[0]) : Promise.resolve(threads);\n        }\n        else if (isDebugSession(element)) {\n            var childSessions = this.debugService.getModel().getSessions().filter(function (s) { return s.parentSession === element; });\n            if (childSessions.length) {\n                return Promise.resolve(childSessions);\n            }\n            return Promise.resolve(element.getAllThreads());\n        }\n        else {\n            return this.getThreadChildren(element);\n        }\n    };\n    CallStackDataSource.prototype.getThreadChildren = function (thread) {\n        var _this = this;\n        return this.getThreadCallstack(thread).then(function (children) {\n            // Check if some stack frames should be hidden under a parent element since they are deemphasized\n            var result = [];\n            children.forEach(function (child, index) {\n                if (child instanceof debugModel_1.StackFrame && child.source && isDeemphasized(child)) {\n                    // Check if the user clicked to show the deemphasized source\n                    if (_this.deemphasizedStackFramesToShow.indexOf(child) === -1) {\n                        if (result.length) {\n                            var last = result[result.length - 1];\n                            if (last instanceof Array) {\n                                // Collect all the stackframes that will be \"collapsed\"\n                                last.push(child);\n                                return;\n                            }\n                        }\n                        var nextChild = index < children.length - 1 ? children[index + 1] : undefined;\n                        if (nextChild instanceof debugModel_1.StackFrame && nextChild.source && isDeemphasized(nextChild)) {\n                            // Start collecting stackframes that will be \"collapsed\"\n                            result.push([child]);\n                            return;\n                        }\n                    }\n                }\n                result.push(child);\n            });\n            return result;\n        });\n    };\n    CallStackDataSource.prototype.getThreadCallstack = function (thread) {\n        var callStack = thread.getCallStack();\n        var callStackPromise = Promise.resolve(null);\n        if (!callStack || !callStack.length) {\n            callStackPromise = thread.fetchCallStack().then(function () { return callStack = thread.getCallStack(); });\n        }\n        return callStackPromise.then(function () {\n            if (callStack.length === 1 && thread.session.capabilities.supportsDelayedStackTraceLoading && thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > 1) {\n                // To reduce flashing of the call stack view simply append the stale call stack\n                // once we have the correct data the tree will refresh and we will no longer display it.\n                callStack = callStack.concat(thread.getStaleCallStack().slice(1));\n            }\n            if (thread.stoppedDetails && thread.stoppedDetails.framesErrorMessage) {\n                callStack = callStack.concat([thread.stoppedDetails.framesErrorMessage]);\n            }\n            if (thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > callStack.length && callStack.length > 1) {\n                callStack = callStack.concat([new debugModel_1.ThreadAndSessionIds(thread.session.getId(), thread.threadId)]);\n            }\n            return callStack;\n        });\n    };\n    return CallStackDataSource;\n}());\nvar CallStackAccessibilityProvider = /** @class */ (function () {\n    function CallStackAccessibilityProvider() {\n    }\n    CallStackAccessibilityProvider.prototype.getAriaLabel = function (element) {\n        if (element instanceof debugModel_1.Thread) {\n            return nls.localize('threadAriaLabel', \"Thread {0}, callstack, debug\", element.name);\n        }\n        if (element instanceof debugModel_1.StackFrame) {\n            return nls.localize('stackFrameAriaLabel', \"Stack Frame {0} line {1} {2}, callstack, debug\", element.name, element.range.startLineNumber, element.getSpecificSourceName());\n        }\n        if (isDebugSession(element)) {\n            return nls.localize('sessionLabel', \"Debug Session {0}\", element.getLabel());\n        }\n        if (typeof element === 'string') {\n            return element;\n        }\n        if (element instanceof Array) {\n            return nls.localize('showMoreStackFrames', \"Show {0} More Stack Frames\", element.length);\n        }\n        // element instanceof ThreadAndSessionIds\n        return nls.localize('loadMoreStackFrames', \"Load More Stack Frames\");\n    };\n    return CallStackAccessibilityProvider;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/callStackView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/callStackView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { RunOnceScheduler, ignoreErrors, sequence } from 'vs/base/common/async';\nimport * as dom from 'vs/base/browser/dom';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IDebugService, State, IStackFrame, IDebugSession, IThread, CONTEXT_CALLSTACK_ITEM_TYPE, IDebugModel } from 'vs/workbench/contrib/debug/common/debug';\nimport { Thread, StackFrame, ThreadAndSessionIds } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { MenuId, IMenu, IMenuService } from 'vs/platform/actions/common/actions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { renderViewTree } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { IAction } from 'vs/base/common/actions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IViewletPanelOptions, ViewletPanel } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { fillInContextMenuActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { ITreeRenderer, ITreeNode, ITreeContextMenuEvent, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { TreeResourceNavigator2, WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { HighlightedLabel } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { createMatches, FuzzyScore } from 'vs/base/common/filters';\nimport { Event } from 'vs/base/common/event';\n\nconst $ = dom.$;\n\ntype CallStackItem = IStackFrame | IThread | IDebugSession | string | ThreadAndSessionIds | IStackFrame[];\n\nexport class CallStackView extends ViewletPanel {\n\n\tprivate pauseMessage: HTMLSpanElement;\n\tprivate pauseMessageLabel: HTMLSpanElement;\n\tprivate onCallStackChangeScheduler: RunOnceScheduler;\n\tprivate needsRefresh: boolean;\n\tprivate ignoreSelectionChangedEvent: boolean;\n\tprivate ignoreFocusStackFrameEvent: boolean;\n\tprivate callStackItemType: IContextKey<string>;\n\tprivate dataSource: CallStackDataSource;\n\tprivate tree: WorkbenchAsyncDataTree<CallStackItem | IDebugModel, CallStackItem, FuzzyScore>;\n\tprivate contributedContextMenu: IMenu;\n\tprivate parentSessionToExpand = new Set<IDebugSession>();\n\n\tconstructor(\n\t\tprivate options: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService readonly contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: nls.localize('callstackSection', \"Call Stack Section\") }, keybindingService, contextMenuService, configurationService);\n\t\tthis.callStackItemType = CONTEXT_CALLSTACK_ITEM_TYPE.bindTo(contextKeyService);\n\n\t\tthis.contributedContextMenu = menuService.createMenu(MenuId.DebugCallStackContext, contextKeyService);\n\t\tthis.disposables.push(this.contributedContextMenu);\n\n\t\t// Create scheduler to prevent unnecessary flashing of tree when reacting to changes\n\t\tthis.onCallStackChangeScheduler = new RunOnceScheduler(() => {\n\t\t\t// Only show the global pause message if we do not display threads.\n\t\t\t// Otherwise there will be a pause message per thread and there is no need for a global one.\n\t\t\tconst sessions = this.debugService.getModel().getSessions();\n\t\t\tconst thread = sessions.length === 1 && sessions[0].getAllThreads().length === 1 ? sessions[0].getAllThreads()[0] : undefined;\n\t\t\tif (thread && thread.stoppedDetails) {\n\t\t\t\tthis.pauseMessageLabel.textContent = thread.stoppedDetails.description || nls.localize('debugStopped', \"Paused on {0}\", thread.stoppedDetails.reason || '');\n\t\t\t\tthis.pauseMessageLabel.title = thread.stoppedDetails.text || '';\n\t\t\t\tdom.toggleClass(this.pauseMessageLabel, 'exception', thread.stoppedDetails.reason === 'exception');\n\t\t\t\tthis.pauseMessage.hidden = false;\n\t\t\t} else {\n\t\t\t\tthis.pauseMessage.hidden = true;\n\t\t\t}\n\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.dataSource.deemphasizedStackFramesToShow = [];\n\t\t\tthis.tree.updateChildren().then(() => {\n\t\t\t\tthis.parentSessionToExpand.forEach(s => this.tree.expand(s));\n\t\t\t\tthis.parentSessionToExpand.clear();\n\t\t\t\tthis.updateTreeSelection();\n\t\t\t});\n\t\t}, 50);\n\t}\n\n\tprotected renderHeaderTitle(container: HTMLElement): void {\n\t\tconst titleContainer = dom.append(container, $('.debug-call-stack-title'));\n\t\tsuper.renderHeaderTitle(titleContainer, this.options.title);\n\n\t\tthis.pauseMessage = dom.append(titleContainer, $('span.pause-message'));\n\t\tthis.pauseMessage.hidden = true;\n\t\tthis.pauseMessageLabel = dom.append(this.pauseMessage, $('span.label'));\n\t}\n\n\trenderBody(container: HTMLElement): void {\n\t\tdom.addClass(container, 'debug-call-stack');\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tthis.dataSource = new CallStackDataSource(this.debugService);\n\t\tthis.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, treeContainer, new CallStackDelegate(), [\n\t\t\tnew SessionsRenderer(),\n\t\t\tnew ThreadsRenderer(),\n\t\t\tthis.instantiationService.createInstance(StackFramesRenderer),\n\t\t\tnew ErrorsRenderer(),\n\t\t\tnew LoadMoreRenderer(),\n\t\t\tnew ShowMoreRenderer()\n\t\t], this.dataSource, {\n\t\t\t\taccessibilityProvider: new CallStackAccessibilityProvider(),\n\t\t\t\tariaLabel: nls.localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'callStackAriaLabel' }, \"Debug Call Stack\"),\n\t\t\t\tidentityProvider: {\n\t\t\t\t\tgetId: (element: CallStackItem) => {\n\t\t\t\t\t\tif (typeof element === 'string') {\n\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\t\t\treturn `showMore ${element[0].getId()}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn element.getId();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (e: CallStackItem) => {\n\t\t\t\t\t\tif (isDebugSession(e)) {\n\t\t\t\t\t\t\treturn e.getLabel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof Thread) {\n\t\t\t\t\t\t\treturn `${e.name} ${e.stateLabel}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof StackFrame || typeof e === 'string') {\n\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e instanceof ThreadAndSessionIds) {\n\t\t\t\t\t\t\treturn LoadMoreRenderer.LABEL;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nls.localize('showMoreStackFrames2', \"Show More Stack Frames\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) as WorkbenchAsyncDataTree<CallStackItem | IDebugModel, CallStackItem, FuzzyScore>;\n\n\t\tthis.tree.setInput(this.debugService.getModel()).then(undefined, onUnexpectedError);\n\n\t\tconst callstackNavigator = new TreeResourceNavigator2(this.tree);\n\t\tthis.disposables.push(callstackNavigator);\n\t\tthis.disposables.push(callstackNavigator.onDidOpenResource(e => {\n\t\t\tif (this.ignoreSelectionChangedEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusStackFrame = (stackFrame: IStackFrame | undefined, thread: IThread | undefined, session: IDebugSession) => {\n\t\t\t\tthis.ignoreFocusStackFrameEvent = true;\n\t\t\t\ttry {\n\t\t\t\t\tthis.debugService.focusStackFrame(stackFrame, thread, session, true);\n\t\t\t\t} finally {\n\t\t\t\t\tthis.ignoreFocusStackFrameEvent = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst element = e.element;\n\t\t\tif (element instanceof StackFrame) {\n\t\t\t\tfocusStackFrame(element, element.thread, element.thread.session);\n\t\t\t\telement.openInEditor(this.editorService, e.editorOptions.preserveFocus, e.sideBySide, e.editorOptions.pinned);\n\t\t\t}\n\t\t\tif (element instanceof Thread) {\n\t\t\t\tfocusStackFrame(undefined, element, element.session);\n\t\t\t}\n\t\t\tif (isDebugSession(element)) {\n\t\t\t\tfocusStackFrame(undefined, undefined, element);\n\t\t\t}\n\t\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\t\tconst session = this.debugService.getModel().getSession(element.sessionId);\n\t\t\t\tconst thread = session && session.getThread(element.threadId);\n\t\t\t\tif (thread) {\n\t\t\t\t\t(<Thread>thread).fetchCallStack()\n\t\t\t\t\t\t.then(() => this.tree.updateChildren());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (element instanceof Array) {\n\t\t\t\tthis.dataSource.deemphasizedStackFramesToShow.push(...element);\n\t\t\t\tthis.tree.updateChildren();\n\t\t\t}\n\t\t}));\n\n\t\tthis.disposables.push(this.debugService.getModel().onDidChangeCallStack(() => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.onCallStackChangeScheduler.isScheduled()) {\n\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tconst onCallStackChange = Event.any<any>(this.debugService.getViewModel().onDidFocusStackFrame, this.debugService.getViewModel().onDidFocusSession);\n\t\tthis.disposables.push(onCallStackChange(() => {\n\t\t\tif (this.ignoreFocusStackFrameEvent) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.updateTreeSelection();\n\t\t}));\n\t\tthis.disposables.push(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\t// Schedule the update of the call stack tree if the viewlet is opened after a session started #14684\n\t\tif (this.debugService.state === State.Stopped) {\n\t\t\tthis.onCallStackChangeScheduler.schedule(0);\n\t\t}\n\n\t\tthis.disposables.push(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.onCallStackChangeScheduler.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis.disposables.push(this.debugService.onDidNewSession(s => {\n\t\t\tif (s.parentSession) {\n\t\t\t\t// Auto expand sessions that have sub sessions\n\t\t\t\tthis.parentSessionToExpand.add(s.parentSession);\n\t\t\t}\n\t\t}));\n\t}\n\n\tlayoutBody(height: number, width: number): void {\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tfocus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tprivate updateTreeSelection(): void {\n\t\tif (!this.tree || !this.tree.getInput()) {\n\t\t\t// Tree not initialized yet\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateSelectionAndReveal = (element: IStackFrame | IDebugSession) => {\n\t\t\tthis.ignoreSelectionChangedEvent = true;\n\t\t\ttry {\n\t\t\t\tthis.tree.setSelection([element]);\n\t\t\t\tthis.tree.reveal(element);\n\t\t\t} catch (e) { }\n\t\t\tfinally {\n\t\t\t\tthis.ignoreSelectionChangedEvent = false;\n\t\t\t}\n\t\t};\n\n\t\tconst thread = this.debugService.getViewModel().focusedThread;\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\tif (!thread) {\n\t\t\tif (!session) {\n\t\t\t\tthis.tree.setSelection([]);\n\t\t\t} else {\n\t\t\t\tupdateSelectionAndReveal(session);\n\t\t\t}\n\t\t} else {\n\t\t\tconst expandPromises = [() => ignoreErrors(this.tree.expand(thread))];\n\t\t\tlet s: IDebugSession | undefined = thread.session;\n\t\t\twhile (s) {\n\t\t\t\tconst sessionToExpand = s;\n\t\t\t\texpandPromises.push(() => ignoreErrors(this.tree.expand(sessionToExpand)));\n\t\t\t\ts = s.parentSession;\n\t\t\t}\n\n\t\t\tsequence(expandPromises.reverse()).then(() => {\n\t\t\t\tconst toReveal = stackFrame || session;\n\t\t\t\tif (toReveal) {\n\t\t\t\t\tupdateSelectionAndReveal(toReveal);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<CallStackItem>): void {\n\t\tconst element = e.element;\n\t\tif (isDebugSession(element)) {\n\t\t\tthis.callStackItemType.set('session');\n\t\t} else if (element instanceof Thread) {\n\t\t\tthis.callStackItemType.set('thread');\n\t\t} else if (element instanceof StackFrame) {\n\t\t\tthis.callStackItemType.set('stackFrame');\n\t\t} else {\n\t\t\tthis.callStackItemType.reset();\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => {\n\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\tfillInContextMenuActions(this.contributedContextMenu, { arg: this.getContextForContributedActions(element), shouldForwardArgs: true }, actions, this.contextMenuService);\n\t\t\t\treturn actions;\n\t\t\t},\n\t\t\tgetActionsContext: () => element\n\t\t});\n\t}\n\n\tprivate getContextForContributedActions(element: CallStackItem | null): string | number | undefined {\n\t\tif (element instanceof StackFrame) {\n\t\t\tif (element.source.inMemory) {\n\t\t\t\treturn element.source.raw.path || element.source.reference;\n\t\t\t}\n\n\t\t\treturn element.source.uri.toString();\n\t\t}\n\t\tif (element instanceof Thread) {\n\t\t\treturn element.threadId;\n\t\t}\n\t\tif (isDebugSession(element)) {\n\t\t\treturn element.getId();\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\ninterface IThreadTemplateData {\n\tthread: HTMLElement;\n\tname: HTMLElement;\n\tstate: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n}\n\ninterface ISessionTemplateData {\n\tsession: HTMLElement;\n\tname: HTMLElement;\n\tstate: HTMLElement;\n\tstateLabel: HTMLSpanElement;\n\tlabel: HighlightedLabel;\n}\n\ninterface IErrorTemplateData {\n\tlabel: HTMLElement;\n}\n\ninterface ILabelTemplateData {\n\tlabel: HTMLElement;\n}\n\ninterface IStackFrameTemplateData {\n\tstackFrame: HTMLElement;\n\tfile: HTMLElement;\n\tfileName: HTMLElement;\n\tlineNumber: HTMLElement;\n\tlabel: HighlightedLabel;\n}\n\nclass SessionsRenderer implements ITreeRenderer<IDebugSession, FuzzyScore, ISessionTemplateData> {\n\tstatic readonly ID = 'session';\n\n\tget templateId(): string {\n\t\treturn SessionsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): ISessionTemplateData {\n\t\tconst session = dom.append(container, $('.session'));\n\t\tconst name = dom.append(session, $('.name'));\n\t\tconst state = dom.append(session, $('.state'));\n\t\tconst stateLabel = dom.append(state, $('span.label'));\n\t\tconst label = new HighlightedLabel(name, false);\n\n\t\treturn { session, name, state, stateLabel, label };\n\t}\n\n\trenderElement(element: ITreeNode<IDebugSession, FuzzyScore>, index: number, data: ISessionTemplateData): void {\n\t\tconst session = element.element;\n\t\tdata.session.title = nls.localize({ key: 'session', comment: ['Session is a noun'] }, \"Session\");\n\t\tdata.label.set(session.getLabel(), createMatches(element.filterData));\n\t\tconst stoppedThread = session.getAllThreads().filter(t => t.stopped).pop();\n\n\t\tdata.stateLabel.textContent = stoppedThread ? nls.localize('paused', \"Paused\")\n\t\t\t: nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t}\n\n\tdisposeTemplate(templateData: ISessionTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass ThreadsRenderer implements ITreeRenderer<IThread, FuzzyScore, IThreadTemplateData> {\n\tstatic readonly ID = 'thread';\n\n\tget templateId(): string {\n\t\treturn ThreadsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IThreadTemplateData {\n\t\tconst thread = dom.append(container, $('.thread'));\n\t\tconst name = dom.append(thread, $('.name'));\n\t\tconst state = dom.append(thread, $('.state'));\n\t\tconst stateLabel = dom.append(state, $('span.label'));\n\t\tconst label = new HighlightedLabel(name, false);\n\n\t\treturn { thread, name, state, stateLabel, label };\n\t}\n\n\trenderElement(element: ITreeNode<IThread, FuzzyScore>, index: number, data: IThreadTemplateData): void {\n\t\tconst thread = element.element;\n\t\tdata.thread.title = nls.localize('thread', \"Thread\");\n\t\tdata.label.set(thread.name, createMatches(element.filterData));\n\t\tdata.stateLabel.textContent = thread.stateLabel;\n\t}\n\n\tdisposeTemplate(templateData: IThreadTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass StackFramesRenderer implements ITreeRenderer<IStackFrame, FuzzyScore, IStackFrameTemplateData> {\n\tstatic readonly ID = 'stackFrame';\n\n\tconstructor(@ILabelService private readonly labelService: ILabelService) { }\n\n\tget templateId(): string {\n\t\treturn StackFramesRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IStackFrameTemplateData {\n\t\tconst stackFrame = dom.append(container, $('.stack-frame'));\n\t\tconst labelDiv = dom.append(stackFrame, $('span.label.expression'));\n\t\tconst file = dom.append(stackFrame, $('.file'));\n\t\tconst fileName = dom.append(file, $('span.file-name'));\n\t\tconst wrapper = dom.append(file, $('span.line-number-wrapper'));\n\t\tconst lineNumber = dom.append(wrapper, $('span.line-number'));\n\t\tconst label = new HighlightedLabel(labelDiv, false);\n\n\t\treturn { file, fileName, label, lineNumber, stackFrame };\n\t}\n\n\trenderElement(element: ITreeNode<IStackFrame, FuzzyScore>, index: number, data: IStackFrameTemplateData): void {\n\t\tconst stackFrame = element.element;\n\t\tdom.toggleClass(data.stackFrame, 'disabled', !stackFrame.source || !stackFrame.source.available || isDeemphasized(stackFrame));\n\t\tdom.toggleClass(data.stackFrame, 'label', stackFrame.presentationHint === 'label');\n\t\tdom.toggleClass(data.stackFrame, 'subtle', stackFrame.presentationHint === 'subtle');\n\n\t\tdata.file.title = stackFrame.source.inMemory ? stackFrame.source.uri.path : this.labelService.getUriLabel(stackFrame.source.uri);\n\t\tif (stackFrame.source.raw.origin) {\n\t\t\tdata.file.title += `\\n${stackFrame.source.raw.origin}`;\n\t\t}\n\t\tdata.label.set(stackFrame.name, createMatches(element.filterData), stackFrame.name);\n\t\tdata.fileName.textContent = stackFrame.getSpecificSourceName();\n\t\tif (stackFrame.range.startLineNumber !== undefined) {\n\t\t\tdata.lineNumber.textContent = `${stackFrame.range.startLineNumber}`;\n\t\t\tif (stackFrame.range.startColumn) {\n\t\t\t\tdata.lineNumber.textContent += `:${stackFrame.range.startColumn}`;\n\t\t\t}\n\t\t\tdom.removeClass(data.lineNumber, 'unavailable');\n\t\t} else {\n\t\t\tdom.addClass(data.lineNumber, 'unavailable');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IStackFrameTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass ErrorsRenderer implements ITreeRenderer<string, FuzzyScore, IErrorTemplateData> {\n\tstatic readonly ID = 'error';\n\n\tget templateId(): string {\n\t\treturn ErrorsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, $('.error'));\n\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<string, FuzzyScore>, index: number, data: IErrorTemplateData): void {\n\t\tconst error = element.element;\n\t\tdata.label.textContent = error;\n\t\tdata.label.title = error;\n\t}\n\n\tdisposeTemplate(templateData: IErrorTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass LoadMoreRenderer implements ITreeRenderer<ThreadAndSessionIds, FuzzyScore, ILabelTemplateData> {\n\tstatic readonly ID = 'loadMore';\n\tstatic readonly LABEL = nls.localize('loadMoreStackFrames', \"Load More Stack Frames\");\n\n\tget templateId(): string {\n\t\treturn LoadMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, $('.load-more'));\n\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<ThreadAndSessionIds, FuzzyScore>, index: number, data: ILabelTemplateData): void {\n\t\tdata.label.textContent = LoadMoreRenderer.LABEL;\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass ShowMoreRenderer implements ITreeRenderer<IStackFrame[], FuzzyScore, ILabelTemplateData> {\n\tstatic readonly ID = 'showMore';\n\n\tget templateId(): string {\n\t\treturn ShowMoreRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IErrorTemplateData {\n\t\tconst label = dom.append(container, $('.show-more'));\n\n\t\treturn { label };\n\t}\n\n\trenderElement(element: ITreeNode<IStackFrame[], FuzzyScore>, index: number, data: ILabelTemplateData): void {\n\t\tconst stackFrames = element.element;\n\t\tif (stackFrames.every(sf => !!(sf.source && sf.source.origin && sf.source.origin === stackFrames[0].source.origin))) {\n\t\t\tdata.label.textContent = nls.localize('showMoreAndOrigin', \"Show {0} More: {1}\", stackFrames.length, stackFrames[0].source.origin);\n\t\t} else {\n\t\t\tdata.label.textContent = nls.localize('showMoreStackFrames', \"Show {0} More Stack Frames\", stackFrames.length);\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ILabelTemplateData): void {\n\t\t// noop\n\t}\n}\n\nclass CallStackDelegate implements IListVirtualDelegate<CallStackItem> {\n\n\tgetHeight(element: CallStackItem): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: CallStackItem): string {\n\t\tif (isDebugSession(element)) {\n\t\t\treturn SessionsRenderer.ID;\n\t\t}\n\t\tif (element instanceof Thread) {\n\t\t\treturn ThreadsRenderer.ID;\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn StackFramesRenderer.ID;\n\t\t}\n\t\tif (typeof element === 'string') {\n\t\t\treturn ErrorsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ThreadAndSessionIds) {\n\t\t\treturn LoadMoreRenderer.ID;\n\t\t}\n\n\t\t// element instanceof Array\n\t\treturn ShowMoreRenderer.ID;\n\t}\n}\n\nfunction isDebugModel(obj: any): obj is IDebugModel {\n\treturn typeof obj.getSessions === 'function';\n}\n\nfunction isDebugSession(obj: any): obj is IDebugSession {\n\treturn typeof obj.getAllThreads === 'function';\n}\n\nfunction isDeemphasized(frame: IStackFrame): boolean {\n\treturn frame.source.presentationHint === 'deemphasize' || frame.presentationHint === 'deemphasize';\n}\n\nclass CallStackDataSource implements IAsyncDataSource<IDebugModel, CallStackItem> {\n\tdeemphasizedStackFramesToShow: IStackFrame[];\n\n\tconstructor(private debugService: IDebugService) { }\n\n\thasChildren(element: IDebugModel | CallStackItem): boolean {\n\t\treturn isDebugModel(element) || isDebugSession(element) || (element instanceof Thread && element.stopped);\n\t}\n\n\tgetChildren(element: IDebugModel | CallStackItem): Promise<CallStackItem[]> {\n\t\tif (isDebugModel(element)) {\n\t\t\tconst sessions = element.getSessions();\n\t\t\tif (sessions.length === 0) {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\tif (sessions.length > 1 || this.debugService.getViewModel().isMultiSessionView()) {\n\t\t\t\treturn Promise.resolve(sessions.filter(s => !s.parentSession));\n\t\t\t}\n\n\t\t\tconst threads = sessions[0].getAllThreads();\n\t\t\t// Only show the threads in the call stack if there is more than 1 thread.\n\t\t\treturn threads.length === 1 ? this.getThreadChildren(<Thread>threads[0]) : Promise.resolve(threads);\n\t\t} else if (isDebugSession(element)) {\n\t\t\tconst childSessions = this.debugService.getModel().getSessions().filter(s => s.parentSession === element);\n\t\t\tif (childSessions.length) {\n\t\t\t\treturn Promise.resolve(childSessions);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(element.getAllThreads());\n\t\t} else {\n\t\t\treturn this.getThreadChildren(<Thread>element);\n\t\t}\n\t}\n\n\tprivate getThreadChildren(thread: Thread): Promise<CallStackItem[]> {\n\t\treturn this.getThreadCallstack(thread).then(children => {\n\t\t\t// Check if some stack frames should be hidden under a parent element since they are deemphasized\n\t\t\tconst result: CallStackItem[] = [];\n\t\t\tchildren.forEach((child, index) => {\n\t\t\t\tif (child instanceof StackFrame && child.source && isDeemphasized(child)) {\n\t\t\t\t\t// Check if the user clicked to show the deemphasized source\n\t\t\t\t\tif (this.deemphasizedStackFramesToShow.indexOf(child) === -1) {\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tconst last = result[result.length - 1];\n\t\t\t\t\t\t\tif (last instanceof Array) {\n\t\t\t\t\t\t\t\t// Collect all the stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\t\tlast.push(child);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nextChild = index < children.length - 1 ? children[index + 1] : undefined;\n\t\t\t\t\t\tif (nextChild instanceof StackFrame && nextChild.source && isDeemphasized(nextChild)) {\n\t\t\t\t\t\t\t// Start collecting stackframes that will be \"collapsed\"\n\t\t\t\t\t\t\tresult.push([child]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(child);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate getThreadCallstack(thread: Thread): Promise<Array<IStackFrame | string | ThreadAndSessionIds>> {\n\t\tlet callStack: any[] = thread.getCallStack();\n\t\tlet callStackPromise: Promise<any> = Promise.resolve(null);\n\t\tif (!callStack || !callStack.length) {\n\t\t\tcallStackPromise = thread.fetchCallStack().then(() => callStack = thread.getCallStack());\n\t\t}\n\n\t\treturn callStackPromise.then(() => {\n\t\t\tif (callStack.length === 1 && thread.session.capabilities.supportsDelayedStackTraceLoading && thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > 1) {\n\t\t\t\t// To reduce flashing of the call stack view simply append the stale call stack\n\t\t\t\t// once we have the correct data the tree will refresh and we will no longer display it.\n\t\t\t\tcallStack = callStack.concat(thread.getStaleCallStack().slice(1));\n\t\t\t}\n\n\t\t\tif (thread.stoppedDetails && thread.stoppedDetails.framesErrorMessage) {\n\t\t\t\tcallStack = callStack.concat([thread.stoppedDetails.framesErrorMessage]);\n\t\t\t}\n\t\t\tif (thread.stoppedDetails && thread.stoppedDetails.totalFrames && thread.stoppedDetails.totalFrames > callStack.length && callStack.length > 1) {\n\t\t\t\tcallStack = callStack.concat([new ThreadAndSessionIds(thread.session.getId(), thread.threadId)]);\n\t\t\t}\n\n\t\t\treturn callStack;\n\t\t});\n\t}\n}\n\nclass CallStackAccessibilityProvider implements IAccessibilityProvider<CallStackItem> {\n\tgetAriaLabel(element: CallStackItem): string {\n\t\tif (element instanceof Thread) {\n\t\t\treturn nls.localize('threadAriaLabel', \"Thread {0}, callstack, debug\", (<Thread>element).name);\n\t\t}\n\t\tif (element instanceof StackFrame) {\n\t\t\treturn nls.localize('stackFrameAriaLabel', \"Stack Frame {0} line {1} {2}, callstack, debug\", element.name, element.range.startLineNumber, element.getSpecificSourceName());\n\t\t}\n\t\tif (isDebugSession(element)) {\n\t\t\treturn nls.localize('sessionLabel', \"Debug Session {0}\", element.getLabel());\n\t\t}\n\t\tif (typeof element === 'string') {\n\t\t\treturn element;\n\t\t}\n\t\tif (element instanceof Array) {\n\t\t\treturn nls.localize('showMoreStackFrames', \"Show {0} More Stack Frames\", element.length);\n\t\t}\n\n\t\t// element instanceof ThreadAndSessionIds\n\t\treturn nls.localize('loadMoreStackFrames', \"Load More Stack Frames\");\n\t}\n}\n"]}]}