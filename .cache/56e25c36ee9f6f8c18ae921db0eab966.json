{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelens.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelens.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nfunction getCodeLensData(model, token) {\n    var symbols = [];\n    var provider = modes_1.CodeLensProviderRegistry.ordered(model);\n    var promises = provider.map(function (provider) { return Promise.resolve(provider.provideCodeLenses(model, token)).then(function (result) {\n        if (Array.isArray(result)) {\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n                var symbol = result_1[_i];\n                symbols.push({ symbol: symbol, provider: provider });\n            }\n        }\n    }).catch(errors_1.onUnexpectedExternalError); });\n    return Promise.all(promises).then(function () {\n        return arrays_1.mergeSort(symbols, function (a, b) {\n            // sort by lineNumber, provider-rank, and column\n            if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n                return -1;\n            }\n            else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\n                return 1;\n            }\n            else if (provider.indexOf(a.provider) < provider.indexOf(b.provider)) {\n                return -1;\n            }\n            else if (provider.indexOf(a.provider) > provider.indexOf(b.provider)) {\n                return 1;\n            }\n            else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n                return -1;\n            }\n            else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    });\n}\nexports.getCodeLensData = getCodeLensData;\neditorExtensions_1.registerLanguageCommand('_executeCodeLensProvider', function (accessor, args) {\n    var resource = args.resource, itemResolveCount = args.itemResolveCount;\n    if (!(resource instanceof uri_1.URI)) {\n        throw errors_1.illegalArgument();\n    }\n    var model = accessor.get(modelService_1.IModelService).getModel(resource);\n    if (!model) {\n        throw errors_1.illegalArgument();\n    }\n    var result = [];\n    return getCodeLensData(model, cancellation_1.CancellationToken.None).then(function (value) {\n        var resolve = [];\n        var _loop_1 = function (item) {\n            if (typeof itemResolveCount === 'undefined' || Boolean(item.symbol.command)) {\n                result.push(item.symbol);\n            }\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, cancellation_1.CancellationToken.None)).then(function (symbol) { return result.push(symbol || item.symbol); }));\n            }\n        };\n        for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n            var item = value_1[_i];\n            _loop_1(item);\n        }\n        return Promise.all(resolve);\n    }).then(function () {\n        return result;\n    });\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelens.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelens.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { illegalArgument, onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { registerLanguageCommand } from 'vs/editor/browser/editorExtensions';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { CodeLensProvider, CodeLensProviderRegistry, ICodeLensSymbol } from 'vs/editor/common/modes';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\nexport interface ICodeLensData {\n\tsymbol: ICodeLensSymbol;\n\tprovider: CodeLensProvider;\n}\n\nexport function getCodeLensData(model: ITextModel, token: CancellationToken): Promise<ICodeLensData[]> {\n\n\tconst symbols: ICodeLensData[] = [];\n\tconst provider = CodeLensProviderRegistry.ordered(model);\n\n\tconst promises = provider.map(provider => Promise.resolve(provider.provideCodeLenses(model, token)).then(result => {\n\t\tif (Array.isArray(result)) {\n\t\t\tfor (let symbol of result) {\n\t\t\t\tsymbols.push({ symbol, provider });\n\t\t\t}\n\t\t}\n\t}).catch(onUnexpectedExternalError));\n\n\treturn Promise.all(promises).then(() => {\n\n\t\treturn mergeSort(symbols, (a, b) => {\n\t\t\t// sort by lineNumber, provider-rank, and column\n\t\t\tif (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n\t\t\t\treturn -1;\n\t\t\t} else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\n\t\t\t\treturn 1;\n\t\t\t} else if (provider.indexOf(a.provider) < provider.indexOf(b.provider)) {\n\t\t\t\treturn -1;\n\t\t\t} else if (provider.indexOf(a.provider) > provider.indexOf(b.provider)) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n\t\t\t\treturn -1;\n\t\t\t} else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t});\n}\n\nregisterLanguageCommand('_executeCodeLensProvider', function (accessor, args) {\n\n\tlet { resource, itemResolveCount } = args;\n\tif (!(resource instanceof URI)) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst result: ICodeLensSymbol[] = [];\n\treturn getCodeLensData(model, CancellationToken.None).then(value => {\n\n\t\tlet resolve: Promise<any>[] = [];\n\n\t\tfor (const item of value) {\n\t\t\tif (typeof itemResolveCount === 'undefined' || Boolean(item.symbol.command)) {\n\t\t\t\tresult.push(item.symbol);\n\t\t\t} else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\n\t\t\t\tresolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(resolve);\n\n\t}).then(() => {\n\t\treturn result;\n\t});\n});\n"]}]}