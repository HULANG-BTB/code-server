{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issue.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issue.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IWorkbenchIssueService = instantiation_1.createDecorator('workbenchIssueService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issue.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/issue/electron-browser/issue.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAGpE,QAAA,sBAAsB,GAAG,+BAAe,CAAyB,uBAAuB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IssueReporterData } from 'vs/platform/issue/common/issue';\n\nexport const IWorkbenchIssueService = createDecorator<IWorkbenchIssueService>('workbenchIssueService');\n\nexport interface IWorkbenchIssueService {\n\t_serviceBrand: any;\n\topenReporter(dataOverrides?: Partial<IssueReporterData>): Promise<void>;\n\topenProcessExplorer(): Promise<void>;\n}\n"]}]}