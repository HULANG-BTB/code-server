{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/touch.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/touch.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar DomUtils = require(\"vs/base/browser/dom\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar EventType;\n(function (EventType) {\n    EventType.Tap = '-monaco-gesturetap';\n    EventType.Change = '-monaco-gesturechange';\n    EventType.Start = '-monaco-gesturestart';\n    EventType.End = '-monaco-gesturesend';\n    EventType.Contextmenu = '-monaco-gesturecontextmenu';\n})(EventType = exports.EventType || (exports.EventType = {}));\nvar Gesture = /** @class */ (function (_super) {\n    tslib_1.__extends(Gesture, _super);\n    function Gesture() {\n        var _this = _super.call(this) || this;\n        _this.activeTouches = {};\n        _this.handle = null;\n        _this.targets = [];\n        _this._register(DomUtils.addDisposableListener(document, 'touchstart', function (e) { return _this.onTouchStart(e); }));\n        _this._register(DomUtils.addDisposableListener(document, 'touchend', function (e) { return _this.onTouchEnd(e); }));\n        _this._register(DomUtils.addDisposableListener(document, 'touchmove', function (e) { return _this.onTouchMove(e); }));\n        return _this;\n    }\n    Gesture.addTarget = function (element) {\n        if (!Gesture.isTouchDevice()) {\n            return;\n        }\n        if (!Gesture.INSTANCE) {\n            Gesture.INSTANCE = new Gesture();\n        }\n        Gesture.INSTANCE.targets.push(element);\n    };\n    Gesture.isTouchDevice = function () {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || window.navigator.msMaxTouchPoints > 0;\n    };\n    Gesture.prototype.dispose = function () {\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    Gesture.prototype.onTouchStart = function (e) {\n        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        for (var i = 0, len = e.targetTouches.length; i < len; i++) {\n            var touch = e.targetTouches.item(i);\n            this.activeTouches[touch.identifier] = {\n                id: touch.identifier,\n                initialTarget: touch.target,\n                initialTimeStamp: timestamp,\n                initialPageX: touch.pageX,\n                initialPageY: touch.pageY,\n                rollingTimestamps: [timestamp],\n                rollingPageX: [touch.pageX],\n                rollingPageY: [touch.pageY]\n            };\n            var evt = this.newGestureEvent(EventType.Start, touch.target);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    };\n    Gesture.prototype.onTouchEnd = function (e) {\n        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        var activeTouchCount = Object.keys(this.activeTouches).length;\n        var _loop_1 = function (i, len) {\n            var touch = e.changedTouches.item(i);\n            if (!this_1.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('move of an UNKNOWN touch', touch);\n                return \"continue\";\n            }\n            var data = this_1.activeTouches[touch.identifier], holdTime = Date.now() - data.initialTimeStamp;\n            if (holdTime < Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                var evt = this_1.newGestureEvent(EventType.Tap, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this_1.dispatchEvent(evt);\n            }\n            else if (holdTime >= Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                var evt = this_1.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this_1.dispatchEvent(evt);\n            }\n            else if (activeTouchCount === 1) {\n                var finalX = arrays.tail(data.rollingPageX);\n                var finalY = arrays.tail(data.rollingPageY);\n                var deltaT = arrays.tail(data.rollingTimestamps) - data.rollingTimestamps[0];\n                var deltaX = finalX - data.rollingPageX[0];\n                var deltaY = finalY - data.rollingPageY[0];\n                // We need to get all the dispatch targets on the start of the inertia event\n                var dispatchTo = this_1.targets.filter(function (t) { return data.initialTarget instanceof Node && t.contains(data.initialTarget); });\n                this_1.inertia(dispatchTo, timestamp, // time now\n                Math.abs(deltaX) / deltaT, // speed\n                deltaX > 0 ? 1 : -1, // x direction\n                finalX, // x now\n                Math.abs(deltaY) / deltaT, // y speed\n                deltaY > 0 ? 1 : -1, // y direction\n                finalY // y now\n                );\n            }\n            this_1.dispatchEvent(this_1.newGestureEvent(EventType.End, data.initialTarget));\n            // forget about this touch\n            delete this_1.activeTouches[touch.identifier];\n        };\n        var this_1 = this;\n        for (var i = 0, len = e.changedTouches.length; i < len; i++) {\n            _loop_1(i, len);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    };\n    Gesture.prototype.newGestureEvent = function (type, intialTarget) {\n        var event = document.createEvent('CustomEvent');\n        event.initEvent(type, false, true);\n        event.initialTarget = intialTarget;\n        return event;\n    };\n    Gesture.prototype.dispatchEvent = function (event) {\n        var _this = this;\n        this.targets.forEach(function (target) {\n            if (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {\n                target.dispatchEvent(event);\n                _this.dispatched = true;\n            }\n        });\n    };\n    Gesture.prototype.inertia = function (dispatchTo, t1, vX, dirX, x, vY, dirY, y) {\n        var _this = this;\n        this.handle = DomUtils.scheduleAtNextAnimationFrame(function () {\n            var now = Date.now();\n            // velocity: old speed + accel_over_time\n            var deltaT = now - t1, delta_pos_x = 0, delta_pos_y = 0, stopped = true;\n            vX += Gesture.SCROLL_FRICTION * deltaT;\n            vY += Gesture.SCROLL_FRICTION * deltaT;\n            if (vX > 0) {\n                stopped = false;\n                delta_pos_x = dirX * vX * deltaT;\n            }\n            if (vY > 0) {\n                stopped = false;\n                delta_pos_y = dirY * vY * deltaT;\n            }\n            // dispatch translation event\n            var evt = _this.newGestureEvent(EventType.Change);\n            evt.translationX = delta_pos_x;\n            evt.translationY = delta_pos_y;\n            dispatchTo.forEach(function (d) { return d.dispatchEvent(evt); });\n            if (!stopped) {\n                _this.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n            }\n        });\n    };\n    Gesture.prototype.onTouchMove = function (e) {\n        var timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        for (var i = 0, len = e.changedTouches.length; i < len; i++) {\n            var touch = e.changedTouches.item(i);\n            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('end of an UNKNOWN touch', touch);\n                continue;\n            }\n            var data = this.activeTouches[touch.identifier];\n            var evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n            evt.translationX = touch.pageX - arrays.tail(data.rollingPageX);\n            evt.translationY = touch.pageY - arrays.tail(data.rollingPageY);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n            // only keep a few data points, to average the final speed\n            if (data.rollingPageX.length > 3) {\n                data.rollingPageX.shift();\n                data.rollingPageY.shift();\n                data.rollingTimestamps.shift();\n            }\n            data.rollingPageX.push(touch.pageX);\n            data.rollingPageY.push(touch.pageY);\n            data.rollingTimestamps.push(timestamp);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    };\n    Gesture.SCROLL_FRICTION = -0.005;\n    Gesture.HOLD_DELAY = 700;\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], Gesture, \"isTouchDevice\", null);\n    return Gesture;\n}(lifecycle_1.Disposable));\nexports.Gesture = Gesture;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/touch.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/touch.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport * as DomUtils from 'vs/base/browser/dom';\nimport { memoize } from 'vs/base/common/decorators';\n\nexport namespace EventType {\n\texport const Tap = '-monaco-gesturetap';\n\texport const Change = '-monaco-gesturechange';\n\texport const Start = '-monaco-gesturestart';\n\texport const End = '-monaco-gesturesend';\n\texport const Contextmenu = '-monaco-gesturecontextmenu';\n}\n\ninterface TouchData {\n\tid: number;\n\tinitialTarget: EventTarget;\n\tinitialTimeStamp: number;\n\tinitialPageX: number;\n\tinitialPageY: number;\n\trollingTimestamps: number[];\n\trollingPageX: number[];\n\trollingPageY: number[];\n}\n\nexport interface GestureEvent extends MouseEvent {\n\tinitialTarget: EventTarget | undefined;\n\ttranslationX: number;\n\ttranslationY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Touch {\n\tidentifier: number;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n\tradiusX: number;\n\tradiusY: number;\n\trotationAngle: number;\n\tforce: number;\n\ttarget: Element;\n}\n\ninterface TouchList {\n\t[i: number]: Touch;\n\tlength: number;\n\titem(index: number): Touch;\n\tidentifiedTouch(id: number): Touch;\n}\n\ninterface TouchEvent extends Event {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n}\n\nexport class Gesture extends Disposable {\n\n\tprivate static readonly SCROLL_FRICTION = -0.005;\n\tprivate static INSTANCE: Gesture;\n\tprivate static HOLD_DELAY = 700;\n\n\tprivate dispatched: boolean;\n\tprivate targets: HTMLElement[];\n\tprivate handle: IDisposable | null;\n\n\tprivate activeTouches: { [id: number]: TouchData; };\n\n\tprivate constructor() {\n\t\tsuper();\n\n\t\tthis.activeTouches = {};\n\t\tthis.handle = null;\n\t\tthis.targets = [];\n\t\tthis._register(DomUtils.addDisposableListener(document, 'touchstart', (e: TouchEvent) => this.onTouchStart(e)));\n\t\tthis._register(DomUtils.addDisposableListener(document, 'touchend', (e: TouchEvent) => this.onTouchEnd(e)));\n\t\tthis._register(DomUtils.addDisposableListener(document, 'touchmove', (e: TouchEvent) => this.onTouchMove(e)));\n\t}\n\n\tpublic static addTarget(element: HTMLElement): void {\n\t\tif (!Gesture.isTouchDevice()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!Gesture.INSTANCE) {\n\t\t\tGesture.INSTANCE = new Gesture();\n\t\t}\n\n\t\tGesture.INSTANCE.targets.push(element);\n\t}\n\n\t@memoize\n\tprivate static isTouchDevice(): boolean {\n\t\treturn 'ontouchstart' in window as any || navigator.maxTouchPoints > 0 || window.navigator.msMaxTouchPoints > 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.dispose();\n\t\t\tthis.handle = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate onTouchStart(e: TouchEvent): void {\n\t\tlet timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tif (this.handle) {\n\t\t\tthis.handle.dispose();\n\t\t\tthis.handle = null;\n\t\t}\n\n\t\tfor (let i = 0, len = e.targetTouches.length; i < len; i++) {\n\t\t\tlet touch = e.targetTouches.item(i);\n\n\t\t\tthis.activeTouches[touch.identifier] = {\n\t\t\t\tid: touch.identifier,\n\t\t\t\tinitialTarget: touch.target,\n\t\t\t\tinitialTimeStamp: timestamp,\n\t\t\t\tinitialPageX: touch.pageX,\n\t\t\t\tinitialPageY: touch.pageY,\n\t\t\t\trollingTimestamps: [timestamp],\n\t\t\t\trollingPageX: [touch.pageX],\n\t\t\t\trollingPageY: [touch.pageY]\n\t\t\t};\n\n\t\t\tlet evt = this.newGestureEvent(EventType.Start, touch.target);\n\t\t\tevt.pageX = touch.pageX;\n\t\t\tevt.pageY = touch.pageY;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n\n\tprivate onTouchEnd(e: TouchEvent): void {\n\t\tlet timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tlet activeTouchCount = Object.keys(this.activeTouches).length;\n\n\t\tfor (let i = 0, len = e.changedTouches.length; i < len; i++) {\n\n\t\t\tlet touch = e.changedTouches.item(i);\n\n\t\t\tif (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n\t\t\t\tconsole.warn('move of an UNKNOWN touch', touch);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet data = this.activeTouches[touch.identifier],\n\t\t\t\tholdTime = Date.now() - data.initialTimeStamp;\n\n\t\t\tif (holdTime < Gesture.HOLD_DELAY\n\t\t\t\t&& Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n\t\t\t\t&& Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n\n\t\t\t\tlet evt = this.newGestureEvent(EventType.Tap, data.initialTarget);\n\t\t\t\tevt.pageX = arrays.tail(data.rollingPageX);\n\t\t\t\tevt.pageY = arrays.tail(data.rollingPageY);\n\t\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t} else if (holdTime >= Gesture.HOLD_DELAY\n\t\t\t\t&& Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n\t\t\t\t&& Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n\n\t\t\t\tlet evt = this.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n\t\t\t\tevt.pageX = arrays.tail(data.rollingPageX);\n\t\t\t\tevt.pageY = arrays.tail(data.rollingPageY);\n\t\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t} else if (activeTouchCount === 1) {\n\t\t\t\tlet finalX = arrays.tail(data.rollingPageX);\n\t\t\t\tlet finalY = arrays.tail(data.rollingPageY);\n\n\t\t\t\tlet deltaT = arrays.tail(data.rollingTimestamps) - data.rollingTimestamps[0];\n\t\t\t\tlet deltaX = finalX - data.rollingPageX[0];\n\t\t\t\tlet deltaY = finalY - data.rollingPageY[0];\n\n\t\t\t\t// We need to get all the dispatch targets on the start of the inertia event\n\t\t\t\tconst dispatchTo = this.targets.filter(t => data.initialTarget instanceof Node && t.contains(data.initialTarget));\n\t\t\t\tthis.inertia(dispatchTo, timestamp,\t\t// time now\n\t\t\t\t\tMath.abs(deltaX) / deltaT,\t// speed\n\t\t\t\t\tdeltaX > 0 ? 1 : -1,\t\t// x direction\n\t\t\t\t\tfinalX,\t\t\t\t\t\t// x now\n\t\t\t\t\tMath.abs(deltaY) / deltaT,  // y speed\n\t\t\t\t\tdeltaY > 0 ? 1 : -1,\t\t// y direction\n\t\t\t\t\tfinalY\t\t\t\t\t\t// y now\n\t\t\t\t);\n\t\t\t}\n\n\n\t\t\tthis.dispatchEvent(this.newGestureEvent(EventType.End, data.initialTarget));\n\t\t\t// forget about this touch\n\t\t\tdelete this.activeTouches[touch.identifier];\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n\n\tprivate newGestureEvent(type: string, intialTarget?: EventTarget): GestureEvent {\n\t\tlet event = <GestureEvent>(<any>document.createEvent('CustomEvent'));\n\t\tevent.initEvent(type, false, true);\n\t\tevent.initialTarget = intialTarget;\n\t\treturn event;\n\t}\n\n\tprivate dispatchEvent(event: GestureEvent): void {\n\t\tthis.targets.forEach(target => {\n\t\t\tif (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {\n\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t\tthis.dispatched = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate inertia(dispatchTo: EventTarget[], t1: number, vX: number, dirX: number, x: number, vY: number, dirY: number, y: number): void {\n\t\tthis.handle = DomUtils.scheduleAtNextAnimationFrame(() => {\n\t\t\tlet now = Date.now();\n\n\t\t\t// velocity: old speed + accel_over_time\n\t\t\tlet deltaT = now - t1,\n\t\t\t\tdelta_pos_x = 0, delta_pos_y = 0,\n\t\t\t\tstopped = true;\n\n\t\t\tvX += Gesture.SCROLL_FRICTION * deltaT;\n\t\t\tvY += Gesture.SCROLL_FRICTION * deltaT;\n\n\t\t\tif (vX > 0) {\n\t\t\t\tstopped = false;\n\t\t\t\tdelta_pos_x = dirX * vX * deltaT;\n\t\t\t}\n\n\t\t\tif (vY > 0) {\n\t\t\t\tstopped = false;\n\t\t\t\tdelta_pos_y = dirY * vY * deltaT;\n\t\t\t}\n\n\t\t\t// dispatch translation event\n\t\t\tlet evt = this.newGestureEvent(EventType.Change);\n\t\t\tevt.translationX = delta_pos_x;\n\t\t\tevt.translationY = delta_pos_y;\n\t\t\tdispatchTo.forEach(d => d.dispatchEvent(evt));\n\n\t\t\tif (!stopped) {\n\t\t\t\tthis.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onTouchMove(e: TouchEvent): void {\n\t\tlet timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tfor (let i = 0, len = e.changedTouches.length; i < len; i++) {\n\n\t\t\tlet touch = e.changedTouches.item(i);\n\n\t\t\tif (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n\t\t\t\tconsole.warn('end of an UNKNOWN touch', touch);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet data = this.activeTouches[touch.identifier];\n\n\t\t\tlet evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n\t\t\tevt.translationX = touch.pageX - arrays.tail(data.rollingPageX);\n\t\t\tevt.translationY = touch.pageY - arrays.tail(data.rollingPageY);\n\t\t\tevt.pageX = touch.pageX;\n\t\t\tevt.pageY = touch.pageY;\n\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t// only keep a few data points, to average the final speed\n\t\t\tif (data.rollingPageX.length > 3) {\n\t\t\t\tdata.rollingPageX.shift();\n\t\t\t\tdata.rollingPageY.shift();\n\t\t\t\tdata.rollingTimestamps.shift();\n\t\t\t}\n\n\t\t\tdata.rollingPageX.push(touch.pageX);\n\t\t\tdata.rollingPageY.push(touch.pageY);\n\t\t\tdata.rollingTimestamps.push(timestamp);\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n}\n"]}]}