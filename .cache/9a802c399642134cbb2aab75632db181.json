{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/aria/aria.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/aria/aria.ts","mtime":1555846338024},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./aria\");\nvar nls = require(\"vs/nls\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar dom = require(\"vs/base/browser/dom\");\nvar ariaContainer;\nvar alertContainer;\nvar statusContainer;\nfunction setARIAContainer(parent) {\n    ariaContainer = document.createElement('div');\n    ariaContainer.className = 'monaco-aria-container';\n    alertContainer = document.createElement('div');\n    alertContainer.className = 'monaco-alert';\n    alertContainer.setAttribute('role', 'alert');\n    alertContainer.setAttribute('aria-atomic', 'true');\n    ariaContainer.appendChild(alertContainer);\n    statusContainer = document.createElement('div');\n    statusContainer.className = 'monaco-status';\n    statusContainer.setAttribute('role', 'status');\n    statusContainer.setAttribute('aria-atomic', 'true');\n    ariaContainer.appendChild(statusContainer);\n    parent.appendChild(ariaContainer);\n}\nexports.setARIAContainer = setARIAContainer;\n/**\n * Given the provided message, will make sure that it is read as alert to screen readers.\n */\nfunction alert(msg, disableRepeat) {\n    insertMessage(alertContainer, msg, disableRepeat);\n}\nexports.alert = alert;\n/**\n * Given the provided message, will make sure that it is read as status to screen readers.\n */\nfunction status(msg, disableRepeat) {\n    if (browser_1.isMacintosh) {\n        alert(msg, disableRepeat); // VoiceOver does not seem to support status role\n    }\n    else {\n        insertMessage(statusContainer, msg, disableRepeat);\n    }\n}\nexports.status = status;\nvar repeatedTimes = 0;\nvar prevText = undefined;\nfunction insertMessage(target, msg, disableRepeat) {\n    if (!ariaContainer) {\n        return;\n    }\n    // If the same message should be inserted that is already present, a screen reader would\n    // not announce this message because it matches the previous one. As a workaround, we\n    // alter the message with the number of occurences unless this is explicitly disabled\n    // via the disableRepeat flag.\n    if (!disableRepeat) {\n        if (prevText === msg) {\n            repeatedTimes++;\n        }\n        else {\n            prevText = msg;\n            repeatedTimes = 0;\n        }\n        switch (repeatedTimes) {\n            case 0: break;\n            case 1:\n                msg = nls.localize('repeated', \"{0} (occurred again)\", msg);\n                break;\n            default:\n                msg = nls.localize('repeatedNtimes', \"{0} (occurred {1} times)\", msg, repeatedTimes);\n                break;\n        }\n    }\n    dom.clearNode(target);\n    target.textContent = msg;\n    // See https://www.paciellogroup.com/blog/2012/06/html5-accessibility-chops-aria-rolealert-browser-support/\n    target.style.visibility = 'hidden';\n    target.style.visibility = 'visible';\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/aria/aria.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/aria/aria.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,yBAAuB;AACvB,4BAA8B;AAC9B,mDAAsD;AACtD,yCAA2C;AAE3C,IAAI,aAA0B,CAAC;AAC/B,IAAI,cAA2B,CAAC;AAChC,IAAI,eAA4B,CAAC;AACjC,SAAgB,gBAAgB,CAAC,MAAmB;IACnD,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,aAAa,CAAC,SAAS,GAAG,uBAAuB,CAAC;IAElD,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC/C,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC;IAC1C,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7C,cAAc,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACnD,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IAE1C,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAChD,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC;IAC5C,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC/C,eAAe,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACpD,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;IAE3C,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;AACnC,CAAC;AAjBD,4CAiBC;AAED;;GAEG;AACH,SAAgB,KAAK,CAAC,GAAW,EAAE,aAAuB;IACzD,aAAa,CAAC,cAAc,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;AACnD,CAAC;AAFD,sBAEC;AAED;;GAEG;AACH,SAAgB,MAAM,CAAC,GAAW,EAAE,aAAuB;IAC1D,IAAI,qBAAW,EAAE;QAChB,KAAK,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,iDAAiD;KAC5E;SAAM;QACN,aAAa,CAAC,eAAe,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;KACnD;AACF,CAAC;AAND,wBAMC;AAED,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,IAAI,QAAQ,GAAuB,SAAS,CAAC;AAC7C,SAAS,aAAa,CAAC,MAAmB,EAAE,GAAW,EAAE,aAAuB;IAC/E,IAAI,CAAC,aAAa,EAAE;QACnB,OAAO;KACP;IAED,wFAAwF;IACxF,qFAAqF;IACrF,qFAAqF;IACrF,8BAA8B;IAC9B,IAAI,CAAC,aAAa,EAAE;QACnB,IAAI,QAAQ,KAAK,GAAG,EAAE;YACrB,aAAa,EAAE,CAAC;SAChB;aAAM;YACN,QAAQ,GAAG,GAAG,CAAC;YACf,aAAa,GAAG,CAAC,CAAC;SAClB;QAED,QAAQ,aAAa,EAAE;YACtB,KAAK,CAAC,CAAC,CAAC,MAAM;YACd,KAAK,CAAC;gBAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,sBAAsB,EAAE,GAAG,CAAC,CAAC;gBAAC,MAAM;YAC3E;gBAAS,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,0BAA0B,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;gBAAC,MAAM;SACrG;KACD;IAED,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACtB,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC;IAEzB,2GAA2G;IAC3G,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;IACnC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;AACrC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./aria';\nimport * as nls from 'vs/nls';\nimport { isMacintosh } from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\n\nlet ariaContainer: HTMLElement;\nlet alertContainer: HTMLElement;\nlet statusContainer: HTMLElement;\nexport function setARIAContainer(parent: HTMLElement) {\n\tariaContainer = document.createElement('div');\n\tariaContainer.className = 'monaco-aria-container';\n\n\talertContainer = document.createElement('div');\n\talertContainer.className = 'monaco-alert';\n\talertContainer.setAttribute('role', 'alert');\n\talertContainer.setAttribute('aria-atomic', 'true');\n\tariaContainer.appendChild(alertContainer);\n\n\tstatusContainer = document.createElement('div');\n\tstatusContainer.className = 'monaco-status';\n\tstatusContainer.setAttribute('role', 'status');\n\tstatusContainer.setAttribute('aria-atomic', 'true');\n\tariaContainer.appendChild(statusContainer);\n\n\tparent.appendChild(ariaContainer);\n}\n\n/**\n * Given the provided message, will make sure that it is read as alert to screen readers.\n */\nexport function alert(msg: string, disableRepeat?: boolean): void {\n\tinsertMessage(alertContainer, msg, disableRepeat);\n}\n\n/**\n * Given the provided message, will make sure that it is read as status to screen readers.\n */\nexport function status(msg: string, disableRepeat?: boolean): void {\n\tif (isMacintosh) {\n\t\talert(msg, disableRepeat); // VoiceOver does not seem to support status role\n\t} else {\n\t\tinsertMessage(statusContainer, msg, disableRepeat);\n\t}\n}\n\nlet repeatedTimes = 0;\nlet prevText: string | undefined = undefined;\nfunction insertMessage(target: HTMLElement, msg: string, disableRepeat?: boolean): void {\n\tif (!ariaContainer) {\n\t\treturn;\n\t}\n\n\t// If the same message should be inserted that is already present, a screen reader would\n\t// not announce this message because it matches the previous one. As a workaround, we\n\t// alter the message with the number of occurences unless this is explicitly disabled\n\t// via the disableRepeat flag.\n\tif (!disableRepeat) {\n\t\tif (prevText === msg) {\n\t\t\trepeatedTimes++;\n\t\t} else {\n\t\t\tprevText = msg;\n\t\t\trepeatedTimes = 0;\n\t\t}\n\n\t\tswitch (repeatedTimes) {\n\t\t\tcase 0: break;\n\t\t\tcase 1: msg = nls.localize('repeated', \"{0} (occurred again)\", msg); break;\n\t\t\tdefault: msg = nls.localize('repeatedNtimes', \"{0} (occurred {1} times)\", msg, repeatedTimes); break;\n\t\t}\n\t}\n\n\tdom.clearNode(target);\n\ttarget.textContent = msg;\n\n\t// See https://www.paciellogroup.com/blog/2012/06/html5-accessibility-chops-aria-rolealert-browser-support/\n\ttarget.style.visibility = 'hidden';\n\ttarget.style.visibility = 'visible';\n}"]}]}