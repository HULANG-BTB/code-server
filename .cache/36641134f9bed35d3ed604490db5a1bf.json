{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/resourceEditorInput.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/resourceEditorInput.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar resourceEditorModel_1 = require(\"vs/workbench/common/editor/resourceEditorModel\");\n/**\n * A read-only text editor input whos contents are made of the provided resource that points to an existing\n * code editor model.\n */\nvar ResourceEditorInput = /** @class */ (function (_super) {\n    tslib_1.__extends(ResourceEditorInput, _super);\n    function ResourceEditorInput(name, description, resource, textModelResolverService) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.description = description;\n        _this.resource = resource;\n        _this.textModelResolverService = textModelResolverService;\n        _this.name = name;\n        _this.description = description;\n        _this.resource = resource;\n        return _this;\n    }\n    ResourceEditorInput.prototype.getResource = function () {\n        return this.resource;\n    };\n    ResourceEditorInput.prototype.getTypeId = function () {\n        return ResourceEditorInput.ID;\n    };\n    ResourceEditorInput.prototype.getName = function () {\n        return this.name;\n    };\n    ResourceEditorInput.prototype.setName = function (name) {\n        if (this.name !== name) {\n            this.name = name;\n            this._onDidChangeLabel.fire();\n        }\n    };\n    ResourceEditorInput.prototype.getDescription = function () {\n        return this.description;\n    };\n    ResourceEditorInput.prototype.setDescription = function (description) {\n        if (this.description !== description) {\n            this.description = description;\n            this._onDidChangeLabel.fire();\n        }\n    };\n    ResourceEditorInput.prototype.resolve = function () {\n        var _this = this;\n        if (!this.modelReference) {\n            this.modelReference = this.textModelResolverService.createModelReference(this.resource);\n        }\n        return this.modelReference.then(function (ref) {\n            var model = ref.object;\n            if (!(model instanceof resourceEditorModel_1.ResourceEditorModel)) {\n                ref.dispose();\n                _this.modelReference = null;\n                return Promise.reject(new Error(\"Unexpected model for ResourceInput: \" + _this.resource));\n            }\n            return model;\n        });\n    };\n    ResourceEditorInput.prototype.matches = function (otherInput) {\n        if (_super.prototype.matches.call(this, otherInput) === true) {\n            return true;\n        }\n        if (otherInput instanceof ResourceEditorInput) {\n            var otherResourceEditorInput = otherInput;\n            // Compare by properties\n            return otherResourceEditorInput.resource.toString() === this.resource.toString();\n        }\n        return false;\n    };\n    ResourceEditorInput.prototype.dispose = function () {\n        if (this.modelReference) {\n            this.modelReference.then(function (ref) { return ref.dispose(); });\n            this.modelReference = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    ResourceEditorInput.ID = 'workbench.editors.resourceEditorInput';\n    ResourceEditorInput = tslib_1.__decorate([\n        tslib_1.__param(3, resolverService_1.ITextModelService)\n    ], ResourceEditorInput);\n    return ResourceEditorInput;\n}(editor_1.EditorInput));\nexports.ResourceEditorInput = ResourceEditorInput;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/resourceEditorInput.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/resourceEditorInput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorInput, ITextEditorModel } from 'vs/workbench/common/editor';\nimport { URI } from 'vs/base/common/uri';\nimport { IReference } from 'vs/base/common/lifecycle';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ResourceEditorModel } from 'vs/workbench/common/editor/resourceEditorModel';\n\n/**\n * A read-only text editor input whos contents are made of the provided resource that points to an existing\n * code editor model.\n */\nexport class ResourceEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.editors.resourceEditorInput';\n\n\tprivate modelReference: Promise<IReference<ITextEditorModel>> | null;\n\n\tconstructor(\n\t\tprivate name: string,\n\t\tprivate description: string | null,\n\t\tprivate readonly resource: URI,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper();\n\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.resource = resource;\n\t}\n\n\tgetResource(): URI {\n\t\treturn this.resource;\n\t}\n\n\tgetTypeId(): string {\n\t\treturn ResourceEditorInput.ID;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tsetName(name: string): void {\n\t\tif (this.name !== name) {\n\t\t\tthis.name = name;\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\t}\n\n\tgetDescription(): string | null {\n\t\treturn this.description;\n\t}\n\n\tsetDescription(description: string): void {\n\t\tif (this.description !== description) {\n\t\t\tthis.description = description;\n\t\t\tthis._onDidChangeLabel.fire();\n\t\t}\n\t}\n\n\tresolve(): Promise<ITextEditorModel> {\n\t\tif (!this.modelReference) {\n\t\t\tthis.modelReference = this.textModelResolverService.createModelReference(this.resource);\n\t\t}\n\n\t\treturn this.modelReference.then(ref => {\n\t\t\tconst model = ref.object;\n\n\t\t\tif (!(model instanceof ResourceEditorModel)) {\n\t\t\t\tref.dispose();\n\t\t\t\tthis.modelReference = null;\n\n\t\t\t\treturn Promise.reject<any>(new Error(`Unexpected model for ResourceInput: ${this.resource}`));\n\t\t\t}\n\n\t\t\treturn model;\n\t\t});\n\t}\n\n\tmatches(otherInput: any): boolean {\n\t\tif (super.matches(otherInput) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof ResourceEditorInput) {\n\t\t\tlet otherResourceEditorInput = <ResourceEditorInput>otherInput;\n\n\t\t\t// Compare by properties\n\t\t\treturn otherResourceEditorInput.resource.toString() === this.resource.toString();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdispose(): void {\n\t\tif (this.modelReference) {\n\t\t\tthis.modelReference.then(ref => ref.dispose());\n\t\t\tthis.modelReference = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n"]}]}