{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referenceSearch.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referenceSearch.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar peekViewWidget_1 = require(\"./peekViewWidget\");\nvar referencesController_1 = require(\"./referencesController\");\nvar referencesModel_1 = require(\"./referencesModel\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar embeddedCodeEditorWidget_1 = require(\"vs/editor/browser/widget/embeddedCodeEditorWidget\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar referencesWidget_1 = require(\"vs/editor/contrib/referenceSearch/referencesWidget\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nexports.defaultReferenceSearchOptions = {\n    getMetaTitle: function (model) {\n        return model.references.length > 1 ? nls.localize('meta.titleReference', \" â€“ {0} references\", model.references.length) : '';\n    }\n};\nvar ReferenceController = /** @class */ (function () {\n    function ReferenceController(editor, contextKeyService) {\n        if (editor instanceof embeddedCodeEditorWidget_1.EmbeddedCodeEditorWidget) {\n            peekViewWidget_1.PeekContext.inPeekEditor.bindTo(contextKeyService);\n        }\n    }\n    ReferenceController.prototype.dispose = function () {\n    };\n    ReferenceController.prototype.getId = function () {\n        return ReferenceController.ID;\n    };\n    ReferenceController.ID = 'editor.contrib.referenceController';\n    ReferenceController = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService)\n    ], ReferenceController);\n    return ReferenceController;\n}());\nexports.ReferenceController = ReferenceController;\nvar ReferenceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReferenceAction, _super);\n    function ReferenceAction() {\n        return _super.call(this, {\n            id: 'editor.action.referenceSearch.trigger',\n            label: nls.localize('references.action.label', \"Peek References\"),\n            alias: 'Find All References',\n            precondition: contextkey_1.ContextKeyExpr.and(editorContextKeys_1.EditorContextKeys.hasReferenceProvider, peekViewWidget_1.PeekContext.notInPeekEditor, editorContextKeys_1.EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F12,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            },\n            menuOpts: {\n                group: 'navigation',\n                order: 1.5\n            }\n        }) || this;\n    }\n    ReferenceAction.prototype.run = function (_accessor, editor) {\n        var controller = referencesController_1.ReferencesController.get(editor);\n        if (!controller) {\n            return;\n        }\n        if (editor.hasModel()) {\n            var range_2 = editor.getSelection();\n            var model_1 = editor.getModel();\n            var references = async_1.createCancelablePromise(function (token) { return provideReferences(model_1, range_2.getStartPosition(), token).then(function (references) { return new referencesModel_1.ReferencesModel(references); }); });\n            controller.toggleWidget(range_2, references, exports.defaultReferenceSearchOptions);\n        }\n    };\n    return ReferenceAction;\n}(editorExtensions_1.EditorAction));\nexports.ReferenceAction = ReferenceAction;\neditorExtensions_1.registerEditorContribution(ReferenceController);\neditorExtensions_1.registerEditorAction(ReferenceAction);\nvar findReferencesCommand = function (accessor, resource, position) {\n    if (!(resource instanceof uri_1.URI)) {\n        throw new Error('illegal argument, uri');\n    }\n    if (!position) {\n        throw new Error('illegal argument, position');\n    }\n    var codeEditorService = accessor.get(codeEditorService_1.ICodeEditorService);\n    return codeEditorService.openCodeEditor({ resource: resource }, codeEditorService.getFocusedCodeEditor()).then(function (control) {\n        if (!editorBrowser_1.isCodeEditor(control) || !control.hasModel()) {\n            return undefined;\n        }\n        var controller = referencesController_1.ReferencesController.get(control);\n        if (!controller) {\n            return undefined;\n        }\n        var references = async_1.createCancelablePromise(function (token) { return provideReferences(control.getModel(), position_1.Position.lift(position), token).then(function (references) { return new referencesModel_1.ReferencesModel(references); }); });\n        var range = new range_1.Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        return Promise.resolve(controller.toggleWidget(range, references, exports.defaultReferenceSearchOptions));\n    });\n};\nvar showReferencesCommand = function (accessor, resource, position, references) {\n    if (!(resource instanceof uri_1.URI)) {\n        throw new Error('illegal argument, uri expected');\n    }\n    if (!references) {\n        throw new Error('missing references');\n    }\n    var codeEditorService = accessor.get(codeEditorService_1.ICodeEditorService);\n    return codeEditorService.openCodeEditor({ resource: resource }, codeEditorService.getFocusedCodeEditor()).then(function (control) {\n        if (!editorBrowser_1.isCodeEditor(control)) {\n            return undefined;\n        }\n        var controller = referencesController_1.ReferencesController.get(control);\n        if (!controller) {\n            return undefined;\n        }\n        return controller.toggleWidget(new range_1.Range(position.lineNumber, position.column, position.lineNumber, position.column), async_1.createCancelablePromise(function (_) { return Promise.resolve(new referencesModel_1.ReferencesModel(references)); }), exports.defaultReferenceSearchOptions);\n    });\n};\n// register commands\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: findReferencesCommand\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'editor.action.showReferences',\n    handler: showReferencesCommand,\n    description: {\n        description: 'Show references at a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to show references', constraint: uri_1.URI },\n            { name: 'position', description: 'The position at which to show', constraint: position_1.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n        ]\n    }\n});\nfunction closeActiveReferenceSearch(accessor, args) {\n    withController(accessor, function (controller) { return controller.closeWidget(); });\n}\nfunction openReferenceToSide(accessor, args) {\n    var listService = accessor.get(listService_1.IListService);\n    var focus = listService.lastFocusedList && listService.lastFocusedList.getFocus();\n    if (focus instanceof referencesModel_1.OneReference) {\n        withController(accessor, function (controller) { return controller.openReference(focus, true); });\n    }\n}\nfunction withController(accessor, fn) {\n    var outerEditor = peekViewWidget_1.getOuterEditor(accessor);\n    if (!outerEditor) {\n        return;\n    }\n    var controller = referencesController_1.ReferencesController.get(outerEditor);\n    if (!controller) {\n        return;\n    }\n    fn(controller);\n}\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReference',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    primary: keyCodes_1.KeyCode.F4,\n    when: referencesController_1.ctxReferenceSearchVisible,\n    handler: function (accessor) {\n        withController(accessor, function (controller) {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReferenceFromEmbeddedEditor',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib + 50,\n    primary: keyCodes_1.KeyCode.F4,\n    when: peekViewWidget_1.PeekContext.inPeekEditor,\n    handler: function (accessor) {\n        withController(accessor, function (controller) {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReference',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F4,\n    when: referencesController_1.ctxReferenceSearchVisible,\n    handler: function (accessor) {\n        withController(accessor, function (controller) {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReferenceFromEmbeddedEditor',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib + 50,\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F4,\n    when: peekViewWidget_1.PeekContext.inPeekEditor,\n    handler: function (accessor) {\n        withController(accessor, function (controller) {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    primary: keyCodes_1.KeyCode.Escape,\n    secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape],\n    when: contextkey_1.ContextKeyExpr.and(referencesController_1.ctxReferenceSearchVisible, contextkey_1.ContextKeyExpr.not('config.editor.stablePeek')),\n    handler: closeActiveReferenceSearch\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'closeReferenceSearchEditor',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib - 101,\n    primary: keyCodes_1.KeyCode.Escape,\n    secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape],\n    when: contextkey_1.ContextKeyExpr.and(peekViewWidget_1.PeekContext.inPeekEditor, contextkey_1.ContextKeyExpr.not('config.editor.stablePeek')),\n    handler: closeActiveReferenceSearch\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'openReferenceToSide',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib,\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Enter,\n    mac: {\n        primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Enter\n    },\n    when: contextkey_1.ContextKeyExpr.and(referencesController_1.ctxReferenceSearchVisible, referencesWidget_1.ctxReferenceWidgetSearchTreeFocused),\n    handler: openReferenceToSide\n});\nfunction provideReferences(model, position, token) {\n    // collect references from all providers\n    var promises = modes_1.ReferenceProviderRegistry.ordered(model).map(function (provider) {\n        return Promise.resolve(provider.provideReferences(model, position, { includeDeclaration: true }, token)).then(function (result) {\n            if (Array.isArray(result)) {\n                return result;\n            }\n            return undefined;\n        }, function (err) {\n            errors_1.onUnexpectedExternalError(err);\n        });\n    });\n    return Promise.all(promises).then(function (references) {\n        var result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var ref = references_1[_i];\n            if (ref) {\n                result.push.apply(result, ref);\n            }\n        }\n        return result;\n    });\n}\nexports.provideReferences = provideReferences;\neditorExtensions_1.registerDefaultLanguageCommand('_executeReferenceProvider', function (model, position) { return provideReferences(model, position, cancellation_1.CancellationToken.None); });\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referenceSearch.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referenceSearch.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IContextKeyService, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Position, IPosition } from 'vs/editor/common/core/position';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { registerEditorAction, ServicesAccessor, EditorAction, registerEditorContribution, registerDefaultLanguageCommand } from 'vs/editor/browser/editorExtensions';\nimport { Location, ReferenceProviderRegistry } from 'vs/editor/common/modes';\nimport { Range } from 'vs/editor/common/core/range';\nimport { PeekContext, getOuterEditor } from './peekViewWidget';\nimport { ReferencesController, RequestOptions, ctxReferenceSearchVisible } from './referencesController';\nimport { ReferencesModel, OneReference } from './referencesModel';\nimport { createCancelablePromise } from 'vs/base/common/async';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { ICodeEditor, isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IListService } from 'vs/platform/list/browser/listService';\nimport { ctxReferenceWidgetSearchTreeFocused } from 'vs/editor/contrib/referenceSearch/referencesWidget';\nimport { CommandsRegistry, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const defaultReferenceSearchOptions: RequestOptions = {\n\tgetMetaTitle(model) {\n\t\treturn model.references.length > 1 ? nls.localize('meta.titleReference', \" â€“ {0} references\", model.references.length) : '';\n\t}\n};\n\nexport class ReferenceController implements editorCommon.IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.referenceController';\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tif (editor instanceof EmbeddedCodeEditorWidget) {\n\t\t\tPeekContext.inPeekEditor.bindTo(contextKeyService);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\tpublic getId(): string {\n\t\treturn ReferenceController.ID;\n\t}\n}\n\nexport class ReferenceAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.referenceSearch.trigger',\n\t\t\tlabel: nls.localize('references.action.label', \"Peek References\"),\n\t\t\talias: 'Find All References', // leave the alias?\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tEditorContextKeys.hasReferenceProvider,\n\t\t\t\tPeekContext.notInPeekEditor,\n\t\t\t\tEditorContextKeys.isInEmbeddedEditor.toNegated()),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F12,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1.5\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tlet controller = ReferencesController.get(editor);\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tif (editor.hasModel()) {\n\t\t\tconst range = editor.getSelection();\n\t\t\tconst model = editor.getModel();\n\t\t\tconst references = createCancelablePromise(token => provideReferences(model, range.getStartPosition(), token).then(references => new ReferencesModel(references)));\n\t\t\tcontroller.toggleWidget(range, references, defaultReferenceSearchOptions);\n\t\t}\n\t}\n}\n\nregisterEditorContribution(ReferenceController);\n\nregisterEditorAction(ReferenceAction);\n\nlet findReferencesCommand: ICommandHandler = (accessor: ServicesAccessor, resource: URI, position: IPosition) => {\n\tif (!(resource instanceof URI)) {\n\t\tthrow new Error('illegal argument, uri');\n\t}\n\tif (!position) {\n\t\tthrow new Error('illegal argument, position');\n\t}\n\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\treturn codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n\t\tif (!isCodeEditor(control) || !control.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet controller = ReferencesController.get(control);\n\t\tif (!controller) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet references = createCancelablePromise(token => provideReferences(control.getModel(), Position.lift(position), token).then(references => new ReferencesModel(references)));\n\t\tlet range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\treturn Promise.resolve(controller.toggleWidget(range, references, defaultReferenceSearchOptions));\n\t});\n};\n\nlet showReferencesCommand: ICommandHandler = (accessor: ServicesAccessor, resource: URI, position: IPosition, references: Location[]) => {\n\tif (!(resource instanceof URI)) {\n\t\tthrow new Error('illegal argument, uri expected');\n\t}\n\n\tif (!references) {\n\t\tthrow new Error('missing references');\n\t}\n\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\treturn codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n\t\tif (!isCodeEditor(control)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet controller = ReferencesController.get(control);\n\t\tif (!controller) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn controller.toggleWidget(\n\t\t\tnew Range(position.lineNumber, position.column, position.lineNumber, position.column),\n\t\t\tcreateCancelablePromise(_ => Promise.resolve(new ReferencesModel(references))),\n\t\t\tdefaultReferenceSearchOptions\n\t\t);\n\t});\n};\n\n// register commands\n\nCommandsRegistry.registerCommand({\n\tid: 'editor.action.findReferences',\n\thandler: findReferencesCommand\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'editor.action.showReferences',\n\thandler: showReferencesCommand,\n\tdescription: {\n\t\tdescription: 'Show references at a position in a file',\n\t\targs: [\n\t\t\t{ name: 'uri', description: 'The text document in which to show references', constraint: URI },\n\t\t\t{ name: 'position', description: 'The position at which to show', constraint: Position.isIPosition },\n\t\t\t{ name: 'locations', description: 'An array of locations.', constraint: Array },\n\t\t]\n\t}\n});\n\nfunction closeActiveReferenceSearch(accessor: ServicesAccessor, args: any) {\n\twithController(accessor, controller => controller.closeWidget());\n}\n\nfunction openReferenceToSide(accessor: ServicesAccessor, args: any) {\n\tconst listService = accessor.get(IListService);\n\n\tconst focus = listService.lastFocusedList && listService.lastFocusedList.getFocus();\n\tif (focus instanceof OneReference) {\n\t\twithController(accessor, controller => controller.openReference(focus, true));\n\t}\n}\n\nfunction withController(accessor: ServicesAccessor, fn: (controller: ReferencesController) => void): void {\n\tconst outerEditor = getOuterEditor(accessor);\n\tif (!outerEditor) {\n\t\treturn;\n\t}\n\n\tlet controller = ReferencesController.get(outerEditor);\n\tif (!controller) {\n\t\treturn;\n\t}\n\n\tfn(controller);\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToNextReference',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\tprimary: KeyCode.F4,\n\twhen: ctxReferenceSearchVisible,\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(true);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToNextReferenceFromEmbeddedEditor',\n\tweight: KeybindingWeight.EditorContrib + 50,\n\tprimary: KeyCode.F4,\n\twhen: PeekContext.inPeekEditor,\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(true);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToPreviousReference',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\tprimary: KeyMod.Shift | KeyCode.F4,\n\twhen: ctxReferenceSearchVisible,\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(false);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'goToPreviousReferenceFromEmbeddedEditor',\n\tweight: KeybindingWeight.EditorContrib + 50,\n\tprimary: KeyMod.Shift | KeyCode.F4,\n\twhen: PeekContext.inPeekEditor,\n\thandler(accessor) {\n\t\twithController(accessor, controller => {\n\t\t\tcontroller.goToNextOrPreviousReference(false);\n\t\t});\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'closeReferenceSearch',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek')),\n\thandler: closeActiveReferenceSearch\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'closeReferenceSearchEditor',\n\tweight: KeybindingWeight.EditorContrib - 101,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek')),\n\thandler: closeActiveReferenceSearch\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'openReferenceToSide',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\twhen: ContextKeyExpr.and(ctxReferenceSearchVisible, ctxReferenceWidgetSearchTreeFocused),\n\thandler: openReferenceToSide\n});\n\nexport function provideReferences(model: ITextModel, position: Position, token: CancellationToken): Promise<Location[]> {\n\n\t// collect references from all providers\n\tconst promises = ReferenceProviderRegistry.ordered(model).map(provider => {\n\t\treturn Promise.resolve(provider.provideReferences(model, position, { includeDeclaration: true }, token)).then(result => {\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\treturn <Location[]>result;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}, err => {\n\t\t\tonUnexpectedExternalError(err);\n\t\t});\n\t});\n\n\treturn Promise.all(promises).then(references => {\n\t\tlet result: Location[] = [];\n\t\tfor (let ref of references) {\n\t\t\tif (ref) {\n\t\t\t\tresult.push(...ref);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n\nregisterDefaultLanguageCommand('_executeReferenceProvider', (model, position) => provideReferences(model, position, CancellationToken.None));\n"]}]}