{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/types\", \"vs/base/common/assert\"], function (require, exports, Types, Assert) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class RegistryImpl {\n        constructor() {\n            this.data = {};\n        }\n        add(id, data) {\n            Assert.ok(Types.isString(id));\n            Assert.ok(Types.isObject(data));\n            Assert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n            this.data[id] = data;\n        }\n        knows(id) {\n            return this.data.hasOwnProperty(id);\n        }\n        as(id) {\n            return this.data[id] || null;\n        }\n    }\n    exports.Registry = new RegistryImpl();\n});\n",null]}