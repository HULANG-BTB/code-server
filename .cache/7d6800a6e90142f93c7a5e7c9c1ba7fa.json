{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/preferences/common/keybindingsEditorModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/preferences/common/keybindingsEditorModel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar strings = require(\"vs/base/common/strings\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar filters_1 = require(\"vs/base/common/filters\");\nvar platform_2 = require(\"vs/platform/registry/common/platform\");\nvar keybindingLabels_1 = require(\"vs/base/common/keybindingLabels\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar resolvedKeybindingItem_1 = require(\"vs/platform/keybinding/common/resolvedKeybindingItem\");\nvar keybindingResolver_1 = require(\"vs/platform/keybinding/common/keybindingResolver\");\nexports.KEYBINDING_ENTRY_TEMPLATE_ID = 'keybinding.entry.template';\nvar SOURCE_DEFAULT = nls_1.localize('default', \"Default\");\nvar SOURCE_USER = nls_1.localize('user', \"User\");\nvar wordFilter = filters_1.or(filters_1.matchesPrefix, filters_1.matchesWords, filters_1.matchesContiguousSubString);\nvar KeybindingsEditorModel = /** @class */ (function (_super) {\n    tslib_1.__extends(KeybindingsEditorModel, _super);\n    function KeybindingsEditorModel(os, keybindingsService) {\n        var _this = _super.call(this) || this;\n        _this.keybindingsService = keybindingsService;\n        _this.modifierLabels = {\n            ui: keybindingLabels_1.UILabelProvider.modifierLabels[os],\n            aria: keybindingLabels_1.AriaLabelProvider.modifierLabels[os],\n            user: keybindingLabels_1.UserSettingsLabelProvider.modifierLabels[os]\n        };\n        return _this;\n    }\n    KeybindingsEditorModel.prototype.fetch = function (searchValue, sortByPrecedence) {\n        if (sortByPrecedence === void 0) { sortByPrecedence = false; }\n        var keybindingItems = sortByPrecedence ? this._keybindingItemsSortedByPrecedence : this._keybindingItems;\n        if (/@source:\\s*(user|default)/i.test(searchValue)) {\n            keybindingItems = this.filterBySource(keybindingItems, searchValue);\n            searchValue = searchValue.replace(/@source:\\s*(user|default)/i, '');\n        }\n        searchValue = searchValue.trim();\n        if (!searchValue) {\n            return keybindingItems.map(function (keybindingItem) { return ({ id: KeybindingsEditorModel.getId(keybindingItem), keybindingItem: keybindingItem, templateId: exports.KEYBINDING_ENTRY_TEMPLATE_ID }); });\n        }\n        return this.filterByText(keybindingItems, searchValue);\n    };\n    KeybindingsEditorModel.prototype.filterBySource = function (keybindingItems, searchValue) {\n        if (/@source:\\s*default/i.test(searchValue)) {\n            return keybindingItems.filter(function (k) { return k.source === SOURCE_DEFAULT; });\n        }\n        if (/@source:\\s*user/i.test(searchValue)) {\n            return keybindingItems.filter(function (k) { return k.source === SOURCE_USER; });\n        }\n        return keybindingItems;\n    };\n    KeybindingsEditorModel.prototype.filterByText = function (keybindingItems, searchValue) {\n        var quoteAtFirstChar = searchValue.charAt(0) === '\"';\n        var quoteAtLastChar = searchValue.charAt(searchValue.length - 1) === '\"';\n        var completeMatch = quoteAtFirstChar && quoteAtLastChar;\n        if (quoteAtFirstChar) {\n            searchValue = searchValue.substring(1);\n        }\n        if (quoteAtLastChar) {\n            searchValue = searchValue.substring(0, searchValue.length - 1);\n        }\n        searchValue = searchValue.trim();\n        var result = [];\n        var words = searchValue.split(' ');\n        var keybindingWords = this.splitKeybindingWords(words);\n        for (var _i = 0, keybindingItems_1 = keybindingItems; _i < keybindingItems_1.length; _i++) {\n            var keybindingItem = keybindingItems_1[_i];\n            var keybindingMatches = new KeybindingItemMatches(this.modifierLabels, keybindingItem, searchValue, words, keybindingWords, completeMatch);\n            if (keybindingMatches.commandIdMatches\n                || keybindingMatches.commandLabelMatches\n                || keybindingMatches.commandDefaultLabelMatches\n                || keybindingMatches.sourceMatches\n                || keybindingMatches.whenMatches\n                || keybindingMatches.keybindingMatches) {\n                result.push({\n                    id: KeybindingsEditorModel.getId(keybindingItem),\n                    templateId: exports.KEYBINDING_ENTRY_TEMPLATE_ID,\n                    commandLabelMatches: keybindingMatches.commandLabelMatches || undefined,\n                    commandDefaultLabelMatches: keybindingMatches.commandDefaultLabelMatches || undefined,\n                    keybindingItem: keybindingItem,\n                    keybindingMatches: keybindingMatches.keybindingMatches || undefined,\n                    commandIdMatches: keybindingMatches.commandIdMatches || undefined,\n                    sourceMatches: keybindingMatches.sourceMatches || undefined,\n                    whenMatches: keybindingMatches.whenMatches || undefined\n                });\n            }\n        }\n        return result;\n    };\n    KeybindingsEditorModel.prototype.splitKeybindingWords = function (wordsSeparatedBySpaces) {\n        var result = [];\n        for (var _i = 0, wordsSeparatedBySpaces_1 = wordsSeparatedBySpaces; _i < wordsSeparatedBySpaces_1.length; _i++) {\n            var word = wordsSeparatedBySpaces_1[_i];\n            result.push.apply(result, arrays_1.coalesce(word.split('+')));\n        }\n        return result;\n    };\n    KeybindingsEditorModel.prototype.resolve = function (editorActionsLabels) {\n        var workbenchActionsRegistry = platform_2.Registry.as(actions_2.Extensions.WorkbenchActions);\n        this._keybindingItemsSortedByPrecedence = [];\n        var boundCommands = new Map();\n        for (var _i = 0, _a = this.keybindingsService.getKeybindings(); _i < _a.length; _i++) {\n            var keybinding = _a[_i];\n            if (keybinding.command) { // Skip keybindings without commands\n                this._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(keybinding.command, keybinding, workbenchActionsRegistry, editorActionsLabels));\n                boundCommands.set(keybinding.command, true);\n            }\n        }\n        var commandsWithDefaultKeybindings = this.keybindingsService.getDefaultKeybindings().map(function (keybinding) { return keybinding.command; });\n        for (var _b = 0, _c = keybindingResolver_1.KeybindingResolver.getAllUnboundCommands(boundCommands); _b < _c.length; _b++) {\n            var command = _c[_b];\n            var keybindingItem = new resolvedKeybindingItem_1.ResolvedKeybindingItem(null, command, null, undefined, commandsWithDefaultKeybindings.indexOf(command) === -1);\n            this._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(command, keybindingItem, workbenchActionsRegistry, editorActionsLabels));\n        }\n        this._keybindingItems = this._keybindingItemsSortedByPrecedence.slice(0).sort(function (a, b) { return KeybindingsEditorModel.compareKeybindingData(a, b); });\n        return Promise.resolve(this);\n    };\n    KeybindingsEditorModel.getId = function (keybindingItem) {\n        return keybindingItem.command + (keybindingItem.keybinding ? keybindingItem.keybinding.getAriaLabel() : '') + keybindingItem.source + keybindingItem.when;\n    };\n    KeybindingsEditorModel.compareKeybindingData = function (a, b) {\n        if (a.keybinding && !b.keybinding) {\n            return -1;\n        }\n        if (b.keybinding && !a.keybinding) {\n            return 1;\n        }\n        if (a.commandLabel && !b.commandLabel) {\n            return -1;\n        }\n        if (b.commandLabel && !a.commandLabel) {\n            return 1;\n        }\n        if (a.commandLabel && b.commandLabel) {\n            if (a.commandLabel !== b.commandLabel) {\n                return a.commandLabel.localeCompare(b.commandLabel);\n            }\n        }\n        if (a.command === b.command) {\n            return a.keybindingItem.isDefault ? 1 : -1;\n        }\n        return a.command.localeCompare(b.command);\n    };\n    KeybindingsEditorModel.toKeybindingEntry = function (command, keybindingItem, workbenchActionsRegistry, editorActions) {\n        var menuCommand = actions_1.MenuRegistry.getCommand(command);\n        var editorActionLabel = editorActions[command];\n        return {\n            keybinding: keybindingItem.resolvedKeybinding,\n            keybindingItem: keybindingItem,\n            command: command,\n            commandLabel: KeybindingsEditorModel.getCommandLabel(menuCommand, editorActionLabel),\n            commandDefaultLabel: KeybindingsEditorModel.getCommandDefaultLabel(menuCommand, workbenchActionsRegistry),\n            when: keybindingItem.when ? keybindingItem.when.serialize() : '',\n            source: keybindingItem.isDefault ? SOURCE_DEFAULT : SOURCE_USER\n        };\n    };\n    KeybindingsEditorModel.getCommandDefaultLabel = function (menuCommand, workbenchActionsRegistry) {\n        if (!platform_1.Language.isDefaultVariant()) {\n            if (menuCommand && menuCommand.title && menuCommand.title.original) {\n                var category = menuCommand.category ? menuCommand.category.original : undefined;\n                var title = menuCommand.title.original;\n                return category ? nls_1.localize('cat.title', \"{0}: {1}\", category, title) : title;\n            }\n        }\n        return null;\n    };\n    KeybindingsEditorModel.getCommandLabel = function (menuCommand, editorActionLabel) {\n        if (menuCommand) {\n            var category = menuCommand.category ? typeof menuCommand.category === 'string' ? menuCommand.category : menuCommand.category.value : undefined;\n            var title = typeof menuCommand.title === 'string' ? menuCommand.title : menuCommand.title.value;\n            return category ? nls_1.localize('cat.title', \"{0}: {1}\", category, title) : title;\n        }\n        if (editorActionLabel) {\n            return editorActionLabel;\n        }\n        return '';\n    };\n    KeybindingsEditorModel = tslib_1.__decorate([\n        tslib_1.__param(1, keybinding_1.IKeybindingService)\n    ], KeybindingsEditorModel);\n    return KeybindingsEditorModel;\n}(editor_1.EditorModel));\nexports.KeybindingsEditorModel = KeybindingsEditorModel;\nvar KeybindingItemMatches = /** @class */ (function () {\n    function KeybindingItemMatches(modifierLabels, keybindingItem, searchValue, words, keybindingWords, completeMatch) {\n        this.modifierLabels = modifierLabels;\n        this.commandIdMatches = null;\n        this.commandLabelMatches = null;\n        this.commandDefaultLabelMatches = null;\n        this.sourceMatches = null;\n        this.whenMatches = null;\n        this.keybindingMatches = null;\n        if (!completeMatch) {\n            this.commandIdMatches = this.matches(searchValue, keybindingItem.command, filters_1.or(filters_1.matchesWords, filters_1.matchesCamelCase), words);\n            this.commandLabelMatches = keybindingItem.commandLabel ? this.matches(searchValue, keybindingItem.commandLabel, function (word, wordToMatchAgainst) { return filters_1.matchesWords(word, keybindingItem.commandLabel, true); }, words) : null;\n            this.commandDefaultLabelMatches = keybindingItem.commandDefaultLabel ? this.matches(searchValue, keybindingItem.commandDefaultLabel, function (word, wordToMatchAgainst) { return filters_1.matchesWords(word, keybindingItem.commandDefaultLabel, true); }, words) : null;\n            this.sourceMatches = this.matches(searchValue, keybindingItem.source, function (word, wordToMatchAgainst) { return filters_1.matchesWords(word, keybindingItem.source, true); }, words);\n            this.whenMatches = keybindingItem.when ? this.matches(searchValue, keybindingItem.when, filters_1.or(filters_1.matchesWords, filters_1.matchesCamelCase), words) : null;\n        }\n        this.keybindingMatches = keybindingItem.keybinding ? this.matchesKeybinding(keybindingItem.keybinding, searchValue, keybindingWords, completeMatch) : null;\n    }\n    KeybindingItemMatches.prototype.matches = function (searchValue, wordToMatchAgainst, wordMatchesFilter, words) {\n        var matches = wordFilter(searchValue, wordToMatchAgainst);\n        if (!matches) {\n            matches = this.matchesWords(words, wordToMatchAgainst, wordMatchesFilter);\n        }\n        if (matches) {\n            matches = this.filterAndSort(matches);\n        }\n        return matches;\n    };\n    KeybindingItemMatches.prototype.matchesWords = function (words, wordToMatchAgainst, wordMatchesFilter) {\n        var matches = [];\n        for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n            var word = words_1[_i];\n            var wordMatches = wordMatchesFilter(word, wordToMatchAgainst);\n            if (wordMatches) {\n                matches = (matches || []).concat(wordMatches);\n            }\n            else {\n                matches = null;\n                break;\n            }\n        }\n        return matches;\n    };\n    KeybindingItemMatches.prototype.filterAndSort = function (matches) {\n        return arrays_1.distinct(matches, (function (a) { return a.start + '.' + a.end; })).filter(function (match) { return !matches.some(function (m) { return !(m.start === match.start && m.end === match.end) && (m.start <= match.start && m.end >= match.end); }); }).sort(function (a, b) { return a.start - b.start; });\n    };\n    KeybindingItemMatches.prototype.matchesKeybinding = function (keybinding, searchValue, words, completeMatch) {\n        var _a = keybinding.getParts(), firstPart = _a[0], chordPart = _a[1];\n        var userSettingsLabel = keybinding.getUserSettingsLabel();\n        var ariaLabel = keybinding.getAriaLabel();\n        var label = keybinding.getLabel();\n        if ((userSettingsLabel && strings.compareIgnoreCase(searchValue, userSettingsLabel) === 0)\n            || (ariaLabel && strings.compareIgnoreCase(searchValue, ariaLabel) === 0)\n            || (label && strings.compareIgnoreCase(searchValue, label) === 0)) {\n            return {\n                firstPart: this.createCompleteMatch(firstPart),\n                chordPart: this.createCompleteMatch(chordPart)\n            };\n        }\n        var firstPartMatch = {};\n        var chordPartMatch = {};\n        var matchedWords = [];\n        var firstPartMatchedWords = [];\n        var chordPartMatchedWords = [];\n        var matchFirstPart = true;\n        for (var index = 0; index < words.length; index++) {\n            var word = words[index];\n            var firstPartMatched = false;\n            var chordPartMatched = false;\n            matchFirstPart = matchFirstPart && !firstPartMatch.keyCode;\n            var matchChordPart = !chordPartMatch.keyCode;\n            if (matchFirstPart) {\n                firstPartMatched = this.matchPart(firstPart, firstPartMatch, word, completeMatch);\n                if (firstPartMatch.keyCode) {\n                    for (var _i = 0, chordPartMatchedWords_1 = chordPartMatchedWords; _i < chordPartMatchedWords_1.length; _i++) {\n                        var cordPartMatchedWordIndex = chordPartMatchedWords_1[_i];\n                        if (firstPartMatchedWords.indexOf(cordPartMatchedWordIndex) === -1) {\n                            matchedWords.splice(matchedWords.indexOf(cordPartMatchedWordIndex), 1);\n                        }\n                    }\n                    chordPartMatch = {};\n                    chordPartMatchedWords = [];\n                    matchChordPart = false;\n                }\n            }\n            if (matchChordPart) {\n                chordPartMatched = this.matchPart(chordPart, chordPartMatch, word, completeMatch);\n            }\n            if (firstPartMatched) {\n                firstPartMatchedWords.push(index);\n            }\n            if (chordPartMatched) {\n                chordPartMatchedWords.push(index);\n            }\n            if (firstPartMatched || chordPartMatched) {\n                matchedWords.push(index);\n            }\n            matchFirstPart = matchFirstPart && this.isModifier(word);\n        }\n        if (matchedWords.length !== words.length) {\n            return null;\n        }\n        if (completeMatch && (!this.isCompleteMatch(firstPart, firstPartMatch) || !this.isCompleteMatch(chordPart, chordPartMatch))) {\n            return null;\n        }\n        return this.hasAnyMatch(firstPartMatch) || this.hasAnyMatch(chordPartMatch) ? { firstPart: firstPartMatch, chordPart: chordPartMatch } : null;\n    };\n    KeybindingItemMatches.prototype.matchPart = function (part, match, word, completeMatch) {\n        var matched = false;\n        if (this.matchesMetaModifier(part, word)) {\n            matched = true;\n            match.metaKey = true;\n        }\n        if (this.matchesCtrlModifier(part, word)) {\n            matched = true;\n            match.ctrlKey = true;\n        }\n        if (this.matchesShiftModifier(part, word)) {\n            matched = true;\n            match.shiftKey = true;\n        }\n        if (this.matchesAltModifier(part, word)) {\n            matched = true;\n            match.altKey = true;\n        }\n        if (this.matchesKeyCode(part, word, completeMatch)) {\n            match.keyCode = true;\n            matched = true;\n        }\n        return matched;\n    };\n    KeybindingItemMatches.prototype.matchesKeyCode = function (keybinding, word, completeMatch) {\n        if (!keybinding) {\n            return false;\n        }\n        var ariaLabel = keybinding.keyAriaLabel || '';\n        if (completeMatch || ariaLabel.length === 1 || word.length === 1) {\n            if (strings.compareIgnoreCase(ariaLabel, word) === 0) {\n                return true;\n            }\n        }\n        else {\n            if (filters_1.matchesContiguousSubString(word, ariaLabel)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    KeybindingItemMatches.prototype.matchesMetaModifier = function (keybinding, word) {\n        if (!keybinding) {\n            return false;\n        }\n        if (!keybinding.metaKey) {\n            return false;\n        }\n        return this.wordMatchesMetaModifier(word);\n    };\n    KeybindingItemMatches.prototype.wordMatchesMetaModifier = function (word) {\n        if (filters_1.matchesPrefix(this.modifierLabels.ui.metaKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.aria.metaKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.user.metaKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(nls_1.localize('meta', \"meta\"), word)) {\n            return true;\n        }\n        return false;\n    };\n    KeybindingItemMatches.prototype.matchesCtrlModifier = function (keybinding, word) {\n        if (!keybinding) {\n            return false;\n        }\n        if (!keybinding.ctrlKey) {\n            return false;\n        }\n        return this.wordMatchesCtrlModifier(word);\n    };\n    KeybindingItemMatches.prototype.wordMatchesCtrlModifier = function (word) {\n        if (filters_1.matchesPrefix(this.modifierLabels.ui.ctrlKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.aria.ctrlKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.user.ctrlKey, word)) {\n            return true;\n        }\n        return false;\n    };\n    KeybindingItemMatches.prototype.matchesShiftModifier = function (keybinding, word) {\n        if (!keybinding) {\n            return false;\n        }\n        if (!keybinding.shiftKey) {\n            return false;\n        }\n        return this.wordMatchesShiftModifier(word);\n    };\n    KeybindingItemMatches.prototype.wordMatchesShiftModifier = function (word) {\n        if (filters_1.matchesPrefix(this.modifierLabels.ui.shiftKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.aria.shiftKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.user.shiftKey, word)) {\n            return true;\n        }\n        return false;\n    };\n    KeybindingItemMatches.prototype.matchesAltModifier = function (keybinding, word) {\n        if (!keybinding) {\n            return false;\n        }\n        if (!keybinding.altKey) {\n            return false;\n        }\n        return this.wordMatchesAltModifier(word);\n    };\n    KeybindingItemMatches.prototype.wordMatchesAltModifier = function (word) {\n        if (filters_1.matchesPrefix(this.modifierLabels.ui.altKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.aria.altKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(this.modifierLabels.user.altKey, word)) {\n            return true;\n        }\n        if (filters_1.matchesPrefix(nls_1.localize('option', \"option\"), word)) {\n            return true;\n        }\n        return false;\n    };\n    KeybindingItemMatches.prototype.hasAnyMatch = function (keybindingMatch) {\n        return !!keybindingMatch.altKey ||\n            !!keybindingMatch.ctrlKey ||\n            !!keybindingMatch.metaKey ||\n            !!keybindingMatch.shiftKey ||\n            !!keybindingMatch.keyCode;\n    };\n    KeybindingItemMatches.prototype.isCompleteMatch = function (part, match) {\n        if (!part) {\n            return true;\n        }\n        if (!match.keyCode) {\n            return false;\n        }\n        if (part.metaKey && !match.metaKey) {\n            return false;\n        }\n        if (part.altKey && !match.altKey) {\n            return false;\n        }\n        if (part.ctrlKey && !match.ctrlKey) {\n            return false;\n        }\n        if (part.shiftKey && !match.shiftKey) {\n            return false;\n        }\n        return true;\n    };\n    KeybindingItemMatches.prototype.createCompleteMatch = function (part) {\n        var match = {};\n        if (part) {\n            match.keyCode = true;\n            if (part.metaKey) {\n                match.metaKey = true;\n            }\n            if (part.altKey) {\n                match.altKey = true;\n            }\n            if (part.ctrlKey) {\n                match.ctrlKey = true;\n            }\n            if (part.shiftKey) {\n                match.shiftKey = true;\n            }\n        }\n        return match;\n    };\n    KeybindingItemMatches.prototype.isModifier = function (word) {\n        if (this.wordMatchesAltModifier(word)) {\n            return true;\n        }\n        if (this.wordMatchesCtrlModifier(word)) {\n            return true;\n        }\n        if (this.wordMatchesMetaModifier(word)) {\n            return true;\n        }\n        if (this.wordMatchesShiftModifier(word)) {\n            return true;\n        }\n        return false;\n    };\n    return KeybindingItemMatches;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/preferences/common/keybindingsEditorModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/preferences/common/keybindingsEditorModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport { OperatingSystem, Language } from 'vs/base/common/platform';\nimport { IMatch, IFilter, or, matchesContiguousSubString, matchesPrefix, matchesCamelCase, matchesWords } from 'vs/base/common/filters';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from 'vs/base/common/keyCodes';\nimport { AriaLabelProvider, UserSettingsLabelProvider, UILabelProvider, ModifierLabels as ModLabels } from 'vs/base/common/keybindingLabels';\nimport { MenuRegistry, ILocalizedString, ICommandAction } from 'vs/platform/actions/common/actions';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { EditorModel } from 'vs/workbench/common/editor';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ResolvedKeybindingItem } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\nimport { KeybindingResolver } from 'vs/platform/keybinding/common/keybindingResolver';\n\nexport const KEYBINDING_ENTRY_TEMPLATE_ID = 'keybinding.entry.template';\n\nconst SOURCE_DEFAULT = localize('default', \"Default\");\nconst SOURCE_USER = localize('user', \"User\");\n\nexport interface KeybindingMatch {\n\tctrlKey?: boolean;\n\tshiftKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n\tkeyCode?: boolean;\n}\n\nexport interface KeybindingMatches {\n\tfirstPart: KeybindingMatch;\n\tchordPart: KeybindingMatch;\n}\n\nexport interface IListEntry {\n\tid: string;\n\ttemplateId: string;\n}\n\nexport interface IKeybindingItemEntry extends IListEntry {\n\tkeybindingItem: IKeybindingItem;\n\tcommandIdMatches?: IMatch[];\n\tcommandLabelMatches?: IMatch[];\n\tcommandDefaultLabelMatches?: IMatch[];\n\tsourceMatches?: IMatch[];\n\twhenMatches?: IMatch[];\n\tkeybindingMatches?: KeybindingMatches;\n}\n\nexport interface IKeybindingItem {\n\tkeybinding: ResolvedKeybinding;\n\tkeybindingItem: ResolvedKeybindingItem;\n\tcommandLabel: string;\n\tcommandDefaultLabel: string;\n\tcommand: string;\n\tsource: string;\n\twhen: string;\n}\n\ninterface ModifierLabels {\n\tui: ModLabels;\n\taria: ModLabels;\n\tuser: ModLabels;\n}\n\nconst wordFilter = or(matchesPrefix, matchesWords, matchesContiguousSubString);\n\nexport class KeybindingsEditorModel extends EditorModel {\n\n\tprivate _keybindingItems: IKeybindingItem[];\n\tprivate _keybindingItemsSortedByPrecedence: IKeybindingItem[];\n\tprivate modifierLabels: ModifierLabels;\n\n\tconstructor(\n\t\tos: OperatingSystem,\n\t\t@IKeybindingService private readonly keybindingsService: IKeybindingService\n\t) {\n\t\tsuper();\n\t\tthis.modifierLabels = {\n\t\t\tui: UILabelProvider.modifierLabels[os],\n\t\t\taria: AriaLabelProvider.modifierLabels[os],\n\t\t\tuser: UserSettingsLabelProvider.modifierLabels[os]\n\t\t};\n\t}\n\n\tfetch(searchValue: string, sortByPrecedence: boolean = false): IKeybindingItemEntry[] {\n\t\tlet keybindingItems = sortByPrecedence ? this._keybindingItemsSortedByPrecedence : this._keybindingItems;\n\n\t\tif (/@source:\\s*(user|default)/i.test(searchValue)) {\n\t\t\tkeybindingItems = this.filterBySource(keybindingItems, searchValue);\n\t\t\tsearchValue = searchValue.replace(/@source:\\s*(user|default)/i, '');\n\t\t}\n\n\t\tsearchValue = searchValue.trim();\n\t\tif (!searchValue) {\n\t\t\treturn keybindingItems.map(keybindingItem => (<IKeybindingItemEntry>{ id: KeybindingsEditorModel.getId(keybindingItem), keybindingItem, templateId: KEYBINDING_ENTRY_TEMPLATE_ID }));\n\t\t}\n\n\t\treturn this.filterByText(keybindingItems, searchValue);\n\t}\n\n\tprivate filterBySource(keybindingItems: IKeybindingItem[], searchValue: string): IKeybindingItem[] {\n\t\tif (/@source:\\s*default/i.test(searchValue)) {\n\t\t\treturn keybindingItems.filter(k => k.source === SOURCE_DEFAULT);\n\t\t}\n\t\tif (/@source:\\s*user/i.test(searchValue)) {\n\t\t\treturn keybindingItems.filter(k => k.source === SOURCE_USER);\n\t\t}\n\t\treturn keybindingItems;\n\t}\n\n\tprivate filterByText(keybindingItems: IKeybindingItem[], searchValue: string): IKeybindingItemEntry[] {\n\t\tconst quoteAtFirstChar = searchValue.charAt(0) === '\"';\n\t\tconst quoteAtLastChar = searchValue.charAt(searchValue.length - 1) === '\"';\n\t\tconst completeMatch = quoteAtFirstChar && quoteAtLastChar;\n\t\tif (quoteAtFirstChar) {\n\t\t\tsearchValue = searchValue.substring(1);\n\t\t}\n\t\tif (quoteAtLastChar) {\n\t\t\tsearchValue = searchValue.substring(0, searchValue.length - 1);\n\t\t}\n\t\tsearchValue = searchValue.trim();\n\n\t\tconst result: IKeybindingItemEntry[] = [];\n\t\tconst words = searchValue.split(' ');\n\t\tconst keybindingWords = this.splitKeybindingWords(words);\n\t\tfor (const keybindingItem of keybindingItems) {\n\t\t\tconst keybindingMatches = new KeybindingItemMatches(this.modifierLabels, keybindingItem, searchValue, words, keybindingWords, completeMatch);\n\t\t\tif (keybindingMatches.commandIdMatches\n\t\t\t\t|| keybindingMatches.commandLabelMatches\n\t\t\t\t|| keybindingMatches.commandDefaultLabelMatches\n\t\t\t\t|| keybindingMatches.sourceMatches\n\t\t\t\t|| keybindingMatches.whenMatches\n\t\t\t\t|| keybindingMatches.keybindingMatches) {\n\t\t\t\tresult.push({\n\t\t\t\t\tid: KeybindingsEditorModel.getId(keybindingItem),\n\t\t\t\t\ttemplateId: KEYBINDING_ENTRY_TEMPLATE_ID,\n\t\t\t\t\tcommandLabelMatches: keybindingMatches.commandLabelMatches || undefined,\n\t\t\t\t\tcommandDefaultLabelMatches: keybindingMatches.commandDefaultLabelMatches || undefined,\n\t\t\t\t\tkeybindingItem,\n\t\t\t\t\tkeybindingMatches: keybindingMatches.keybindingMatches || undefined,\n\t\t\t\t\tcommandIdMatches: keybindingMatches.commandIdMatches || undefined,\n\t\t\t\t\tsourceMatches: keybindingMatches.sourceMatches || undefined,\n\t\t\t\t\twhenMatches: keybindingMatches.whenMatches || undefined\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate splitKeybindingWords(wordsSeparatedBySpaces: string[]): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const word of wordsSeparatedBySpaces) {\n\t\t\tresult.push(...coalesce(word.split('+')));\n\t\t}\n\t\treturn result;\n\t}\n\n\tresolve(editorActionsLabels: { [id: string]: string; }): Promise<EditorModel> {\n\t\tconst workbenchActionsRegistry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\n\t\tthis._keybindingItemsSortedByPrecedence = [];\n\t\tconst boundCommands: Map<string, boolean> = new Map<string, boolean>();\n\t\tfor (const keybinding of this.keybindingsService.getKeybindings()) {\n\t\t\tif (keybinding.command) { // Skip keybindings without commands\n\t\t\t\tthis._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(keybinding.command, keybinding, workbenchActionsRegistry, editorActionsLabels));\n\t\t\t\tboundCommands.set(keybinding.command, true);\n\t\t\t}\n\t\t}\n\n\t\tconst commandsWithDefaultKeybindings = this.keybindingsService.getDefaultKeybindings().map(keybinding => keybinding.command);\n\t\tfor (const command of KeybindingResolver.getAllUnboundCommands(boundCommands)) {\n\t\t\tconst keybindingItem = new ResolvedKeybindingItem(null, command, null, undefined, commandsWithDefaultKeybindings.indexOf(command) === -1);\n\t\t\tthis._keybindingItemsSortedByPrecedence.push(KeybindingsEditorModel.toKeybindingEntry(command, keybindingItem, workbenchActionsRegistry, editorActionsLabels));\n\t\t}\n\t\tthis._keybindingItems = this._keybindingItemsSortedByPrecedence.slice(0).sort((a, b) => KeybindingsEditorModel.compareKeybindingData(a, b));\n\t\treturn Promise.resolve(this);\n\t}\n\n\tprivate static getId(keybindingItem: IKeybindingItem): string {\n\t\treturn keybindingItem.command + (keybindingItem.keybinding ? keybindingItem.keybinding.getAriaLabel() : '') + keybindingItem.source + keybindingItem.when;\n\t}\n\n\tprivate static compareKeybindingData(a: IKeybindingItem, b: IKeybindingItem): number {\n\t\tif (a.keybinding && !b.keybinding) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (b.keybinding && !a.keybinding) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.commandLabel && !b.commandLabel) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (b.commandLabel && !a.commandLabel) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.commandLabel && b.commandLabel) {\n\t\t\tif (a.commandLabel !== b.commandLabel) {\n\t\t\t\treturn a.commandLabel.localeCompare(b.commandLabel);\n\t\t\t}\n\t\t}\n\t\tif (a.command === b.command) {\n\t\t\treturn a.keybindingItem.isDefault ? 1 : -1;\n\t\t}\n\t\treturn a.command.localeCompare(b.command);\n\t}\n\n\tprivate static toKeybindingEntry(command: string, keybindingItem: ResolvedKeybindingItem, workbenchActionsRegistry: IWorkbenchActionRegistry, editorActions: { [id: string]: string; }): IKeybindingItem {\n\t\tconst menuCommand = MenuRegistry.getCommand(command);\n\t\tconst editorActionLabel = editorActions[command];\n\t\treturn <IKeybindingItem>{\n\t\t\tkeybinding: keybindingItem.resolvedKeybinding,\n\t\t\tkeybindingItem,\n\t\t\tcommand,\n\t\t\tcommandLabel: KeybindingsEditorModel.getCommandLabel(menuCommand, editorActionLabel),\n\t\t\tcommandDefaultLabel: KeybindingsEditorModel.getCommandDefaultLabel(menuCommand, workbenchActionsRegistry),\n\t\t\twhen: keybindingItem.when ? keybindingItem.when.serialize() : '',\n\t\t\tsource: keybindingItem.isDefault ? SOURCE_DEFAULT : SOURCE_USER\n\t\t};\n\t}\n\n\tprivate static getCommandDefaultLabel(menuCommand: ICommandAction, workbenchActionsRegistry: IWorkbenchActionRegistry): string | null {\n\t\tif (!Language.isDefaultVariant()) {\n\t\t\tif (menuCommand && menuCommand.title && (<ILocalizedString>menuCommand.title).original) {\n\t\t\t\tconst category: string | undefined = menuCommand.category ? (<ILocalizedString>menuCommand.category).original : undefined;\n\t\t\t\tconst title = (<ILocalizedString>menuCommand.title).original;\n\t\t\t\treturn category ? localize('cat.title', \"{0}: {1}\", category, title) : title;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static getCommandLabel(menuCommand: ICommandAction, editorActionLabel: string): string {\n\t\tif (menuCommand) {\n\t\t\tconst category: string | undefined = menuCommand.category ? typeof menuCommand.category === 'string' ? menuCommand.category : menuCommand.category.value : undefined;\n\t\t\tconst title = typeof menuCommand.title === 'string' ? menuCommand.title : menuCommand.title.value;\n\t\t\treturn category ? localize('cat.title', \"{0}: {1}\", category, title) : title;\n\t\t}\n\n\t\tif (editorActionLabel) {\n\t\t\treturn editorActionLabel;\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\nclass KeybindingItemMatches {\n\n\treadonly commandIdMatches: IMatch[] | null = null;\n\treadonly commandLabelMatches: IMatch[] | null = null;\n\treadonly commandDefaultLabelMatches: IMatch[] | null = null;\n\treadonly sourceMatches: IMatch[] | null = null;\n\treadonly whenMatches: IMatch[] | null = null;\n\treadonly keybindingMatches: KeybindingMatches | null = null;\n\n\tconstructor(private modifierLabels: ModifierLabels, keybindingItem: IKeybindingItem, searchValue: string, words: string[], keybindingWords: string[], completeMatch: boolean) {\n\t\tif (!completeMatch) {\n\t\t\tthis.commandIdMatches = this.matches(searchValue, keybindingItem.command, or(matchesWords, matchesCamelCase), words);\n\t\t\tthis.commandLabelMatches = keybindingItem.commandLabel ? this.matches(searchValue, keybindingItem.commandLabel, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.commandLabel, true), words) : null;\n\t\t\tthis.commandDefaultLabelMatches = keybindingItem.commandDefaultLabel ? this.matches(searchValue, keybindingItem.commandDefaultLabel, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.commandDefaultLabel, true), words) : null;\n\t\t\tthis.sourceMatches = this.matches(searchValue, keybindingItem.source, (word, wordToMatchAgainst) => matchesWords(word, keybindingItem.source, true), words);\n\t\t\tthis.whenMatches = keybindingItem.when ? this.matches(searchValue, keybindingItem.when, or(matchesWords, matchesCamelCase), words) : null;\n\t\t}\n\t\tthis.keybindingMatches = keybindingItem.keybinding ? this.matchesKeybinding(keybindingItem.keybinding, searchValue, keybindingWords, completeMatch) : null;\n\t}\n\n\tprivate matches(searchValue: string, wordToMatchAgainst: string, wordMatchesFilter: IFilter, words: string[]): IMatch[] | null {\n\t\tlet matches = wordFilter(searchValue, wordToMatchAgainst);\n\t\tif (!matches) {\n\t\t\tmatches = this.matchesWords(words, wordToMatchAgainst, wordMatchesFilter);\n\t\t}\n\t\tif (matches) {\n\t\t\tmatches = this.filterAndSort(matches);\n\t\t}\n\t\treturn matches;\n\t}\n\n\tprivate matchesWords(words: string[], wordToMatchAgainst: string, wordMatchesFilter: IFilter): IMatch[] | null {\n\t\tlet matches: IMatch[] | null = [];\n\t\tfor (const word of words) {\n\t\t\tconst wordMatches = wordMatchesFilter(word, wordToMatchAgainst);\n\t\t\tif (wordMatches) {\n\t\t\t\tmatches = [...(matches || []), ...wordMatches];\n\t\t\t} else {\n\t\t\t\tmatches = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tprivate filterAndSort(matches: IMatch[]): IMatch[] {\n\t\treturn distinct(matches, (a => a.start + '.' + a.end)).filter(match => !matches.some(m => !(m.start === match.start && m.end === match.end) && (m.start <= match.start && m.end >= match.end))).sort((a, b) => a.start - b.start);\n\t}\n\n\tprivate matchesKeybinding(keybinding: ResolvedKeybinding, searchValue: string, words: string[], completeMatch: boolean): KeybindingMatches | null {\n\t\tconst [firstPart, chordPart] = keybinding.getParts();\n\n\t\tconst userSettingsLabel = keybinding.getUserSettingsLabel();\n\t\tconst ariaLabel = keybinding.getAriaLabel();\n\t\tconst label = keybinding.getLabel();\n\t\tif ((userSettingsLabel && strings.compareIgnoreCase(searchValue, userSettingsLabel) === 0)\n\t\t\t|| (ariaLabel && strings.compareIgnoreCase(searchValue, ariaLabel) === 0)\n\t\t\t|| (label && strings.compareIgnoreCase(searchValue, label) === 0)) {\n\t\t\treturn {\n\t\t\t\tfirstPart: this.createCompleteMatch(firstPart),\n\t\t\t\tchordPart: this.createCompleteMatch(chordPart)\n\t\t\t};\n\t\t}\n\n\t\tconst firstPartMatch: KeybindingMatch = {};\n\t\tlet chordPartMatch: KeybindingMatch = {};\n\n\t\tconst matchedWords: number[] = [];\n\t\tconst firstPartMatchedWords: number[] = [];\n\t\tlet chordPartMatchedWords: number[] = [];\n\t\tlet matchFirstPart = true;\n\t\tfor (let index = 0; index < words.length; index++) {\n\t\t\tconst word = words[index];\n\t\t\tlet firstPartMatched = false;\n\t\t\tlet chordPartMatched = false;\n\n\t\t\tmatchFirstPart = matchFirstPart && !firstPartMatch.keyCode;\n\t\t\tlet matchChordPart = !chordPartMatch.keyCode;\n\n\t\t\tif (matchFirstPart) {\n\t\t\t\tfirstPartMatched = this.matchPart(firstPart, firstPartMatch, word, completeMatch);\n\t\t\t\tif (firstPartMatch.keyCode) {\n\t\t\t\t\tfor (const cordPartMatchedWordIndex of chordPartMatchedWords) {\n\t\t\t\t\t\tif (firstPartMatchedWords.indexOf(cordPartMatchedWordIndex) === -1) {\n\t\t\t\t\t\t\tmatchedWords.splice(matchedWords.indexOf(cordPartMatchedWordIndex), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tchordPartMatch = {};\n\t\t\t\t\tchordPartMatchedWords = [];\n\t\t\t\t\tmatchChordPart = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (matchChordPart) {\n\t\t\t\tchordPartMatched = this.matchPart(chordPart, chordPartMatch, word, completeMatch);\n\t\t\t}\n\n\t\t\tif (firstPartMatched) {\n\t\t\t\tfirstPartMatchedWords.push(index);\n\t\t\t}\n\t\t\tif (chordPartMatched) {\n\t\t\t\tchordPartMatchedWords.push(index);\n\t\t\t}\n\t\t\tif (firstPartMatched || chordPartMatched) {\n\t\t\t\tmatchedWords.push(index);\n\t\t\t}\n\n\t\t\tmatchFirstPart = matchFirstPart && this.isModifier(word);\n\t\t}\n\t\tif (matchedWords.length !== words.length) {\n\t\t\treturn null;\n\t\t}\n\t\tif (completeMatch && (!this.isCompleteMatch(firstPart, firstPartMatch) || !this.isCompleteMatch(chordPart, chordPartMatch))) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.hasAnyMatch(firstPartMatch) || this.hasAnyMatch(chordPartMatch) ? { firstPart: firstPartMatch, chordPart: chordPartMatch } : null;\n\t}\n\n\tprivate matchPart(part: ResolvedKeybindingPart | null, match: KeybindingMatch, word: string, completeMatch: boolean): boolean {\n\t\tlet matched = false;\n\t\tif (this.matchesMetaModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.metaKey = true;\n\t\t}\n\t\tif (this.matchesCtrlModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.ctrlKey = true;\n\t\t}\n\t\tif (this.matchesShiftModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.shiftKey = true;\n\t\t}\n\t\tif (this.matchesAltModifier(part, word)) {\n\t\t\tmatched = true;\n\t\t\tmatch.altKey = true;\n\t\t}\n\t\tif (this.matchesKeyCode(part, word, completeMatch)) {\n\t\t\tmatch.keyCode = true;\n\t\t\tmatched = true;\n\t\t}\n\t\treturn matched;\n\t}\n\n\tprivate matchesKeyCode(keybinding: ResolvedKeybindingPart | null, word: string, completeMatch: boolean): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tconst ariaLabel: string = keybinding.keyAriaLabel || '';\n\t\tif (completeMatch || ariaLabel.length === 1 || word.length === 1) {\n\t\t\tif (strings.compareIgnoreCase(ariaLabel, word) === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (matchesContiguousSubString(word, ariaLabel)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate matchesMetaModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.metaKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesMetaModifier(word);\n\t}\n\n\tprivate wordMatchesMetaModifier(word: string): boolean {\n\t\tif (matchesPrefix(this.modifierLabels.ui.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.aria.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.user.metaKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(localize('meta', \"meta\"), word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate matchesCtrlModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.ctrlKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesCtrlModifier(word);\n\t}\n\n\tprivate wordMatchesCtrlModifier(word: string): boolean {\n\t\tif (matchesPrefix(this.modifierLabels.ui.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.aria.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.user.ctrlKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate matchesShiftModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.shiftKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesShiftModifier(word);\n\t}\n\n\tprivate wordMatchesShiftModifier(word: string): boolean {\n\t\tif (matchesPrefix(this.modifierLabels.ui.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.aria.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.user.shiftKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate matchesAltModifier(keybinding: ResolvedKeybindingPart | null, word: string): boolean {\n\t\tif (!keybinding) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!keybinding.altKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.wordMatchesAltModifier(word);\n\t}\n\n\tprivate wordMatchesAltModifier(word: string): boolean {\n\t\tif (matchesPrefix(this.modifierLabels.ui.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.aria.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(this.modifierLabels.user.altKey, word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (matchesPrefix(localize('option', \"option\"), word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate hasAnyMatch(keybindingMatch: KeybindingMatch): boolean {\n\t\treturn !!keybindingMatch.altKey ||\n\t\t\t!!keybindingMatch.ctrlKey ||\n\t\t\t!!keybindingMatch.metaKey ||\n\t\t\t!!keybindingMatch.shiftKey ||\n\t\t\t!!keybindingMatch.keyCode;\n\t}\n\n\tprivate isCompleteMatch(part: ResolvedKeybindingPart | null, match: KeybindingMatch): boolean {\n\t\tif (!part) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!match.keyCode) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.metaKey && !match.metaKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.altKey && !match.altKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.ctrlKey && !match.ctrlKey) {\n\t\t\treturn false;\n\t\t}\n\t\tif (part.shiftKey && !match.shiftKey) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createCompleteMatch(part: ResolvedKeybindingPart | null): KeybindingMatch {\n\t\tconst match: KeybindingMatch = {};\n\t\tif (part) {\n\t\t\tmatch.keyCode = true;\n\t\t\tif (part.metaKey) {\n\t\t\t\tmatch.metaKey = true;\n\t\t\t}\n\t\t\tif (part.altKey) {\n\t\t\t\tmatch.altKey = true;\n\t\t\t}\n\t\t\tif (part.ctrlKey) {\n\t\t\t\tmatch.ctrlKey = true;\n\t\t\t}\n\t\t\tif (part.shiftKey) {\n\t\t\t\tmatch.shiftKey = true;\n\t\t\t}\n\t\t}\n\t\treturn match;\n\t}\n\n\tprivate isModifier(word: string): boolean {\n\t\tif (this.wordMatchesAltModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesCtrlModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesMetaModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.wordMatchesShiftModifier(word)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"]}]}