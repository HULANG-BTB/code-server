{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughContentProvider.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughContentProvider.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar marked = require(\"vs/base/common/marked/marked\");\nvar network_1 = require(\"vs/base/common/network\");\nvar WalkThroughContentProvider = /** @class */ (function () {\n    function WalkThroughContentProvider(textModelResolverService, textFileService, modeService, modelService) {\n        this.textModelResolverService = textModelResolverService;\n        this.textFileService = textFileService;\n        this.modeService = modeService;\n        this.modelService = modelService;\n        this.textModelResolverService.registerTextModelContentProvider(network_1.Schemas.walkThrough, this);\n    }\n    WalkThroughContentProvider.prototype.provideTextContent = function (resource) {\n        var _this = this;\n        var query = resource.query ? JSON.parse(resource.query) : {};\n        var content = (query.moduleId ? new Promise(function (resolve, reject) {\n            /*\n            require([query.moduleId], content => {\n                try {\n                    resolve(content.default());\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            */\n            // This works because the only walkthrough that is a module is the welcome page.\n            // We have to explicitly import it or Webpack won't pick it up.\n            Promise.resolve().then(function () { return require(\"vs/workbench/contrib/welcome/page/browser/vs_code_welcome_page\"); }).then(function (content) {\n                resolve(content.default());\n            }).catch(function (err) {\n                reject(err);\n            });\n        }) : (resource.scheme !== \"file\"\n            ? fetch(resource.path).then(function (res) { return res.text(); })\n            : this.textFileService.resolveTextContent(uri_1.URI.file(resource.fsPath)).then(function (content) { return content.value; })));\n        return content.then(function (content) {\n            var codeEditorModel = _this.modelService.getModel(resource);\n            if (!codeEditorModel) {\n                codeEditorModel = _this.modelService.createModel(content, _this.modeService.createByFilepathOrFirstLine(resource.fsPath), resource);\n            }\n            else {\n                _this.modelService.updateModel(codeEditorModel, content);\n            }\n            return codeEditorModel;\n        });\n    };\n    WalkThroughContentProvider = tslib_1.__decorate([\n        tslib_1.__param(0, resolverService_1.ITextModelService),\n        tslib_1.__param(1, textfiles_1.ITextFileService),\n        tslib_1.__param(2, modeService_1.IModeService),\n        tslib_1.__param(3, modelService_1.IModelService)\n    ], WalkThroughContentProvider);\n    return WalkThroughContentProvider;\n}());\nexports.WalkThroughContentProvider = WalkThroughContentProvider;\nvar WalkThroughSnippetContentProvider = /** @class */ (function () {\n    function WalkThroughSnippetContentProvider(textModelResolverService, textFileService, modeService, modelService) {\n        this.textModelResolverService = textModelResolverService;\n        this.textFileService = textFileService;\n        this.modeService = modeService;\n        this.modelService = modelService;\n        this.textModelResolverService.registerTextModelContentProvider(network_1.Schemas.walkThroughSnippet, this);\n    }\n    WalkThroughSnippetContentProvider.prototype.provideTextContent = function (resource) {\n        var _this = this;\n        return fetch(resource.path).then(function (res) { return res.text(); }).then(function (content) {\n            var codeEditorModel = _this.modelService.getModel(resource);\n            if (!codeEditorModel) {\n                var j_1 = parseInt(resource.fragment);\n                var codeSnippet_1 = '';\n                var languageName_1 = '';\n                var i_1 = 0;\n                var renderer = new marked.Renderer();\n                renderer.code = function (code, lang) {\n                    if (i_1++ === j_1) {\n                        codeSnippet_1 = code;\n                        languageName_1 = lang;\n                    }\n                    return '';\n                };\n                /*\n                const textBuffer = content.value.create(DefaultEndOfLine.LF);\n                const lineCount = textBuffer.getLineCount();\n                const range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n                const markdown = textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n                */\n                marked(content, { renderer: renderer });\n                var languageId = _this.modeService.getModeIdForLanguageName(languageName_1) || '';\n                var languageSelection = _this.modeService.create(languageId);\n                codeEditorModel = _this.modelService.createModel(codeSnippet_1, languageSelection, resource);\n            }\n            else {\n                _this.modelService.updateModel(codeEditorModel, content);\n            }\n            return codeEditorModel;\n        });\n    };\n    WalkThroughSnippetContentProvider = tslib_1.__decorate([\n        tslib_1.__param(0, resolverService_1.ITextModelService),\n        tslib_1.__param(1, textfiles_1.ITextFileService),\n        tslib_1.__param(2, modeService_1.IModeService),\n        tslib_1.__param(3, modelService_1.IModelService)\n    ], WalkThroughSnippetContentProvider);\n    return WalkThroughSnippetContentProvider;\n}());\nexports.WalkThroughSnippetContentProvider = WalkThroughSnippetContentProvider;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughContentProvider.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughContentProvider.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,0CAAyC;AACzC,6EAAyG;AACzG,uEAAuE;AACvE,6EAAmF;AAEnF,qEAAqE;AAErE,qDAAuD;AACvD,kDAAiD;AAGjD;IAEC,oCACqC,wBAA2C,EAC5C,eAAiC,EACrC,WAAyB,EACxB,YAA2B;QAHvB,6BAAwB,GAAxB,wBAAwB,CAAmB;QAC5C,oBAAe,GAAf,eAAe,CAAkB;QACrC,gBAAW,GAAX,WAAW,CAAc;QACxB,iBAAY,GAAZ,YAAY,CAAe;QAE3D,IAAI,CAAC,wBAAwB,CAAC,gCAAgC,CAAC,iBAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAC3F,CAAC;IAEM,uDAAkB,GAAzB,UAA0B,QAAa;QAAvC,iBAgCC;QA/BA,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,IAAM,OAAO,GAAyC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;YAC3G;;;;;;;;cAQE;YACF,gFAAgF;YAChF,+DAA+D;YAC/D,oDAAO,gEAAgE,MAAE,IAAI,CAAC,UAAC,OAAO;gBACrF,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBACZ,MAAM,CAAC,GAAG,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM;YAC/B,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;YAChD,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,EAAb,CAAa,CAAC,CAAC,CAAC,CAAC;QACvG,OAAO,OAAO,CAAC,IAAI,CAAC,UAAA,OAAO;YAC1B,IAAI,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3D,IAAI,CAAC,eAAe,EAAE;gBACrB,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,EAAE,KAAI,CAAC,WAAW,CAAC,2BAA2B,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;aAClI;iBAAM;gBACN,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;aACxD;YAED,OAAO,eAAe,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IA3CW,0BAA0B;QAGpC,mBAAA,mCAAiB,CAAA;QACjB,mBAAA,4BAAgB,CAAA;QAChB,mBAAA,0BAAY,CAAA;QACZ,mBAAA,4BAAa,CAAA;OANH,0BAA0B,CA4CtC;IAAD,iCAAC;CAAA,AA5CD,IA4CC;AA5CY,gEAA0B;AA8CvC;IAEC,2CACqC,wBAA2C,EAC5C,eAAiC,EACrC,WAAyB,EACxB,YAA2B;QAHvB,6BAAwB,GAAxB,wBAAwB,CAAmB;QAC5C,oBAAe,GAAf,eAAe,CAAkB;QACrC,gBAAW,GAAX,WAAW,CAAc;QACxB,iBAAY,GAAZ,YAAY,CAAe;QAE3D,IAAI,CAAC,wBAAwB,CAAC,gCAAgC,CAAC,iBAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAClG,CAAC;IAEM,8DAAkB,GAAzB,UAA0B,QAAa;QAAvC,iBAmCC;QAlCA,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YAClE,IAAI,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3D,IAAI,CAAC,eAAe,EAAE;gBACrB,IAAM,GAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEtC,IAAI,aAAW,GAAG,EAAE,CAAC;gBACrB,IAAI,cAAY,GAAG,EAAE,CAAC;gBACtB,IAAI,GAAC,GAAG,CAAC,CAAC;gBACV,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACvC,QAAQ,CAAC,IAAI,GAAG,UAAC,IAAI,EAAE,IAAI;oBAC1B,IAAI,GAAC,EAAE,KAAK,GAAC,EAAE;wBACd,aAAW,GAAG,IAAI,CAAC;wBACnB,cAAY,GAAG,IAAI,CAAC;qBACpB;oBACD,OAAO,EAAE,CAAC;gBACX,CAAC,CAAC;gBAEF;;;;;kBAKE;gBACF,MAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;gBAE9B,IAAM,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,cAAY,CAAC,IAAI,EAAE,CAAC;gBACjF,IAAM,iBAAiB,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC9D,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,aAAW,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC;aAC1F;iBAAM;gBACN,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;aACxD;YAED,OAAO,eAAe,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IA9CW,iCAAiC;QAG3C,mBAAA,mCAAiB,CAAA;QACjB,mBAAA,4BAAgB,CAAA;QAChB,mBAAA,0BAAY,CAAA;QACZ,mBAAA,4BAAa,CAAA;OANH,iCAAiC,CA+C7C;IAAD,wCAAC;CAAA,AA/CD,IA+CC;AA/CY,8EAAiC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { ITextModelService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ITextModel, DefaultEndOfLine, EndOfLinePreference, ITextBufferFactory } from 'vs/editor/common/model';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { Schemas } from 'vs/base/common/network';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport class WalkThroughContentProvider implements ITextModelContentProvider, IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(Schemas.walkThrough, this);\n\t}\n\n\tpublic provideTextContent(resource: URI): Promise<ITextModel> {\n\t\tconst query = resource.query ? JSON.parse(resource.query) : {};\n\t\tconst content: Promise<string | ITextBufferFactory> = (query.moduleId ? new Promise<string>((resolve, reject) => {\n\t\t\t/*\n\t\t\trequire([query.moduleId], content => {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(content.default());\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\t*/\n\t\t\t// This works because the only walkthrough that is a module is the welcome page.\n\t\t\t// We have to explicitly import it or Webpack won't pick it up.\n\t\t\timport(\"vs/workbench/contrib/welcome/page/browser/vs_code_welcome_page\").then((content) => {\n\t\t\t\tresolve(content.default());\n\t\t\t}).catch((err) => {\n\t\t\t\treject(err);\n\t\t\t});\n\t\t}) : (resource.scheme !== \"file\"\n\t\t\t? fetch(resource.path).then((res) => res.text())\n\t\t\t: this.textFileService.resolveTextContent(URI.file(resource.fsPath)).then(content => content.value)));\n\t\treturn content.then(content => {\n\t\t\tlet codeEditorModel = this.modelService.getModel(resource);\n\t\t\tif (!codeEditorModel) {\n\t\t\t\tcodeEditorModel = this.modelService.createModel(content, this.modeService.createByFilepathOrFirstLine(resource.fsPath), resource);\n\t\t\t} else {\n\t\t\t\tthis.modelService.updateModel(codeEditorModel, content);\n\t\t\t}\n\n\t\t\treturn codeEditorModel;\n\t\t});\n\t}\n}\n\nexport class WalkThroughSnippetContentProvider implements ITextModelContentProvider, IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t) {\n\t\tthis.textModelResolverService.registerTextModelContentProvider(Schemas.walkThroughSnippet, this);\n\t}\n\n\tpublic provideTextContent(resource: URI): Promise<ITextModel> {\n\t\treturn fetch(resource.path).then((res) => res.text()).then((content) => {\n\t\t\tlet codeEditorModel = this.modelService.getModel(resource);\n\t\t\tif (!codeEditorModel) {\n\t\t\t\tconst j = parseInt(resource.fragment);\n\n\t\t\t\tlet codeSnippet = '';\n\t\t\t\tlet languageName = '';\n\t\t\t\tlet i = 0;\n\t\t\t\tconst renderer = new marked.Renderer();\n\t\t\t\trenderer.code = (code, lang) => {\n\t\t\t\t\tif (i++ === j) {\n\t\t\t\t\t\tcodeSnippet = code;\n\t\t\t\t\t\tlanguageName = lang;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t};\n\n\t\t\t\t/*\n\t\t\t\tconst textBuffer = content.value.create(DefaultEndOfLine.LF);\n\t\t\t\tconst lineCount = textBuffer.getLineCount();\n\t\t\t\tconst range = new Range(1, 1, lineCount, textBuffer.getLineLength(lineCount) + 1);\n\t\t\t\tconst markdown = textBuffer.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t\t\t\t*/\n\t\t\t\tmarked(content, { renderer });\n\n\t\t\t\tconst languageId = this.modeService.getModeIdForLanguageName(languageName) || '';\n\t\t\t\tconst languageSelection = this.modeService.create(languageId);\n\t\t\t\tcodeEditorModel = this.modelService.createModel(codeSnippet, languageSelection, resource);\n\t\t\t} else {\n\t\t\t\tthis.modelService.updateModel(codeEditorModel, content);\n\t\t\t}\n\n\t\t\treturn codeEditorModel;\n\t\t});\n\t}\n}\n"]}]}