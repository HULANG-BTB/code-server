{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestController.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestController.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar editOperation_1 = require(\"vs/editor/common/core/editOperation\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar snippetController2_1 = require(\"vs/editor/contrib/snippet/snippetController2\");\nvar snippetParser_1 = require(\"vs/editor/contrib/snippet/snippetParser\");\nvar suggestMemory_1 = require(\"vs/editor/contrib/suggest/suggestMemory\");\nvar nls = require(\"vs/nls\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar suggest_1 = require(\"./suggest\");\nvar suggestAlternatives_1 = require(\"./suggestAlternatives\");\nvar suggestModel_1 = require(\"./suggestModel\");\nvar suggestWidget_1 = require(\"./suggestWidget\");\nvar wordContextKey_1 = require(\"vs/editor/contrib/suggest/wordContextKey\");\nvar event_1 = require(\"vs/base/common/event\");\nvar editorWorkerService_1 = require(\"vs/editor/common/services/editorWorkerService\");\nvar async_1 = require(\"vs/base/common/async\");\nvar characterClassifier_1 = require(\"vs/editor/common/core/characterClassifier\");\nvar types_1 = require(\"vs/base/common/types\");\nvar AcceptOnCharacterOracle = /** @class */ (function () {\n    function AcceptOnCharacterOracle(editor, widget, accept) {\n        var _this = this;\n        this._disposables = [];\n        this._disposables.push(widget.onDidShow(function () { return _this._onItem(widget.getFocusedItem()); }));\n        this._disposables.push(widget.onDidFocus(this._onItem, this));\n        this._disposables.push(widget.onDidHide(this.reset, this));\n        this._disposables.push(editor.onWillType(function (text) {\n            if (_this._active) {\n                var ch = text.charCodeAt(text.length - 1);\n                if (_this._active.acceptCharacters.has(ch) && editor.getConfiguration().contribInfo.acceptSuggestionOnCommitCharacter) {\n                    accept(_this._active.item);\n                }\n            }\n        }));\n    }\n    AcceptOnCharacterOracle.prototype._onItem = function (selected) {\n        if (!selected || !arrays_1.isNonEmptyArray(selected.item.completion.commitCharacters)) {\n            this.reset();\n            return;\n        }\n        var acceptCharacters = new characterClassifier_1.CharacterSet();\n        for (var _i = 0, _a = selected.item.completion.commitCharacters; _i < _a.length; _i++) {\n            var ch = _a[_i];\n            if (ch.length > 0) {\n                acceptCharacters.add(ch.charCodeAt(0));\n            }\n        }\n        this._active = { acceptCharacters: acceptCharacters, item: selected };\n    };\n    AcceptOnCharacterOracle.prototype.reset = function () {\n        this._active = undefined;\n    };\n    AcceptOnCharacterOracle.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n    };\n    return AcceptOnCharacterOracle;\n}());\nvar SuggestController = /** @class */ (function () {\n    function SuggestController(_editor, editorWorker, _memoryService, _commandService, _contextKeyService, _instantiationService) {\n        var _this = this;\n        this._editor = _editor;\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._toDispose = [];\n        this._sticky = false; // for development purposes only\n        this._model = new suggestModel_1.SuggestModel(this._editor, editorWorker);\n        this._widget = new async_1.IdleValue(function () {\n            var widget = _this._instantiationService.createInstance(suggestWidget_1.SuggestWidget, _this._editor);\n            _this._toDispose.push(widget);\n            _this._toDispose.push(widget.onDidSelect(function (item) { return _this._onDidSelectItem(item, false, true); }, _this));\n            // Wire up logic to accept a suggestion on certain characters\n            var autoAcceptOracle = new AcceptOnCharacterOracle(_this._editor, widget, function (item) { return _this._onDidSelectItem(item, false, true); });\n            _this._toDispose.push(autoAcceptOracle, _this._model.onDidSuggest(function (e) {\n                if (e.completionModel.items.length === 0) {\n                    autoAcceptOracle.reset();\n                }\n            }));\n            // Wire up makes text edit context key\n            var makesTextEdit = suggest_1.Context.MakesTextEdit.bindTo(_this._contextKeyService);\n            _this._toDispose.push(widget.onDidFocus(function (_a) {\n                var item = _a.item;\n                var position = _this._editor.getPosition();\n                var startColumn = item.completion.range.startColumn;\n                var endColumn = position.column;\n                var value = true;\n                if (_this._editor.getConfiguration().contribInfo.acceptSuggestionOnEnter === 'smart'\n                    && _this._model.state === suggestModel_1.State.Auto\n                    && !item.completion.command\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & modes_1.CompletionItemInsertTextRule.InsertAsSnippet)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    var oldText = _this._editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn: startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn: endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                makesTextEdit.set(value);\n            }));\n            _this._toDispose.push({\n                dispose: function () { makesTextEdit.reset(); }\n            });\n            return widget;\n        });\n        this._alternatives = new async_1.IdleValue(function () {\n            var res = new suggestAlternatives_1.SuggestAlternatives(_this._editor, _this._contextKeyService);\n            _this._toDispose.push(res);\n            return res;\n        });\n        this._toDispose.push(_instantiationService.createInstance(wordContextKey_1.WordContextKey, _editor));\n        this._toDispose.push(this._model.onDidTrigger(function (e) {\n            _this._widget.getValue().showTriggered(e.auto, e.shy ? 250 : 50);\n        }));\n        this._toDispose.push(this._model.onDidSuggest(function (e) {\n            if (!e.shy) {\n                var index = _this._memoryService.select(_this._editor.getModel(), _this._editor.getPosition(), e.completionModel.items);\n                _this._widget.getValue().showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\n            }\n        }));\n        this._toDispose.push(this._model.onDidCancel(function (e) {\n            if (_this._widget && !e.retrigger) {\n                _this._widget.getValue().hideWidget();\n            }\n        }));\n        this._toDispose.push(this._editor.onDidBlurEditorWidget(function () {\n            if (!_this._sticky) {\n                _this._model.cancel();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        var acceptSuggestionsOnEnter = suggest_1.Context.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        var updateFromConfig = function () {\n            var acceptSuggestionOnEnter = _this._editor.getConfiguration().contribInfo.acceptSuggestionOnEnter;\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.push(this._editor.onDidChangeConfiguration(function (e) { return updateFromConfig(); }));\n        updateFromConfig();\n    }\n    SuggestController.get = function (editor) {\n        return editor.getContribution(SuggestController.ID);\n    };\n    SuggestController.prototype.getId = function () {\n        return SuggestController.ID;\n    };\n    SuggestController.prototype.dispose = function () {\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n        this._widget.dispose();\n        if (this._model) {\n            this._model.dispose();\n        }\n    };\n    SuggestController.prototype._onDidSelectItem = function (event, keepAlternativeSuggestions, undoStops) {\n        var _this = this;\n        var _a;\n        if (!event || !event.item) {\n            this._alternatives.getValue().reset();\n            this._model.cancel();\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var model = this._editor.getModel();\n        var modelVersionNow = model.getAlternativeVersionId();\n        var _b = event.item, suggestion = _b.completion, position = _b.position;\n        var editorColumn = this._editor.getPosition().column;\n        var columnDelta = editorColumn - position.column;\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (undoStops) {\n            this._editor.pushUndoStop();\n        }\n        if (Array.isArray(suggestion.additionalTextEdits)) {\n            this._editor.executeEdits('suggestController.additionalTextEdits', suggestion.additionalTextEdits.map(function (edit) { return editOperation_1.EditOperation.replace(range_1.Range.lift(edit.range), edit.text); }));\n        }\n        // keep item in memory\n        this._memoryService.memorize(model, this._editor.getPosition(), event.item);\n        var insertText = suggestion.insertText;\n        if (!(suggestion.insertTextRules & modes_1.CompletionItemInsertTextRule.InsertAsSnippet)) {\n            insertText = snippetParser_1.SnippetParser.escape(insertText);\n        }\n        var overwriteBefore = position.column - suggestion.range.startColumn;\n        var overwriteAfter = suggestion.range.endColumn - position.column;\n        snippetController2_1.SnippetController2.get(this._editor).insert(insertText, overwriteBefore + columnDelta, overwriteAfter, false, false, !(suggestion.insertTextRules & modes_1.CompletionItemInsertTextRule.KeepWhitespace));\n        if (undoStops) {\n            this._editor.pushUndoStop();\n        }\n        if (!suggestion.command) {\n            // done\n            this._model.cancel();\n        }\n        else if (suggestion.command.id === TriggerSuggestAction.id) {\n            // retigger\n            this._model.trigger({ auto: true, shy: false }, true);\n        }\n        else {\n            // exec command, done\n            (_a = this._commandService).executeCommand.apply(_a, [suggestion.command.id].concat((suggestion.command.arguments ? suggestion.command.arguments.slice() : []))).catch(errors_1.onUnexpectedError);\n            this._model.cancel();\n        }\n        if (keepAlternativeSuggestions) {\n            this._alternatives.getValue().set(event, function (next) {\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    _this._onDidSelectItem(next, false, false);\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(event.item);\n    };\n    SuggestController.prototype._alertCompletionItem = function (_a) {\n        var suggestion = _a.completion;\n        if (arrays_1.isNonEmptyArray(suggestion.additionalTextEdits)) {\n            var msg = nls.localize('arai.alert.snippet', \"Accepting '{0}' made {1} additional edits\", suggestion.label, suggestion.additionalTextEdits.length);\n            aria_1.alert(msg);\n        }\n    };\n    SuggestController.prototype.triggerSuggest = function (onlyFrom) {\n        if (this._editor.hasModel()) {\n            this._model.trigger({ auto: false, shy: false }, false, onlyFrom);\n            this._editor.revealLine(this._editor.getPosition().lineNumber, editorCommon_1.ScrollType.Smooth);\n            this._editor.focus();\n        }\n    };\n    SuggestController.prototype.triggerSuggestAndAcceptBest = function (arg) {\n        var _this = this;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var positionNow = this._editor.getPosition();\n        var fallback = function () {\n            if (positionNow.equals(_this._editor.getPosition())) {\n                _this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        var makesTextEdit = function (item) {\n            if (item.completion.insertTextRules & modes_1.CompletionItemInsertTextRule.InsertAsSnippet || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            var position = _this._editor.getPosition();\n            var startColumn = item.completion.range.startColumn;\n            var endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            var textNow = _this._editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn: startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn: endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        event_1.Event.once(this._model.onDidTrigger)(function (_) {\n            // wait for trigger because only then the cancel-event is trustworthy\n            var listener = [];\n            event_1.Event.any(_this._model.onDidTrigger, _this._model.onDidCancel)(function () {\n                // retrigger or cancel -> try to type default text\n                lifecycle_1.dispose(listener);\n                fallback();\n            }, undefined, listener);\n            _this._model.onDidSuggest(function (_a) {\n                var completionModel = _a.completionModel;\n                lifecycle_1.dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                var index = _this._memoryService.select(_this._editor.getModel(), _this._editor.getPosition(), completionModel.items);\n                var item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                _this._editor.pushUndoStop();\n                _this._onDidSelectItem({ index: index, item: item, model: completionModel }, true, false);\n            }, undefined, listener);\n        });\n        this._model.trigger({ auto: false, shy: true });\n        this._editor.revealLine(positionNow.lineNumber, editorCommon_1.ScrollType.Smooth);\n        this._editor.focus();\n    };\n    SuggestController.prototype.acceptSelectedSuggestion = function (keepAlternativeSuggestions) {\n        if (this._widget) {\n            var item = this._widget.getValue().getFocusedItem();\n            this._onDidSelectItem(item, !!keepAlternativeSuggestions, true);\n        }\n    };\n    SuggestController.prototype.acceptNextSuggestion = function () {\n        this._alternatives.getValue().next();\n    };\n    SuggestController.prototype.acceptPrevSuggestion = function () {\n        this._alternatives.getValue().prev();\n    };\n    SuggestController.prototype.cancelSuggestWidget = function () {\n        if (this._widget) {\n            this._model.cancel();\n            this._widget.getValue().hideWidget();\n        }\n    };\n    SuggestController.prototype.selectNextSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectNext();\n        }\n    };\n    SuggestController.prototype.selectNextPageSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectNextPage();\n        }\n    };\n    SuggestController.prototype.selectLastSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectLast();\n        }\n    };\n    SuggestController.prototype.selectPrevSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectPrevious();\n        }\n    };\n    SuggestController.prototype.selectPrevPageSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectPreviousPage();\n        }\n    };\n    SuggestController.prototype.selectFirstSuggestion = function () {\n        if (this._widget) {\n            this._widget.getValue().selectFirst();\n        }\n    };\n    SuggestController.prototype.toggleSuggestionDetails = function () {\n        if (this._widget) {\n            this._widget.getValue().toggleDetails();\n        }\n    };\n    SuggestController.prototype.toggleSuggestionFocus = function () {\n        if (this._widget) {\n            this._widget.getValue().toggleDetailsFocus();\n        }\n    };\n    SuggestController.ID = 'editor.contrib.suggestController';\n    SuggestController = tslib_1.__decorate([\n        tslib_1.__param(1, editorWorkerService_1.IEditorWorkerService),\n        tslib_1.__param(2, suggestMemory_1.ISuggestMemoryService),\n        tslib_1.__param(3, commands_1.ICommandService),\n        tslib_1.__param(4, contextkey_1.IContextKeyService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService)\n    ], SuggestController);\n    return SuggestController;\n}());\nexports.SuggestController = SuggestController;\nvar TriggerSuggestAction = /** @class */ (function (_super) {\n    tslib_1.__extends(TriggerSuggestAction, _super);\n    function TriggerSuggestAction() {\n        return _super.call(this, {\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: contextkey_1.ContextKeyExpr.and(editorContextKeys_1.EditorContextKeys.writable, editorContextKeys_1.EditorContextKeys.hasCompletionItemProvider),\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n                primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Space,\n                mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Space },\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    TriggerSuggestAction.prototype.run = function (accessor, editor) {\n        var controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.triggerSuggest();\n    };\n    TriggerSuggestAction.id = 'editor.action.triggerSuggest';\n    return TriggerSuggestAction;\n}(editorExtensions_1.EditorAction));\nexports.TriggerSuggestAction = TriggerSuggestAction;\neditorExtensions_1.registerEditorContribution(SuggestController);\neditorExtensions_1.registerEditorAction(TriggerSuggestAction);\nvar weight = keybindingsRegistry_1.KeybindingWeight.EditorContrib + 90;\nvar SuggestCommand = editorExtensions_1.EditorCommand.bindToContribution(SuggestController.get);\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: suggest_1.Context.Visible,\n    handler: function (x) { return x.acceptSelectedSuggestion(true); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.Tab\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestionOnEnter',\n    precondition: suggest_1.Context.Visible,\n    handler: function (x) { return x.acceptSelectedSuggestion(false); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: contextkey_1.ContextKeyExpr.and(editorContextKeys_1.EditorContextKeys.textInputFocus, suggest_1.Context.AcceptSuggestionsOnEnter, suggest_1.Context.MakesTextEdit),\n        primary: keyCodes_1.KeyCode.Enter\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: suggest_1.Context.Visible,\n    handler: function (x) { return x.cancelSuggestWidget(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.Escape,\n        secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape]\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectNextSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.DownArrow,\n        secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow],\n        mac: { primary: keyCodes_1.KeyCode.DownArrow, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_N] }\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectNextPageSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.PageDown,\n        secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.PageDown]\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectLastSuggestion(); }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectPrevSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.UpArrow,\n        secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow],\n        mac: { primary: keyCodes_1.KeyCode.UpArrow, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_P] }\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectPrevPageSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.PageUp,\n        secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.PageUp]\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(suggest_1.Context.Visible, suggest_1.Context.MultipleSuggestions),\n    handler: function (c) { return c.selectFirstSuggestion(); }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: suggest_1.Context.Visible,\n    handler: function (x) { return x.toggleSuggestionDetails(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Space,\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Space }\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: suggest_1.Context.Visible,\n    handler: function (x) { return x.toggleSuggestionFocus(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.Space,\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.Space }\n    }\n}));\n//#region tab completions\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: contextkey_1.ContextKeyExpr.and(contextkey_1.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), wordContextKey_1.WordContextKey.AtEnd, suggest_1.Context.Visible.toNegated(), suggestAlternatives_1.SuggestAlternatives.OtherSuggestions.toNegated(), snippetController2_1.SnippetController2.InSnippetMode.toNegated()),\n    handler: function (x, arg) {\n        x.triggerSuggestAndAcceptBest(types_1.isObject(arg) ? tslib_1.__assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight: weight,\n        primary: keyCodes_1.KeyCode.Tab\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(contextkey_1.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), suggestAlternatives_1.SuggestAlternatives.OtherSuggestions, suggest_1.Context.Visible.toNegated(), snippetController2_1.SnippetController2.InSnippetMode.toNegated()),\n    handler: function (x) { return x.acceptNextSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyCode.Tab\n    }\n}));\neditorExtensions_1.registerEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: contextkey_1.ContextKeyExpr.and(contextkey_1.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), suggestAlternatives_1.SuggestAlternatives.OtherSuggestions, suggest_1.Context.Visible.toNegated(), snippetController2_1.SnippetController2.InSnippetMode.toNegated()),\n    handler: function (x) { return x.acceptPrevSuggestion(); },\n    kbOpts: {\n        weight: weight,\n        kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab\n    }\n}));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestController.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestController.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { CompletionItemProvider, CompletionItemInsertTextRule } from 'vs/editor/common/modes';\nimport { SnippetController2 } from 'vs/editor/contrib/snippet/snippetController2';\nimport { SnippetParser } from 'vs/editor/contrib/snippet/snippetParser';\nimport { ISuggestMemoryService } from 'vs/editor/contrib/suggest/suggestMemory';\nimport * as nls from 'vs/nls';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Context as SuggestContext, CompletionItem } from './suggest';\nimport { SuggestAlternatives } from './suggestAlternatives';\nimport { State, SuggestModel } from './suggestModel';\nimport { ISelectedSuggestion, SuggestWidget } from './suggestWidget';\nimport { WordContextKey } from 'vs/editor/contrib/suggest/wordContextKey';\nimport { Event } from 'vs/base/common/event';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IdleValue } from 'vs/base/common/async';\nimport { CharacterSet } from 'vs/editor/common/core/characterClassifier';\nimport { isObject } from 'vs/base/common/types';\n\nclass AcceptOnCharacterOracle {\n\n\tprivate _disposables: IDisposable[] = [];\n\n\tprivate _active?: {\n\t\treadonly acceptCharacters: CharacterSet;\n\t\treadonly item: ISelectedSuggestion;\n\t};\n\n\tconstructor(editor: ICodeEditor, widget: SuggestWidget, accept: (selected: ISelectedSuggestion) => any) {\n\n\t\tthis._disposables.push(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n\t\tthis._disposables.push(widget.onDidFocus(this._onItem, this));\n\t\tthis._disposables.push(widget.onDidHide(this.reset, this));\n\n\t\tthis._disposables.push(editor.onWillType(text => {\n\t\t\tif (this._active) {\n\t\t\t\tconst ch = text.charCodeAt(text.length - 1);\n\t\t\t\tif (this._active.acceptCharacters.has(ch) && editor.getConfiguration().contribInfo.acceptSuggestionOnCommitCharacter) {\n\t\t\t\t\taccept(this._active.item);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onItem(selected: ISelectedSuggestion | undefined): void {\n\t\tif (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tconst acceptCharacters = new CharacterSet();\n\t\tfor (const ch of selected.item.completion.commitCharacters) {\n\t\t\tif (ch.length > 0) {\n\t\t\t\tacceptCharacters.add(ch.charCodeAt(0));\n\t\t\t}\n\t\t}\n\t\tthis._active = { acceptCharacters, item: selected };\n\t}\n\n\treset(): void {\n\t\tthis._active = undefined;\n\t}\n\n\tdispose() {\n\t\tdispose(this._disposables);\n\t}\n}\n\nexport class SuggestController implements IEditorContribution {\n\n\tprivate static readonly ID: string = 'editor.contrib.suggestController';\n\n\tpublic static get(editor: ICodeEditor): SuggestController {\n\t\treturn editor.getContribution<SuggestController>(SuggestController.ID);\n\t}\n\n\tprivate readonly _model: SuggestModel;\n\tprivate readonly _widget: IdleValue<SuggestWidget>;\n\tprivate readonly _alternatives: IdleValue<SuggestAlternatives>;\n\tprivate _toDispose: IDisposable[] = [];\n\n\tprivate readonly _sticky = false; // for development purposes only\n\n\tconstructor(\n\t\tprivate _editor: ICodeEditor,\n\t\t@IEditorWorkerService editorWorker: IEditorWorkerService,\n\t\t@ISuggestMemoryService private readonly _memoryService: ISuggestMemoryService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tthis._model = new SuggestModel(this._editor, editorWorker);\n\n\t\tthis._widget = new IdleValue(() => {\n\n\t\t\tconst widget = this._instantiationService.createInstance(SuggestWidget, this._editor);\n\n\t\t\tthis._toDispose.push(widget);\n\t\t\tthis._toDispose.push(widget.onDidSelect(item => this._onDidSelectItem(item, false, true), this));\n\n\t\t\t// Wire up logic to accept a suggestion on certain characters\n\t\t\tconst autoAcceptOracle = new AcceptOnCharacterOracle(this._editor, widget, item => this._onDidSelectItem(item, false, true));\n\t\t\tthis._toDispose.push(\n\t\t\t\tautoAcceptOracle,\n\t\t\t\tthis._model.onDidSuggest(e => {\n\t\t\t\t\tif (e.completionModel.items.length === 0) {\n\t\t\t\t\t\tautoAcceptOracle.reset();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t// Wire up makes text edit context key\n\t\t\tlet makesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n\t\t\tthis._toDispose.push(widget.onDidFocus(({ item }) => {\n\n\t\t\t\tconst position = this._editor.getPosition()!;\n\t\t\t\tconst startColumn = item.completion.range.startColumn;\n\t\t\t\tconst endColumn = position.column;\n\t\t\t\tlet value = true;\n\t\t\t\tif (\n\t\t\t\t\tthis._editor.getConfiguration().contribInfo.acceptSuggestionOnEnter === 'smart'\n\t\t\t\t\t&& this._model.state === State.Auto\n\t\t\t\t\t&& !item.completion.command\n\t\t\t\t\t&& !item.completion.additionalTextEdits\n\t\t\t\t\t&& !(item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet)\n\t\t\t\t\t&& endColumn - startColumn === item.completion.insertText.length\n\t\t\t\t) {\n\t\t\t\t\tconst oldText = this._editor.getModel()!.getValueInRange({\n\t\t\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\t\t\tstartColumn,\n\t\t\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\t\t\tendColumn\n\t\t\t\t\t});\n\t\t\t\t\tvalue = oldText !== item.completion.insertText;\n\t\t\t\t}\n\t\t\t\tmakesTextEdit.set(value);\n\t\t\t}));\n\t\t\tthis._toDispose.push({\n\t\t\t\tdispose() { makesTextEdit.reset(); }\n\t\t\t});\n\n\t\t\treturn widget;\n\t\t});\n\n\t\tthis._alternatives = new IdleValue(() => {\n\t\t\tlet res = new SuggestAlternatives(this._editor, this._contextKeyService);\n\t\t\tthis._toDispose.push(res);\n\t\t\treturn res;\n\t\t});\n\n\t\tthis._toDispose.push(_instantiationService.createInstance(WordContextKey, _editor));\n\n\t\tthis._toDispose.push(this._model.onDidTrigger(e => {\n\t\t\tthis._widget.getValue().showTriggered(e.auto, e.shy ? 250 : 50);\n\t\t}));\n\t\tthis._toDispose.push(this._model.onDidSuggest(e => {\n\t\t\tif (!e.shy) {\n\t\t\t\tlet index = this._memoryService.select(this._editor.getModel()!, this._editor.getPosition()!, e.completionModel.items);\n\t\t\t\tthis._widget.getValue().showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.push(this._model.onDidCancel(e => {\n\t\t\tif (this._widget && !e.retrigger) {\n\t\t\t\tthis._widget.getValue().hideWidget();\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.push(this._editor.onDidBlurEditorWidget(() => {\n\t\t\tif (!this._sticky) {\n\t\t\t\tthis._model.cancel();\n\t\t\t}\n\t\t}));\n\n\t\t// Manage the acceptSuggestionsOnEnter context key\n\t\tlet acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n\t\tlet updateFromConfig = () => {\n\t\t\tconst { acceptSuggestionOnEnter } = this._editor.getConfiguration().contribInfo;\n\t\t\tacceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n\t\t};\n\t\tthis._toDispose.push(this._editor.onDidChangeConfiguration((e) => updateFromConfig()));\n\t\tupdateFromConfig();\n\t}\n\n\n\tgetId(): string {\n\t\treturn SuggestController.ID;\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose = dispose(this._toDispose);\n\t\tthis._widget.dispose();\n\t\tif (this._model) {\n\t\t\tthis._model.dispose();\n\t\t}\n\t}\n\n\tprotected _onDidSelectItem(event: ISelectedSuggestion | undefined, keepAlternativeSuggestions: boolean, undoStops: boolean): void {\n\t\tif (!event || !event.item) {\n\t\t\tthis._alternatives.getValue().reset();\n\t\t\tthis._model.cancel();\n\t\t\treturn;\n\t\t}\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst modelVersionNow = model.getAlternativeVersionId();\n\t\tconst { completion: suggestion, position } = event.item;\n\t\tconst editorColumn = this._editor.getPosition().column;\n\t\tconst columnDelta = editorColumn - position.column;\n\n\t\t// pushing undo stops *before* additional text edits and\n\t\t// *after* the main edit\n\t\tif (undoStops) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\n\t\tif (Array.isArray(suggestion.additionalTextEdits)) {\n\t\t\tthis._editor.executeEdits('suggestController.additionalTextEdits', suggestion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n\t\t}\n\n\t\t// keep item in memory\n\t\tthis._memoryService.memorize(model, this._editor.getPosition(), event.item);\n\n\t\tlet { insertText } = suggestion;\n\t\tif (!(suggestion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet)) {\n\t\t\tinsertText = SnippetParser.escape(insertText);\n\t\t}\n\n\t\tconst overwriteBefore = position.column - suggestion.range.startColumn;\n\t\tconst overwriteAfter = suggestion.range.endColumn - position.column;\n\n\t\tSnippetController2.get(this._editor).insert(\n\t\t\tinsertText,\n\t\t\toverwriteBefore + columnDelta,\n\t\t\toverwriteAfter,\n\t\t\tfalse, false,\n\t\t\t!(suggestion.insertTextRules! & CompletionItemInsertTextRule.KeepWhitespace)\n\t\t);\n\n\t\tif (undoStops) {\n\t\t\tthis._editor.pushUndoStop();\n\t\t}\n\n\t\tif (!suggestion.command) {\n\t\t\t// done\n\t\t\tthis._model.cancel();\n\n\t\t} else if (suggestion.command.id === TriggerSuggestAction.id) {\n\t\t\t// retigger\n\t\t\tthis._model.trigger({ auto: true, shy: false }, true);\n\n\t\t} else {\n\t\t\t// exec command, done\n\t\t\tthis._commandService.executeCommand(suggestion.command.id, ...(suggestion.command.arguments ? [...suggestion.command.arguments] : [])).catch(onUnexpectedError);\n\t\t\tthis._model.cancel();\n\t\t}\n\n\t\tif (keepAlternativeSuggestions) {\n\t\t\tthis._alternatives.getValue().set(event, next => {\n\t\t\t\t// this is not so pretty. when inserting the 'next'\n\t\t\t\t// suggestion we undo until we are at the state at\n\t\t\t\t// which we were before inserting the previous suggestion...\n\t\t\t\twhile (model.canUndo()) {\n\t\t\t\t\tif (modelVersionNow !== model.getAlternativeVersionId()) {\n\t\t\t\t\t\tmodel.undo();\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDidSelectItem(next, false, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._alertCompletionItem(event.item);\n\t}\n\n\tprivate _alertCompletionItem({ completion: suggestion }: CompletionItem): void {\n\t\tif (isNonEmptyArray(suggestion.additionalTextEdits)) {\n\t\t\tlet msg = nls.localize('arai.alert.snippet', \"Accepting '{0}' made {1} additional edits\", suggestion.label, suggestion.additionalTextEdits.length);\n\t\t\talert(msg);\n\t\t}\n\t}\n\n\ttriggerSuggest(onlyFrom?: Set<CompletionItemProvider>): void {\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._model.trigger({ auto: false, shy: false }, false, onlyFrom);\n\t\t\tthis._editor.revealLine(this._editor.getPosition().lineNumber, ScrollType.Smooth);\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\ttriggerSuggestAndAcceptBest(arg: { fallback: string }): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\n\t\t}\n\t\tconst positionNow = this._editor.getPosition();\n\n\t\tconst fallback = () => {\n\t\t\tif (positionNow.equals(this._editor.getPosition()!)) {\n\t\t\t\tthis._commandService.executeCommand(arg.fallback);\n\t\t\t}\n\t\t};\n\n\t\tconst makesTextEdit = (item: CompletionItem): boolean => {\n\t\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet || item.completion.additionalTextEdits) {\n\t\t\t\t// snippet, other editor -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst position = this._editor.getPosition()!;\n\t\t\tconst startColumn = item.completion.range.startColumn;\n\t\t\tconst endColumn = position.column;\n\t\t\tif (endColumn - startColumn !== item.completion.insertText.length) {\n\t\t\t\t// unequal lengths -> makes edit\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst textNow = this._editor.getModel()!.getValueInRange({\n\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\tendColumn\n\t\t\t});\n\t\t\t// unequal text -> makes edit\n\t\t\treturn textNow !== item.completion.insertText;\n\t\t};\n\n\t\tEvent.once(this._model.onDidTrigger)(_ => {\n\t\t\t// wait for trigger because only then the cancel-event is trustworthy\n\t\t\tlet listener: IDisposable[] = [];\n\n\t\t\tEvent.any<any>(this._model.onDidTrigger, this._model.onDidCancel)(() => {\n\t\t\t\t// retrigger or cancel -> try to type default text\n\t\t\t\tdispose(listener);\n\t\t\t\tfallback();\n\t\t\t}, undefined, listener);\n\n\t\t\tthis._model.onDidSuggest(({ completionModel }) => {\n\t\t\t\tdispose(listener);\n\t\t\t\tif (completionModel.items.length === 0) {\n\t\t\t\t\tfallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst index = this._memoryService.select(this._editor.getModel()!, this._editor.getPosition()!, completionModel.items);\n\t\t\t\tconst item = completionModel.items[index];\n\t\t\t\tif (!makesTextEdit(item)) {\n\t\t\t\t\tfallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._onDidSelectItem({ index, item, model: completionModel }, true, false);\n\n\t\t\t}, undefined, listener);\n\t\t});\n\n\t\tthis._model.trigger({ auto: false, shy: true });\n\t\tthis._editor.revealLine(positionNow.lineNumber, ScrollType.Smooth);\n\t\tthis._editor.focus();\n\t}\n\n\tacceptSelectedSuggestion(keepAlternativeSuggestions?: boolean): void {\n\t\tif (this._widget) {\n\t\t\tconst item = this._widget.getValue().getFocusedItem();\n\t\t\tthis._onDidSelectItem(item, !!keepAlternativeSuggestions, true);\n\t\t}\n\t}\n\n\tacceptNextSuggestion() {\n\t\tthis._alternatives.getValue().next();\n\t}\n\n\tacceptPrevSuggestion() {\n\t\tthis._alternatives.getValue().prev();\n\t}\n\n\tcancelSuggestWidget(): void {\n\t\tif (this._widget) {\n\t\t\tthis._model.cancel();\n\t\t\tthis._widget.getValue().hideWidget();\n\t\t}\n\t}\n\n\tselectNextSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectNext();\n\t\t}\n\t}\n\n\tselectNextPageSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectNextPage();\n\t\t}\n\t}\n\n\tselectLastSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectLast();\n\t\t}\n\t}\n\n\tselectPrevSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectPrevious();\n\t\t}\n\t}\n\n\tselectPrevPageSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectPreviousPage();\n\t\t}\n\t}\n\n\tselectFirstSuggestion(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().selectFirst();\n\t\t}\n\t}\n\n\ttoggleSuggestionDetails(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().toggleDetails();\n\t\t}\n\t}\n\n\ttoggleSuggestionFocus(): void {\n\t\tif (this._widget) {\n\t\t\tthis._widget.getValue().toggleDetailsFocus();\n\t\t}\n\t}\n}\n\nexport class TriggerSuggestAction extends EditorAction {\n\n\tstatic readonly id = 'editor.action.triggerSuggest';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: TriggerSuggestAction.id,\n\t\t\tlabel: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n\t\t\talias: 'Trigger Suggest',\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst controller = SuggestController.get(editor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.triggerSuggest();\n\t}\n}\n\nregisterEditorContribution(SuggestController);\nregisterEditorAction(TriggerSuggestAction);\n\nconst weight = KeybindingWeight.EditorContrib + 90;\n\nconst SuggestCommand = EditorCommand.bindToContribution<SuggestController>(SuggestController.get);\n\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'acceptSelectedSuggestion',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.acceptSelectedSuggestion(true),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'acceptSelectedSuggestionOnEnter',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.acceptSelectedSuggestion(false),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n\t\tprimary: KeyCode.Enter\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'hideSuggestWidget',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.cancelSuggestWidget(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Escape,\n\t\tsecondary: [KeyMod.Shift | KeyCode.Escape]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectNextSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectNextSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.DownArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.DownArrow],\n\t\tmac: { primary: KeyCode.DownArrow, secondary: [KeyMod.CtrlCmd | KeyCode.DownArrow, KeyMod.WinCtrl | KeyCode.KEY_N] }\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectNextPageSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectNextPageSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.PageDown,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageDown]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectLastSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectLastSuggestion()\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectPrevSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectPrevSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.UpArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.UpArrow],\n\t\tmac: { primary: KeyCode.UpArrow, secondary: [KeyMod.CtrlCmd | KeyCode.UpArrow, KeyMod.WinCtrl | KeyCode.KEY_P] }\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectPrevPageSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectPrevPageSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.PageUp,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.PageUp]\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'selectFirstSuggestion',\n\tprecondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\n\thandler: c => c.selectFirstSuggestion()\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'toggleSuggestionDetails',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.toggleSuggestionDetails(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Space,\n\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.Space }\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'toggleSuggestionFocus',\n\tprecondition: SuggestContext.Visible,\n\thandler: x => x.toggleSuggestionFocus(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Space,\n\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Alt | KeyCode.Space }\n\t}\n}));\n\n//#region tab completions\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertBestCompletion',\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tWordContextKey.AtEnd,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSuggestAlternatives.OtherSuggestions.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: (x, arg) => {\n\n\t\tx.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n\t},\n\tkbOpts: {\n\t\tweight,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertNextSuggestion',\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tSuggestAlternatives.OtherSuggestions,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: x => x.acceptNextSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyCode.Tab\n\t}\n}));\n\nregisterEditorCommand(new SuggestCommand({\n\tid: 'insertPrevSuggestion',\n\tprecondition: ContextKeyExpr.and(\n\t\tContextKeyExpr.equals('config.editor.tabCompletion', 'on'),\n\t\tSuggestAlternatives.OtherSuggestions,\n\t\tSuggestContext.Visible.toNegated(),\n\t\tSnippetController2.InSnippetMode.toNegated()\n\t),\n\thandler: x => x.acceptPrevSuggestion(),\n\tkbOpts: {\n\t\tweight: weight,\n\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\tprimary: KeyMod.Shift | KeyCode.Tab\n\t}\n}));\n"]}]}