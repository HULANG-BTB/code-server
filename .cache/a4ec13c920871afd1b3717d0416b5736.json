{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/dialogs/browser/remoteFileDialog.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/dialogs/browser/remoteFileDialog.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar resources = require(\"vs/base/common/resources\");\nvar objects = require(\"vs/base/common/objects\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar remoteHosts_1 = require(\"vs/platform/remote/common/remoteHosts\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar getIconClasses_1 = require(\"vs/editor/common/services/getIconClasses\");\nvar network_1 = require(\"vs/base/common/network\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar remoteAgentService_1 = require(\"vs/workbench/services/remote/common/remoteAgentService\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextkeys_1 = require(\"vs/workbench/common/contextkeys\");\n// Reference: https://en.wikipedia.org/wiki/Filename\nvar INVALID_FILE_CHARS = platform_1.isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nvar WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nvar RemoteFileDialog = /** @class */ (function () {\n    function RemoteFileDialog(fileService, quickInputService, windowService, labelService, workspaceContextService, notificationService, fileDialogService, modelService, modeService, environmentService, remoteAgentService, contextKeyService) {\n        this.fileService = fileService;\n        this.quickInputService = quickInputService;\n        this.windowService = windowService;\n        this.labelService = labelService;\n        this.workspaceContextService = workspaceContextService;\n        this.notificationService = notificationService;\n        this.fileDialogService = fileDialogService;\n        this.modelService = modelService;\n        this.modeService = modeService;\n        this.environmentService = environmentService;\n        this.remoteAgentService = remoteAgentService;\n        this.scheme = remoteHosts_1.REMOTE_HOST_SCHEME;\n        this.shouldOverwriteFile = false;\n        this.remoteAuthority = this.windowService.getConfiguration().remoteAuthority;\n        this.contextKey = contextkeys_1.RemoteFileDialogContext.bindTo(contextKeyService);\n    }\n    RemoteFileDialog.prototype.showOpenDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var newOptions, openFileString, openFolderString, openFileFolderString, fallbackLabel;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.scheme = this.getScheme(options.defaultUri, options.availableFileSystems);\n                        return [4 /*yield*/, this.getOptions(options)];\n                    case 1:\n                        newOptions = _a.sent();\n                        if (!newOptions) {\n                            return [2 /*return*/, Promise.resolve(undefined)];\n                        }\n                        this.options = newOptions;\n                        openFileString = nls.localize('remoteFileDialog.localFileFallback', '(Open Local File)');\n                        openFolderString = nls.localize('remoteFileDialog.localFolderFallback', '(Open Local Folder)');\n                        openFileFolderString = nls.localize('remoteFileDialog.localFileFolderFallback', '(Open Local File or Folder)');\n                        fallbackLabel = options.canSelectFiles ? (options.canSelectFolders ? openFileFolderString : openFileString) : openFolderString;\n                        this.fallbackListItem = this.getFallbackFileSystem(fallbackLabel);\n                        return [2 /*return*/, this.pickResource().then(function (fileFolderUri) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                var stat;\n                                return tslib_1.__generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!fileFolderUri) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.fileService.resolveFile(fileFolderUri)];\n                                        case 1:\n                                            stat = _a.sent();\n                                            return [2 /*return*/, [{ uri: fileFolderUri, typeHint: stat.isDirectory ? 'folder' : 'file' }]];\n                                        case 2: return [2 /*return*/, Promise.resolve(undefined)];\n                                    }\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.showSaveDialog = function (options) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var newOptions;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.scheme = this.getScheme(options.defaultUri, options.availableFileSystems);\n                        this.requiresTrailing = true;\n                        return [4 /*yield*/, this.getOptions(options, true)];\n                    case 1:\n                        newOptions = _a.sent();\n                        if (!newOptions) {\n                            return [2 /*return*/, Promise.resolve(undefined)];\n                        }\n                        this.options = newOptions;\n                        this.options.canSelectFolders = true;\n                        this.options.canSelectFiles = true;\n                        this.fallbackListItem = this.getFallbackFileSystem(nls.localize('remoteFileDialog.localSaveFallback', '(Save Local File)'));\n                        return [2 /*return*/, new Promise(function (resolve) {\n                                _this.pickResource(true).then(function (folderUri) {\n                                    resolve(folderUri);\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.getOptions = function (options, isSave) {\n        if (isSave === void 0) { isSave = false; }\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var defaultUri, filename, env, newOptions;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        defaultUri = options.defaultUri;\n                        filename = (defaultUri && isSave && (resources.dirname(defaultUri).path === '/')) ? resources.basename(defaultUri) : undefined;\n                        if (!(!defaultUri || filename)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.remoteAgentService.getEnvironment()];\n                    case 1:\n                        env = _a.sent();\n                        if (env) {\n                            defaultUri = env.userHome;\n                        }\n                        else {\n                            defaultUri = uri_1.URI.from({ scheme: this.scheme, path: this.environmentService.userHome });\n                        }\n                        if (filename) {\n                            defaultUri = resources.joinPath(defaultUri, filename);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if ((this.scheme !== network_1.Schemas.file) && !this.fileService.canHandleResource(defaultUri)) {\n                            this.notificationService.info(nls.localize('remoteFileDialog.notConnectedToRemote', 'File system provider for {0} is not available.', defaultUri.toString()));\n                            return [2 /*return*/, undefined];\n                        }\n                        newOptions = objects.deepClone(options);\n                        newOptions.defaultUri = defaultUri;\n                        return [2 /*return*/, newOptions];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.remoteUriFrom = function (path) {\n        path = path.replace(/\\\\/g, '/');\n        return uri_1.URI.from({ scheme: this.scheme, authority: this.remoteAuthority, path: path });\n    };\n    RemoteFileDialog.prototype.getScheme = function (defaultUri, available) {\n        return defaultUri ? defaultUri.scheme : (available ? available[0] : network_1.Schemas.file);\n    };\n    RemoteFileDialog.prototype.getFallbackFileSystem = function (label) {\n        if (this.options && this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n            return { label: label, uri: uri_1.URI.from({ scheme: this.options.availableFileSystems[1] }), isFolder: true };\n        }\n        return undefined;\n    };\n    RemoteFileDialog.prototype.pickResource = function (isSave) {\n        if (isSave === void 0) { isSave = false; }\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var homedir, trailing, stat, ext, e_1, i;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.allowFolderSelection = !!this.options.canSelectFolders;\n                        this.allowFileSelection = !!this.options.canSelectFiles;\n                        this.hidden = false;\n                        homedir = this.options.defaultUri ? this.options.defaultUri : this.workspaceContextService.getWorkspace().folders[0].uri;\n                        ext = resources.extname(homedir);\n                        if (!this.options.defaultUri) return [3 /*break*/, 5];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.fileService.resolveFile(this.options.defaultUri)];\n                    case 2:\n                        stat = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (!stat || !stat.isDirectory) {\n                            homedir = resources.dirname(this.options.defaultUri);\n                            trailing = resources.basename(this.options.defaultUri);\n                        }\n                        // append extension\n                        if (isSave && !ext && this.options.filters) {\n                            for (i = 0; i < this.options.filters.length; i++) {\n                                if (this.options.filters[i].extensions[0] !== '*') {\n                                    ext = '.' + this.options.filters[i].extensions[0];\n                                    trailing = trailing ? trailing + ext : ext;\n                                    break;\n                                }\n                            }\n                        }\n                        _a.label = 5;\n                    case 5:\n                        this.acceptButton = { iconPath: this.getDialogIcons('accept'), tooltip: this.options.title };\n                        return [2 /*return*/, new Promise(function (resolve) {\n                                _this.filePickBox = _this.quickInputService.createQuickPick();\n                                _this.filePickBox.matchOnLabel = false;\n                                _this.filePickBox.autoFocusOnList = false;\n                                var isResolving = false;\n                                var isAcceptHandled = false;\n                                _this.currentFolder = homedir;\n                                _this.filePickBox.buttons = [_this.acceptButton];\n                                _this.filePickBox.onDidTriggerButton(function (_) {\n                                    // accept button\n                                    var resolveValue = _this.remoteUriFrom(_this.filePickBox.value);\n                                    _this.validate(resolveValue).then(function (validated) {\n                                        if (validated) {\n                                            isResolving = true;\n                                            _this.filePickBox.hide();\n                                            resolve(resolveValue);\n                                        }\n                                    });\n                                });\n                                _this.filePickBox.title = _this.options.title;\n                                _this.filePickBox.value = _this.pathFromUri(_this.currentFolder);\n                                _this.filePickBox.items = [];\n                                _this.filePickBox.onDidAccept(function (_) {\n                                    if (isAcceptHandled || _this.filePickBox.busy) {\n                                        return;\n                                    }\n                                    isAcceptHandled = true;\n                                    isResolving = true;\n                                    _this.onDidAccept().then(function (resolveValue) {\n                                        if (resolveValue) {\n                                            _this.filePickBox.hide();\n                                            resolve(resolveValue);\n                                        }\n                                        else if (_this.hidden) {\n                                            resolve(undefined);\n                                        }\n                                        else {\n                                            isResolving = false;\n                                            isAcceptHandled = false;\n                                        }\n                                    });\n                                });\n                                _this.filePickBox.onDidChangeActive(function (i) {\n                                    isAcceptHandled = false;\n                                });\n                                _this.filePickBox.onDidChangeValue(function (value) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                    var trimmedPickBoxValue, valueUri;\n                                    return tslib_1.__generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                if (!(!this.autoComplete || (value !== this.autoComplete))) return [3 /*break*/, 4];\n                                                if (!(value !== this.userValue)) return [3 /*break*/, 3];\n                                                this.filePickBox.validationMessage = undefined;\n                                                this.shouldOverwriteFile = false;\n                                                trimmedPickBoxValue = ((this.filePickBox.value.length > 1) && this.endsWithSlash(this.filePickBox.value)) ? this.filePickBox.value.substr(0, this.filePickBox.value.length - 1) : this.filePickBox.value;\n                                                valueUri = this.remoteUriFrom(trimmedPickBoxValue);\n                                                if (!!resources.isEqual(this.currentFolder, valueUri, true)) return [3 /*break*/, 2];\n                                                return [4 /*yield*/, this.tryUpdateItems(value, this.remoteUriFrom(this.filePickBox.value))];\n                                            case 1:\n                                                _a.sent();\n                                                _a.label = 2;\n                                            case 2:\n                                                this.setActiveItems(value);\n                                                this.userValue = value;\n                                                return [3 /*break*/, 4];\n                                            case 3:\n                                                this.filePickBox.activeItems = [];\n                                                _a.label = 4;\n                                            case 4: return [2 /*return*/];\n                                        }\n                                    });\n                                }); });\n                                _this.filePickBox.onDidHide(function () {\n                                    _this.hidden = true;\n                                    if (!isResolving) {\n                                        resolve(undefined);\n                                    }\n                                    _this.contextKey.set(false);\n                                    _this.filePickBox.dispose();\n                                });\n                                _this.filePickBox.show();\n                                _this.contextKey.set(true);\n                                _this.updateItems(homedir, trailing);\n                                if (trailing) {\n                                    _this.filePickBox.valueSelection = [_this.filePickBox.value.length - trailing.length, _this.filePickBox.value.length - ext.length];\n                                }\n                                else {\n                                    _this.filePickBox.valueSelection = [_this.filePickBox.value.length, _this.filePickBox.value.length];\n                                }\n                                _this.userValue = _this.filePickBox.value;\n                            })];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.onDidAccept = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var selectedItems, resolveValue, navigateValue, trimmedPickBoxValue, inputUri, inputUriDirname, stat, statDirname, e_2, item;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        selectedItems = this.filePickBox.selectedItems;\n                        if (selectedItems && (selectedItems.length > 0) && (selectedItems[0] === this.fallbackListItem)) {\n                            if (this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n                                this.options.availableFileSystems.shift();\n                            }\n                            if (this.requiresTrailing) {\n                                return [2 /*return*/, this.fileDialogService.showSaveDialog(this.options).then(function (result) {\n                                        return result;\n                                    })];\n                            }\n                            else {\n                                return [2 /*return*/, this.fileDialogService.showOpenDialog(this.options).then(function (result) {\n                                        return result ? result[0] : undefined;\n                                    })];\n                            }\n                        }\n                        trimmedPickBoxValue = ((this.filePickBox.value.length > 1) && this.endsWithSlash(this.filePickBox.value)) ? this.filePickBox.value.substr(0, this.filePickBox.value.length - 1) : this.filePickBox.value;\n                        inputUri = this.remoteUriFrom(trimmedPickBoxValue);\n                        inputUriDirname = resources.dirname(inputUri);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.fileService.resolveFile(inputUriDirname)];\n                    case 2:\n                        statDirname = _a.sent();\n                        return [4 /*yield*/, this.fileService.resolveFile(inputUri)];\n                    case 3:\n                        stat = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_2 = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 5:\n                        // Find resolve value\n                        if (this.filePickBox.activeItems.length === 0) {\n                            if (!this.requiresTrailing && resources.isEqual(this.currentFolder, inputUri, true)) {\n                                resolveValue = inputUri;\n                            }\n                            else if (statDirname && statDirname.isDirectory) {\n                                resolveValue = inputUri;\n                            }\n                            else if (stat && stat.isDirectory) {\n                                navigateValue = inputUri;\n                            }\n                        }\n                        else if (this.filePickBox.activeItems.length === 1) {\n                            item = this.filePickBox.selectedItems[0];\n                            if (item) {\n                                if (!item.isFolder) {\n                                    resolveValue = item.uri;\n                                }\n                                else {\n                                    navigateValue = item.uri;\n                                }\n                            }\n                        }\n                        if (!resolveValue) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.validate(resolveValue)];\n                    case 6:\n                        if (_a.sent()) {\n                            return [2 /*return*/, Promise.resolve(resolveValue)];\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        if (navigateValue) {\n                            // Try to navigate into the folder\n                            this.updateItems(navigateValue);\n                        }\n                        else {\n                            // validation error. Path does not exist.\n                        }\n                        _a.label = 8;\n                    case 8: return [2 /*return*/, Promise.resolve(undefined)];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.tryUpdateItems = function (value, valueUri) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var stat, e_3, inputUriDirname, statWithoutTrailing, e_4;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.endsWithSlash(value) || (!resources.isEqual(this.currentFolder, resources.dirname(valueUri), true) && resources.isEqualOrParent(this.currentFolder, resources.dirname(valueUri), true)))) return [3 /*break*/, 10];\n                        stat = void 0;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.fileService.resolveFile(valueUri)];\n                    case 2:\n                        stat = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_3 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (!(stat && stat.isDirectory && (resources.basename(valueUri) !== '.'))) return [3 /*break*/, 5];\n                        this.updateItems(valueUri);\n                        return [3 /*break*/, 10];\n                    case 5:\n                        inputUriDirname = resources.dirname(valueUri);\n                        if (!!resources.isEqual(this.currentFolder, inputUriDirname, true)) return [3 /*break*/, 10];\n                        statWithoutTrailing = void 0;\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, this.fileService.resolveFile(inputUriDirname)];\n                    case 7:\n                        statWithoutTrailing = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        e_4 = _a.sent();\n                        return [3 /*break*/, 9];\n                    case 9:\n                        if (statWithoutTrailing && statWithoutTrailing.isDirectory && (resources.basename(valueUri) !== '.')) {\n                            this.updateItems(inputUriDirname, resources.basename(valueUri));\n                        }\n                        _a.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.setActiveItems = function (value) {\n        if (!this.userValue || (value !== this.userValue.substring(0, value.length))) {\n            var inputBasename = resources.basename(this.remoteUriFrom(value));\n            var hasMatch = false;\n            for (var i = 0; i < this.filePickBox.items.length; i++) {\n                var item = this.filePickBox.items[i];\n                var itemBasename = (item.label === '..') ? item.label : resources.basename(item.uri);\n                if ((itemBasename.length >= inputBasename.length) && (itemBasename.substr(0, inputBasename.length).toLowerCase() === inputBasename.toLowerCase())) {\n                    this.filePickBox.activeItems = [item];\n                    var insertValue = itemBasename.substr(inputBasename.length);\n                    this.autoComplete = value + insertValue;\n                    if (this.filePickBox.inputHasFocus()) {\n                        document.execCommand('insertText', false, insertValue);\n                        this.filePickBox.valueSelection = [value.length, this.filePickBox.value.length];\n                    }\n                    hasMatch = true;\n                    break;\n                }\n            }\n            if (!hasMatch) {\n                this.filePickBox.activeItems = [];\n            }\n        }\n    };\n    RemoteFileDialog.prototype.validate = function (uri) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var stat, statDirname, e_5;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this.fileService.resolveFile(resources.dirname(uri))];\n                    case 1:\n                        statDirname = _a.sent();\n                        return [4 /*yield*/, this.fileService.resolveFile(uri)];\n                    case 2:\n                        stat = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_5 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (this.requiresTrailing) { // save\n                            if (stat && stat.isDirectory) {\n                                // Can't do this\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolder', 'The folder already exists. Please use a new file name.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                            else if (stat && !this.shouldOverwriteFile) {\n                                // Replacing a file.\n                                this.shouldOverwriteFile = true;\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateExisting', '{0} already exists. Are you sure you want to overwrite it?', resources.basename(uri));\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                            else if (!this.isValidBaseName(resources.basename(uri))) {\n                                // Filename not allowed\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateBadFilename', 'Please enter a valid file name.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                            else if (!statDirname || !statDirname.isDirectory) {\n                                // Folder to save in doesn't exist\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                        }\n                        else { // open\n                            if (!stat) {\n                                // File or folder doesn't exist\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                            else if (stat.isDirectory && !this.allowFolderSelection) {\n                                // Folder selected when folder selection not permitted\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFileOnly', 'Please select a file.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                            else if (!stat.isDirectory && !this.allowFileSelection) {\n                                // File selected when file selection not permitted\n                                this.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolderOnly', 'Please select a folder.');\n                                return [2 /*return*/, Promise.resolve(false)];\n                            }\n                        }\n                        return [2 /*return*/, Promise.resolve(true)];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.updateItems = function (newFolder, trailing) {\n        var _this = this;\n        this.currentFolder = newFolder;\n        this.filePickBox.value = trailing ? this.pathFromUri(resources.joinPath(newFolder, trailing)) : this.pathFromUri(newFolder, true);\n        this.filePickBox.busy = true;\n        this.createItems(this.currentFolder).then(function (items) {\n            _this.filePickBox.items = items;\n            if (_this.allowFolderSelection) {\n                _this.filePickBox.activeItems = [];\n            }\n            _this.filePickBox.busy = false;\n        });\n    };\n    RemoteFileDialog.prototype.pathFromUri = function (uri, endWithSeparator) {\n        if (endWithSeparator === void 0) { endWithSeparator = false; }\n        var sep = this.labelService.getSeparator(uri.scheme, uri.authority);\n        var result;\n        if (sep === '/') {\n            result = uri.fsPath.replace(/\\\\/g, sep);\n        }\n        else {\n            result = uri.fsPath.replace(/\\//g, sep);\n        }\n        if (endWithSeparator && !this.endsWithSlash(result)) {\n            result = result + sep;\n        }\n        return result;\n    };\n    RemoteFileDialog.prototype.isValidBaseName = function (name) {\n        if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n            return false; // require a name that is not just whitespace\n        }\n        INVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n        if (INVALID_FILE_CHARS.test(name)) {\n            return false; // check for certain invalid file characters\n        }\n        if (platform_1.isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n            return false; // check for certain invalid file names\n        }\n        if (name === '.' || name === '..') {\n            return false; // check for reserved values\n        }\n        if (platform_1.isWindows && name[name.length - 1] === '.') {\n            return false; // Windows: file cannot end with a \".\"\n        }\n        if (platform_1.isWindows && name.length !== name.trim().length) {\n            return false; // Windows: file cannot end with a whitespace\n        }\n        return true;\n    };\n    RemoteFileDialog.prototype.endsWithSlash = function (s) {\n        return /[\\/\\\\]$/.test(s);\n    };\n    RemoteFileDialog.prototype.basenameWithTrailingSlash = function (fullPath) {\n        var child = this.pathFromUri(fullPath, true);\n        var parent = this.pathFromUri(resources.dirname(fullPath), true);\n        return child.substring(parent.length);\n    };\n    RemoteFileDialog.prototype.createBackItem = function (currFolder) {\n        var parentFolder = resources.dirname(currFolder);\n        if (!resources.isEqual(currFolder, parentFolder, true)) {\n            return { label: '..', uri: resources.dirname(currFolder), isFolder: true };\n        }\n        return null;\n    };\n    RemoteFileDialog.prototype.createItems = function (currentFolder) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var result, backDir, folder, fileNames, items, _i, items_1, item, e_6, sorted;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        result = [];\n                        backDir = this.createBackItem(currentFolder);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.fileService.resolveFile(currentFolder)];\n                    case 2:\n                        folder = _a.sent();\n                        fileNames = folder.children ? folder.children.map(function (child) { return child.name; }) : [];\n                        return [4 /*yield*/, Promise.all(fileNames.map(function (fileName) { return _this.createItem(fileName, currentFolder); }))];\n                    case 3:\n                        items = _a.sent();\n                        for (_i = 0, items_1 = items; _i < items_1.length; _i++) {\n                            item = items_1[_i];\n                            if (item) {\n                                result.push(item);\n                            }\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_6 = _a.sent();\n                        // ignore\n                        console.log(e_6);\n                        return [3 /*break*/, 5];\n                    case 5:\n                        sorted = result.sort(function (i1, i2) {\n                            if (i1.isFolder !== i2.isFolder) {\n                                return i1.isFolder ? -1 : 1;\n                            }\n                            var trimmed1 = _this.endsWithSlash(i1.label) ? i1.label.substr(0, i1.label.length - 1) : i1.label;\n                            var trimmed2 = _this.endsWithSlash(i2.label) ? i2.label.substr(0, i2.label.length - 1) : i2.label;\n                            return trimmed1.localeCompare(trimmed2);\n                        });\n                        if (backDir) {\n                            sorted.unshift(backDir);\n                        }\n                        if (this.fallbackListItem) {\n                            sorted.push(this.fallbackListItem);\n                        }\n                        return [2 /*return*/, sorted];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.filterFile = function (file) {\n        if (this.filters) {\n            var ext = resources.extname(file);\n            for (var i = 0; i < this.filters.length; i++) {\n                for (var j = 0; j < this.filters[i].extensions.length; j++) {\n                    if (ext === ('.' + this.filters[i].extensions[j])) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return true;\n    };\n    RemoteFileDialog.prototype.createItem = function (filename, parent) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var fullPath, stat, e_7;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fullPath = resources.joinPath(parent, filename);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.fileService.resolveFile(fullPath)];\n                    case 2:\n                        stat = _a.sent();\n                        if (stat.isDirectory) {\n                            filename = this.basenameWithTrailingSlash(fullPath);\n                            return [2 /*return*/, { label: filename, uri: fullPath, isFolder: true, iconClasses: getIconClasses_1.getIconClasses(this.modelService, this.modeService, fullPath || undefined, files_1.FileKind.FOLDER) }];\n                        }\n                        else if (!stat.isDirectory && this.allowFileSelection && this.filterFile(fullPath)) {\n                            return [2 /*return*/, { label: filename, uri: fullPath, isFolder: false, iconClasses: getIconClasses_1.getIconClasses(this.modelService, this.modeService, fullPath || undefined) }];\n                        }\n                        return [2 /*return*/, undefined];\n                    case 3:\n                        e_7 = _a.sent();\n                        return [2 /*return*/, undefined];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RemoteFileDialog.prototype.getDialogIcons = function (name) {\n        return {\n            dark: uri_1.URI.parse(require.toUrl(\"vs/workbench/services/dialogs/browser/media/dark/\" + name + \".svg\")),\n            light: uri_1.URI.parse(require.toUrl(\"vs/workbench/services/dialogs/browser/media/light/\" + name + \".svg\"))\n        };\n    };\n    RemoteFileDialog = tslib_1.__decorate([\n        tslib_1.__param(0, files_1.IFileService),\n        tslib_1.__param(1, quickInput_1.IQuickInputService),\n        tslib_1.__param(2, windows_1.IWindowService),\n        tslib_1.__param(3, label_1.ILabelService),\n        tslib_1.__param(4, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(5, notification_1.INotificationService),\n        tslib_1.__param(6, dialogs_1.IFileDialogService),\n        tslib_1.__param(7, modelService_1.IModelService),\n        tslib_1.__param(8, modeService_1.IModeService),\n        tslib_1.__param(9, environment_1.IEnvironmentService),\n        tslib_1.__param(10, remoteAgentService_1.IRemoteAgentService),\n        tslib_1.__param(11, contextkey_1.IContextKeyService)\n    ], RemoteFileDialog);\n    return RemoteFileDialog;\n}());\nexports.RemoteFileDialog = RemoteFileDialog;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/dialogs/browser/remoteFileDialog.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/dialogs/browser/remoteFileDialog.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as resources from 'vs/base/common/resources';\nimport * as objects from 'vs/base/common/objects';\nimport { IFileService, IFileStat, FileKind } from 'vs/platform/files/common/files';\nimport { IQuickInputService, IQuickPickItem, IQuickPick, IQuickInputButton } from 'vs/platform/quickinput/common/quickInput';\nimport { URI } from 'vs/base/common/uri';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISaveDialogOptions, IOpenDialogOptions, IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { REMOTE_HOST_SCHEME } from 'vs/platform/remote/common/remoteHosts';\nimport { IWindowService, IURIToOpen, FileFilter } from 'vs/platform/windows/common/windows';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { RemoteFileDialogContext } from 'vs/workbench/common/contextkeys';\n\ninterface FileQuickPickItem extends IQuickPickItem {\n\turi: URI;\n\tisFolder: boolean;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst INVALID_FILE_CHARS = isWindows ? /[\\\\/:\\*\\?\"<>\\|]/g : /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\n\nexport class RemoteFileDialog {\n\tprivate acceptButton: IQuickInputButton;\n\tprivate fallbackListItem: FileQuickPickItem | undefined;\n\tprivate options: IOpenDialogOptions;\n\tprivate currentFolder: URI;\n\tprivate filePickBox: IQuickPick<FileQuickPickItem>;\n\tprivate filters: FileFilter[] | undefined;\n\tprivate hidden: boolean;\n\tprivate allowFileSelection: boolean;\n\tprivate allowFolderSelection: boolean;\n\tprivate remoteAuthority: string | undefined;\n\tprivate requiresTrailing: boolean;\n\tprivate userValue: string;\n\tprivate scheme: string = REMOTE_HOST_SCHEME;\n\tprivate shouldOverwriteFile: boolean = false;\n\tprivate autoComplete: string;\n\tprivate contextKey: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\n\t) {\n\t\tthis.remoteAuthority = this.windowService.getConfiguration().remoteAuthority;\n\t\tthis.contextKey = RemoteFileDialogContext.bindTo(contextKeyService);\n\t}\n\n\tpublic async showOpenDialog(options: IOpenDialogOptions = {}): Promise<IURIToOpen[] | undefined> {\n\t\tthis.scheme = this.getScheme(options.defaultUri, options.availableFileSystems);\n\t\tconst newOptions = await this.getOptions(options);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\n\t\tconst openFileString = nls.localize('remoteFileDialog.localFileFallback', '(Open Local File)');\n\t\tconst openFolderString = nls.localize('remoteFileDialog.localFolderFallback', '(Open Local Folder)');\n\t\tconst openFileFolderString = nls.localize('remoteFileDialog.localFileFolderFallback', '(Open Local File or Folder)');\n\t\tlet fallbackLabel = options.canSelectFiles ? (options.canSelectFolders ? openFileFolderString : openFileString) : openFolderString;\n\t\tthis.fallbackListItem = this.getFallbackFileSystem(fallbackLabel);\n\n\t\treturn this.pickResource().then(async fileFolderUri => {\n\t\t\tif (fileFolderUri) {\n\t\t\t\tconst stat = await this.fileService.resolveFile(fileFolderUri);\n\t\t\t\treturn <IURIToOpen[]>[{ uri: fileFolderUri, typeHint: stat.isDirectory ? 'folder' : 'file' }];\n\n\t\t\t}\n\t\t\treturn Promise.resolve(undefined);\n\t\t});\n\t}\n\n\tpublic async showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tthis.scheme = this.getScheme(options.defaultUri, options.availableFileSystems);\n\t\tthis.requiresTrailing = true;\n\t\tconst newOptions = await this.getOptions(options, true);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\t\tthis.options.canSelectFolders = true;\n\t\tthis.options.canSelectFiles = true;\n\t\tthis.fallbackListItem = this.getFallbackFileSystem(nls.localize('remoteFileDialog.localSaveFallback', '(Save Local File)'));\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.pickResource(true).then(folderUri => {\n\t\t\t\tresolve(folderUri);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async getOptions(options: ISaveDialogOptions | IOpenDialogOptions, isSave: boolean = false): Promise<IOpenDialogOptions | undefined> {\n\t\tlet defaultUri = options.defaultUri;\n\t\tconst filename = (defaultUri && isSave && (resources.dirname(defaultUri).path === '/')) ? resources.basename(defaultUri) : undefined;\n\t\tif (!defaultUri || filename) {\n\t\t\tconst env = await this.remoteAgentService.getEnvironment();\n\t\t\tif (env) {\n\t\t\t\tdefaultUri = env.userHome;\n\t\t\t} else {\n\t\t\t\tdefaultUri = URI.from({ scheme: this.scheme, path: this.environmentService.userHome });\n\t\t\t}\n\t\t\tif (filename) {\n\t\t\t\tdefaultUri = resources.joinPath(defaultUri, filename);\n\t\t\t}\n\t\t}\n\t\tif ((this.scheme !== Schemas.file) && !this.fileService.canHandleResource(defaultUri)) {\n\t\t\tthis.notificationService.info(nls.localize('remoteFileDialog.notConnectedToRemote', 'File system provider for {0} is not available.', defaultUri.toString()));\n\t\t\treturn undefined;\n\t\t}\n\t\tconst newOptions: IOpenDialogOptions = objects.deepClone(options);\n\t\tnewOptions.defaultUri = defaultUri;\n\t\treturn newOptions;\n\t}\n\n\tprivate remoteUriFrom(path: string): URI {\n\t\tpath = path.replace(/\\\\/g, '/');\n\t\treturn URI.from({ scheme: this.scheme, authority: this.remoteAuthority, path });\n\t}\n\n\tprivate getScheme(defaultUri: URI | undefined, available: string[] | undefined): string {\n\t\treturn defaultUri ? defaultUri.scheme : (available ? available[0] : Schemas.file);\n\t}\n\n\tprivate getFallbackFileSystem(label: string): FileQuickPickItem | undefined {\n\t\tif (this.options && this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n\t\t\treturn { label: label, uri: URI.from({ scheme: this.options.availableFileSystems[1] }), isFolder: true };\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async pickResource(isSave: boolean = false): Promise<URI | undefined> {\n\t\tthis.allowFolderSelection = !!this.options.canSelectFolders;\n\t\tthis.allowFileSelection = !!this.options.canSelectFiles;\n\t\tthis.hidden = false;\n\t\tlet homedir: URI = this.options.defaultUri ? this.options.defaultUri : this.workspaceContextService.getWorkspace().folders[0].uri;\n\t\tlet trailing: string | undefined;\n\t\tlet stat: IFileStat | undefined;\n\t\tlet ext: string = resources.extname(homedir);\n\t\tif (this.options.defaultUri) {\n\t\t\ttry {\n\t\t\t\tstat = await this.fileService.resolveFile(this.options.defaultUri);\n\t\t\t} catch (e) {\n\t\t\t\t// The file or folder doesn't exist\n\t\t\t}\n\t\t\tif (!stat || !stat.isDirectory) {\n\t\t\t\thomedir = resources.dirname(this.options.defaultUri);\n\t\t\t\ttrailing = resources.basename(this.options.defaultUri);\n\t\t\t}\n\t\t\t// append extension\n\t\t\tif (isSave && !ext && this.options.filters) {\n\t\t\t\tfor (let i = 0; i < this.options.filters.length; i++) {\n\t\t\t\t\tif (this.options.filters[i].extensions[0] !== '*') {\n\t\t\t\t\t\text = '.' + this.options.filters[i].extensions[0];\n\t\t\t\t\t\ttrailing = trailing ? trailing + ext : ext;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.acceptButton = { iconPath: this.getDialogIcons('accept'), tooltip: this.options.title };\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.filePickBox = this.quickInputService.createQuickPick<FileQuickPickItem>();\n\t\t\tthis.filePickBox.matchOnLabel = false;\n\t\t\tthis.filePickBox.autoFocusOnList = false;\n\n\t\t\tlet isResolving = false;\n\t\t\tlet isAcceptHandled = false;\n\t\t\tthis.currentFolder = homedir;\n\t\t\tthis.filePickBox.buttons = [this.acceptButton];\n\t\t\tthis.filePickBox.onDidTriggerButton(_ => {\n\t\t\t\t// accept button\n\t\t\t\tconst resolveValue = this.remoteUriFrom(this.filePickBox.value);\n\t\t\t\tthis.validate(resolveValue).then(validated => {\n\t\t\t\t\tif (validated) {\n\t\t\t\t\t\tisResolving = true;\n\t\t\t\t\t\tthis.filePickBox.hide();\n\t\t\t\t\t\tresolve(resolveValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.filePickBox.title = this.options.title;\n\t\t\tthis.filePickBox.value = this.pathFromUri(this.currentFolder);\n\t\t\tthis.filePickBox.items = [];\n\t\t\tthis.filePickBox.onDidAccept(_ => {\n\t\t\t\tif (isAcceptHandled || this.filePickBox.busy) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tisAcceptHandled = true;\n\t\t\t\tisResolving = true;\n\t\t\t\tthis.onDidAccept().then(resolveValue => {\n\t\t\t\t\tif (resolveValue) {\n\t\t\t\t\t\tthis.filePickBox.hide();\n\t\t\t\t\t\tresolve(resolveValue);\n\t\t\t\t\t} else if (this.hidden) {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisResolving = false;\n\t\t\t\t\t\tisAcceptHandled = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.filePickBox.onDidChangeActive(i => {\n\t\t\t\tisAcceptHandled = false;\n\t\t\t});\n\n\t\t\tthis.filePickBox.onDidChangeValue(async value => {\n\t\t\t\t// onDidChangeValue can also be triggered by the auto complete, so if it looks like the auto complete, don't do anything\n\t\t\t\tif (!this.autoComplete || (value !== this.autoComplete)) {\n\t\t\t\t\tif (value !== this.userValue) {\n\t\t\t\t\t\tthis.filePickBox.validationMessage = undefined;\n\t\t\t\t\t\tthis.shouldOverwriteFile = false;\n\t\t\t\t\t\tconst trimmedPickBoxValue = ((this.filePickBox.value.length > 1) && this.endsWithSlash(this.filePickBox.value)) ? this.filePickBox.value.substr(0, this.filePickBox.value.length - 1) : this.filePickBox.value;\n\t\t\t\t\t\tconst valueUri = this.remoteUriFrom(trimmedPickBoxValue);\n\t\t\t\t\t\tif (!resources.isEqual(this.currentFolder, valueUri, true)) {\n\t\t\t\t\t\t\tawait this.tryUpdateItems(value, this.remoteUriFrom(this.filePickBox.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setActiveItems(value);\n\t\t\t\t\t\tthis.userValue = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.filePickBox.onDidHide(() => {\n\t\t\t\tthis.hidden = true;\n\t\t\t\tif (!isResolving) {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t\tthis.contextKey.set(false);\n\t\t\t\tthis.filePickBox.dispose();\n\t\t\t});\n\n\t\t\tthis.filePickBox.show();\n\t\t\tthis.contextKey.set(true);\n\t\t\tthis.updateItems(homedir, trailing);\n\t\t\tif (trailing) {\n\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length - trailing.length, this.filePickBox.value.length - ext.length];\n\t\t\t} else {\n\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n\t\t\t}\n\t\t\tthis.userValue = this.filePickBox.value;\n\t\t});\n\t}\n\n\tprivate async onDidAccept(): Promise<URI | undefined> {\n\t\t// Check if Open Local has been selected\n\t\tconst selectedItems: ReadonlyArray<FileQuickPickItem> = this.filePickBox.selectedItems;\n\t\tif (selectedItems && (selectedItems.length > 0) && (selectedItems[0] === this.fallbackListItem)) {\n\t\t\tif (this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n\t\t\t\tthis.options.availableFileSystems.shift();\n\t\t\t}\n\t\t\tif (this.requiresTrailing) {\n\t\t\t\treturn this.fileDialogService.showSaveDialog(this.options).then(result => {\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.fileDialogService.showOpenDialog(this.options).then(result => {\n\t\t\t\t\treturn result ? result[0] : undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet resolveValue: URI | undefined;\n\t\tlet navigateValue: URI | undefined;\n\t\tconst trimmedPickBoxValue = ((this.filePickBox.value.length > 1) && this.endsWithSlash(this.filePickBox.value)) ? this.filePickBox.value.substr(0, this.filePickBox.value.length - 1) : this.filePickBox.value;\n\t\tconst inputUri = this.remoteUriFrom(trimmedPickBoxValue);\n\t\tconst inputUriDirname = resources.dirname(inputUri);\n\t\tlet stat: IFileStat | undefined;\n\t\tlet statDirname: IFileStat | undefined;\n\t\ttry {\n\t\t\tstatDirname = await this.fileService.resolveFile(inputUriDirname);\n\t\t\tstat = await this.fileService.resolveFile(inputUri);\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\n\t\t// Find resolve value\n\t\tif (this.filePickBox.activeItems.length === 0) {\n\t\t\tif (!this.requiresTrailing && resources.isEqual(this.currentFolder, inputUri, true)) {\n\t\t\t\tresolveValue = inputUri;\n\t\t\t} else if (statDirname && statDirname.isDirectory) {\n\t\t\t\tresolveValue = inputUri;\n\t\t\t} else if (stat && stat.isDirectory) {\n\t\t\t\tnavigateValue = inputUri;\n\t\t\t}\n\t\t} else if (this.filePickBox.activeItems.length === 1) {\n\t\t\tconst item = this.filePickBox.selectedItems[0];\n\t\t\tif (item) {\n\t\t\t\tif (!item.isFolder) {\n\t\t\t\t\tresolveValue = item.uri;\n\t\t\t\t} else {\n\t\t\t\t\tnavigateValue = item.uri;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resolveValue) {\n\t\t\tif (await this.validate(resolveValue)) {\n\t\t\t\treturn Promise.resolve(resolveValue);\n\t\t\t}\n\t\t} else if (navigateValue) {\n\t\t\t// Try to navigate into the folder\n\t\t\tthis.updateItems(navigateValue);\n\t\t} else {\n\t\t\t// validation error. Path does not exist.\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate async tryUpdateItems(value: string, valueUri: URI) {\n\t\tif (this.endsWithSlash(value) || (!resources.isEqual(this.currentFolder, resources.dirname(valueUri), true) && resources.isEqualOrParent(this.currentFolder, resources.dirname(valueUri), true))) {\n\t\t\tlet stat: IFileStat | undefined;\n\t\t\ttry {\n\t\t\t\tstat = await this.fileService.resolveFile(valueUri);\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t\tif (stat && stat.isDirectory && (resources.basename(valueUri) !== '.')) {\n\t\t\t\tthis.updateItems(valueUri);\n\t\t\t} else {\n\t\t\t\tconst inputUriDirname = resources.dirname(valueUri);\n\t\t\t\tif (!resources.isEqual(this.currentFolder, inputUriDirname, true)) {\n\t\t\t\t\tlet statWithoutTrailing: IFileStat | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tstatWithoutTrailing = await this.fileService.resolveFile(inputUriDirname);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t\tif (statWithoutTrailing && statWithoutTrailing.isDirectory && (resources.basename(valueUri) !== '.')) {\n\t\t\t\t\t\tthis.updateItems(inputUriDirname, resources.basename(valueUri));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setActiveItems(value: string) {\n\t\tif (!this.userValue || (value !== this.userValue.substring(0, value.length))) {\n\t\t\tconst inputBasename = resources.basename(this.remoteUriFrom(value));\n\t\t\tlet hasMatch = false;\n\t\t\tfor (let i = 0; i < this.filePickBox.items.length; i++) {\n\t\t\t\tconst item = <FileQuickPickItem>this.filePickBox.items[i];\n\t\t\t\tconst itemBasename = (item.label === '..') ? item.label : resources.basename(item.uri);\n\t\t\t\tif ((itemBasename.length >= inputBasename.length) && (itemBasename.substr(0, inputBasename.length).toLowerCase() === inputBasename.toLowerCase())) {\n\t\t\t\t\tthis.filePickBox.activeItems = [item];\n\t\t\t\t\tconst insertValue = itemBasename.substr(inputBasename.length);\n\t\t\t\t\tthis.autoComplete = value + insertValue;\n\t\t\t\t\tif (this.filePickBox.inputHasFocus()) {\n\t\t\t\t\t\tdocument.execCommand('insertText', false, insertValue);\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [value.length, this.filePickBox.value.length];\n\t\t\t\t\t}\n\t\t\t\t\thasMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasMatch) {\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async validate(uri: URI): Promise<boolean> {\n\t\tlet stat: IFileStat | undefined;\n\t\tlet statDirname: IFileStat | undefined;\n\t\ttry {\n\t\t\tstatDirname = await this.fileService.resolveFile(resources.dirname(uri));\n\t\t\tstat = await this.fileService.resolveFile(uri);\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\n\t\tif (this.requiresTrailing) { // save\n\t\t\tif (stat && stat.isDirectory) {\n\t\t\t\t// Can't do this\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolder', 'The folder already exists. Please use a new file name.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat && !this.shouldOverwriteFile) {\n\t\t\t\t// Replacing a file.\n\t\t\t\tthis.shouldOverwriteFile = true;\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateExisting', '{0} already exists. Are you sure you want to overwrite it?', resources.basename(uri));\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!this.isValidBaseName(resources.basename(uri))) {\n\t\t\t\t// Filename not allowed\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateBadFilename', 'Please enter a valid file name.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!statDirname || !statDirname.isDirectory) {\n\t\t\t\t// Folder to save in doesn't exist\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t} else { // open\n\t\t\tif (!stat) {\n\t\t\t\t// File or folder doesn't exist\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat.isDirectory && !this.allowFolderSelection) {\n\t\t\t\t// Folder selected when folder selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFileOnly', 'Please select a file.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!stat.isDirectory && !this.allowFileSelection) {\n\t\t\t\t// File selected when file selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolderOnly', 'Please select a folder.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprivate updateItems(newFolder: URI, trailing?: string) {\n\t\tthis.currentFolder = newFolder;\n\t\tthis.filePickBox.value = trailing ? this.pathFromUri(resources.joinPath(newFolder, trailing)) : this.pathFromUri(newFolder, true);\n\t\tthis.filePickBox.busy = true;\n\t\tthis.createItems(this.currentFolder).then(items => {\n\t\t\tthis.filePickBox.items = items;\n\t\t\tif (this.allowFolderSelection) {\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t}\n\t\t\tthis.filePickBox.busy = false;\n\t\t});\n\t}\n\n\tprivate pathFromUri(uri: URI, endWithSeparator: boolean = false): string {\n\t\tconst sep = this.labelService.getSeparator(uri.scheme, uri.authority);\n\t\tlet result: string;\n\t\tif (sep === '/') {\n\t\t\tresult = uri.fsPath.replace(/\\\\/g, sep);\n\t\t} else {\n\t\t\tresult = uri.fsPath.replace(/\\//g, sep);\n\t\t}\n\t\tif (endWithSeparator && !this.endsWithSlash(result)) {\n\t\t\tresult = result + sep;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate isValidBaseName(name: string): boolean {\n\t\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\t\treturn false; // require a name that is not just whitespace\n\t\t}\n\n\t\tINVALID_FILE_CHARS.lastIndex = 0; // the holy grail of software development\n\t\tif (INVALID_FILE_CHARS.test(name)) {\n\t\t\treturn false; // check for certain invalid file characters\n\t\t}\n\n\t\tif (isWindows && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\t\treturn false; // check for certain invalid file names\n\t\t}\n\n\t\tif (name === '.' || name === '..') {\n\t\t\treturn false; // check for reserved values\n\t\t}\n\n\t\tif (isWindows && name[name.length - 1] === '.') {\n\t\t\treturn false; // Windows: file cannot end with a \".\"\n\t\t}\n\n\t\tif (isWindows && name.length !== name.trim().length) {\n\t\t\treturn false; // Windows: file cannot end with a whitespace\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate endsWithSlash(s: string) {\n\t\treturn /[\\/\\\\]$/.test(s);\n\t}\n\n\tprivate basenameWithTrailingSlash(fullPath: URI): string {\n\t\tconst child = this.pathFromUri(fullPath, true);\n\t\tconst parent = this.pathFromUri(resources.dirname(fullPath), true);\n\t\treturn child.substring(parent.length);\n\t}\n\n\tprivate createBackItem(currFolder: URI): FileQuickPickItem | null {\n\t\tconst parentFolder = resources.dirname(currFolder)!;\n\t\tif (!resources.isEqual(currFolder, parentFolder, true)) {\n\t\t\treturn { label: '..', uri: resources.dirname(currFolder), isFolder: true };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async createItems(currentFolder: URI): Promise<FileQuickPickItem[]> {\n\t\tconst result: FileQuickPickItem[] = [];\n\n\t\tconst backDir = this.createBackItem(currentFolder);\n\t\ttry {\n\t\t\tconst folder = await this.fileService.resolveFile(currentFolder);\n\t\t\tconst fileNames = folder.children ? folder.children.map(child => child.name) : [];\n\t\t\tconst items = await Promise.all(fileNames.map(fileName => this.createItem(fileName, currentFolder)));\n\t\t\tfor (let item of items) {\n\t\t\t\tif (item) {\n\t\t\t\t\tresult.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t\tconsole.log(e);\n\t\t}\n\t\tconst sorted = result.sort((i1, i2) => {\n\t\t\tif (i1.isFolder !== i2.isFolder) {\n\t\t\t\treturn i1.isFolder ? -1 : 1;\n\t\t\t}\n\t\t\tconst trimmed1 = this.endsWithSlash(i1.label) ? i1.label.substr(0, i1.label.length - 1) : i1.label;\n\t\t\tconst trimmed2 = this.endsWithSlash(i2.label) ? i2.label.substr(0, i2.label.length - 1) : i2.label;\n\t\t\treturn trimmed1.localeCompare(trimmed2);\n\t\t});\n\n\t\tif (backDir) {\n\t\t\tsorted.unshift(backDir);\n\t\t}\n\n\t\tif (this.fallbackListItem) {\n\t\t\tsorted.push(this.fallbackListItem);\n\t\t}\n\t\treturn sorted;\n\t}\n\n\tprivate filterFile(file: URI): boolean {\n\t\tif (this.filters) {\n\t\t\tconst ext = resources.extname(file);\n\t\t\tfor (let i = 0; i < this.filters.length; i++) {\n\t\t\t\tfor (let j = 0; j < this.filters[i].extensions.length; j++) {\n\t\t\t\t\tif (ext === ('.' + this.filters[i].extensions[j])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async createItem(filename: string, parent: URI): Promise<FileQuickPickItem | undefined> {\n\t\tlet fullPath = resources.joinPath(parent, filename);\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolveFile(fullPath);\n\t\t\tif (stat.isDirectory) {\n\t\t\t\tfilename = this.basenameWithTrailingSlash(fullPath);\n\t\t\t\treturn { label: filename, uri: fullPath, isFolder: true, iconClasses: getIconClasses(this.modelService, this.modeService, fullPath || undefined, FileKind.FOLDER) };\n\t\t\t} else if (!stat.isDirectory && this.allowFileSelection && this.filterFile(fullPath)) {\n\t\t\t\treturn { label: filename, uri: fullPath, isFolder: false, iconClasses: getIconClasses(this.modelService, this.modeService, fullPath || undefined) };\n\t\t\t}\n\t\t\treturn undefined;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate getDialogIcons(name: string): { light: URI, dark: URI } {\n\t\treturn {\n\t\t\tdark: URI.parse(require.toUrl(`vs/workbench/services/dialogs/browser/media/dark/${name}.svg`)),\n\t\t\tlight: URI.parse(require.toUrl(`vs/workbench/services/dialogs/browser/media/light/${name}.svg`))\n\t\t};\n\t}\n}"]}]}