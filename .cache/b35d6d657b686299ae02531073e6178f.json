{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/smartSelect/smartSelect.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/smartSelect/smartSelect.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar selection_1 = require(\"vs/editor/common/core/selection\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar modes = require(\"vs/editor/common/modes\");\nvar nls = require(\"vs/nls\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar wordSelections_1 = require(\"vs/editor/contrib/smartSelect/wordSelections\");\nvar bracketSelections_1 = require(\"vs/editor/contrib/smartSelect/bracketSelections\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar SelectionRanges = /** @class */ (function () {\n    function SelectionRanges(index, ranges) {\n        this.index = index;\n        this.ranges = ranges;\n    }\n    SelectionRanges.prototype.mov = function (fwd) {\n        var index = this.index + (fwd ? 1 : -1);\n        if (index < 0 || index >= this.ranges.length) {\n            return this;\n        }\n        var res = new SelectionRanges(index, this.ranges);\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n            // next range equals this range, retry with next-next\n            return res.mov(fwd);\n        }\n        return res;\n    };\n    return SelectionRanges;\n}());\nvar SmartSelectController = /** @class */ (function () {\n    function SmartSelectController(editor) {\n        this._ignoreSelection = false;\n        this._editor = editor;\n    }\n    SmartSelectController.get = function (editor) {\n        return editor.getContribution(SmartSelectController._id);\n    };\n    SmartSelectController.prototype.dispose = function () {\n        lifecycle_1.dispose(this._selectionListener);\n    };\n    SmartSelectController.prototype.getId = function () {\n        return SmartSelectController._id;\n    };\n    SmartSelectController.prototype.run = function (forward) {\n        var _this = this;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var selections = this._editor.getSelections();\n        var model = this._editor.getModel();\n        if (!modes.SelectionRangeRegistry.has(model)) {\n            return;\n        }\n        var promise = Promise.resolve(undefined);\n        if (!this._state) {\n            promise = provideSelectionRanges(model, selections.map(function (s) { return s.getPosition(); }), cancellation_1.CancellationToken.None).then(function (ranges) {\n                if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n                    // invalid result\n                    return;\n                }\n                if (!_this._editor.hasModel() || !arrays.equals(_this._editor.getSelections(), selections, function (a, b) { return a.equalsSelection(b); })) {\n                    // invalid editor state\n                    return;\n                }\n                var _loop_1 = function (i) {\n                    ranges[i] = ranges[i].filter(function (range) {\n                        // filter ranges inside the selection\n                        return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n                    });\n                    // prepend current selection\n                    ranges[i].unshift(selections[i]);\n                };\n                for (var i = 0; i < ranges.length; i++) {\n                    _loop_1(i);\n                }\n                _this._state = ranges.map(function (ranges) { return new SelectionRanges(0, ranges); });\n                // listen to caret move and forget about state\n                lifecycle_1.dispose(_this._selectionListener);\n                _this._selectionListener = _this._editor.onDidChangeCursorPosition(function () {\n                    if (!_this._ignoreSelection) {\n                        lifecycle_1.dispose(_this._selectionListener);\n                        _this._state = undefined;\n                    }\n                });\n            });\n        }\n        return promise.then(function () {\n            if (!_this._state) {\n                // no state\n                return;\n            }\n            _this._state = _this._state.map(function (state) { return state.mov(forward); });\n            var selections = _this._state.map(function (state) { return selection_1.Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()); });\n            _this._ignoreSelection = true;\n            try {\n                _this._editor.setSelections(selections);\n            }\n            finally {\n                _this._ignoreSelection = false;\n            }\n        });\n    };\n    SmartSelectController._id = 'editor.contrib.smartSelectController';\n    return SmartSelectController;\n}());\nvar AbstractSmartSelect = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractSmartSelect, _super);\n    function AbstractSmartSelect(forward, opts) {\n        var _this = _super.call(this, opts) || this;\n        _this._forward = forward;\n        return _this;\n    }\n    AbstractSmartSelect.prototype.run = function (_accessor, editor) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var controller;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        controller = SmartSelectController.get(editor);\n                        if (!controller) return [3 /*break*/, 2];\n                        return [4 /*yield*/, controller.run(this._forward)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AbstractSmartSelect;\n}(editorExtensions_1.EditorAction));\nvar GrowSelectionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(GrowSelectionAction, _super);\n    function GrowSelectionAction() {\n        return _super.call(this, true, {\n            id: 'editor.action.smartSelect.expand',\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n            alias: 'Expand Selection',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.RightArrow,\n                mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.RightArrow },\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            },\n            menubarOpts: {\n                menuId: actions_1.MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n                order: 2\n            }\n        }) || this;\n    }\n    return GrowSelectionAction;\n}(AbstractSmartSelect));\n// renamed command id\ncommands_1.CommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nvar ShrinkSelectionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShrinkSelectionAction, _super);\n    function ShrinkSelectionAction() {\n        return _super.call(this, false, {\n            id: 'editor.action.smartSelect.shrink',\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n            alias: 'Shrink Selection',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.LeftArrow,\n                mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.LeftArrow },\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            },\n            menubarOpts: {\n                menuId: actions_1.MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n                order: 3\n            }\n        }) || this;\n    }\n    return ShrinkSelectionAction;\n}(AbstractSmartSelect));\neditorExtensions_1.registerEditorContribution(SmartSelectController);\neditorExtensions_1.registerEditorAction(GrowSelectionAction);\neditorExtensions_1.registerEditorAction(ShrinkSelectionAction);\n// word selection\nmodes.SelectionRangeRegistry.register('*', new wordSelections_1.WordSelectionRangeProvider());\nfunction provideSelectionRanges(model, positions, token) {\n    var providers = modes.SelectionRangeRegistry.all(model);\n    if (providers.length === 1) {\n        // add word selection and bracket selection when no provider exists\n        providers.unshift(new bracketSelections_1.BracketSelectionRangeProvider());\n    }\n    var work = [];\n    var allRawRanges = [];\n    for (var _i = 0, providers_1 = providers; _i < providers_1.length; _i++) {\n        var provider = providers_1[_i];\n        work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(function (allProviderRanges) {\n            if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n                for (var i = 0; i < positions.length; i++) {\n                    if (!allRawRanges[i]) {\n                        allRawRanges[i] = [];\n                    }\n                    for (var _i = 0, _a = allProviderRanges[i]; _i < _a.length; _i++) {\n                        var oneProviderRanges = _a[_i];\n                        if (range_1.Range.isIRange(oneProviderRanges.range) && range_1.Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                            allRawRanges[i].push(range_1.Range.lift(oneProviderRanges.range));\n                        }\n                    }\n                }\n            }\n        }, errors_1.onUnexpectedExternalError));\n    }\n    return Promise.all(work).then(function () {\n        return allRawRanges.map(function (oneRawRanges) {\n            if (oneRawRanges.length === 0) {\n                return [];\n            }\n            // sort all by start/end position\n            oneRawRanges.sort(function (a, b) {\n                if (position_1.Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n                    return 1;\n                }\n                else if (position_1.Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n                    return -1;\n                }\n                else if (position_1.Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n                    return -1;\n                }\n                else if (position_1.Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            // remove ranges that don't contain the former range or that are equal to the\n            // former range\n            var oneRanges = [];\n            var last;\n            for (var _i = 0, oneRawRanges_1 = oneRawRanges; _i < oneRawRanges_1.length; _i++) {\n                var range = oneRawRanges_1[_i];\n                if (!last || (range_1.Range.containsRange(range, last) && !range_1.Range.equalsRange(range, last))) {\n                    oneRanges.push(range);\n                    last = range;\n                }\n            }\n            // add ranges that expand trivia at line starts and ends whenever a range\n            // wraps onto the a new line\n            var oneRangesWithTrivia = [oneRanges[0]];\n            for (var i = 1; i < oneRanges.length; i++) {\n                var prev = oneRanges[i - 1];\n                var cur = oneRanges[i];\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n                    // add line/block range without leading/failing whitespace\n                    var rangeNoWhitespace = new range_1.Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev)) {\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\n                    }\n                    // add line/block range\n                    var rangeFull = new range_1.Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace)) {\n                        oneRangesWithTrivia.push(rangeFull);\n                    }\n                }\n                oneRangesWithTrivia.push(cur);\n            }\n            return oneRangesWithTrivia;\n        });\n    });\n}\nexports.provideSelectionRanges = provideSelectionRanges;\neditorExtensions_1.registerDefaultLanguageCommand('_executeSelectionRangeProvider', function (model, _position, args) {\n    return provideSelectionRanges(model, args.positions, cancellation_1.CancellationToken.None);\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/smartSelect/smartSelect.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/smartSelect/smartSelect.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, IActionOptions, registerEditorAction, registerEditorContribution, ServicesAccessor, registerDefaultLanguageCommand } from 'vs/editor/browser/editorExtensions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { ITextModel } from 'vs/editor/common/model';\nimport * as modes from 'vs/editor/common/modes';\nimport * as nls from 'vs/nls';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { WordSelectionRangeProvider } from 'vs/editor/contrib/smartSelect/wordSelections';\nimport { BracketSelectionRangeProvider } from 'vs/editor/contrib/smartSelect/bracketSelections';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\n\nclass SelectionRanges {\n\n\tconstructor(\n\t\treadonly index: number,\n\t\treadonly ranges: Range[]\n\t) { }\n\n\tmov(fwd: boolean): SelectionRanges {\n\t\tlet index = this.index + (fwd ? 1 : -1);\n\t\tif (index < 0 || index >= this.ranges.length) {\n\t\t\treturn this;\n\t\t}\n\t\tconst res = new SelectionRanges(index, this.ranges);\n\t\tif (res.ranges[index].equalsRange(this.ranges[this.index])) {\n\t\t\t// next range equals this range, retry with next-next\n\t\t\treturn res.mov(fwd);\n\t\t}\n\t\treturn res;\n\t}\n}\n\nclass SmartSelectController implements IEditorContribution {\n\n\tprivate static readonly _id = 'editor.contrib.smartSelectController';\n\n\tstatic get(editor: ICodeEditor): SmartSelectController {\n\t\treturn editor.getContribution<SmartSelectController>(SmartSelectController._id);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate _state?: SelectionRanges[];\n\tprivate _selectionListener?: IDisposable;\n\tprivate _ignoreSelection: boolean = false;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tthis._editor = editor;\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._selectionListener);\n\t}\n\n\tgetId(): string {\n\t\treturn SmartSelectController._id;\n\t}\n\n\trun(forward: boolean): Promise<void> | void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selections = this._editor.getSelections();\n\t\tconst model = this._editor.getModel();\n\n\t\tif (!modes.SelectionRangeRegistry.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tlet promise: Promise<void> = Promise.resolve(undefined);\n\n\t\tif (!this._state) {\n\t\t\tpromise = provideSelectionRanges(model, selections.map(s => s.getPosition()), CancellationToken.None).then(ranges => {\n\t\t\t\tif (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n\t\t\t\t\t// invalid result\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n\t\t\t\t\t// invalid editor state\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\t\t\tranges[i] = ranges[i].filter(range => {\n\t\t\t\t\t\t// filter ranges inside the selection\n\t\t\t\t\t\treturn range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n\t\t\t\t\t});\n\t\t\t\t\t// prepend current selection\n\t\t\t\t\tranges[i].unshift(selections[i]);\n\t\t\t\t}\n\n\n\t\t\t\tthis._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n\n\t\t\t\t// listen to caret move and forget about state\n\t\t\t\tdispose(this._selectionListener);\n\t\t\t\tthis._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n\t\t\t\t\tif (!this._ignoreSelection) {\n\t\t\t\t\t\tdispose(this._selectionListener);\n\t\t\t\t\t\tthis._state = undefined;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn promise.then(() => {\n\t\t\tif (!this._state) {\n\t\t\t\t// no state\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._state = this._state.map(state => state.mov(forward));\n\t\t\tconst selections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n\t\t\tthis._ignoreSelection = true;\n\t\t\ttry {\n\t\t\t\tthis._editor.setSelections(selections);\n\t\t\t} finally {\n\t\t\t\tthis._ignoreSelection = false;\n\t\t\t}\n\n\t\t});\n\t}\n}\n\nabstract class AbstractSmartSelect extends EditorAction {\n\n\tprivate readonly _forward: boolean;\n\n\tconstructor(forward: boolean, opts: IActionOptions) {\n\t\tsuper(opts);\n\t\tthis._forward = forward;\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tlet controller = SmartSelectController.get(editor);\n\t\tif (controller) {\n\t\t\tawait controller.run(this._forward);\n\t\t}\n\t}\n}\n\nclass GrowSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(true, {\n\t\t\tid: 'editor.action.smartSelect.expand',\n\t\t\tlabel: nls.localize('smartSelect.expand', \"Expand Selection\"),\n\t\t\talias: 'Expand Selection',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.RightArrow,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyMod.Shift | KeyCode.RightArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenubarOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '1_basic',\n\t\t\t\ttitle: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n}\n\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\n\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n\tconstructor() {\n\t\tsuper(false, {\n\t\t\tid: 'editor.action.smartSelect.shrink',\n\t\t\tlabel: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n\t\t\talias: 'Shrink Selection',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.LeftArrow,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyMod.Shift | KeyCode.LeftArrow },\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenubarOpts: {\n\t\t\t\tmenuId: MenuId.MenubarSelectionMenu,\n\t\t\t\tgroup: '1_basic',\n\t\t\t\ttitle: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n}\n\nregisterEditorContribution(SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\n\n// word selection\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\n\nexport function provideSelectionRanges(model: ITextModel, positions: Position[], token: CancellationToken): Promise<Range[][]> {\n\n\tconst providers = modes.SelectionRangeRegistry.all(model);\n\n\tif (providers.length === 1) {\n\t\t// add word selection and bracket selection when no provider exists\n\t\tproviders.unshift(new BracketSelectionRangeProvider());\n\t}\n\n\tlet work: Promise<any>[] = [];\n\tlet allRawRanges: Range[][] = [];\n\n\tfor (const provider of providers) {\n\n\t\twork.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n\t\t\tif (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n\t\t\t\tfor (let i = 0; i < positions.length; i++) {\n\t\t\t\t\tif (!allRawRanges[i]) {\n\t\t\t\t\t\tallRawRanges[i] = [];\n\t\t\t\t\t}\n\t\t\t\t\tfor (const oneProviderRanges of allProviderRanges[i]) {\n\t\t\t\t\t\tif (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n\t\t\t\t\t\t\tallRawRanges[i].push(Range.lift(oneProviderRanges.range));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, onUnexpectedExternalError));\n\t}\n\n\treturn Promise.all(work).then(() => {\n\n\t\treturn allRawRanges.map(oneRawRanges => {\n\n\t\t\tif (oneRawRanges.length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// sort all by start/end position\n\t\t\toneRawRanges.sort((a, b) => {\n\t\t\t\tif (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// remove ranges that don't contain the former range or that are equal to the\n\t\t\t// former range\n\t\t\tlet oneRanges: Range[] = [];\n\t\t\tlet last: Range | undefined;\n\t\t\tfor (const range of oneRawRanges) {\n\t\t\t\tif (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n\t\t\t\t\toneRanges.push(range);\n\t\t\t\t\tlast = range;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add ranges that expand trivia at line starts and ends whenever a range\n\t\t\t// wraps onto the a new line\n\t\t\tlet oneRangesWithTrivia: Range[] = [oneRanges[0]];\n\t\t\tfor (let i = 1; i < oneRanges.length; i++) {\n\t\t\t\tconst prev = oneRanges[i - 1];\n\t\t\t\tconst cur = oneRanges[i];\n\t\t\t\tif (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n\t\t\t\t\t// add line/block range without leading/failing whitespace\n\t\t\t\t\tconst rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n\t\t\t\t\tif (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev)) {\n\t\t\t\t\t\toneRangesWithTrivia.push(rangeNoWhitespace);\n\t\t\t\t\t}\n\t\t\t\t\t// add line/block range\n\t\t\t\t\tconst rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n\t\t\t\t\tif (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace)) {\n\t\t\t\t\t\toneRangesWithTrivia.push(rangeFull);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toneRangesWithTrivia.push(cur);\n\t\t\t}\n\t\t\treturn oneRangesWithTrivia;\n\t\t});\n\t});\n}\n\nregisterDefaultLanguageCommand('_executeSelectionRangeProvider', function (model, _position, args) {\n\treturn provideSelectionRanges(model, args.positions, CancellationToken.None);\n});\n"]}]}