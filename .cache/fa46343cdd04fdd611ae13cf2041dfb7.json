{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\"], function (require, exports, nls) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const idDescription = nls.localize('JsonSchema.input.id', \"The input's id is used to associate an input with a variable of the form ${input:id}.\");\n    const typeDescription = nls.localize('JsonSchema.input.type', \"The type of user input prompt to use.\");\n    const descriptionDescription = nls.localize('JsonSchema.input.description', \"The description is shown when the user is prompted for input.\");\n    const defaultDescription = nls.localize('JsonSchema.input.default', \"The default value for the input.\");\n    exports.inputsSchema = {\n        definitions: {\n            inputs: {\n                type: 'array',\n                description: nls.localize('JsonSchema.inputs', 'User inputs. Used for defining user input prompts, such as free string input or a choice from several options.'),\n                items: {\n                    oneOf: [\n                        {\n                            type: 'object',\n                            required: ['id', 'type', 'description'],\n                            additionalProperties: false,\n                            properties: {\n                                id: {\n                                    type: 'string',\n                                    description: idDescription\n                                },\n                                type: {\n                                    type: 'string',\n                                    description: typeDescription,\n                                    enum: ['promptString'],\n                                    enumDescriptions: [\n                                        nls.localize('JsonSchema.input.type.promptString', \"The 'promptString' type opens an input box to ask the user for input.\"),\n                                    ]\n                                },\n                                description: {\n                                    type: 'string',\n                                    description: descriptionDescription\n                                },\n                                default: {\n                                    type: 'string',\n                                    description: defaultDescription\n                                },\n                            }\n                        },\n                        {\n                            type: 'object',\n                            required: ['id', 'type', 'description', 'options'],\n                            additionalProperties: false,\n                            properties: {\n                                id: {\n                                    type: 'string',\n                                    description: idDescription\n                                },\n                                type: {\n                                    type: 'string',\n                                    description: typeDescription,\n                                    enum: ['pickString'],\n                                    enumDescriptions: [\n                                        nls.localize('JsonSchema.input.type.pickString', \"The 'pickString' type shows a selection list.\"),\n                                    ]\n                                },\n                                description: {\n                                    type: 'string',\n                                    description: descriptionDescription\n                                },\n                                default: {\n                                    type: 'string',\n                                    description: defaultDescription\n                                },\n                                options: {\n                                    type: 'array',\n                                    description: nls.localize('JsonSchema.input.options', 'An array of strings that defines the options for a quick pick.'),\n                                    items: {\n                                        type: 'string'\n                                    }\n                                }\n                            }\n                        },\n                        {\n                            type: 'object',\n                            required: ['id', 'type', 'command'],\n                            additionalProperties: false,\n                            properties: {\n                                id: {\n                                    type: 'string',\n                                    description: idDescription\n                                },\n                                type: {\n                                    type: 'string',\n                                    description: typeDescription,\n                                    enum: ['command'],\n                                    enumDescriptions: [\n                                        nls.localize('JsonSchema.input.type.command', \"The 'command' type executes a command.\"),\n                                    ]\n                                },\n                                command: {\n                                    type: 'string',\n                                    description: nls.localize('JsonSchema.input.command.command', \"The command to execute for this input variable.\")\n                                },\n                                args: {\n                                    type: 'object',\n                                    description: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n                                }\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    };\n});\n",null]}