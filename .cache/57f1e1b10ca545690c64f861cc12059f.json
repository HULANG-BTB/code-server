{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IRemoteAuthorityResolverService = instantiation_1.createDecorator('remoteAuthorityResolverService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAEpE,QAAA,+BAA+B,GAAG,+BAAe,CAAkC,gCAAgC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly debugListenPort?: number;\n\treadonly debugConnectPort?: number;\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\t_serviceBrand: any;\n\n\tresolveAuthority(authority: string): Promise<ResolvedAuthority>;\n\n\tsetResolvedAuthority(resolvedAuthority: ResolvedAuthority): void;\n\tsetResolvedAuthorityError(authority: string, err: any): void;\n}\n"]}]}