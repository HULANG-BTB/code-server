{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/files/common/files.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/path\", \"vs/base/common/platform\", \"vs/platform/instantiation/common/instantiation\", \"vs/base/common/strings\", \"vs/base/common/resources\", \"vs/base/common/types\"], function (require, exports, path_1, platform_1, instantiation_1, strings_1, resources_1, types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.IFileService = instantiation_1.createDecorator('fileService');\n    var FileType;\n    (function (FileType) {\n        FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\n        FileType[FileType[\"File\"] = 1] = \"File\";\n        FileType[FileType[\"Directory\"] = 2] = \"Directory\";\n        FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\n    })(FileType = exports.FileType || (exports.FileType = {}));\n    var FileSystemProviderCapabilities;\n    (function (FileSystemProviderCapabilities) {\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileReadWrite\"] = 2] = \"FileReadWrite\";\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileOpenReadWriteClose\"] = 4] = \"FileOpenReadWriteClose\";\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"FileFolderCopy\"] = 8] = \"FileFolderCopy\";\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"PathCaseSensitive\"] = 1024] = \"PathCaseSensitive\";\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Readonly\"] = 2048] = \"Readonly\";\n        FileSystemProviderCapabilities[FileSystemProviderCapabilities[\"Trash\"] = 4096] = \"Trash\";\n    })(FileSystemProviderCapabilities = exports.FileSystemProviderCapabilities || (exports.FileSystemProviderCapabilities = {}));\n    function hasReadWriteCapability(provider) {\n        return !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n    }\n    exports.hasReadWriteCapability = hasReadWriteCapability;\n    function hasFileFolderCopyCapability(provider) {\n        return !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n    }\n    exports.hasFileFolderCopyCapability = hasFileFolderCopyCapability;\n    function hasOpenReadWriteCloseCapability(provider) {\n        return !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n    }\n    exports.hasOpenReadWriteCloseCapability = hasOpenReadWriteCloseCapability;\n    var FileSystemProviderErrorCode;\n    (function (FileSystemProviderErrorCode) {\n        FileSystemProviderErrorCode[\"FileExists\"] = \"EntryExists\";\n        FileSystemProviderErrorCode[\"FileNotFound\"] = \"EntryNotFound\";\n        FileSystemProviderErrorCode[\"FileNotADirectory\"] = \"EntryNotADirectory\";\n        FileSystemProviderErrorCode[\"FileIsADirectory\"] = \"EntryIsADirectory\";\n        FileSystemProviderErrorCode[\"NoPermissions\"] = \"NoPermissions\";\n        FileSystemProviderErrorCode[\"Unavailable\"] = \"Unavailable\";\n        FileSystemProviderErrorCode[\"Unknown\"] = \"Unknown\";\n    })(FileSystemProviderErrorCode = exports.FileSystemProviderErrorCode || (exports.FileSystemProviderErrorCode = {}));\n    class FileSystemProviderError extends Error {\n        constructor(message, code) {\n            super(message);\n            this.code = code;\n        }\n    }\n    exports.FileSystemProviderError = FileSystemProviderError;\n    function createFileSystemProviderError(error, code) {\n        const providerError = new FileSystemProviderError(error.toString(), code);\n        markAsFileSystemProviderError(providerError, code);\n        return providerError;\n    }\n    exports.createFileSystemProviderError = createFileSystemProviderError;\n    function markAsFileSystemProviderError(error, code) {\n        error.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n        return error;\n    }\n    exports.markAsFileSystemProviderError = markAsFileSystemProviderError;\n    function toFileSystemProviderErrorCode(error) {\n        // FileSystemProviderError comes with the code\n        if (error instanceof FileSystemProviderError) {\n            return error.code;\n        }\n        // Any other error, check for name match by assuming that the error\n        // went through the markAsFileSystemProviderError() method\n        const match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n        if (!match) {\n            return FileSystemProviderErrorCode.Unknown;\n        }\n        switch (match[1]) {\n            case FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n            case FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n            case FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n            case FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n            case FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n            case FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n        }\n        return FileSystemProviderErrorCode.Unknown;\n    }\n    exports.toFileSystemProviderErrorCode = toFileSystemProviderErrorCode;\n    function toFileOperationResult(error) {\n        switch (toFileSystemProviderErrorCode(error)) {\n            case FileSystemProviderErrorCode.FileNotFound:\n                return FileOperationResult.FILE_NOT_FOUND;\n            case FileSystemProviderErrorCode.FileIsADirectory:\n                return FileOperationResult.FILE_IS_DIRECTORY;\n            case FileSystemProviderErrorCode.NoPermissions:\n                return FileOperationResult.FILE_PERMISSION_DENIED;\n            case FileSystemProviderErrorCode.FileExists:\n                return FileOperationResult.FILE_MOVE_CONFLICT;\n            case FileSystemProviderErrorCode.FileNotADirectory:\n            default:\n                return FileOperationResult.FILE_OTHER_ERROR;\n        }\n    }\n    exports.toFileOperationResult = toFileOperationResult;\n    var FileOperation;\n    (function (FileOperation) {\n        FileOperation[FileOperation[\"CREATE\"] = 0] = \"CREATE\";\n        FileOperation[FileOperation[\"DELETE\"] = 1] = \"DELETE\";\n        FileOperation[FileOperation[\"MOVE\"] = 2] = \"MOVE\";\n        FileOperation[FileOperation[\"COPY\"] = 3] = \"COPY\";\n    })(FileOperation = exports.FileOperation || (exports.FileOperation = {}));\n    class FileOperationEvent {\n        constructor(_resource, _operation, _target) {\n            this._resource = _resource;\n            this._operation = _operation;\n            this._target = _target;\n        }\n        get resource() {\n            return this._resource;\n        }\n        get target() {\n            return this._target;\n        }\n        get operation() {\n            return this._operation;\n        }\n    }\n    exports.FileOperationEvent = FileOperationEvent;\n    /**\n     * Possible changes that can occur to a file.\n     */\n    var FileChangeType;\n    (function (FileChangeType) {\n        FileChangeType[FileChangeType[\"UPDATED\"] = 0] = \"UPDATED\";\n        FileChangeType[FileChangeType[\"ADDED\"] = 1] = \"ADDED\";\n        FileChangeType[FileChangeType[\"DELETED\"] = 2] = \"DELETED\";\n    })(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\n    class FileChangesEvent {\n        constructor(changes) {\n            this._changes = changes;\n        }\n        get changes() {\n            return this._changes;\n        }\n        /**\n         * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n         * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n         * provided file path.\n         */\n        contains(resource, type) {\n            if (!resource) {\n                return false;\n            }\n            const checkForChangeType = !types_1.isUndefinedOrNull(type);\n            return this._changes.some(change => {\n                if (checkForChangeType && change.type !== type) {\n                    return false;\n                }\n                // For deleted also return true when deleted folder is parent of target path\n                if (change.type === FileChangeType.DELETED) {\n                    return resources_1.isEqualOrParent(resource, change.resource, !platform_1.isLinux /* ignorecase */);\n                }\n                return resources_1.isEqual(resource, change.resource, !platform_1.isLinux /* ignorecase */);\n            });\n        }\n        /**\n         * Returns the changes that describe added files.\n         */\n        getAdded() {\n            return this.getOfType(FileChangeType.ADDED);\n        }\n        /**\n         * Returns if this event contains added files.\n         */\n        gotAdded() {\n            return this.hasType(FileChangeType.ADDED);\n        }\n        /**\n         * Returns the changes that describe deleted files.\n         */\n        getDeleted() {\n            return this.getOfType(FileChangeType.DELETED);\n        }\n        /**\n         * Returns if this event contains deleted files.\n         */\n        gotDeleted() {\n            return this.hasType(FileChangeType.DELETED);\n        }\n        /**\n         * Returns the changes that describe updated files.\n         */\n        getUpdated() {\n            return this.getOfType(FileChangeType.UPDATED);\n        }\n        /**\n         * Returns if this event contains updated files.\n         */\n        gotUpdated() {\n            return this.hasType(FileChangeType.UPDATED);\n        }\n        getOfType(type) {\n            return this._changes.filter(change => change.type === type);\n        }\n        hasType(type) {\n            return this._changes.some(change => {\n                return change.type === type;\n            });\n        }\n    }\n    exports.FileChangesEvent = FileChangesEvent;\n    function isParent(path, candidate, ignoreCase) {\n        if (!path || !candidate || path === candidate) {\n            return false;\n        }\n        if (candidate.length > path.length) {\n            return false;\n        }\n        if (candidate.charAt(candidate.length - 1) !== path_1.sep) {\n            candidate += path_1.sep;\n        }\n        if (ignoreCase) {\n            return strings_1.startsWithIgnoreCase(path, candidate);\n        }\n        return path.indexOf(candidate) === 0;\n    }\n    exports.isParent = isParent;\n    class StringSnapshot {\n        constructor(value) {\n            this._value = value;\n        }\n        read() {\n            let ret = this._value;\n            this._value = null;\n            return ret;\n        }\n    }\n    exports.StringSnapshot = StringSnapshot;\n    /**\n     * Helper method to convert a snapshot into its full string form.\n     */\n    function snapshotToString(snapshot) {\n        const chunks = [];\n        let chunk;\n        while (typeof (chunk = snapshot.read()) === 'string') {\n            chunks.push(chunk);\n        }\n        return chunks.join('');\n    }\n    exports.snapshotToString = snapshotToString;\n    class FileOperationError extends Error {\n        constructor(message, fileOperationResult, options) {\n            super(message);\n            this.fileOperationResult = fileOperationResult;\n            this.options = options;\n        }\n        static isFileOperationError(obj) {\n            return obj instanceof Error && !types_1.isUndefinedOrNull(obj.fileOperationResult);\n        }\n    }\n    exports.FileOperationError = FileOperationError;\n    var FileOperationResult;\n    (function (FileOperationResult) {\n        FileOperationResult[FileOperationResult[\"FILE_IS_BINARY\"] = 0] = \"FILE_IS_BINARY\";\n        FileOperationResult[FileOperationResult[\"FILE_IS_DIRECTORY\"] = 1] = \"FILE_IS_DIRECTORY\";\n        FileOperationResult[FileOperationResult[\"FILE_NOT_FOUND\"] = 2] = \"FILE_NOT_FOUND\";\n        FileOperationResult[FileOperationResult[\"FILE_NOT_MODIFIED_SINCE\"] = 3] = \"FILE_NOT_MODIFIED_SINCE\";\n        FileOperationResult[FileOperationResult[\"FILE_MODIFIED_SINCE\"] = 4] = \"FILE_MODIFIED_SINCE\";\n        FileOperationResult[FileOperationResult[\"FILE_MOVE_CONFLICT\"] = 5] = \"FILE_MOVE_CONFLICT\";\n        FileOperationResult[FileOperationResult[\"FILE_READ_ONLY\"] = 6] = \"FILE_READ_ONLY\";\n        FileOperationResult[FileOperationResult[\"FILE_PERMISSION_DENIED\"] = 7] = \"FILE_PERMISSION_DENIED\";\n        FileOperationResult[FileOperationResult[\"FILE_TOO_LARGE\"] = 8] = \"FILE_TOO_LARGE\";\n        FileOperationResult[FileOperationResult[\"FILE_INVALID_PATH\"] = 9] = \"FILE_INVALID_PATH\";\n        FileOperationResult[FileOperationResult[\"FILE_EXCEED_MEMORY_LIMIT\"] = 10] = \"FILE_EXCEED_MEMORY_LIMIT\";\n        FileOperationResult[FileOperationResult[\"FILE_OTHER_ERROR\"] = 11] = \"FILE_OTHER_ERROR\";\n    })(FileOperationResult = exports.FileOperationResult || (exports.FileOperationResult = {}));\n    exports.AutoSaveConfiguration = {\n        OFF: 'off',\n        AFTER_DELAY: 'afterDelay',\n        ON_FOCUS_CHANGE: 'onFocusChange',\n        ON_WINDOW_CHANGE: 'onWindowChange'\n    };\n    exports.HotExitConfiguration = {\n        OFF: 'off',\n        ON_EXIT: 'onExit',\n        ON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n    };\n    exports.CONTENT_CHANGE_EVENT_BUFFER_DELAY = 1000;\n    exports.FILES_ASSOCIATIONS_CONFIG = 'files.associations';\n    exports.FILES_EXCLUDE_CONFIG = 'files.exclude';\n    exports.SUPPORTED_ENCODINGS = {\n        utf8: {\n            labelLong: 'UTF-8',\n            labelShort: 'UTF-8',\n            order: 1,\n            alias: 'utf8bom'\n        },\n        utf8bom: {\n            labelLong: 'UTF-8 with BOM',\n            labelShort: 'UTF-8 with BOM',\n            encodeOnly: true,\n            order: 2,\n            alias: 'utf8'\n        },\n        utf16le: {\n            labelLong: 'UTF-16 LE',\n            labelShort: 'UTF-16 LE',\n            order: 3\n        },\n        utf16be: {\n            labelLong: 'UTF-16 BE',\n            labelShort: 'UTF-16 BE',\n            order: 4\n        },\n        windows1252: {\n            labelLong: 'Western (Windows 1252)',\n            labelShort: 'Windows 1252',\n            order: 5\n        },\n        iso88591: {\n            labelLong: 'Western (ISO 8859-1)',\n            labelShort: 'ISO 8859-1',\n            order: 6\n        },\n        iso88593: {\n            labelLong: 'Western (ISO 8859-3)',\n            labelShort: 'ISO 8859-3',\n            order: 7\n        },\n        iso885915: {\n            labelLong: 'Western (ISO 8859-15)',\n            labelShort: 'ISO 8859-15',\n            order: 8\n        },\n        macroman: {\n            labelLong: 'Western (Mac Roman)',\n            labelShort: 'Mac Roman',\n            order: 9\n        },\n        cp437: {\n            labelLong: 'DOS (CP 437)',\n            labelShort: 'CP437',\n            order: 10\n        },\n        windows1256: {\n            labelLong: 'Arabic (Windows 1256)',\n            labelShort: 'Windows 1256',\n            order: 11\n        },\n        iso88596: {\n            labelLong: 'Arabic (ISO 8859-6)',\n            labelShort: 'ISO 8859-6',\n            order: 12\n        },\n        windows1257: {\n            labelLong: 'Baltic (Windows 1257)',\n            labelShort: 'Windows 1257',\n            order: 13\n        },\n        iso88594: {\n            labelLong: 'Baltic (ISO 8859-4)',\n            labelShort: 'ISO 8859-4',\n            order: 14\n        },\n        iso885914: {\n            labelLong: 'Celtic (ISO 8859-14)',\n            labelShort: 'ISO 8859-14',\n            order: 15\n        },\n        windows1250: {\n            labelLong: 'Central European (Windows 1250)',\n            labelShort: 'Windows 1250',\n            order: 16\n        },\n        iso88592: {\n            labelLong: 'Central European (ISO 8859-2)',\n            labelShort: 'ISO 8859-2',\n            order: 17\n        },\n        cp852: {\n            labelLong: 'Central European (CP 852)',\n            labelShort: 'CP 852',\n            order: 18\n        },\n        windows1251: {\n            labelLong: 'Cyrillic (Windows 1251)',\n            labelShort: 'Windows 1251',\n            order: 19\n        },\n        cp866: {\n            labelLong: 'Cyrillic (CP 866)',\n            labelShort: 'CP 866',\n            order: 20\n        },\n        iso88595: {\n            labelLong: 'Cyrillic (ISO 8859-5)',\n            labelShort: 'ISO 8859-5',\n            order: 21\n        },\n        koi8r: {\n            labelLong: 'Cyrillic (KOI8-R)',\n            labelShort: 'KOI8-R',\n            order: 22\n        },\n        koi8u: {\n            labelLong: 'Cyrillic (KOI8-U)',\n            labelShort: 'KOI8-U',\n            order: 23\n        },\n        iso885913: {\n            labelLong: 'Estonian (ISO 8859-13)',\n            labelShort: 'ISO 8859-13',\n            order: 24\n        },\n        windows1253: {\n            labelLong: 'Greek (Windows 1253)',\n            labelShort: 'Windows 1253',\n            order: 25\n        },\n        iso88597: {\n            labelLong: 'Greek (ISO 8859-7)',\n            labelShort: 'ISO 8859-7',\n            order: 26\n        },\n        windows1255: {\n            labelLong: 'Hebrew (Windows 1255)',\n            labelShort: 'Windows 1255',\n            order: 27\n        },\n        iso88598: {\n            labelLong: 'Hebrew (ISO 8859-8)',\n            labelShort: 'ISO 8859-8',\n            order: 28\n        },\n        iso885910: {\n            labelLong: 'Nordic (ISO 8859-10)',\n            labelShort: 'ISO 8859-10',\n            order: 29\n        },\n        iso885916: {\n            labelLong: 'Romanian (ISO 8859-16)',\n            labelShort: 'ISO 8859-16',\n            order: 30\n        },\n        windows1254: {\n            labelLong: 'Turkish (Windows 1254)',\n            labelShort: 'Windows 1254',\n            order: 31\n        },\n        iso88599: {\n            labelLong: 'Turkish (ISO 8859-9)',\n            labelShort: 'ISO 8859-9',\n            order: 32\n        },\n        windows1258: {\n            labelLong: 'Vietnamese (Windows 1258)',\n            labelShort: 'Windows 1258',\n            order: 33\n        },\n        gbk: {\n            labelLong: 'Simplified Chinese (GBK)',\n            labelShort: 'GBK',\n            order: 34\n        },\n        gb18030: {\n            labelLong: 'Simplified Chinese (GB18030)',\n            labelShort: 'GB18030',\n            order: 35\n        },\n        cp950: {\n            labelLong: 'Traditional Chinese (Big5)',\n            labelShort: 'Big5',\n            order: 36\n        },\n        big5hkscs: {\n            labelLong: 'Traditional Chinese (Big5-HKSCS)',\n            labelShort: 'Big5-HKSCS',\n            order: 37\n        },\n        shiftjis: {\n            labelLong: 'Japanese (Shift JIS)',\n            labelShort: 'Shift JIS',\n            order: 38\n        },\n        eucjp: {\n            labelLong: 'Japanese (EUC-JP)',\n            labelShort: 'EUC-JP',\n            order: 39\n        },\n        euckr: {\n            labelLong: 'Korean (EUC-KR)',\n            labelShort: 'EUC-KR',\n            order: 40\n        },\n        windows874: {\n            labelLong: 'Thai (Windows 874)',\n            labelShort: 'Windows 874',\n            order: 41\n        },\n        iso885911: {\n            labelLong: 'Latin/Thai (ISO 8859-11)',\n            labelShort: 'ISO 8859-11',\n            order: 42\n        },\n        koi8ru: {\n            labelLong: 'Cyrillic (KOI8-RU)',\n            labelShort: 'KOI8-RU',\n            order: 43\n        },\n        koi8t: {\n            labelLong: 'Tajik (KOI8-T)',\n            labelShort: 'KOI8-T',\n            order: 44\n        },\n        gb2312: {\n            labelLong: 'Simplified Chinese (GB 2312)',\n            labelShort: 'GB 2312',\n            order: 45\n        },\n        cp865: {\n            labelLong: 'Nordic DOS (CP 865)',\n            labelShort: 'CP 865',\n            order: 46\n        },\n        cp850: {\n            labelLong: 'Western European DOS (CP 850)',\n            labelShort: 'CP 850',\n            order: 47\n        }\n    };\n    var FileKind;\n    (function (FileKind) {\n        FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n        FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n        FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n    })(FileKind = exports.FileKind || (exports.FileKind = {}));\n    exports.MIN_MAX_MEMORY_SIZE_MB = 2048;\n    exports.FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n    function etag(mtime, size) {\n        if (typeof size !== 'number' || typeof mtime !== 'number') {\n            return undefined;\n        }\n        return mtime.toString(29) + size.toString(31);\n    }\n    exports.etag = etag;\n    // TODO@ben remove traces of legacy file service\n    exports.ILegacyFileService = instantiation_1.createDecorator('legacyFileService');\n});\n",null]}