{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughInput.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughInput.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar strings = require(\"vs/base/common/strings\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar marked = require(\"vs/base/common/marked/marked\");\nvar network_1 = require(\"vs/base/common/network\");\nvar WalkThroughModel = /** @class */ (function (_super) {\n    tslib_1.__extends(WalkThroughModel, _super);\n    function WalkThroughModel(mainRef, snippetRefs) {\n        var _this = _super.call(this) || this;\n        _this.mainRef = mainRef;\n        _this.snippetRefs = snippetRefs;\n        return _this;\n    }\n    Object.defineProperty(WalkThroughModel.prototype, \"main\", {\n        get: function () {\n            return this.mainRef.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WalkThroughModel.prototype, \"snippets\", {\n        get: function () {\n            return this.snippetRefs.map(function (snippet) { return snippet.object; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WalkThroughModel.prototype.dispose = function () {\n        this.snippetRefs.forEach(function (ref) { return ref.dispose(); });\n        this.mainRef.dispose();\n        _super.prototype.dispose.call(this);\n    };\n    return WalkThroughModel;\n}(editor_1.EditorModel));\nexports.WalkThroughModel = WalkThroughModel;\nvar WalkThroughInput = /** @class */ (function (_super) {\n    tslib_1.__extends(WalkThroughInput, _super);\n    function WalkThroughInput(options, textModelResolverService) {\n        var _this = _super.call(this) || this;\n        _this.options = options;\n        _this.textModelResolverService = textModelResolverService;\n        _this.disposables = [];\n        _this.promise = null;\n        _this.maxTopScroll = 0;\n        _this.maxBottomScroll = 0;\n        return _this;\n    }\n    WalkThroughInput.prototype.getResource = function () {\n        return this.options.resource;\n    };\n    WalkThroughInput.prototype.getTypeId = function () {\n        return this.options.typeId;\n    };\n    WalkThroughInput.prototype.getName = function () {\n        return this.options.name;\n    };\n    WalkThroughInput.prototype.getDescription = function () {\n        return this.options.description || '';\n    };\n    WalkThroughInput.prototype.getTelemetryFrom = function () {\n        return this.options.telemetryFrom;\n    };\n    WalkThroughInput.prototype.getTelemetryDescriptor = function () {\n        var descriptor = _super.prototype.getTelemetryDescriptor.call(this);\n        descriptor['target'] = this.getTelemetryFrom();\n        /* __GDPR__FRAGMENT__\n            \"EditorTelemetryDescriptor\" : {\n                \"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            }\n        */\n        return descriptor;\n    };\n    Object.defineProperty(WalkThroughInput.prototype, \"onReady\", {\n        get: function () {\n            return this.options.onReady;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WalkThroughInput.prototype.resolve = function () {\n        var _this = this;\n        if (!this.promise) {\n            this.promise = this.textModelResolverService.createModelReference(this.options.resource)\n                .then(function (ref) {\n                if (strings.endsWith(_this.getResource().path, '.html')) {\n                    return new WalkThroughModel(ref, []);\n                }\n                var snippets = [];\n                var i = 0;\n                var renderer = new marked.Renderer();\n                renderer.code = function (code, lang) {\n                    var resource = _this.options.resource.with({ scheme: network_1.Schemas.walkThroughSnippet, fragment: i++ + \".\" + lang });\n                    snippets.push(_this.textModelResolverService.createModelReference(resource));\n                    return '';\n                };\n                var markdown = ref.object.textEditorModel.getLinesContent().join('\\n');\n                marked(markdown, { renderer: renderer });\n                return Promise.all(snippets)\n                    .then(function (refs) { return new WalkThroughModel(ref, refs); });\n            });\n        }\n        return this.promise;\n    };\n    WalkThroughInput.prototype.matches = function (otherInput) {\n        if (_super.prototype.matches.call(this, otherInput) === true) {\n            return true;\n        }\n        if (otherInput instanceof WalkThroughInput) {\n            var otherResourceEditorInput = otherInput;\n            // Compare by properties\n            return otherResourceEditorInput.options.resource.toString() === this.options.resource.toString();\n        }\n        return false;\n    };\n    WalkThroughInput.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        if (this.promise) {\n            this.promise.then(function (model) { return model.dispose(); });\n            this.promise = null;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    WalkThroughInput.prototype.relativeScrollPosition = function (topScroll, bottomScroll) {\n        this.maxTopScroll = Math.max(this.maxTopScroll, topScroll);\n        this.maxBottomScroll = Math.max(this.maxBottomScroll, bottomScroll);\n    };\n    WalkThroughInput = tslib_1.__decorate([\n        tslib_1.__param(1, resolverService_1.ITextModelService)\n    ], WalkThroughInput);\n    return WalkThroughInput;\n}(editor_1.EditorInput));\nexports.WalkThroughInput = WalkThroughInput;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughInput.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/walkThrough/common/walkThroughInput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { EditorInput, EditorModel, ITextEditorModel } from 'vs/workbench/common/editor';\nimport { URI } from 'vs/base/common/uri';\nimport { IReference, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { Schemas } from 'vs/base/common/network';\n\nexport class WalkThroughModel extends EditorModel {\n\n\tconstructor(\n\t\tprivate mainRef: IReference<ITextEditorModel>,\n\t\tprivate snippetRefs: IReference<ITextEditorModel>[]\n\t) {\n\t\tsuper();\n\t}\n\n\tget main() {\n\t\treturn this.mainRef.object;\n\t}\n\n\tget snippets() {\n\t\treturn this.snippetRefs.map(snippet => snippet.object);\n\t}\n\n\tdispose() {\n\t\tthis.snippetRefs.forEach(ref => ref.dispose());\n\t\tthis.mainRef.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface WalkThroughInputOptions {\n\treadonly typeId: string;\n\treadonly name: string;\n\treadonly description?: string;\n\treadonly resource: URI;\n\treadonly telemetryFrom: string;\n\treadonly onReady?: (container: HTMLElement) => void;\n}\n\nexport class WalkThroughInput extends EditorInput {\n\n\tprivate disposables: IDisposable[] = [];\n\n\tprivate promise: Promise<WalkThroughModel> | null = null;\n\n\tprivate maxTopScroll = 0;\n\tprivate maxBottomScroll = 0;\n\n\tconstructor(\n\t\tprivate options: WalkThroughInputOptions,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper();\n\t}\n\n\tgetResource(): URI {\n\t\treturn this.options.resource;\n\t}\n\n\tgetTypeId(): string {\n\t\treturn this.options.typeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.options.name;\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.options.description || '';\n\t}\n\n\tgetTelemetryFrom(): string {\n\t\treturn this.options.telemetryFrom;\n\t}\n\n\tgetTelemetryDescriptor(): object {\n\t\tconst descriptor = super.getTelemetryDescriptor();\n\t\tdescriptor['target'] = this.getTelemetryFrom();\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn descriptor;\n\t}\n\n\tget onReady() {\n\t\treturn this.options.onReady;\n\t}\n\n\tresolve(): Promise<WalkThroughModel> {\n\t\tif (!this.promise) {\n\t\t\tthis.promise = this.textModelResolverService.createModelReference(this.options.resource)\n\t\t\t\t.then(ref => {\n\t\t\t\t\tif (strings.endsWith(this.getResource().path, '.html')) {\n\t\t\t\t\t\treturn new WalkThroughModel(ref, []);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst snippets: Promise<IReference<ITextEditorModel>>[] = [];\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tconst renderer = new marked.Renderer();\n\t\t\t\t\trenderer.code = (code, lang) => {\n\t\t\t\t\t\tconst resource = this.options.resource.with({ scheme: Schemas.walkThroughSnippet, fragment: `${i++}.${lang}` });\n\t\t\t\t\t\tsnippets.push(this.textModelResolverService.createModelReference(resource));\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t};\n\n\t\t\t\t\tconst markdown = ref.object.textEditorModel.getLinesContent().join('\\n');\n\t\t\t\t\tmarked(markdown, { renderer });\n\n\t\t\t\t\treturn Promise.all(snippets)\n\t\t\t\t\t\t.then(refs => new WalkThroughModel(ref, refs));\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.promise;\n\t}\n\n\tmatches(otherInput: any): boolean {\n\t\tif (super.matches(otherInput) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof WalkThroughInput) {\n\t\t\tlet otherResourceEditorInput = <WalkThroughInput>otherInput;\n\n\t\t\t// Compare by properties\n\t\t\treturn otherResourceEditorInput.options.resource.toString() === this.options.resource.toString();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\n\t\tif (this.promise) {\n\t\t\tthis.promise.then(model => model.dispose());\n\t\t\tthis.promise = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic relativeScrollPosition(topScroll: number, bottomScroll: number) {\n\t\tthis.maxTopScroll = Math.max(this.maxTopScroll, topScroll);\n\t\tthis.maxBottomScroll = Math.max(this.maxBottomScroll, bottomScroll);\n\t}\n}\n"]}]}