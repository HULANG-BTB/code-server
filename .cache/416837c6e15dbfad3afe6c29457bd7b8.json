{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/packages/vscode/src/fill/paths.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/paths.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class Paths {\n        get appData() {\n            if (typeof this._appData === \"undefined\") {\n                throw new Error(\"trying to access appData before it has been set\");\n            }\n            return this._appData;\n        }\n        get defaultUserData() {\n            if (typeof this._defaultUserData === \"undefined\") {\n                throw new Error(\"trying to access defaultUserData before it has been set\");\n            }\n            return this._defaultUserData;\n        }\n        get socketPath() {\n            if (typeof this._socketPath === \"undefined\") {\n                throw new Error(\"trying to access socketPath before it has been set\");\n            }\n            return this._socketPath;\n        }\n        get extensionsDirectory() {\n            if (!this._extensionsDirectory) {\n                throw new Error(\"trying to access extensions directory before it has been set\");\n            }\n            return this._extensionsDirectory;\n        }\n        get builtInExtensionsDirectory() {\n            if (!this._builtInExtensionsDirectory) {\n                throw new Error(\"trying to access builtin extensions directory before it has been set\");\n            }\n            return this._builtInExtensionsDirectory;\n        }\n        get workingDirectory() {\n            if (!this._workingDirectory) {\n                throw new Error(\"trying to access working directory before it has been set\");\n            }\n            return this._workingDirectory;\n        }\n        initialize(data, sharedData) {\n            process.env.VSCODE_LOGS = sharedData.logPath;\n            this._appData = data.dataDirectory;\n            this._defaultUserData = data.dataDirectory;\n            this._socketPath = sharedData.socketPath;\n            this._extensionsDirectory = data.extensionsDirectory;\n            this._builtInExtensionsDirectory = data.builtInExtensionsDirectory;\n            this._workingDirectory = data.workingDirectory;\n        }\n    }\n    exports._paths = new Paths();\n    exports.getAppDataPath = () => exports._paths.appData;\n    exports.getDefaultUserDataPath = () => exports._paths.defaultUserData;\n    exports.getWorkingDirectory = () => exports._paths.workingDirectory;\n    exports.getExtensionsDirectory = () => exports._paths.extensionsDirectory;\n    exports.getBuiltInExtensionsDirectory = () => exports._paths.builtInExtensionsDirectory;\n    exports.getSocketPath = () => exports._paths.socketPath;\n});\n",null]}