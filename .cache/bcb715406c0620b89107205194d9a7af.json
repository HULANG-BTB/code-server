{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/integrity/common/integrity.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/integrity/common/integrity.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IIntegrityService = instantiation_1.createDecorator('integrityService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/integrity/common/integrity.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/integrity/common/integrity.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,gFAAiF;AAEpE,QAAA,iBAAiB,GAAG,+BAAe,CAAoB,kBAAkB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IIntegrityService = createDecorator<IIntegrityService>('integrityService');\n\nexport interface ChecksumPair {\n\turi: URI;\n\tactual: string;\n\texpected: string;\n\tisPure: boolean;\n}\n\nexport interface IntegrityTestResult {\n\tisPure: boolean;\n\tproof: ChecksumPair[];\n}\n\nexport interface IIntegrityService {\n\t_serviceBrand: any;\n\n\tisPure(): Promise<IntegrityTestResult>;\n}\n"]}]}