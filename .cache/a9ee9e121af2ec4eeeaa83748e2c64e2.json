{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls_1 = require(\"vs/nls\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nexports.ExtensionsConfigurationSchemaId = 'vscode://schemas/extensions';\nexports.ExtensionsConfigurationSchema = {\n    id: exports.ExtensionsConfigurationSchemaId,\n    allowComments: true,\n    type: 'object',\n    title: nls_1.localize('app.extensions.json.title', \"Extensions\"),\n    additionalProperties: false,\n    properties: {\n        recommendations: {\n            type: 'array',\n            description: nls_1.localize('app.extensions.json.recommendations', \"List of extensions which should be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n            items: {\n                type: 'string',\n                pattern: extensionManagement_1.EXTENSION_IDENTIFIER_PATTERN,\n                errorMessage: nls_1.localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n            },\n        },\n        unwantedRecommendations: {\n            type: 'array',\n            description: nls_1.localize('app.extensions.json.unwantedRecommendations', \"List of extensions recommended by VS Code that should not be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n            items: {\n                type: 'string',\n                pattern: extensionManagement_1.EXTENSION_IDENTIFIER_PATTERN,\n                errorMessage: nls_1.localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n            },\n        },\n    }\n};\nexports.ExtensionsConfigurationInitialContent = [\n    '{',\n    '\\t// See http://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.',\n    '\\t// Extension identifier format: ${publisher}.${name}. Example: vscode.csharp',\n    '',\n    '\\t// List of extensions which should be recommended for users of this workspace.',\n    '\\t\"recommendations\": [',\n    '\\t\\t',\n    '\\t],',\n    '\\t// List of extensions recommended by VS Code that should not be recommended for users of this workspace.',\n    '\\t\"unwantedRecommendations\": [',\n    '\\t\\t',\n    '\\t]',\n    '}'\n].join('\\n');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionsFileTemplate.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,8BAAkC;AAElC,kGAA0G;AAE7F,QAAA,+BAA+B,GAAG,6BAA6B,CAAC;AAChE,QAAA,6BAA6B,GAAgB;IACzD,EAAE,EAAE,uCAA+B;IACnC,aAAa,EAAE,IAAI;IACnB,IAAI,EAAE,QAAQ;IACd,KAAK,EAAE,cAAQ,CAAC,2BAA2B,EAAE,YAAY,CAAC;IAC1D,oBAAoB,EAAE,KAAK;IAC3B,UAAU,EAAE;QACX,eAAe,EAAE;YAChB,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,cAAQ,CAAC,qCAAqC,EAAE,4KAA4K,CAAC;YAC1O,KAAK,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,kDAA4B;gBACrC,YAAY,EAAE,cAAQ,CAAC,uCAAuC,EAAE,mEAAmE,CAAC;aACpI;SACD;QACD,uBAAuB,EAAE;YACxB,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,cAAQ,CAAC,6CAA6C,EAAE,sMAAsM,CAAC;YAC5Q,KAAK,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,kDAA4B;gBACrC,YAAY,EAAE,cAAQ,CAAC,uCAAuC,EAAE,mEAAmE,CAAC;aACpI;SACD;KACD;CACD,CAAC;AAEW,QAAA,qCAAqC,GAAW;IAC5D,GAAG;IACH,kGAAkG;IAClG,gFAAgF;IAChF,EAAE;IACF,kFAAkF;IAClF,wBAAwB;IACxB,MAAM;IACN,MAAM;IACN,4GAA4G;IAC5G,gCAAgC;IAChC,MAAM;IACN,KAAK;IACL,GAAG;CACH,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { EXTENSION_IDENTIFIER_PATTERN } from 'vs/platform/extensionManagement/common/extensionManagement';\n\nexport const ExtensionsConfigurationSchemaId = 'vscode://schemas/extensions';\nexport const ExtensionsConfigurationSchema: IJSONSchema = {\n\tid: ExtensionsConfigurationSchemaId,\n\tallowComments: true,\n\ttype: 'object',\n\ttitle: localize('app.extensions.json.title', \"Extensions\"),\n\tadditionalProperties: false,\n\tproperties: {\n\t\trecommendations: {\n\t\t\ttype: 'array',\n\t\t\tdescription: localize('app.extensions.json.recommendations', \"List of extensions which should be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t},\n\t\t},\n\t\tunwantedRecommendations: {\n\t\t\ttype: 'array',\n\t\t\tdescription: localize('app.extensions.json.unwantedRecommendations', \"List of extensions recommended by VS Code that should not be recommended for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.\"),\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t},\n\t\t},\n\t}\n};\n\nexport const ExtensionsConfigurationInitialContent: string = [\n\t'{',\n\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.',\n\t'\\t// Extension identifier format: ${publisher}.${name}. Example: vscode.csharp',\n\t'',\n\t'\\t// List of extensions which should be recommended for users of this workspace.',\n\t'\\t\"recommendations\": [',\n\t'\\t\\t',\n\t'\\t],',\n\t'\\t// List of extensions recommended by VS Code that should not be recommended for users of this workspace.',\n\t'\\t\"unwantedRecommendations\": [',\n\t'\\t\\t',\n\t'\\t]',\n\t'}'\n].join('\\n');"]}]}