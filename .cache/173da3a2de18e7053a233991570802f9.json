{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/menu/menubar.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/menu/menubar.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser = require(\"vs/base/browser/browser\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar strings = require(\"vs/base/common/strings\");\nvar nls = require(\"vs/nls\");\nvar event_1 = require(\"vs/base/browser/event\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar touch_1 = require(\"vs/base/browser/touch\");\nvar menu_1 = require(\"vs/base/browser/ui/menu/menu\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar async_1 = require(\"vs/base/common/async\");\nvar event_2 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar types_1 = require(\"vs/base/common/types\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar $ = DOM.$;\nvar MenubarState;\n(function (MenubarState) {\n    MenubarState[MenubarState[\"HIDDEN\"] = 0] = \"HIDDEN\";\n    MenubarState[MenubarState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    MenubarState[MenubarState[\"FOCUSED\"] = 2] = \"FOCUSED\";\n    MenubarState[MenubarState[\"OPEN\"] = 3] = \"OPEN\";\n})(MenubarState || (MenubarState = {}));\nvar MenuBar = /** @class */ (function (_super) {\n    tslib_1.__extends(MenuBar, _super);\n    function MenuBar(container, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.container = container;\n        _this.options = options;\n        _this.container.setAttribute('role', 'menubar');\n        _this.menuCache = [];\n        _this.mnemonics = new Map();\n        _this._focusState = MenubarState.VISIBLE;\n        _this._onVisibilityChange = _this._register(new event_2.Emitter());\n        _this._onFocusStateChange = _this._register(new event_2.Emitter());\n        _this.createOverflowMenu();\n        _this.menuUpdater = _this._register(new async_1.RunOnceScheduler(function () { return _this.update(); }, 200));\n        _this.actionRunner = _this._register(new actions_1.ActionRunner());\n        _this._register(_this.actionRunner.onDidBeforeRun(function () {\n            _this.setUnfocusedState();\n        }));\n        _this._register(ModifierKeyEmitter.getInstance().event(_this.onModifierKeyToggled, _this));\n        _this._register(DOM.addDisposableListener(_this.container, DOM.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            var eventHandled = true;\n            var key = !!e.key ? e.key.toLocaleLowerCase() : '';\n            if (event.equals(keyCodes_1.KeyCode.LeftArrow)) {\n                _this.focusPrevious();\n            }\n            else if (event.equals(keyCodes_1.KeyCode.RightArrow)) {\n                _this.focusNext();\n            }\n            else if (event.equals(keyCodes_1.KeyCode.Escape) && _this.isFocused && !_this.isOpen) {\n                _this.setUnfocusedState();\n            }\n            else if (!_this.isOpen && !event.ctrlKey && _this.options.enableMnemonics && _this.mnemonicsInUse && _this.mnemonics.has(key)) {\n                var menuIndex = _this.mnemonics.get(key);\n                _this.onMenuTriggered(menuIndex, false);\n            }\n            else {\n                eventHandled = false;\n            }\n            if (eventHandled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }));\n        _this._register(DOM.addDisposableListener(window, DOM.EventType.MOUSE_DOWN, function () {\n            // This mouse event is outside the menubar so it counts as a focus out\n            if (_this.isFocused) {\n                _this.setUnfocusedState();\n            }\n        }));\n        _this._register(DOM.addDisposableListener(_this.container, DOM.EventType.FOCUS_IN, function (e) {\n            var event = e;\n            if (event.relatedTarget) {\n                if (!_this.container.contains(event.relatedTarget)) {\n                    _this.focusToReturn = event.relatedTarget;\n                }\n            }\n        }));\n        _this._register(DOM.addDisposableListener(_this.container, DOM.EventType.FOCUS_OUT, function (e) {\n            var event = e;\n            // We are losing focus and there is no related target, e.g. webview case\n            if (!event.relatedTarget) {\n                _this.setUnfocusedState();\n            }\n            // We are losing focus and there is a target, reset focusToReturn value as not to redirect\n            else if (event.relatedTarget && !_this.container.contains(event.relatedTarget)) {\n                _this.focusToReturn = undefined;\n                _this.setUnfocusedState();\n            }\n        }));\n        _this._register(DOM.addDisposableListener(window, DOM.EventType.KEY_DOWN, function (e) {\n            if (!_this.options.enableMnemonics || !e.altKey || e.ctrlKey || e.defaultPrevented) {\n                return;\n            }\n            var key = e.key.toLocaleLowerCase();\n            if (!_this.mnemonics.has(key)) {\n                return;\n            }\n            _this.mnemonicsInUse = true;\n            _this.updateMnemonicVisibility(true);\n            var menuIndex = _this.mnemonics.get(key);\n            _this.onMenuTriggered(menuIndex, false);\n        }));\n        _this.setUnfocusedState();\n        return _this;\n    }\n    MenuBar.prototype.push = function (arg) {\n        var _this = this;\n        var menus = arrays_1.asArray(arg);\n        menus.forEach(function (menuBarMenu) {\n            var menuIndex = _this.menuCache.length;\n            var cleanMenuLabel = menu_1.cleanMnemonic(menuBarMenu.label);\n            var buttonElement = $('div.menubar-menu-button', { 'role': 'menuitem', 'tabindex': -1, 'aria-label': cleanMenuLabel, 'aria-haspopup': true });\n            var titleElement = $('div.menubar-menu-title', { 'role': 'none', 'aria-hidden': true });\n            buttonElement.appendChild(titleElement);\n            _this.container.insertBefore(buttonElement, _this.overflowMenu.buttonElement);\n            var mnemonicMatches = menu_1.MENU_MNEMONIC_REGEX.exec(menuBarMenu.label);\n            // Register mnemonics\n            if (mnemonicMatches) {\n                var mnemonic = !!mnemonicMatches[1] ? mnemonicMatches[1] : mnemonicMatches[2];\n                _this.registerMnemonic(_this.menuCache.length, mnemonic);\n            }\n            _this.updateLabels(titleElement, buttonElement, menuBarMenu.label);\n            _this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.KEY_UP, function (e) {\n                var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n                var eventHandled = true;\n                if ((event.equals(keyCodes_1.KeyCode.DownArrow) || event.equals(keyCodes_1.KeyCode.Enter)) && !_this.isOpen) {\n                    _this.focusedMenu = { index: menuIndex };\n                    _this.openedViaKeyboard = true;\n                    _this.focusState = MenubarState.OPEN;\n                }\n                else {\n                    eventHandled = false;\n                }\n                if (eventHandled) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            }));\n            touch_1.Gesture.addTarget(buttonElement);\n            _this._register(DOM.addDisposableListener(buttonElement, touch_1.EventType.Tap, function (e) {\n                // Ignore this touch if the menu is touched\n                if (_this.isOpen && _this.focusedMenu && _this.focusedMenu.holder && DOM.isAncestor(e.initialTarget, _this.focusedMenu.holder)) {\n                    return;\n                }\n                _this.ignoreNextMouseUp = false;\n                _this.onMenuTriggered(menuIndex, true);\n                e.preventDefault();\n                e.stopPropagation();\n            }));\n            _this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_DOWN, function (e) {\n                if (!_this.isOpen) {\n                    // Open the menu with mouse down and ignore the following mouse up event\n                    _this.ignoreNextMouseUp = true;\n                    _this.onMenuTriggered(menuIndex, true);\n                }\n                else {\n                    _this.ignoreNextMouseUp = false;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n            }));\n            _this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_UP, function (e) {\n                if (!_this.ignoreNextMouseUp) {\n                    if (_this.isFocused) {\n                        _this.onMenuTriggered(menuIndex, true);\n                    }\n                }\n                else {\n                    _this.ignoreNextMouseUp = false;\n                }\n            }));\n            _this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_ENTER, function () {\n                if (_this.isOpen && !_this.isCurrentMenu(menuIndex)) {\n                    _this.menuCache[menuIndex].buttonElement.focus();\n                    _this.cleanupCustomMenu();\n                    _this.showCustomMenu(menuIndex, false);\n                }\n                else if (_this.isFocused && !_this.isOpen) {\n                    _this.focusedMenu = { index: menuIndex };\n                    buttonElement.focus();\n                }\n            }));\n            _this.menuCache.push({\n                label: menuBarMenu.label,\n                actions: menuBarMenu.actions,\n                buttonElement: buttonElement,\n                titleElement: titleElement\n            });\n        });\n    };\n    MenuBar.prototype.createOverflowMenu = function () {\n        var _this = this;\n        var label = nls.localize('mMore', \"...\");\n        var buttonElement = $('div.menubar-menu-button', { 'role': 'menuitem', 'tabindex': -1, 'aria-label': label, 'aria-haspopup': true });\n        var titleElement = $('div.menubar-menu-title.toolbar-toggle-more', { 'role': 'none', 'aria-hidden': true });\n        buttonElement.appendChild(titleElement);\n        this.container.appendChild(buttonElement);\n        buttonElement.style.visibility = 'hidden';\n        this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.KEY_UP, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            var eventHandled = true;\n            if ((event.equals(keyCodes_1.KeyCode.DownArrow) || event.equals(keyCodes_1.KeyCode.Enter)) && !_this.isOpen) {\n                _this.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n                _this.openedViaKeyboard = true;\n                _this.focusState = MenubarState.OPEN;\n            }\n            else {\n                eventHandled = false;\n            }\n            if (eventHandled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }));\n        touch_1.Gesture.addTarget(buttonElement);\n        this._register(DOM.addDisposableListener(buttonElement, touch_1.EventType.Tap, function (e) {\n            // Ignore this touch if the menu is touched\n            if (_this.isOpen && _this.focusedMenu && _this.focusedMenu.holder && DOM.isAncestor(e.initialTarget, _this.focusedMenu.holder)) {\n                return;\n            }\n            _this.ignoreNextMouseUp = false;\n            _this.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n            e.preventDefault();\n            e.stopPropagation();\n        }));\n        this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_DOWN, function (e) {\n            if (!_this.isOpen) {\n                // Open the menu with mouse down and ignore the following mouse up event\n                _this.ignoreNextMouseUp = true;\n                _this.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n            }\n            else {\n                _this.ignoreNextMouseUp = false;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }));\n        this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_UP, function (e) {\n            if (!_this.ignoreNextMouseUp) {\n                if (_this.isFocused) {\n                    _this.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n                }\n            }\n            else {\n                _this.ignoreNextMouseUp = false;\n            }\n        }));\n        this._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_ENTER, function () {\n            if (_this.isOpen && !_this.isCurrentMenu(MenuBar.OVERFLOW_INDEX)) {\n                _this.overflowMenu.buttonElement.focus();\n                _this.cleanupCustomMenu();\n                _this.showCustomMenu(MenuBar.OVERFLOW_INDEX, false);\n            }\n            else if (_this.isFocused && !_this.isOpen) {\n                _this.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n                buttonElement.focus();\n            }\n        }));\n        this.overflowMenu = {\n            buttonElement: buttonElement,\n            titleElement: titleElement,\n            label: 'More'\n        };\n    };\n    MenuBar.prototype.updateMenu = function (menu) {\n        var menuToUpdate = this.menuCache.filter(function (menuBarMenu) { return menuBarMenu.label === menu.label; });\n        if (menuToUpdate && menuToUpdate.length) {\n            menuToUpdate[0].actions = menu.actions;\n        }\n    };\n    MenuBar.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.menuCache.forEach(function (menuBarMenu) {\n            DOM.removeNode(menuBarMenu.titleElement);\n            DOM.removeNode(menuBarMenu.buttonElement);\n        });\n        DOM.removeNode(this.overflowMenu.titleElement);\n        DOM.removeNode(this.overflowMenu.buttonElement);\n        if (this.overflowLayoutScheduled) {\n            this.overflowLayoutScheduled = lifecycle_1.dispose(this.overflowLayoutScheduled);\n        }\n    };\n    MenuBar.prototype.blur = function () {\n        this.setUnfocusedState();\n    };\n    MenuBar.prototype.getWidth = function () {\n        if (this.menuCache) {\n            var left = this.menuCache[0].buttonElement.getBoundingClientRect().left;\n            var right = this.hasOverflow ? this.overflowMenu.buttonElement.getBoundingClientRect().right : this.menuCache[this.menuCache.length - 1].buttonElement.getBoundingClientRect().right;\n            return right - left;\n        }\n        return 0;\n    };\n    MenuBar.prototype.getHeight = function () {\n        return this.container.clientHeight;\n    };\n    MenuBar.prototype.updateOverflowAction = function () {\n        if (!this.menuCache || !this.menuCache.length) {\n            return;\n        }\n        var sizeAvailable = this.container.offsetWidth;\n        var currentSize = 0;\n        var full = false;\n        var prevNumMenusShown = this.numMenusShown;\n        this.numMenusShown = 0;\n        for (var _i = 0, _a = this.menuCache; _i < _a.length; _i++) {\n            var menuBarMenu = _a[_i];\n            if (!full) {\n                var size = menuBarMenu.buttonElement.offsetWidth;\n                if (currentSize + size > sizeAvailable) {\n                    full = true;\n                }\n                else {\n                    currentSize += size;\n                    this.numMenusShown++;\n                    if (this.numMenusShown > prevNumMenusShown) {\n                        menuBarMenu.buttonElement.style.visibility = 'visible';\n                    }\n                }\n            }\n            if (full) {\n                menuBarMenu.buttonElement.style.visibility = 'hidden';\n            }\n        }\n        // Overflow\n        if (full) {\n            // Can't fit the more button, need to remove more menus\n            while (currentSize + this.overflowMenu.buttonElement.offsetWidth > sizeAvailable && this.numMenusShown > 0) {\n                this.numMenusShown--;\n                var size = this.menuCache[this.numMenusShown].buttonElement.offsetWidth;\n                this.menuCache[this.numMenusShown].buttonElement.style.visibility = 'hidden';\n                currentSize -= size;\n            }\n            this.overflowMenu.actions = [];\n            for (var idx = this.numMenusShown; idx < this.menuCache.length; idx++) {\n                this.overflowMenu.actions.push(new menu_1.SubmenuAction(this.menuCache[idx].label, this.menuCache[idx].actions || []));\n            }\n            DOM.removeNode(this.overflowMenu.buttonElement);\n            this.container.insertBefore(this.overflowMenu.buttonElement, this.menuCache[this.numMenusShown].buttonElement);\n            this.overflowMenu.buttonElement.style.visibility = 'visible';\n        }\n        else {\n            DOM.removeNode(this.overflowMenu.buttonElement);\n            this.container.appendChild(this.overflowMenu.buttonElement);\n            this.overflowMenu.buttonElement.style.visibility = 'hidden';\n        }\n    };\n    MenuBar.prototype.updateLabels = function (titleElement, buttonElement, label) {\n        var cleanMenuLabel = menu_1.cleanMnemonic(label);\n        // Update the button label to reflect mnemonics\n        titleElement.innerHTML = this.options.enableMnemonics ?\n            strings.escape(label).replace(menu_1.MENU_ESCAPED_MNEMONIC_REGEX, '<mnemonic aria-hidden=\"true\">$1</mnemonic>').replace(/&amp;&amp;/g, '&amp;') :\n            cleanMenuLabel.replace(/&&/g, '&');\n        var mnemonicMatches = menu_1.MENU_MNEMONIC_REGEX.exec(label);\n        // Register mnemonics\n        if (mnemonicMatches) {\n            var mnemonic = !!mnemonicMatches[1] ? mnemonicMatches[1] : mnemonicMatches[2];\n            if (this.options.enableMnemonics) {\n                buttonElement.setAttribute('aria-keyshortcuts', 'Alt+' + mnemonic.toLocaleLowerCase());\n            }\n            else {\n                buttonElement.removeAttribute('aria-keyshortcuts');\n            }\n        }\n    };\n    MenuBar.prototype.style = function (style) {\n        this.menuStyle = style;\n    };\n    MenuBar.prototype.update = function (options) {\n        var _this = this;\n        if (options) {\n            this.options = options;\n        }\n        // Don't update while using the menu\n        if (this.isFocused) {\n            this.updatePending = true;\n            return;\n        }\n        this.menuCache.forEach(function (menuBarMenu) {\n            _this.updateLabels(menuBarMenu.titleElement, menuBarMenu.buttonElement, menuBarMenu.label);\n        });\n        if (!this.overflowLayoutScheduled) {\n            this.overflowLayoutScheduled = DOM.scheduleAtNextAnimationFrame(function () {\n                _this.updateOverflowAction();\n                _this.overflowLayoutScheduled = null;\n            });\n        }\n        this.setUnfocusedState();\n    };\n    MenuBar.prototype.registerMnemonic = function (menuIndex, mnemonic) {\n        this.mnemonics.set(mnemonic.toLocaleLowerCase(), menuIndex);\n    };\n    MenuBar.prototype.hideMenubar = function () {\n        if (this.container.style.display !== 'none') {\n            this.container.style.display = 'none';\n            this._onVisibilityChange.fire(false);\n        }\n    };\n    MenuBar.prototype.showMenubar = function () {\n        if (this.container.style.display !== 'flex') {\n            this.container.style.display = 'flex';\n            this._onVisibilityChange.fire(true);\n            this.updateOverflowAction();\n        }\n    };\n    Object.defineProperty(MenuBar.prototype, \"focusState\", {\n        get: function () {\n            return this._focusState;\n        },\n        set: function (value) {\n            if (this._focusState >= MenubarState.FOCUSED && value < MenubarState.FOCUSED) {\n                // Losing focus, update the menu if needed\n                if (this.updatePending) {\n                    this.menuUpdater.schedule();\n                    this.updatePending = false;\n                }\n            }\n            if (value === this._focusState) {\n                return;\n            }\n            var isVisible = this.isVisible;\n            var isOpen = this.isOpen;\n            var isFocused = this.isFocused;\n            this._focusState = value;\n            switch (value) {\n                case MenubarState.HIDDEN:\n                    if (isVisible) {\n                        this.hideMenubar();\n                    }\n                    if (isOpen) {\n                        this.cleanupCustomMenu();\n                    }\n                    if (isFocused) {\n                        this.focusedMenu = undefined;\n                        if (this.focusToReturn) {\n                            this.focusToReturn.focus();\n                            this.focusToReturn = undefined;\n                        }\n                    }\n                    break;\n                case MenubarState.VISIBLE:\n                    if (!isVisible) {\n                        this.showMenubar();\n                    }\n                    if (isOpen) {\n                        this.cleanupCustomMenu();\n                    }\n                    if (isFocused) {\n                        if (this.focusedMenu) {\n                            if (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n                                this.overflowMenu.buttonElement.blur();\n                            }\n                            else {\n                                this.menuCache[this.focusedMenu.index].buttonElement.blur();\n                            }\n                        }\n                        this.focusedMenu = undefined;\n                        if (this.focusToReturn) {\n                            this.focusToReturn.focus();\n                            this.focusToReturn = undefined;\n                        }\n                    }\n                    break;\n                case MenubarState.FOCUSED:\n                    if (!isVisible) {\n                        this.showMenubar();\n                    }\n                    if (isOpen) {\n                        this.cleanupCustomMenu();\n                    }\n                    if (this.focusedMenu) {\n                        if (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n                            this.overflowMenu.buttonElement.focus();\n                        }\n                        else {\n                            this.menuCache[this.focusedMenu.index].buttonElement.focus();\n                        }\n                    }\n                    break;\n                case MenubarState.OPEN:\n                    if (!isVisible) {\n                        this.showMenubar();\n                    }\n                    if (this.focusedMenu) {\n                        this.showCustomMenu(this.focusedMenu.index, this.openedViaKeyboard);\n                    }\n                    break;\n            }\n            this._focusState = value;\n            this._onFocusStateChange.fire(this.focusState >= MenubarState.FOCUSED);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"isVisible\", {\n        get: function () {\n            return this.focusState >= MenubarState.VISIBLE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"isFocused\", {\n        get: function () {\n            return this.focusState >= MenubarState.FOCUSED;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"isOpen\", {\n        get: function () {\n            return this.focusState >= MenubarState.OPEN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"hasOverflow\", {\n        get: function () {\n            return this.numMenusShown < this.menuCache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MenuBar.prototype.setUnfocusedState = function () {\n        if (this.options.visibility === 'toggle' || this.options.visibility === 'hidden') {\n            this.focusState = MenubarState.HIDDEN;\n        }\n        else if (this.options.visibility === 'default' && browser.isFullscreen()) {\n            this.focusState = MenubarState.HIDDEN;\n        }\n        else {\n            this.focusState = MenubarState.VISIBLE;\n        }\n        this.ignoreNextMouseUp = false;\n        this.mnemonicsInUse = false;\n        this.updateMnemonicVisibility(false);\n    };\n    MenuBar.prototype.focusPrevious = function () {\n        if (!this.focusedMenu) {\n            return;\n        }\n        var newFocusedIndex = (this.focusedMenu.index - 1 + this.numMenusShown) % this.numMenusShown;\n        if (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n            newFocusedIndex = this.numMenusShown - 1;\n        }\n        else if (this.focusedMenu.index === 0 && this.hasOverflow) {\n            newFocusedIndex = MenuBar.OVERFLOW_INDEX;\n        }\n        if (newFocusedIndex === this.focusedMenu.index) {\n            return;\n        }\n        if (this.isOpen) {\n            this.cleanupCustomMenu();\n            this.showCustomMenu(newFocusedIndex);\n        }\n        else if (this.isFocused) {\n            this.focusedMenu.index = newFocusedIndex;\n            if (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n                this.overflowMenu.buttonElement.focus();\n            }\n            else {\n                this.menuCache[newFocusedIndex].buttonElement.focus();\n            }\n        }\n    };\n    MenuBar.prototype.focusNext = function () {\n        if (!this.focusedMenu) {\n            return;\n        }\n        var newFocusedIndex = (this.focusedMenu.index + 1) % this.numMenusShown;\n        if (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n            newFocusedIndex = 0;\n        }\n        else if (this.focusedMenu.index === this.numMenusShown - 1) {\n            newFocusedIndex = MenuBar.OVERFLOW_INDEX;\n        }\n        if (newFocusedIndex === this.focusedMenu.index) {\n            return;\n        }\n        if (this.isOpen) {\n            this.cleanupCustomMenu();\n            this.showCustomMenu(newFocusedIndex);\n        }\n        else if (this.isFocused) {\n            this.focusedMenu.index = newFocusedIndex;\n            if (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n                this.overflowMenu.buttonElement.focus();\n            }\n            else {\n                this.menuCache[newFocusedIndex].buttonElement.focus();\n            }\n        }\n    };\n    MenuBar.prototype.updateMnemonicVisibility = function (visible) {\n        var _this = this;\n        if (this.menuCache) {\n            this.menuCache.forEach(function (menuBarMenu) {\n                if (menuBarMenu.titleElement.children.length) {\n                    var child = menuBarMenu.titleElement.children.item(0);\n                    if (child) {\n                        child.style.textDecoration = (_this.options.alwaysOnMnemonics || visible) ? 'underline' : null;\n                    }\n                }\n            });\n        }\n    };\n    Object.defineProperty(MenuBar.prototype, \"mnemonicsInUse\", {\n        get: function () {\n            return this._mnemonicsInUse;\n        },\n        set: function (value) {\n            this._mnemonicsInUse = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"onVisibilityChange\", {\n        get: function () {\n            return this._onVisibilityChange.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MenuBar.prototype, \"onFocusStateChange\", {\n        get: function () {\n            return this._onFocusStateChange.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MenuBar.prototype.onMenuTriggered = function (menuIndex, clicked) {\n        if (this.isOpen) {\n            if (this.isCurrentMenu(menuIndex)) {\n                this.setUnfocusedState();\n            }\n            else {\n                this.cleanupCustomMenu();\n                this.showCustomMenu(menuIndex, this.openedViaKeyboard);\n            }\n        }\n        else {\n            this.focusedMenu = { index: menuIndex };\n            this.openedViaKeyboard = !clicked;\n            this.focusState = MenubarState.OPEN;\n        }\n    };\n    MenuBar.prototype.onModifierKeyToggled = function (modifierKeyStatus) {\n        var allModifiersReleased = !modifierKeyStatus.altKey && !modifierKeyStatus.ctrlKey && !modifierKeyStatus.shiftKey;\n        if (this.options.visibility === 'hidden') {\n            return;\n        }\n        // Alt key pressed while menu is focused. This should return focus away from the menubar\n        if (this.isFocused && modifierKeyStatus.lastKeyPressed === 'alt' && modifierKeyStatus.altKey) {\n            this.setUnfocusedState();\n            this.mnemonicsInUse = false;\n            this.awaitingAltRelease = true;\n        }\n        // Clean alt key press and release\n        if (allModifiersReleased && modifierKeyStatus.lastKeyPressed === 'alt' && modifierKeyStatus.lastKeyReleased === 'alt') {\n            if (!this.awaitingAltRelease) {\n                if (!this.isFocused) {\n                    this.mnemonicsInUse = true;\n                    this.focusedMenu = { index: this.numMenusShown > 0 ? 0 : MenuBar.OVERFLOW_INDEX };\n                    this.focusState = MenubarState.FOCUSED;\n                }\n                else if (!this.isOpen) {\n                    this.setUnfocusedState();\n                }\n            }\n        }\n        // Alt key released\n        if (!modifierKeyStatus.altKey && modifierKeyStatus.lastKeyReleased === 'alt') {\n            this.awaitingAltRelease = false;\n        }\n        if (this.options.enableMnemonics && this.menuCache && !this.isOpen) {\n            this.updateMnemonicVisibility((!this.awaitingAltRelease && modifierKeyStatus.altKey) || this.mnemonicsInUse);\n        }\n    };\n    MenuBar.prototype.isCurrentMenu = function (menuIndex) {\n        if (!this.focusedMenu) {\n            return false;\n        }\n        return this.focusedMenu.index === menuIndex;\n    };\n    MenuBar.prototype.cleanupCustomMenu = function () {\n        if (this.focusedMenu) {\n            // Remove focus from the menus first\n            if (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n                this.overflowMenu.buttonElement.focus();\n            }\n            else {\n                this.menuCache[this.focusedMenu.index].buttonElement.focus();\n            }\n            if (this.focusedMenu.holder) {\n                if (this.focusedMenu.holder.parentElement) {\n                    DOM.removeClass(this.focusedMenu.holder.parentElement, 'open');\n                }\n                this.focusedMenu.holder.remove();\n            }\n            if (this.focusedMenu.widget) {\n                this.focusedMenu.widget.dispose();\n            }\n            this.focusedMenu = { index: this.focusedMenu.index };\n        }\n    };\n    MenuBar.prototype.showCustomMenu = function (menuIndex, selectFirst) {\n        var _this = this;\n        if (selectFirst === void 0) { selectFirst = true; }\n        var actualMenuIndex = menuIndex >= this.numMenusShown ? MenuBar.OVERFLOW_INDEX : menuIndex;\n        var customMenu = actualMenuIndex === MenuBar.OVERFLOW_INDEX ? this.overflowMenu : this.menuCache[actualMenuIndex];\n        if (!customMenu.actions) {\n            return;\n        }\n        var menuHolder = $('div.menubar-menu-items-holder');\n        DOM.addClass(customMenu.buttonElement, 'open');\n        menuHolder.style.top = this.container.clientHeight + \"px\";\n        menuHolder.style.left = customMenu.buttonElement.getBoundingClientRect().left + \"px\";\n        customMenu.buttonElement.appendChild(menuHolder);\n        var menuOptions = {\n            getKeyBinding: this.options.getKeybinding,\n            actionRunner: this.actionRunner,\n            enableMnemonics: this.options.alwaysOnMnemonics || (this.mnemonicsInUse && this.options.enableMnemonics),\n            ariaLabel: types_1.withNullAsUndefined(customMenu.buttonElement.getAttribute('aria-label'))\n        };\n        var menuWidget = this._register(new menu_1.Menu(menuHolder, customMenu.actions, menuOptions));\n        menuWidget.style(this.menuStyle);\n        this._register(menuWidget.onDidCancel(function () {\n            _this.focusState = MenubarState.FOCUSED;\n        }));\n        if (actualMenuIndex !== menuIndex) {\n            menuWidget.trigger(menuIndex - this.numMenusShown);\n        }\n        else {\n            menuWidget.focus(selectFirst);\n        }\n        this.focusedMenu = {\n            index: actualMenuIndex,\n            holder: menuHolder,\n            widget: menuWidget\n        };\n    };\n    MenuBar.OVERFLOW_INDEX = -1;\n    return MenuBar;\n}(lifecycle_1.Disposable));\nexports.MenuBar = MenuBar;\nvar ModifierKeyEmitter = /** @class */ (function (_super) {\n    tslib_1.__extends(ModifierKeyEmitter, _super);\n    function ModifierKeyEmitter() {\n        var _this = _super.call(this) || this;\n        _this._subscriptions = [];\n        _this._keyStatus = {\n            altKey: false,\n            shiftKey: false,\n            ctrlKey: false\n        };\n        _this._subscriptions.push(event_1.domEvent(document.body, 'keydown', true)(function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (e.altKey && !_this._keyStatus.altKey) {\n                _this._keyStatus.lastKeyPressed = 'alt';\n            }\n            else if (e.ctrlKey && !_this._keyStatus.ctrlKey) {\n                _this._keyStatus.lastKeyPressed = 'ctrl';\n            }\n            else if (e.shiftKey && !_this._keyStatus.shiftKey) {\n                _this._keyStatus.lastKeyPressed = 'shift';\n            }\n            else if (event.keyCode !== keyCodes_1.KeyCode.Alt) {\n                _this._keyStatus.lastKeyPressed = undefined;\n            }\n            else {\n                return;\n            }\n            _this._keyStatus.altKey = e.altKey;\n            _this._keyStatus.ctrlKey = e.ctrlKey;\n            _this._keyStatus.shiftKey = e.shiftKey;\n            if (_this._keyStatus.lastKeyPressed) {\n                _this.fire(_this._keyStatus);\n            }\n        }));\n        _this._subscriptions.push(event_1.domEvent(document.body, 'keyup', true)(function (e) {\n            if (!e.altKey && _this._keyStatus.altKey) {\n                _this._keyStatus.lastKeyReleased = 'alt';\n            }\n            else if (!e.ctrlKey && _this._keyStatus.ctrlKey) {\n                _this._keyStatus.lastKeyReleased = 'ctrl';\n            }\n            else if (!e.shiftKey && _this._keyStatus.shiftKey) {\n                _this._keyStatus.lastKeyReleased = 'shift';\n            }\n            else {\n                _this._keyStatus.lastKeyReleased = undefined;\n            }\n            if (_this._keyStatus.lastKeyPressed !== _this._keyStatus.lastKeyReleased) {\n                _this._keyStatus.lastKeyPressed = undefined;\n            }\n            _this._keyStatus.altKey = e.altKey;\n            _this._keyStatus.ctrlKey = e.ctrlKey;\n            _this._keyStatus.shiftKey = e.shiftKey;\n            if (_this._keyStatus.lastKeyReleased) {\n                _this.fire(_this._keyStatus);\n            }\n        }));\n        _this._subscriptions.push(event_1.domEvent(document.body, 'mousedown', true)(function (e) {\n            _this._keyStatus.lastKeyPressed = undefined;\n        }));\n        _this._subscriptions.push(event_1.domEvent(document.body, 'mouseup', true)(function (e) {\n            _this._keyStatus.lastKeyPressed = undefined;\n        }));\n        _this._subscriptions.push(event_1.domEvent(document.body, 'mousemove', true)(function (e) {\n            if (e.buttons) {\n                _this._keyStatus.lastKeyPressed = undefined;\n            }\n        }));\n        _this._subscriptions.push(event_1.domEvent(window, 'blur')(function (e) {\n            _this._keyStatus.lastKeyPressed = undefined;\n            _this._keyStatus.lastKeyReleased = undefined;\n            _this._keyStatus.altKey = false;\n            _this._keyStatus.shiftKey = false;\n            _this._keyStatus.shiftKey = false;\n            _this.fire(_this._keyStatus);\n        }));\n        return _this;\n    }\n    ModifierKeyEmitter.getInstance = function () {\n        if (!ModifierKeyEmitter.instance) {\n            ModifierKeyEmitter.instance = new ModifierKeyEmitter();\n        }\n        return ModifierKeyEmitter.instance;\n    };\n    ModifierKeyEmitter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._subscriptions = lifecycle_1.dispose(this._subscriptions);\n    };\n    return ModifierKeyEmitter;\n}(event_2.Emitter));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/menu/menubar.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/menu/menubar.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,iDAAmD;AACnD,yCAA2C;AAC3C,gDAAkD;AAClD,4BAA8B;AAC9B,+CAAiD;AACjD,+DAAsE;AACtE,+CAAyE;AACzE,qDAA+J;AAC/J,kDAA8E;AAC9E,8CAAwD;AACxD,8CAAsD;AACtD,oDAAsE;AACtE,sDAA4E;AAC5E,8CAA2D;AAC3D,gDAAgD;AAEhD,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAchB,IAAK,YAKJ;AALD,WAAK,YAAY;IAChB,mDAAM,CAAA;IACN,qDAAO,CAAA;IACP,qDAAO,CAAA;IACP,+CAAI,CAAA;AACL,CAAC,EALI,YAAY,KAAZ,YAAY,QAKhB;AAED;IAA6B,mCAAU;IA6CtC,iBAAoB,SAAsB,EAAU,OAA6B;QAA7B,wBAAA,EAAA,YAA6B;QAAjF,YACC,iBAAO,SAgGP;QAjGmB,eAAS,GAAT,SAAS,CAAa;QAAU,aAAO,GAAP,OAAO,CAAsB;QAGhF,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAE/C,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,KAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAkB,CAAC;QAE3C,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC;QAExC,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAW,CAAC,CAAC;QAClE,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAW,CAAC,CAAC;QAElE,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,wBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,EAAb,CAAa,EAAE,GAAG,CAAC,CAAC,CAAC;QAElF,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,sBAAY,EAAE,CAAC,CAAC;QACvD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC;YAC/C,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,KAAI,CAAC,oBAAoB,EAAE,KAAI,CAAC,CAAC,CAAC;QAExF,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAC;YAClF,IAAI,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAkB,CAAC,CAAC;YAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;YACxB,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAErD,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,EAAE;gBACpC,KAAI,CAAC,aAAa,EAAE,CAAC;aACrB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,UAAU,CAAC,EAAE;gBAC5C,KAAI,CAAC,SAAS,EAAE,CAAC;aACjB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;gBAC1E,KAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;iBAAM,IAAI,CAAC,KAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,CAAC,eAAe,IAAI,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC5H,IAAM,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;gBAC3C,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aACvC;iBAAM;gBACN,YAAY,GAAG,KAAK,CAAC;aACrB;YAED,IAAI,YAAY,EAAE;gBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;aACxB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE;YAC1E,sEAAsE;YACtE,IAAI,KAAI,CAAC,SAAS,EAAE;gBACnB,KAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAC;YAClF,IAAI,KAAK,GAAG,CAAe,CAAC;YAE5B,IAAI,KAAK,CAAC,aAAa,EAAE;gBACxB,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,aAA4B,CAAC,EAAE;oBACjE,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAA4B,CAAC;iBACxD;aACD;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAI,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,UAAC,CAAC;YACnF,IAAI,KAAK,GAAG,CAAe,CAAC;YAE5B,wEAAwE;YACxE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBACzB,KAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;YACD,0FAA0F;iBACrF,IAAI,KAAK,CAAC,aAAa,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,aAA4B,CAAC,EAAE;gBAC7F,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBAC/B,KAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAgB;YACzF,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,gBAAgB,EAAE;gBAClF,OAAO;aACP;YAED,IAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;YACtC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC7B,OAAO;aACP;YAED,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;YAEpC,IAAM,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;YAC3C,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,iBAAiB,EAAE,CAAC;;IAC1B,CAAC;IAED,sBAAI,GAAJ,UAAK,GAAgC;QAArC,iBAiGC;QAhGA,IAAM,KAAK,GAAkB,gBAAO,CAAC,GAAG,CAAC,CAAC;QAE1C,KAAK,CAAC,OAAO,CAAC,UAAC,WAAW;YACzB,IAAM,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACxC,IAAM,cAAc,GAAG,oBAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAExD,IAAM,aAAa,GAAG,CAAC,CAAC,yBAAyB,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,cAAc,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YAChJ,IAAM,YAAY,GAAG,CAAC,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;YAE1F,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa,EAAE,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAE5E,IAAI,eAAe,GAAG,0BAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAElE,qBAAqB;YACrB,IAAI,eAAe,EAAE;gBACpB,IAAI,QAAQ,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAE9E,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aACvD;YAED,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAElE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,UAAC,CAAC;gBAC/E,IAAI,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAkB,CAAC,CAAC;gBAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;gBAExB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;oBACrF,KAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;oBACxC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;iBACpC;qBAAM;oBACN,YAAY,GAAG,KAAK,CAAC;iBACrB;gBAED,IAAI,YAAY,EAAE;oBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;iBACxB;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,eAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YACjC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,iBAAS,CAAC,GAAG,EAAE,UAAC,CAAe;gBACtF,2CAA2C;gBAC3C,IAAI,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,aAA4B,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;oBAC1I,OAAO;iBACP;gBAED,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAEtC,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC;YAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,CAAC;gBACnF,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;oBACjB,wEAAwE;oBACxE,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;iBACtC;qBAAM;oBACN,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAC/B;gBAED,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC;YAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAC;gBACjF,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE;oBAC5B,IAAI,KAAI,CAAC,SAAS,EAAE;wBACnB,KAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;qBACtC;iBACD;qBAAM;oBACN,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAC/B;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE;gBAClF,IAAI,KAAI,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;oBAClD,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAChD,KAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;iBACtC;qBAAM,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;oBAC1C,KAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;oBACxC,aAAa,CAAC,KAAK,EAAE,CAAC;iBACtB;YACF,CAAC,CAAC,CAAC,CAAC;YAEJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACnB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,aAAa,EAAE,aAAa;gBAC5B,YAAY,EAAE,YAAY;aAC1B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,oCAAkB,GAAlB;QAAA,iBAgFC;QA/EA,IAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3C,IAAM,aAAa,GAAG,CAAC,CAAC,yBAAyB,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;QACvI,IAAM,YAAY,GAAG,CAAC,CAAC,4CAA4C,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;QAE9G,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC1C,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;QAE1C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,UAAC,CAAC;YAC/E,IAAI,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAkB,CAAC,CAAC;YAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;gBACrF,KAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,cAAc,EAAE,CAAC;gBACrD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;aACpC;iBAAM;gBACN,YAAY,GAAG,KAAK,CAAC;aACrB;YAED,IAAI,YAAY,EAAE;gBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;aACxB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,eAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,iBAAS,CAAC,GAAG,EAAE,UAAC,CAAe;YACtF,2CAA2C;YAC3C,IAAI,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,aAA4B,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAC1I,OAAO;aACP;YAED,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAEnD,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,CAAC;YACnF,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;gBACjB,wEAAwE;gBACxE,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACnD;iBAAM;gBACN,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAC/B;YAED,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAC,CAAC;YACjF,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE;gBAC5B,IAAI,KAAI,CAAC,SAAS,EAAE;oBACnB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;iBACnD;aACD;iBAAM;gBACN,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAC/B;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,aAAa,EAAE,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE;YAClF,IAAI,KAAI,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;gBAC/D,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBACxC,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;aACnD;iBAAM,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE;gBAC1C,KAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,cAAc,EAAE,CAAC;gBACrD,aAAa,CAAC,KAAK,EAAE,CAAC;aACtB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,YAAY,GAAG;YACnB,aAAa,EAAE,aAAa;YAC5B,YAAY,EAAE,YAAY;YAC1B,KAAK,EAAE,MAAM;SACb,CAAC;IACH,CAAC;IAED,4BAAU,GAAV,UAAW,IAAiB;QAC3B,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,WAAW,IAAI,OAAA,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAhC,CAAgC,CAAC,CAAC;QAC5F,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;YACxC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SACvC;IACF,CAAC;IAED,yBAAO,GAAP;QACC,iBAAM,OAAO,WAAE,CAAC;QAEhB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,WAAW;YACjC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACzC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC/C,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,uBAAuB,EAAE;YACjC,IAAI,CAAC,uBAAuB,GAAG,mBAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SACrE;IACF,CAAC;IAED,sBAAI,GAAJ;QACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAED,0BAAQ,GAAR;QACC,IAAI,IAAI,CAAC,SAAS,EAAE;YACnB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;YAC1E,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;YACvL,OAAO,KAAK,GAAG,IAAI,CAAC;SACpB;QAED,OAAO,CAAC,CAAC;IACV,CAAC;IAED,2BAAS,GAAT;QACC,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;IACpC,CAAC;IAEO,sCAAoB,GAA5B;QACC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YAC9C,OAAO;SACP;QAED,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QACjD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,KAAwB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,EAAE;YAAnC,IAAI,WAAW,SAAA;YACnB,IAAI,CAAC,IAAI,EAAE;gBACV,IAAM,IAAI,GAAG,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;gBACnD,IAAI,WAAW,GAAG,IAAI,GAAG,aAAa,EAAE;oBACvC,IAAI,GAAG,IAAI,CAAC;iBACZ;qBAAM;oBACN,WAAW,IAAI,IAAI,CAAC;oBACpB,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,IAAI,CAAC,aAAa,GAAG,iBAAiB,EAAE;wBAC3C,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;qBACvD;iBACD;aACD;YAED,IAAI,IAAI,EAAE;gBACT,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;aACtD;SACD;QAED,WAAW;QACX,IAAI,IAAI,EAAE;YACT,uDAAuD;YACvD,OAAO,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,GAAG,aAAa,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;gBAC3G,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC;gBAC1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC7E,WAAW,IAAI,IAAI,CAAC;aACpB;YAED,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,EAAE,CAAC;YAC/B,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBACtE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,oBAAa,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;aAChH;YAED,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC;YAC/G,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7D;aAAM;YACN,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC5D;IACF,CAAC;IAEO,8BAAY,GAApB,UAAqB,YAAyB,EAAE,aAA0B,EAAE,KAAa;QACxF,IAAM,cAAc,GAAG,oBAAa,CAAC,KAAK,CAAC,CAAC;QAE5C,+CAA+C;QAC/C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACtD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,kCAA2B,EAAE,4CAA4C,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC;YAC1I,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAEpC,IAAI,eAAe,GAAG,0BAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,qBAAqB;QACrB,IAAI,eAAe,EAAE;YACpB,IAAI,QAAQ,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAE9E,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBACjC,aAAa,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC;aACvF;iBAAM;gBACN,aAAa,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;aACnD;SACD;IACF,CAAC;IAED,uBAAK,GAAL,UAAM,KAAkB;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,wBAAM,GAAN,UAAO,OAAyB;QAAhC,iBAuBC;QAtBA,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SACvB;QAED,oCAAoC;QACpC,IAAI,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO;SACP;QAED,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,WAAW;YACjC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;YAClC,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC,4BAA4B,CAAC;gBAC/D,KAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,KAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACrC,CAAC,CAAC,CAAC;SACH;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEO,kCAAgB,GAAxB,UAAyB,SAAiB,EAAE,QAAgB;QAC3D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,SAAS,CAAC,CAAC;IAC7D,CAAC;IAEO,6BAAW,GAAnB;QACC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC5C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;IACF,CAAC;IAEO,6BAAW,GAAnB;QACC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC5C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC5B;IACF,CAAC;IAED,sBAAY,+BAAU;aAAtB;YACC,OAAO,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;aAED,UAAuB,KAAmB;YACzC,IAAI,IAAI,CAAC,WAAW,IAAI,YAAY,CAAC,OAAO,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,EAAE;gBAC7E,0CAA0C;gBAE1C,IAAI,IAAI,CAAC,aAAa,EAAE;oBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC3B;aACD;YAED,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;gBAC/B,OAAO;aACP;YAED,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAEjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,QAAQ,KAAK,EAAE;gBACd,KAAK,YAAY,CAAC,MAAM;oBACvB,IAAI,SAAS,EAAE;wBACd,IAAI,CAAC,WAAW,EAAE,CAAC;qBACnB;oBAED,IAAI,MAAM,EAAE;wBACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;qBACzB;oBAED,IAAI,SAAS,EAAE;wBACd,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;wBAE7B,IAAI,IAAI,CAAC,aAAa,EAAE;4BACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;4BAC3B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;yBAC/B;qBACD;oBAGD,MAAM;gBACP,KAAK,YAAY,CAAC,OAAO;oBACxB,IAAI,CAAC,SAAS,EAAE;wBACf,IAAI,CAAC,WAAW,EAAE,CAAC;qBACnB;oBAED,IAAI,MAAM,EAAE;wBACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;qBACzB;oBAED,IAAI,SAAS,EAAE;wBACd,IAAI,IAAI,CAAC,WAAW,EAAE;4BACrB,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,cAAc,EAAE;gCACtD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;6BACvC;iCAAM;gCACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;6BAC5D;yBACD;wBAED,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;wBAE7B,IAAI,IAAI,CAAC,aAAa,EAAE;4BACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;4BAC3B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;yBAC/B;qBACD;oBAED,MAAM;gBACP,KAAK,YAAY,CAAC,OAAO;oBACxB,IAAI,CAAC,SAAS,EAAE;wBACf,IAAI,CAAC,WAAW,EAAE,CAAC;qBACnB;oBAED,IAAI,MAAM,EAAE;wBACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;qBACzB;oBAED,IAAI,IAAI,CAAC,WAAW,EAAE;wBACrB,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,cAAc,EAAE;4BACtD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;yBACxC;6BAAM;4BACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;yBAC7D;qBACD;oBACD,MAAM;gBACP,KAAK,YAAY,CAAC,IAAI;oBACrB,IAAI,CAAC,SAAS,EAAE;wBACf,IAAI,CAAC,WAAW,EAAE,CAAC;qBACnB;oBAED,IAAI,IAAI,CAAC,WAAW,EAAE;wBACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;qBACpE;oBACD,MAAM;aACP;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;QACxE,CAAC;;;OApGA;IAsGD,sBAAY,8BAAS;aAArB;YACC,OAAO,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAY,8BAAS;aAArB;YACC,OAAO,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAY,2BAAM;aAAlB;YACC,OAAO,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,IAAI,CAAC;QAC7C,CAAC;;;OAAA;IAED,sBAAY,gCAAW;aAAvB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACnD,CAAC;;;OAAA;IAEO,mCAAiB,GAAzB;QACC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ,EAAE;YACjF,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;SACtC;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,SAAS,IAAI,OAAO,CAAC,YAAY,EAAE,EAAE;YAC3E,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC;SACtC;aAAM;YACN,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC;SACvC;QAED,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAEO,+BAAa,GAArB;QAEC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,OAAO;SACP;QAGD,IAAI,eAAe,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7F,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,cAAc,EAAE;YACtD,eAAe,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;YAC5D,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC;SACzC;QAED,IAAI,eAAe,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC/C,OAAO;SACP;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;SACrC;aAAM,IAAI,IAAI,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,eAAe,CAAC;YACzC,IAAI,eAAe,KAAK,OAAO,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACxC;iBAAM;gBACN,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACtD;SACD;IACF,CAAC;IAEO,2BAAS,GAAjB;QACC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,OAAO;SACP;QAED,IAAI,eAAe,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QACxE,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,cAAc,EAAE;YACtD,eAAe,GAAG,CAAC,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;YAC7D,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC;SACzC;QAED,IAAI,eAAe,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC/C,OAAO;SACP;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;SACrC;aAAM,IAAI,IAAI,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,eAAe,CAAC;YACzC,IAAI,eAAe,KAAK,OAAO,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACxC;iBAAM;gBACN,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACtD;SACD;IACF,CAAC;IAEO,0CAAwB,GAAhC,UAAiC,OAAgB;QAAjD,iBAWC;QAVA,IAAI,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,WAAW;gBACjC,IAAI,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,EAAE;oBAC7C,IAAI,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAgB,CAAC;oBACrE,IAAI,KAAK,EAAE;wBACV,KAAK,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC9F;iBACD;YACF,CAAC,CAAC,CAAC;SACH;IACF,CAAC;IAED,sBAAY,mCAAc;aAA1B;YACC,OAAO,IAAI,CAAC,eAAe,CAAC;QAC7B,CAAC;aAED,UAA2B,KAAc;YACxC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,uCAAkB;aAA7B;YACC,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAW,uCAAkB;aAA7B;YACC,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;QACvC,CAAC;;;OAAA;IAEO,iCAAe,GAAvB,UAAwB,SAAiB,EAAE,OAAgB;QAC1D,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;gBAClC,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;iBAAM;gBACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;aACvD;SACD;aAAM;YACN,IAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,OAAO,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;SACpC;IACF,CAAC;IAEO,sCAAoB,GAA5B,UAA6B,iBAAqC;QACjE,IAAM,oBAAoB,GAAG,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QAEpH,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ,EAAE;YACzC,OAAO;SACP;QAED,wFAAwF;QACxF,IAAI,IAAI,CAAC,SAAS,IAAI,iBAAiB,CAAC,cAAc,KAAK,KAAK,IAAI,iBAAiB,CAAC,MAAM,EAAE;YAC7F,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B;QAED,kCAAkC;QAClC,IAAI,oBAAoB,IAAI,iBAAiB,CAAC,cAAc,KAAK,KAAK,IAAI,iBAAiB,CAAC,eAAe,KAAK,KAAK,EAAE;YACtH,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;oBAClF,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC;iBACvC;qBAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;iBACzB;aACD;SACD;QAED,mBAAmB;QACnB,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,iBAAiB,CAAC,eAAe,KAAK,KAAK,EAAE;YAC7E,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SAChC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACnE,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,iBAAiB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7G;IACF,CAAC;IAEO,+BAAa,GAArB,UAAsB,SAAiB;QACtC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,OAAO,KAAK,CAAC;SACb;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,SAAS,CAAC;IAC7C,CAAC;IAEO,mCAAiB,GAAzB;QACC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,oCAAoC;YACpC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,cAAc,EAAE;gBACtD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACxC;iBAAM;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAC7D;YAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE;oBAC1C,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;iBAC/D;gBAED,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;aACjC;YAED,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;aAClC;YAED,IAAI,CAAC,WAAW,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SACrD;IACF,CAAC;IAEO,gCAAc,GAAtB,UAAuB,SAAiB,EAAE,WAAkB;QAA5D,iBAyCC;QAzCyC,4BAAA,EAAA,kBAAkB;QAC3D,IAAM,eAAe,GAAG,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC;QAC7F,IAAM,UAAU,GAAG,eAAe,KAAK,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAEpH,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YACxB,OAAO;SACP;QAED,IAAM,UAAU,GAAG,CAAC,CAAC,+BAA+B,CAAC,CAAC;QAEtD,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAC/C,UAAU,CAAC,KAAK,CAAC,GAAG,GAAM,IAAI,CAAC,SAAS,CAAC,YAAY,OAAI,CAAC;QAC1D,UAAU,CAAC,KAAK,CAAC,IAAI,GAAM,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,IAAI,OAAI,CAAC;QAErF,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEjD,IAAI,WAAW,GAAiB;YAC/B,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;YACzC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YACxG,SAAS,EAAE,2BAAmB,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACnF,CAAC;QAEF,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,WAAI,CAAC,UAAU,EAAE,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;QACvF,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEjC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC;YACrC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,eAAe,KAAK,SAAS,EAAE;YAClC,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SACnD;aAAM;YACN,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,WAAW,GAAG;YAClB,KAAK,EAAE,eAAe;YACtB,MAAM,EAAE,UAAU;YAClB,MAAM,EAAE,UAAU;SAClB,CAAC;IACH,CAAC;IAt0Be,sBAAc,GAAW,CAAC,CAAC,CAAC;IAu0B7C,cAAC;CAAA,AAz0BD,CAA6B,sBAAU,GAy0BtC;AAz0BY,0BAAO;AAs1BpB;IAAiC,8CAA2B;IAM3D;QAAA,YACC,iBAAO,SA+EP;QApFO,oBAAc,GAAkB,EAAE,CAAC;QAO1C,KAAI,CAAC,UAAU,GAAG;YACjB,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,KAAK;SACd,CAAC;QAEF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,UAAA,CAAC;YAClE,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;YAE3C,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxC,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC;aACvC;iBAAM,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBACjD,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,MAAM,CAAC;aACxC;iBAAM,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;gBACnD,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,OAAO,CAAC;aACzC;iBAAM,IAAI,KAAK,CAAC,OAAO,KAAK,kBAAO,CAAC,GAAG,EAAE;gBACzC,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;aAC3C;iBAAM;gBACN,OAAO;aACP;YAED,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YAClC,KAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;YACpC,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAEtC,IAAI,KAAI,CAAC,UAAU,CAAC,cAAc,EAAE;gBACnC,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;aAC3B;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,UAAA,CAAC;YAChE,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxC,KAAI,CAAC,UAAU,CAAC,eAAe,GAAG,KAAK,CAAC;aACxC;iBAAM,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBACjD,KAAI,CAAC,UAAU,CAAC,eAAe,GAAG,MAAM,CAAC;aACzC;iBAAM,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;gBACnD,KAAI,CAAC,UAAU,CAAC,eAAe,GAAG,OAAO,CAAC;aAC1C;iBAAM;gBACN,KAAI,CAAC,UAAU,CAAC,eAAe,GAAG,SAAS,CAAC;aAC5C;YAED,IAAI,KAAI,CAAC,UAAU,CAAC,cAAc,KAAK,KAAI,CAAC,UAAU,CAAC,eAAe,EAAE;gBACvE,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;aAC3C;YAED,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YAClC,KAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;YACpC,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAEtC,IAAI,KAAI,CAAC,UAAU,CAAC,eAAe,EAAE;gBACpC,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;aAC3B;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,UAAA,CAAC;YACpE,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,UAAA,CAAC;YAClE,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;QAC5C,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,UAAA,CAAC;YACpE,IAAI,CAAC,CAAC,OAAO,EAAE;gBACd,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;aAC3C;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,UAAA,CAAC;YAClD,KAAI,CAAC,UAAU,CAAC,cAAc,GAAG,SAAS,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,eAAe,GAAG,SAAS,CAAC;YAC5C,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;YAC/B,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEjC,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC,CAAC;;IACL,CAAC;IAEM,8BAAW,GAAlB;QACC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YACjC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAC;SACvD;QAED,OAAO,kBAAkB,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,oCAAO,GAAP;QACC,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,cAAc,GAAG,mBAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IACF,yBAAC;AAAD,CAAC,AApGD,CAAiC,eAAO,GAoGvC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport * as DOM from 'vs/base/browser/dom';\nimport * as strings from 'vs/base/common/strings';\nimport * as nls from 'vs/nls';\nimport { domEvent } from 'vs/base/browser/event';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { EventType, Gesture, GestureEvent } from 'vs/base/browser/touch';\nimport { cleanMnemonic, IMenuOptions, Menu, MENU_ESCAPED_MNEMONIC_REGEX, MENU_MNEMONIC_REGEX, SubmenuAction, IMenuStyles } from 'vs/base/browser/ui/menu/menu';\nimport { ActionRunner, IAction, IActionRunner } from 'vs/base/common/actions';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { KeyCode, ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { asArray } from 'vs/base/common/arrays';\n\nconst $ = DOM.$;\n\nexport interface IMenuBarOptions {\n\tenableMnemonics?: boolean;\n\tvisibility?: string;\n\tgetKeybinding?: (action: IAction) => ResolvedKeybinding | undefined;\n\talwaysOnMnemonics?: boolean;\n}\n\nexport interface MenuBarMenu {\n\tactions: IAction[];\n\tlabel: string;\n}\n\nenum MenubarState {\n\tHIDDEN,\n\tVISIBLE,\n\tFOCUSED,\n\tOPEN\n}\n\nexport class MenuBar extends Disposable {\n\n\tstatic readonly OVERFLOW_INDEX: number = -1;\n\n\tprivate menuCache: {\n\t\tbuttonElement: HTMLElement;\n\t\ttitleElement: HTMLElement;\n\t\tlabel: string;\n\t\tactions?: IAction[];\n\t}[];\n\n\tprivate overflowMenu: {\n\t\tbuttonElement: HTMLElement;\n\t\ttitleElement: HTMLElement;\n\t\tlabel: string;\n\t\tactions?: IAction[];\n\t};\n\n\tprivate focusedMenu: {\n\t\tindex: number;\n\t\tholder?: HTMLElement;\n\t\twidget?: Menu;\n\t} | undefined;\n\n\tprivate focusToReturn: HTMLElement | undefined;\n\tprivate menuUpdater: RunOnceScheduler;\n\n\t// Input-related\n\tprivate _mnemonicsInUse: boolean;\n\tprivate openedViaKeyboard: boolean;\n\tprivate awaitingAltRelease: boolean;\n\tprivate ignoreNextMouseUp: boolean;\n\tprivate mnemonics: Map<string, number>;\n\n\tprivate updatePending: boolean;\n\tprivate _focusState: MenubarState;\n\tprivate actionRunner: IActionRunner;\n\n\tprivate readonly _onVisibilityChange: Emitter<boolean>;\n\tprivate readonly _onFocusStateChange: Emitter<boolean>;\n\n\tprivate numMenusShown: number;\n\tprivate menuStyle: IMenuStyles;\n\tprivate overflowLayoutScheduled: IDisposable | null;\n\n\tconstructor(private container: HTMLElement, private options: IMenuBarOptions = {}) {\n\t\tsuper();\n\n\t\tthis.container.setAttribute('role', 'menubar');\n\n\t\tthis.menuCache = [];\n\t\tthis.mnemonics = new Map<string, number>();\n\n\t\tthis._focusState = MenubarState.VISIBLE;\n\n\t\tthis._onVisibilityChange = this._register(new Emitter<boolean>());\n\t\tthis._onFocusStateChange = this._register(new Emitter<boolean>());\n\n\t\tthis.createOverflowMenu();\n\n\t\tthis.menuUpdater = this._register(new RunOnceScheduler(() => this.update(), 200));\n\n\t\tthis.actionRunner = this._register(new ActionRunner());\n\t\tthis._register(this.actionRunner.onDidBeforeRun(() => {\n\t\t\tthis.setUnfocusedState();\n\t\t}));\n\n\t\tthis._register(ModifierKeyEmitter.getInstance().event(this.onModifierKeyToggled, this));\n\n\t\tthis._register(DOM.addDisposableListener(this.container, DOM.EventType.KEY_DOWN, (e) => {\n\t\t\tlet event = new StandardKeyboardEvent(e as KeyboardEvent);\n\t\t\tlet eventHandled = true;\n\t\t\tconst key = !!e.key ? e.key.toLocaleLowerCase() : '';\n\n\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\tthis.focusPrevious();\n\t\t\t} else if (event.equals(KeyCode.RightArrow)) {\n\t\t\t\tthis.focusNext();\n\t\t\t} else if (event.equals(KeyCode.Escape) && this.isFocused && !this.isOpen) {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t} else if (!this.isOpen && !event.ctrlKey && this.options.enableMnemonics && this.mnemonicsInUse && this.mnemonics.has(key)) {\n\t\t\t\tconst menuIndex = this.mnemonics.get(key)!;\n\t\t\t\tthis.onMenuTriggered(menuIndex, false);\n\t\t\t} else {\n\t\t\t\teventHandled = false;\n\t\t\t}\n\n\t\t\tif (eventHandled) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(window, DOM.EventType.MOUSE_DOWN, () => {\n\t\t\t// This mouse event is outside the menubar so it counts as a focus out\n\t\t\tif (this.isFocused) {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(this.container, DOM.EventType.FOCUS_IN, (e) => {\n\t\t\tlet event = e as FocusEvent;\n\n\t\t\tif (event.relatedTarget) {\n\t\t\t\tif (!this.container.contains(event.relatedTarget as HTMLElement)) {\n\t\t\t\t\tthis.focusToReturn = event.relatedTarget as HTMLElement;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(this.container, DOM.EventType.FOCUS_OUT, (e) => {\n\t\t\tlet event = e as FocusEvent;\n\n\t\t\t// We are losing focus and there is no related target, e.g. webview case\n\t\t\tif (!event.relatedTarget) {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t}\n\t\t\t// We are losing focus and there is a target, reset focusToReturn value as not to redirect\n\t\t\telse if (event.relatedTarget && !this.container.contains(event.relatedTarget as HTMLElement)) {\n\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(window, DOM.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tif (!this.options.enableMnemonics || !e.altKey || e.ctrlKey || e.defaultPrevented) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst key = e.key.toLocaleLowerCase();\n\t\t\tif (!this.mnemonics.has(key)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.mnemonicsInUse = true;\n\t\t\tthis.updateMnemonicVisibility(true);\n\n\t\t\tconst menuIndex = this.mnemonics.get(key)!;\n\t\t\tthis.onMenuTriggered(menuIndex, false);\n\t\t}));\n\n\t\tthis.setUnfocusedState();\n\t}\n\n\tpush(arg: MenuBarMenu | MenuBarMenu[]): void {\n\t\tconst menus: MenuBarMenu[] = asArray(arg);\n\n\t\tmenus.forEach((menuBarMenu) => {\n\t\t\tconst menuIndex = this.menuCache.length;\n\t\t\tconst cleanMenuLabel = cleanMnemonic(menuBarMenu.label);\n\n\t\t\tconst buttonElement = $('div.menubar-menu-button', { 'role': 'menuitem', 'tabindex': -1, 'aria-label': cleanMenuLabel, 'aria-haspopup': true });\n\t\t\tconst titleElement = $('div.menubar-menu-title', { 'role': 'none', 'aria-hidden': true });\n\n\t\t\tbuttonElement.appendChild(titleElement);\n\t\t\tthis.container.insertBefore(buttonElement, this.overflowMenu.buttonElement);\n\n\t\t\tlet mnemonicMatches = MENU_MNEMONIC_REGEX.exec(menuBarMenu.label);\n\n\t\t\t// Register mnemonics\n\t\t\tif (mnemonicMatches) {\n\t\t\t\tlet mnemonic = !!mnemonicMatches[1] ? mnemonicMatches[1] : mnemonicMatches[2];\n\n\t\t\t\tthis.registerMnemonic(this.menuCache.length, mnemonic);\n\t\t\t}\n\n\t\t\tthis.updateLabels(titleElement, buttonElement, menuBarMenu.label);\n\n\t\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.KEY_UP, (e) => {\n\t\t\t\tlet event = new StandardKeyboardEvent(e as KeyboardEvent);\n\t\t\t\tlet eventHandled = true;\n\n\t\t\t\tif ((event.equals(KeyCode.DownArrow) || event.equals(KeyCode.Enter)) && !this.isOpen) {\n\t\t\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\t\t\tthis.openedViaKeyboard = true;\n\t\t\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t\t\t} else {\n\t\t\t\t\teventHandled = false;\n\t\t\t\t}\n\n\t\t\t\tif (eventHandled) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tGesture.addTarget(buttonElement);\n\t\t\tthis._register(DOM.addDisposableListener(buttonElement, EventType.Tap, (e: GestureEvent) => {\n\t\t\t\t// Ignore this touch if the menu is touched\n\t\t\t\tif (this.isOpen && this.focusedMenu && this.focusedMenu.holder && DOM.isAncestor(e.initialTarget as HTMLElement, this.focusedMenu.holder)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}));\n\n\t\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_DOWN, (e) => {\n\t\t\t\tif (!this.isOpen) {\n\t\t\t\t\t// Open the menu with mouse down and ignore the following mouse up event\n\t\t\t\t\tthis.ignoreNextMouseUp = true;\n\t\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}));\n\n\t\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_UP, (e) => {\n\t\t\t\tif (!this.ignoreNextMouseUp) {\n\t\t\t\t\tif (this.isFocused) {\n\t\t\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_ENTER, () => {\n\t\t\t\tif (this.isOpen && !this.isCurrentMenu(menuIndex)) {\n\t\t\t\t\tthis.menuCache[menuIndex].buttonElement.focus();\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t\tthis.showCustomMenu(menuIndex, false);\n\t\t\t\t} else if (this.isFocused && !this.isOpen) {\n\t\t\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\t\t\tbuttonElement.focus();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.menuCache.push({\n\t\t\t\tlabel: menuBarMenu.label,\n\t\t\t\tactions: menuBarMenu.actions,\n\t\t\t\tbuttonElement: buttonElement,\n\t\t\t\ttitleElement: titleElement\n\t\t\t});\n\t\t});\n\t}\n\n\tcreateOverflowMenu(): void {\n\t\tconst label = nls.localize('mMore', \"...\");\n\t\tconst buttonElement = $('div.menubar-menu-button', { 'role': 'menuitem', 'tabindex': -1, 'aria-label': label, 'aria-haspopup': true });\n\t\tconst titleElement = $('div.menubar-menu-title.toolbar-toggle-more', { 'role': 'none', 'aria-hidden': true });\n\n\t\tbuttonElement.appendChild(titleElement);\n\t\tthis.container.appendChild(buttonElement);\n\t\tbuttonElement.style.visibility = 'hidden';\n\n\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.KEY_UP, (e) => {\n\t\t\tlet event = new StandardKeyboardEvent(e as KeyboardEvent);\n\t\t\tlet eventHandled = true;\n\n\t\t\tif ((event.equals(KeyCode.DownArrow) || event.equals(KeyCode.Enter)) && !this.isOpen) {\n\t\t\t\tthis.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n\t\t\t\tthis.openedViaKeyboard = true;\n\t\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t\t} else {\n\t\t\t\teventHandled = false;\n\t\t\t}\n\n\t\t\tif (eventHandled) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\tGesture.addTarget(buttonElement);\n\t\tthis._register(DOM.addDisposableListener(buttonElement, EventType.Tap, (e: GestureEvent) => {\n\t\t\t// Ignore this touch if the menu is touched\n\t\t\tif (this.isOpen && this.focusedMenu && this.focusedMenu.holder && DOM.isAncestor(e.initialTarget as HTMLElement, this.focusedMenu.holder)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_DOWN, (e) => {\n\t\t\tif (!this.isOpen) {\n\t\t\t\t// Open the menu with mouse down and ignore the following mouse up event\n\t\t\t\tthis.ignoreNextMouseUp = true;\n\t\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\t\t\t} else {\n\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_UP, (e) => {\n\t\t\tif (!this.ignoreNextMouseUp) {\n\t\t\t\tif (this.isFocused) {\n\t\t\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(DOM.addDisposableListener(buttonElement, DOM.EventType.MOUSE_ENTER, () => {\n\t\t\tif (this.isOpen && !this.isCurrentMenu(MenuBar.OVERFLOW_INDEX)) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\tthis.showCustomMenu(MenuBar.OVERFLOW_INDEX, false);\n\t\t\t} else if (this.isFocused && !this.isOpen) {\n\t\t\t\tthis.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n\t\t\t\tbuttonElement.focus();\n\t\t\t}\n\t\t}));\n\n\t\tthis.overflowMenu = {\n\t\t\tbuttonElement: buttonElement,\n\t\t\ttitleElement: titleElement,\n\t\t\tlabel: 'More'\n\t\t};\n\t}\n\n\tupdateMenu(menu: MenuBarMenu): void {\n\t\tconst menuToUpdate = this.menuCache.filter(menuBarMenu => menuBarMenu.label === menu.label);\n\t\tif (menuToUpdate && menuToUpdate.length) {\n\t\t\tmenuToUpdate[0].actions = menu.actions;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.menuCache.forEach(menuBarMenu => {\n\t\t\tDOM.removeNode(menuBarMenu.titleElement);\n\t\t\tDOM.removeNode(menuBarMenu.buttonElement);\n\t\t});\n\n\t\tDOM.removeNode(this.overflowMenu.titleElement);\n\t\tDOM.removeNode(this.overflowMenu.buttonElement);\n\n\t\tif (this.overflowLayoutScheduled) {\n\t\t\tthis.overflowLayoutScheduled = dispose(this.overflowLayoutScheduled);\n\t\t}\n\t}\n\n\tblur(): void {\n\t\tthis.setUnfocusedState();\n\t}\n\n\tgetWidth(): number {\n\t\tif (this.menuCache) {\n\t\t\tconst left = this.menuCache[0].buttonElement.getBoundingClientRect().left;\n\t\t\tconst right = this.hasOverflow ? this.overflowMenu.buttonElement.getBoundingClientRect().right : this.menuCache[this.menuCache.length - 1].buttonElement.getBoundingClientRect().right;\n\t\t\treturn right - left;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.container.clientHeight;\n\t}\n\n\tprivate updateOverflowAction(): void {\n\t\tif (!this.menuCache || !this.menuCache.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sizeAvailable = this.container.offsetWidth;\n\t\tlet currentSize = 0;\n\t\tlet full = false;\n\t\tconst prevNumMenusShown = this.numMenusShown;\n\t\tthis.numMenusShown = 0;\n\t\tfor (let menuBarMenu of this.menuCache) {\n\t\t\tif (!full) {\n\t\t\t\tconst size = menuBarMenu.buttonElement.offsetWidth;\n\t\t\t\tif (currentSize + size > sizeAvailable) {\n\t\t\t\t\tfull = true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentSize += size;\n\t\t\t\t\tthis.numMenusShown++;\n\t\t\t\t\tif (this.numMenusShown > prevNumMenusShown) {\n\t\t\t\t\t\tmenuBarMenu.buttonElement.style.visibility = 'visible';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (full) {\n\t\t\t\tmenuBarMenu.buttonElement.style.visibility = 'hidden';\n\t\t\t}\n\t\t}\n\n\t\t// Overflow\n\t\tif (full) {\n\t\t\t// Can't fit the more button, need to remove more menus\n\t\t\twhile (currentSize + this.overflowMenu.buttonElement.offsetWidth > sizeAvailable && this.numMenusShown > 0) {\n\t\t\t\tthis.numMenusShown--;\n\t\t\t\tconst size = this.menuCache[this.numMenusShown].buttonElement.offsetWidth;\n\t\t\t\tthis.menuCache[this.numMenusShown].buttonElement.style.visibility = 'hidden';\n\t\t\t\tcurrentSize -= size;\n\t\t\t}\n\n\t\t\tthis.overflowMenu.actions = [];\n\t\t\tfor (let idx = this.numMenusShown; idx < this.menuCache.length; idx++) {\n\t\t\t\tthis.overflowMenu.actions.push(new SubmenuAction(this.menuCache[idx].label, this.menuCache[idx].actions || []));\n\t\t\t}\n\n\t\t\tDOM.removeNode(this.overflowMenu.buttonElement);\n\t\t\tthis.container.insertBefore(this.overflowMenu.buttonElement, this.menuCache[this.numMenusShown].buttonElement);\n\t\t\tthis.overflowMenu.buttonElement.style.visibility = 'visible';\n\t\t} else {\n\t\t\tDOM.removeNode(this.overflowMenu.buttonElement);\n\t\t\tthis.container.appendChild(this.overflowMenu.buttonElement);\n\t\t\tthis.overflowMenu.buttonElement.style.visibility = 'hidden';\n\t\t}\n\t}\n\n\tprivate updateLabels(titleElement: HTMLElement, buttonElement: HTMLElement, label: string): void {\n\t\tconst cleanMenuLabel = cleanMnemonic(label);\n\n\t\t// Update the button label to reflect mnemonics\n\t\ttitleElement.innerHTML = this.options.enableMnemonics ?\n\t\t\tstrings.escape(label).replace(MENU_ESCAPED_MNEMONIC_REGEX, '<mnemonic aria-hidden=\"true\">$1</mnemonic>').replace(/&amp;&amp;/g, '&amp;') :\n\t\t\tcleanMenuLabel.replace(/&&/g, '&');\n\n\t\tlet mnemonicMatches = MENU_MNEMONIC_REGEX.exec(label);\n\n\t\t// Register mnemonics\n\t\tif (mnemonicMatches) {\n\t\t\tlet mnemonic = !!mnemonicMatches[1] ? mnemonicMatches[1] : mnemonicMatches[2];\n\n\t\t\tif (this.options.enableMnemonics) {\n\t\t\t\tbuttonElement.setAttribute('aria-keyshortcuts', 'Alt+' + mnemonic.toLocaleLowerCase());\n\t\t\t} else {\n\t\t\t\tbuttonElement.removeAttribute('aria-keyshortcuts');\n\t\t\t}\n\t\t}\n\t}\n\n\tstyle(style: IMenuStyles): void {\n\t\tthis.menuStyle = style;\n\t}\n\n\tupdate(options?: IMenuBarOptions): void {\n\t\tif (options) {\n\t\t\tthis.options = options;\n\t\t}\n\n\t\t// Don't update while using the menu\n\t\tif (this.isFocused) {\n\t\t\tthis.updatePending = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.menuCache.forEach(menuBarMenu => {\n\t\t\tthis.updateLabels(menuBarMenu.titleElement, menuBarMenu.buttonElement, menuBarMenu.label);\n\t\t});\n\n\t\tif (!this.overflowLayoutScheduled) {\n\t\t\tthis.overflowLayoutScheduled = DOM.scheduleAtNextAnimationFrame(() => {\n\t\t\t\tthis.updateOverflowAction();\n\t\t\t\tthis.overflowLayoutScheduled = null;\n\t\t\t});\n\t\t}\n\n\t\tthis.setUnfocusedState();\n\t}\n\n\tprivate registerMnemonic(menuIndex: number, mnemonic: string): void {\n\t\tthis.mnemonics.set(mnemonic.toLocaleLowerCase(), menuIndex);\n\t}\n\n\tprivate hideMenubar(): void {\n\t\tif (this.container.style.display !== 'none') {\n\t\t\tthis.container.style.display = 'none';\n\t\t\tthis._onVisibilityChange.fire(false);\n\t\t}\n\t}\n\n\tprivate showMenubar(): void {\n\t\tif (this.container.style.display !== 'flex') {\n\t\t\tthis.container.style.display = 'flex';\n\t\t\tthis._onVisibilityChange.fire(true);\n\n\t\t\tthis.updateOverflowAction();\n\t\t}\n\t}\n\n\tprivate get focusState(): MenubarState {\n\t\treturn this._focusState;\n\t}\n\n\tprivate set focusState(value: MenubarState) {\n\t\tif (this._focusState >= MenubarState.FOCUSED && value < MenubarState.FOCUSED) {\n\t\t\t// Losing focus, update the menu if needed\n\n\t\t\tif (this.updatePending) {\n\t\t\t\tthis.menuUpdater.schedule();\n\t\t\t\tthis.updatePending = false;\n\t\t\t}\n\t\t}\n\n\t\tif (value === this._focusState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isVisible = this.isVisible;\n\t\tconst isOpen = this.isOpen;\n\t\tconst isFocused = this.isFocused;\n\n\t\tthis._focusState = value;\n\n\t\tswitch (value) {\n\t\t\tcase MenubarState.HIDDEN:\n\t\t\t\tif (isVisible) {\n\t\t\t\t\tthis.hideMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (isFocused) {\n\t\t\t\t\tthis.focusedMenu = undefined;\n\n\t\t\t\t\tif (this.focusToReturn) {\n\t\t\t\t\t\tthis.focusToReturn.focus();\n\t\t\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.VISIBLE:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (isFocused) {\n\t\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\t\t\t\tthis.overflowMenu.buttonElement.blur();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.menuCache[this.focusedMenu.index].buttonElement.blur();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusedMenu = undefined;\n\n\t\t\t\t\tif (this.focusToReturn) {\n\t\t\t\t\t\tthis.focusToReturn.focus();\n\t\t\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.FOCUSED:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.menuCache[this.focusedMenu.index].buttonElement.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.OPEN:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\tthis.showCustomMenu(this.focusedMenu.index, this.openedViaKeyboard);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._focusState = value;\n\t\tthis._onFocusStateChange.fire(this.focusState >= MenubarState.FOCUSED);\n\t}\n\n\tprivate get isVisible(): boolean {\n\t\treturn this.focusState >= MenubarState.VISIBLE;\n\t}\n\n\tprivate get isFocused(): boolean {\n\t\treturn this.focusState >= MenubarState.FOCUSED;\n\t}\n\n\tprivate get isOpen(): boolean {\n\t\treturn this.focusState >= MenubarState.OPEN;\n\t}\n\n\tprivate get hasOverflow(): boolean {\n\t\treturn this.numMenusShown < this.menuCache.length;\n\t}\n\n\tprivate setUnfocusedState(): void {\n\t\tif (this.options.visibility === 'toggle' || this.options.visibility === 'hidden') {\n\t\t\tthis.focusState = MenubarState.HIDDEN;\n\t\t} else if (this.options.visibility === 'default' && browser.isFullscreen()) {\n\t\t\tthis.focusState = MenubarState.HIDDEN;\n\t\t} else {\n\t\t\tthis.focusState = MenubarState.VISIBLE;\n\t\t}\n\n\t\tthis.ignoreNextMouseUp = false;\n\t\tthis.mnemonicsInUse = false;\n\t\tthis.updateMnemonicVisibility(false);\n\t}\n\n\tprivate focusPrevious(): void {\n\n\t\tif (!this.focusedMenu) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tlet newFocusedIndex = (this.focusedMenu.index - 1 + this.numMenusShown) % this.numMenusShown;\n\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\tnewFocusedIndex = this.numMenusShown - 1;\n\t\t} else if (this.focusedMenu.index === 0 && this.hasOverflow) {\n\t\t\tnewFocusedIndex = MenuBar.OVERFLOW_INDEX;\n\t\t}\n\n\t\tif (newFocusedIndex === this.focusedMenu.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isOpen) {\n\t\t\tthis.cleanupCustomMenu();\n\t\t\tthis.showCustomMenu(newFocusedIndex);\n\t\t} else if (this.isFocused) {\n\t\t\tthis.focusedMenu.index = newFocusedIndex;\n\t\t\tif (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menuCache[newFocusedIndex].buttonElement.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate focusNext(): void {\n\t\tif (!this.focusedMenu) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newFocusedIndex = (this.focusedMenu.index + 1) % this.numMenusShown;\n\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\tnewFocusedIndex = 0;\n\t\t} else if (this.focusedMenu.index === this.numMenusShown - 1) {\n\t\t\tnewFocusedIndex = MenuBar.OVERFLOW_INDEX;\n\t\t}\n\n\t\tif (newFocusedIndex === this.focusedMenu.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isOpen) {\n\t\t\tthis.cleanupCustomMenu();\n\t\t\tthis.showCustomMenu(newFocusedIndex);\n\t\t} else if (this.isFocused) {\n\t\t\tthis.focusedMenu.index = newFocusedIndex;\n\t\t\tif (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menuCache[newFocusedIndex].buttonElement.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateMnemonicVisibility(visible: boolean): void {\n\t\tif (this.menuCache) {\n\t\t\tthis.menuCache.forEach(menuBarMenu => {\n\t\t\t\tif (menuBarMenu.titleElement.children.length) {\n\t\t\t\t\tlet child = menuBarMenu.titleElement.children.item(0) as HTMLElement;\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tchild.style.textDecoration = (this.options.alwaysOnMnemonics || visible) ? 'underline' : null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate get mnemonicsInUse(): boolean {\n\t\treturn this._mnemonicsInUse;\n\t}\n\n\tprivate set mnemonicsInUse(value: boolean) {\n\t\tthis._mnemonicsInUse = value;\n\t}\n\n\tpublic get onVisibilityChange(): Event<boolean> {\n\t\treturn this._onVisibilityChange.event;\n\t}\n\n\tpublic get onFocusStateChange(): Event<boolean> {\n\t\treturn this._onFocusStateChange.event;\n\t}\n\n\tprivate onMenuTriggered(menuIndex: number, clicked: boolean) {\n\t\tif (this.isOpen) {\n\t\t\tif (this.isCurrentMenu(menuIndex)) {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t} else {\n\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\tthis.showCustomMenu(menuIndex, this.openedViaKeyboard);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\tthis.openedViaKeyboard = !clicked;\n\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t}\n\t}\n\n\tprivate onModifierKeyToggled(modifierKeyStatus: IModifierKeyStatus): void {\n\t\tconst allModifiersReleased = !modifierKeyStatus.altKey && !modifierKeyStatus.ctrlKey && !modifierKeyStatus.shiftKey;\n\n\t\tif (this.options.visibility === 'hidden') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Alt key pressed while menu is focused. This should return focus away from the menubar\n\t\tif (this.isFocused && modifierKeyStatus.lastKeyPressed === 'alt' && modifierKeyStatus.altKey) {\n\t\t\tthis.setUnfocusedState();\n\t\t\tthis.mnemonicsInUse = false;\n\t\t\tthis.awaitingAltRelease = true;\n\t\t}\n\n\t\t// Clean alt key press and release\n\t\tif (allModifiersReleased && modifierKeyStatus.lastKeyPressed === 'alt' && modifierKeyStatus.lastKeyReleased === 'alt') {\n\t\t\tif (!this.awaitingAltRelease) {\n\t\t\t\tif (!this.isFocused) {\n\t\t\t\t\tthis.mnemonicsInUse = true;\n\t\t\t\t\tthis.focusedMenu = { index: this.numMenusShown > 0 ? 0 : MenuBar.OVERFLOW_INDEX };\n\t\t\t\t\tthis.focusState = MenubarState.FOCUSED;\n\t\t\t\t} else if (!this.isOpen) {\n\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Alt key released\n\t\tif (!modifierKeyStatus.altKey && modifierKeyStatus.lastKeyReleased === 'alt') {\n\t\t\tthis.awaitingAltRelease = false;\n\t\t}\n\n\t\tif (this.options.enableMnemonics && this.menuCache && !this.isOpen) {\n\t\t\tthis.updateMnemonicVisibility((!this.awaitingAltRelease && modifierKeyStatus.altKey) || this.mnemonicsInUse);\n\t\t}\n\t}\n\n\tprivate isCurrentMenu(menuIndex: number): boolean {\n\t\tif (!this.focusedMenu) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.focusedMenu.index === menuIndex;\n\t}\n\n\tprivate cleanupCustomMenu(): void {\n\t\tif (this.focusedMenu) {\n\t\t\t// Remove focus from the menus first\n\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menuCache[this.focusedMenu.index].buttonElement.focus();\n\t\t\t}\n\n\t\t\tif (this.focusedMenu.holder) {\n\t\t\t\tif (this.focusedMenu.holder.parentElement) {\n\t\t\t\t\tDOM.removeClass(this.focusedMenu.holder.parentElement, 'open');\n\t\t\t\t}\n\n\t\t\t\tthis.focusedMenu.holder.remove();\n\t\t\t}\n\n\t\t\tif (this.focusedMenu.widget) {\n\t\t\t\tthis.focusedMenu.widget.dispose();\n\t\t\t}\n\n\t\t\tthis.focusedMenu = { index: this.focusedMenu.index };\n\t\t}\n\t}\n\n\tprivate showCustomMenu(menuIndex: number, selectFirst = true): void {\n\t\tconst actualMenuIndex = menuIndex >= this.numMenusShown ? MenuBar.OVERFLOW_INDEX : menuIndex;\n\t\tconst customMenu = actualMenuIndex === MenuBar.OVERFLOW_INDEX ? this.overflowMenu : this.menuCache[actualMenuIndex];\n\n\t\tif (!customMenu.actions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst menuHolder = $('div.menubar-menu-items-holder');\n\n\t\tDOM.addClass(customMenu.buttonElement, 'open');\n\t\tmenuHolder.style.top = `${this.container.clientHeight}px`;\n\t\tmenuHolder.style.left = `${customMenu.buttonElement.getBoundingClientRect().left}px`;\n\n\t\tcustomMenu.buttonElement.appendChild(menuHolder);\n\n\t\tlet menuOptions: IMenuOptions = {\n\t\t\tgetKeyBinding: this.options.getKeybinding,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tenableMnemonics: this.options.alwaysOnMnemonics || (this.mnemonicsInUse && this.options.enableMnemonics),\n\t\t\tariaLabel: withNullAsUndefined(customMenu.buttonElement.getAttribute('aria-label'))\n\t\t};\n\n\t\tlet menuWidget = this._register(new Menu(menuHolder, customMenu.actions, menuOptions));\n\t\tmenuWidget.style(this.menuStyle);\n\n\t\tthis._register(menuWidget.onDidCancel(() => {\n\t\t\tthis.focusState = MenubarState.FOCUSED;\n\t\t}));\n\n\t\tif (actualMenuIndex !== menuIndex) {\n\t\t\tmenuWidget.trigger(menuIndex - this.numMenusShown);\n\t\t} else {\n\t\t\tmenuWidget.focus(selectFirst);\n\t\t}\n\n\t\tthis.focusedMenu = {\n\t\t\tindex: actualMenuIndex,\n\t\t\tholder: menuHolder,\n\t\t\twidget: menuWidget\n\t\t};\n\t}\n}\n\ntype ModifierKey = 'alt' | 'ctrl' | 'shift';\n\ninterface IModifierKeyStatus {\n\taltKey: boolean;\n\tshiftKey: boolean;\n\tctrlKey: boolean;\n\tlastKeyPressed?: ModifierKey;\n\tlastKeyReleased?: ModifierKey;\n}\n\n\nclass ModifierKeyEmitter extends Emitter<IModifierKeyStatus> {\n\n\tprivate _subscriptions: IDisposable[] = [];\n\tprivate _keyStatus: IModifierKeyStatus;\n\tprivate static instance: ModifierKeyEmitter;\n\n\tprivate constructor() {\n\t\tsuper();\n\n\t\tthis._keyStatus = {\n\t\t\taltKey: false,\n\t\t\tshiftKey: false,\n\t\t\tctrlKey: false\n\t\t};\n\n\t\tthis._subscriptions.push(domEvent(document.body, 'keydown', true)(e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\tif (e.altKey && !this._keyStatus.altKey) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = 'alt';\n\t\t\t} else if (e.ctrlKey && !this._keyStatus.ctrlKey) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = 'ctrl';\n\t\t\t} else if (e.shiftKey && !this._keyStatus.shiftKey) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = 'shift';\n\t\t\t} else if (event.keyCode !== KeyCode.Alt) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._keyStatus.altKey = e.altKey;\n\t\t\tthis._keyStatus.ctrlKey = e.ctrlKey;\n\t\t\tthis._keyStatus.shiftKey = e.shiftKey;\n\n\t\t\tif (this._keyStatus.lastKeyPressed) {\n\t\t\t\tthis.fire(this._keyStatus);\n\t\t\t}\n\t\t}));\n\n\t\tthis._subscriptions.push(domEvent(document.body, 'keyup', true)(e => {\n\t\t\tif (!e.altKey && this._keyStatus.altKey) {\n\t\t\t\tthis._keyStatus.lastKeyReleased = 'alt';\n\t\t\t} else if (!e.ctrlKey && this._keyStatus.ctrlKey) {\n\t\t\t\tthis._keyStatus.lastKeyReleased = 'ctrl';\n\t\t\t} else if (!e.shiftKey && this._keyStatus.shiftKey) {\n\t\t\t\tthis._keyStatus.lastKeyReleased = 'shift';\n\t\t\t} else {\n\t\t\t\tthis._keyStatus.lastKeyReleased = undefined;\n\t\t\t}\n\n\t\t\tif (this._keyStatus.lastKeyPressed !== this._keyStatus.lastKeyReleased) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t\t}\n\n\t\t\tthis._keyStatus.altKey = e.altKey;\n\t\t\tthis._keyStatus.ctrlKey = e.ctrlKey;\n\t\t\tthis._keyStatus.shiftKey = e.shiftKey;\n\n\t\t\tif (this._keyStatus.lastKeyReleased) {\n\t\t\t\tthis.fire(this._keyStatus);\n\t\t\t}\n\t\t}));\n\n\t\tthis._subscriptions.push(domEvent(document.body, 'mousedown', true)(e => {\n\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t}));\n\n\t\tthis._subscriptions.push(domEvent(document.body, 'mouseup', true)(e => {\n\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t}));\n\n\t\tthis._subscriptions.push(domEvent(document.body, 'mousemove', true)(e => {\n\t\t\tif (e.buttons) {\n\t\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t\t}\n\t\t}));\n\n\t\tthis._subscriptions.push(domEvent(window, 'blur')(e => {\n\t\t\tthis._keyStatus.lastKeyPressed = undefined;\n\t\t\tthis._keyStatus.lastKeyReleased = undefined;\n\t\t\tthis._keyStatus.altKey = false;\n\t\t\tthis._keyStatus.shiftKey = false;\n\t\t\tthis._keyStatus.shiftKey = false;\n\n\t\t\tthis.fire(this._keyStatus);\n\t\t}));\n\t}\n\n\tstatic getInstance() {\n\t\tif (!ModifierKeyEmitter.instance) {\n\t\t\tModifierKeyEmitter.instance = new ModifierKeyEmitter();\n\t\t}\n\n\t\treturn ModifierKeyEmitter.instance;\n\t}\n\n\tdispose() {\n\t\tsuper.dispose();\n\t\tthis._subscriptions = dispose(this._subscriptions);\n\t}\n}"]}]}