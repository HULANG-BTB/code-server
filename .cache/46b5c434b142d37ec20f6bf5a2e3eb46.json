{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/output/common/outputChannelModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/output/common/outputChannelModel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar strings = require(\"vs/base/common/strings\");\nvar event_1 = require(\"vs/base/common/event\");\nvar async_1 = require(\"vs/base/common/async\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar types_1 = require(\"vs/base/common/types\");\nvar editOperation_1 = require(\"vs/editor/common/core/editOperation\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar uint_1 = require(\"vs/base/common/uint\");\nexports.IOutputChannelModelService = instantiation_1.createDecorator('outputChannelModelService');\nvar AsbtractOutputChannelModelService = /** @class */ (function () {\n    function AsbtractOutputChannelModelService(instantiationService) {\n        this.instantiationService = instantiationService;\n    }\n    AsbtractOutputChannelModelService.prototype.createOutputChannelModel = function (id, modelUri, mimeType, file) {\n        return file ? this.instantiationService.createInstance(FileOutputChannelModel, modelUri, mimeType, file) : this.instantiationService.createInstance(BufferredOutputChannel, modelUri, mimeType);\n    };\n    AsbtractOutputChannelModelService = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService)\n    ], AsbtractOutputChannelModelService);\n    return AsbtractOutputChannelModelService;\n}());\nexports.AsbtractOutputChannelModelService = AsbtractOutputChannelModelService;\nvar AbstractFileOutputChannelModel = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractFileOutputChannelModel, _super);\n    function AbstractFileOutputChannelModel(modelUri, mimeType, file, fileService, modelService, modeService) {\n        var _this = _super.call(this) || this;\n        _this.modelUri = modelUri;\n        _this.mimeType = mimeType;\n        _this.file = file;\n        _this.fileService = fileService;\n        _this.modelService = modelService;\n        _this.modeService = modeService;\n        _this._onDidAppendedContent = new event_1.Emitter();\n        _this.onDidAppendedContent = _this._onDidAppendedContent.event;\n        _this._onDispose = new event_1.Emitter();\n        _this.onDispose = _this._onDispose.event;\n        _this.startOffset = 0;\n        _this.endOffset = 0;\n        _this.modelUpdater = new async_1.RunOnceScheduler(function () { return _this.updateModel(); }, 300);\n        _this._register(lifecycle_1.toDisposable(function () { return _this.modelUpdater.cancel(); }));\n        return _this;\n    }\n    AbstractFileOutputChannelModel.prototype.clear = function (till) {\n        if (this.modelUpdater.isScheduled()) {\n            this.modelUpdater.cancel();\n            this.onUpdateModelCancelled();\n        }\n        if (this.model) {\n            this.model.setValue('');\n        }\n        this.endOffset = types_1.isNumber(till) ? till : this.endOffset;\n        this.startOffset = this.endOffset;\n    };\n    AbstractFileOutputChannelModel.prototype.update = function () { };\n    AbstractFileOutputChannelModel.prototype.createModel = function (content) {\n        var _this = this;\n        if (this.model) {\n            this.model.setValue(content);\n        }\n        else {\n            this.model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n            this.onModelCreated(this.model);\n            var disposables_1 = [];\n            disposables_1.push(this.model.onWillDispose(function () {\n                _this.onModelWillDispose(_this.model);\n                _this.model = null;\n                lifecycle_1.dispose(disposables_1);\n            }));\n        }\n        return this.model;\n    };\n    AbstractFileOutputChannelModel.prototype.appendToModel = function (content) {\n        if (this.model && content) {\n            var lastLine = this.model.getLineCount();\n            var lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n            this.model.applyEdits([editOperation_1.EditOperation.insert(new position_1.Position(lastLine, lastLineMaxColumn), content)]);\n            this._onDidAppendedContent.fire();\n        }\n    };\n    AbstractFileOutputChannelModel.prototype.onModelCreated = function (model) { };\n    AbstractFileOutputChannelModel.prototype.onModelWillDispose = function (model) { };\n    AbstractFileOutputChannelModel.prototype.onUpdateModelCancelled = function () { };\n    AbstractFileOutputChannelModel.prototype.updateModel = function () { };\n    AbstractFileOutputChannelModel.prototype.dispose = function () {\n        this._onDispose.fire();\n        _super.prototype.dispose.call(this);\n    };\n    return AbstractFileOutputChannelModel;\n}(lifecycle_1.Disposable));\nexports.AbstractFileOutputChannelModel = AbstractFileOutputChannelModel;\nvar OutputFileListener = /** @class */ (function (_super) {\n    tslib_1.__extends(OutputFileListener, _super);\n    function OutputFileListener(file, fileService) {\n        var _this = _super.call(this) || this;\n        _this.file = file;\n        _this.fileService = fileService;\n        _this._onDidContentChange = new event_1.Emitter();\n        _this.onDidContentChange = _this._onDidContentChange.event;\n        _this.watching = false;\n        _this.syncDelayer = new async_1.ThrottledDelayer(500);\n        return _this;\n    }\n    OutputFileListener.prototype.watch = function (eTag) {\n        if (!this.watching) {\n            this.etag = eTag;\n            this.poll();\n            this.watching = true;\n        }\n    };\n    OutputFileListener.prototype.poll = function () {\n        var _this = this;\n        var loop = function () { return _this.doWatch().then(function () { return _this.poll(); }); };\n        this.syncDelayer.trigger(loop);\n    };\n    OutputFileListener.prototype.doWatch = function () {\n        var _this = this;\n        return this.fileService.resolveFile(this.file, { resolveMetadata: true })\n            .then(function (stat) {\n            if (stat.etag !== _this.etag) {\n                _this.etag = stat.etag;\n                _this._onDidContentChange.fire(stat.size);\n            }\n        });\n    };\n    OutputFileListener.prototype.unwatch = function () {\n        if (this.watching) {\n            this.syncDelayer.cancel();\n            this.watching = false;\n        }\n    };\n    OutputFileListener.prototype.dispose = function () {\n        this.unwatch();\n        _super.prototype.dispose.call(this);\n    };\n    return OutputFileListener;\n}(lifecycle_1.Disposable));\n/**\n * An output channel driven by a file and does not support appending messages.\n */\nvar FileOutputChannelModel = /** @class */ (function (_super) {\n    tslib_1.__extends(FileOutputChannelModel, _super);\n    function FileOutputChannelModel(modelUri, mimeType, file, fileService, modelService, modeService) {\n        var _this = _super.call(this, modelUri, mimeType, file, fileService, modelService, modeService) || this;\n        _this.updateInProgress = false;\n        _this.etag = '';\n        _this.loadModelPromise = null;\n        _this.fileHandler = _this._register(new OutputFileListener(_this.file, _this.fileService));\n        _this._register(_this.fileHandler.onDidContentChange(function (size) { return _this.update(size); }));\n        _this._register(lifecycle_1.toDisposable(function () { return _this.fileHandler.unwatch(); }));\n        return _this;\n    }\n    FileOutputChannelModel.prototype.loadModel = function () {\n        var _this = this;\n        this.loadModelPromise = this.fileService.resolveContent(this.file, { position: this.startOffset, encoding: 'utf8' })\n            .then(function (content) {\n            _this.endOffset = _this.startOffset + _this.getByteLength(content.value);\n            _this.etag = content.etag;\n            return _this.createModel(content.value);\n        });\n        return this.loadModelPromise;\n    };\n    FileOutputChannelModel.prototype.clear = function (till) {\n        var _this = this;\n        var loadModelPromise = this.loadModelPromise ? this.loadModelPromise : Promise.resolve();\n        loadModelPromise.then(function () {\n            _super.prototype.clear.call(_this, till);\n            _this.update();\n        });\n    };\n    FileOutputChannelModel.prototype.append = function (message) {\n        throw new Error('Not supported');\n    };\n    FileOutputChannelModel.prototype.updateModel = function () {\n        var _this = this;\n        if (this.model) {\n            this.fileService.resolveContent(this.file, { position: this.endOffset, encoding: 'utf8' })\n                .then(function (content) {\n                _this.etag = content.etag;\n                if (content.value) {\n                    _this.endOffset = _this.endOffset + _this.getByteLength(content.value);\n                    _this.appendToModel(content.value);\n                }\n                _this.updateInProgress = false;\n            }, function () { return _this.updateInProgress = false; });\n        }\n        else {\n            this.updateInProgress = false;\n        }\n    };\n    FileOutputChannelModel.prototype.onModelCreated = function (model) {\n        this.fileHandler.watch(this.etag);\n    };\n    FileOutputChannelModel.prototype.onModelWillDispose = function (model) {\n        this.fileHandler.unwatch();\n    };\n    FileOutputChannelModel.prototype.onUpdateModelCancelled = function () {\n        this.updateInProgress = false;\n    };\n    FileOutputChannelModel.prototype.getByteLength = function (str) {\n        if (typeof Buffer !== 'undefined') {\n            return Buffer.from(str).byteLength;\n        }\n        return uint_1.toUint8ArrayBuffer(str).byteLength;\n    };\n    FileOutputChannelModel.prototype.update = function (size) {\n        if (this.model) {\n            if (!this.updateInProgress) {\n                this.updateInProgress = true;\n                if (types_1.isNumber(size) && this.endOffset > size) { // Reset - Content is removed\n                    this.startOffset = this.endOffset = 0;\n                    this.model.setValue('');\n                }\n                this.modelUpdater.schedule();\n            }\n        }\n    };\n    FileOutputChannelModel = tslib_1.__decorate([\n        tslib_1.__param(3, files_1.IFileService),\n        tslib_1.__param(4, modelService_1.IModelService),\n        tslib_1.__param(5, modeService_1.IModeService)\n    ], FileOutputChannelModel);\n    return FileOutputChannelModel;\n}(AbstractFileOutputChannelModel));\nvar BufferredOutputChannel = /** @class */ (function (_super) {\n    tslib_1.__extends(BufferredOutputChannel, _super);\n    function BufferredOutputChannel(modelUri, mimeType, modelService, modeService) {\n        var _this = _super.call(this) || this;\n        _this.modelUri = modelUri;\n        _this.mimeType = mimeType;\n        _this.modelService = modelService;\n        _this.modeService = modeService;\n        _this.file = null;\n        _this.scrollLock = false;\n        _this._onDidAppendedContent = new event_1.Emitter();\n        _this.onDidAppendedContent = _this._onDidAppendedContent.event;\n        _this._onDispose = new event_1.Emitter();\n        _this.onDispose = _this._onDispose.event;\n        _this.lastReadId = undefined;\n        _this.modelUpdater = new async_1.RunOnceScheduler(function () { return _this.updateModel(); }, 300);\n        _this._register(lifecycle_1.toDisposable(function () { return _this.modelUpdater.cancel(); }));\n        _this.bufferredContent = new BufferedContent();\n        _this._register(lifecycle_1.toDisposable(function () { return _this.bufferredContent.clear(); }));\n        return _this;\n    }\n    BufferredOutputChannel.prototype.append = function (output) {\n        this.bufferredContent.append(output);\n        if (!this.modelUpdater.isScheduled()) {\n            this.modelUpdater.schedule();\n        }\n    };\n    BufferredOutputChannel.prototype.update = function () { };\n    BufferredOutputChannel.prototype.clear = function () {\n        if (this.modelUpdater.isScheduled()) {\n            this.modelUpdater.cancel();\n        }\n        if (this.model) {\n            this.model.setValue('');\n        }\n        this.bufferredContent.clear();\n        this.lastReadId = undefined;\n    };\n    BufferredOutputChannel.prototype.loadModel = function () {\n        var _a = this.bufferredContent.getDelta(this.lastReadId), value = _a.value, id = _a.id;\n        if (this.model) {\n            this.model.setValue(value);\n        }\n        else {\n            this.model = this.createModel(value);\n        }\n        this.lastReadId = id;\n        return Promise.resolve(this.model);\n    };\n    BufferredOutputChannel.prototype.createModel = function (content) {\n        var _this = this;\n        var model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n        var disposables = [];\n        disposables.push(model.onWillDispose(function () {\n            _this.model = null;\n            lifecycle_1.dispose(disposables);\n        }));\n        return model;\n    };\n    BufferredOutputChannel.prototype.updateModel = function () {\n        if (this.model) {\n            var _a = this.bufferredContent.getDelta(this.lastReadId), value = _a.value, id = _a.id;\n            this.lastReadId = id;\n            var lastLine = this.model.getLineCount();\n            var lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n            this.model.applyEdits([editOperation_1.EditOperation.insert(new position_1.Position(lastLine, lastLineMaxColumn), value)]);\n            this._onDidAppendedContent.fire();\n        }\n    };\n    BufferredOutputChannel.prototype.dispose = function () {\n        this._onDispose.fire();\n        _super.prototype.dispose.call(this);\n    };\n    BufferredOutputChannel = tslib_1.__decorate([\n        tslib_1.__param(2, modelService_1.IModelService),\n        tslib_1.__param(3, modeService_1.IModeService)\n    ], BufferredOutputChannel);\n    return BufferredOutputChannel;\n}(lifecycle_1.Disposable));\nexports.BufferredOutputChannel = BufferredOutputChannel;\nvar BufferedContent = /** @class */ (function () {\n    function BufferedContent() {\n        this.data = [];\n        this.dataIds = [];\n        this.idPool = 0;\n        this.length = 0;\n    }\n    BufferedContent.prototype.append = function (content) {\n        this.data.push(content);\n        this.dataIds.push(++this.idPool);\n        this.length += content.length;\n        this.trim();\n    };\n    BufferedContent.prototype.clear = function () {\n        this.data.length = 0;\n        this.dataIds.length = 0;\n        this.length = 0;\n    };\n    BufferedContent.prototype.trim = function () {\n        if (this.length < BufferedContent.MAX_OUTPUT_LENGTH * 1.2) {\n            return;\n        }\n        while (this.length > BufferedContent.MAX_OUTPUT_LENGTH) {\n            this.dataIds.shift();\n            var removed = this.data.shift();\n            if (removed) {\n                this.length -= removed.length;\n            }\n        }\n    };\n    BufferedContent.prototype.getDelta = function (previousId) {\n        var idx = -1;\n        if (previousId !== undefined) {\n            idx = arrays_1.binarySearch(this.dataIds, previousId, function (a, b) { return a - b; });\n        }\n        var id = this.idPool;\n        if (idx >= 0) {\n            var value = strings.removeAnsiEscapeCodes(this.data.slice(idx + 1).join(''));\n            return { value: value, id: id };\n        }\n        else {\n            var value = strings.removeAnsiEscapeCodes(this.data.join(''));\n            return { value: value, id: id };\n        }\n    };\n    BufferedContent.MAX_OUTPUT_LENGTH = 10000 /* Max. number of output lines to show in output */ * 100 /* Guestimated chars per line */;\n    return BufferedContent;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/output/common/outputChannelModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/output/common/outputChannelModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport * as strings from 'vs/base/common/strings';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { RunOnceScheduler, ThrottledDelayer } from 'vs/base/common/async';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { Disposable, toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { isNumber } from 'vs/base/common/types';\nimport { EditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { binarySearch } from 'vs/base/common/arrays';\nimport { toUint8ArrayBuffer } from 'vs/base/common/uint';\n\nexport interface IOutputChannelModel extends IDisposable {\n\treadonly onDidAppendedContent: Event<void>;\n\treadonly onDispose: Event<void>;\n\tappend(output: string): void;\n\tupdate(): void;\n\tloadModel(): Promise<ITextModel>;\n\tclear(till?: number): void;\n}\n\nexport const IOutputChannelModelService = createDecorator<IOutputChannelModelService>('outputChannelModelService');\n\nexport interface IOutputChannelModelService {\n\t_serviceBrand: any;\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, mimeType: string, file?: URI): IOutputChannelModel;\n\n}\n\nexport abstract class AsbtractOutputChannelModelService {\n\n\tconstructor(\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService\n\t) { }\n\n\tcreateOutputChannelModel(id: string, modelUri: URI, mimeType: string, file?: URI): IOutputChannelModel {\n\t\treturn file ? this.instantiationService.createInstance(FileOutputChannelModel, modelUri, mimeType, file) : this.instantiationService.createInstance(BufferredOutputChannel, modelUri, mimeType);\n\t}\n\n}\n\nexport abstract class AbstractFileOutputChannelModel extends Disposable implements IOutputChannelModel {\n\n\tprotected _onDidAppendedContent = new Emitter<void>();\n\treadonly onDidAppendedContent: Event<void> = this._onDidAppendedContent.event;\n\n\tprotected _onDispose = new Emitter<void>();\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprotected modelUpdater: RunOnceScheduler;\n\tprotected model: ITextModel | null;\n\n\tprotected startOffset: number = 0;\n\tprotected endOffset: number = 0;\n\n\tconstructor(\n\t\tprivate readonly modelUri: URI,\n\t\tprivate readonly mimeType: string,\n\t\tprotected readonly file: URI,\n\t\tprotected fileService: IFileService,\n\t\tprotected modelService: IModelService,\n\t\tprotected modeService: IModeService,\n\t) {\n\t\tsuper();\n\t\tthis.modelUpdater = new RunOnceScheduler(() => this.updateModel(), 300);\n\t\tthis._register(toDisposable(() => this.modelUpdater.cancel()));\n\t}\n\n\tclear(till?: number): void {\n\t\tif (this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.cancel();\n\t\t\tthis.onUpdateModelCancelled();\n\t\t}\n\t\tif (this.model) {\n\t\t\tthis.model.setValue('');\n\t\t}\n\t\tthis.endOffset = isNumber(till) ? till : this.endOffset;\n\t\tthis.startOffset = this.endOffset;\n\t}\n\n\tupdate(): void { }\n\n\tprotected createModel(content: string): ITextModel {\n\t\tif (this.model) {\n\t\t\tthis.model.setValue(content);\n\t\t} else {\n\t\t\tthis.model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n\t\t\tthis.onModelCreated(this.model);\n\t\t\tconst disposables: IDisposable[] = [];\n\t\t\tdisposables.push(this.model.onWillDispose(() => {\n\t\t\t\tthis.onModelWillDispose(this.model);\n\t\t\t\tthis.model = null;\n\t\t\t\tdispose(disposables);\n\t\t\t}));\n\t\t}\n\t\treturn this.model;\n\t}\n\n\tappendToModel(content: string): void {\n\t\tif (this.model && content) {\n\t\t\tconst lastLine = this.model.getLineCount();\n\t\t\tconst lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n\t\t\tthis.model.applyEdits([EditOperation.insert(new Position(lastLine, lastLineMaxColumn), content)]);\n\t\t\tthis._onDidAppendedContent.fire();\n\t\t}\n\t}\n\n\tabstract loadModel(): Promise<ITextModel>;\n\tabstract append(message: string): void;\n\n\tprotected onModelCreated(model: ITextModel) { }\n\tprotected onModelWillDispose(model: ITextModel | null) { }\n\tprotected onUpdateModelCancelled() { }\n\tprotected updateModel() { }\n\n\tdispose(): void {\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nclass OutputFileListener extends Disposable {\n\n\tprivate readonly _onDidContentChange = new Emitter<number | undefined>();\n\treadonly onDidContentChange: Event<number | undefined> = this._onDidContentChange.event;\n\n\tprivate watching: boolean = false;\n\tprivate syncDelayer: ThrottledDelayer<void>;\n\tprivate etag: string | undefined;\n\n\tconstructor(\n\t\tprivate readonly file: URI,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.syncDelayer = new ThrottledDelayer<void>(500);\n\t}\n\n\twatch(eTag: string | undefined): void {\n\t\tif (!this.watching) {\n\t\t\tthis.etag = eTag;\n\t\t\tthis.poll();\n\t\t\tthis.watching = true;\n\t\t}\n\t}\n\n\tprivate poll(): void {\n\t\tconst loop = () => this.doWatch().then(() => this.poll());\n\t\tthis.syncDelayer.trigger(loop);\n\t}\n\n\tprivate doWatch(): Promise<void> {\n\t\treturn this.fileService.resolveFile(this.file, { resolveMetadata: true })\n\t\t\t.then(stat => {\n\t\t\t\tif (stat.etag !== this.etag) {\n\t\t\t\t\tthis.etag = stat.etag;\n\t\t\t\t\tthis._onDidContentChange.fire(stat.size);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tunwatch(): void {\n\t\tif (this.watching) {\n\t\t\tthis.syncDelayer.cancel();\n\t\t\tthis.watching = false;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.unwatch();\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * An output channel driven by a file and does not support appending messages.\n */\nclass FileOutputChannelModel extends AbstractFileOutputChannelModel implements IOutputChannelModel {\n\n\tprivate readonly fileHandler: OutputFileListener;\n\n\tprivate updateInProgress: boolean = false;\n\tprivate etag: string | undefined = '';\n\tprivate loadModelPromise: Promise<ITextModel> | null = null;\n\n\tconstructor(\n\t\tmodelUri: URI,\n\t\tmimeType: string,\n\t\tfile: URI,\n\t\t@IFileService fileService: IFileService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tsuper(modelUri, mimeType, file, fileService, modelService, modeService);\n\n\t\tthis.fileHandler = this._register(new OutputFileListener(this.file, this.fileService));\n\t\tthis._register(this.fileHandler.onDidContentChange(size => this.update(size)));\n\t\tthis._register(toDisposable(() => this.fileHandler.unwatch()));\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\tthis.loadModelPromise = this.fileService.resolveContent(this.file, { position: this.startOffset, encoding: 'utf8' })\n\t\t\t.then(content => {\n\t\t\t\tthis.endOffset = this.startOffset + this.getByteLength(content.value);\n\t\t\t\tthis.etag = content.etag;\n\t\t\t\treturn this.createModel(content.value);\n\t\t\t});\n\t\treturn this.loadModelPromise;\n\t}\n\n\tclear(till?: number): void {\n\t\tconst loadModelPromise: Promise<any> = this.loadModelPromise ? this.loadModelPromise : Promise.resolve();\n\t\tloadModelPromise.then(() => {\n\t\t\tsuper.clear(till);\n\t\t\tthis.update();\n\t\t});\n\t}\n\n\tappend(message: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tprotected updateModel(): void {\n\t\tif (this.model) {\n\t\t\tthis.fileService.resolveContent(this.file, { position: this.endOffset, encoding: 'utf8' })\n\t\t\t\t.then(content => {\n\t\t\t\t\tthis.etag = content.etag;\n\t\t\t\t\tif (content.value) {\n\t\t\t\t\t\tthis.endOffset = this.endOffset + this.getByteLength(content.value);\n\t\t\t\t\t\tthis.appendToModel(content.value);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updateInProgress = false;\n\t\t\t\t}, () => this.updateInProgress = false);\n\t\t} else {\n\t\t\tthis.updateInProgress = false;\n\t\t}\n\t}\n\n\tprotected onModelCreated(model: ITextModel): void {\n\t\tthis.fileHandler.watch(this.etag);\n\t}\n\n\tprotected onModelWillDispose(model: ITextModel | null): void {\n\t\tthis.fileHandler.unwatch();\n\t}\n\n\tprotected onUpdateModelCancelled(): void {\n\t\tthis.updateInProgress = false;\n\t}\n\n\tprotected getByteLength(str: string): number {\n\t\tif (typeof Buffer !== 'undefined') {\n\t\t\treturn Buffer.from(str).byteLength;\n\t\t}\n\t\treturn toUint8ArrayBuffer(str).byteLength;\n\t}\n\n\tupdate(size?: number): void {\n\t\tif (this.model) {\n\t\t\tif (!this.updateInProgress) {\n\t\t\t\tthis.updateInProgress = true;\n\t\t\t\tif (isNumber(size) && this.endOffset > size) { // Reset - Content is removed\n\t\t\t\t\tthis.startOffset = this.endOffset = 0;\n\t\t\t\t\tthis.model.setValue('');\n\t\t\t\t}\n\t\t\t\tthis.modelUpdater.schedule();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class BufferredOutputChannel extends Disposable implements IOutputChannelModel {\n\n\treadonly file: URI | null = null;\n\tscrollLock: boolean = false;\n\n\tprotected _onDidAppendedContent = new Emitter<void>();\n\treadonly onDidAppendedContent: Event<void> = this._onDidAppendedContent.event;\n\n\tprivate readonly _onDispose = new Emitter<void>();\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate modelUpdater: RunOnceScheduler;\n\tprivate model: ITextModel | null;\n\tprivate readonly bufferredContent: BufferedContent;\n\tprivate lastReadId: number | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly modelUri: URI, private readonly mimeType: string,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@IModeService private readonly modeService: IModeService\n\t) {\n\t\tsuper();\n\n\t\tthis.modelUpdater = new RunOnceScheduler(() => this.updateModel(), 300);\n\t\tthis._register(toDisposable(() => this.modelUpdater.cancel()));\n\n\t\tthis.bufferredContent = new BufferedContent();\n\t\tthis._register(toDisposable(() => this.bufferredContent.clear()));\n\t}\n\n\tappend(output: string) {\n\t\tthis.bufferredContent.append(output);\n\t\tif (!this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.schedule();\n\t\t}\n\t}\n\n\tupdate(): void { }\n\n\tclear(): void {\n\t\tif (this.modelUpdater.isScheduled()) {\n\t\t\tthis.modelUpdater.cancel();\n\t\t}\n\t\tif (this.model) {\n\t\t\tthis.model.setValue('');\n\t\t}\n\t\tthis.bufferredContent.clear();\n\t\tthis.lastReadId = undefined;\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\tconst { value, id } = this.bufferredContent.getDelta(this.lastReadId);\n\t\tif (this.model) {\n\t\t\tthis.model.setValue(value);\n\t\t} else {\n\t\t\tthis.model = this.createModel(value);\n\t\t}\n\t\tthis.lastReadId = id;\n\t\treturn Promise.resolve(this.model);\n\t}\n\n\tprivate createModel(content: string): ITextModel {\n\t\tconst model = this.modelService.createModel(content, this.modeService.create(this.mimeType), this.modelUri);\n\t\tconst disposables: IDisposable[] = [];\n\t\tdisposables.push(model.onWillDispose(() => {\n\t\t\tthis.model = null;\n\t\t\tdispose(disposables);\n\t\t}));\n\t\treturn model;\n\t}\n\n\tprivate updateModel(): void {\n\t\tif (this.model) {\n\t\t\tconst { value, id } = this.bufferredContent.getDelta(this.lastReadId);\n\t\t\tthis.lastReadId = id;\n\t\t\tconst lastLine = this.model.getLineCount();\n\t\t\tconst lastLineMaxColumn = this.model.getLineMaxColumn(lastLine);\n\t\t\tthis.model.applyEdits([EditOperation.insert(new Position(lastLine, lastLineMaxColumn), value)]);\n\t\t\tthis._onDidAppendedContent.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nclass BufferedContent {\n\n\tprivate static MAX_OUTPUT_LENGTH = 10000 /* Max. number of output lines to show in output */ * 100 /* Guestimated chars per line */;\n\n\tprivate data: string[] = [];\n\tprivate dataIds: number[] = [];\n\tprivate idPool = 0;\n\tprivate length = 0;\n\n\tpublic append(content: string): void {\n\t\tthis.data.push(content);\n\t\tthis.dataIds.push(++this.idPool);\n\t\tthis.length += content.length;\n\t\tthis.trim();\n\t}\n\n\tpublic clear(): void {\n\t\tthis.data.length = 0;\n\t\tthis.dataIds.length = 0;\n\t\tthis.length = 0;\n\t}\n\n\tprivate trim(): void {\n\t\tif (this.length < BufferedContent.MAX_OUTPUT_LENGTH * 1.2) {\n\t\t\treturn;\n\t\t}\n\n\t\twhile (this.length > BufferedContent.MAX_OUTPUT_LENGTH) {\n\t\t\tthis.dataIds.shift();\n\t\t\tconst removed = this.data.shift();\n\t\t\tif (removed) {\n\t\t\t\tthis.length -= removed.length;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getDelta(previousId?: number): { value: string, id: number } {\n\t\tlet idx = -1;\n\t\tif (previousId !== undefined) {\n\t\t\tidx = binarySearch(this.dataIds, previousId, (a, b) => a - b);\n\t\t}\n\n\t\tconst id = this.idPool;\n\t\tif (idx >= 0) {\n\t\t\tconst value = strings.removeAnsiEscapeCodes(this.data.slice(idx + 1).join(''));\n\t\t\treturn { value, id };\n\t\t} else {\n\t\t\tconst value = strings.removeAnsiEscapeCodes(this.data.join(''));\n\t\t\treturn { value, id };\n\t\t}\n\t}\n}"]}]}