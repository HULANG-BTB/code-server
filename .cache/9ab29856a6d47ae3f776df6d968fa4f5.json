{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar callHierarchy_1 = require(\"vs/workbench/contrib/callHierarchy/common/callHierarchy\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar callHierarchyPeek_1 = require(\"vs/workbench/contrib/callHierarchy/browser/callHierarchyPeek\");\nvar event_1 = require(\"vs/base/common/event\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar peekViewWidget_1 = require(\"vs/editor/contrib/referenceSearch/peekViewWidget\");\nvar _ctxHasCompletionItemProvider = new contextkey_1.RawContextKey('editorHasCallHierarchyProvider', false);\nvar _ctxCallHierarchyVisible = new contextkey_1.RawContextKey('callHierarchyVisible', false);\nvar CallHierarchyController = /** @class */ (function (_super) {\n    tslib_1.__extends(CallHierarchyController, _super);\n    function CallHierarchyController(_editor, _contextKeyService, _instantiationService) {\n        var _this = _super.call(this) || this;\n        _this._editor = _editor;\n        _this._contextKeyService = _contextKeyService;\n        _this._instantiationService = _instantiationService;\n        _this._sessionDispose = [];\n        _this._ctxIsVisible = _ctxCallHierarchyVisible.bindTo(_this._contextKeyService);\n        _this._ctxHasProvider = _ctxHasCompletionItemProvider.bindTo(_this._contextKeyService);\n        _this._register(event_1.Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelLanguage, callHierarchy_1.CallHierarchyProviderRegistry.onDidChange)(function () {\n            _this._ctxHasProvider.set(_editor.hasModel() && callHierarchy_1.CallHierarchyProviderRegistry.has(_editor.getModel()));\n        }));\n        _this._register({ dispose: function () { return lifecycle_1.dispose(_this._sessionDispose); } });\n        return _this;\n    }\n    CallHierarchyController.get = function (editor) {\n        return editor.getContribution(CallHierarchyController.Id);\n    };\n    CallHierarchyController.prototype.dispose = function () {\n        this._ctxHasProvider.reset();\n        this._ctxIsVisible.reset();\n        _super.prototype.dispose.call(this);\n    };\n    CallHierarchyController.prototype.getId = function () {\n        return CallHierarchyController.Id;\n    };\n    CallHierarchyController.prototype.startCallHierarchy = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var model, position, provider, widget, cancel;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                this._sessionDispose = lifecycle_1.dispose(this._sessionDispose);\n                if (!this._editor.hasModel()) {\n                    return [2 /*return*/];\n                }\n                model = this._editor.getModel();\n                position = this._editor.getPosition();\n                provider = callHierarchy_1.CallHierarchyProviderRegistry.ordered(model)[0];\n                if (!provider) {\n                    return [2 /*return*/];\n                }\n                event_1.Event.any(this._editor.onDidChangeModel, this._editor.onDidChangeModelLanguage)(this.endCallHierarchy, this, this._sessionDispose);\n                widget = this._instantiationService.createInstance(callHierarchyPeek_1.CallHierarchyTreePeekWidget, this._editor, position, provider, callHierarchy_1.CallHierarchyDirection.CallsTo);\n                widget.showLoading();\n                this._ctxIsVisible.set(true);\n                cancel = new cancellation_1.CancellationTokenSource();\n                this._sessionDispose.push(widget.onDidClose(function () { return _this.endCallHierarchy(); }));\n                this._sessionDispose.push({ dispose: function () { cancel.cancel(); } });\n                this._sessionDispose.push(widget);\n                Promise.resolve(provider.provideCallHierarchyItem(model, position, cancel.token)).then(function (item) {\n                    if (cancel.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (!item) {\n                        widget.showMessage(nls_1.localize('no.item', \"No results\"));\n                        return;\n                    }\n                    widget.showItem(item);\n                });\n                return [2 /*return*/];\n            });\n        });\n    };\n    CallHierarchyController.prototype.endCallHierarchy = function () {\n        this._sessionDispose = lifecycle_1.dispose(this._sessionDispose);\n        this._ctxIsVisible.set(false);\n        this._editor.focus();\n    };\n    CallHierarchyController.Id = 'callHierarchy';\n    CallHierarchyController = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService)\n    ], CallHierarchyController);\n    return CallHierarchyController;\n}(lifecycle_1.Disposable));\neditorExtensions_1.registerEditorContribution(CallHierarchyController);\neditorExtensions_1.registerEditorAction(/** @class */ (function (_super) {\n    tslib_1.__extends(class_1, _super);\n    function class_1() {\n        return _super.call(this, {\n            id: 'editor.showCallHierarchy',\n            label: nls_1.localize('title', \"Peek Call Hierarchy\"),\n            alias: 'Peek Call Hierarchy',\n            menuOpts: {\n                group: 'navigation',\n                order: 1.48\n            },\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus,\n                weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n                primary: keyCodes_1.KeyMod.Shift + keyCodes_1.KeyMod.Alt + keyCodes_1.KeyCode.KEY_H\n            },\n            precondition: contextkey_1.ContextKeyExpr.and(_ctxHasCompletionItemProvider, peekViewWidget_1.PeekContext.notInPeekEditor)\n        }) || this;\n    }\n    class_1.prototype.run = function (_accessor, editor, args) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, CallHierarchyController.get(editor).startCallHierarchy()];\n            });\n        });\n    };\n    return class_1;\n}(editorExtensions_1.EditorAction)));\neditorExtensions_1.registerEditorCommand(new /** @class */ (function (_super) {\n    tslib_1.__extends(class_2, _super);\n    function class_2() {\n        return _super.call(this, {\n            id: 'editor.closeCallHierarchy',\n            kbOpts: {\n                weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 10,\n                primary: keyCodes_1.KeyCode.Escape\n            },\n            precondition: contextkey_1.ContextKeyExpr.and(_ctxCallHierarchyVisible, contextkey_1.ContextKeyExpr.not('config.editor.stablePeek'))\n        }) || this;\n    }\n    class_2.prototype.runEditorCommand = function (_accessor, editor) {\n        return CallHierarchyController.get(editor).endCallHierarchy();\n    };\n    return class_2;\n}(editorExtensions_1.EditorCommand)));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CallHierarchyProviderRegistry, CallHierarchyDirection } from 'vs/workbench/contrib/callHierarchy/common/callHierarchy';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { CallHierarchyTreePeekWidget } from 'vs/workbench/contrib/callHierarchy/browser/callHierarchyPeek';\nimport { Event } from 'vs/base/common/event';\nimport { registerEditorContribution, registerEditorAction, EditorAction, registerEditorCommand, EditorCommand } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IContextKeyService, RawContextKey, IContextKey, ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Disposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { PeekContext } from 'vs/editor/contrib/referenceSearch/peekViewWidget';\n\nconst _ctxHasCompletionItemProvider = new RawContextKey<boolean>('editorHasCallHierarchyProvider', false);\nconst _ctxCallHierarchyVisible = new RawContextKey<boolean>('callHierarchyVisible', false);\n\nclass CallHierarchyController extends Disposable implements IEditorContribution {\n\n\tstatic Id = 'callHierarchy';\n\n\tstatic get(editor: ICodeEditor): CallHierarchyController {\n\t\treturn editor.getContribution<CallHierarchyController>(CallHierarchyController.Id);\n\t}\n\n\tprivate readonly _ctxHasProvider: IContextKey<boolean>;\n\tprivate readonly _ctxIsVisible: IContextKey<boolean>;\n\n\tprivate _sessionDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._ctxIsVisible = _ctxCallHierarchyVisible.bindTo(this._contextKeyService);\n\t\tthis._ctxHasProvider = _ctxHasCompletionItemProvider.bindTo(this._contextKeyService);\n\t\tthis._register(Event.any<any>(_editor.onDidChangeModel, _editor.onDidChangeModelLanguage, CallHierarchyProviderRegistry.onDidChange)(() => {\n\t\t\tthis._ctxHasProvider.set(_editor.hasModel() && CallHierarchyProviderRegistry.has(_editor.getModel()));\n\t\t}));\n\n\t\tthis._register({ dispose: () => dispose(this._sessionDispose) });\n\t}\n\n\tdispose(): void {\n\t\tthis._ctxHasProvider.reset();\n\t\tthis._ctxIsVisible.reset();\n\t\tsuper.dispose();\n\t}\n\n\tgetId(): string {\n\t\treturn CallHierarchyController.Id;\n\t}\n\n\tasync startCallHierarchy(): Promise<void> {\n\t\tthis._sessionDispose = dispose(this._sessionDispose);\n\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst position = this._editor.getPosition();\n\t\tconst [provider] = CallHierarchyProviderRegistry.ordered(model);\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tEvent.any<any>(this._editor.onDidChangeModel, this._editor.onDidChangeModelLanguage)(this.endCallHierarchy, this, this._sessionDispose);\n\t\tconst widget = this._instantiationService.createInstance(\n\t\t\tCallHierarchyTreePeekWidget,\n\t\t\tthis._editor,\n\t\t\tposition,\n\t\t\tprovider,\n\t\t\tCallHierarchyDirection.CallsTo\n\t\t);\n\n\t\twidget.showLoading();\n\t\tthis._ctxIsVisible.set(true);\n\n\t\tconst cancel = new CancellationTokenSource();\n\n\t\tthis._sessionDispose.push(widget.onDidClose(() => this.endCallHierarchy()));\n\t\tthis._sessionDispose.push({ dispose() { cancel.cancel(); } });\n\t\tthis._sessionDispose.push(widget);\n\n\t\tPromise.resolve(provider.provideCallHierarchyItem(model, position, cancel.token)).then(item => {\n\t\t\tif (cancel.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!item) {\n\t\t\t\twidget.showMessage(localize('no.item', \"No results\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twidget.showItem(item);\n\t\t});\n\t}\n\n\tendCallHierarchy(): void {\n\t\tthis._sessionDispose = dispose(this._sessionDispose);\n\t\tthis._ctxIsVisible.set(false);\n\t\tthis._editor.focus();\n\t}\n}\n\nregisterEditorContribution(CallHierarchyController);\n\nregisterEditorAction(class extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.showCallHierarchy',\n\t\t\tlabel: localize('title', \"Peek Call Hierarchy\"),\n\t\t\talias: 'Peek Call Hierarchy',\n\t\t\tmenuOpts: {\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: 1.48\n\t\t\t},\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.editorTextFocus,\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.Shift + KeyMod.Alt + KeyCode.KEY_H\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t_ctxHasCompletionItemProvider,\n\t\t\t\tPeekContext.notInPeekEditor\n\t\t\t)\n\t\t});\n\t}\n\n\tasync run(_accessor: ServicesAccessor, editor: ICodeEditor, args: any): Promise<void> {\n\t\treturn CallHierarchyController.get(editor).startCallHierarchy();\n\t}\n});\n\n\nregisterEditorCommand(new class extends EditorCommand {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.closeCallHierarchy',\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 10,\n\t\t\t\tprimary: KeyCode.Escape\n\t\t\t},\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t_ctxCallHierarchyVisible,\n\t\t\t\tContextKeyExpr.not('config.editor.stablePeek')\n\t\t\t)\n\t\t});\n\t}\n\n\trunEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\treturn CallHierarchyController.get(editor).endCallHierarchy();\n\t}\n});\n"]}]}