{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/plistParser.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/plistParser.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChCode;\n(function (ChCode) {\n    ChCode[ChCode[\"BOM\"] = 65279] = \"BOM\";\n    ChCode[ChCode[\"SPACE\"] = 32] = \"SPACE\";\n    ChCode[ChCode[\"TAB\"] = 9] = \"TAB\";\n    ChCode[ChCode[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    ChCode[ChCode[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    ChCode[ChCode[\"SLASH\"] = 47] = \"SLASH\";\n    ChCode[ChCode[\"LESS_THAN\"] = 60] = \"LESS_THAN\";\n    ChCode[ChCode[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    ChCode[ChCode[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n})(ChCode || (ChCode = {}));\nvar State;\n(function (State) {\n    State[State[\"ROOT_STATE\"] = 0] = \"ROOT_STATE\";\n    State[State[\"DICT_STATE\"] = 1] = \"DICT_STATE\";\n    State[State[\"ARR_STATE\"] = 2] = \"ARR_STATE\";\n})(State || (State = {}));\nfunction parseWithLocation(content, filename, locationKeyName) {\n    return _parse(content, filename, locationKeyName);\n}\nexports.parseWithLocation = parseWithLocation;\n/**\n * A very fast plist parser\n */\nfunction parse(content) {\n    return _parse(content, null, null);\n}\nexports.parse = parse;\nfunction _parse(content, filename, locationKeyName) {\n    var len = content.length;\n    var pos = 0;\n    var line = 1;\n    var char = 0;\n    // Skip UTF8 BOM\n    if (len > 0 && content.charCodeAt(0) === ChCode.BOM) {\n        pos = 1;\n    }\n    function advancePosBy(by) {\n        if (locationKeyName === null) {\n            pos = pos + by;\n        }\n        else {\n            while (by > 0) {\n                var chCode = content.charCodeAt(pos);\n                if (chCode === ChCode.LINE_FEED) {\n                    pos++;\n                    line++;\n                    char = 0;\n                }\n                else {\n                    pos++;\n                    char++;\n                }\n                by--;\n            }\n        }\n    }\n    function advancePosTo(to) {\n        if (locationKeyName === null) {\n            pos = to;\n        }\n        else {\n            advancePosBy(to - pos);\n        }\n    }\n    function skipWhitespace() {\n        while (pos < len) {\n            var chCode = content.charCodeAt(pos);\n            if (chCode !== ChCode.SPACE && chCode !== ChCode.TAB && chCode !== ChCode.CARRIAGE_RETURN && chCode !== ChCode.LINE_FEED) {\n                break;\n            }\n            advancePosBy(1);\n        }\n    }\n    function advanceIfStartsWith(str) {\n        if (content.substr(pos, str.length) === str) {\n            advancePosBy(str.length);\n            return true;\n        }\n        return false;\n    }\n    function advanceUntil(str) {\n        var nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            advancePosTo(nextOccurence + str.length);\n        }\n        else {\n            // EOF\n            advancePosTo(len);\n        }\n    }\n    function captureUntil(str) {\n        var nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            var r = content.substring(pos, nextOccurence);\n            advancePosTo(nextOccurence + str.length);\n            return r;\n        }\n        else {\n            // EOF\n            var r = content.substr(pos);\n            advancePosTo(len);\n            return r;\n        }\n    }\n    var state = State.ROOT_STATE;\n    var cur = null;\n    var stateStack = [];\n    var objStack = [];\n    var curKey = null;\n    function pushState(newState, newCur) {\n        stateStack.push(state);\n        objStack.push(cur);\n        state = newState;\n        cur = newCur;\n    }\n    function popState() {\n        if (stateStack.length === 0) {\n            return fail('illegal state stack');\n        }\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n    }\n    var dictState = {\n        enterDict: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            var newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur[curKey] = newDict;\n            curKey = null;\n            pushState(State.DICT_STATE, newDict);\n        },\n        enterArray: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            var newArr = [];\n            cur[curKey] = newArr;\n            curKey = null;\n            pushState(State.ARR_STATE, newArr);\n        }\n    };\n    var arrState = {\n        enterDict: function () {\n            var newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur.push(newDict);\n            pushState(State.DICT_STATE, newDict);\n        },\n        enterArray: function () {\n            var newArr = [];\n            cur.push(newArr);\n            pushState(State.ARR_STATE, newArr);\n        }\n    };\n    function enterDict() {\n        if (state === State.DICT_STATE) {\n            dictState.enterDict();\n        }\n        else if (state === State.ARR_STATE) {\n            arrState.enterDict();\n        }\n        else { // ROOT_STATE\n            cur = {};\n            if (locationKeyName !== null) {\n                cur[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            pushState(State.DICT_STATE, cur);\n        }\n    }\n    function leaveDict() {\n        if (state === State.DICT_STATE) {\n            popState();\n        }\n        else if (state === State.ARR_STATE) {\n            return fail('unexpected </dict>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </dict>');\n        }\n    }\n    function enterArray() {\n        if (state === State.DICT_STATE) {\n            dictState.enterArray();\n        }\n        else if (state === State.ARR_STATE) {\n            arrState.enterArray();\n        }\n        else { // ROOT_STATE\n            cur = [];\n            pushState(State.ARR_STATE, cur);\n        }\n    }\n    function leaveArray() {\n        if (state === State.DICT_STATE) {\n            return fail('unexpected </array>');\n        }\n        else if (state === State.ARR_STATE) {\n            popState();\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </array>');\n        }\n    }\n    function acceptKey(val) {\n        if (state === State.DICT_STATE) {\n            if (curKey !== null) {\n                return fail('too many <key>');\n            }\n            curKey = val;\n        }\n        else if (state === State.ARR_STATE) {\n            return fail('unexpected <key>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected <key>');\n        }\n    }\n    function acceptString(val) {\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptReal(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse float');\n        }\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptInteger(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse integer');\n        }\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptDate(val) {\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptData(val) {\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptBool(val) {\n        if (state === State.DICT_STATE) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === State.ARR_STATE) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function escapeVal(str) {\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\n            switch (_) {\n                case '&amp;': return '&';\n                case '&lt;': return '<';\n                case '&gt;': return '>';\n                case '&quot;': return '\"';\n                case '&apos;': return '\\'';\n            }\n            return _;\n        });\n    }\n    function parseOpenTag() {\n        var r = captureUntil('>');\n        var isClosed = false;\n        if (r.charCodeAt(r.length - 1) === ChCode.SLASH) {\n            isClosed = true;\n            r = r.substring(0, r.length - 1);\n        }\n        return {\n            name: r.trim(),\n            isClosed: isClosed\n        };\n    }\n    function parseTagValue(tag) {\n        if (tag.isClosed) {\n            return '';\n        }\n        var val = captureUntil('</');\n        advanceUntil('>');\n        return escapeVal(val);\n    }\n    while (pos < len) {\n        skipWhitespace();\n        if (pos >= len) {\n            break;\n        }\n        var chCode = content.charCodeAt(pos);\n        advancePosBy(1);\n        if (chCode !== ChCode.LESS_THAN) {\n            return fail('expected <');\n        }\n        if (pos >= len) {\n            return fail('unexpected end of input');\n        }\n        var peekChCode = content.charCodeAt(pos);\n        if (peekChCode === ChCode.QUESTION_MARK) {\n            advancePosBy(1);\n            advanceUntil('?>');\n            continue;\n        }\n        if (peekChCode === ChCode.EXCLAMATION_MARK) {\n            advancePosBy(1);\n            if (advanceIfStartsWith('--')) {\n                advanceUntil('-->');\n                continue;\n            }\n            advanceUntil('>');\n            continue;\n        }\n        if (peekChCode === ChCode.SLASH) {\n            advancePosBy(1);\n            skipWhitespace();\n            if (advanceIfStartsWith('plist')) {\n                advanceUntil('>');\n                continue;\n            }\n            if (advanceIfStartsWith('dict')) {\n                advanceUntil('>');\n                leaveDict();\n                continue;\n            }\n            if (advanceIfStartsWith('array')) {\n                advanceUntil('>');\n                leaveArray();\n                continue;\n            }\n            return fail('unexpected closed tag');\n        }\n        var tag = parseOpenTag();\n        switch (tag.name) {\n            case 'dict':\n                enterDict();\n                if (tag.isClosed) {\n                    leaveDict();\n                }\n                continue;\n            case 'array':\n                enterArray();\n                if (tag.isClosed) {\n                    leaveArray();\n                }\n                continue;\n            case 'key':\n                acceptKey(parseTagValue(tag));\n                continue;\n            case 'string':\n                acceptString(parseTagValue(tag));\n                continue;\n            case 'real':\n                acceptReal(parseFloat(parseTagValue(tag)));\n                continue;\n            case 'integer':\n                acceptInteger(parseInt(parseTagValue(tag), 10));\n                continue;\n            case 'date':\n                acceptDate(new Date(parseTagValue(tag)));\n                continue;\n            case 'data':\n                acceptData(parseTagValue(tag));\n                continue;\n            case 'true':\n                parseTagValue(tag);\n                acceptBool(true);\n                continue;\n            case 'false':\n                parseTagValue(tag);\n                acceptBool(false);\n                continue;\n        }\n        if (/^plist/.test(tag.name)) {\n            continue;\n        }\n        return fail('unexpected opened tag ' + tag.name);\n    }\n    return cur;\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/plistParser.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/plistParser.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst enum ChCode {\n\tBOM = 65279,\n\n\tSPACE = 32,\n\tTAB = 9,\n\tCARRIAGE_RETURN = 13,\n\tLINE_FEED = 10,\n\n\tSLASH = 47,\n\n\tLESS_THAN = 60,\n\tQUESTION_MARK = 63,\n\tEXCLAMATION_MARK = 33,\n}\n\nconst enum State {\n\tROOT_STATE = 0,\n\tDICT_STATE = 1,\n\tARR_STATE = 2\n}\n\nexport function parseWithLocation(content: string, filename: string, locationKeyName: string): any {\n\treturn _parse(content, filename, locationKeyName);\n}\n\n/**\n * A very fast plist parser\n */\nexport function parse(content: string): any {\n\treturn _parse(content, null, null);\n}\n\nfunction _parse(content: string, filename: string | null, locationKeyName: string | null): any {\n\tconst len = content.length;\n\n\tlet pos = 0;\n\tlet line = 1;\n\tlet char = 0;\n\n\t// Skip UTF8 BOM\n\tif (len > 0 && content.charCodeAt(0) === ChCode.BOM) {\n\t\tpos = 1;\n\t}\n\n\tfunction advancePosBy(by: number): void {\n\t\tif (locationKeyName === null) {\n\t\t\tpos = pos + by;\n\t\t} else {\n\t\t\twhile (by > 0) {\n\t\t\t\tlet chCode = content.charCodeAt(pos);\n\t\t\t\tif (chCode === ChCode.LINE_FEED) {\n\t\t\t\t\tpos++; line++; char = 0;\n\t\t\t\t} else {\n\t\t\t\t\tpos++; char++;\n\t\t\t\t}\n\t\t\t\tby--;\n\t\t\t}\n\t\t}\n\t}\n\tfunction advancePosTo(to: number): void {\n\t\tif (locationKeyName === null) {\n\t\t\tpos = to;\n\t\t} else {\n\t\t\tadvancePosBy(to - pos);\n\t\t}\n\t}\n\n\tfunction skipWhitespace(): void {\n\t\twhile (pos < len) {\n\t\t\tlet chCode = content.charCodeAt(pos);\n\t\t\tif (chCode !== ChCode.SPACE && chCode !== ChCode.TAB && chCode !== ChCode.CARRIAGE_RETURN && chCode !== ChCode.LINE_FEED) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tadvancePosBy(1);\n\t\t}\n\t}\n\n\tfunction advanceIfStartsWith(str: string): boolean {\n\t\tif (content.substr(pos, str.length) === str) {\n\t\t\tadvancePosBy(str.length);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction advanceUntil(str: string): void {\n\t\tlet nextOccurence = content.indexOf(str, pos);\n\t\tif (nextOccurence !== -1) {\n\t\t\tadvancePosTo(nextOccurence + str.length);\n\t\t} else {\n\t\t\t// EOF\n\t\t\tadvancePosTo(len);\n\t\t}\n\t}\n\n\tfunction captureUntil(str: string): string {\n\t\tlet nextOccurence = content.indexOf(str, pos);\n\t\tif (nextOccurence !== -1) {\n\t\t\tlet r = content.substring(pos, nextOccurence);\n\t\t\tadvancePosTo(nextOccurence + str.length);\n\t\t\treturn r;\n\t\t} else {\n\t\t\t// EOF\n\t\t\tlet r = content.substr(pos);\n\t\t\tadvancePosTo(len);\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tlet state = State.ROOT_STATE;\n\n\tlet cur: any = null;\n\tlet stateStack: State[] = [];\n\tlet objStack: any[] = [];\n\tlet curKey: string | null = null;\n\n\tfunction pushState(newState: State, newCur: any): void {\n\t\tstateStack.push(state);\n\t\tobjStack.push(cur);\n\t\tstate = newState;\n\t\tcur = newCur;\n\t}\n\n\tfunction popState(): void {\n\t\tif (stateStack.length === 0) {\n\t\t\treturn fail('illegal state stack');\n\t\t}\n\t\tstate = stateStack.pop()!;\n\t\tcur = objStack.pop();\n\t}\n\n\tfunction fail(msg: string): void {\n\t\tthrow new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n\t}\n\n\tconst dictState = {\n\t\tenterDict: function () {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tlet newDict = {};\n\t\t\tif (locationKeyName !== null) {\n\t\t\t\tnewDict[locationKeyName] = {\n\t\t\t\t\tfilename: filename,\n\t\t\t\t\tline: line,\n\t\t\t\t\tchar: char\n\t\t\t\t};\n\t\t\t}\n\t\t\tcur[curKey] = newDict;\n\t\t\tcurKey = null;\n\t\t\tpushState(State.DICT_STATE, newDict);\n\t\t},\n\t\tenterArray: function () {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tlet newArr: any[] = [];\n\t\t\tcur[curKey] = newArr;\n\t\t\tcurKey = null;\n\t\t\tpushState(State.ARR_STATE, newArr);\n\t\t}\n\t};\n\n\tconst arrState = {\n\t\tenterDict: function () {\n\t\t\tlet newDict = {};\n\t\t\tif (locationKeyName !== null) {\n\t\t\t\tnewDict[locationKeyName] = {\n\t\t\t\t\tfilename: filename,\n\t\t\t\t\tline: line,\n\t\t\t\t\tchar: char\n\t\t\t\t};\n\t\t\t}\n\t\t\tcur.push(newDict);\n\t\t\tpushState(State.DICT_STATE, newDict);\n\t\t},\n\t\tenterArray: function () {\n\t\t\tlet newArr: any[] = [];\n\t\t\tcur.push(newArr);\n\t\t\tpushState(State.ARR_STATE, newArr);\n\t\t}\n\t};\n\n\n\tfunction enterDict() {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tdictState.enterDict();\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tarrState.enterDict();\n\t\t} else { // ROOT_STATE\n\t\t\tcur = {};\n\t\t\tif (locationKeyName !== null) {\n\t\t\t\tcur[locationKeyName] = {\n\t\t\t\t\tfilename: filename,\n\t\t\t\t\tline: line,\n\t\t\t\t\tchar: char\n\t\t\t\t};\n\t\t\t}\n\t\t\tpushState(State.DICT_STATE, cur);\n\t\t}\n\t}\n\tfunction leaveDict() {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tpopState();\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\treturn fail('unexpected </dict>');\n\t\t} else { // ROOT_STATE\n\t\t\treturn fail('unexpected </dict>');\n\t\t}\n\t}\n\tfunction enterArray() {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tdictState.enterArray();\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tarrState.enterArray();\n\t\t} else { // ROOT_STATE\n\t\t\tcur = [];\n\t\t\tpushState(State.ARR_STATE, cur);\n\t\t}\n\t}\n\tfunction leaveArray() {\n\t\tif (state === State.DICT_STATE) {\n\t\t\treturn fail('unexpected </array>');\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tpopState();\n\t\t} else { // ROOT_STATE\n\t\t\treturn fail('unexpected </array>');\n\t\t}\n\t}\n\tfunction acceptKey(val: string) {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey !== null) {\n\t\t\t\treturn fail('too many <key>');\n\t\t\t}\n\t\t\tcurKey = val;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\treturn fail('unexpected <key>');\n\t\t} else { // ROOT_STATE\n\t\t\treturn fail('unexpected <key>');\n\t\t}\n\t}\n\tfunction acceptString(val: string) {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\tfunction acceptReal(val: number) {\n\t\tif (isNaN(val)) {\n\t\t\treturn fail('cannot parse float');\n\t\t}\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\tfunction acceptInteger(val: number) {\n\t\tif (isNaN(val)) {\n\t\t\treturn fail('cannot parse integer');\n\t\t}\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\tfunction acceptDate(val: Date) {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\tfunction acceptData(val: string) {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\tfunction acceptBool(val: boolean) {\n\t\tif (state === State.DICT_STATE) {\n\t\t\tif (curKey === null) {\n\t\t\t\treturn fail('missing <key>');\n\t\t\t}\n\t\t\tcur[curKey] = val;\n\t\t\tcurKey = null;\n\t\t} else if (state === State.ARR_STATE) {\n\t\t\tcur.push(val);\n\t\t} else { // ROOT_STATE\n\t\t\tcur = val;\n\t\t}\n\t}\n\n\tfunction escapeVal(str: string): string {\n\t\treturn str.replace(/&#([0-9]+);/g, function (_: string, m0: string) {\n\t\t\treturn (<any>String).fromCodePoint(parseInt(m0, 10));\n\t\t}).replace(/&#x([0-9a-f]+);/g, function (_: string, m0: string) {\n\t\t\treturn (<any>String).fromCodePoint(parseInt(m0, 16));\n\t\t}).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_: string) {\n\t\t\tswitch (_) {\n\t\t\t\tcase '&amp;': return '&';\n\t\t\t\tcase '&lt;': return '<';\n\t\t\t\tcase '&gt;': return '>';\n\t\t\t\tcase '&quot;': return '\"';\n\t\t\t\tcase '&apos;': return '\\'';\n\t\t\t}\n\t\t\treturn _;\n\t\t});\n\t}\n\n\tinterface IParsedTag {\n\t\tname: string;\n\t\tisClosed: boolean;\n\t}\n\n\tfunction parseOpenTag(): IParsedTag {\n\t\tlet r = captureUntil('>');\n\t\tlet isClosed = false;\n\t\tif (r.charCodeAt(r.length - 1) === ChCode.SLASH) {\n\t\t\tisClosed = true;\n\t\t\tr = r.substring(0, r.length - 1);\n\t\t}\n\n\t\treturn {\n\t\t\tname: r.trim(),\n\t\t\tisClosed: isClosed\n\t\t};\n\t}\n\n\tfunction parseTagValue(tag: IParsedTag): string {\n\t\tif (tag.isClosed) {\n\t\t\treturn '';\n\t\t}\n\t\tlet val = captureUntil('</');\n\t\tadvanceUntil('>');\n\t\treturn escapeVal(val);\n\t}\n\n\twhile (pos < len) {\n\t\tskipWhitespace();\n\t\tif (pos >= len) {\n\t\t\tbreak;\n\t\t}\n\n\t\tconst chCode = content.charCodeAt(pos);\n\t\tadvancePosBy(1);\n\t\tif (chCode !== ChCode.LESS_THAN) {\n\t\t\treturn fail('expected <');\n\t\t}\n\n\t\tif (pos >= len) {\n\t\t\treturn fail('unexpected end of input');\n\t\t}\n\n\t\tconst peekChCode = content.charCodeAt(pos);\n\n\t\tif (peekChCode === ChCode.QUESTION_MARK) {\n\t\t\tadvancePosBy(1);\n\t\t\tadvanceUntil('?>');\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (peekChCode === ChCode.EXCLAMATION_MARK) {\n\t\t\tadvancePosBy(1);\n\n\t\t\tif (advanceIfStartsWith('--')) {\n\t\t\t\tadvanceUntil('-->');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tadvanceUntil('>');\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (peekChCode === ChCode.SLASH) {\n\t\t\tadvancePosBy(1);\n\t\t\tskipWhitespace();\n\n\t\t\tif (advanceIfStartsWith('plist')) {\n\t\t\t\tadvanceUntil('>');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (advanceIfStartsWith('dict')) {\n\t\t\t\tadvanceUntil('>');\n\t\t\t\tleaveDict();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (advanceIfStartsWith('array')) {\n\t\t\t\tadvanceUntil('>');\n\t\t\t\tleaveArray();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn fail('unexpected closed tag');\n\t\t}\n\n\t\tlet tag = parseOpenTag();\n\n\t\tswitch (tag.name) {\n\t\t\tcase 'dict':\n\t\t\t\tenterDict();\n\t\t\t\tif (tag.isClosed) {\n\t\t\t\t\tleaveDict();\n\t\t\t\t}\n\t\t\t\tcontinue;\n\n\t\t\tcase 'array':\n\t\t\t\tenterArray();\n\t\t\t\tif (tag.isClosed) {\n\t\t\t\t\tleaveArray();\n\t\t\t\t}\n\t\t\t\tcontinue;\n\n\t\t\tcase 'key':\n\t\t\t\tacceptKey(parseTagValue(tag));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'string':\n\t\t\t\tacceptString(parseTagValue(tag));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'real':\n\t\t\t\tacceptReal(parseFloat(parseTagValue(tag)));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'integer':\n\t\t\t\tacceptInteger(parseInt(parseTagValue(tag), 10));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'date':\n\t\t\t\tacceptDate(new Date(parseTagValue(tag)));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'data':\n\t\t\t\tacceptData(parseTagValue(tag));\n\t\t\t\tcontinue;\n\n\t\t\tcase 'true':\n\t\t\t\tparseTagValue(tag);\n\t\t\t\tacceptBool(true);\n\t\t\t\tcontinue;\n\n\t\t\tcase 'false':\n\t\t\t\tparseTagValue(tag);\n\t\t\t\tacceptBool(false);\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tif (/^plist/.test(tag.name)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn fail('unexpected opened tag ' + tag.name);\n\t}\n\n\treturn cur;\n}"]}]}