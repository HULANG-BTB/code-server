{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/config/configuration.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/config/configuration.ts","mtime":1555846338028},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser = require(\"vs/base/browser/browser\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar charWidthReader_1 = require(\"vs/editor/browser/config/charWidthReader\");\nvar elementSizeObserver_1 = require(\"vs/editor/browser/config/elementSizeObserver\");\nvar commonEditorConfig_1 = require(\"vs/editor/common/config/commonEditorConfig\");\nvar fontInfo_1 = require(\"vs/editor/common/config/fontInfo\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar CSSBasedConfigurationCache = /** @class */ (function () {\n    function CSSBasedConfigurationCache() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    CSSBasedConfigurationCache.prototype.has = function (item) {\n        var itemId = item.getId();\n        return !!this._values[itemId];\n    };\n    CSSBasedConfigurationCache.prototype.get = function (item) {\n        var itemId = item.getId();\n        return this._values[itemId];\n    };\n    CSSBasedConfigurationCache.prototype.put = function (item, value) {\n        var itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    };\n    CSSBasedConfigurationCache.prototype.remove = function (item) {\n        var itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    };\n    CSSBasedConfigurationCache.prototype.getValues = function () {\n        var _this = this;\n        return Object.keys(this._keys).map(function (id) { return _this._values[id]; });\n    };\n    return CSSBasedConfigurationCache;\n}());\nfunction clearAllFontInfos() {\n    CSSBasedConfiguration.INSTANCE.clearCache();\n}\nexports.clearAllFontInfos = clearAllFontInfos;\nfunction readFontInfo(bareFontInfo) {\n    return CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n}\nexports.readFontInfo = readFontInfo;\nfunction restoreFontInfo(storageService) {\n    var strStoredFontInfo = storageService.get('editorFontInfo', storage_1.StorageScope.GLOBAL);\n    if (typeof strStoredFontInfo !== 'string') {\n        return;\n    }\n    var storedFontInfo = null;\n    try {\n        storedFontInfo = JSON.parse(strStoredFontInfo);\n    }\n    catch (err) {\n        return;\n    }\n    if (!Array.isArray(storedFontInfo)) {\n        return;\n    }\n    CSSBasedConfiguration.INSTANCE.restoreFontInfo(storedFontInfo);\n}\nexports.restoreFontInfo = restoreFontInfo;\nfunction saveFontInfo(storageService) {\n    var knownFontInfo = CSSBasedConfiguration.INSTANCE.saveFontInfo();\n    if (knownFontInfo.length > 0) {\n        storageService.store('editorFontInfo', JSON.stringify(knownFontInfo), storage_1.StorageScope.GLOBAL);\n    }\n}\nexports.saveFontInfo = saveFontInfo;\nvar CSSBasedConfiguration = /** @class */ (function (_super) {\n    tslib_1.__extends(CSSBasedConfiguration, _super);\n    function CSSBasedConfiguration() {\n        var _this = _super.call(this) || this;\n        _this._onDidChange = _this._register(new event_1.Emitter());\n        _this.onDidChange = _this._onDidChange.event;\n        _this._cache = new CSSBasedConfigurationCache();\n        _this._evictUntrustedReadingsTimeout = -1;\n        return _this;\n    }\n    CSSBasedConfiguration.prototype.dispose = function () {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        _super.prototype.dispose.call(this);\n    };\n    CSSBasedConfiguration.prototype.clearCache = function () {\n        this._cache = new CSSBasedConfigurationCache();\n        this._onDidChange.fire();\n    };\n    CSSBasedConfiguration.prototype._writeToCache = function (item, value) {\n        var _this = this;\n        this._cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = setTimeout(function () {\n                _this._evictUntrustedReadingsTimeout = -1;\n                _this._evictUntrustedReadings();\n            }, 5000);\n        }\n    };\n    CSSBasedConfiguration.prototype._evictUntrustedReadings = function () {\n        var values = this._cache.getValues();\n        var somethingRemoved = false;\n        for (var i = 0, len = values.length; i < len; i++) {\n            var item = values[i];\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                this._cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    };\n    CSSBasedConfiguration.prototype.saveFontInfo = function () {\n        // Only save trusted font info (that has been measured in this running instance)\n        return this._cache.getValues().filter(function (item) { return item.isTrusted; });\n    };\n    CSSBasedConfiguration.prototype.restoreFontInfo = function (savedFontInfo) {\n        // Take all the saved font info and insert them in the cache without the trusted flag.\n        // The reason for this is that a font might have been installed on the OS in the meantime.\n        for (var i = 0, len = savedFontInfo.length; i < len; i++) {\n            var fontInfo = new fontInfo_1.FontInfo(savedFontInfo[i], false);\n            this._writeToCache(fontInfo, fontInfo);\n        }\n    };\n    CSSBasedConfiguration.prototype.readConfiguration = function (bareFontInfo) {\n        if (!this._cache.has(bareFontInfo)) {\n            var readConfig = CSSBasedConfiguration._actualReadConfiguration(bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new fontInfo_1.FontInfo({\n                    zoomLevel: browser.getZoomLevel(),\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(bareFontInfo, readConfig);\n        }\n        return this._cache.get(bareFontInfo);\n    };\n    CSSBasedConfiguration.createRequest = function (chr, type, all, monospace) {\n        var result = new charWidthReader_1.CharWidthRequest(chr, type);\n        all.push(result);\n        if (monospace) {\n            monospace.push(result);\n        }\n        return result;\n    };\n    CSSBasedConfiguration._actualReadConfiguration = function (bareFontInfo) {\n        var all = [];\n        var monospace = [];\n        var typicalHalfwidthCharacter = this.createRequest('n', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var typicalFullwidthCharacter = this.createRequest('\\uff4d', charWidthReader_1.CharWidthRequestType.Regular, all, null);\n        var space = this.createRequest(' ', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit0 = this.createRequest('0', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit1 = this.createRequest('1', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit2 = this.createRequest('2', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit3 = this.createRequest('3', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit4 = this.createRequest('4', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit5 = this.createRequest('5', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit6 = this.createRequest('6', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit7 = this.createRequest('7', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit8 = this.createRequest('8', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var digit9 = this.createRequest('9', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        // monospace test: used for whitespace rendering\n        var rightwardsArrow = this.createRequest('→', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        var halfwidthRightwardsArrow = this.createRequest('￫', charWidthReader_1.CharWidthRequestType.Regular, all, null);\n        this.createRequest('·', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        // monospace test: some characters\n        this.createRequest('|', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('/', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('-', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('_', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('i', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('l', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        this.createRequest('m', charWidthReader_1.CharWidthRequestType.Regular, all, monospace);\n        // monospace italic test\n        this.createRequest('|', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        this.createRequest('_', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        this.createRequest('i', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        this.createRequest('l', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        this.createRequest('m', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        this.createRequest('n', charWidthReader_1.CharWidthRequestType.Italic, all, monospace);\n        // monospace bold test\n        this.createRequest('|', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        this.createRequest('_', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        this.createRequest('i', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        this.createRequest('l', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        this.createRequest('m', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        this.createRequest('n', charWidthReader_1.CharWidthRequestType.Bold, all, monospace);\n        charWidthReader_1.readCharWidths(bareFontInfo, all);\n        var maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        var isMonospace = true;\n        var referenceWidth = monospace[0].width;\n        for (var i = 1, len = monospace.length; i < len; i++) {\n            var diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        var canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        // let's trust the zoom level only 2s after it was changed.\n        var canTrustBrowserZoomLevel = (browser.getTimeSinceLastZoomLevelChanged() > 2000);\n        return new fontInfo_1.FontInfo({\n            zoomLevel: browser.getZoomLevel(),\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            maxDigitWidth: maxDigitWidth\n        }, canTrustBrowserZoomLevel);\n    };\n    CSSBasedConfiguration.INSTANCE = new CSSBasedConfiguration();\n    return CSSBasedConfiguration;\n}(lifecycle_1.Disposable));\nvar Configuration = /** @class */ (function (_super) {\n    tslib_1.__extends(Configuration, _super);\n    function Configuration(isSimpleWidget, options, referenceDomElement, accessibilityService) {\n        if (referenceDomElement === void 0) { referenceDomElement = null; }\n        var _this = _super.call(this, isSimpleWidget, options) || this;\n        _this.accessibilityService = accessibilityService;\n        _this._elementSizeObserver = _this._register(new elementSizeObserver_1.ElementSizeObserver(referenceDomElement, function () { return _this._onReferenceDomElementSizeChanged(); }));\n        _this._register(CSSBasedConfiguration.INSTANCE.onDidChange(function () { return _this._onCSSBasedConfigurationChanged(); }));\n        if (_this._validatedOptions.automaticLayout) {\n            _this._elementSizeObserver.startObserving();\n        }\n        _this._register(browser.onDidChangeZoomLevel(function (_) { return _this._recomputeOptions(); }));\n        _this._register(_this.accessibilityService.onDidChangeAccessibilitySupport(function () { return _this._recomputeOptions(); }));\n        _this._recomputeOptions();\n        return _this;\n    }\n    Configuration.applyFontInfoSlow = function (domNode, fontInfo) {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    };\n    Configuration.applyFontInfo = function (domNode, fontInfo) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily());\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    };\n    Configuration.prototype._onReferenceDomElementSizeChanged = function () {\n        this._recomputeOptions();\n    };\n    Configuration.prototype._onCSSBasedConfigurationChanged = function () {\n        this._recomputeOptions();\n    };\n    Configuration.prototype.observeReferenceElement = function (dimension) {\n        this._elementSizeObserver.observe(dimension);\n    };\n    Configuration.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    Configuration.prototype._getExtraEditorClassName = function () {\n        var extra = '';\n        if (!browser.isSafari && !browser.isWebkitWebView) {\n            // Use user-select: none in all browsers except Safari and native macOS WebView\n            extra += 'no-user-select ';\n        }\n        if (browser.isMacintosh) {\n            extra += 'mac ';\n        }\n        return extra;\n    };\n    Configuration.prototype._getEnvConfiguration = function () {\n        return {\n            extraEditorClassName: this._getExtraEditorClassName(),\n            outerWidth: this._elementSizeObserver.getWidth(),\n            outerHeight: this._elementSizeObserver.getHeight(),\n            emptySelectionClipboard: false,\n            pixelRatio: browser.getPixelRatio(),\n            zoomLevel: browser.getZoomLevel(),\n            accessibilitySupport: this.accessibilityService.getAccessibilitySupport()\n        };\n    };\n    Configuration.prototype.readConfiguration = function (bareFontInfo) {\n        return CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n    };\n    return Configuration;\n}(commonEditorConfig_1.CommonEditorConfiguration));\nexports.Configuration = Configuration;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/config/configuration.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/config/configuration.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { FastDomNode } from 'vs/base/browser/fastDomNode';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { CharWidthRequest, CharWidthRequestType, readCharWidths } from 'vs/editor/browser/config/charWidthReader';\nimport { ElementSizeObserver } from 'vs/editor/browser/config/elementSizeObserver';\nimport { CommonEditorConfiguration, IEnvConfiguration } from 'vs/editor/common/config/commonEditorConfig';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { BareFontInfo, FontInfo } from 'vs/editor/common/config/fontInfo';\nimport { IDimension } from 'vs/editor/common/editorCommon';\nimport { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\n\nclass CSSBasedConfigurationCache {\n\n\tprivate readonly _keys: { [key: string]: BareFontInfo; };\n\tprivate readonly _values: { [key: string]: FontInfo; };\n\n\tconstructor() {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t}\n\n\tpublic has(item: BareFontInfo): boolean {\n\t\tconst itemId = item.getId();\n\t\treturn !!this._values[itemId];\n\t}\n\n\tpublic get(item: BareFontInfo): FontInfo {\n\t\tconst itemId = item.getId();\n\t\treturn this._values[itemId];\n\t}\n\n\tpublic put(item: BareFontInfo, value: FontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tthis._keys[itemId] = item;\n\t\tthis._values[itemId] = value;\n\t}\n\n\tpublic remove(item: BareFontInfo): void {\n\t\tconst itemId = item.getId();\n\t\tdelete this._keys[itemId];\n\t\tdelete this._values[itemId];\n\t}\n\n\tpublic getValues(): FontInfo[] {\n\t\treturn Object.keys(this._keys).map(id => this._values[id]);\n\t}\n}\n\nexport function clearAllFontInfos(): void {\n\tCSSBasedConfiguration.INSTANCE.clearCache();\n}\n\nexport function readFontInfo(bareFontInfo: BareFontInfo): FontInfo {\n\treturn CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n}\n\nexport function restoreFontInfo(storageService: IStorageService): void {\n\tconst strStoredFontInfo = storageService.get('editorFontInfo', StorageScope.GLOBAL);\n\tif (typeof strStoredFontInfo !== 'string') {\n\t\treturn;\n\t}\n\tlet storedFontInfo: ISerializedFontInfo[] | null = null;\n\ttry {\n\t\tstoredFontInfo = JSON.parse(strStoredFontInfo);\n\t} catch (err) {\n\t\treturn;\n\t}\n\tif (!Array.isArray(storedFontInfo)) {\n\t\treturn;\n\t}\n\tCSSBasedConfiguration.INSTANCE.restoreFontInfo(storedFontInfo);\n}\n\nexport function saveFontInfo(storageService: IStorageService): void {\n\tconst knownFontInfo = CSSBasedConfiguration.INSTANCE.saveFontInfo();\n\tif (knownFontInfo.length > 0) {\n\t\tstorageService.store('editorFontInfo', JSON.stringify(knownFontInfo), StorageScope.GLOBAL);\n\t}\n}\n\nexport interface ISerializedFontInfo {\n\treadonly zoomLevel: number;\n\treadonly fontFamily: string;\n\treadonly fontWeight: string;\n\treadonly fontSize: number;\n\treadonly lineHeight: number;\n\treadonly letterSpacing: number;\n\treadonly isMonospace: boolean;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly typicalFullwidthCharacterWidth: number;\n\treadonly canUseHalfwidthRightwardsArrow: boolean;\n\treadonly spaceWidth: number;\n\treadonly maxDigitWidth: number;\n}\n\nclass CSSBasedConfiguration extends Disposable {\n\n\tpublic static readonly INSTANCE = new CSSBasedConfiguration();\n\n\tprivate _cache: CSSBasedConfigurationCache;\n\tprivate _evictUntrustedReadingsTimeout: any;\n\n\tprivate _onDidChange = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._cache = new CSSBasedConfigurationCache();\n\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._evictUntrustedReadingsTimeout !== -1) {\n\t\t\tclearTimeout(this._evictUntrustedReadingsTimeout);\n\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tpublic clearCache(): void {\n\t\tthis._cache = new CSSBasedConfigurationCache();\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _writeToCache(item: BareFontInfo, value: FontInfo): void {\n\t\tthis._cache.put(item, value);\n\n\t\tif (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n\t\t\t// Try reading again after some time\n\t\t\tthis._evictUntrustedReadingsTimeout = setTimeout(() => {\n\t\t\t\tthis._evictUntrustedReadingsTimeout = -1;\n\t\t\t\tthis._evictUntrustedReadings();\n\t\t\t}, 5000);\n\t\t}\n\t}\n\n\tprivate _evictUntrustedReadings(): void {\n\t\tconst values = this._cache.getValues();\n\t\tlet somethingRemoved = false;\n\t\tfor (let i = 0, len = values.length; i < len; i++) {\n\t\t\tconst item = values[i];\n\t\t\tif (!item.isTrusted) {\n\t\t\t\tsomethingRemoved = true;\n\t\t\t\tthis._cache.remove(item);\n\t\t\t}\n\t\t}\n\t\tif (somethingRemoved) {\n\t\t\tthis._onDidChange.fire();\n\t\t}\n\t}\n\n\tpublic saveFontInfo(): ISerializedFontInfo[] {\n\t\t// Only save trusted font info (that has been measured in this running instance)\n\t\treturn this._cache.getValues().filter(item => item.isTrusted);\n\t}\n\n\tpublic restoreFontInfo(savedFontInfo: ISerializedFontInfo[]): void {\n\t\t// Take all the saved font info and insert them in the cache without the trusted flag.\n\t\t// The reason for this is that a font might have been installed on the OS in the meantime.\n\t\tfor (let i = 0, len = savedFontInfo.length; i < len; i++) {\n\t\t\tconst fontInfo = new FontInfo(savedFontInfo[i], false);\n\t\t\tthis._writeToCache(fontInfo, fontInfo);\n\t\t}\n\t}\n\n\tpublic readConfiguration(bareFontInfo: BareFontInfo): FontInfo {\n\t\tif (!this._cache.has(bareFontInfo)) {\n\t\t\tlet readConfig = CSSBasedConfiguration._actualReadConfiguration(bareFontInfo);\n\n\t\t\tif (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n\t\t\t\t// Hey, it's Bug 14341 ... we couldn't read\n\t\t\t\treadConfig = new FontInfo({\n\t\t\t\t\tzoomLevel: browser.getZoomLevel(),\n\t\t\t\t\tfontFamily: readConfig.fontFamily,\n\t\t\t\t\tfontWeight: readConfig.fontWeight,\n\t\t\t\t\tfontSize: readConfig.fontSize,\n\t\t\t\t\tlineHeight: readConfig.lineHeight,\n\t\t\t\t\tletterSpacing: readConfig.letterSpacing,\n\t\t\t\t\tisMonospace: readConfig.isMonospace,\n\t\t\t\t\ttypicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n\t\t\t\t\ttypicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n\t\t\t\t\tcanUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n\t\t\t\t\tspaceWidth: Math.max(readConfig.spaceWidth, 5),\n\t\t\t\t\tmaxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t\tthis._writeToCache(bareFontInfo, readConfig);\n\t\t}\n\t\treturn this._cache.get(bareFontInfo);\n\t}\n\n\tprivate static createRequest(chr: string, type: CharWidthRequestType, all: CharWidthRequest[], monospace: CharWidthRequest[] | null): CharWidthRequest {\n\t\tconst result = new CharWidthRequest(chr, type);\n\t\tall.push(result);\n\t\tif (monospace) {\n\t\t\tmonospace.push(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _actualReadConfiguration(bareFontInfo: BareFontInfo): FontInfo {\n\t\tconst all: CharWidthRequest[] = [];\n\t\tconst monospace: CharWidthRequest[] = [];\n\n\t\tconst typicalHalfwidthCharacter = this.createRequest('n', CharWidthRequestType.Regular, all, monospace);\n\t\tconst typicalFullwidthCharacter = this.createRequest('\\uff4d', CharWidthRequestType.Regular, all, null);\n\t\tconst space = this.createRequest(' ', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit0 = this.createRequest('0', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit1 = this.createRequest('1', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit2 = this.createRequest('2', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit3 = this.createRequest('3', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit4 = this.createRequest('4', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit5 = this.createRequest('5', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit6 = this.createRequest('6', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit7 = this.createRequest('7', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit8 = this.createRequest('8', CharWidthRequestType.Regular, all, monospace);\n\t\tconst digit9 = this.createRequest('9', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// monospace test: used for whitespace rendering\n\t\tconst rightwardsArrow = this.createRequest('→', CharWidthRequestType.Regular, all, monospace);\n\t\tconst halfwidthRightwardsArrow = this.createRequest('￫', CharWidthRequestType.Regular, all, null);\n\n\t\tthis.createRequest('·', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// monospace test: some characters\n\t\tthis.createRequest('|', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('/', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('-', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('_', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('i', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('l', CharWidthRequestType.Regular, all, monospace);\n\t\tthis.createRequest('m', CharWidthRequestType.Regular, all, monospace);\n\n\t\t// monospace italic test\n\t\tthis.createRequest('|', CharWidthRequestType.Italic, all, monospace);\n\t\tthis.createRequest('_', CharWidthRequestType.Italic, all, monospace);\n\t\tthis.createRequest('i', CharWidthRequestType.Italic, all, monospace);\n\t\tthis.createRequest('l', CharWidthRequestType.Italic, all, monospace);\n\t\tthis.createRequest('m', CharWidthRequestType.Italic, all, monospace);\n\t\tthis.createRequest('n', CharWidthRequestType.Italic, all, monospace);\n\n\t\t// monospace bold test\n\t\tthis.createRequest('|', CharWidthRequestType.Bold, all, monospace);\n\t\tthis.createRequest('_', CharWidthRequestType.Bold, all, monospace);\n\t\tthis.createRequest('i', CharWidthRequestType.Bold, all, monospace);\n\t\tthis.createRequest('l', CharWidthRequestType.Bold, all, monospace);\n\t\tthis.createRequest('m', CharWidthRequestType.Bold, all, monospace);\n\t\tthis.createRequest('n', CharWidthRequestType.Bold, all, monospace);\n\n\t\treadCharWidths(bareFontInfo, all);\n\n\t\tconst maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n\n\t\tlet isMonospace = true;\n\t\tconst referenceWidth = monospace[0].width;\n\t\tfor (let i = 1, len = monospace.length; i < len; i++) {\n\t\t\tconst diff = referenceWidth - monospace[i].width;\n\t\t\tif (diff < -0.001 || diff > 0.001) {\n\t\t\t\tisMonospace = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet canUseHalfwidthRightwardsArrow = true;\n\t\tif (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n\t\t\t// using a halfwidth rightwards arrow would break monospace...\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\t\tif (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n\t\t\t// using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n\t\t\tcanUseHalfwidthRightwardsArrow = false;\n\t\t}\n\n\t\t// let's trust the zoom level only 2s after it was changed.\n\t\tconst canTrustBrowserZoomLevel = (browser.getTimeSinceLastZoomLevelChanged() > 2000);\n\t\treturn new FontInfo({\n\t\t\tzoomLevel: browser.getZoomLevel(),\n\t\t\tfontFamily: bareFontInfo.fontFamily,\n\t\t\tfontWeight: bareFontInfo.fontWeight,\n\t\t\tfontSize: bareFontInfo.fontSize,\n\t\t\tlineHeight: bareFontInfo.lineHeight,\n\t\t\tletterSpacing: bareFontInfo.letterSpacing,\n\t\t\tisMonospace: isMonospace,\n\t\t\ttypicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n\t\t\ttypicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n\t\t\tcanUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n\t\t\tspaceWidth: space.width,\n\t\t\tmaxDigitWidth: maxDigitWidth\n\t\t}, canTrustBrowserZoomLevel);\n\t}\n}\n\nexport class Configuration extends CommonEditorConfiguration {\n\n\tpublic static applyFontInfoSlow(domNode: HTMLElement, fontInfo: BareFontInfo): void {\n\t\tdomNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n\t\tdomNode.style.fontWeight = fontInfo.fontWeight;\n\t\tdomNode.style.fontSize = fontInfo.fontSize + 'px';\n\t\tdomNode.style.lineHeight = fontInfo.lineHeight + 'px';\n\t\tdomNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n\t}\n\n\tpublic static applyFontInfo(domNode: FastDomNode<HTMLElement>, fontInfo: BareFontInfo): void {\n\t\tdomNode.setFontFamily(fontInfo.getMassagedFontFamily());\n\t\tdomNode.setFontWeight(fontInfo.fontWeight);\n\t\tdomNode.setFontSize(fontInfo.fontSize);\n\t\tdomNode.setLineHeight(fontInfo.lineHeight);\n\t\tdomNode.setLetterSpacing(fontInfo.letterSpacing);\n\t}\n\n\tprivate readonly _elementSizeObserver: ElementSizeObserver;\n\n\tconstructor(\n\t\tisSimpleWidget: boolean,\n\t\toptions: IEditorOptions,\n\t\treferenceDomElement: HTMLElement | null = null,\n\t\tprivate readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper(isSimpleWidget, options);\n\n\t\tthis._elementSizeObserver = this._register(new ElementSizeObserver(referenceDomElement, () => this._onReferenceDomElementSizeChanged()));\n\n\t\tthis._register(CSSBasedConfiguration.INSTANCE.onDidChange(() => this._onCSSBasedConfigurationChanged()));\n\n\t\tif (this._validatedOptions.automaticLayout) {\n\t\t\tthis._elementSizeObserver.startObserving();\n\t\t}\n\n\t\tthis._register(browser.onDidChangeZoomLevel(_ => this._recomputeOptions()));\n\t\tthis._register(this.accessibilityService.onDidChangeAccessibilitySupport(() => this._recomputeOptions()));\n\n\t\tthis._recomputeOptions();\n\t}\n\n\tprivate _onReferenceDomElementSizeChanged(): void {\n\t\tthis._recomputeOptions();\n\t}\n\n\tprivate _onCSSBasedConfigurationChanged(): void {\n\t\tthis._recomputeOptions();\n\t}\n\n\tpublic observeReferenceElement(dimension?: IDimension): void {\n\t\tthis._elementSizeObserver.observe(dimension);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _getExtraEditorClassName(): string {\n\t\tlet extra = '';\n\t\tif (!browser.isSafari && !browser.isWebkitWebView) {\n\t\t\t// Use user-select: none in all browsers except Safari and native macOS WebView\n\t\t\textra += 'no-user-select ';\n\t\t}\n\t\tif (browser.isMacintosh) {\n\t\t\textra += 'mac ';\n\t\t}\n\t\treturn extra;\n\t}\n\n\tprotected _getEnvConfiguration(): IEnvConfiguration {\n\t\treturn {\n\t\t\textraEditorClassName: this._getExtraEditorClassName(),\n\t\t\touterWidth: this._elementSizeObserver.getWidth(),\n\t\t\touterHeight: this._elementSizeObserver.getHeight(),\n\t\t\temptySelectionClipboard: false, // browser.isWebKit || browser.isFirefox,\n\t\t\tpixelRatio: browser.getPixelRatio(),\n\t\t\tzoomLevel: browser.getZoomLevel(),\n\t\t\taccessibilitySupport: this.accessibilityService.getAccessibilitySupport()\n\t\t};\n\t}\n\n\tprotected readConfiguration(bareFontInfo: BareFontInfo): FontInfo {\n\t\treturn CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n\t}\n}\n"]}]}