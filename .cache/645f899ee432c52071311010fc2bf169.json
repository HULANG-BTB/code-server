{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/dynamicViewOverlay.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/dynamicViewOverlay.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar viewEventHandler_1 = require(\"vs/editor/common/viewModel/viewEventHandler\");\nvar DynamicViewOverlay = /** @class */ (function (_super) {\n    tslib_1.__extends(DynamicViewOverlay, _super);\n    function DynamicViewOverlay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DynamicViewOverlay;\n}(viewEventHandler_1.ViewEventHandler));\nexports.DynamicViewOverlay = DynamicViewOverlay;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/dynamicViewOverlay.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/dynamicViewOverlay.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,gFAA+E;AAE/E;IAAiD,8CAAgB;IAAjE;;IAMA,CAAC;IAAD,yBAAC;AAAD,CAAC,AAND,CAAiD,mCAAgB,GAMhE;AANqB,gDAAkB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\n\nexport abstract class DynamicViewOverlay extends ViewEventHandler {\n\n\tpublic abstract prepareRender(ctx: RenderingContext): void;\n\n\tpublic abstract render(startLineNumber: number, lineNumber: number): string;\n\n}\n"]}]}