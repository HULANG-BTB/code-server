{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/model/editStack.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/model/editStack.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"vs/base/common/errors\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar EditStackElement = /** @class */ (function () {\n    function EditStackElement(beforeVersionId, beforeCursorState) {\n        this.beforeVersionId = beforeVersionId;\n        this.beforeCursorState = beforeCursorState;\n        this.afterCursorState = null;\n        this.afterVersionId = -1;\n        this.editOperations = [];\n    }\n    EditStackElement.prototype.undo = function (model) {\n        // Apply all operations in reverse order\n        for (var i = this.editOperations.length - 1; i >= 0; i--) {\n            this.editOperations[i] = {\n                operations: model.applyEdits(this.editOperations[i].operations)\n            };\n        }\n    };\n    EditStackElement.prototype.redo = function (model) {\n        // Apply all operations\n        for (var i = 0; i < this.editOperations.length; i++) {\n            this.editOperations[i] = {\n                operations: model.applyEdits(this.editOperations[i].operations)\n            };\n        }\n    };\n    return EditStackElement;\n}());\nfunction getModelEOL(model) {\n    var eol = model.getEOL();\n    if (eol === '\\n') {\n        return model_1.EndOfLineSequence.LF;\n    }\n    else {\n        return model_1.EndOfLineSequence.CRLF;\n    }\n}\nvar EOLStackElement = /** @class */ (function () {\n    function EOLStackElement(beforeVersionId, setEOL) {\n        this.beforeVersionId = beforeVersionId;\n        this.beforeCursorState = null;\n        this.afterCursorState = null;\n        this.afterVersionId = -1;\n        this.eol = setEOL;\n    }\n    EOLStackElement.prototype.undo = function (model) {\n        var redoEOL = getModelEOL(model);\n        model.setEOL(this.eol);\n        this.eol = redoEOL;\n    };\n    EOLStackElement.prototype.redo = function (model) {\n        var undoEOL = getModelEOL(model);\n        model.setEOL(this.eol);\n        this.eol = undoEOL;\n    };\n    return EOLStackElement;\n}());\nvar EditStack = /** @class */ (function () {\n    function EditStack(model) {\n        this.model = model;\n        this.currentOpenStackElement = null;\n        this.past = [];\n        this.future = [];\n    }\n    EditStack.prototype.pushStackElement = function () {\n        if (this.currentOpenStackElement !== null) {\n            this.past.push(this.currentOpenStackElement);\n            this.currentOpenStackElement = null;\n        }\n    };\n    EditStack.prototype.clear = function () {\n        this.currentOpenStackElement = null;\n        this.past = [];\n        this.future = [];\n    };\n    EditStack.prototype.pushEOL = function (eol) {\n        // No support for parallel universes :(\n        this.future = [];\n        if (this.currentOpenStackElement) {\n            this.pushStackElement();\n        }\n        var prevEOL = getModelEOL(this.model);\n        var stackElement = new EOLStackElement(this.model.getAlternativeVersionId(), prevEOL);\n        this.model.setEOL(eol);\n        stackElement.afterVersionId = this.model.getVersionId();\n        this.currentOpenStackElement = stackElement;\n        this.pushStackElement();\n    };\n    EditStack.prototype.pushEditOperation = function (beforeCursorState, editOperations, cursorStateComputer) {\n        // No support for parallel universes :(\n        this.future = [];\n        var stackElement = null;\n        if (this.currentOpenStackElement) {\n            if (this.currentOpenStackElement instanceof EditStackElement) {\n                stackElement = this.currentOpenStackElement;\n            }\n            else {\n                this.pushStackElement();\n            }\n        }\n        if (!this.currentOpenStackElement) {\n            stackElement = new EditStackElement(this.model.getAlternativeVersionId(), beforeCursorState);\n            this.currentOpenStackElement = stackElement;\n        }\n        var inverseEditOperation = {\n            operations: this.model.applyEdits(editOperations)\n        };\n        stackElement.editOperations.push(inverseEditOperation);\n        stackElement.afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperation.operations);\n        stackElement.afterVersionId = this.model.getVersionId();\n        return stackElement.afterCursorState;\n    };\n    EditStack._computeCursorState = function (cursorStateComputer, inverseEditOperations) {\n        try {\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n        }\n        catch (e) {\n            errors_1.onUnexpectedError(e);\n            return null;\n        }\n    };\n    EditStack.prototype.undo = function () {\n        this.pushStackElement();\n        if (this.past.length > 0) {\n            var pastStackElement = this.past.pop();\n            try {\n                pastStackElement.undo(this.model);\n            }\n            catch (e) {\n                errors_1.onUnexpectedError(e);\n                this.clear();\n                return null;\n            }\n            this.future.push(pastStackElement);\n            return {\n                selections: pastStackElement.beforeCursorState,\n                recordedVersionId: pastStackElement.beforeVersionId\n            };\n        }\n        return null;\n    };\n    EditStack.prototype.canUndo = function () {\n        return (this.past.length > 0) || this.currentOpenStackElement !== null;\n    };\n    EditStack.prototype.redo = function () {\n        if (this.future.length > 0) {\n            var futureStackElement = this.future.pop();\n            try {\n                futureStackElement.redo(this.model);\n            }\n            catch (e) {\n                errors_1.onUnexpectedError(e);\n                this.clear();\n                return null;\n            }\n            this.past.push(futureStackElement);\n            return {\n                selections: futureStackElement.afterCursorState,\n                recordedVersionId: futureStackElement.afterVersionId\n            };\n        }\n        return null;\n    };\n    EditStack.prototype.canRedo = function () {\n        return (this.future.length > 0);\n    };\n    return EditStack;\n}());\nexports.EditStack = EditStack;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/model/editStack.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/model/editStack.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { EndOfLineSequence, ICursorStateComputer, IIdentifiedSingleEditOperation } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\n\ninterface IEditOperation {\n\toperations: IIdentifiedSingleEditOperation[];\n}\n\ninterface IStackElement {\n\treadonly beforeVersionId: number;\n\treadonly beforeCursorState: Selection[] | null;\n\treadonly afterCursorState: Selection[] | null;\n\treadonly afterVersionId: number;\n\n\tundo(model: TextModel): void;\n\tredo(model: TextModel): void;\n}\n\nclass EditStackElement implements IStackElement {\n\tpublic readonly beforeVersionId: number;\n\tpublic readonly beforeCursorState: Selection[];\n\tpublic afterCursorState: Selection[] | null;\n\tpublic afterVersionId: number;\n\n\tpublic editOperations: IEditOperation[];\n\n\tconstructor(beforeVersionId: number, beforeCursorState: Selection[]) {\n\t\tthis.beforeVersionId = beforeVersionId;\n\t\tthis.beforeCursorState = beforeCursorState;\n\t\tthis.afterCursorState = null;\n\t\tthis.afterVersionId = -1;\n\t\tthis.editOperations = [];\n\t}\n\n\tpublic undo(model: TextModel): void {\n\t\t// Apply all operations in reverse order\n\t\tfor (let i = this.editOperations.length - 1; i >= 0; i--) {\n\t\t\tthis.editOperations[i] = {\n\t\t\t\toperations: model.applyEdits(this.editOperations[i].operations)\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic redo(model: TextModel): void {\n\t\t// Apply all operations\n\t\tfor (let i = 0; i < this.editOperations.length; i++) {\n\t\t\tthis.editOperations[i] = {\n\t\t\t\toperations: model.applyEdits(this.editOperations[i].operations)\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction getModelEOL(model: TextModel): EndOfLineSequence {\n\tconst eol = model.getEOL();\n\tif (eol === '\\n') {\n\t\treturn EndOfLineSequence.LF;\n\t} else {\n\t\treturn EndOfLineSequence.CRLF;\n\t}\n}\n\nclass EOLStackElement implements IStackElement {\n\tpublic readonly beforeVersionId: number;\n\tpublic readonly beforeCursorState: Selection[] | null;\n\tpublic readonly afterCursorState: Selection[] | null;\n\tpublic afterVersionId: number;\n\n\tpublic eol: EndOfLineSequence;\n\n\tconstructor(beforeVersionId: number, setEOL: EndOfLineSequence) {\n\t\tthis.beforeVersionId = beforeVersionId;\n\t\tthis.beforeCursorState = null;\n\t\tthis.afterCursorState = null;\n\t\tthis.afterVersionId = -1;\n\t\tthis.eol = setEOL;\n\t}\n\n\tpublic undo(model: TextModel): void {\n\t\tlet redoEOL = getModelEOL(model);\n\t\tmodel.setEOL(this.eol);\n\t\tthis.eol = redoEOL;\n\t}\n\n\tpublic redo(model: TextModel): void {\n\t\tlet undoEOL = getModelEOL(model);\n\t\tmodel.setEOL(this.eol);\n\t\tthis.eol = undoEOL;\n\t}\n}\n\nexport interface IUndoRedoResult {\n\tselections: Selection[] | null;\n\trecordedVersionId: number;\n}\n\nexport class EditStack {\n\n\tprivate readonly model: TextModel;\n\tprivate currentOpenStackElement: IStackElement | null;\n\tprivate past: IStackElement[];\n\tprivate future: IStackElement[];\n\n\tconstructor(model: TextModel) {\n\t\tthis.model = model;\n\t\tthis.currentOpenStackElement = null;\n\t\tthis.past = [];\n\t\tthis.future = [];\n\t}\n\n\tpublic pushStackElement(): void {\n\t\tif (this.currentOpenStackElement !== null) {\n\t\t\tthis.past.push(this.currentOpenStackElement);\n\t\t\tthis.currentOpenStackElement = null;\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tthis.currentOpenStackElement = null;\n\t\tthis.past = [];\n\t\tthis.future = [];\n\t}\n\n\tpublic pushEOL(eol: EndOfLineSequence): void {\n\t\t// No support for parallel universes :(\n\t\tthis.future = [];\n\n\t\tif (this.currentOpenStackElement) {\n\t\t\tthis.pushStackElement();\n\t\t}\n\n\t\tconst prevEOL = getModelEOL(this.model);\n\t\tlet stackElement = new EOLStackElement(this.model.getAlternativeVersionId(), prevEOL);\n\n\t\tthis.model.setEOL(eol);\n\n\t\tstackElement.afterVersionId = this.model.getVersionId();\n\t\tthis.currentOpenStackElement = stackElement;\n\t\tthis.pushStackElement();\n\t}\n\n\tpublic pushEditOperation(beforeCursorState: Selection[], editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer | null): Selection[] | null {\n\t\t// No support for parallel universes :(\n\t\tthis.future = [];\n\n\t\tlet stackElement: EditStackElement | null = null;\n\n\t\tif (this.currentOpenStackElement) {\n\t\t\tif (this.currentOpenStackElement instanceof EditStackElement) {\n\t\t\t\tstackElement = this.currentOpenStackElement;\n\t\t\t} else {\n\t\t\t\tthis.pushStackElement();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.currentOpenStackElement) {\n\t\t\tstackElement = new EditStackElement(this.model.getAlternativeVersionId(), beforeCursorState);\n\t\t\tthis.currentOpenStackElement = stackElement;\n\t\t}\n\n\t\tconst inverseEditOperation: IEditOperation = {\n\t\t\toperations: this.model.applyEdits(editOperations)\n\t\t};\n\n\t\tstackElement!.editOperations.push(inverseEditOperation);\n\t\tstackElement!.afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperation.operations);\n\t\tstackElement!.afterVersionId = this.model.getVersionId();\n\t\treturn stackElement!.afterCursorState;\n\t}\n\n\tprivate static _computeCursorState(cursorStateComputer: ICursorStateComputer | null, inverseEditOperations: IIdentifiedSingleEditOperation[]): Selection[] | null {\n\t\ttry {\n\t\t\treturn cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic undo(): IUndoRedoResult | null {\n\n\t\tthis.pushStackElement();\n\n\t\tif (this.past.length > 0) {\n\t\t\tconst pastStackElement = this.past.pop()!;\n\n\t\t\ttry {\n\t\t\t\tpastStackElement.undo(this.model);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tthis.clear();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.future.push(pastStackElement);\n\n\t\t\treturn {\n\t\t\t\tselections: pastStackElement.beforeCursorState,\n\t\t\t\trecordedVersionId: pastStackElement.beforeVersionId\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic canUndo(): boolean {\n\t\treturn (this.past.length > 0) || this.currentOpenStackElement !== null;\n\t}\n\n\tpublic redo(): IUndoRedoResult | null {\n\n\t\tif (this.future.length > 0) {\n\t\t\tconst futureStackElement = this.future.pop()!;\n\n\t\t\ttry {\n\t\t\t\tfutureStackElement.redo(this.model);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tthis.clear();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.past.push(futureStackElement);\n\n\t\t\treturn {\n\t\t\t\tselections: futureStackElement.afterCursorState,\n\t\t\t\trecordedVersionId: futureStackElement.afterVersionId\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic canRedo(): boolean {\n\t\treturn (this.future.length > 0);\n\t}\n}\n"]}]}