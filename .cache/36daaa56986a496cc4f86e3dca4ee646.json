{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/url/common/url.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/url/common/url.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar url_1 = require(\"vs/platform/url/common/url\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar actions_3 = require(\"vs/base/common/actions\");\nvar OpenUrlAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenUrlAction, _super);\n    function OpenUrlAction(id, label, urlService, quickInputService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.urlService = urlService;\n        _this.quickInputService = quickInputService;\n        return _this;\n    }\n    OpenUrlAction.prototype.run = function () {\n        var _this = this;\n        return this.quickInputService.input({ prompt: 'URL to open' }).then(function (input) {\n            var uri = uri_1.URI.parse(input);\n            _this.urlService.open(uri);\n        });\n    };\n    OpenUrlAction.ID = 'workbench.action.url.openUrl';\n    OpenUrlAction.LABEL = nls_1.localize('openUrl', \"Open URL\");\n    OpenUrlAction = tslib_1.__decorate([\n        tslib_1.__param(2, url_1.IURLService),\n        tslib_1.__param(3, quickInput_1.IQuickInputService)\n    ], OpenUrlAction);\n    return OpenUrlAction;\n}(actions_3.Action));\nexports.OpenUrlAction = OpenUrlAction;\nplatform_1.Registry.as(actions_2.Extensions.WorkbenchActions)\n    .registerWorkbenchAction(new actions_1.SyncActionDescriptor(OpenUrlAction, OpenUrlAction.ID, OpenUrlAction.LABEL), 'OpenUrl', nls_1.localize('developer', \"Developer\"));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/url/common/url.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/url/common/url.contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,8BAAkC;AAClC,8DAA0E;AAC1E,iEAAgE;AAChE,uDAAuG;AACvG,kDAAyD;AACzD,uEAA8E;AAC9E,0CAAyC;AACzC,kDAAgD;AAEhD;IAAmC,yCAAM;IAKxC,uBACC,EAAU,EACV,KAAa,EACiB,UAAuB,EAChB,iBAAqC;QAJ3E,YAMC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAJ8B,gBAAU,GAAV,UAAU,CAAa;QAChB,uBAAiB,GAAjB,iBAAiB,CAAoB;;IAG3E,CAAC;IAED,2BAAG,GAAH;QAAA,iBAKC;QAJA,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;YACxE,IAAM,GAAG,GAAG,SAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC;IAjBe,gBAAE,GAAG,8BAA8B,CAAC;IACpC,mBAAK,GAAG,cAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAH5C,aAAa;QAQvB,mBAAA,iBAAW,CAAA;QACX,mBAAA,+BAAkB,CAAA;OATR,aAAa,CAoBzB;IAAD,oBAAC;CAAA,AApBD,CAAmC,gBAAM,GAoBxC;AApBY,sCAAa;AAsB1B,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC;KACtE,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,cAAQ,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as ActionExtensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { URI } from 'vs/base/common/uri';\nimport { Action } from 'vs/base/common/actions';\n\nexport class OpenUrlAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.url.openUrl';\n\tstatic readonly LABEL = localize('openUrl', \"Open URL\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.quickInputService.input({ prompt: 'URL to open' }).then(input => {\n\t\t\tconst uri = URI.parse(input);\n\t\t\tthis.urlService.open(uri);\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions)\n\t.registerWorkbenchAction(new SyncActionDescriptor(OpenUrlAction, OpenUrlAction.ID, OpenUrlAction.LABEL), 'OpenUrl', localize('developer', \"Developer\"));"]}]}