{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/indentation/indentUtils.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/indentation/indentUtils.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getSpaceCnt(str, tabSize) {\n        let spacesCnt = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str.charAt(i) === '\\t') {\n                spacesCnt += tabSize;\n            }\n            else {\n                spacesCnt++;\n            }\n        }\n        return spacesCnt;\n    }\n    exports.getSpaceCnt = getSpaceCnt;\n    function generateIndent(spacesCnt, tabSize, insertSpaces) {\n        spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n        let result = '';\n        if (!insertSpaces) {\n            let tabsCnt = Math.floor(spacesCnt / tabSize);\n            spacesCnt = spacesCnt % tabSize;\n            for (let i = 0; i < tabsCnt; i++) {\n                result += '\\t';\n            }\n        }\n        for (let i = 0; i < spacesCnt; i++) {\n            result += ' ';\n        }\n        return result;\n    }\n    exports.generateIndent = generateIndent;\n});\n",null]}