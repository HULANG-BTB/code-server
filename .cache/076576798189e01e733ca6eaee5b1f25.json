{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./media/update.contribution\");\nrequire(\"vs/platform/update/node/update.config.contribution\");\nvar platform = require(\"vs/base/common/platform\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar activity_1 = require(\"vs/workbench/common/activity\");\nvar actions_1 = require(\"vs/workbench/common/actions\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar update_1 = require(\"./update\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar workbench = platform_1.Registry.as(contributions_1.Extensions.Workbench);\nworkbench.registerWorkbenchContribution(update_1.ProductContribution, lifecycle_1.LifecyclePhase.Restored);\nif (platform.isWindows) {\n    if (process.arch === 'ia32') {\n        workbench.registerWorkbenchContribution(update_1.Win3264BitContribution, lifecycle_1.LifecyclePhase.Restored);\n    }\n}\n// TODO@ben remove me after a while\nif (platform.isLinux) {\n    if (process.arch === 'ia32') {\n        workbench.registerWorkbenchContribution(update_1.Linux32BitContribution, lifecycle_1.LifecyclePhase.Restored);\n    }\n}\nplatform_1.Registry.as(activity_1.GlobalActivityExtensions)\n    .registerActivity(update_1.UpdateContribution);\n// Editor\nplatform_1.Registry.as(actions_1.Extensions.WorkbenchActions)\n    .registerWorkbenchAction(new actions_2.SyncActionDescriptor(update_1.ShowCurrentReleaseNotesAction, update_1.ShowCurrentReleaseNotesAction.ID, update_1.ShowCurrentReleaseNotesAction.LABEL), 'Show Release Notes');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/update/electron-browser/update.contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,8CAA4C;AAC5C,8DAA4D;AAC5D,kDAAoD;AACpD,iEAAgE;AAChE,mEAAuH;AACvH,yDAAiG;AACjG,uDAAuG;AACvG,8DAA0E;AAC1E,mCAAkJ;AAClJ,oEAAwE;AAExE,IAAM,SAAS,GAAG,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC;AAE9F,SAAS,CAAC,6BAA6B,CAAC,4BAAmB,EAAE,0BAAc,CAAC,QAAQ,CAAC,CAAC;AAEtF,IAAI,QAAQ,CAAC,SAAS,EAAE;IACvB,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;QAC5B,SAAS,CAAC,6BAA6B,CAAC,+BAAsB,EAAE,0BAAc,CAAC,QAAQ,CAAC,CAAC;KACzF;CACD;AAED,mCAAmC;AACnC,IAAI,QAAQ,CAAC,OAAO,EAAE;IACrB,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;QAC5B,SAAS,CAAC,6BAA6B,CAAC,+BAAsB,EAAE,0BAAc,CAAC,QAAQ,CAAC,CAAC;KACzF;CACD;AAED,mBAAQ,CAAC,EAAE,CAA0B,mCAAwB,CAAC;KAC5D,gBAAgB,CAAC,2BAAkB,CAAC,CAAC;AAEvC,SAAS;AACT,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC;KACtE,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,sCAA6B,EAAE,sCAA6B,CAAC,EAAE,EAAE,sCAA6B,CAAC,KAAK,CAAC,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/update.contribution';\nimport 'vs/platform/update/node/update.config.contribution';\nimport * as platform from 'vs/base/common/platform';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IGlobalActivityRegistry, GlobalActivityExtensions } from 'vs/workbench/common/activity';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { ShowCurrentReleaseNotesAction, ProductContribution, UpdateContribution, Win3264BitContribution, Linux32BitContribution } from './update';\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\n\nconst workbench = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\n\nworkbench.registerWorkbenchContribution(ProductContribution, LifecyclePhase.Restored);\n\nif (platform.isWindows) {\n\tif (process.arch === 'ia32') {\n\t\tworkbench.registerWorkbenchContribution(Win3264BitContribution, LifecyclePhase.Restored);\n\t}\n}\n\n// TODO@ben remove me after a while\nif (platform.isLinux) {\n\tif (process.arch === 'ia32') {\n\t\tworkbench.registerWorkbenchContribution(Linux32BitContribution, LifecyclePhase.Restored);\n\t}\n}\n\nRegistry.as<IGlobalActivityRegistry>(GlobalActivityExtensions)\n\t.registerActivity(UpdateContribution);\n\n// Editor\nRegistry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions)\n\t.registerWorkbenchAction(new SyncActionDescriptor(ShowCurrentReleaseNotesAction, ShowCurrentReleaseNotesAction.ID, ShowCurrentReleaseNotesAction.LABEL), 'Show Release Notes');\n"]}]}