{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxCustom.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxCustom.ts","mtime":1555846338028},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./selectBoxCustom\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar dom = require(\"vs/base/browser/dom\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar contextview_1 = require(\"vs/base/browser/ui/contextview/contextview\");\nvar listWidget_1 = require(\"vs/base/browser/ui/list/listWidget\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar scrollable_1 = require(\"vs/base/common/scrollable\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar htmlContentRenderer_1 = require(\"vs/base/browser/htmlContentRenderer\");\nvar $ = dom.$;\nvar SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nvar SelectListRenderer = /** @class */ (function () {\n    function SelectListRenderer() {\n    }\n    Object.defineProperty(SelectListRenderer.prototype, \"templateId\", {\n        get: function () { return SELECT_OPTION_ENTRY_TEMPLATE_ID; },\n        enumerable: true,\n        configurable: true\n    });\n    SelectListRenderer.prototype.renderTemplate = function (container) {\n        var data = Object.create(null);\n        data.disposables = [];\n        data.root = container;\n        data.text = dom.append(container, $('.option-text'));\n        data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n        data.itemDescription = dom.append(container, $('.option-text-description'));\n        dom.addClass(data.itemDescription, 'visually-hidden');\n        return data;\n    };\n    SelectListRenderer.prototype.renderElement = function (element, index, templateData) {\n        var data = templateData;\n        var text = element.text;\n        var decoratorRight = element.decoratorRight;\n        var isDisabled = element.isDisabled;\n        data.text.textContent = text;\n        data.decoratorRight.innerText = (!!decoratorRight ? decoratorRight : '');\n        if (typeof element.description === 'string') {\n            var itemDescriptionId = (text.replace(/ /g, '_').toLowerCase() + '_description_' + data.root.id);\n            data.text.setAttribute('aria-describedby', itemDescriptionId);\n            data.itemDescription.id = itemDescriptionId;\n            data.itemDescription.innerText = element.description;\n        }\n        // pseudo-select disabled option\n        if (isDisabled) {\n            dom.addClass(data.root, 'option-disabled');\n        }\n        else {\n            // Make sure we do class removal from prior template rendering\n            dom.removeClass(data.root, 'option-disabled');\n        }\n    };\n    SelectListRenderer.prototype.disposeTemplate = function (templateData) {\n        templateData.disposables = lifecycle_1.dispose(templateData.disposables);\n    };\n    return SelectListRenderer;\n}());\nvar SelectBoxList = /** @class */ (function () {\n    function SelectBoxList(options, selected, contextViewProvider, styles, selectBoxOptions) {\n        this._hasDetails = false;\n        this._skipLayout = false;\n        this._sticky = false; // for dev purposes only\n        this.toDispose = [];\n        this._isVisible = false;\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n            this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n        }\n        else if (this.selectBoxOptions.minBottomMargin < 0) {\n            this.selectBoxOptions.minBottomMargin = 0;\n        }\n        this.selectElement = document.createElement('select');\n        // Use custom CSS vars for padding calculation\n        this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        this._onDidSelect = new event_1.Emitter();\n        this.toDispose.push(this._onDidSelect);\n        this.styles = styles;\n        this.registerListeners();\n        this.constructSelectDropDown(contextViewProvider);\n        this.selected = selected || 0;\n        if (options) {\n            this.setOptions(options, selected);\n        }\n    }\n    // IDelegate - List renderer\n    SelectBoxList.prototype.getHeight = function () {\n        return 18;\n    };\n    SelectBoxList.prototype.getTemplateId = function () {\n        return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n    };\n    SelectBoxList.prototype.constructSelectDropDown = function (contextViewProvider) {\n        // SetUp ContextView container to hold select Dropdown\n        this.contextViewProvider = contextViewProvider;\n        this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n        // Use custom CSS vars for padding calculation (shared with parent select)\n        dom.addClass(this.selectDropDownContainer, 'monaco-select-box-dropdown-padding');\n        // Setup container for select option details\n        this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n        // Create span flex box item/div we can measure and control\n        var widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n        var widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n        this.widthControlElement = document.createElement('span');\n        this.widthControlElement.className = 'option-text-width-control';\n        dom.append(widthControlInnerDiv, this.widthControlElement);\n        // Always default to below position\n        this._dropDownPosition = contextview_1.AnchorPosition.BELOW;\n        // Inline stylesheet for themes\n        this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n    };\n    SelectBoxList.prototype.registerListeners = function () {\n        // Parent native select keyboard listeners\n        var _this = this;\n        this.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'change', function (e) {\n            _this.selected = e.target.selectedIndex;\n            _this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n        }));\n        // Have to implement both keyboard and mouse controllers to handle disabled options\n        // Intercept mouse events to override normal select actions on parents\n        this.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, function (e) {\n            dom.EventHelper.stop(e);\n            if (_this._isVisible) {\n                _this.hideSelectDropDown(true);\n            }\n            else {\n                _this.showSelectDropDown();\n            }\n        }));\n        this.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, function (e) {\n            dom.EventHelper.stop(e);\n        }));\n        // Intercept keyboard handling\n        this.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            var showDropDown = false;\n            // Create and drop down select list on keyboard select\n            if (browser_1.isMacintosh) {\n                if (event.keyCode === keyCodes_1.KeyCode.DownArrow || event.keyCode === keyCodes_1.KeyCode.UpArrow || event.keyCode === keyCodes_1.KeyCode.Space || event.keyCode === keyCodes_1.KeyCode.Enter) {\n                    showDropDown = true;\n                }\n            }\n            else {\n                if (event.keyCode === keyCodes_1.KeyCode.DownArrow && event.altKey || event.keyCode === keyCodes_1.KeyCode.UpArrow && event.altKey || event.keyCode === keyCodes_1.KeyCode.Space || event.keyCode === keyCodes_1.KeyCode.Enter) {\n                    showDropDown = true;\n                }\n            }\n            if (showDropDown) {\n                _this.showSelectDropDown();\n                dom.EventHelper.stop(e);\n            }\n        }));\n    };\n    Object.defineProperty(SelectBoxList.prototype, \"onDidSelect\", {\n        get: function () {\n            return this._onDidSelect.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectBoxList.prototype.setOptions = function (options, selected) {\n        var _this = this;\n        if (!this.options || !arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this._hasDetails = false;\n            this.options.forEach(function (option, index) {\n                _this.selectElement.add(_this.createOption(option.text, index, option.isDisabled));\n                if (typeof option.description === 'string') {\n                    _this._hasDetails = true;\n                }\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n            // Set current = selected since this is not necessarily a user exit\n            this._currentSelection = this.selected;\n        }\n    };\n    SelectBoxList.prototype.setOptionsList = function () {\n        // Mirror options in drop-down\n        // Populate select list for non-native select mode\n        if (this.selectList && !!this.options) {\n            this.selectList.splice(0, this.selectList.length, this.options);\n        }\n    };\n    SelectBoxList.prototype.select = function (index) {\n        if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n    };\n    SelectBoxList.prototype.setAriaLabel = function (label) {\n        this.selectBoxOptions.ariaLabel = label;\n        this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n    };\n    SelectBoxList.prototype.focus = function () {\n        if (this.selectElement) {\n            this.selectElement.focus();\n        }\n    };\n    SelectBoxList.prototype.blur = function () {\n        if (this.selectElement) {\n            this.selectElement.blur();\n        }\n    };\n    SelectBoxList.prototype.render = function (container) {\n        dom.addClass(container, 'select-container');\n        container.appendChild(this.selectElement);\n        this.applyStyles();\n    };\n    SelectBoxList.prototype.style = function (styles) {\n        var content = [];\n        this.styles = styles;\n        // Style non-native select mode\n        if (this.styles.listFocusBackground) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: \" + this.styles.listFocusBackground + \" !important; }\");\n        }\n        if (this.styles.listFocusForeground) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused:not(:hover) { color: \" + this.styles.listFocusForeground + \" !important; }\");\n        }\n        if (this.styles.decoratorRightForeground) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row .option-decorator-right { color: \" + this.styles.decoratorRightForeground + \" !important; }\");\n        }\n        if (this.styles.selectBackground && this.styles.selectBorder && !this.styles.selectBorder.equals(this.styles.selectBackground)) {\n            content.push(\".monaco-select-box-dropdown-container { border: 1px solid \" + this.styles.selectBorder + \" } \");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid \" + this.styles.selectBorder + \" } \");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid \" + this.styles.selectBorder + \" } \");\n        }\n        else if (this.styles.selectListBorder) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid \" + this.styles.selectListBorder + \" } \");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid \" + this.styles.selectListBorder + \" } \");\n        }\n        // Hover foreground - ignore for disabled options\n        if (this.styles.listHoverForeground) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:hover { color: \" + this.styles.listHoverForeground + \" !important; }\");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: \" + this.styles.listActiveSelectionForeground + \" !important; }\");\n        }\n        // Hover background - ignore for disabled options\n        if (this.styles.listHoverBackground) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: \" + this.styles.listHoverBackground + \" !important; }\");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: \" + this.styles.selectBackground + \" !important; }\");\n        }\n        // Match quickOpen outline styles - ignore for disabled options\n        if (this.styles.listFocusOutline) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted \" + this.styles.listFocusOutline + \" !important; outline-offset: -1.6px !important; }\");\n        }\n        if (this.styles.listHoverOutline) {\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:hover:not(.focused) { outline: 1.6px dashed \" + this.styles.listHoverOutline + \" !important; outline-offset: -1.6px !important; }\");\n            content.push(\".monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { outline: none !important; }\");\n        }\n        this.styleElement.innerHTML = content.join('\\n');\n        this.applyStyles();\n    };\n    SelectBoxList.prototype.applyStyles = function () {\n        // Style parent select\n        if (this.selectElement) {\n            var background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n            var foreground = this.styles.selectForeground ? this.styles.selectForeground.toString() : null;\n            var border = this.styles.selectBorder ? this.styles.selectBorder.toString() : null;\n            this.selectElement.style.backgroundColor = background;\n            this.selectElement.style.color = foreground;\n            this.selectElement.style.borderColor = border;\n        }\n        // Style drop down select list (non-native mode only)\n        if (this.selectList) {\n            this.styleList();\n        }\n    };\n    SelectBoxList.prototype.styleList = function () {\n        if (this.selectList) {\n            var background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n            this.selectList.style({});\n            var listBackground = this.styles.selectListBackground ? this.styles.selectListBackground.toString() : background;\n            this.selectDropDownListContainer.style.backgroundColor = listBackground;\n            this.selectionDetailsPane.style.backgroundColor = listBackground;\n            var optionsBorder = this.styles.focusBorder ? this.styles.focusBorder.toString() : null;\n            this.selectDropDownContainer.style.outlineColor = optionsBorder;\n            this.selectDropDownContainer.style.outlineOffset = '-1px';\n        }\n    };\n    SelectBoxList.prototype.createOption = function (value, index, disabled) {\n        var option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    };\n    // ContextView dropdown methods\n    SelectBoxList.prototype.showSelectDropDown = function () {\n        var _this = this;\n        this.selectionDetailsPane.innerText = '';\n        if (!this.contextViewProvider || this._isVisible) {\n            return;\n        }\n        // Lazily create and populate list only at open, moved from constructor\n        this.createSelectList(this.selectDropDownContainer);\n        this.setOptionsList();\n        // This allows us to flip the position based on measurement\n        // Set drop-down position above/below from required height and margins\n        // If pre-layout cannot fit at least one option do not show drop-down\n        this.contextViewProvider.showContextView({\n            getAnchor: function () { return _this.selectElement; },\n            render: function (container) { return _this.renderSelectDropDown(container, true); },\n            layout: function () {\n                _this.layoutSelectDropDown();\n            },\n            onHide: function () {\n                dom.toggleClass(_this.selectDropDownContainer, 'visible', false);\n                dom.toggleClass(_this.selectElement, 'synthetic-focus', false);\n            },\n            anchorPosition: this._dropDownPosition\n        });\n        // Hide so we can relay out\n        this._isVisible = true;\n        this.hideSelectDropDown(false);\n        this.contextViewProvider.showContextView({\n            getAnchor: function () { return _this.selectElement; },\n            render: function (container) { return _this.renderSelectDropDown(container); },\n            layout: function () { return _this.layoutSelectDropDown(); },\n            onHide: function () {\n                dom.toggleClass(_this.selectDropDownContainer, 'visible', false);\n                dom.toggleClass(_this.selectElement, 'synthetic-focus', false);\n            },\n            anchorPosition: this._dropDownPosition\n        });\n        // Track initial selection the case user escape, blur\n        this._currentSelection = this.selected;\n        this._isVisible = true;\n    };\n    SelectBoxList.prototype.hideSelectDropDown = function (focusSelect) {\n        if (!this.contextViewProvider || !this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        if (focusSelect) {\n            this.selectElement.focus();\n        }\n        this.contextViewProvider.hideContextView();\n    };\n    SelectBoxList.prototype.renderSelectDropDown = function (container, preLayoutPosition) {\n        var _this = this;\n        container.appendChild(this.selectDropDownContainer);\n        // Pre-Layout allows us to change position\n        this.layoutSelectDropDown(preLayoutPosition);\n        return {\n            dispose: function () {\n                // contextView will dispose itself if moving from one View to another\n                try {\n                    container.removeChild(_this.selectDropDownContainer); // remove to take out the CSS rules we add\n                }\n                catch (error) {\n                    // Ignore, removed already by change of focus\n                }\n            }\n        };\n    };\n    // Iterate over detailed descriptions, find max height\n    SelectBoxList.prototype.measureMaxDetailsHeight = function () {\n        var _this = this;\n        var maxDetailsPaneHeight = 0;\n        this.options.forEach(function (option, index) {\n            _this.selectionDetailsPane.innerText = '';\n            if (option.description) {\n                if (option.descriptionIsMarkdown) {\n                    _this.selectionDetailsPane.appendChild(_this.renderDescriptionMarkdown(option.description));\n                }\n                else {\n                    _this.selectionDetailsPane.innerText = option.description;\n                }\n                _this.selectionDetailsPane.style.display = 'block';\n            }\n            else {\n                _this.selectionDetailsPane.style.display = 'none';\n            }\n            if (_this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n                maxDetailsPaneHeight = _this.selectionDetailsPane.offsetHeight;\n            }\n        });\n        // Reset description to selected\n        this.selectionDetailsPane.innerText = '';\n        var description = this.options[this.selected].description || null;\n        var descriptionIsMarkdown = this.options[this.selected].descriptionIsMarkdown || null;\n        if (description) {\n            if (descriptionIsMarkdown) {\n                this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description));\n            }\n            else {\n                this.selectionDetailsPane.innerText = description;\n            }\n            this.selectionDetailsPane.style.display = 'block';\n        }\n        return maxDetailsPaneHeight;\n    };\n    SelectBoxList.prototype.layoutSelectDropDown = function (preLayoutPosition) {\n        // Avoid recursion from layout called in onListFocus\n        if (this._skipLayout) {\n            return false;\n        }\n        // Layout ContextView drop down select list and container\n        // Have to manage our vertical overflow, sizing, position below or above\n        // Position has to be determined and set prior to contextView instantiation\n        if (this.selectList) {\n            // Make visible to enable measurements\n            dom.toggleClass(this.selectDropDownContainer, 'visible', true);\n            var selectPosition = dom.getDomNodePagePosition(this.selectElement);\n            var styles = getComputedStyle(this.selectElement);\n            var verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n            var maxSelectDropDownHeightBelow = (window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0));\n            var maxSelectDropDownHeightAbove = (selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN);\n            // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n            var selectWidth = this.selectElement.offsetWidth;\n            var selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n            var selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Get initial list height and determine space above and below\n            this.selectList.getHTMLElement().style.height = '';\n            this.selectList.layout();\n            var listHeight = this.selectList.contentHeight;\n            var maxDetailsPaneHeight = this._hasDetails ? this.measureMaxDetailsHeight() : 0;\n            var minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n            var maxVisibleOptionsBelow = ((Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            var maxVisibleOptionsAbove = ((Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            // If we are only doing pre-layout check/adjust position only\n            // Calculate vertical space available, flip up if insufficient\n            // Use reflected padding on parent select, ContextView style\n            // properties not available before DOM attachment\n            if (preLayoutPosition) {\n                // Check if select moved out of viewport , do not open\n                // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n                if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                    || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                    || ((maxVisibleOptionsBelow < 1) && (maxVisibleOptionsAbove < 1))) {\n                    // Indicate we cannot open\n                    return false;\n                }\n                // Determine if we have to flip up\n                // Always show complete list items - never more than Max available vertical height\n                if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS\n                    && maxVisibleOptionsAbove > maxVisibleOptionsBelow\n                    && this.options.length > maxVisibleOptionsBelow) {\n                    this._dropDownPosition = contextview_1.AnchorPosition.ABOVE;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    dom.removeClass(this.selectionDetailsPane, 'border-top');\n                    dom.addClass(this.selectionDetailsPane, 'border-bottom');\n                }\n                else {\n                    this._dropDownPosition = contextview_1.AnchorPosition.BELOW;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    dom.removeClass(this.selectionDetailsPane, 'border-bottom');\n                    dom.addClass(this.selectionDetailsPane, 'border-top');\n                }\n                // Do full layout on showSelectDropDown only\n                return true;\n            }\n            // Check if select out of viewport or cutting into status bar\n            if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                || (this._dropDownPosition === contextview_1.AnchorPosition.BELOW && maxVisibleOptionsBelow < 1)\n                || (this._dropDownPosition === contextview_1.AnchorPosition.ABOVE && maxVisibleOptionsAbove < 1)) {\n                // Cannot properly layout, close and hide\n                this.hideSelectDropDown(true);\n                return false;\n            }\n            // SetUp list dimensions and layout - account for container padding\n            // Use position to check above or below available space\n            if (this._dropDownPosition === contextview_1.AnchorPosition.BELOW) {\n                if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n                    // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n                    // Hide drop-down, hide contextview, focus on parent select\n                    this.hideSelectDropDown(true);\n                    return false;\n                }\n                // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n                    listHeight = (maxVisibleOptionsBelow * this.getHeight());\n                }\n            }\n            else {\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n                    listHeight = (maxVisibleOptionsAbove * this.getHeight());\n                }\n            }\n            // Set adjusted list height and relayout\n            this.selectList.layout(listHeight);\n            this.selectList.domFocus();\n            // Finally set focus on selected item\n            if (this.selectList.length > 0) {\n                this.selectList.setFocus([this.selected || 0]);\n                this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n            }\n            if (this._hasDetails) {\n                // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n                this.selectList.getHTMLElement().style.height = (listHeight + verticalPadding) + 'px';\n                this.selectDropDownContainer.style.height = '';\n            }\n            else {\n                this.selectDropDownContainer.style.height = (listHeight + verticalPadding) + 'px';\n            }\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Maintain focus outline on parent select as well as list container - tabindex for focus\n            this.selectDropDownListContainer.setAttribute('tabindex', '0');\n            dom.toggleClass(this.selectElement, 'synthetic-focus', true);\n            dom.toggleClass(this.selectDropDownContainer, 'synthetic-focus', true);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    SelectBoxList.prototype.setWidthControlElement = function (container) {\n        var elementWidth = 0;\n        if (container && !!this.options) {\n            var longest_1 = 0;\n            var longestLength_1 = 0;\n            this.options.forEach(function (option, index) {\n                var len = option.text.length + (!!option.decoratorRight ? option.decoratorRight.length : 0);\n                if (len > longestLength_1) {\n                    longest_1 = index;\n                    longestLength_1 = len;\n                }\n            });\n            container.innerHTML = this.options[longest_1].text + (!!this.options[longest_1].decoratorRight ? (this.options[longest_1].decoratorRight + ' ') : '');\n            elementWidth = dom.getTotalWidth(container);\n        }\n        return elementWidth;\n    };\n    SelectBoxList.prototype.createSelectList = function (parent) {\n        var _this = this;\n        // If we have already constructive list on open, skip\n        if (this.selectList) {\n            return;\n        }\n        // SetUp container for list\n        this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n        this.listRenderer = new SelectListRenderer();\n        this.selectList = new listWidget_1.List(this.selectDropDownListContainer, this, [this.listRenderer], {\n            ariaLabel: this.selectBoxOptions.ariaLabel,\n            useShadows: false,\n            verticalScrollMode: scrollable_1.ScrollbarVisibility.Visible,\n            keyboardSupport: false,\n            mouseSupport: false\n        });\n        // SetUp list keyboard controller - control navigation, disabled items, focus\n        var onSelectDropDownKeyDown = event_1.Event.chain(event_2.domEvent(this.selectDropDownListContainer, 'keydown'))\n            .filter(function () { return _this.selectList.length > 0; })\n            .map(function (e) { return new keyboardEvent_1.StandardKeyboardEvent(e); });\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.Enter; }).on(function (e) { return _this.onEnter(e); }, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.Escape; }).on(function (e) { return _this.onEscape(e); }, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.UpArrow; }).on(this.onUpArrow, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.DownArrow; }).on(this.onDownArrow, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.PageDown; }).on(this.onPageDown, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.PageUp; }).on(this.onPageUp, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.Home; }).on(this.onHome, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.End; }).on(this.onEnd, this, this.toDispose);\n        onSelectDropDownKeyDown.filter(function (e) { return (e.keyCode >= keyCodes_1.KeyCode.KEY_0 && e.keyCode <= keyCodes_1.KeyCode.KEY_Z) || (e.keyCode >= keyCodes_1.KeyCode.US_SEMICOLON && e.keyCode <= keyCodes_1.KeyCode.NUMPAD_DIVIDE); }).on(this.onCharacter, this, this.toDispose);\n        // SetUp list mouse controller - control navigation, disabled items, focus\n        event_1.Event.chain(event_2.domEvent(this.selectList.getHTMLElement(), 'mouseup'))\n            .filter(function () { return _this.selectList.length > 0; })\n            .on(function (e) { return _this.onMouseUp(e); }, this, this.toDispose);\n        this.toDispose.push(this.selectList.onDidBlur(function (_) { return _this.onListBlur(); }), this.selectList.onMouseOver(function (e) { return typeof e.index !== 'undefined' && _this.selectList.setFocus([e.index]); }), this.selectList.onFocusChange(function (e) { return _this.onListFocus(e); }));\n        this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n        this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n        this.styleList();\n    };\n    // List methods\n    // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n    SelectBoxList.prototype.onMouseUp = function (e) {\n        dom.EventHelper.stop(e);\n        var target = e.target;\n        if (!target) {\n            return;\n        }\n        // Check our mouse event is on an option (not scrollbar)\n        if (!!target.classList.contains('slider')) {\n            return;\n        }\n        var listRowElement = target.closest('.monaco-list-row');\n        if (!listRowElement) {\n            return;\n        }\n        var index = Number(listRowElement.getAttribute('data-index'));\n        var disabled = listRowElement.classList.contains('option-disabled');\n        // Ignore mouse selection of disabled options\n        if (index >= 0 && index < this.options.length && !disabled) {\n            this.selected = index;\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n            // Only fire if selection change\n            if (this.selected !== this._currentSelection) {\n                // Set current = selected\n                this._currentSelection = this.selected;\n                this._onDidSelect.fire({\n                    index: this.selectElement.selectedIndex,\n                    selected: this.options[this.selected].text\n                });\n            }\n            this.hideSelectDropDown(true);\n        }\n    };\n    // List Exit - passive - implicit no selection change, hide drop-down\n    SelectBoxList.prototype.onListBlur = function () {\n        if (this._sticky) {\n            return;\n        }\n        if (this.selected !== this._currentSelection) {\n            // Reset selected to current if no change\n            this.select(this._currentSelection);\n        }\n        this.hideSelectDropDown(false);\n    };\n    SelectBoxList.prototype.renderDescriptionMarkdown = function (text) {\n        var cleanRenderedMarkdown = function (element) {\n            for (var i = 0; i < element.childNodes.length; i++) {\n                var child = element.childNodes.item(i);\n                var tagName = child.tagName && child.tagName.toLowerCase();\n                if (tagName === 'img') {\n                    element.removeChild(child);\n                }\n                else {\n                    cleanRenderedMarkdown(child);\n                }\n            }\n        };\n        var renderedMarkdown = htmlContentRenderer_1.renderMarkdown({ value: text });\n        renderedMarkdown.classList.add('select-box-description-markdown');\n        cleanRenderedMarkdown(renderedMarkdown);\n        return renderedMarkdown;\n    };\n    // List Focus Change - passive - update details pane with newly focused element's data\n    SelectBoxList.prototype.onListFocus = function (e) {\n        // Skip during initial layout\n        if (!this._isVisible || !this._hasDetails) {\n            return;\n        }\n        this.selectionDetailsPane.innerText = '';\n        var selectedIndex = e.indexes[0];\n        var description = this.options[selectedIndex].description;\n        var descriptionIsMarkdown = this.options[selectedIndex].descriptionIsMarkdown;\n        if (description) {\n            if (descriptionIsMarkdown) {\n                this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description));\n            }\n            else {\n                this.selectionDetailsPane.innerText = description;\n            }\n            this.selectionDetailsPane.style.display = 'block';\n        }\n        else {\n            this.selectionDetailsPane.style.display = 'none';\n        }\n        // Avoid recursion\n        this._skipLayout = true;\n        this.contextViewProvider.layout();\n        this._skipLayout = false;\n    };\n    // List keyboard controller\n    // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n    SelectBoxList.prototype.onEscape = function (e) {\n        dom.EventHelper.stop(e);\n        // Reset selection to value when opened\n        this.select(this._currentSelection);\n        this.hideSelectDropDown(true);\n    };\n    // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n    SelectBoxList.prototype.onEnter = function (e) {\n        dom.EventHelper.stop(e);\n        // Only fire if selection change\n        if (this.selected !== this._currentSelection) {\n            this._currentSelection = this.selected;\n            this._onDidSelect.fire({\n                index: this.selectElement.selectedIndex,\n                selected: this.options[this.selected].text\n            });\n        }\n        this.hideSelectDropDown(true);\n    };\n    // List navigation - have to handle a disabled option (jump over)\n    SelectBoxList.prototype.onDownArrow = function () {\n        if (this.selected < this.options.length - 1) {\n            // Skip disabled options\n            var nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n            if (nextOptionDisabled && this.options.length > this.selected + 2) {\n                this.selected += 2;\n            }\n            else if (nextOptionDisabled) {\n                return;\n            }\n            else {\n                this.selected++;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    };\n    SelectBoxList.prototype.onUpArrow = function () {\n        if (this.selected > 0) {\n            // Skip disabled options\n            var previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n            if (previousOptionDisabled && this.selected > 1) {\n                this.selected -= 2;\n            }\n            else {\n                this.selected--;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    };\n    SelectBoxList.prototype.onPageUp = function (e) {\n        var _this = this;\n        dom.EventHelper.stop(e);\n        this.selectList.focusPreviousPage();\n        // Allow scrolling to settle\n        setTimeout(function () {\n            _this.selected = _this.selectList.getFocus()[0];\n            // Shift selection down if we land on a disabled option\n            if (_this.options[_this.selected].isDisabled && _this.selected < _this.options.length - 1) {\n                _this.selected++;\n                _this.selectList.setFocus([_this.selected]);\n            }\n            _this.selectList.reveal(_this.selected);\n            _this.select(_this.selected);\n        }, 1);\n    };\n    SelectBoxList.prototype.onPageDown = function (e) {\n        var _this = this;\n        dom.EventHelper.stop(e);\n        this.selectList.focusNextPage();\n        // Allow scrolling to settle\n        setTimeout(function () {\n            _this.selected = _this.selectList.getFocus()[0];\n            // Shift selection up if we land on a disabled option\n            if (_this.options[_this.selected].isDisabled && _this.selected > 0) {\n                _this.selected--;\n                _this.selectList.setFocus([_this.selected]);\n            }\n            _this.selectList.reveal(_this.selected);\n            _this.select(_this.selected);\n        }, 1);\n    };\n    SelectBoxList.prototype.onHome = function (e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = 0;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected++;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    };\n    SelectBoxList.prototype.onEnd = function (e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = this.options.length - 1;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected--;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    };\n    // Mimic option first character navigation of native select\n    SelectBoxList.prototype.onCharacter = function (e) {\n        var ch = keyCodes_1.KeyCodeUtils.toString(e.keyCode);\n        var optionIndex = -1;\n        for (var i = 0; i < this.options.length - 1; i++) {\n            optionIndex = (i + this.selected + 1) % this.options.length;\n            if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n                this.select(optionIndex);\n                this.selectList.setFocus([optionIndex]);\n                this.selectList.reveal(this.selectList.getFocus()[0]);\n                dom.EventHelper.stop(e);\n                break;\n            }\n        }\n    };\n    SelectBoxList.prototype.dispose = function () {\n        this.hideSelectDropDown(false);\n        this.toDispose = lifecycle_1.dispose(this.toDispose);\n    };\n    SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\n    SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\n    SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;\n    return SelectBoxList;\n}());\nexports.SelectBoxList = SelectBoxList;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxCustom.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxCustom.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./selectBoxCustom';\n\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { KeyCode, KeyCodeUtils } from 'vs/base/common/keyCodes';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport * as dom from 'vs/base/browser/dom';\nimport * as arrays from 'vs/base/common/arrays';\nimport { IContextViewProvider, AnchorPosition } from 'vs/base/browser/ui/contextview/contextview';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate, IListRenderer, IListEvent } from 'vs/base/browser/ui/list/list';\nimport { domEvent } from 'vs/base/browser/event';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { ISelectBoxDelegate, ISelectOptionItem, ISelectBoxOptions, ISelectBoxStyles, ISelectData } from 'vs/base/browser/ui/selectBox/selectBox';\nimport { isMacintosh } from 'vs/base/browser/browser';\nimport { renderMarkdown } from 'vs/base/browser/htmlContentRenderer';\n\nconst $ = dom.$;\n\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\n\ninterface ISelectListTemplateData {\n\troot: HTMLElement;\n\ttext: HTMLElement;\n\titemDescription: HTMLElement;\n\tdecoratorRight: HTMLElement;\n\tdisposables: IDisposable[];\n}\n\nclass SelectListRenderer implements IListRenderer<ISelectOptionItem, ISelectListTemplateData> {\n\n\tget templateId(): string { return SELECT_OPTION_ENTRY_TEMPLATE_ID; }\n\n\tconstructor() { }\n\n\trenderTemplate(container: HTMLElement): any {\n\t\tconst data = <ISelectListTemplateData>Object.create(null);\n\t\tdata.disposables = [];\n\t\tdata.root = container;\n\t\tdata.text = dom.append(container, $('.option-text'));\n\t\tdata.decoratorRight = dom.append(container, $('.option-decorator-right'));\n\t\tdata.itemDescription = dom.append(container, $('.option-text-description'));\n\t\tdom.addClass(data.itemDescription, 'visually-hidden');\n\n\t\treturn data;\n\t}\n\n\trenderElement(element: ISelectOptionItem, index: number, templateData: ISelectListTemplateData): void {\n\t\tconst data = <ISelectListTemplateData>templateData;\n\t\tconst text = (<ISelectOptionItem>element).text;\n\t\tconst decoratorRight = (<ISelectOptionItem>element).decoratorRight;\n\t\tconst isDisabled = (<ISelectOptionItem>element).isDisabled;\n\n\t\tdata.text.textContent = text;\n\t\tdata.decoratorRight.innerText = (!!decoratorRight ? decoratorRight : '');\n\n\t\tif (typeof element.description === 'string') {\n\t\t\tconst itemDescriptionId = (text.replace(/ /g, '_').toLowerCase() + '_description_' + data.root.id);\n\t\t\tdata.text.setAttribute('aria-describedby', itemDescriptionId);\n\t\t\tdata.itemDescription.id = itemDescriptionId;\n\t\t\tdata.itemDescription.innerText = element.description;\n\t\t}\n\n\t\t// pseudo-select disabled option\n\t\tif (isDisabled) {\n\t\t\tdom.addClass((<HTMLElement>data.root), 'option-disabled');\n\t\t} else {\n\t\t\t// Make sure we do class removal from prior template rendering\n\t\t\tdom.removeClass((<HTMLElement>data.root), 'option-disabled');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ISelectListTemplateData): void {\n\t\ttemplateData.disposables = dispose(templateData.disposables);\n\t}\n}\n\nexport class SelectBoxList implements ISelectBoxDelegate, IListVirtualDelegate<ISelectOptionItem> {\n\n\tprivate static readonly DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\n\tprivate static readonly DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\n\tprivate static readonly DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;\n\n\tprivate _isVisible: boolean;\n\tprivate selectBoxOptions: ISelectBoxOptions;\n\tprivate selectElement: HTMLSelectElement;\n\tprivate options: ISelectOptionItem[];\n\tprivate selected: number;\n\tprivate readonly _onDidSelect: Emitter<ISelectData>;\n\tprivate toDispose: IDisposable[];\n\tprivate styles: ISelectBoxStyles;\n\tprivate listRenderer: SelectListRenderer;\n\tprivate contextViewProvider: IContextViewProvider;\n\tprivate selectDropDownContainer: HTMLElement;\n\tprivate styleElement: HTMLStyleElement;\n\tprivate selectList: List<ISelectOptionItem>;\n\tprivate selectDropDownListContainer: HTMLElement;\n\tprivate widthControlElement: HTMLElement;\n\tprivate _currentSelection: number;\n\tprivate _dropDownPosition: AnchorPosition;\n\tprivate _hasDetails: boolean = false;\n\tprivate selectionDetailsPane: HTMLElement;\n\tprivate _skipLayout: boolean = false;\n\n\tprivate _sticky: boolean = false; // for dev purposes only\n\n\tconstructor(options: ISelectOptionItem[], selected: number, contextViewProvider: IContextViewProvider, styles: ISelectBoxStyles, selectBoxOptions?: ISelectBoxOptions) {\n\n\t\tthis.toDispose = [];\n\t\tthis._isVisible = false;\n\t\tthis.selectBoxOptions = selectBoxOptions || Object.create(null);\n\n\t\tif (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n\t\t\tthis.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n\t\t} else if (this.selectBoxOptions.minBottomMargin < 0) {\n\t\t\tthis.selectBoxOptions.minBottomMargin = 0;\n\t\t}\n\n\t\tthis.selectElement = document.createElement('select');\n\n\t\t// Use custom CSS vars for padding calculation\n\t\tthis.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n\n\t\tif (typeof this.selectBoxOptions.ariaLabel === 'string') {\n\t\t\tthis.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n\t\t}\n\n\t\tthis._onDidSelect = new Emitter<ISelectData>();\n\t\tthis.toDispose.push(this._onDidSelect);\n\n\t\tthis.styles = styles;\n\n\t\tthis.registerListeners();\n\t\tthis.constructSelectDropDown(contextViewProvider);\n\n\t\tthis.selected = selected || 0;\n\n\t\tif (options) {\n\t\t\tthis.setOptions(options, selected);\n\t\t}\n\n\t}\n\n\t// IDelegate - List renderer\n\n\tgetHeight(): number {\n\t\treturn 18;\n\t}\n\n\tgetTemplateId(): string {\n\t\treturn SELECT_OPTION_ENTRY_TEMPLATE_ID;\n\t}\n\n\tprivate constructSelectDropDown(contextViewProvider: IContextViewProvider) {\n\n\t\t// SetUp ContextView container to hold select Dropdown\n\t\tthis.contextViewProvider = contextViewProvider;\n\t\tthis.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n\t\t// Use custom CSS vars for padding calculation (shared with parent select)\n\t\tdom.addClass(this.selectDropDownContainer, 'monaco-select-box-dropdown-padding');\n\n\t\t// Setup container for select option details\n\t\tthis.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n\n\t\t// Create span flex box item/div we can measure and control\n\t\tlet widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n\t\tlet widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n\t\tthis.widthControlElement = document.createElement('span');\n\t\tthis.widthControlElement.className = 'option-text-width-control';\n\t\tdom.append(widthControlInnerDiv, this.widthControlElement);\n\n\t\t// Always default to below position\n\t\tthis._dropDownPosition = AnchorPosition.BELOW;\n\n\t\t// Inline stylesheet for themes\n\t\tthis.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n\t}\n\n\tprivate registerListeners() {\n\n\t\t// Parent native select keyboard listeners\n\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n\t\t\tthis.selected = e.target.selectedIndex;\n\t\t\tthis._onDidSelect.fire({\n\t\t\t\tindex: e.target.selectedIndex,\n\t\t\t\tselected: e.target.value\n\t\t\t});\n\t\t}));\n\n\t\t// Have to implement both keyboard and mouse controllers to handle disabled options\n\t\t// Intercept mouse events to override normal select actions on parents\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, (e) => {\n\t\t\tdom.EventHelper.stop(e);\n\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.hideSelectDropDown(true);\n\t\t\t} else {\n\t\t\t\tthis.showSelectDropDown();\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, (e) => {\n\t\t\tdom.EventHelper.stop(e);\n\t\t}));\n\n\t\t// Intercept keyboard handling\n\n\t\tthis.toDispose.push(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tlet showDropDown = false;\n\n\t\t\t// Create and drop down select list on keyboard select\n\t\t\tif (isMacintosh) {\n\t\t\t\tif (event.keyCode === KeyCode.DownArrow || event.keyCode === KeyCode.UpArrow || event.keyCode === KeyCode.Space || event.keyCode === KeyCode.Enter) {\n\t\t\t\t\tshowDropDown = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (event.keyCode === KeyCode.DownArrow && event.altKey || event.keyCode === KeyCode.UpArrow && event.altKey || event.keyCode === KeyCode.Space || event.keyCode === KeyCode.Enter) {\n\t\t\t\t\tshowDropDown = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (showDropDown) {\n\t\t\t\tthis.showSelectDropDown();\n\t\t\t\tdom.EventHelper.stop(e);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic get onDidSelect(): Event<ISelectData> {\n\t\treturn this._onDidSelect.event;\n\t}\n\n\tpublic setOptions(options: ISelectOptionItem[], selected?: number): void {\n\t\tif (!this.options || !arrays.equals(this.options, options)) {\n\t\t\tthis.options = options;\n\t\t\tthis.selectElement.options.length = 0;\n\t\t\tthis._hasDetails = false;\n\n\t\t\tthis.options.forEach((option, index) => {\n\t\t\t\tthis.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n\t\t\t\tif (typeof option.description === 'string') {\n\t\t\t\t\tthis._hasDetails = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (selected !== undefined) {\n\t\t\tthis.select(selected);\n\t\t\t// Set current = selected since this is not necessarily a user exit\n\t\t\tthis._currentSelection = this.selected;\n\t\t}\n\t}\n\n\n\tprivate setOptionsList() {\n\n\t\t// Mirror options in drop-down\n\t\t// Populate select list for non-native select mode\n\t\tif (this.selectList && !!this.options) {\n\t\t\tthis.selectList.splice(0, this.selectList.length, this.options);\n\t\t}\n\t}\n\n\tpublic select(index: number): void {\n\n\t\tif (index >= 0 && index < this.options.length) {\n\t\t\tthis.selected = index;\n\t\t} else if (index > this.options.length - 1) {\n\t\t\t// Adjust index to end of list\n\t\t\t// This could make client out of sync with the select\n\t\t\tthis.select(this.options.length - 1);\n\t\t} else if (this.selected < 0) {\n\t\t\tthis.selected = 0;\n\t\t}\n\n\t\tthis.selectElement.selectedIndex = this.selected;\n\t}\n\n\tpublic setAriaLabel(label: string): void {\n\t\tthis.selectBoxOptions.ariaLabel = label;\n\t\tthis.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n\t}\n\n\tpublic focus(): void {\n\t\tif (this.selectElement) {\n\t\t\tthis.selectElement.focus();\n\t\t}\n\t}\n\n\tpublic blur(): void {\n\t\tif (this.selectElement) {\n\t\t\tthis.selectElement.blur();\n\t\t}\n\t}\n\n\tpublic render(container: HTMLElement): void {\n\t\tdom.addClass(container, 'select-container');\n\t\tcontainer.appendChild(this.selectElement);\n\t\tthis.applyStyles();\n\t}\n\n\tpublic style(styles: ISelectBoxStyles): void {\n\n\t\tconst content: string[] = [];\n\n\t\tthis.styles = styles;\n\n\t\t// Style non-native select mode\n\n\t\tif (this.styles.listFocusBackground) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n\t\t}\n\n\t\tif (this.styles.listFocusForeground) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused:not(:hover) { color: ${this.styles.listFocusForeground} !important; }`);\n\t\t}\n\n\t\tif (this.styles.decoratorRightForeground) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row .option-decorator-right { color: ${this.styles.decoratorRightForeground} !important; }`);\n\t\t}\n\n\t\tif (this.styles.selectBackground && this.styles.selectBorder && !this.styles.selectBorder.equals(this.styles.selectBackground)) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n\n\t\t}\n\t\telse if (this.styles.selectListBorder) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n\t\t}\n\n\t\t// Hover foreground - ignore for disabled options\n\t\tif (this.styles.listHoverForeground) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:hover { color: ${this.styles.listHoverForeground} !important; }`);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: ${this.styles.listActiveSelectionForeground} !important; }`);\n\t\t}\n\n\t\t// Hover background - ignore for disabled options\n\t\tif (this.styles.listHoverBackground) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: ${this.styles.selectBackground} !important; }`);\n\t\t}\n\n\t\t// Match quickOpen outline styles - ignore for disabled options\n\t\tif (this.styles.listFocusOutline) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n\n\t\t}\n\n\t\tif (this.styles.listHoverOutline) {\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:hover:not(.focused) { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n\t\t\tcontent.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { outline: none !important; }`);\n\t\t}\n\n\t\tthis.styleElement.innerHTML = content.join('\\n');\n\n\t\tthis.applyStyles();\n\t}\n\n\tpublic applyStyles(): void {\n\n\t\t// Style parent select\n\n\t\tif (this.selectElement) {\n\t\t\tconst background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n\t\t\tconst foreground = this.styles.selectForeground ? this.styles.selectForeground.toString() : null;\n\t\t\tconst border = this.styles.selectBorder ? this.styles.selectBorder.toString() : null;\n\n\t\t\tthis.selectElement.style.backgroundColor = background;\n\t\t\tthis.selectElement.style.color = foreground;\n\t\t\tthis.selectElement.style.borderColor = border;\n\t\t}\n\n\t\t// Style drop down select list (non-native mode only)\n\n\t\tif (this.selectList) {\n\t\t\tthis.styleList();\n\t\t}\n\t}\n\n\tprivate styleList() {\n\t\tif (this.selectList) {\n\t\t\tlet background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n\t\t\tthis.selectList.style({});\n\n\t\t\tlet listBackground = this.styles.selectListBackground ? this.styles.selectListBackground.toString() : background;\n\t\t\tthis.selectDropDownListContainer.style.backgroundColor = listBackground;\n\t\t\tthis.selectionDetailsPane.style.backgroundColor = listBackground;\n\t\t\tconst optionsBorder = this.styles.focusBorder ? this.styles.focusBorder.toString() : null;\n\t\t\tthis.selectDropDownContainer.style.outlineColor = optionsBorder;\n\t\t\tthis.selectDropDownContainer.style.outlineOffset = '-1px';\n\t\t}\n\t}\n\n\tprivate createOption(value: string, index: number, disabled?: boolean): HTMLOptionElement {\n\t\tlet option = document.createElement('option');\n\t\toption.value = value;\n\t\toption.text = value;\n\t\toption.disabled = !!disabled;\n\n\t\treturn option;\n\t}\n\n\t// ContextView dropdown methods\n\n\tprivate showSelectDropDown() {\n\t\tthis.selectionDetailsPane.innerText = '';\n\n\t\tif (!this.contextViewProvider || this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Lazily create and populate list only at open, moved from constructor\n\t\tthis.createSelectList(this.selectDropDownContainer);\n\t\tthis.setOptionsList();\n\n\t\t// This allows us to flip the position based on measurement\n\t\t// Set drop-down position above/below from required height and margins\n\t\t// If pre-layout cannot fit at least one option do not show drop-down\n\n\t\tthis.contextViewProvider.showContextView({\n\t\t\tgetAnchor: () => this.selectElement,\n\t\t\trender: (container: HTMLElement) => this.renderSelectDropDown(container, true),\n\t\t\tlayout: () => {\n\t\t\t\tthis.layoutSelectDropDown();\n\t\t\t},\n\t\t\tonHide: () => {\n\t\t\t\tdom.toggleClass(this.selectDropDownContainer, 'visible', false);\n\t\t\t\tdom.toggleClass(this.selectElement, 'synthetic-focus', false);\n\t\t\t},\n\t\t\tanchorPosition: this._dropDownPosition\n\t\t});\n\n\t\t// Hide so we can relay out\n\t\tthis._isVisible = true;\n\t\tthis.hideSelectDropDown(false);\n\n\t\tthis.contextViewProvider.showContextView({\n\t\t\tgetAnchor: () => this.selectElement,\n\t\t\trender: (container: HTMLElement) => this.renderSelectDropDown(container),\n\t\t\tlayout: () => this.layoutSelectDropDown(),\n\t\t\tonHide: () => {\n\t\t\t\tdom.toggleClass(this.selectDropDownContainer, 'visible', false);\n\t\t\t\tdom.toggleClass(this.selectElement, 'synthetic-focus', false);\n\t\t\t},\n\t\t\tanchorPosition: this._dropDownPosition\n\t\t});\n\n\t\t// Track initial selection the case user escape, blur\n\t\tthis._currentSelection = this.selected;\n\t\tthis._isVisible = true;\n\t}\n\n\tprivate hideSelectDropDown(focusSelect: boolean) {\n\t\tif (!this.contextViewProvider || !this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isVisible = false;\n\n\t\tif (focusSelect) {\n\t\t\tthis.selectElement.focus();\n\t\t}\n\n\t\tthis.contextViewProvider.hideContextView();\n\t}\n\n\tprivate renderSelectDropDown(container: HTMLElement, preLayoutPosition?: boolean): IDisposable {\n\t\tcontainer.appendChild(this.selectDropDownContainer);\n\n\t\t// Pre-Layout allows us to change position\n\t\tthis.layoutSelectDropDown(preLayoutPosition);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\t// contextView will dispose itself if moving from one View to another\n\t\t\t\ttry {\n\t\t\t\t\tcontainer.removeChild(this.selectDropDownContainer); // remove to take out the CSS rules we add\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\t// Ignore, removed already by change of focus\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Iterate over detailed descriptions, find max height\n\tprivate measureMaxDetailsHeight(): number {\n\n\t\tlet maxDetailsPaneHeight = 0;\n\t\tthis.options.forEach((option, index) => {\n\n\t\t\tthis.selectionDetailsPane.innerText = '';\n\n\t\t\tif (option.description) {\n\t\t\t\tif (option.descriptionIsMarkdown) {\n\t\t\t\t\tthis.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(option.description));\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectionDetailsPane.innerText = option.description;\n\t\t\t\t}\n\t\t\t\tthis.selectionDetailsPane.style.display = 'block';\n\t\t\t} else {\n\t\t\t\tthis.selectionDetailsPane.style.display = 'none';\n\t\t\t}\n\n\t\t\tif (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n\t\t\t\tmaxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n\t\t\t}\n\t\t});\n\n\t\t// Reset description to selected\n\n\t\tthis.selectionDetailsPane.innerText = '';\n\t\tconst description = this.options[this.selected].description || null;\n\t\tconst descriptionIsMarkdown = this.options[this.selected].descriptionIsMarkdown || null;\n\n\t\tif (description) {\n\t\t\tif (descriptionIsMarkdown) {\n\t\t\t\tthis.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description));\n\t\t\t} else {\n\t\t\t\tthis.selectionDetailsPane.innerText = description;\n\t\t\t}\n\t\t\tthis.selectionDetailsPane.style.display = 'block';\n\t\t}\n\t\treturn maxDetailsPaneHeight;\n\t}\n\n\tprivate layoutSelectDropDown(preLayoutPosition?: boolean): boolean {\n\n\t\t// Avoid recursion from layout called in onListFocus\n\t\tif (this._skipLayout) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Layout ContextView drop down select list and container\n\t\t// Have to manage our vertical overflow, sizing, position below or above\n\t\t// Position has to be determined and set prior to contextView instantiation\n\n\t\tif (this.selectList) {\n\n\t\t\t// Make visible to enable measurements\n\t\t\tdom.toggleClass(this.selectDropDownContainer, 'visible', true);\n\n\t\t\tconst selectPosition = dom.getDomNodePagePosition(this.selectElement);\n\t\t\tconst styles = getComputedStyle(this.selectElement);\n\t\t\tconst verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n\t\t\tconst maxSelectDropDownHeightBelow = (window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0));\n\t\t\tconst maxSelectDropDownHeightAbove = (selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN);\n\n\t\t\t// Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n\t\t\tconst selectWidth = this.selectElement.offsetWidth;\n\t\t\tconst selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n\t\t\tconst selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n\n\t\t\tthis.selectDropDownContainer.style.width = selectOptimalWidth;\n\n\t\t\t// Get initial list height and determine space above and below\n\t\t\tthis.selectList.getHTMLElement().style.height = '';\n\t\t\tthis.selectList.layout();\n\t\t\tlet listHeight = this.selectList.contentHeight;\n\n\t\t\tconst maxDetailsPaneHeight = this._hasDetails ? this.measureMaxDetailsHeight() : 0;\n\n\t\t\tconst minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n\t\t\tconst maxVisibleOptionsBelow = ((Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n\t\t\tconst maxVisibleOptionsAbove = ((Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n\n\t\t\t// If we are only doing pre-layout check/adjust position only\n\t\t\t// Calculate vertical space available, flip up if insufficient\n\t\t\t// Use reflected padding on parent select, ContextView style\n\t\t\t// properties not available before DOM attachment\n\n\t\t\tif (preLayoutPosition) {\n\n\t\t\t\t// Check if select moved out of viewport , do not open\n\t\t\t\t// If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n\n\t\t\t\tif ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n\t\t\t\t\t|| selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n\t\t\t\t\t|| ((maxVisibleOptionsBelow < 1) && (maxVisibleOptionsAbove < 1))) {\n\t\t\t\t\t// Indicate we cannot open\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Determine if we have to flip up\n\t\t\t\t// Always show complete list items - never more than Max available vertical height\n\t\t\t\tif (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS\n\t\t\t\t\t&& maxVisibleOptionsAbove > maxVisibleOptionsBelow\n\t\t\t\t\t&& this.options.length > maxVisibleOptionsBelow\n\t\t\t\t) {\n\t\t\t\t\tthis._dropDownPosition = AnchorPosition.ABOVE;\n\t\t\t\t\tthis.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n\t\t\t\t\tthis.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n\t\t\t\t\tthis.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n\t\t\t\t\tthis.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n\n\t\t\t\t\tdom.removeClass(this.selectionDetailsPane, 'border-top');\n\t\t\t\t\tdom.addClass(this.selectionDetailsPane, 'border-bottom');\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._dropDownPosition = AnchorPosition.BELOW;\n\t\t\t\t\tthis.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n\t\t\t\t\tthis.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n\t\t\t\t\tthis.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n\t\t\t\t\tthis.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n\n\t\t\t\t\tdom.removeClass(this.selectionDetailsPane, 'border-bottom');\n\t\t\t\t\tdom.addClass(this.selectionDetailsPane, 'border-top');\n\t\t\t\t}\n\t\t\t\t// Do full layout on showSelectDropDown only\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Check if select out of viewport or cutting into status bar\n\t\t\tif ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n\t\t\t\t|| selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n\t\t\t\t|| (this._dropDownPosition === AnchorPosition.BELOW && maxVisibleOptionsBelow < 1)\n\t\t\t\t|| (this._dropDownPosition === AnchorPosition.ABOVE && maxVisibleOptionsAbove < 1)) {\n\t\t\t\t// Cannot properly layout, close and hide\n\t\t\t\tthis.hideSelectDropDown(true);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// SetUp list dimensions and layout - account for container padding\n\t\t\t// Use position to check above or below available space\n\t\t\tif (this._dropDownPosition === AnchorPosition.BELOW) {\n\t\t\t\tif (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n\t\t\t\t\t// If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n\t\t\t\t\t// Hide drop-down, hide contextview, focus on parent select\n\t\t\t\t\tthis.hideSelectDropDown(true);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Adjust list height to max from select bottom to margin (default/minBottomMargin)\n\t\t\t\tif (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n\t\t\t\t\tlistHeight = (maxVisibleOptionsBelow * this.getHeight());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n\t\t\t\t\tlistHeight = (maxVisibleOptionsAbove * this.getHeight());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set adjusted list height and relayout\n\t\t\tthis.selectList.layout(listHeight);\n\t\t\tthis.selectList.domFocus();\n\n\t\t\t// Finally set focus on selected item\n\t\t\tif (this.selectList.length > 0) {\n\t\t\t\tthis.selectList.setFocus([this.selected || 0]);\n\t\t\t\tthis.selectList.reveal(this.selectList.getFocus()[0] || 0);\n\t\t\t}\n\n\t\t\tif (this._hasDetails) {\n\t\t\t\t// Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n\t\t\t\tthis.selectList.getHTMLElement().style.height = (listHeight + verticalPadding) + 'px';\n\t\t\t\tthis.selectDropDownContainer.style.height = '';\n\t\t\t} else {\n\t\t\t\tthis.selectDropDownContainer.style.height = (listHeight + verticalPadding) + 'px';\n\t\t\t}\n\n\t\t\tthis.selectDropDownContainer.style.width = selectOptimalWidth;\n\n\t\t\t// Maintain focus outline on parent select as well as list container - tabindex for focus\n\t\t\tthis.selectDropDownListContainer.setAttribute('tabindex', '0');\n\t\t\tdom.toggleClass(this.selectElement, 'synthetic-focus', true);\n\t\t\tdom.toggleClass(this.selectDropDownContainer, 'synthetic-focus', true);\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate setWidthControlElement(container: HTMLElement): number {\n\t\tlet elementWidth = 0;\n\n\t\tif (container && !!this.options) {\n\t\t\tlet longest = 0;\n\t\t\tlet longestLength = 0;\n\n\t\t\tthis.options.forEach((option, index) => {\n\t\t\t\tconst len = option.text.length + (!!option.decoratorRight ? option.decoratorRight.length : 0);\n\t\t\t\tif (len > longestLength) {\n\t\t\t\t\tlongest = index;\n\t\t\t\t\tlongestLength = len;\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\tcontainer.innerHTML = this.options[longest].text + (!!this.options[longest].decoratorRight ? (this.options[longest].decoratorRight + ' ') : '');\n\t\t\telementWidth = dom.getTotalWidth(container);\n\t\t}\n\n\t\treturn elementWidth;\n\t}\n\n\tprivate createSelectList(parent: HTMLElement): void {\n\n\t\t// If we have already constructive list on open, skip\n\t\tif (this.selectList) {\n\t\t\treturn;\n\t\t}\n\n\t\t// SetUp container for list\n\t\tthis.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n\n\t\tthis.listRenderer = new SelectListRenderer();\n\n\t\tthis.selectList = new List(this.selectDropDownListContainer, this, [this.listRenderer], {\n\t\t\tariaLabel: this.selectBoxOptions.ariaLabel,\n\t\t\tuseShadows: false,\n\t\t\tverticalScrollMode: ScrollbarVisibility.Visible,\n\t\t\tkeyboardSupport: false,\n\t\t\tmouseSupport: false\n\t\t});\n\n\t\t// SetUp list keyboard controller - control navigation, disabled items, focus\n\t\tconst onSelectDropDownKeyDown = Event.chain(domEvent(this.selectDropDownListContainer, 'keydown'))\n\t\t\t.filter(() => this.selectList.length > 0)\n\t\t\t.map(e => new StandardKeyboardEvent(e));\n\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.Enter).on(e => this.onEnter(e), this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.Escape).on(e => this.onEscape(e), this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.UpArrow).on(this.onUpArrow, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.DownArrow).on(this.onDownArrow, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.PageDown).on(this.onPageDown, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.PageUp).on(this.onPageUp, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.Home).on(this.onHome, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => e.keyCode === KeyCode.End).on(this.onEnd, this, this.toDispose);\n\t\tonSelectDropDownKeyDown.filter(e => (e.keyCode >= KeyCode.KEY_0 && e.keyCode <= KeyCode.KEY_Z) || (e.keyCode >= KeyCode.US_SEMICOLON && e.keyCode <= KeyCode.NUMPAD_DIVIDE)).on(this.onCharacter, this, this.toDispose);\n\n\t\t// SetUp list mouse controller - control navigation, disabled items, focus\n\n\t\tEvent.chain(domEvent(this.selectList.getHTMLElement(), 'mouseup'))\n\t\t\t.filter(() => this.selectList.length > 0)\n\t\t\t.on(e => this.onMouseUp(e), this, this.toDispose);\n\n\t\tthis.toDispose.push(\n\t\t\tthis.selectList.onDidBlur(_ => this.onListBlur()),\n\t\t\tthis.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])),\n\t\t\tthis.selectList.onFocusChange(e => this.onListFocus(e))\n\t\t);\n\n\t\tthis.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n\t\tthis.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n\n\t\tthis.styleList();\n\t}\n\n\t// List methods\n\n\t// List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n\tprivate onMouseUp(e: MouseEvent): void {\n\n\t\tdom.EventHelper.stop(e);\n\n\t\tconst target = <Element>e.target;\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check our mouse event is on an option (not scrollbar)\n\t\tif (!!target.classList.contains('slider')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst listRowElement = target.closest('.monaco-list-row');\n\n\t\tif (!listRowElement) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = Number(listRowElement.getAttribute('data-index'));\n\t\tconst disabled = listRowElement.classList.contains('option-disabled');\n\n\t\t// Ignore mouse selection of disabled options\n\t\tif (index >= 0 && index < this.options.length && !disabled) {\n\t\t\tthis.selected = index;\n\t\t\tthis.select(this.selected);\n\n\t\t\tthis.selectList.setFocus([this.selected]);\n\t\t\tthis.selectList.reveal(this.selectList.getFocus()[0]);\n\n\t\t\t// Only fire if selection change\n\t\t\tif (this.selected !== this._currentSelection) {\n\t\t\t\t// Set current = selected\n\t\t\t\tthis._currentSelection = this.selected;\n\n\t\t\t\tthis._onDidSelect.fire({\n\t\t\t\t\tindex: this.selectElement.selectedIndex,\n\t\t\t\t\tselected: this.options[this.selected].text\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.hideSelectDropDown(true);\n\t\t}\n\t}\n\n\t// List Exit - passive - implicit no selection change, hide drop-down\n\tprivate onListBlur(): void {\n\t\tif (this._sticky) { return; }\n\t\tif (this.selected !== this._currentSelection) {\n\t\t\t// Reset selected to current if no change\n\t\t\tthis.select(this._currentSelection);\n\t\t}\n\n\t\tthis.hideSelectDropDown(false);\n\t}\n\n\n\tprivate renderDescriptionMarkdown(text: string): HTMLElement {\n\t\tconst cleanRenderedMarkdown = (element: Node) => {\n\t\t\tfor (let i = 0; i < element.childNodes.length; i++) {\n\t\t\t\tconst child = element.childNodes.item(i);\n\n\t\t\t\tconst tagName = (<Element>child).tagName && (<Element>child).tagName.toLowerCase();\n\t\t\t\tif (tagName === 'img') {\n\t\t\t\t\telement.removeChild(child);\n\t\t\t\t} else {\n\t\t\t\t\tcleanRenderedMarkdown(child);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst renderedMarkdown = renderMarkdown({ value: text });\n\n\t\trenderedMarkdown.classList.add('select-box-description-markdown');\n\t\tcleanRenderedMarkdown(renderedMarkdown);\n\n\t\treturn renderedMarkdown;\n\t}\n\n\t// List Focus Change - passive - update details pane with newly focused element's data\n\tprivate onListFocus(e: IListEvent<ISelectOptionItem>) {\n\t\t// Skip during initial layout\n\t\tif (!this._isVisible || !this._hasDetails) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.selectionDetailsPane.innerText = '';\n\t\tconst selectedIndex = e.indexes[0];\n\t\tconst description = this.options[selectedIndex].description;\n\t\tconst descriptionIsMarkdown = this.options[selectedIndex].descriptionIsMarkdown;\n\n\t\tif (description) {\n\t\t\tif (descriptionIsMarkdown) {\n\t\t\t\tthis.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description));\n\t\t\t} else {\n\t\t\t\tthis.selectionDetailsPane.innerText = description;\n\t\t\t}\n\t\t\tthis.selectionDetailsPane.style.display = 'block';\n\t\t} else {\n\t\t\tthis.selectionDetailsPane.style.display = 'none';\n\t\t}\n\n\t\t// Avoid recursion\n\t\tthis._skipLayout = true;\n\t\tthis.contextViewProvider.layout();\n\t\tthis._skipLayout = false;\n\n\t}\n\n\t// List keyboard controller\n\n\t// List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n\tprivate onEscape(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\t// Reset selection to value when opened\n\t\tthis.select(this._currentSelection);\n\t\tthis.hideSelectDropDown(true);\n\t}\n\n\t// List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n\tprivate onEnter(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\t// Only fire if selection change\n\t\tif (this.selected !== this._currentSelection) {\n\t\t\tthis._currentSelection = this.selected;\n\t\t\tthis._onDidSelect.fire({\n\t\t\t\tindex: this.selectElement.selectedIndex,\n\t\t\t\tselected: this.options[this.selected].text\n\t\t\t});\n\t\t}\n\n\t\tthis.hideSelectDropDown(true);\n\t}\n\n\t// List navigation - have to handle a disabled option (jump over)\n\tprivate onDownArrow(): void {\n\t\tif (this.selected < this.options.length - 1) {\n\n\t\t\t// Skip disabled options\n\t\t\tconst nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n\n\t\t\tif (nextOptionDisabled && this.options.length > this.selected + 2) {\n\t\t\t\tthis.selected += 2;\n\t\t\t} else if (nextOptionDisabled) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.selected++;\n\t\t\t}\n\n\t\t\t// Set focus/selection - only fire event when closing drop-down or on blur\n\t\t\tthis.select(this.selected);\n\t\t\tthis.selectList.setFocus([this.selected]);\n\t\t\tthis.selectList.reveal(this.selectList.getFocus()[0]);\n\t\t}\n\t}\n\n\tprivate onUpArrow(): void {\n\t\tif (this.selected > 0) {\n\t\t\t// Skip disabled options\n\t\t\tconst previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n\t\t\tif (previousOptionDisabled && this.selected > 1) {\n\t\t\t\tthis.selected -= 2;\n\t\t\t} else {\n\t\t\t\tthis.selected--;\n\t\t\t}\n\t\t\t// Set focus/selection - only fire event when closing drop-down or on blur\n\t\t\tthis.select(this.selected);\n\t\t\tthis.selectList.setFocus([this.selected]);\n\t\t\tthis.selectList.reveal(this.selectList.getFocus()[0]);\n\t\t}\n\t}\n\n\tprivate onPageUp(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\tthis.selectList.focusPreviousPage();\n\n\t\t// Allow scrolling to settle\n\t\tsetTimeout(() => {\n\t\t\tthis.selected = this.selectList.getFocus()[0];\n\n\t\t\t// Shift selection down if we land on a disabled option\n\t\t\tif (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n\t\t\t\tthis.selected++;\n\t\t\t\tthis.selectList.setFocus([this.selected]);\n\t\t\t}\n\t\t\tthis.selectList.reveal(this.selected);\n\t\t\tthis.select(this.selected);\n\t\t}, 1);\n\t}\n\n\tprivate onPageDown(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\tthis.selectList.focusNextPage();\n\n\t\t// Allow scrolling to settle\n\t\tsetTimeout(() => {\n\t\t\tthis.selected = this.selectList.getFocus()[0];\n\n\t\t\t// Shift selection up if we land on a disabled option\n\t\t\tif (this.options[this.selected].isDisabled && this.selected > 0) {\n\t\t\t\tthis.selected--;\n\t\t\t\tthis.selectList.setFocus([this.selected]);\n\t\t\t}\n\t\t\tthis.selectList.reveal(this.selected);\n\t\t\tthis.select(this.selected);\n\t\t}, 1);\n\t}\n\n\tprivate onHome(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\tif (this.options.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\tthis.selected = 0;\n\t\tif (this.options[this.selected].isDisabled && this.selected > 1) {\n\t\t\tthis.selected++;\n\t\t}\n\t\tthis.selectList.setFocus([this.selected]);\n\t\tthis.selectList.reveal(this.selected);\n\t\tthis.select(this.selected);\n\t}\n\n\tprivate onEnd(e: StandardKeyboardEvent): void {\n\t\tdom.EventHelper.stop(e);\n\n\t\tif (this.options.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\tthis.selected = this.options.length - 1;\n\t\tif (this.options[this.selected].isDisabled && this.selected > 1) {\n\t\t\tthis.selected--;\n\t\t}\n\t\tthis.selectList.setFocus([this.selected]);\n\t\tthis.selectList.reveal(this.selected);\n\t\tthis.select(this.selected);\n\t}\n\n\t// Mimic option first character navigation of native select\n\tprivate onCharacter(e: StandardKeyboardEvent): void {\n\t\tconst ch = KeyCodeUtils.toString(e.keyCode);\n\t\tlet optionIndex = -1;\n\n\t\tfor (let i = 0; i < this.options.length - 1; i++) {\n\t\t\toptionIndex = (i + this.selected + 1) % this.options.length;\n\t\t\tif (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n\t\t\t\tthis.select(optionIndex);\n\t\t\t\tthis.selectList.setFocus([optionIndex]);\n\t\t\t\tthis.selectList.reveal(this.selectList.getFocus()[0]);\n\t\t\t\tdom.EventHelper.stop(e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.hideSelectDropDown(false);\n\t\tthis.toDispose = dispose(this.toDispose);\n\t}\n}\n"]}]}