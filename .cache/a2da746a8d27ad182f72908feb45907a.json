{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/actions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/actions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar descriptors_1 = require(\"vs/platform/instantiation/common/descriptors\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar event_1 = require(\"vs/base/common/event\");\nfunction isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexports.isIMenuItem = isIMenuItem;\nfunction isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexports.isISubmenuItem = isISubmenuItem;\nvar MenuId;\n(function (MenuId) {\n    MenuId[MenuId[\"CommandPalette\"] = 0] = \"CommandPalette\";\n    MenuId[MenuId[\"DebugBreakpointsContext\"] = 1] = \"DebugBreakpointsContext\";\n    MenuId[MenuId[\"DebugCallStackContext\"] = 2] = \"DebugCallStackContext\";\n    MenuId[MenuId[\"DebugConsoleContext\"] = 3] = \"DebugConsoleContext\";\n    MenuId[MenuId[\"DebugVariablesContext\"] = 4] = \"DebugVariablesContext\";\n    MenuId[MenuId[\"DebugWatchContext\"] = 5] = \"DebugWatchContext\";\n    MenuId[MenuId[\"DebugToolBar\"] = 6] = \"DebugToolBar\";\n    MenuId[MenuId[\"EditorContext\"] = 7] = \"EditorContext\";\n    MenuId[MenuId[\"EditorTitle\"] = 8] = \"EditorTitle\";\n    MenuId[MenuId[\"EditorTitleContext\"] = 9] = \"EditorTitleContext\";\n    MenuId[MenuId[\"EmptyEditorGroupContext\"] = 10] = \"EmptyEditorGroupContext\";\n    MenuId[MenuId[\"ExplorerContext\"] = 11] = \"ExplorerContext\";\n    MenuId[MenuId[\"MenubarAppearanceMenu\"] = 12] = \"MenubarAppearanceMenu\";\n    MenuId[MenuId[\"MenubarDebugMenu\"] = 13] = \"MenubarDebugMenu\";\n    MenuId[MenuId[\"MenubarEditMenu\"] = 14] = \"MenubarEditMenu\";\n    MenuId[MenuId[\"MenubarFileMenu\"] = 15] = \"MenubarFileMenu\";\n    MenuId[MenuId[\"MenubarGoMenu\"] = 16] = \"MenubarGoMenu\";\n    MenuId[MenuId[\"MenubarHelpMenu\"] = 17] = \"MenubarHelpMenu\";\n    MenuId[MenuId[\"MenubarLayoutMenu\"] = 18] = \"MenubarLayoutMenu\";\n    MenuId[MenuId[\"MenubarNewBreakpointMenu\"] = 19] = \"MenubarNewBreakpointMenu\";\n    MenuId[MenuId[\"MenubarPreferencesMenu\"] = 20] = \"MenubarPreferencesMenu\";\n    MenuId[MenuId[\"MenubarRecentMenu\"] = 21] = \"MenubarRecentMenu\";\n    MenuId[MenuId[\"MenubarSelectionMenu\"] = 22] = \"MenubarSelectionMenu\";\n    MenuId[MenuId[\"MenubarSwitchEditorMenu\"] = 23] = \"MenubarSwitchEditorMenu\";\n    MenuId[MenuId[\"MenubarSwitchGroupMenu\"] = 24] = \"MenubarSwitchGroupMenu\";\n    MenuId[MenuId[\"MenubarTerminalMenu\"] = 25] = \"MenubarTerminalMenu\";\n    MenuId[MenuId[\"MenubarViewMenu\"] = 26] = \"MenubarViewMenu\";\n    MenuId[MenuId[\"OpenEditorsContext\"] = 27] = \"OpenEditorsContext\";\n    MenuId[MenuId[\"ProblemsPanelContext\"] = 28] = \"ProblemsPanelContext\";\n    MenuId[MenuId[\"SCMChangeContext\"] = 29] = \"SCMChangeContext\";\n    MenuId[MenuId[\"SCMResourceContext\"] = 30] = \"SCMResourceContext\";\n    MenuId[MenuId[\"SCMResourceGroupContext\"] = 31] = \"SCMResourceGroupContext\";\n    MenuId[MenuId[\"SCMSourceControl\"] = 32] = \"SCMSourceControl\";\n    MenuId[MenuId[\"SCMTitle\"] = 33] = \"SCMTitle\";\n    MenuId[MenuId[\"SearchContext\"] = 34] = \"SearchContext\";\n    MenuId[MenuId[\"StatusBarWindowIndicatorMenu\"] = 35] = \"StatusBarWindowIndicatorMenu\";\n    MenuId[MenuId[\"TouchBarContext\"] = 36] = \"TouchBarContext\";\n    MenuId[MenuId[\"ViewItemContext\"] = 37] = \"ViewItemContext\";\n    MenuId[MenuId[\"ViewTitle\"] = 38] = \"ViewTitle\";\n})(MenuId = exports.MenuId || (exports.MenuId = {}));\nexports.IMenuService = instantiation_1.createDecorator('menuService');\nexports.MenuRegistry = new /** @class */ (function () {\n    function class_1() {\n        this._commands = Object.create(null);\n        this._menuItems = Object.create(null);\n        this._onDidChangeMenu = new event_1.Emitter();\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    class_1.prototype.addCommand = function (command) {\n        var _this = this;\n        this._commands[command.id] = command;\n        this._onDidChangeMenu.fire(MenuId.CommandPalette);\n        return {\n            dispose: function () {\n                if (delete _this._commands[command.id]) {\n                    _this._onDidChangeMenu.fire(MenuId.CommandPalette);\n                }\n            }\n        };\n    };\n    class_1.prototype.getCommand = function (id) {\n        return this._commands[id];\n    };\n    class_1.prototype.getCommands = function () {\n        var result = Object.create(null);\n        for (var key in this._commands) {\n            result[key] = this.getCommand(key);\n        }\n        return result;\n    };\n    class_1.prototype.appendMenuItem = function (id, item) {\n        var _this = this;\n        var array = this._menuItems[id];\n        if (!array) {\n            this._menuItems[id] = array = [item];\n        }\n        else {\n            array.push(item);\n        }\n        this._onDidChangeMenu.fire(id);\n        return {\n            dispose: function () {\n                var idx = array.indexOf(item);\n                if (idx >= 0) {\n                    array.splice(idx, 1);\n                    _this._onDidChangeMenu.fire(id);\n                }\n            }\n        };\n    };\n    class_1.prototype.getMenuItems = function (id) {\n        var result = (this._menuItems[id] || []).slice(0);\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    };\n    class_1.prototype._appendImplicitItems = function (result) {\n        var set = new Set();\n        var temp = result.filter(function (item) { return isIMenuItem(item); });\n        for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n            var _a = temp_1[_i], command = _a.command, alt = _a.alt;\n            set.add(command.id);\n            if (alt) {\n                set.add(alt.id);\n            }\n        }\n        for (var id in this._commands) {\n            if (!set.has(id)) {\n                result.push({ command: this._commands[id] });\n            }\n        }\n    };\n    return class_1;\n}());\nvar ExecuteCommandAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExecuteCommandAction, _super);\n    function ExecuteCommandAction(id, label, _commandService) {\n        var _this = _super.call(this, id, label) || this;\n        _this._commandService = _commandService;\n        return _this;\n    }\n    ExecuteCommandAction.prototype.run = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        return (_a = this._commandService).executeCommand.apply(_a, [this.id].concat(args));\n    };\n    ExecuteCommandAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], ExecuteCommandAction);\n    return ExecuteCommandAction;\n}(actions_1.Action));\nexports.ExecuteCommandAction = ExecuteCommandAction;\nvar SubmenuItemAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SubmenuItemAction, _super);\n    function SubmenuItemAction(item) {\n        var _this = this;\n        typeof item.title === 'string' ? _this = _super.call(this, '', item.title, 'submenu') || this : _this = _super.call(this, '', item.title.value, 'submenu') || this;\n        _this.item = item;\n        return _this;\n    }\n    return SubmenuItemAction;\n}(actions_1.Action));\nexports.SubmenuItemAction = SubmenuItemAction;\nvar MenuItemAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MenuItemAction, _super);\n    function MenuItemAction(item, alt, options, contextKeyService, commandService) {\n        var _this = this;\n        typeof item.title === 'string' ? _this = _super.call(this, item.id, item.title, commandService) || this : _this = _super.call(this, item.id, item.title.value, commandService) || this;\n        _this._cssClass = undefined;\n        _this._enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        _this._checked = Boolean(item.toggled && contextKeyService.contextMatchesRules(item.toggled));\n        _this._options = options || {};\n        _this.item = item;\n        _this.alt = alt ? new MenuItemAction(alt, undefined, _this._options, contextKeyService, commandService) : undefined;\n        return _this;\n    }\n    MenuItemAction.prototype.run = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var runArgs = [];\n        if (this._options.arg) {\n            runArgs = runArgs.concat([this._options.arg]);\n        }\n        if (this._options.shouldForwardArgs) {\n            runArgs = runArgs.concat(args);\n        }\n        return _super.prototype.run.apply(this, runArgs);\n    };\n    MenuItemAction = tslib_1.__decorate([\n        tslib_1.__param(3, contextkey_1.IContextKeyService),\n        tslib_1.__param(4, commands_1.ICommandService)\n    ], MenuItemAction);\n    return MenuItemAction;\n}(ExecuteCommandAction));\nexports.MenuItemAction = MenuItemAction;\nvar SyncActionDescriptor = /** @class */ (function () {\n    function SyncActionDescriptor(ctor, id, label, keybindings, keybindingContext, keybindingWeight) {\n        this._id = id;\n        this._label = label;\n        this._keybindings = keybindings;\n        this._keybindingContext = keybindingContext;\n        this._keybindingWeight = keybindingWeight;\n        this._descriptor = descriptors_1.createSyncDescriptor(ctor, this._id, this._label);\n    }\n    Object.defineProperty(SyncActionDescriptor.prototype, \"syncDescriptor\", {\n        get: function () {\n            return this._descriptor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SyncActionDescriptor.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SyncActionDescriptor.prototype, \"label\", {\n        get: function () {\n            return this._label;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SyncActionDescriptor.prototype, \"keybindings\", {\n        get: function () {\n            return this._keybindings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SyncActionDescriptor.prototype, \"keybindingContext\", {\n        get: function () {\n            return this._keybindingContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SyncActionDescriptor.prototype, \"keybindingWeight\", {\n        get: function () {\n            return this._keybindingWeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SyncActionDescriptor;\n}());\nexports.SyncActionDescriptor = SyncActionDescriptor;\nfunction registerAction(desc) {\n    var id = desc.id, handler = desc.handler, title = desc.title, category = desc.category, menu = desc.menu, keybinding = desc.keybinding;\n    // 1) register as command\n    commands_1.CommandsRegistry.registerCommand(id, handler);\n    // 2) menus\n    if (menu && title) {\n        var command = { id: id, title: title, category: category };\n        var menuId = menu.menuId, when = menu.when, group = menu.group;\n        exports.MenuRegistry.appendMenuItem(menuId, {\n            command: command,\n            when: when,\n            group: group\n        });\n    }\n    // 3) keybindings\n    if (keybinding) {\n        var when = keybinding.when, weight = keybinding.weight, keys = keybinding.keys;\n        keybindingsRegistry_1.KeybindingsRegistry.registerKeybindingRule({\n            id: id,\n            when: when,\n            weight: weight || 0,\n            primary: keys.primary,\n            secondary: keys.secondary,\n            linux: keys.linux,\n            mac: keys.mac,\n            win: keys.win\n        });\n    }\n}\nexports.registerAction = registerAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/actions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/actions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { SyncDescriptor0, createSyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IConstructorSignature2, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindings, KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService, ICommandHandler, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface ILocalizedString {\n\tvalue: string;\n\toriginal: string;\n}\n\nexport interface IBaseCommandAction {\n\tid: string;\n\ttitle: string | ILocalizedString;\n\tcategory?: string | ILocalizedString;\n}\n\nexport interface ICommandAction extends IBaseCommandAction {\n\ticonLocation?: { dark: URI; light?: URI; };\n\tprecondition?: ContextKeyExpr;\n\ttoggled?: ContextKeyExpr;\n}\n\nexport interface ISerializableCommandAction extends IBaseCommandAction {\n\ticonLocation?: { dark: UriComponents; light?: UriComponents; };\n}\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\twhen?: ContextKeyExpr;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ILocalizedString;\n\tsubmenu: MenuId;\n\twhen?: ContextKeyExpr;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n}\n\nexport function isIMenuItem(item: IMenuItem | ISubmenuItem): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: IMenuItem | ISubmenuItem): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport const enum MenuId {\n\tCommandPalette,\n\tDebugBreakpointsContext,\n\tDebugCallStackContext,\n\tDebugConsoleContext,\n\tDebugVariablesContext,\n\tDebugWatchContext,\n\tDebugToolBar,\n\tEditorContext,\n\tEditorTitle,\n\tEditorTitleContext,\n\tEmptyEditorGroupContext,\n\tExplorerContext,\n\tMenubarAppearanceMenu,\n\tMenubarDebugMenu,\n\tMenubarEditMenu,\n\tMenubarFileMenu,\n\tMenubarGoMenu,\n\tMenubarHelpMenu,\n\tMenubarLayoutMenu,\n\tMenubarNewBreakpointMenu,\n\tMenubarPreferencesMenu,\n\tMenubarRecentMenu,\n\tMenubarSelectionMenu,\n\tMenubarSwitchEditorMenu,\n\tMenubarSwitchGroupMenu,\n\tMenubarTerminalMenu,\n\tMenubarViewMenu,\n\tOpenEditorsContext,\n\tProblemsPanelContext,\n\tSCMChangeContext,\n\tSCMResourceContext,\n\tSCMResourceGroupContext,\n\tSCMSourceControl,\n\tSCMTitle,\n\tSearchContext,\n\tStatusBarWindowIndicatorMenu,\n\tTouchBarContext,\n\tViewItemContext,\n\tViewTitle,\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenu | undefined>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuService {\n\n\t_serviceBrand: any;\n\n\tcreateMenu(id: MenuId, scopedKeybindingService: IContextKeyService): IMenu;\n}\n\nexport interface IMenuRegistry {\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tgetCommand(id: string): ICommandAction;\n\tgetCommands(): ICommandsMap;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n\treadonly onDidChangeMenu: Event<MenuId>;\n}\n\nexport interface ICommandsMap {\n\t[id: string]: ICommandAction;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands: { [id: string]: ICommandAction } = Object.create(null);\n\tprivate readonly _menuItems: { [loc: number]: Array<IMenuItem | ISubmenuItem> } = Object.create(null);\n\tprivate readonly _onDidChangeMenu = new Emitter<MenuId>();\n\n\treadonly onDidChangeMenu: Event<MenuId> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands[command.id] = command;\n\t\tthis._onDidChangeMenu.fire(MenuId.CommandPalette);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (delete this._commands[command.id]) {\n\t\t\t\t\tthis._onDidChangeMenu.fire(MenuId.CommandPalette);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tgetCommand(id: string): ICommandAction {\n\t\treturn this._commands[id];\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst result: ICommandsMap = Object.create(null);\n\t\tfor (const key in this._commands) {\n\t\t\tresult[key] = this.getCommand(key);\n\t\t}\n\t\treturn result;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet array = this._menuItems[id];\n\t\tif (!array) {\n\t\t\tthis._menuItems[id] = array = [item];\n\t\t} else {\n\t\t\tarray.push(item);\n\t\t}\n\t\tthis._onDidChangeMenu.fire(id);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst idx = array.indexOf(item);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tarray.splice(idx, 1);\n\t\t\t\t\tthis._onDidChangeMenu.fire(id);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tconst result = (this._menuItems[id] || []).slice(0);\n\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tconst temp = result.filter(item => { return isIMenuItem(item); }) as IMenuItem[];\n\n\t\tfor (const { command, alt } of temp) {\n\t\t\tset.add(command.id);\n\t\t\tif (alt) {\n\t\t\t\tset.add(alt.id);\n\t\t\t}\n\t\t}\n\t\tfor (let id in this._commands) {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command: this._commands[id] });\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport class ExecuteCommandAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ICommandService private readonly _commandService: ICommandService) {\n\n\t\tsuper(id, label);\n\t}\n\n\trun(...args: any[]): Promise<any> {\n\t\treturn this._commandService.executeCommand(this.id, ...args);\n\t}\n}\n\nexport class SubmenuItemAction extends Action {\n\n\treadonly item: ISubmenuItem;\n\tconstructor(item: ISubmenuItem) {\n\t\ttypeof item.title === 'string' ? super('', item.title, 'submenu') : super('', item.title.value, 'submenu');\n\t\tthis.item = item;\n\t}\n}\n\nexport class MenuItemAction extends ExecuteCommandAction {\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate _options: IMenuActionOptions;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService commandService: ICommandService\n\t) {\n\t\ttypeof item.title === 'string' ? super(item.id, item.title, commandService) : super(item.id, item.title.value, commandService);\n\t\tthis._cssClass = undefined;\n\t\tthis._enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis._checked = Boolean(item.toggled && contextKeyService.contextMatchesRules(item.toggled));\n\n\t\tthis._options = options || {};\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, this._options, contextKeyService, commandService) : undefined;\n\t}\n\n\trun(...args: any[]): Promise<any> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn super.run(...runArgs);\n\t}\n}\n\nexport class SyncActionDescriptor {\n\n\tprivate _descriptor: SyncDescriptor0<Action>;\n\n\tprivate _id: string;\n\tprivate _label?: string;\n\tprivate _keybindings: IKeybindings | undefined;\n\tprivate _keybindingContext: ContextKeyExpr | undefined;\n\tprivate _keybindingWeight: number | undefined;\n\n\tconstructor(ctor: IConstructorSignature2<string, string, Action>,\n\t\tid: string, label: string | undefined, keybindings?: IKeybindings, keybindingContext?: ContextKeyExpr, keybindingWeight?: number\n\t) {\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._keybindings = keybindings;\n\t\tthis._keybindingContext = keybindingContext;\n\t\tthis._keybindingWeight = keybindingWeight;\n\t\tthis._descriptor = createSyncDescriptor(ctor, this._id, this._label);\n\t}\n\n\tpublic get syncDescriptor(): SyncDescriptor0<Action> {\n\t\treturn this._descriptor;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get label(): string | undefined {\n\t\treturn this._label;\n\t}\n\n\tpublic get keybindings(): IKeybindings | undefined {\n\t\treturn this._keybindings;\n\t}\n\n\tpublic get keybindingContext(): ContextKeyExpr | undefined {\n\t\treturn this._keybindingContext;\n\t}\n\n\tpublic get keybindingWeight(): number | undefined {\n\t\treturn this._keybindingWeight;\n\t}\n}\n\n\nexport interface IActionDescriptor {\n\tid: string;\n\thandler: ICommandHandler;\n\n\t// ICommandUI\n\ttitle?: ILocalizedString;\n\tcategory?: string;\n\tf1?: boolean;\n\n\t//\n\tmenu?: {\n\t\tmenuId: MenuId,\n\t\twhen?: ContextKeyExpr;\n\t\tgroup?: string;\n\t};\n\n\t//\n\tkeybinding?: {\n\t\twhen?: ContextKeyExpr;\n\t\tweight?: number;\n\t\tkeys: IKeybindings;\n\t};\n}\n\n\nexport function registerAction(desc: IActionDescriptor) {\n\n\tconst { id, handler, title, category, menu, keybinding } = desc;\n\n\t// 1) register as command\n\tCommandsRegistry.registerCommand(id, handler);\n\n\t// 2) menus\n\tif (menu && title) {\n\t\tlet command = { id, title, category };\n\t\tlet { menuId, when, group } = menu;\n\t\tMenuRegistry.appendMenuItem(menuId, {\n\t\t\tcommand,\n\t\t\twhen,\n\t\t\tgroup\n\t\t});\n\t}\n\n\t// 3) keybindings\n\tif (keybinding) {\n\t\tlet { when, weight, keys } = keybinding;\n\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\tid,\n\t\t\twhen,\n\t\t\tweight: weight || 0,\n\t\t\tprimary: keys.primary,\n\t\t\tsecondary: keys.secondary,\n\t\t\tlinux: keys.linux,\n\t\t\tmac: keys.mac,\n\t\t\twin: keys.win\n\t\t});\n\t}\n}\n"]}]}