{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar viewPart_1 = require(\"vs/editor/browser/view/viewPart\");\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar types_1 = require(\"vs/base/common/types\");\nvar Coordinate = /** @class */ (function () {\n    function Coordinate(top, left) {\n        this.top = top;\n        this.left = left;\n    }\n    return Coordinate;\n}());\nvar ViewContentWidgets = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewContentWidgets, _super);\n    function ViewContentWidgets(context, viewDomNode) {\n        var _this = _super.call(this, context) || this;\n        _this._viewDomNode = viewDomNode;\n        _this._widgets = {};\n        _this.domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        viewPart_1.PartFingerprints.write(_this.domNode, viewPart_1.PartFingerprint.ContentWidgets);\n        _this.domNode.setClassName('contentWidgets');\n        _this.domNode.setPosition('absolute');\n        _this.domNode.setTop(0);\n        _this.overflowingContentWidgetsDomNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        viewPart_1.PartFingerprints.write(_this.overflowingContentWidgetsDomNode, viewPart_1.PartFingerprint.OverflowingContentWidgets);\n        _this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n        return _this;\n    }\n    ViewContentWidgets.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._widgets = {};\n    };\n    // --- begin event handlers\n    ViewContentWidgets.prototype.onConfigurationChanged = function (e) {\n        var keys = Object.keys(this._widgets);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var widgetId = keys_1[_i];\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    };\n    ViewContentWidgets.prototype.onDecorationsChanged = function (e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    };\n    ViewContentWidgets.prototype.onFlushed = function (e) {\n        return true;\n    };\n    ViewContentWidgets.prototype.onLineMappingChanged = function (e) {\n        var keys = Object.keys(this._widgets);\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var widgetId = keys_2[_i];\n            this._widgets[widgetId].onLineMappingChanged(e);\n        }\n        return true;\n    };\n    ViewContentWidgets.prototype.onLinesChanged = function (e) {\n        return true;\n    };\n    ViewContentWidgets.prototype.onLinesDeleted = function (e) {\n        return true;\n    };\n    ViewContentWidgets.prototype.onLinesInserted = function (e) {\n        return true;\n    };\n    ViewContentWidgets.prototype.onScrollChanged = function (e) {\n        return true;\n    };\n    ViewContentWidgets.prototype.onZonesChanged = function (e) {\n        return true;\n    };\n    // ---- end view event handlers\n    ViewContentWidgets.prototype.addWidget = function (_widget) {\n        var myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    };\n    ViewContentWidgets.prototype.setWidgetPosition = function (widget, position, range, preference) {\n        var myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(position, range, preference);\n        this.setShouldRender();\n    };\n    ViewContentWidgets.prototype.removeWidget = function (widget) {\n        var widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            var myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            var domNode = myWidget.domNode.domNode;\n            domNode.parentNode.removeChild(domNode);\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    };\n    ViewContentWidgets.prototype.shouldSuppressMouseDownOnWidget = function (widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    };\n    ViewContentWidgets.prototype.onBeforeRender = function (viewportData) {\n        var keys = Object.keys(this._widgets);\n        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n            var widgetId = keys_3[_i];\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    };\n    ViewContentWidgets.prototype.prepareRender = function (ctx) {\n        var keys = Object.keys(this._widgets);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var widgetId = keys_4[_i];\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    };\n    ViewContentWidgets.prototype.render = function (ctx) {\n        var keys = Object.keys(this._widgets);\n        for (var _i = 0, keys_5 = keys; _i < keys_5.length; _i++) {\n            var widgetId = keys_5[_i];\n            this._widgets[widgetId].render(ctx);\n        }\n    };\n    return ViewContentWidgets;\n}(viewPart_1.ViewPart));\nexports.ViewContentWidgets = ViewContentWidgets;\nvar Widget = /** @class */ (function () {\n    function Widget(context, viewDomNode, actual) {\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = fastDomNode_1.createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        this._fixedOverflowWidgets = this._context.configuration.editor.viewInfo.fixedOverflowWidgets;\n        this._contentWidth = this._context.configuration.editor.layoutInfo.contentWidth;\n        this._contentLeft = this._context.configuration.editor.layoutInfo.contentLeft;\n        this._lineHeight = this._context.configuration.editor.lineHeight;\n        this._setPosition(null, null);\n        this._preference = [];\n        this._cachedDomNodeClientWidth = -1;\n        this._cachedDomNodeClientHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    Widget.prototype.onConfigurationChanged = function (e) {\n        if (e.lineHeight) {\n            this._lineHeight = this._context.configuration.editor.lineHeight;\n        }\n        if (e.layoutInfo) {\n            this._contentLeft = this._context.configuration.editor.layoutInfo.contentLeft;\n            this._contentWidth = this._context.configuration.editor.layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    };\n    Widget.prototype.onLineMappingChanged = function (e) {\n        this._setPosition(this._position, this._range);\n    };\n    Widget.prototype._setPosition = function (position, range) {\n        this._position = types_1.withUndefinedAsNull(position);\n        this._range = types_1.withUndefinedAsNull(range);\n        this._viewPosition = null;\n        this._viewRange = null;\n        if (this._position) {\n            // Do not trust that widgets give a valid position\n            var validModelPosition = this._context.model.validateModelPosition(this._position);\n            if (this._context.model.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                this._viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition);\n            }\n        }\n        if (this._range) {\n            // Do not trust that widgets give a valid position\n            var validModelRange = this._context.model.validateModelRange(this._range);\n            this._viewRange = this._context.model.coordinatesConverter.convertModelRangeToViewRange(validModelRange);\n        }\n    };\n    Widget.prototype._getMaxWidth = function () {\n        return (this.allowEditorOverflow\n            ? window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n            : this._contentWidth);\n    };\n    Widget.prototype.setPosition = function (position, range, preference) {\n        this._setPosition(position, range);\n        this._preference = types_1.withUndefinedAsNull(preference);\n        this._cachedDomNodeClientWidth = -1;\n        this._cachedDomNodeClientHeight = -1;\n    };\n    Widget.prototype._layoutBoxInViewport = function (topLeft, bottomLeft, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        var aboveLineTop = topLeft.top;\n        var heightAboveLine = aboveLineTop;\n        // b) the box under the line\n        var underLineTop = bottomLeft.top + this._lineHeight;\n        var heightUnderLine = ctx.viewportHeight - underLineTop;\n        var aboveTop = aboveLineTop - height;\n        var fitsAbove = (heightAboveLine >= height);\n        var belowTop = underLineTop;\n        var fitsBelow = (heightUnderLine >= height);\n        // And its left\n        var actualAboveLeft = topLeft.left;\n        var actualBelowLeft = bottomLeft.left;\n        if (actualAboveLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n            actualAboveLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (actualBelowLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n            actualBelowLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (actualAboveLeft < ctx.scrollLeft) {\n            actualAboveLeft = ctx.scrollLeft;\n        }\n        if (actualBelowLeft < ctx.scrollLeft) {\n            actualBelowLeft = ctx.scrollLeft;\n        }\n        return {\n            fitsAbove: fitsAbove,\n            aboveTop: aboveTop,\n            aboveLeft: actualAboveLeft,\n            fitsBelow: fitsBelow,\n            belowTop: belowTop,\n            belowLeft: actualBelowLeft,\n        };\n    };\n    Widget.prototype._layoutBoxInPage = function (topLeft, bottomLeft, width, height, ctx) {\n        var aboveLeft0 = topLeft.left - ctx.scrollLeft;\n        var belowLeft0 = bottomLeft.left - ctx.scrollLeft;\n        if (aboveLeft0 < 0 || aboveLeft0 > this._contentWidth) {\n            // Don't render if position is scrolled outside viewport\n            return null;\n        }\n        var aboveTop = topLeft.top - height;\n        var belowTop = bottomLeft.top + this._lineHeight;\n        var aboveLeft = aboveLeft0 + this._contentLeft;\n        var belowLeft = belowLeft0 + this._contentLeft;\n        var domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        var absoluteAboveTop = domNodePosition.top + aboveTop - dom.StandardWindow.scrollY;\n        var absoluteBelowTop = domNodePosition.top + belowTop - dom.StandardWindow.scrollY;\n        var absoluteAboveLeft = domNodePosition.left + aboveLeft - dom.StandardWindow.scrollX;\n        var absoluteBelowLeft = domNodePosition.left + belowLeft - dom.StandardWindow.scrollX;\n        var INNER_WIDTH = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        var INNER_HEIGHT = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        // Leave some clearance to the bottom\n        var TOP_PADDING = 22;\n        var BOTTOM_PADDING = 22;\n        var fitsAbove = (absoluteAboveTop >= TOP_PADDING), fitsBelow = (absoluteBelowTop + height <= INNER_HEIGHT - BOTTOM_PADDING);\n        if (absoluteAboveLeft + width + 20 > INNER_WIDTH) {\n            var delta = absoluteAboveLeft - (INNER_WIDTH - width - 20);\n            absoluteAboveLeft -= delta;\n            aboveLeft -= delta;\n        }\n        if (absoluteBelowLeft + width + 20 > INNER_WIDTH) {\n            var delta = absoluteBelowLeft - (INNER_WIDTH - width - 20);\n            absoluteBelowLeft -= delta;\n            belowLeft -= delta;\n        }\n        if (absoluteAboveLeft < 0) {\n            var delta = absoluteAboveLeft;\n            absoluteAboveLeft -= delta;\n            aboveLeft -= delta;\n        }\n        if (absoluteBelowLeft < 0) {\n            var delta = absoluteBelowLeft;\n            absoluteBelowLeft -= delta;\n            belowLeft -= delta;\n        }\n        if (this._fixedOverflowWidgets) {\n            aboveTop = absoluteAboveTop;\n            belowTop = absoluteBelowTop;\n            aboveLeft = absoluteAboveLeft;\n            belowLeft = absoluteBelowLeft;\n        }\n        return { fitsAbove: fitsAbove, aboveTop: aboveTop, aboveLeft: aboveLeft, fitsBelow: fitsBelow, belowTop: belowTop, belowLeft: belowLeft };\n    };\n    Widget.prototype._prepareRenderWidgetAtExactPositionOverflowing = function (topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    };\n    /**\n     * Compute `this._topLeft`\n     */\n    Widget.prototype._getTopAndBottomLeft = function (ctx) {\n        if (!this._viewPosition) {\n            return [null, null];\n        }\n        var visibleRangeForPosition = ctx.visibleRangeForPosition(this._viewPosition);\n        if (!visibleRangeForPosition) {\n            return [null, null];\n        }\n        var topForPosition = ctx.getVerticalOffsetForLineNumber(this._viewPosition.lineNumber) - ctx.scrollTop;\n        var topLeft = new Coordinate(topForPosition, visibleRangeForPosition.left);\n        var largestLineNumber = this._viewPosition.lineNumber;\n        var smallestLeft = visibleRangeForPosition.left;\n        if (this._viewRange) {\n            var visibleRangesForRange = ctx.linesVisibleRangesForRange(this._viewRange, false);\n            if (visibleRangesForRange && visibleRangesForRange.length > 0) {\n                for (var i = visibleRangesForRange.length - 1; i >= 0; i--) {\n                    var visibleRangesForLine = visibleRangesForRange[i];\n                    if (visibleRangesForLine.lineNumber >= largestLineNumber) {\n                        if (visibleRangesForLine.lineNumber > largestLineNumber) {\n                            largestLineNumber = visibleRangesForLine.lineNumber;\n                            smallestLeft = uint_1.Constants.MAX_SAFE_SMALL_INTEGER;\n                        }\n                        for (var j = 0, lenJ = visibleRangesForLine.ranges.length; j < lenJ; j++) {\n                            var visibleRange = visibleRangesForLine.ranges[j];\n                            if (visibleRange.left < smallestLeft) {\n                                smallestLeft = visibleRange.left;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var topForBottomLine = ctx.getVerticalOffsetForLineNumber(largestLineNumber) - ctx.scrollTop;\n        var bottomLeft = new Coordinate(topForBottomLine, smallestLeft);\n        return [topLeft, bottomLeft];\n    };\n    Widget.prototype._prepareRenderWidget = function (ctx) {\n        var _a = this._getTopAndBottomLeft(ctx), topLeft = _a[0], bottomLeft = _a[1];\n        if (!topLeft || !bottomLeft) {\n            return null;\n        }\n        if (this._cachedDomNodeClientWidth === -1 || this._cachedDomNodeClientHeight === -1) {\n            var domNode = this.domNode.domNode;\n            this._cachedDomNodeClientWidth = domNode.clientWidth;\n            this._cachedDomNodeClientHeight = domNode.clientHeight;\n        }\n        var placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        if (this._preference) {\n            for (var pass = 1; pass <= 2; pass++) {\n                for (var _i = 0, _b = this._preference; _i < _b.length; _i++) {\n                    var pref = _b[_i];\n                    // placement\n                    if (pref === editorBrowser_1.ContentWidgetPositionPreference.ABOVE) {\n                        if (!placement) {\n                            // Widget outside of viewport\n                            return null;\n                        }\n                        if (pass === 2 || placement.fitsAbove) {\n                            return new Coordinate(placement.aboveTop, placement.aboveLeft);\n                        }\n                    }\n                    else if (pref === editorBrowser_1.ContentWidgetPositionPreference.BELOW) {\n                        if (!placement) {\n                            // Widget outside of viewport\n                            return null;\n                        }\n                        if (pass === 2 || placement.fitsBelow) {\n                            return new Coordinate(placement.belowTop, placement.belowLeft);\n                        }\n                    }\n                    else {\n                        if (this.allowEditorOverflow) {\n                            return this._prepareRenderWidgetAtExactPositionOverflowing(topLeft);\n                        }\n                        else {\n                            return topLeft;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    Widget.prototype.onBeforeRender = function (viewportData) {\n        if (!this._viewPosition || !this._preference) {\n            return;\n        }\n        if (this._viewPosition.lineNumber < viewportData.startLineNumber || this._viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    };\n    Widget.prototype.prepareRender = function (ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    };\n    Widget.prototype.render = function (ctx) {\n        if (!this._renderData) {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                this.domNode.setVisibility('hidden');\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.top);\n            this.domNode.setLeft(this._renderData.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n    };\n    return Widget;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { ContentWidgetPositionPreference, IContentWidget } from 'vs/editor/browser/editorBrowser';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\n\nclass Coordinate {\n\t_coordinateBrand: void;\n\n\tpublic readonly top: number;\n\tpublic readonly left: number;\n\n\tconstructor(top: number, left: number) {\n\t\tthis.top = top;\n\t\tthis.left = left;\n\t}\n}\n\nexport class ViewContentWidgets extends ViewPart {\n\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: { [key: string]: Widget; };\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tpublic overflowingContentWidgetsDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._widgets = {};\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ContentWidgets);\n\t\tthis.domNode.setClassName('contentWidgets');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setTop(0);\n\n\t\tthis.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowingContentWidgetsDomNode, PartFingerprint.OverflowingContentWidgets);\n\t\tthis.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\t// --- begin event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tpublic onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onLineMappingChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tpublic onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic addWidget(_widget: IContentWidget): void {\n\t\tconst myWidget = new Widget(this._context, this._viewDomNode, _widget);\n\t\tthis._widgets[myWidget.id] = myWidget;\n\n\t\tif (myWidget.allowEditorOverflow) {\n\t\t\tthis.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n\t\t} else {\n\t\t\tthis.domNode.appendChild(myWidget.domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IContentWidget, position: IPosition | null | undefined, range: IRange | null | undefined, preference: ContentWidgetPositionPreference[] | null | undefined): void {\n\t\tconst myWidget = this._widgets[widget.getId()];\n\t\tmyWidget.setPosition(position, range, preference);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic removeWidget(widget: IContentWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst myWidget = this._widgets[widgetId];\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tconst domNode = myWidget.domNode.domNode;\n\t\t\tdomNode.parentNode!.removeChild(domNode);\n\t\t\tdomNode.removeAttribute('monaco-visible-content-widget');\n\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\tpublic shouldSuppressMouseDownOnWidget(widgetId: string): boolean {\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\treturn this._widgets[widgetId].suppressMouseDown;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onBeforeRender(viewportData);\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].render(ctx);\n\t\t}\n\t}\n}\n\ninterface IBoxLayoutResult {\n\tfitsAbove: boolean;\n\taboveTop: number;\n\taboveLeft: number;\n\n\tfitsBelow: boolean;\n\tbelowTop: number;\n\tbelowLeft: number;\n}\n\nclass Widget {\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate readonly _actual: IContentWidget;\n\n\tpublic readonly domNode: FastDomNode<HTMLElement>;\n\tpublic readonly id: string;\n\tpublic readonly allowEditorOverflow: boolean;\n\tpublic readonly suppressMouseDown: boolean;\n\n\tprivate readonly _fixedOverflowWidgets: boolean;\n\tprivate _contentWidth: number;\n\tprivate _contentLeft: number;\n\tprivate _lineHeight: number;\n\n\tprivate _position: IPosition | null;\n\tprivate _viewPosition: Position | null;\n\tprivate _range: IRange | null;\n\tprivate _viewRange: Range | null;\n\tprivate _preference: ContentWidgetPositionPreference[] | null;\n\tprivate _cachedDomNodeClientWidth: number;\n\tprivate _cachedDomNodeClientHeight: number;\n\tprivate _maxWidth: number;\n\tprivate _isVisible: boolean;\n\n\tprivate _renderData: Coordinate | null;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>, actual: IContentWidget) {\n\t\tthis._context = context;\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._actual = actual;\n\t\tthis.domNode = createFastDomNode(this._actual.getDomNode());\n\n\t\tthis.id = this._actual.getId();\n\t\tthis.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n\t\tthis.suppressMouseDown = this._actual.suppressMouseDown || false;\n\n\t\tthis._fixedOverflowWidgets = this._context.configuration.editor.viewInfo.fixedOverflowWidgets;\n\t\tthis._contentWidth = this._context.configuration.editor.layoutInfo.contentWidth;\n\t\tthis._contentLeft = this._context.configuration.editor.layoutInfo.contentLeft;\n\t\tthis._lineHeight = this._context.configuration.editor.lineHeight;\n\n\t\tthis._setPosition(null, null);\n\t\tthis._preference = [];\n\t\tthis._cachedDomNodeClientWidth = -1;\n\t\tthis._cachedDomNodeClientHeight = -1;\n\t\tthis._maxWidth = this._getMaxWidth();\n\t\tthis._isVisible = false;\n\t\tthis._renderData = null;\n\n\t\tthis.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n\t\tthis.domNode.setVisibility('hidden');\n\t\tthis.domNode.setAttribute('widgetId', this.id);\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): void {\n\t\tif (e.lineHeight) {\n\t\t\tthis._lineHeight = this._context.configuration.editor.lineHeight;\n\t\t}\n\t\tif (e.layoutInfo) {\n\t\t\tthis._contentLeft = this._context.configuration.editor.layoutInfo.contentLeft;\n\t\t\tthis._contentWidth = this._context.configuration.editor.layoutInfo.contentWidth;\n\t\t\tthis._maxWidth = this._getMaxWidth();\n\t\t}\n\t}\n\n\tpublic onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): void {\n\t\tthis._setPosition(this._position, this._range);\n\t}\n\n\tprivate _setPosition(position: IPosition | null | undefined, range: IRange | null | undefined): void {\n\t\tthis._position = withUndefinedAsNull(position);\n\t\tthis._range = withUndefinedAsNull(range);\n\t\tthis._viewPosition = null;\n\t\tthis._viewRange = null;\n\n\t\tif (this._position) {\n\t\t\t// Do not trust that widgets give a valid position\n\t\t\tconst validModelPosition = this._context.model.validateModelPosition(this._position);\n\t\t\tif (this._context.model.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n\t\t\t\tthis._viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition);\n\t\t\t}\n\t\t}\n\t\tif (this._range) {\n\t\t\t// Do not trust that widgets give a valid position\n\t\t\tconst validModelRange = this._context.model.validateModelRange(this._range);\n\t\t\tthis._viewRange = this._context.model.coordinatesConverter.convertModelRangeToViewRange(validModelRange);\n\t\t}\n\t}\n\n\tprivate _getMaxWidth(): number {\n\t\treturn (\n\t\t\tthis.allowEditorOverflow\n\t\t\t\t? window.innerWidth || document.documentElement!.clientWidth || document.body.clientWidth\n\t\t\t\t: this._contentWidth\n\t\t);\n\t}\n\n\tpublic setPosition(position: IPosition | null | undefined, range: IRange | null | undefined, preference: ContentWidgetPositionPreference[] | null | undefined): void {\n\t\tthis._setPosition(position, range);\n\t\tthis._preference = withUndefinedAsNull(preference);\n\t\tthis._cachedDomNodeClientWidth = -1;\n\t\tthis._cachedDomNodeClientHeight = -1;\n\t}\n\n\tprivate _layoutBoxInViewport(topLeft: Coordinate, bottomLeft: Coordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult {\n\t\t// Our visible box is split horizontally by the current line => 2 boxes\n\n\t\t// a) the box above the line\n\t\tconst aboveLineTop = topLeft.top;\n\t\tconst heightAboveLine = aboveLineTop;\n\n\t\t// b) the box under the line\n\t\tconst underLineTop = bottomLeft.top + this._lineHeight;\n\t\tconst heightUnderLine = ctx.viewportHeight - underLineTop;\n\n\t\tconst aboveTop = aboveLineTop - height;\n\t\tconst fitsAbove = (heightAboveLine >= height);\n\t\tconst belowTop = underLineTop;\n\t\tconst fitsBelow = (heightUnderLine >= height);\n\n\t\t// And its left\n\t\tlet actualAboveLeft = topLeft.left;\n\t\tlet actualBelowLeft = bottomLeft.left;\n\t\tif (actualAboveLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n\t\t\tactualAboveLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n\t\t}\n\t\tif (actualBelowLeft + width > ctx.scrollLeft + ctx.viewportWidth) {\n\t\t\tactualBelowLeft = ctx.scrollLeft + ctx.viewportWidth - width;\n\t\t}\n\t\tif (actualAboveLeft < ctx.scrollLeft) {\n\t\t\tactualAboveLeft = ctx.scrollLeft;\n\t\t}\n\t\tif (actualBelowLeft < ctx.scrollLeft) {\n\t\t\tactualBelowLeft = ctx.scrollLeft;\n\t\t}\n\n\t\treturn {\n\t\t\tfitsAbove: fitsAbove,\n\t\t\taboveTop: aboveTop,\n\t\t\taboveLeft: actualAboveLeft,\n\n\t\t\tfitsBelow: fitsBelow,\n\t\t\tbelowTop: belowTop,\n\t\t\tbelowLeft: actualBelowLeft,\n\t\t};\n\t}\n\n\tprivate _layoutBoxInPage(topLeft: Coordinate, bottomLeft: Coordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult | null {\n\t\tconst aboveLeft0 = topLeft.left - ctx.scrollLeft;\n\t\tconst belowLeft0 = bottomLeft.left - ctx.scrollLeft;\n\n\t\tif (aboveLeft0 < 0 || aboveLeft0 > this._contentWidth) {\n\t\t\t// Don't render if position is scrolled outside viewport\n\t\t\treturn null;\n\t\t}\n\n\t\tlet aboveTop = topLeft.top - height;\n\t\tlet belowTop = bottomLeft.top + this._lineHeight;\n\t\tlet aboveLeft = aboveLeft0 + this._contentLeft;\n\t\tlet belowLeft = belowLeft0 + this._contentLeft;\n\n\t\tconst domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n\t\tconst absoluteAboveTop = domNodePosition.top + aboveTop - dom.StandardWindow.scrollY;\n\t\tconst absoluteBelowTop = domNodePosition.top + belowTop - dom.StandardWindow.scrollY;\n\t\tlet absoluteAboveLeft = domNodePosition.left + aboveLeft - dom.StandardWindow.scrollX;\n\t\tlet absoluteBelowLeft = domNodePosition.left + belowLeft - dom.StandardWindow.scrollX;\n\n\t\tconst INNER_WIDTH = window.innerWidth || document.documentElement!.clientWidth || document.body.clientWidth;\n\t\tconst INNER_HEIGHT = window.innerHeight || document.documentElement!.clientHeight || document.body.clientHeight;\n\n\t\t// Leave some clearance to the bottom\n\t\tconst TOP_PADDING = 22;\n\t\tconst BOTTOM_PADDING = 22;\n\n\t\tconst fitsAbove = (absoluteAboveTop >= TOP_PADDING),\n\t\t\tfitsBelow = (absoluteBelowTop + height <= INNER_HEIGHT - BOTTOM_PADDING);\n\n\t\tif (absoluteAboveLeft + width + 20 > INNER_WIDTH) {\n\t\t\tconst delta = absoluteAboveLeft - (INNER_WIDTH - width - 20);\n\t\t\tabsoluteAboveLeft -= delta;\n\t\t\taboveLeft -= delta;\n\t\t}\n\t\tif (absoluteBelowLeft + width + 20 > INNER_WIDTH) {\n\t\t\tconst delta = absoluteBelowLeft - (INNER_WIDTH - width - 20);\n\t\t\tabsoluteBelowLeft -= delta;\n\t\t\tbelowLeft -= delta;\n\t\t}\n\t\tif (absoluteAboveLeft < 0) {\n\t\t\tconst delta = absoluteAboveLeft;\n\t\t\tabsoluteAboveLeft -= delta;\n\t\t\taboveLeft -= delta;\n\t\t}\n\t\tif (absoluteBelowLeft < 0) {\n\t\t\tconst delta = absoluteBelowLeft;\n\t\t\tabsoluteBelowLeft -= delta;\n\t\t\tbelowLeft -= delta;\n\t\t}\n\n\t\tif (this._fixedOverflowWidgets) {\n\t\t\taboveTop = absoluteAboveTop;\n\t\t\tbelowTop = absoluteBelowTop;\n\t\t\taboveLeft = absoluteAboveLeft;\n\t\t\tbelowLeft = absoluteBelowLeft;\n\t\t}\n\n\t\treturn { fitsAbove, aboveTop, aboveLeft, fitsBelow, belowTop, belowLeft };\n\t}\n\n\tprivate _prepareRenderWidgetAtExactPositionOverflowing(topLeft: Coordinate): Coordinate {\n\t\treturn new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n\t}\n\n\t/**\n\t * Compute `this._topLeft`\n\t */\n\tprivate _getTopAndBottomLeft(ctx: RenderingContext): [Coordinate, Coordinate] | [null, null] {\n\t\tif (!this._viewPosition) {\n\t\t\treturn [null, null];\n\t\t}\n\n\t\tconst visibleRangeForPosition = ctx.visibleRangeForPosition(this._viewPosition);\n\t\tif (!visibleRangeForPosition) {\n\t\t\treturn [null, null];\n\t\t}\n\n\t\tconst topForPosition = ctx.getVerticalOffsetForLineNumber(this._viewPosition.lineNumber) - ctx.scrollTop;\n\t\tconst topLeft = new Coordinate(topForPosition, visibleRangeForPosition.left);\n\n\t\tlet largestLineNumber = this._viewPosition.lineNumber;\n\t\tlet smallestLeft = visibleRangeForPosition.left;\n\n\t\tif (this._viewRange) {\n\t\t\tconst visibleRangesForRange = ctx.linesVisibleRangesForRange(this._viewRange, false);\n\t\t\tif (visibleRangesForRange && visibleRangesForRange.length > 0) {\n\t\t\t\tfor (let i = visibleRangesForRange.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst visibleRangesForLine = visibleRangesForRange[i];\n\t\t\t\t\tif (visibleRangesForLine.lineNumber >= largestLineNumber) {\n\t\t\t\t\t\tif (visibleRangesForLine.lineNumber > largestLineNumber) {\n\t\t\t\t\t\t\tlargestLineNumber = visibleRangesForLine.lineNumber;\n\t\t\t\t\t\t\tsmallestLeft = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let j = 0, lenJ = visibleRangesForLine.ranges.length; j < lenJ; j++) {\n\t\t\t\t\t\t\tconst visibleRange = visibleRangesForLine.ranges[j];\n\n\t\t\t\t\t\t\tif (visibleRange.left < smallestLeft) {\n\t\t\t\t\t\t\t\tsmallestLeft = visibleRange.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst topForBottomLine = ctx.getVerticalOffsetForLineNumber(largestLineNumber) - ctx.scrollTop;\n\t\tconst bottomLeft = new Coordinate(topForBottomLine, smallestLeft);\n\n\t\treturn [topLeft, bottomLeft];\n\t}\n\n\tprivate _prepareRenderWidget(ctx: RenderingContext): Coordinate | null {\n\t\tconst [topLeft, bottomLeft] = this._getTopAndBottomLeft(ctx);\n\t\tif (!topLeft || !bottomLeft) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._cachedDomNodeClientWidth === -1 || this._cachedDomNodeClientHeight === -1) {\n\t\t\tconst domNode = this.domNode.domNode;\n\t\t\tthis._cachedDomNodeClientWidth = domNode.clientWidth;\n\t\t\tthis._cachedDomNodeClientHeight = domNode.clientHeight;\n\t\t}\n\n\t\tlet placement: IBoxLayoutResult | null;\n\t\tif (this.allowEditorOverflow) {\n\t\t\tplacement = this._layoutBoxInPage(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n\t\t} else {\n\t\t\tplacement = this._layoutBoxInViewport(topLeft, bottomLeft, this._cachedDomNodeClientWidth, this._cachedDomNodeClientHeight, ctx);\n\t\t}\n\n\t\t// Do two passes, first for perfect fit, second picks first option\n\t\tif (this._preference) {\n\t\t\tfor (let pass = 1; pass <= 2; pass++) {\n\t\t\t\tfor (const pref of this._preference) {\n\t\t\t\t\t// placement\n\t\t\t\t\tif (pref === ContentWidgetPositionPreference.ABOVE) {\n\t\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pass === 2 || placement.fitsAbove) {\n\t\t\t\t\t\t\treturn new Coordinate(placement.aboveTop, placement.aboveLeft);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (pref === ContentWidgetPositionPreference.BELOW) {\n\t\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pass === 2 || placement.fitsBelow) {\n\t\t\t\t\t\t\treturn new Coordinate(placement.belowTop, placement.belowLeft);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.allowEditorOverflow) {\n\t\t\t\t\t\t\treturn this._prepareRenderWidgetAtExactPositionOverflowing(topLeft);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn topLeft;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n\t */\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tif (!this._viewPosition || !this._preference) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._viewPosition.lineNumber < viewportData.startLineNumber || this._viewPosition.lineNumber > viewportData.endLineNumber) {\n\t\t\t// Outside of viewport\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._renderData = this._prepareRenderWidget(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._renderData) {\n\t\t\t// This widget should be invisible\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.domNode.removeAttribute('monaco-visible-content-widget');\n\t\t\t\tthis._isVisible = false;\n\t\t\t\tthis.domNode.setVisibility('hidden');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// This widget should be visible\n\t\tif (this.allowEditorOverflow) {\n\t\t\tthis.domNode.setTop(this._renderData.top);\n\t\t\tthis.domNode.setLeft(this._renderData.left);\n\t\t} else {\n\t\t\tthis.domNode.setTop(this._renderData.top + ctx.scrollTop - ctx.bigNumbersDelta);\n\t\t\tthis.domNode.setLeft(this._renderData.left);\n\t\t}\n\n\t\tif (!this._isVisible) {\n\t\t\tthis.domNode.setVisibility('inherit');\n\t\t\tthis.domNode.setAttribute('monaco-visible-content-widget', 'true');\n\t\t\tthis._isVisible = true;\n\t\t}\n\t}\n}\n"]}]}