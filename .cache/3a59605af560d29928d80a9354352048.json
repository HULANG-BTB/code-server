{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/common/contextkeys.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/contextkeys.ts","mtime":1555846338036},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nexports.IsMacContext = new contextkey_1.RawContextKey('isMac', browser_1.isMacintosh);\nexports.IsLinuxContext = new contextkey_1.RawContextKey('isLinux', browser_1.isLinux);\nexports.IsWindowsContext = new contextkey_1.RawContextKey('isWindows', browser_1.isWindows);\nexports.IsRemoteContext = new contextkey_1.RawContextKey('isRemote', false);\nexports.HasMacNativeTabsContext = new contextkey_1.RawContextKey('hasMacNativeTabs', false);\nexports.SupportsWorkspacesContext = new contextkey_1.RawContextKey('supportsWorkspaces', true);\nexports.SupportsOpenFileFolderContext = new contextkey_1.RawContextKey('supportsOpenFileFolder', browser_1.isMacintosh);\nexports.IsDevelopmentContext = new contextkey_1.RawContextKey('isDevelopment', false);\nexports.WorkbenchStateContext = new contextkey_1.RawContextKey('workbenchState', undefined);\nexports.WorkspaceFolderCountContext = new contextkey_1.RawContextKey('workspaceFolderCount', 0);\nexports.RemoteFileDialogContext = new contextkey_1.RawContextKey('remoteFileDialogVisible', false);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/contextkeys.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/common/contextkeys.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,uEAAyE;AACzE,mDAA0E;AAE7D,QAAA,YAAY,GAAG,IAAI,0BAAa,CAAU,OAAO,EAAE,qBAAW,CAAC,CAAC;AAChE,QAAA,cAAc,GAAG,IAAI,0BAAa,CAAU,SAAS,EAAE,iBAAO,CAAC,CAAC;AAChE,QAAA,gBAAgB,GAAG,IAAI,0BAAa,CAAU,WAAW,EAAE,mBAAS,CAAC,CAAC;AACtE,QAAA,eAAe,GAAG,IAAI,0BAAa,CAAU,UAAU,EAAE,KAAK,CAAC,CAAC;AAEhE,QAAA,uBAAuB,GAAG,IAAI,0BAAa,CAAU,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAEhF,QAAA,yBAAyB,GAAG,IAAI,0BAAa,CAAU,oBAAoB,EAAE,IAAI,CAAC,CAAC;AACnF,QAAA,6BAA6B,GAAG,IAAI,0BAAa,CAAU,wBAAwB,EAAE,qBAAW,CAAC,CAAC;AAElG,QAAA,oBAAoB,GAAG,IAAI,0BAAa,CAAU,eAAe,EAAE,KAAK,CAAC,CAAC;AAE1E,QAAA,qBAAqB,GAAG,IAAI,0BAAa,CAAS,gBAAgB,EAAE,SAAS,CAAC,CAAC;AAE/E,QAAA,2BAA2B,GAAG,IAAI,0BAAa,CAAS,sBAAsB,EAAE,CAAC,CAAC,CAAC;AAEnF,QAAA,uBAAuB,GAAG,IAAI,0BAAa,CAAU,yBAAyB,EAAE,KAAK,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { isMacintosh, isLinux, isWindows } from 'vs/base/browser/browser';\n\nexport const IsMacContext = new RawContextKey<boolean>('isMac', isMacintosh);\nexport const IsLinuxContext = new RawContextKey<boolean>('isLinux', isLinux);\nexport const IsWindowsContext = new RawContextKey<boolean>('isWindows', isWindows);\nexport const IsRemoteContext = new RawContextKey<boolean>('isRemote', false);\n\nexport const HasMacNativeTabsContext = new RawContextKey<boolean>('hasMacNativeTabs', false);\n\nexport const SupportsWorkspacesContext = new RawContextKey<boolean>('supportsWorkspaces', true);\nexport const SupportsOpenFileFolderContext = new RawContextKey<boolean>('supportsOpenFileFolder', isMacintosh);\n\nexport const IsDevelopmentContext = new RawContextKey<boolean>('isDevelopment', false);\n\nexport const WorkbenchStateContext = new RawContextKey<string>('workbenchState', undefined);\n\nexport const WorkspaceFolderCountContext = new RawContextKey<number>('workspaceFolderCount', 0);\n\nexport const RemoteFileDialogContext = new RawContextKey<boolean>('remoteFileDialogVisible', false);\n"]}]}