{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/config/fontInfo.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/config/fontInfo.ts","mtime":1555846338032},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar browser = require(\"vs/base/browser/browser\");\nvar editorOptions_1 = require(\"vs/editor/common/config/editorOptions\");\nvar editorZoom_1 = require(\"vs/editor/common/config/editorZoom\");\n/**\n * Determined from empirical observations.\n * @internal\n */\nvar GOLDEN_LINE_HEIGHT_RATIO = browser.isMacintosh ? 1.5 : 1.35;\n/**\n * Font settings maximum and minimum limits\n */\nvar MINIMUM_FONT_SIZE = 8;\nvar MAXIMUM_FONT_SIZE = 100;\nvar MINIMUM_LINE_HEIGHT = 8;\nvar MAXIMUM_LINE_HEIGHT = 150;\nvar MINIMUM_LETTER_SPACING = -5;\nvar MAXIMUM_LETTER_SPACING = 20;\nfunction safeParseFloat(n, defaultValue) {\n    if (typeof n === 'number') {\n        return n;\n    }\n    if (typeof n === 'undefined') {\n        return defaultValue;\n    }\n    var r = parseFloat(n);\n    if (isNaN(r)) {\n        return defaultValue;\n    }\n    return r;\n}\nfunction safeParseInt(n, defaultValue) {\n    if (typeof n === 'number') {\n        return Math.round(n);\n    }\n    if (typeof n === 'undefined') {\n        return defaultValue;\n    }\n    var r = parseInt(n);\n    if (isNaN(r)) {\n        return defaultValue;\n    }\n    return r;\n}\nfunction clamp(n, min, max) {\n    if (n < min) {\n        return min;\n    }\n    if (n > max) {\n        return max;\n    }\n    return n;\n}\nfunction _string(value, defaultValue) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    return value;\n}\nvar BareFontInfo = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function BareFontInfo(opts) {\n        this.zoomLevel = opts.zoomLevel;\n        this.fontFamily = String(opts.fontFamily);\n        this.fontWeight = String(opts.fontWeight);\n        this.fontSize = opts.fontSize;\n        this.lineHeight = opts.lineHeight | 0;\n        this.letterSpacing = opts.letterSpacing;\n    }\n    /**\n     * @internal\n     */\n    BareFontInfo.createFromRawSettings = function (opts, zoomLevel, ignoreEditorZoom) {\n        if (ignoreEditorZoom === void 0) { ignoreEditorZoom = false; }\n        var fontFamily = _string(opts.fontFamily, editorOptions_1.EDITOR_FONT_DEFAULTS.fontFamily);\n        var fontWeight = _string(opts.fontWeight, editorOptions_1.EDITOR_FONT_DEFAULTS.fontWeight);\n        var fontSize = safeParseFloat(opts.fontSize, editorOptions_1.EDITOR_FONT_DEFAULTS.fontSize);\n        fontSize = clamp(fontSize, 0, MAXIMUM_FONT_SIZE);\n        if (fontSize === 0) {\n            fontSize = editorOptions_1.EDITOR_FONT_DEFAULTS.fontSize;\n        }\n        else if (fontSize < MINIMUM_FONT_SIZE) {\n            fontSize = MINIMUM_FONT_SIZE;\n        }\n        var lineHeight = safeParseInt(opts.lineHeight, 0);\n        lineHeight = clamp(lineHeight, 0, MAXIMUM_LINE_HEIGHT);\n        if (lineHeight === 0) {\n            lineHeight = Math.round(GOLDEN_LINE_HEIGHT_RATIO * fontSize);\n        }\n        else if (lineHeight < MINIMUM_LINE_HEIGHT) {\n            lineHeight = MINIMUM_LINE_HEIGHT;\n        }\n        var letterSpacing = safeParseFloat(opts.letterSpacing, 0);\n        letterSpacing = clamp(letterSpacing, MINIMUM_LETTER_SPACING, MAXIMUM_LETTER_SPACING);\n        var editorZoomLevelMultiplier = 1 + (ignoreEditorZoom ? 0 : editorZoom_1.EditorZoom.getZoomLevel() * 0.1);\n        fontSize *= editorZoomLevelMultiplier;\n        lineHeight *= editorZoomLevelMultiplier;\n        return new BareFontInfo({\n            zoomLevel: zoomLevel,\n            fontFamily: fontFamily,\n            fontWeight: fontWeight,\n            fontSize: fontSize,\n            lineHeight: lineHeight,\n            letterSpacing: letterSpacing\n        });\n    };\n    /**\n     * @internal\n     */\n    BareFontInfo.prototype.getId = function () {\n        return this.zoomLevel + '-' + this.fontFamily + '-' + this.fontWeight + '-' + this.fontSize + '-' + this.lineHeight + '-' + this.letterSpacing;\n    };\n    /**\n     * @internal\n     */\n    BareFontInfo.prototype.getMassagedFontFamily = function () {\n        if (/[,\"']/.test(this.fontFamily)) {\n            // Looks like the font family might be already escaped\n            return this.fontFamily;\n        }\n        if (/[+ ]/.test(this.fontFamily)) {\n            // Wrap a font family using + or <space> with quotes\n            return \"\\\"\" + this.fontFamily + \"\\\"\";\n        }\n        return this.fontFamily;\n    };\n    return BareFontInfo;\n}());\nexports.BareFontInfo = BareFontInfo;\nvar FontInfo = /** @class */ (function (_super) {\n    tslib_1.__extends(FontInfo, _super);\n    /**\n     * @internal\n     */\n    function FontInfo(opts, isTrusted) {\n        var _this = _super.call(this, opts) || this;\n        _this.isTrusted = isTrusted;\n        _this.isMonospace = opts.isMonospace;\n        _this.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n        _this.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n        _this.canUseHalfwidthRightwardsArrow = opts.canUseHalfwidthRightwardsArrow;\n        _this.spaceWidth = opts.spaceWidth;\n        _this.maxDigitWidth = opts.maxDigitWidth;\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    FontInfo.prototype.equals = function (other) {\n        return (this.fontFamily === other.fontFamily\n            && this.fontWeight === other.fontWeight\n            && this.fontSize === other.fontSize\n            && this.lineHeight === other.lineHeight\n            && this.letterSpacing === other.letterSpacing\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.spaceWidth === other.spaceWidth\n            && this.maxDigitWidth === other.maxDigitWidth);\n    };\n    return FontInfo;\n}(BareFontInfo));\nexports.FontInfo = FontInfo;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/config/fontInfo.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/config/fontInfo.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { EDITOR_FONT_DEFAULTS } from 'vs/editor/common/config/editorOptions';\nimport { EditorZoom } from 'vs/editor/common/config/editorZoom';\n\n/**\n * Determined from empirical observations.\n * @internal\n */\nconst GOLDEN_LINE_HEIGHT_RATIO = browser.isMacintosh ? 1.5 : 1.35;\n\n/**\n * Font settings maximum and minimum limits\n */\nconst MINIMUM_FONT_SIZE = 8;\nconst MAXIMUM_FONT_SIZE = 100;\nconst MINIMUM_LINE_HEIGHT = 8;\nconst MAXIMUM_LINE_HEIGHT = 150;\nconst MINIMUM_LETTER_SPACING = -5;\nconst MAXIMUM_LETTER_SPACING = 20;\n\nfunction safeParseFloat(n: number | string | undefined, defaultValue: number): number {\n\tif (typeof n === 'number') {\n\t\treturn n;\n\t}\n\tif (typeof n === 'undefined') {\n\t\treturn defaultValue;\n\t}\n\tlet r = parseFloat(n);\n\tif (isNaN(r)) {\n\t\treturn defaultValue;\n\t}\n\treturn r;\n}\n\nfunction safeParseInt(n: number | string | undefined, defaultValue: number): number {\n\tif (typeof n === 'number') {\n\t\treturn Math.round(n);\n\t}\n\tif (typeof n === 'undefined') {\n\t\treturn defaultValue;\n\t}\n\tlet r = parseInt(n);\n\tif (isNaN(r)) {\n\t\treturn defaultValue;\n\t}\n\treturn r;\n}\n\nfunction clamp(n: number, min: number, max: number): number {\n\tif (n < min) {\n\t\treturn min;\n\t}\n\tif (n > max) {\n\t\treturn max;\n\t}\n\treturn n;\n}\n\nfunction _string(value: any, defaultValue: string): string {\n\tif (typeof value !== 'string') {\n\t\treturn defaultValue;\n\t}\n\treturn value;\n}\n\nexport class BareFontInfo {\n\treadonly _bareFontInfoBrand: void;\n\n\t/**\n\t * @internal\n\t */\n\tpublic static createFromRawSettings(opts: {\n\t\tfontFamily?: string;\n\t\tfontWeight?: string;\n\t\tfontSize?: number | string;\n\t\tlineHeight?: number | string;\n\t\tletterSpacing?: number | string;\n\t}, zoomLevel: number, ignoreEditorZoom: boolean = false): BareFontInfo {\n\n\t\tlet fontFamily = _string(opts.fontFamily, EDITOR_FONT_DEFAULTS.fontFamily);\n\t\tlet fontWeight = _string(opts.fontWeight, EDITOR_FONT_DEFAULTS.fontWeight);\n\n\n\t\tlet fontSize = safeParseFloat(opts.fontSize, EDITOR_FONT_DEFAULTS.fontSize);\n\t\tfontSize = clamp(fontSize, 0, MAXIMUM_FONT_SIZE);\n\t\tif (fontSize === 0) {\n\t\t\tfontSize = EDITOR_FONT_DEFAULTS.fontSize;\n\t\t} else if (fontSize < MINIMUM_FONT_SIZE) {\n\t\t\tfontSize = MINIMUM_FONT_SIZE;\n\t\t}\n\n\t\tlet lineHeight = safeParseInt(opts.lineHeight, 0);\n\t\tlineHeight = clamp(lineHeight, 0, MAXIMUM_LINE_HEIGHT);\n\t\tif (lineHeight === 0) {\n\t\t\tlineHeight = Math.round(GOLDEN_LINE_HEIGHT_RATIO * fontSize);\n\t\t} else if (lineHeight < MINIMUM_LINE_HEIGHT) {\n\t\t\tlineHeight = MINIMUM_LINE_HEIGHT;\n\t\t}\n\n\t\tlet letterSpacing = safeParseFloat(opts.letterSpacing, 0);\n\t\tletterSpacing = clamp(letterSpacing, MINIMUM_LETTER_SPACING, MAXIMUM_LETTER_SPACING);\n\n\t\tlet editorZoomLevelMultiplier = 1 + (ignoreEditorZoom ? 0 : EditorZoom.getZoomLevel() * 0.1);\n\t\tfontSize *= editorZoomLevelMultiplier;\n\t\tlineHeight *= editorZoomLevelMultiplier;\n\n\t\treturn new BareFontInfo({\n\t\t\tzoomLevel: zoomLevel,\n\t\t\tfontFamily: fontFamily,\n\t\t\tfontWeight: fontWeight,\n\t\t\tfontSize: fontSize,\n\t\t\tlineHeight: lineHeight,\n\t\t\tletterSpacing: letterSpacing\n\t\t});\n\t}\n\n\treadonly zoomLevel: number;\n\treadonly fontFamily: string;\n\treadonly fontWeight: string;\n\treadonly fontSize: number;\n\treadonly lineHeight: number;\n\treadonly letterSpacing: number;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(opts: {\n\t\tzoomLevel: number;\n\t\tfontFamily: string;\n\t\tfontWeight: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t\tletterSpacing: number;\n\t}) {\n\t\tthis.zoomLevel = opts.zoomLevel;\n\t\tthis.fontFamily = String(opts.fontFamily);\n\t\tthis.fontWeight = String(opts.fontWeight);\n\t\tthis.fontSize = opts.fontSize;\n\t\tthis.lineHeight = opts.lineHeight | 0;\n\t\tthis.letterSpacing = opts.letterSpacing;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic getId(): string {\n\t\treturn this.zoomLevel + '-' + this.fontFamily + '-' + this.fontWeight + '-' + this.fontSize + '-' + this.lineHeight + '-' + this.letterSpacing;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic getMassagedFontFamily(): string {\n\t\tif (/[,\"']/.test(this.fontFamily)) {\n\t\t\t// Looks like the font family might be already escaped\n\t\t\treturn this.fontFamily;\n\t\t}\n\t\tif (/[+ ]/.test(this.fontFamily)) {\n\t\t\t// Wrap a font family using + or <space> with quotes\n\t\t\treturn `\"${this.fontFamily}\"`;\n\t\t}\n\n\t\treturn this.fontFamily;\n\t}\n}\n\nexport class FontInfo extends BareFontInfo {\n\treadonly _editorStylingBrand: void;\n\n\treadonly isTrusted: boolean;\n\treadonly isMonospace: boolean;\n\treadonly typicalHalfwidthCharacterWidth: number;\n\treadonly typicalFullwidthCharacterWidth: number;\n\treadonly canUseHalfwidthRightwardsArrow: boolean;\n\treadonly spaceWidth: number;\n\treadonly maxDigitWidth: number;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(opts: {\n\t\tzoomLevel: number;\n\t\tfontFamily: string;\n\t\tfontWeight: string;\n\t\tfontSize: number;\n\t\tlineHeight: number;\n\t\tletterSpacing: number;\n\t\tisMonospace: boolean;\n\t\ttypicalHalfwidthCharacterWidth: number;\n\t\ttypicalFullwidthCharacterWidth: number;\n\t\tcanUseHalfwidthRightwardsArrow: boolean;\n\t\tspaceWidth: number;\n\t\tmaxDigitWidth: number;\n\t}, isTrusted: boolean) {\n\t\tsuper(opts);\n\t\tthis.isTrusted = isTrusted;\n\t\tthis.isMonospace = opts.isMonospace;\n\t\tthis.typicalHalfwidthCharacterWidth = opts.typicalHalfwidthCharacterWidth;\n\t\tthis.typicalFullwidthCharacterWidth = opts.typicalFullwidthCharacterWidth;\n\t\tthis.canUseHalfwidthRightwardsArrow = opts.canUseHalfwidthRightwardsArrow;\n\t\tthis.spaceWidth = opts.spaceWidth;\n\t\tthis.maxDigitWidth = opts.maxDigitWidth;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: FontInfo): boolean {\n\t\treturn (\n\t\t\tthis.fontFamily === other.fontFamily\n\t\t\t&& this.fontWeight === other.fontWeight\n\t\t\t&& this.fontSize === other.fontSize\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.letterSpacing === other.letterSpacing\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.typicalFullwidthCharacterWidth === other.typicalFullwidthCharacterWidth\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.maxDigitWidth === other.maxDigitWidth\n\t\t);\n\t}\n}\n"]}]}