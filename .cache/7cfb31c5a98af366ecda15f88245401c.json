{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/electron-browser/rawDebugSession.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/electron-browser/rawDebugSession.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar event_1 = require(\"vs/base/common/event\");\nvar objects = require(\"vs/base/common/objects\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar errors = require(\"vs/base/common/errors\");\nvar debugUtils_1 = require(\"vs/workbench/contrib/debug/common/debugUtils\");\nvar errorsWithActions_1 = require(\"vs/base/common/errorsWithActions\");\nvar cp = require(\"child_process\");\n/**\n * Encapsulates the DebugAdapter lifecycle and some idiosyncrasies of the Debug Adapter Protocol.\n */\nvar RawDebugSession = /** @class */ (function () {\n    function RawDebugSession(debugAdapter, dbgr, telemetryService, customTelemetryService, environmentService) {\n        var _this = this;\n        this.telemetryService = telemetryService;\n        this.customTelemetryService = customTelemetryService;\n        this.environmentService = environmentService;\n        this.debugAdapter = debugAdapter;\n        this._capabilities = Object.create(null);\n        this._readyForBreakpoints = false;\n        this.inShutdown = false;\n        this.debugAdapterStopped = false;\n        this.firedAdapterExitEvent = false;\n        this.didReceiveStoppedEvent = false;\n        this.allThreadsContinued = true;\n        this._onDidInitialize = new event_1.Emitter();\n        this._onDidStop = new event_1.Emitter();\n        this._onDidContinued = new event_1.Emitter();\n        this._onDidTerminateDebugee = new event_1.Emitter();\n        this._onDidExitDebugee = new event_1.Emitter();\n        this._onDidThread = new event_1.Emitter();\n        this._onDidOutput = new event_1.Emitter();\n        this._onDidBreakpoint = new event_1.Emitter();\n        this._onDidLoadedSource = new event_1.Emitter();\n        this._onDidCustomEvent = new event_1.Emitter();\n        this._onDidEvent = new event_1.Emitter();\n        this._onDidExitAdapter = new event_1.Emitter();\n        this.debugAdapter.onError(function (err) {\n            _this.shutdown(err);\n        });\n        this.debugAdapter.onExit(function (code) {\n            if (code !== 0) {\n                _this.shutdown(new Error(\"exit code: \" + code));\n            }\n            else {\n                // normal exit\n                _this.shutdown();\n            }\n        });\n        this.debugAdapter.onEvent(function (event) {\n            switch (event.event) {\n                case 'initialized':\n                    _this._readyForBreakpoints = true;\n                    _this._onDidInitialize.fire(event);\n                    break;\n                case 'loadedSource':\n                    _this._onDidLoadedSource.fire(event);\n                    break;\n                case 'capabilities':\n                    if (event.body) {\n                        var capabilites = event.body.capabilities;\n                        _this.mergeCapabilities(capabilites);\n                    }\n                    break;\n                case 'stopped':\n                    _this.didReceiveStoppedEvent = true; // telemetry: remember that debugger stopped successfully\n                    _this._onDidStop.fire(event);\n                    break;\n                case 'continued':\n                    _this.allThreadsContinued = event.body.allThreadsContinued === false ? false : true;\n                    _this._onDidContinued.fire(event);\n                    break;\n                case 'thread':\n                    _this._onDidThread.fire(event);\n                    break;\n                case 'output':\n                    _this._onDidOutput.fire(event);\n                    break;\n                case 'breakpoint':\n                    _this._onDidBreakpoint.fire(event);\n                    break;\n                case 'terminated':\n                    _this._onDidTerminateDebugee.fire(event);\n                    break;\n                case 'exit':\n                    _this._onDidExitDebugee.fire(event);\n                    break;\n                default:\n                    _this._onDidCustomEvent.fire(event);\n                    break;\n            }\n            _this._onDidEvent.fire(event);\n        });\n        this.debugAdapter.onRequest(function (request) { return _this.dispatchRequest(request, dbgr); });\n    }\n    Object.defineProperty(RawDebugSession.prototype, \"onDidExitAdapter\", {\n        get: function () {\n            return this._onDidExitAdapter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"capabilities\", {\n        get: function () {\n            return this._capabilities;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"readyForBreakpoints\", {\n        /**\n         * DA is ready to accepts setBreakpoint requests.\n         * Becomes true after \"initialized\" events has been received.\n         */\n        get: function () {\n            return this._readyForBreakpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidInitialize\", {\n        //---- DAP events\n        get: function () {\n            return this._onDidInitialize.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidStop\", {\n        get: function () {\n            return this._onDidStop.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidContinued\", {\n        get: function () {\n            return this._onDidContinued.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidTerminateDebugee\", {\n        get: function () {\n            return this._onDidTerminateDebugee.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidExitDebugee\", {\n        get: function () {\n            return this._onDidExitDebugee.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidThread\", {\n        get: function () {\n            return this._onDidThread.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidOutput\", {\n        get: function () {\n            return this._onDidOutput.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidBreakpoint\", {\n        get: function () {\n            return this._onDidBreakpoint.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidLoadedSource\", {\n        get: function () {\n            return this._onDidLoadedSource.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidCustomEvent\", {\n        get: function () {\n            return this._onDidCustomEvent.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawDebugSession.prototype, \"onDidEvent\", {\n        get: function () {\n            return this._onDidEvent.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //---- DebugAdapter lifecycle\n    /**\n     * Starts the underlying debug adapter and tracks the session time for telemetry.\n     */\n    RawDebugSession.prototype.start = function () {\n        var _this = this;\n        if (!this.debugAdapter) {\n            return Promise.reject(new Error('no debug adapter'));\n        }\n        return this.debugAdapter.startSession().then(function () {\n            _this.startTime = new Date().getTime();\n        }, function (err) {\n            return Promise.reject(err);\n        });\n    };\n    /**\n     * Send client capabilities to the debug adapter and receive DA capabilities in return.\n     */\n    RawDebugSession.prototype.initialize = function (args) {\n        var _this = this;\n        return this.send('initialize', args).then(function (response) {\n            _this.mergeCapabilities(response.body);\n            return response;\n        });\n    };\n    /**\n     * Terminate the debuggee and shutdown the adapter\n     */\n    RawDebugSession.prototype.disconnect = function (restart) {\n        if (restart === void 0) { restart = false; }\n        return this.shutdown(undefined, restart);\n    };\n    //---- DAP requests\n    RawDebugSession.prototype.launchOrAttach = function (config) {\n        var _this = this;\n        return this.send(config.request, config).then(function (response) {\n            _this.mergeCapabilities(response.body);\n            return response;\n        });\n    };\n    /**\n     * Try killing the debuggee softly...\n     */\n    RawDebugSession.prototype.terminate = function (restart) {\n        if (restart === void 0) { restart = false; }\n        if (this.capabilities.supportsTerminateRequest) {\n            if (!this.terminated) {\n                this.terminated = true;\n                return this.send('terminate', { restart: restart });\n            }\n            return this.disconnect(restart);\n        }\n        return Promise.reject(new Error('terminated not supported'));\n    };\n    RawDebugSession.prototype.restart = function () {\n        if (this.capabilities.supportsRestartRequest) {\n            return this.send('restart', null);\n        }\n        return Promise.reject(new Error('restart not supported'));\n    };\n    RawDebugSession.prototype.next = function (args) {\n        var _this = this;\n        return this.send('next', args).then(function (response) {\n            _this.fireSimulatedContinuedEvent(args.threadId);\n            return response;\n        });\n    };\n    RawDebugSession.prototype.stepIn = function (args) {\n        var _this = this;\n        return this.send('stepIn', args).then(function (response) {\n            _this.fireSimulatedContinuedEvent(args.threadId);\n            return response;\n        });\n    };\n    RawDebugSession.prototype.stepOut = function (args) {\n        var _this = this;\n        return this.send('stepOut', args).then(function (response) {\n            _this.fireSimulatedContinuedEvent(args.threadId);\n            return response;\n        });\n    };\n    RawDebugSession.prototype.continue = function (args) {\n        var _this = this;\n        return this.send('continue', args).then(function (response) {\n            if (response && response.body && response.body.allThreadsContinued !== undefined) {\n                _this.allThreadsContinued = response.body.allThreadsContinued;\n            }\n            _this.fireSimulatedContinuedEvent(args.threadId, _this.allThreadsContinued);\n            return response;\n        });\n    };\n    RawDebugSession.prototype.pause = function (args) {\n        return this.send('pause', args);\n    };\n    RawDebugSession.prototype.terminateThreads = function (args) {\n        if (this.capabilities.supportsTerminateThreadsRequest) {\n            return this.send('terminateThreads', args);\n        }\n        return Promise.reject(new Error('terminateThreads not supported'));\n    };\n    RawDebugSession.prototype.setVariable = function (args) {\n        if (this.capabilities.supportsSetVariable) {\n            return this.send('setVariable', args);\n        }\n        return Promise.reject(new Error('setVariable not supported'));\n    };\n    RawDebugSession.prototype.restartFrame = function (args, threadId) {\n        var _this = this;\n        if (this.capabilities.supportsRestartFrame) {\n            return this.send('restartFrame', args).then(function (response) {\n                _this.fireSimulatedContinuedEvent(threadId);\n                return response;\n            });\n        }\n        return Promise.reject(new Error('restartFrame not supported'));\n    };\n    RawDebugSession.prototype.completions = function (args) {\n        if (this.capabilities.supportsCompletionsRequest) {\n            return this.send('completions', args);\n        }\n        return Promise.reject(new Error('completions not supported'));\n    };\n    RawDebugSession.prototype.setBreakpoints = function (args) {\n        return this.send('setBreakpoints', args);\n    };\n    RawDebugSession.prototype.setFunctionBreakpoints = function (args) {\n        if (this.capabilities.supportsFunctionBreakpoints) {\n            return this.send('setFunctionBreakpoints', args);\n        }\n        return Promise.reject(new Error('setFunctionBreakpoints not supported'));\n    };\n    RawDebugSession.prototype.setExceptionBreakpoints = function (args) {\n        return this.send('setExceptionBreakpoints', args);\n    };\n    RawDebugSession.prototype.configurationDone = function () {\n        if (this.capabilities.supportsConfigurationDoneRequest) {\n            return this.send('configurationDone', null);\n        }\n        return Promise.reject(new Error('configurationDone not supported'));\n    };\n    RawDebugSession.prototype.stackTrace = function (args) {\n        return this.send('stackTrace', args);\n    };\n    RawDebugSession.prototype.exceptionInfo = function (args) {\n        if (this.capabilities.supportsExceptionInfoRequest) {\n            return this.send('exceptionInfo', args);\n        }\n        return Promise.reject(new Error('exceptionInfo not supported'));\n    };\n    RawDebugSession.prototype.scopes = function (args) {\n        return this.send('scopes', args);\n    };\n    RawDebugSession.prototype.variables = function (args) {\n        return this.send('variables', args);\n    };\n    RawDebugSession.prototype.source = function (args) {\n        return this.send('source', args);\n    };\n    RawDebugSession.prototype.loadedSources = function (args) {\n        if (this.capabilities.supportsLoadedSourcesRequest) {\n            return this.send('loadedSources', args);\n        }\n        return Promise.reject(new Error('loadedSources not supported'));\n    };\n    RawDebugSession.prototype.threads = function () {\n        return this.send('threads', null);\n    };\n    RawDebugSession.prototype.evaluate = function (args) {\n        return this.send('evaluate', args);\n    };\n    RawDebugSession.prototype.stepBack = function (args) {\n        var _this = this;\n        if (this.capabilities.supportsStepBack) {\n            return this.send('stepBack', args).then(function (response) {\n                if (response.body === undefined) { // TODO@AW why this check?\n                    _this.fireSimulatedContinuedEvent(args.threadId);\n                }\n                return response;\n            });\n        }\n        return Promise.reject(new Error('stepBack not supported'));\n    };\n    RawDebugSession.prototype.reverseContinue = function (args) {\n        var _this = this;\n        if (this.capabilities.supportsStepBack) {\n            return this.send('reverseContinue', args).then(function (response) {\n                if (response.body === undefined) { // TODO@AW why this check?\n                    _this.fireSimulatedContinuedEvent(args.threadId);\n                }\n                return response;\n            });\n        }\n        return Promise.reject(new Error('reverseContinue not supported'));\n    };\n    RawDebugSession.prototype.custom = function (request, args) {\n        return this.send(request, args);\n    };\n    //---- private\n    RawDebugSession.prototype.shutdown = function (error, restart) {\n        var _this = this;\n        if (restart === void 0) { restart = false; }\n        if (!this.inShutdown) {\n            this.inShutdown = true;\n            if (this.debugAdapter) {\n                return this.send('disconnect', { restart: restart }, 500).then(function () {\n                    _this.stopAdapter(error);\n                }, function () {\n                    // ignore error\n                    _this.stopAdapter(error);\n                });\n            }\n            return this.stopAdapter(error);\n        }\n        return Promise.resolve(undefined);\n    };\n    RawDebugSession.prototype.stopAdapter = function (error) {\n        var _this = this;\n        if (this.debugAdapter) {\n            var da = this.debugAdapter;\n            this.debugAdapter = null;\n            return da.stopSession().then(function (_) {\n                _this.debugAdapterStopped = true;\n                _this.fireAdapterExitEvent(error);\n            }, function (err) {\n                _this.fireAdapterExitEvent(error);\n            });\n        }\n        else {\n            this.fireAdapterExitEvent(error);\n        }\n        return Promise.resolve(undefined);\n    };\n    RawDebugSession.prototype.fireAdapterExitEvent = function (error) {\n        if (!this.firedAdapterExitEvent) {\n            this.firedAdapterExitEvent = true;\n            var e = {\n                emittedStopped: this.didReceiveStoppedEvent,\n                sessionLengthInSeconds: (new Date().getTime() - this.startTime) / 1000\n            };\n            if (error && !this.debugAdapterStopped) {\n                e.error = error;\n            }\n            this._onDidExitAdapter.fire(e);\n        }\n    };\n    RawDebugSession.prototype.dispatchRequest = function (request, dbgr) {\n        var _this = this;\n        var response = {\n            type: 'response',\n            seq: 0,\n            command: request.command,\n            request_seq: request.seq,\n            success: true\n        };\n        var safeSendResponse = function (response) { return _this.debugAdapter && _this.debugAdapter.sendResponse(response); };\n        switch (request.command) {\n            case 'launchVSCode':\n                this.launchVsCode(request.arguments).then(function (pid) {\n                    response.body = {\n                        processId: pid\n                    };\n                    safeSendResponse(response);\n                }, function (err) {\n                    response.success = false;\n                    response.message = err.message;\n                    safeSendResponse(response);\n                });\n                break;\n            case 'runInTerminal':\n                dbgr.runInTerminal(request.arguments).then(function (shellProcessId) {\n                    var resp = response;\n                    resp.body = {};\n                    if (typeof shellProcessId === 'number') {\n                        resp.body.shellProcessId = shellProcessId;\n                    }\n                    safeSendResponse(resp);\n                }, function (err) {\n                    response.success = false;\n                    response.message = err.message;\n                    safeSendResponse(response);\n                });\n                break;\n            case 'handshake':\n                try {\n                    var vsda = require.__$__nodeRequire('vsda');\n                    var obj = new vsda.signer();\n                    var sig = obj.sign(request.arguments.value);\n                    response.body = {\n                        signature: sig\n                    };\n                    safeSendResponse(response);\n                }\n                catch (e) {\n                    response.success = false;\n                    response.message = e.message;\n                    safeSendResponse(response);\n                }\n                break;\n            default:\n                response.success = false;\n                response.message = \"unknown request '\" + request.command + \"'\";\n                safeSendResponse(response);\n                break;\n        }\n    };\n    RawDebugSession.prototype.launchVsCode = function (vscodeArgs) {\n        var spawnOpts = {\n            detached: false // https://github.com/Microsoft/vscode/issues/57018\n        };\n        if (vscodeArgs.env) {\n            // merge environment variables into a copy of the process.env\n            var envArgs_1 = objects.mixin(objects.mixin({}, process.env), vscodeArgs.env);\n            // and delete some if necessary\n            Object.keys(envArgs_1).filter(function (k) { return envArgs_1[k] === null; }).forEach(function (key) { return delete envArgs_1[key]; });\n            spawnOpts.env = envArgs_1;\n        }\n        var spawnArgs = vscodeArgs.args.map(function (a) {\n            if ((a.prefix === '--file-uri=' || a.prefix === '--folder-uri=') && !debugUtils_1.isUri(a.path)) {\n                return (a.path || '');\n            }\n            return (a.prefix || '') + (a.path || '');\n        });\n        var runtimeExecutable = this.environmentService['execPath'];\n        if (!runtimeExecutable) {\n            return Promise.reject(new Error(\"VS Code executable unknown\"));\n        }\n        // if VS Code runs out of sources, add the VS Code workspace path as the first argument so that Electron turns into VS Code\n        var electronIdx = runtimeExecutable.indexOf(process.platform === 'win32' ? '\\\\.build\\\\electron\\\\' : '/.build/electron/');\n        if (electronIdx > 0) {\n            // guess the VS Code workspace path from the executable\n            var vscodeWorkspacePath_1 = runtimeExecutable.substr(0, electronIdx);\n            // only add VS Code workspace path if user hasn't already added that path as a (folder) argument\n            var x = spawnArgs.filter(function (a) { return a.indexOf(vscodeWorkspacePath_1) === 0; });\n            if (x.length === 0) {\n                spawnArgs.unshift(vscodeWorkspacePath_1);\n            }\n        }\n        // Workaround for bug Microsoft/vscode#45832\n        if (process.platform === 'win32' && runtimeExecutable.indexOf(' ') > 0) {\n            var foundArgWithSpace = false;\n            // check whether there is one arg with a space\n            var args = [];\n            for (var _i = 0, spawnArgs_1 = spawnArgs; _i < spawnArgs_1.length; _i++) {\n                var a = spawnArgs_1[_i];\n                if (a.indexOf(' ') > 0) {\n                    args.push(\"\\\"\" + a + \"\\\"\");\n                    foundArgWithSpace = true;\n                }\n                else {\n                    args.push(a);\n                }\n            }\n            if (foundArgWithSpace) {\n                spawnArgs = args;\n                runtimeExecutable = \"\\\"\" + runtimeExecutable + \"\\\"\";\n                spawnOpts.shell = true;\n            }\n        }\n        return new Promise(function (resolve, reject) {\n            var process = cp.spawn(runtimeExecutable, spawnArgs, spawnOpts);\n            process.on('error', function (error) {\n                reject(error);\n            });\n            process.on('exit', function (code) {\n                if (code === 0) {\n                    resolve(process.pid);\n                }\n                else {\n                    reject(new Error(\"VS Code exited with \" + code));\n                }\n            });\n        });\n    };\n    RawDebugSession.prototype.send = function (command, args, timeout) {\n        var _this = this;\n        return new Promise(function (completeDispatch, errorDispatch) {\n            if (!_this.debugAdapter) {\n                errorDispatch(new Error('no debug adapter found'));\n                return;\n            }\n            _this.debugAdapter.sendRequest(command, args, function (response) {\n                if (response.success) {\n                    completeDispatch(response);\n                }\n                else {\n                    errorDispatch(response);\n                }\n            }, timeout);\n        }).then(function (response) { return response; }, function (err) { return Promise.reject(_this.handleErrorResponse(err)); });\n    };\n    RawDebugSession.prototype.handleErrorResponse = function (errorResponse) {\n        if (errorResponse.command === 'canceled' && errorResponse.message === 'canceled') {\n            return errors.canceled();\n        }\n        var error = errorResponse && errorResponse.body ? errorResponse.body.error : null;\n        var errorMessage = errorResponse ? errorResponse.message || '' : '';\n        if (error && error.sendTelemetry) {\n            var telemetryMessage = error ? debugUtils_1.formatPII(error.format, true, error.variables) : errorMessage;\n            this.telemetryDebugProtocolErrorResponse(telemetryMessage);\n        }\n        var userMessage = error ? debugUtils_1.formatPII(error.format, false, error.variables) : errorMessage;\n        if (error && error.url) {\n            var label = error.urlLabel ? error.urlLabel : nls.localize('moreInfo', \"More Info\");\n            return errorsWithActions_1.createErrorWithActions(userMessage, {\n                actions: [new actions_1.Action('debug.moreInfo', label, undefined, true, function () {\n                        window.open(error.url);\n                        return Promise.resolve(null);\n                    })]\n            });\n        }\n        return new Error(userMessage);\n    };\n    RawDebugSession.prototype.mergeCapabilities = function (capabilities) {\n        if (capabilities) {\n            this._capabilities = objects.mixin(this._capabilities, capabilities);\n        }\n    };\n    RawDebugSession.prototype.fireSimulatedContinuedEvent = function (threadId, allThreadsContinued) {\n        if (allThreadsContinued === void 0) { allThreadsContinued = false; }\n        this._onDidContinued.fire({\n            type: 'event',\n            event: 'continued',\n            body: {\n                threadId: threadId,\n                allThreadsContinued: allThreadsContinued\n            },\n            seq: undefined\n        });\n    };\n    RawDebugSession.prototype.telemetryDebugProtocolErrorResponse = function (telemetryMessage) {\n        /* __GDPR__\n            \"debugProtocolErrorResponse\" : {\n                \"error\" : { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n            }\n        */\n        this.telemetryService.publicLog('debugProtocolErrorResponse', { error: telemetryMessage });\n        if (this.customTelemetryService) {\n            /* __GDPR__TODO__\n                The message is sent in the name of the adapter but the adapter doesn't know about it.\n                However, since adapters are an open-ended set, we can not declared the events statically either.\n            */\n            this.customTelemetryService.publicLog('debugProtocolErrorResponse', { error: telemetryMessage });\n        }\n    };\n    return RawDebugSession;\n}());\nexports.RawDebugSession = RawDebugSession;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/electron-browser/rawDebugSession.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/electron-browser/rawDebugSession.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as objects from 'vs/base/common/objects';\nimport { Action } from 'vs/base/common/actions';\nimport * as errors from 'vs/base/common/errors';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { formatPII, isUri } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { IDebugAdapter, IConfig, AdapterEndEvent, IDebugger } from 'vs/workbench/contrib/debug/common/debug';\nimport { createErrorWithActions } from 'vs/base/common/errorsWithActions';\nimport * as cp from 'child_process';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\n/**\n * This interface represents a single command line argument split into a \"prefix\" and a \"path\" half.\n * The optional \"prefix\" contains arbitrary text and the optional \"path\" contains a file system path.\n * Concatenating both results in the original command line argument.\n */\nexport interface ILaunchVSCodeArgument {\n\tprefix?: string;\n\tpath?: string;\n}\n\nexport interface ILaunchVSCodeArguments {\n\targs: ILaunchVSCodeArgument[];\n\tenv?: { [key: string]: string | null; };\n}\n\n/**\n * Encapsulates the DebugAdapter lifecycle and some idiosyncrasies of the Debug Adapter Protocol.\n */\nexport class RawDebugSession {\n\n\tprivate allThreadsContinued: boolean;\n\tprivate _readyForBreakpoints: boolean;\n\tprivate _capabilities: DebugProtocol.Capabilities;\n\n\t// shutdown\n\tprivate debugAdapterStopped: boolean;\n\tprivate inShutdown: boolean;\n\tprivate terminated: boolean;\n\tprivate firedAdapterExitEvent: boolean;\n\n\t// telemetry\n\tprivate startTime: number;\n\tprivate didReceiveStoppedEvent: boolean;\n\n\t// DAP events\n\tprivate readonly _onDidInitialize: Emitter<DebugProtocol.InitializedEvent>;\n\tprivate readonly _onDidStop: Emitter<DebugProtocol.StoppedEvent>;\n\tprivate readonly _onDidContinued: Emitter<DebugProtocol.ContinuedEvent>;\n\tprivate readonly _onDidTerminateDebugee: Emitter<DebugProtocol.TerminatedEvent>;\n\tprivate readonly _onDidExitDebugee: Emitter<DebugProtocol.ExitedEvent>;\n\tprivate readonly _onDidThread: Emitter<DebugProtocol.ThreadEvent>;\n\tprivate readonly _onDidOutput: Emitter<DebugProtocol.OutputEvent>;\n\tprivate readonly _onDidBreakpoint: Emitter<DebugProtocol.BreakpointEvent>;\n\tprivate readonly _onDidLoadedSource: Emitter<DebugProtocol.LoadedSourceEvent>;\n\tprivate readonly _onDidCustomEvent: Emitter<DebugProtocol.Event>;\n\tprivate readonly _onDidEvent: Emitter<DebugProtocol.Event>;\n\n\t// DA events\n\tprivate readonly _onDidExitAdapter: Emitter<AdapterEndEvent>;\n\tprivate debugAdapter: IDebugAdapter | null;\n\n\tconstructor(\n\t\tdebugAdapter: IDebugAdapter,\n\t\tdbgr: IDebugger,\n\t\tprivate telemetryService: ITelemetryService,\n\t\tpublic customTelemetryService: ITelemetryService | undefined,\n\t\tprivate environmentService: IEnvironmentService\n\t) {\n\t\tthis.debugAdapter = debugAdapter;\n\t\tthis._capabilities = Object.create(null);\n\t\tthis._readyForBreakpoints = false;\n\t\tthis.inShutdown = false;\n\t\tthis.debugAdapterStopped = false;\n\t\tthis.firedAdapterExitEvent = false;\n\t\tthis.didReceiveStoppedEvent = false;\n\n\t\tthis.allThreadsContinued = true;\n\n\t\tthis._onDidInitialize = new Emitter<DebugProtocol.InitializedEvent>();\n\t\tthis._onDidStop = new Emitter<DebugProtocol.StoppedEvent>();\n\t\tthis._onDidContinued = new Emitter<DebugProtocol.ContinuedEvent>();\n\t\tthis._onDidTerminateDebugee = new Emitter<DebugProtocol.TerminatedEvent>();\n\t\tthis._onDidExitDebugee = new Emitter<DebugProtocol.ExitedEvent>();\n\t\tthis._onDidThread = new Emitter<DebugProtocol.ThreadEvent>();\n\t\tthis._onDidOutput = new Emitter<DebugProtocol.OutputEvent>();\n\t\tthis._onDidBreakpoint = new Emitter<DebugProtocol.BreakpointEvent>();\n\t\tthis._onDidLoadedSource = new Emitter<DebugProtocol.LoadedSourceEvent>();\n\t\tthis._onDidCustomEvent = new Emitter<DebugProtocol.Event>();\n\t\tthis._onDidEvent = new Emitter<DebugProtocol.Event>();\n\n\t\tthis._onDidExitAdapter = new Emitter<AdapterEndEvent>();\n\n\t\tthis.debugAdapter.onError(err => {\n\t\t\tthis.shutdown(err);\n\t\t});\n\n\t\tthis.debugAdapter.onExit(code => {\n\t\t\tif (code !== 0) {\n\t\t\t\tthis.shutdown(new Error(`exit code: ${code}`));\n\t\t\t} else {\n\t\t\t\t// normal exit\n\t\t\t\tthis.shutdown();\n\t\t\t}\n\t\t});\n\n\t\tthis.debugAdapter.onEvent(event => {\n\t\t\tswitch (event.event) {\n\t\t\t\tcase 'initialized':\n\t\t\t\t\tthis._readyForBreakpoints = true;\n\t\t\t\t\tthis._onDidInitialize.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadedSource':\n\t\t\t\t\tthis._onDidLoadedSource.fire(<DebugProtocol.LoadedSourceEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'capabilities':\n\t\t\t\t\tif (event.body) {\n\t\t\t\t\t\tconst capabilites = (<DebugProtocol.CapabilitiesEvent>event).body.capabilities;\n\t\t\t\t\t\tthis.mergeCapabilities(capabilites);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stopped':\n\t\t\t\t\tthis.didReceiveStoppedEvent = true;\t\t// telemetry: remember that debugger stopped successfully\n\t\t\t\t\tthis._onDidStop.fire(<DebugProtocol.StoppedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'continued':\n\t\t\t\t\tthis.allThreadsContinued = (<DebugProtocol.ContinuedEvent>event).body.allThreadsContinued === false ? false : true;\n\t\t\t\t\tthis._onDidContinued.fire(<DebugProtocol.ContinuedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thread':\n\t\t\t\t\tthis._onDidThread.fire(<DebugProtocol.ThreadEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output':\n\t\t\t\t\tthis._onDidOutput.fire(<DebugProtocol.OutputEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'breakpoint':\n\t\t\t\t\tthis._onDidBreakpoint.fire(<DebugProtocol.BreakpointEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'terminated':\n\t\t\t\t\tthis._onDidTerminateDebugee.fire(<DebugProtocol.TerminatedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'exit':\n\t\t\t\t\tthis._onDidExitDebugee.fire(<DebugProtocol.ExitedEvent>event);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis._onDidCustomEvent.fire(event);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._onDidEvent.fire(event);\n\t\t});\n\n\t\tthis.debugAdapter.onRequest(request => this.dispatchRequest(request, dbgr));\n\t}\n\n\tpublic get onDidExitAdapter(): Event<AdapterEndEvent> {\n\t\treturn this._onDidExitAdapter.event;\n\t}\n\n\tpublic get capabilities(): DebugProtocol.Capabilities {\n\t\treturn this._capabilities;\n\t}\n\n\t/**\n\t * DA is ready to accepts setBreakpoint requests.\n\t * Becomes true after \"initialized\" events has been received.\n\t */\n\tpublic get readyForBreakpoints(): boolean {\n\t\treturn this._readyForBreakpoints;\n\t}\n\n\t//---- DAP events\n\n\tpublic get onDidInitialize(): Event<DebugProtocol.InitializedEvent> {\n\t\treturn this._onDidInitialize.event;\n\t}\n\n\tpublic get onDidStop(): Event<DebugProtocol.StoppedEvent> {\n\t\treturn this._onDidStop.event;\n\t}\n\n\tpublic get onDidContinued(): Event<DebugProtocol.ContinuedEvent> {\n\t\treturn this._onDidContinued.event;\n\t}\n\n\tpublic get onDidTerminateDebugee(): Event<DebugProtocol.TerminatedEvent> {\n\t\treturn this._onDidTerminateDebugee.event;\n\t}\n\n\tpublic get onDidExitDebugee(): Event<DebugProtocol.ExitedEvent> {\n\t\treturn this._onDidExitDebugee.event;\n\t}\n\n\tpublic get onDidThread(): Event<DebugProtocol.ThreadEvent> {\n\t\treturn this._onDidThread.event;\n\t}\n\n\tpublic get onDidOutput(): Event<DebugProtocol.OutputEvent> {\n\t\treturn this._onDidOutput.event;\n\t}\n\n\tpublic get onDidBreakpoint(): Event<DebugProtocol.BreakpointEvent> {\n\t\treturn this._onDidBreakpoint.event;\n\t}\n\n\tpublic get onDidLoadedSource(): Event<DebugProtocol.LoadedSourceEvent> {\n\t\treturn this._onDidLoadedSource.event;\n\t}\n\n\tpublic get onDidCustomEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidCustomEvent.event;\n\t}\n\n\tpublic get onDidEvent(): Event<DebugProtocol.Event> {\n\t\treturn this._onDidEvent.event;\n\t}\n\n\t//---- DebugAdapter lifecycle\n\n\t/**\n\t * Starts the underlying debug adapter and tracks the session time for telemetry.\n\t */\n\tpublic start(): Promise<void> {\n\t\tif (!this.debugAdapter) {\n\t\t\treturn Promise.reject(new Error('no debug adapter'));\n\t\t}\n\t\treturn this.debugAdapter.startSession().then(() => {\n\t\t\tthis.startTime = new Date().getTime();\n\t\t}, err => {\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\t/**\n\t * Send client capabilities to the debug adapter and receive DA capabilities in return.\n\t */\n\tpublic initialize(args: DebugProtocol.InitializeRequestArguments): Promise<DebugProtocol.InitializeResponse> {\n\t\treturn this.send('initialize', args).then((response: DebugProtocol.InitializeResponse) => {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\t/**\n\t * Terminate the debuggee and shutdown the adapter\n\t */\n\tpublic disconnect(restart = false): Promise<any> {\n\t\treturn this.shutdown(undefined, restart);\n\t}\n\n\t//---- DAP requests\n\n\tpublic launchOrAttach(config: IConfig): Promise<DebugProtocol.Response> {\n\t\treturn this.send(config.request, config).then(response => {\n\t\t\tthis.mergeCapabilities(response.body);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\t/**\n\t * Try killing the debuggee softly...\n\t */\n\tpublic terminate(restart = false): Promise<DebugProtocol.TerminateResponse> {\n\t\tif (this.capabilities.supportsTerminateRequest) {\n\t\t\tif (!this.terminated) {\n\t\t\t\tthis.terminated = true;\n\t\t\t\treturn this.send('terminate', { restart });\n\t\t\t}\n\t\t\treturn this.disconnect(restart);\n\t\t}\n\t\treturn Promise.reject(new Error('terminated not supported'));\n\t}\n\n\tpublic restart(): Promise<DebugProtocol.RestartResponse> {\n\t\tif (this.capabilities.supportsRestartRequest) {\n\t\t\treturn this.send('restart', null);\n\t\t}\n\t\treturn Promise.reject(new Error('restart not supported'));\n\t}\n\n\tpublic next(args: DebugProtocol.NextArguments): Promise<DebugProtocol.NextResponse> {\n\t\treturn this.send('next', args).then(response => {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\tpublic stepIn(args: DebugProtocol.StepInArguments): Promise<DebugProtocol.StepInResponse> {\n\t\treturn this.send('stepIn', args).then(response => {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\tpublic stepOut(args: DebugProtocol.StepOutArguments): Promise<DebugProtocol.StepOutResponse> {\n\t\treturn this.send('stepOut', args).then(response => {\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\tpublic continue(args: DebugProtocol.ContinueArguments): Promise<DebugProtocol.ContinueResponse> {\n\t\treturn this.send<DebugProtocol.ContinueResponse>('continue', args).then(response => {\n\t\t\tif (response && response.body && response.body.allThreadsContinued !== undefined) {\n\t\t\t\tthis.allThreadsContinued = response.body.allThreadsContinued;\n\t\t\t}\n\t\t\tthis.fireSimulatedContinuedEvent(args.threadId, this.allThreadsContinued);\n\t\t\treturn response;\n\t\t});\n\t}\n\n\tpublic pause(args: DebugProtocol.PauseArguments): Promise<DebugProtocol.PauseResponse> {\n\t\treturn this.send('pause', args);\n\t}\n\n\tpublic terminateThreads(args: DebugProtocol.TerminateThreadsArguments): Promise<DebugProtocol.TerminateThreadsResponse> {\n\t\tif (this.capabilities.supportsTerminateThreadsRequest) {\n\t\t\treturn this.send('terminateThreads', args);\n\t\t}\n\t\treturn Promise.reject(new Error('terminateThreads not supported'));\n\t}\n\n\tpublic setVariable(args: DebugProtocol.SetVariableArguments): Promise<DebugProtocol.SetVariableResponse> {\n\t\tif (this.capabilities.supportsSetVariable) {\n\t\t\treturn this.send<DebugProtocol.SetVariableResponse>('setVariable', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setVariable not supported'));\n\t}\n\n\tpublic restartFrame(args: DebugProtocol.RestartFrameArguments, threadId: number): Promise<DebugProtocol.RestartFrameResponse> {\n\t\tif (this.capabilities.supportsRestartFrame) {\n\t\t\treturn this.send('restartFrame', args).then(response => {\n\t\t\t\tthis.fireSimulatedContinuedEvent(threadId);\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(new Error('restartFrame not supported'));\n\t}\n\n\tpublic completions(args: DebugProtocol.CompletionsArguments): Promise<DebugProtocol.CompletionsResponse> {\n\t\tif (this.capabilities.supportsCompletionsRequest) {\n\t\t\treturn this.send<DebugProtocol.CompletionsResponse>('completions', args);\n\t\t}\n\t\treturn Promise.reject(new Error('completions not supported'));\n\t}\n\n\tpublic setBreakpoints(args: DebugProtocol.SetBreakpointsArguments): Promise<DebugProtocol.SetBreakpointsResponse> {\n\t\treturn this.send<DebugProtocol.SetBreakpointsResponse>('setBreakpoints', args);\n\t}\n\n\tpublic setFunctionBreakpoints(args: DebugProtocol.SetFunctionBreakpointsArguments): Promise<DebugProtocol.SetFunctionBreakpointsResponse> {\n\t\tif (this.capabilities.supportsFunctionBreakpoints) {\n\t\t\treturn this.send<DebugProtocol.SetFunctionBreakpointsResponse>('setFunctionBreakpoints', args);\n\t\t}\n\t\treturn Promise.reject(new Error('setFunctionBreakpoints not supported'));\n\t}\n\n\tpublic setExceptionBreakpoints(args: DebugProtocol.SetExceptionBreakpointsArguments): Promise<DebugProtocol.SetExceptionBreakpointsResponse> {\n\t\treturn this.send<DebugProtocol.SetExceptionBreakpointsResponse>('setExceptionBreakpoints', args);\n\t}\n\n\tpublic configurationDone(): Promise<DebugProtocol.ConfigurationDoneResponse> {\n\t\tif (this.capabilities.supportsConfigurationDoneRequest) {\n\t\t\treturn this.send('configurationDone', null);\n\t\t}\n\t\treturn Promise.reject(new Error('configurationDone not supported'));\n\t}\n\n\tpublic stackTrace(args: DebugProtocol.StackTraceArguments): Promise<DebugProtocol.StackTraceResponse> {\n\t\treturn this.send<DebugProtocol.StackTraceResponse>('stackTrace', args);\n\t}\n\n\tpublic exceptionInfo(args: DebugProtocol.ExceptionInfoArguments): Promise<DebugProtocol.ExceptionInfoResponse> {\n\t\tif (this.capabilities.supportsExceptionInfoRequest) {\n\t\t\treturn this.send<DebugProtocol.ExceptionInfoResponse>('exceptionInfo', args);\n\t\t}\n\t\treturn Promise.reject(new Error('exceptionInfo not supported'));\n\t}\n\n\tpublic scopes(args: DebugProtocol.ScopesArguments): Promise<DebugProtocol.ScopesResponse> {\n\t\treturn this.send<DebugProtocol.ScopesResponse>('scopes', args);\n\t}\n\n\tpublic variables(args: DebugProtocol.VariablesArguments): Promise<DebugProtocol.VariablesResponse> {\n\t\treturn this.send<DebugProtocol.VariablesResponse>('variables', args);\n\t}\n\n\tpublic source(args: DebugProtocol.SourceArguments): Promise<DebugProtocol.SourceResponse> {\n\t\treturn this.send<DebugProtocol.SourceResponse>('source', args);\n\t}\n\n\tpublic loadedSources(args: DebugProtocol.LoadedSourcesArguments): Promise<DebugProtocol.LoadedSourcesResponse> {\n\t\tif (this.capabilities.supportsLoadedSourcesRequest) {\n\t\t\treturn this.send<DebugProtocol.LoadedSourcesResponse>('loadedSources', args);\n\t\t}\n\t\treturn Promise.reject(new Error('loadedSources not supported'));\n\t}\n\n\tpublic threads(): Promise<DebugProtocol.ThreadsResponse> {\n\t\treturn this.send<DebugProtocol.ThreadsResponse>('threads', null);\n\t}\n\n\tpublic evaluate(args: DebugProtocol.EvaluateArguments): Promise<DebugProtocol.EvaluateResponse> {\n\t\treturn this.send<DebugProtocol.EvaluateResponse>('evaluate', args);\n\t}\n\n\tpublic stepBack(args: DebugProtocol.StepBackArguments): Promise<DebugProtocol.StepBackResponse> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\treturn this.send('stepBack', args).then(response => {\n\t\t\t\tif (response.body === undefined) {\t// TODO@AW why this check?\n\t\t\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(new Error('stepBack not supported'));\n\t}\n\n\tpublic reverseContinue(args: DebugProtocol.ReverseContinueArguments): Promise<DebugProtocol.ReverseContinueResponse> {\n\t\tif (this.capabilities.supportsStepBack) {\n\t\t\treturn this.send('reverseContinue', args).then(response => {\n\t\t\t\tif (response.body === undefined) {\t// TODO@AW why this check?\n\t\t\t\t\tthis.fireSimulatedContinuedEvent(args.threadId);\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(new Error('reverseContinue not supported'));\n\t}\n\n\tpublic custom(request: string, args: any): Promise<DebugProtocol.Response> {\n\t\treturn this.send(request, args);\n\t}\n\n\t//---- private\n\n\n\tprivate shutdown(error?: Error, restart = false): Promise<any> {\n\t\tif (!this.inShutdown) {\n\t\t\tthis.inShutdown = true;\n\t\t\tif (this.debugAdapter) {\n\t\t\t\treturn this.send('disconnect', { restart }, 500).then(() => {\n\t\t\t\t\tthis.stopAdapter(error);\n\t\t\t\t}, () => {\n\t\t\t\t\t// ignore error\n\t\t\t\t\tthis.stopAdapter(error);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.stopAdapter(error);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate stopAdapter(error?: Error): Promise<any> {\n\t\tif (this.debugAdapter) {\n\t\t\tconst da = this.debugAdapter;\n\t\t\tthis.debugAdapter = null;\n\t\t\treturn da.stopSession().then(_ => {\n\t\t\t\tthis.debugAdapterStopped = true;\n\t\t\t\tthis.fireAdapterExitEvent(error);\n\t\t\t}, err => {\n\t\t\t\tthis.fireAdapterExitEvent(error);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.fireAdapterExitEvent(error);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate fireAdapterExitEvent(error?: Error): void {\n\t\tif (!this.firedAdapterExitEvent) {\n\t\t\tthis.firedAdapterExitEvent = true;\n\n\t\t\tconst e: AdapterEndEvent = {\n\t\t\t\temittedStopped: this.didReceiveStoppedEvent,\n\t\t\t\tsessionLengthInSeconds: (new Date().getTime() - this.startTime) / 1000\n\t\t\t};\n\t\t\tif (error && !this.debugAdapterStopped) {\n\t\t\t\te.error = error;\n\t\t\t}\n\t\t\tthis._onDidExitAdapter.fire(e);\n\t\t}\n\t}\n\n\tprivate dispatchRequest(request: DebugProtocol.Request, dbgr: IDebugger): void {\n\n\t\tconst response: DebugProtocol.Response = {\n\t\t\ttype: 'response',\n\t\t\tseq: 0,\n\t\t\tcommand: request.command,\n\t\t\trequest_seq: request.seq,\n\t\t\tsuccess: true\n\t\t};\n\n\t\tconst safeSendResponse = (response: DebugProtocol.Response) => this.debugAdapter && this.debugAdapter.sendResponse(response);\n\n\t\tswitch (request.command) {\n\t\t\tcase 'launchVSCode':\n\t\t\t\tthis.launchVsCode(<ILaunchVSCodeArguments>request.arguments).then(pid => {\n\t\t\t\t\tresponse.body = {\n\t\t\t\t\t\tprocessId: pid\n\t\t\t\t\t};\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t}, err => {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = err.message;\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'runInTerminal':\n\t\t\t\tdbgr.runInTerminal(request.arguments as DebugProtocol.RunInTerminalRequestArguments).then(shellProcessId => {\n\t\t\t\t\tconst resp = response as DebugProtocol.RunInTerminalResponse;\n\t\t\t\t\tresp.body = {};\n\t\t\t\t\tif (typeof shellProcessId === 'number') {\n\t\t\t\t\t\tresp.body.shellProcessId = shellProcessId;\n\t\t\t\t\t}\n\t\t\t\t\tsafeSendResponse(resp);\n\t\t\t\t}, err => {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = err.message;\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'handshake':\n\t\t\t\ttry {\n\t\t\t\t\tconst vsda = <any>require.__$__nodeRequire('vsda');\n\t\t\t\t\tconst obj = new vsda.signer();\n\t\t\t\t\tconst sig = obj.sign(request.arguments.value);\n\t\t\t\t\tresponse.body = {\n\t\t\t\t\t\tsignature: sig\n\t\t\t\t\t};\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tresponse.success = false;\n\t\t\t\t\tresponse.message = e.message;\n\t\t\t\t\tsafeSendResponse(response);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresponse.success = false;\n\t\t\t\tresponse.message = `unknown request '${request.command}'`;\n\t\t\t\tsafeSendResponse(response);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate launchVsCode(vscodeArgs: ILaunchVSCodeArguments): Promise<number> {\n\n\t\tconst spawnOpts: cp.SpawnOptions = {\n\t\t\tdetached: false\t// https://github.com/Microsoft/vscode/issues/57018\n\t\t};\n\n\t\tif (vscodeArgs.env) {\n\t\t\t// merge environment variables into a copy of the process.env\n\t\t\tconst envArgs = objects.mixin(objects.mixin({}, process.env), vscodeArgs.env);\n\t\t\t// and delete some if necessary\n\t\t\tObject.keys(envArgs).filter(k => envArgs[k] === null).forEach(key => delete envArgs[key]);\n\t\t\tspawnOpts.env = envArgs;\n\t\t}\n\n\t\tlet spawnArgs = vscodeArgs.args.map(a => {\n\t\t\tif ((a.prefix === '--file-uri=' || a.prefix === '--folder-uri=') && !isUri(a.path)) {\n\t\t\t\treturn (a.path || '');\n\t\t\t}\n\t\t\treturn (a.prefix || '') + (a.path || '');\n\t\t});\n\n\t\tlet runtimeExecutable = this.environmentService['execPath'];\n\t\tif (!runtimeExecutable) {\n\t\t\treturn Promise.reject(new Error(`VS Code executable unknown`));\n\t\t}\n\n\t\t// if VS Code runs out of sources, add the VS Code workspace path as the first argument so that Electron turns into VS Code\n\t\tconst electronIdx = runtimeExecutable.indexOf(process.platform === 'win32' ? '\\\\.build\\\\electron\\\\' : '/.build/electron/');\n\t\tif (electronIdx > 0) {\n\t\t\t// guess the VS Code workspace path from the executable\n\t\t\tconst vscodeWorkspacePath = runtimeExecutable.substr(0, electronIdx);\n\n\t\t\t// only add VS Code workspace path if user hasn't already added that path as a (folder) argument\n\t\t\tconst x = spawnArgs.filter(a => a.indexOf(vscodeWorkspacePath) === 0);\n\t\t\tif (x.length === 0) {\n\t\t\t\tspawnArgs.unshift(vscodeWorkspacePath);\n\t\t\t}\n\t\t}\n\n\t\t// Workaround for bug Microsoft/vscode#45832\n\t\tif (process.platform === 'win32' && runtimeExecutable.indexOf(' ') > 0) {\n\t\t\tlet foundArgWithSpace = false;\n\n\t\t\t// check whether there is one arg with a space\n\t\t\tconst args: string[] = [];\n\t\t\tfor (const a of spawnArgs) {\n\t\t\t\tif (a.indexOf(' ') > 0) {\n\t\t\t\t\targs.push(`\"${a}\"`);\n\t\t\t\t\tfoundArgWithSpace = true;\n\t\t\t\t} else {\n\t\t\t\t\targs.push(a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (foundArgWithSpace) {\n\t\t\t\tspawnArgs = args;\n\t\t\t\truntimeExecutable = `\"${runtimeExecutable}\"`;\n\t\t\t\tspawnOpts.shell = true;\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst process = cp.spawn(runtimeExecutable, spawnArgs, spawnOpts);\n\t\t\tprocess.on('error', error => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t\tprocess.on('exit', code => {\n\t\t\t\tif (code === 0) {\n\t\t\t\t\tresolve(process.pid);\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error(`VS Code exited with ${code}`));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate send<R extends DebugProtocol.Response>(command: string, args: any, timeout?: number): Promise<R> {\n\t\treturn new Promise<R>((completeDispatch, errorDispatch) => {\n\t\t\tif (!this.debugAdapter) {\n\t\t\t\terrorDispatch(new Error('no debug adapter found'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.debugAdapter.sendRequest(command, args, (response: R) => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tcompleteDispatch(response);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(response);\n\t\t\t\t}\n\t\t\t}, timeout);\n\t\t}).then(response => response, err => Promise.reject(this.handleErrorResponse(err)));\n\t}\n\n\tprivate handleErrorResponse(errorResponse: DebugProtocol.Response): Error {\n\n\t\tif (errorResponse.command === 'canceled' && errorResponse.message === 'canceled') {\n\t\t\treturn errors.canceled();\n\t\t}\n\n\t\tconst error = errorResponse && errorResponse.body ? errorResponse.body.error : null;\n\t\tconst errorMessage = errorResponse ? errorResponse.message || '' : '';\n\n\t\tif (error && error.sendTelemetry) {\n\t\t\tconst telemetryMessage = error ? formatPII(error.format, true, error.variables) : errorMessage;\n\t\t\tthis.telemetryDebugProtocolErrorResponse(telemetryMessage);\n\t\t}\n\n\t\tconst userMessage = error ? formatPII(error.format, false, error.variables) : errorMessage;\n\t\tif (error && error.url) {\n\t\t\tconst label = error.urlLabel ? error.urlLabel : nls.localize('moreInfo', \"More Info\");\n\t\t\treturn createErrorWithActions(userMessage, {\n\t\t\t\tactions: [new Action('debug.moreInfo', label, undefined, true, () => {\n\t\t\t\t\twindow.open(error.url);\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t})]\n\t\t\t});\n\t\t}\n\n\t\treturn new Error(userMessage);\n\t}\n\n\tprivate mergeCapabilities(capabilities: DebugProtocol.Capabilities | undefined): void {\n\t\tif (capabilities) {\n\t\t\tthis._capabilities = objects.mixin(this._capabilities, capabilities);\n\t\t}\n\t}\n\n\tprivate fireSimulatedContinuedEvent(threadId: number, allThreadsContinued = false): void {\n\t\tthis._onDidContinued.fire({\n\t\t\ttype: 'event',\n\t\t\tevent: 'continued',\n\t\t\tbody: {\n\t\t\t\tthreadId,\n\t\t\t\tallThreadsContinued\n\t\t\t},\n\t\t\tseq: undefined!\n\t\t});\n\t}\n\n\tprivate telemetryDebugProtocolErrorResponse(telemetryMessage: string | undefined) {\n\t\t/* __GDPR__\n\t\t\t\"debugProtocolErrorResponse\" : {\n\t\t\t\t\"error\" : { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('debugProtocolErrorResponse', { error: telemetryMessage });\n\t\tif (this.customTelemetryService) {\n\t\t\t/* __GDPR__TODO__\n\t\t\t\tThe message is sent in the name of the adapter but the adapter doesn't know about it.\n\t\t\t\tHowever, since adapters are an open-ended set, we can not declared the events statically either.\n\t\t\t*/\n\t\t\tthis.customTelemetryService.publicLog('debugProtocolErrorResponse', { error: telemetryMessage });\n\t\t}\n\t}\n}\n"]}]}