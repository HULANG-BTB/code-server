{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/platform/environment/common/environment\", \"vs/base/common/path\", \"vs/base/node/pfs\", \"vs/base/common/errors\", \"vs/base/common/lifecycle\"], function (require, exports, environment_1, path_1, pfs_1, errors_1, lifecycle_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let LogsDataCleaner = class LogsDataCleaner extends lifecycle_1.Disposable {\n        constructor(environmentService) {\n            super();\n            this.environmentService = environmentService;\n            this.cleanUpOldLogsSoon();\n        }\n        cleanUpOldLogsSoon() {\n            let handle = setTimeout(() => {\n                handle = undefined;\n                const currentLog = path_1.basename(this.environmentService.logsPath);\n                const logsRoot = path_1.dirname(this.environmentService.logsPath);\n                pfs_1.readdir(logsRoot).then(children => {\n                    const allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n                    const oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n                    const toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n                    return Promise.all(toDelete.map(name => pfs_1.rimraf(path_1.join(logsRoot, name))));\n                }).then(null, errors_1.onUnexpectedError);\n            }, 10 * 1000);\n            this._register(lifecycle_1.toDisposable(() => clearTimeout(handle)));\n        }\n    };\n    LogsDataCleaner = __decorate([\n        __param(0, environment_1.IEnvironmentService)\n    ], LogsDataCleaner);\n    exports.LogsDataCleaner = LogsDataCleaner;\n});\n",null]}