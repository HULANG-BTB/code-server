{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/fontZoom/fontZoom.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/editor/browser/editorExtensions\", \"vs/editor/common/config/editorZoom\"], function (require, exports, nls, editorExtensions_1, editorZoom_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class EditorFontZoomIn extends editorExtensions_1.EditorAction {\n        constructor() {\n            super({\n                id: 'editor.action.fontZoomIn',\n                label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\n                alias: 'Editor Font Zoom In',\n                precondition: null\n            });\n        }\n        run(accessor, editor) {\n            editorZoom_1.EditorZoom.setZoomLevel(editorZoom_1.EditorZoom.getZoomLevel() + 1);\n        }\n    }\n    class EditorFontZoomOut extends editorExtensions_1.EditorAction {\n        constructor() {\n            super({\n                id: 'editor.action.fontZoomOut',\n                label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\n                alias: 'Editor Font Zoom Out',\n                precondition: null\n            });\n        }\n        run(accessor, editor) {\n            editorZoom_1.EditorZoom.setZoomLevel(editorZoom_1.EditorZoom.getZoomLevel() - 1);\n        }\n    }\n    class EditorFontZoomReset extends editorExtensions_1.EditorAction {\n        constructor() {\n            super({\n                id: 'editor.action.fontZoomReset',\n                label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\n                alias: 'Editor Font Zoom Reset',\n                precondition: null\n            });\n        }\n        run(accessor, editor) {\n            editorZoom_1.EditorZoom.setZoomLevel(0);\n        }\n    }\n    editorExtensions_1.registerEditorAction(EditorFontZoomIn);\n    editorExtensions_1.registerEditorAction(EditorFontZoomOut);\n    editorExtensions_1.registerEditorAction(EditorFontZoomReset);\n});\n",null]}