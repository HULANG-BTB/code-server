{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/clickLinkGesture.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/clickLinkGesture.ts","mtime":1555846338032},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./goToDefinitionMouse\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar browser = require(\"vs/base/browser/browser\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nfunction hasModifier(e, modifier) {\n    return !!e[modifier];\n}\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nvar ClickLinkMouseEvent = /** @class */ (function () {\n    function ClickLinkMouseEvent(source, opts) {\n        this.target = source.target;\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n        this.isNoneOrSingleMouseDown = (browser.isIE || source.event.detail <= 1); // IE does not support event.detail properly\n    }\n    return ClickLinkMouseEvent;\n}());\nexports.ClickLinkMouseEvent = ClickLinkMouseEvent;\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nvar ClickLinkKeyboardEvent = /** @class */ (function () {\n    function ClickLinkKeyboardEvent(source, opts) {\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n    }\n    return ClickLinkKeyboardEvent;\n}());\nexports.ClickLinkKeyboardEvent = ClickLinkKeyboardEvent;\nvar ClickLinkOptions = /** @class */ (function () {\n    function ClickLinkOptions(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\n        this.triggerKey = triggerKey;\n        this.triggerModifier = triggerModifier;\n        this.triggerSideBySideKey = triggerSideBySideKey;\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\n    }\n    ClickLinkOptions.prototype.equals = function (other) {\n        return (this.triggerKey === other.triggerKey\n            && this.triggerModifier === other.triggerModifier\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\n    };\n    return ClickLinkOptions;\n}());\nexports.ClickLinkOptions = ClickLinkOptions;\nfunction createOptions(multiCursorModifier) {\n    if (multiCursorModifier === 'altKey') {\n        if (browser.isMacintosh) {\n            return new ClickLinkOptions(keyCodes_1.KeyCode.Meta, 'metaKey', keyCodes_1.KeyCode.Alt, 'altKey');\n        }\n        return new ClickLinkOptions(keyCodes_1.KeyCode.Ctrl, 'ctrlKey', keyCodes_1.KeyCode.Alt, 'altKey');\n    }\n    if (browser.isMacintosh) {\n        return new ClickLinkOptions(keyCodes_1.KeyCode.Alt, 'altKey', keyCodes_1.KeyCode.Meta, 'metaKey');\n    }\n    return new ClickLinkOptions(keyCodes_1.KeyCode.Alt, 'altKey', keyCodes_1.KeyCode.Ctrl, 'ctrlKey');\n}\nvar ClickLinkGesture = /** @class */ (function (_super) {\n    tslib_1.__extends(ClickLinkGesture, _super);\n    function ClickLinkGesture(editor) {\n        var _this = _super.call(this) || this;\n        _this._onMouseMoveOrRelevantKeyDown = _this._register(new event_1.Emitter());\n        _this.onMouseMoveOrRelevantKeyDown = _this._onMouseMoveOrRelevantKeyDown.event;\n        _this._onExecute = _this._register(new event_1.Emitter());\n        _this.onExecute = _this._onExecute.event;\n        _this._onCancel = _this._register(new event_1.Emitter());\n        _this.onCancel = _this._onCancel.event;\n        _this._editor = editor;\n        _this._opts = createOptions(_this._editor.getConfiguration().multiCursorModifier);\n        _this.lastMouseMoveEvent = null;\n        _this.hasTriggerKeyOnMouseDown = false;\n        _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n            if (e.multiCursorModifier) {\n                var newOpts = createOptions(_this._editor.getConfiguration().multiCursorModifier);\n                if (_this._opts.equals(newOpts)) {\n                    return;\n                }\n                _this._opts = newOpts;\n                _this.lastMouseMoveEvent = null;\n                _this.hasTriggerKeyOnMouseDown = false;\n                _this._onCancel.fire();\n            }\n        }));\n        _this._register(_this._editor.onMouseMove(function (e) { return _this.onEditorMouseMove(new ClickLinkMouseEvent(e, _this._opts)); }));\n        _this._register(_this._editor.onMouseDown(function (e) { return _this.onEditorMouseDown(new ClickLinkMouseEvent(e, _this._opts)); }));\n        _this._register(_this._editor.onMouseUp(function (e) { return _this.onEditorMouseUp(new ClickLinkMouseEvent(e, _this._opts)); }));\n        _this._register(_this._editor.onKeyDown(function (e) { return _this.onEditorKeyDown(new ClickLinkKeyboardEvent(e, _this._opts)); }));\n        _this._register(_this._editor.onKeyUp(function (e) { return _this.onEditorKeyUp(new ClickLinkKeyboardEvent(e, _this._opts)); }));\n        _this._register(_this._editor.onMouseDrag(function () { return _this.resetHandler(); }));\n        _this._register(_this._editor.onDidChangeCursorSelection(function (e) { return _this.onDidChangeCursorSelection(e); }));\n        _this._register(_this._editor.onDidChangeModel(function (e) { return _this.resetHandler(); }));\n        _this._register(_this._editor.onDidChangeModelContent(function () { return _this.resetHandler(); }));\n        _this._register(_this._editor.onDidScrollChange(function (e) {\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\n                _this.resetHandler();\n            }\n        }));\n        return _this;\n    }\n    ClickLinkGesture.prototype.onDidChangeCursorSelection = function (e) {\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n            this.resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/Microsoft/vscode/issues/7827)\n        }\n    };\n    ClickLinkGesture.prototype.onEditorMouseMove = function (mouseEvent) {\n        this.lastMouseMoveEvent = mouseEvent;\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n    };\n    ClickLinkGesture.prototype.onEditorMouseDown = function (mouseEvent) {\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n        // release the mouse button without wanting to do the navigation.\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n        this.hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n    };\n    ClickLinkGesture.prototype.onEditorMouseUp = function (mouseEvent) {\n        if (this.hasTriggerKeyOnMouseDown) {\n            this._onExecute.fire(mouseEvent);\n        }\n    };\n    ClickLinkGesture.prototype.onEditorKeyDown = function (e) {\n        if (this.lastMouseMoveEvent\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n            )) {\n            this._onMouseMoveOrRelevantKeyDown.fire([this.lastMouseMoveEvent, e]);\n        }\n        else if (e.hasTriggerModifier) {\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n        }\n    };\n    ClickLinkGesture.prototype.onEditorKeyUp = function (e) {\n        if (e.keyCodeIsTriggerKey) {\n            this._onCancel.fire();\n        }\n    };\n    ClickLinkGesture.prototype.resetHandler = function () {\n        this.lastMouseMoveEvent = null;\n        this.hasTriggerKeyOnMouseDown = false;\n        this._onCancel.fire();\n    };\n    return ClickLinkGesture;\n}(lifecycle_1.Disposable));\nexports.ClickLinkGesture = ClickLinkGesture;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/clickLinkGesture.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/clickLinkGesture.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./goToDefinitionMouse';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport * as browser from 'vs/base/browser/browser';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ICodeEditor, IEditorMouseEvent, IMouseTarget } from 'vs/editor/browser/editorBrowser';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICursorSelectionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as platform from 'vs/base/common/platform';\n\nfunction hasModifier(e: { ctrlKey: boolean; shiftKey: boolean; altKey: boolean; metaKey: boolean }, modifier: 'ctrlKey' | 'shiftKey' | 'altKey' | 'metaKey'): boolean {\n\treturn !!e[modifier];\n}\n\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkMouseEvent {\n\n\tpublic readonly target: IMouseTarget;\n\tpublic readonly hasTriggerModifier: boolean;\n\tpublic readonly hasSideBySideModifier: boolean;\n\tpublic readonly isNoneOrSingleMouseDown: boolean;\n\n\tconstructor(source: IEditorMouseEvent, opts: ClickLinkOptions) {\n\t\tthis.target = source.target;\n\t\tthis.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\n\t\tthis.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\n\t\tthis.isNoneOrSingleMouseDown = (browser.isIE || source.event.detail <= 1); // IE does not support event.detail properly\n\t}\n}\n\n/**\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\n */\nexport class ClickLinkKeyboardEvent {\n\n\tpublic readonly keyCodeIsTriggerKey: boolean;\n\tpublic readonly keyCodeIsSideBySideKey: boolean;\n\tpublic readonly hasTriggerModifier: boolean;\n\n\tconstructor(source: IKeyboardEvent, opts: ClickLinkOptions) {\n\t\tthis.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\n\t\tthis.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\n\t\tthis.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\n\t}\n}\nexport type TriggerModifier = 'ctrlKey' | 'shiftKey' | 'altKey' | 'metaKey';\n\nexport class ClickLinkOptions {\n\n\tpublic readonly triggerKey: KeyCode;\n\tpublic readonly triggerModifier: TriggerModifier;\n\tpublic readonly triggerSideBySideKey: KeyCode;\n\tpublic readonly triggerSideBySideModifier: TriggerModifier;\n\n\tconstructor(\n\t\ttriggerKey: KeyCode,\n\t\ttriggerModifier: TriggerModifier,\n\t\ttriggerSideBySideKey: KeyCode,\n\t\ttriggerSideBySideModifier: TriggerModifier\n\t) {\n\t\tthis.triggerKey = triggerKey;\n\t\tthis.triggerModifier = triggerModifier;\n\t\tthis.triggerSideBySideKey = triggerSideBySideKey;\n\t\tthis.triggerSideBySideModifier = triggerSideBySideModifier;\n\t}\n\n\tpublic equals(other: ClickLinkOptions): boolean {\n\t\treturn (\n\t\t\tthis.triggerKey === other.triggerKey\n\t\t\t&& this.triggerModifier === other.triggerModifier\n\t\t\t&& this.triggerSideBySideKey === other.triggerSideBySideKey\n\t\t\t&& this.triggerSideBySideModifier === other.triggerSideBySideModifier\n\t\t);\n\t}\n}\n\nfunction createOptions(multiCursorModifier: 'altKey' | 'ctrlKey' | 'metaKey'): ClickLinkOptions {\n\tif (multiCursorModifier === 'altKey') {\n\t\tif (browser.isMacintosh) {\n\t\t\treturn new ClickLinkOptions(KeyCode.Meta, 'metaKey', KeyCode.Alt, 'altKey');\n\t\t}\n\t\treturn new ClickLinkOptions(KeyCode.Ctrl, 'ctrlKey', KeyCode.Alt, 'altKey');\n\t}\n\n\tif (browser.isMacintosh) {\n\t\treturn new ClickLinkOptions(KeyCode.Alt, 'altKey', KeyCode.Meta, 'metaKey');\n\t}\n\treturn new ClickLinkOptions(KeyCode.Alt, 'altKey', KeyCode.Ctrl, 'ctrlKey');\n}\n\nexport class ClickLinkGesture extends Disposable {\n\n\tprivate readonly _onMouseMoveOrRelevantKeyDown: Emitter<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]> = this._register(new Emitter<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]>());\n\tpublic readonly onMouseMoveOrRelevantKeyDown: Event<[ClickLinkMouseEvent, ClickLinkKeyboardEvent | null]> = this._onMouseMoveOrRelevantKeyDown.event;\n\n\tprivate readonly _onExecute: Emitter<ClickLinkMouseEvent> = this._register(new Emitter<ClickLinkMouseEvent>());\n\tpublic readonly onExecute: Event<ClickLinkMouseEvent> = this._onExecute.event;\n\n\tprivate readonly _onCancel: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onCancel: Event<void> = this._onCancel.event;\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _opts: ClickLinkOptions;\n\n\tprivate lastMouseMoveEvent: ClickLinkMouseEvent | null;\n\tprivate hasTriggerKeyOnMouseDown: boolean;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\t\tthis._opts = createOptions(this._editor.getConfiguration().multiCursorModifier);\n\n\t\tthis.lastMouseMoveEvent = null;\n\t\tthis.hasTriggerKeyOnMouseDown = false;\n\n\t\tthis._register(this._editor.onDidChangeConfiguration((e) => {\n\t\t\tif (e.multiCursorModifier) {\n\t\t\t\tconst newOpts = createOptions(this._editor.getConfiguration().multiCursorModifier);\n\t\t\t\tif (this._opts.equals(newOpts)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._opts = newOpts;\n\t\t\t\tthis.lastMouseMoveEvent = null;\n\t\t\t\tthis.hasTriggerKeyOnMouseDown = false;\n\t\t\t\tthis._onCancel.fire();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._editor.onMouseMove((e: IEditorMouseEvent) => this.onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseDown((e: IEditorMouseEvent) => this.onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseUp((e: IEditorMouseEvent) => this.onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\n\t\tthis._register(this._editor.onKeyDown((e: IKeyboardEvent) => this.onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\n\t\tthis._register(this._editor.onKeyUp((e: IKeyboardEvent) => this.onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\n\t\tthis._register(this._editor.onMouseDrag(() => this.resetHandler()));\n\n\t\tthis._register(this._editor.onDidChangeCursorSelection((e) => this.onDidChangeCursorSelection(e)));\n\t\tthis._register(this._editor.onDidChangeModel((e) => this.resetHandler()));\n\t\tthis._register(this._editor.onDidChangeModelContent(() => this.resetHandler()));\n\t\tthis._register(this._editor.onDidScrollChange((e) => {\n\t\t\tif (e.scrollTopChanged || e.scrollLeftChanged) {\n\t\t\t\tthis.resetHandler();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onDidChangeCursorSelection(e: ICursorSelectionChangedEvent): void {\n\t\tif (e.selection && e.selection.startColumn !== e.selection.endColumn) {\n\t\t\tthis.resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/Microsoft/vscode/issues/7827)\n\t\t}\n\t}\n\n\tprivate onEditorMouseMove(mouseEvent: ClickLinkMouseEvent): void {\n\t\tthis.lastMouseMoveEvent = mouseEvent;\n\n\t\tthis._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\n\t}\n\n\tprivate onEditorMouseDown(mouseEvent: ClickLinkMouseEvent): void {\n\t\t// We need to record if we had the trigger key on mouse down because someone might select something in the editor\n\t\t// holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\n\t\t// release the mouse button without wanting to do the navigation.\n\t\t// With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\n\t\tthis.hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\n\t}\n\n\tprivate onEditorMouseUp(mouseEvent: ClickLinkMouseEvent): void {\n\t\tif (this.hasTriggerKeyOnMouseDown) {\n\t\t\tthis._onExecute.fire(mouseEvent);\n\t\t}\n\t}\n\n\tprivate onEditorKeyDown(e: ClickLinkKeyboardEvent): void {\n\t\tif (\n\t\t\tthis.lastMouseMoveEvent\n\t\t\t&& (\n\t\t\t\te.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\n\t\t\t\t|| (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\n\t\t\t)\n\t\t) {\n\t\t\tthis._onMouseMoveOrRelevantKeyDown.fire([this.lastMouseMoveEvent, e]);\n\t\t} else if (e.hasTriggerModifier) {\n\t\t\tthis._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\n\t\t}\n\t}\n\n\tprivate onEditorKeyUp(e: ClickLinkKeyboardEvent): void {\n\t\tif (e.keyCodeIsTriggerKey) {\n\t\t\tthis._onCancel.fire();\n\t\t}\n\t}\n\n\tprivate resetHandler(): void {\n\t\tthis.lastMouseMoveEvent = null;\n\t\tthis.hasTriggerKeyOnMouseDown = false;\n\t\tthis._onCancel.fire();\n\t}\n}\n"]}]}