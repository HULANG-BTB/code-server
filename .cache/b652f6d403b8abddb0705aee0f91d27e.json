{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/accessibility/common/accessibility.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/accessibility/common/accessibility.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/instantiation/common/instantiation\"], function (require, exports, instantiation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.IAccessibilityService = instantiation_1.createDecorator('accessibilityService');\n    var AccessibilitySupport;\n    (function (AccessibilitySupport) {\n        /**\n         * This should be the browser case where it is not known if a screen reader is attached or no.\n         */\n        AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n        AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n        AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n    })(AccessibilitySupport = exports.AccessibilitySupport || (exports.AccessibilitySupport = {}));\n});\n",null]}