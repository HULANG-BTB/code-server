{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/common/hashService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/common/hashService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nexports.IHashService = instantiation_1.createDecorator('hashService');\nvar HashService = /** @class */ (function () {\n    function HashService() {\n    }\n    HashService.prototype.createSHA1 = function (content) {\n        return crypto.subtle.digest('SHA-1', new TextEncoder().encode(content)).then(function (buffer) {\n            // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#Converting_a_digest_to_a_hex_string\n            return Array.prototype.map.call(new Uint8Array(buffer), function (value) { return (\"00\" + value.toString(16)).slice(-2); }).join('');\n        });\n    };\n    return HashService;\n}());\nexports.HashService = HashService;\nextensions_1.registerSingleton(exports.IHashService, HashService, true);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/common/hashService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/hash/common/hashService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AACjF,0EAAgF;AAEnE,QAAA,YAAY,GAAG,+BAAe,CAAe,aAAa,CAAC,CAAC;AAWzE;IAAA;IAUA,CAAC;IANA,gCAAU,GAAV,UAAW,OAAe;QACzB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;YAClF,2GAA2G;YAC3G,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE,UAAC,KAAa,IAAK,OAAA,CAAA,OAAK,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1H,CAAC,CAAC,CAAC;IACJ,CAAC;IACF,kBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,kCAAW;AAYxB,8BAAiB,CAAC,oBAAY,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport const IHashService = createDecorator<IHashService>('hashService');\n\nexport interface IHashService {\n\t_serviceBrand: any;\n\n\t/**\n\t * Produce a SHA1 hash of the provided content.\n\t */\n\tcreateSHA1(content: string): Thenable<string>;\n}\n\nexport class HashService implements IHashService {\n\n\t_serviceBrand: any;\n\n\tcreateSHA1(content: string): Thenable<string> {\n\t\treturn crypto.subtle.digest('SHA-1', new TextEncoder().encode(content)).then(buffer => {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#Converting_a_digest_to_a_hex_string\n\t\t\treturn Array.prototype.map.call(new Uint8Array(buffer), (value: number) => `00${value.toString(16)}`.slice(-2)).join('');\n\t\t});\n\t}\n}\n\nregisterSingleton(IHashService, HashService, true);"]}]}