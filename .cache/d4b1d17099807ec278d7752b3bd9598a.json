{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewProtocols.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewProtocols.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar mime_1 = require(\"vs/base/common/mime\");\nvar path_1 = require(\"vs/base/common/path\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar remoteHosts_1 = require(\"vs/platform/remote/common/remoteHosts\");\nvar WebviewProtocol;\n(function (WebviewProtocol) {\n    WebviewProtocol[\"CoreResource\"] = \"vscode-core-resource\";\n    WebviewProtocol[\"VsCodeResource\"] = \"vscode-resource\";\n})(WebviewProtocol = exports.WebviewProtocol || (exports.WebviewProtocol = {}));\nfunction resolveContent(fileService, resource, mime, callback) {\n    fileService.resolveContent(resource, { encoding: 'binary' }).then(function (contents) {\n        callback({\n            data: Buffer.from(contents.value, contents.encoding),\n            mimeType: mime\n        });\n    }, function (err) {\n        console.log(err);\n        callback({ error: -2 /* FAILED: https://cs.chromium.org/chromium/src/net/base/net_error_list.h */ });\n    });\n}\nfunction registerFileProtocol(contents, protocol, fileService, extensionLocation, getRoots) {\n    contents.session.protocol.registerBufferProtocol(protocol, function (request, callback) {\n        if (extensionLocation && extensionLocation.scheme === remoteHosts_1.REMOTE_HOST_SCHEME) {\n            var requestUri = uri_1.URI.parse(request.url);\n            var redirectedUri = uri_1.URI.from({\n                scheme: remoteHosts_1.REMOTE_HOST_SCHEME,\n                authority: extensionLocation.authority,\n                path: '/vscode-resource',\n                query: JSON.stringify({\n                    requestResourcePath: requestUri.path\n                })\n            });\n            resolveContent(fileService, redirectedUri, getMimeType(requestUri), callback);\n            return;\n        }\n        var requestPath = uri_1.URI.parse(request.url).path;\n        var normalizedPath = uri_1.URI.file(requestPath);\n        for (var _i = 0, _a = getRoots(); _i < _a.length; _i++) {\n            var root = _a[_i];\n            if (strings_1.startsWith(normalizedPath.fsPath, root.fsPath + path_1.sep)) {\n                resolveContent(fileService, normalizedPath, getMimeType(normalizedPath), callback);\n                return;\n            }\n        }\n        console.error('Webview: Cannot load resource outside of protocol root');\n        callback({ error: -10 /* ACCESS_DENIED: https://cs.chromium.org/chromium/src/net/base/net_error_list.h */ });\n    }, function (error) {\n        if (error) {\n            console.error(\"Failed to register '\" + protocol + \"' protocol\");\n        }\n    });\n}\nexports.registerFileProtocol = registerFileProtocol;\nvar webviewMimeTypes = {\n    '.svg': 'image/svg+xml',\n    '.txt': 'text/plain',\n    '.css': 'text/css',\n    '.js': 'application/javascript',\n    '.json': 'application/json',\n    '.html': 'text/html',\n    '.htm': 'text/html',\n    '.xhtml': 'application/xhtml+xml',\n    '.oft': 'font/otf',\n    '.xml': 'application/xml',\n};\nfunction getMimeType(normalizedPath) {\n    var ext = path_1.extname(normalizedPath.fsPath).toLowerCase();\n    return webviewMimeTypes[ext] || mime_1.getMediaMime(normalizedPath.fsPath) || mime_1.MIME_UNKNOWN;\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewProtocols.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewProtocols.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getMediaMime, MIME_UNKNOWN } from 'vs/base/common/mime';\nimport { extname, sep } from 'vs/base/common/path';\nimport { startsWith } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { REMOTE_HOST_SCHEME } from 'vs/platform/remote/common/remoteHosts';\n\nexport const enum WebviewProtocol {\n\tCoreResource = 'vscode-core-resource',\n\tVsCodeResource = 'vscode-resource',\n}\n\nfunction resolveContent(fileService: IFileService, resource: URI, mime: string, callback: any): void {\n\tfileService.resolveContent(resource, { encoding: 'binary' }).then(contents => {\n\t\tcallback({\n\t\t\tdata: Buffer.from(contents.value, contents.encoding),\n\t\t\tmimeType: mime\n\t\t});\n\t}, (err) => {\n\t\tconsole.log(err);\n\t\tcallback({ error: -2 /* FAILED: https://cs.chromium.org/chromium/src/net/base/net_error_list.h */ });\n\t});\n}\n\nexport function registerFileProtocol(\n\tcontents: Electron.WebContents,\n\tprotocol: WebviewProtocol,\n\tfileService: IFileService,\n\textensionLocation: URI | undefined,\n\tgetRoots: () => ReadonlyArray<URI>\n) {\n\tcontents.session.protocol.registerBufferProtocol(protocol, (request, callback: any) => {\n\t\tif (extensionLocation && extensionLocation.scheme === REMOTE_HOST_SCHEME) {\n\t\t\tconst requestUri = URI.parse(request.url);\n\t\t\tconst redirectedUri = URI.from({\n\t\t\t\tscheme: REMOTE_HOST_SCHEME,\n\t\t\t\tauthority: extensionLocation.authority,\n\t\t\t\tpath: '/vscode-resource',\n\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\trequestResourcePath: requestUri.path\n\t\t\t\t})\n\t\t\t});\n\t\t\tresolveContent(fileService, redirectedUri, getMimeType(requestUri), callback);\n\t\t\treturn;\n\t\t}\n\n\t\tconst requestPath = URI.parse(request.url).path;\n\t\tconst normalizedPath = URI.file(requestPath);\n\t\tfor (const root of getRoots()) {\n\t\t\tif (startsWith(normalizedPath.fsPath, root.fsPath + sep)) {\n\t\t\t\tresolveContent(fileService, normalizedPath, getMimeType(normalizedPath), callback);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconsole.error('Webview: Cannot load resource outside of protocol root');\n\t\tcallback({ error: -10 /* ACCESS_DENIED: https://cs.chromium.org/chromium/src/net/base/net_error_list.h */ });\n\t}, (error) => {\n\t\tif (error) {\n\t\t\tconsole.error(`Failed to register '${protocol}' protocol`);\n\t\t}\n\t});\n}\n\nconst webviewMimeTypes = {\n\t'.svg': 'image/svg+xml',\n\t'.txt': 'text/plain',\n\t'.css': 'text/css',\n\t'.js': 'application/javascript',\n\t'.json': 'application/json',\n\t'.html': 'text/html',\n\t'.htm': 'text/html',\n\t'.xhtml': 'application/xhtml+xml',\n\t'.oft': 'font/otf',\n\t'.xml': 'application/xml',\n};\n\nfunction getMimeType(normalizedPath: URI): string {\n\tconst ext = extname(normalizedPath.fsPath).toLowerCase();\n\treturn webviewMimeTypes[ext] || getMediaMime(normalizedPath.fsPath) || MIME_UNKNOWN;\n}\n"]}]}