{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorZoom.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/config/editorZoom.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/event\"], function (require, exports, event_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.EditorZoom = new class {\n        constructor() {\n            this._zoomLevel = 0;\n            this._onDidChangeZoomLevel = new event_1.Emitter();\n            this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;\n        }\n        getZoomLevel() {\n            return this._zoomLevel;\n        }\n        setZoomLevel(zoomLevel) {\n            zoomLevel = Math.min(Math.max(-5, zoomLevel), 20);\n            if (this._zoomLevel === zoomLevel) {\n                return;\n            }\n            this._zoomLevel = zoomLevel;\n            this._onDidChangeZoomLevel.fire(this._zoomLevel);\n        }\n    };\n});\n",null]}