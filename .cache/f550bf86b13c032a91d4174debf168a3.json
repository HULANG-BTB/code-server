{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/search.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/search.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"vs/base/common/errors\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar WorkspaceSymbolProviderRegistry;\n(function (WorkspaceSymbolProviderRegistry) {\n    var _supports = [];\n    function register(provider) {\n        var support = provider;\n        if (support) {\n            _supports.push(support);\n        }\n        return {\n            dispose: function () {\n                if (support) {\n                    var idx = _supports.indexOf(support);\n                    if (idx >= 0) {\n                        _supports.splice(idx, 1);\n                        support = undefined;\n                    }\n                }\n            }\n        };\n    }\n    WorkspaceSymbolProviderRegistry.register = register;\n    function all() {\n        return _supports.slice(0);\n    }\n    WorkspaceSymbolProviderRegistry.all = all;\n})(WorkspaceSymbolProviderRegistry = exports.WorkspaceSymbolProviderRegistry || (exports.WorkspaceSymbolProviderRegistry = {}));\nfunction getWorkspaceSymbols(query, token) {\n    if (token === void 0) { token = cancellation_1.CancellationToken.None; }\n    var result = [];\n    var promises = WorkspaceSymbolProviderRegistry.all().map(function (support) {\n        return Promise.resolve(support.provideWorkspaceSymbols(query, token)).then(function (value) {\n            if (Array.isArray(value)) {\n                result.push([support, value]);\n            }\n        }, errors_1.onUnexpectedError);\n    });\n    return Promise.all(promises).then(function (_) { return result; });\n}\nexports.getWorkspaceSymbols = getWorkspaceSymbols;\n/**\n * Helper to return all opened editors with resources not belonging to the currently opened workspace.\n */\nfunction getOutOfWorkspaceEditorResources(editorService, contextService) {\n    var resources = [];\n    editorService.editors.forEach(function (editor) {\n        var resource = editor_1.toResource(editor, { supportSideBySide: true });\n        if (resource && !contextService.isInsideWorkspace(resource)) {\n            resources.push(resource);\n        }\n    });\n    return resources;\n}\nexports.getOutOfWorkspaceEditorResources = getOutOfWorkspaceEditorResources;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/search.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/search.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gDAA0D;AAM1D,qDAAwD;AAExD,4DAAgE;AAchE,IAAiB,+BAA+B,CA0B/C;AA1BD,WAAiB,+BAA+B;IAE/C,IAAM,SAAS,GAA+B,EAAE,CAAC;IAEjD,SAAgB,QAAQ,CAAC,QAAkC;QAC1D,IAAI,OAAO,GAAyC,QAAQ,CAAC;QAC7D,IAAI,OAAO,EAAE;YACZ,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;QAED,OAAO;YACN,OAAO;gBACN,IAAI,OAAO,EAAE;oBACZ,IAAM,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACvC,IAAI,GAAG,IAAI,CAAC,EAAE;wBACb,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBACzB,OAAO,GAAG,SAAS,CAAC;qBACpB;iBACD;YACF,CAAC;SACD,CAAC;IACH,CAAC;IAjBe,wCAAQ,WAiBvB,CAAA;IAED,SAAgB,GAAG;QAClB,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAFe,mCAAG,MAElB,CAAA;AACF,CAAC,EA1BgB,+BAA+B,GAA/B,uCAA+B,KAA/B,uCAA+B,QA0B/C;AAED,SAAgB,mBAAmB,CAAC,KAAa,EAAE,KAAiD;IAAjD,sBAAA,EAAA,QAA2B,gCAAiB,CAAC,IAAI;IAEnG,IAAM,MAAM,GAAqD,EAAE,CAAC;IAEpE,IAAM,QAAQ,GAAG,+BAA+B,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,OAAO;QACjE,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;YAC/E,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzB,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;aAC9B;QACF,CAAC,EAAE,0BAAiB,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC;AAChD,CAAC;AAbD,kDAaC;AAYD;;GAEG;AACH,SAAgB,gCAAgC,CAAC,aAA6B,EAAE,cAAwC;IACvH,IAAM,SAAS,GAAU,EAAE,CAAC;IAE5B,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;QACnC,IAAM,QAAQ,GAAG,mBAAU,CAAC,MAAM,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;QACjE,IAAI,QAAQ,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;YAC5D,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzB;IACF,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AAClB,CAAC;AAXD,4EAWC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { ISearchConfiguration, ISearchConfigurationProperties } from 'vs/workbench/services/search/common/search';\nimport { SymbolKind, Location, ProviderResult } from 'vs/editor/common/modes';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { URI } from 'vs/base/common/uri';\nimport { toResource } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IWorkspaceSymbol {\n\tname: string;\n\tcontainerName?: string;\n\tkind: SymbolKind;\n\tlocation: Location;\n}\n\nexport interface IWorkspaceSymbolProvider {\n\tprovideWorkspaceSymbols(search: string, token: CancellationToken): ProviderResult<IWorkspaceSymbol[]>;\n\tresolveWorkspaceSymbol?(item: IWorkspaceSymbol, token: CancellationToken): ProviderResult<IWorkspaceSymbol>;\n}\n\nexport namespace WorkspaceSymbolProviderRegistry {\n\n\tconst _supports: IWorkspaceSymbolProvider[] = [];\n\n\texport function register(provider: IWorkspaceSymbolProvider): IDisposable {\n\t\tlet support: IWorkspaceSymbolProvider | undefined = provider;\n\t\tif (support) {\n\t\t\t_supports.push(support);\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\tif (support) {\n\t\t\t\t\tconst idx = _supports.indexOf(support);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t_supports.splice(idx, 1);\n\t\t\t\t\t\tsupport = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function all(): IWorkspaceSymbolProvider[] {\n\t\treturn _supports.slice(0);\n\t}\n}\n\nexport function getWorkspaceSymbols(query: string, token: CancellationToken = CancellationToken.None): Promise<[IWorkspaceSymbolProvider, IWorkspaceSymbol[]][]> {\n\n\tconst result: [IWorkspaceSymbolProvider, IWorkspaceSymbol[]][] = [];\n\n\tconst promises = WorkspaceSymbolProviderRegistry.all().map(support => {\n\t\treturn Promise.resolve(support.provideWorkspaceSymbols(query, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tresult.push([support, value]);\n\t\t\t}\n\t\t}, onUnexpectedError);\n\t});\n\n\treturn Promise.all(promises).then(_ => result);\n}\n\nexport interface IWorkbenchSearchConfigurationProperties extends ISearchConfigurationProperties {\n\tquickOpen: {\n\t\tincludeSymbols: boolean;\n\t};\n}\n\nexport interface IWorkbenchSearchConfiguration extends ISearchConfiguration {\n\tsearch: IWorkbenchSearchConfigurationProperties;\n}\n\n/**\n * Helper to return all opened editors with resources not belonging to the currently opened workspace.\n */\nexport function getOutOfWorkspaceEditorResources(editorService: IEditorService, contextService: IWorkspaceContextService): URI[] {\n\tconst resources: URI[] = [];\n\n\teditorService.editors.forEach(editor => {\n\t\tconst resource = toResource(editor, { supportSideBySide: true });\n\t\tif (resource && !contextService.isInsideWorkspace(resource)) {\n\t\t\tresources.push(resource);\n\t\t}\n\t});\n\n\treturn resources;\n}\n"]}]}