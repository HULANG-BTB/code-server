{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetryNodeUtils.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetryNodeUtils.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/product/node/product\"], function (require, exports, product_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function addGAParameters(telemetryService, environmentService, uri, origin, experiment = '1') {\n        if (environmentService.isBuilt && !environmentService.isExtensionDevelopment && !environmentService.args['disable-telemetry'] && !!product_1.default.enableTelemetry) {\n            if (uri.scheme === 'https' && uri.authority === 'code.visualstudio.com') {\n                return telemetryService.getTelemetryInfo()\n                    .then(info => {\n                    return uri.with({ query: `${uri.query ? uri.query + '&' : ''}utm_source=VsCode&utm_medium=${encodeURIComponent(origin)}&utm_campaign=${encodeURIComponent(info.instanceId)}&utm_content=${encodeURIComponent(experiment)}` });\n                });\n            }\n        }\n        return Promise.resolve(uri);\n    }\n    exports.addGAParameters = addGAParameters;\n});\n",null]}