{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/breakpointsView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/breakpointsView.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar resources = require(\"vs/base/common/resources\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar debugModel_1 = require(\"vs/workbench/contrib/debug/common/debugModel\");\nvar debugActions_1 = require(\"vs/workbench/contrib/debug/browser/debugActions\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar $ = dom.$;\nfunction createCheckbox() {\n    var checkbox = $('input');\n    checkbox.type = 'checkbox';\n    checkbox.tabIndex = -1;\n    return checkbox;\n}\nvar BreakpointsView = /** @class */ (function (_super) {\n    tslib_1.__extends(BreakpointsView, _super);\n    function BreakpointsView(options, contextMenuService, debugService, keybindingService, instantiationService, themeService, editorService, contextViewService, configurationService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: nls.localize('breakpointsSection', \"Breakpoints Section\") }), keybindingService, contextMenuService, configurationService) || this;\n        _this.debugService = debugService;\n        _this.instantiationService = instantiationService;\n        _this.themeService = themeService;\n        _this.editorService = editorService;\n        _this.contextViewService = contextViewService;\n        _this.minimumBodySize = _this.maximumBodySize = _this.getExpandedBodySize();\n        _this.disposables.push(_this.debugService.getModel().onDidChangeBreakpoints(function () { return _this.onBreakpointsChange(); }));\n        return _this;\n    }\n    BreakpointsView.prototype.renderBody = function (container) {\n        var _this = this;\n        dom.addClass(container, 'debug-breakpoints');\n        var delegate = new BreakpointsDelegate(this.debugService);\n        this.list = this.instantiationService.createInstance(listService_1.WorkbenchList, container, delegate, [\n            this.instantiationService.createInstance(BreakpointsRenderer),\n            new ExceptionBreakpointsRenderer(this.debugService),\n            this.instantiationService.createInstance(FunctionBreakpointsRenderer),\n            new FunctionBreakpointInputRenderer(this.debugService, this.contextViewService, this.themeService)\n        ], {\n            identityProvider: { getId: function (element) { return element.getId(); } },\n            multipleSelectionSupport: false,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: function (e) { return e; } }\n        });\n        debug_1.CONTEXT_BREAKPOINTS_FOCUSED.bindTo(this.list.contextKeyService);\n        this.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n        this.disposables.push(this.list.onDidOpen(function (e) {\n            var isSingleClick = false;\n            var isDoubleClick = false;\n            var isMiddleClick = false;\n            var openToSide = false;\n            var browserEvent = e.browserEvent;\n            if (browserEvent instanceof MouseEvent) {\n                isSingleClick = browserEvent.detail === 1;\n                isDoubleClick = browserEvent.detail === 2;\n                isMiddleClick = browserEvent.button === 1;\n                openToSide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n            }\n            var focused = _this.list.getFocusedElements();\n            var element = focused.length ? focused[0] : undefined;\n            if (isMiddleClick) {\n                if (element instanceof debugModel_1.Breakpoint) {\n                    _this.debugService.removeBreakpoints(element.getId());\n                }\n                else if (element instanceof debugModel_1.FunctionBreakpoint) {\n                    _this.debugService.removeFunctionBreakpoints(element.getId());\n                }\n                return;\n            }\n            if (element instanceof debugModel_1.Breakpoint) {\n                openBreakpointSource(element, openToSide, isSingleClick, _this.debugService, _this.editorService);\n            }\n            if (isDoubleClick && element instanceof debugModel_1.FunctionBreakpoint && element !== _this.debugService.getViewModel().getSelectedFunctionBreakpoint()) {\n                _this.debugService.getViewModel().setSelectedFunctionBreakpoint(element);\n                _this.onBreakpointsChange();\n            }\n        }));\n        this.list.splice(0, this.list.length, this.elements);\n        this.disposables.push(this.onDidChangeBodyVisibility(function (visible) {\n            if (visible && _this.needsRefresh) {\n                _this.onBreakpointsChange();\n            }\n        }));\n    };\n    BreakpointsView.prototype.focus = function () {\n        _super.prototype.focus.call(this);\n        if (this.list) {\n            this.list.domFocus();\n        }\n    };\n    BreakpointsView.prototype.layoutBody = function (height, width) {\n        if (this.list) {\n            this.list.layout(height, width);\n        }\n    };\n    BreakpointsView.prototype.onListContextMenu = function (e) {\n        var _this = this;\n        if (!e.element) {\n            return;\n        }\n        var actions = [];\n        var element = e.element;\n        var breakpointType = element instanceof debugModel_1.Breakpoint && element.logMessage ? nls.localize('Logpoint', \"Logpoint\") : nls.localize('Breakpoint', \"Breakpoint\");\n        if (element instanceof debugModel_1.Breakpoint || element instanceof debugModel_1.FunctionBreakpoint) {\n            actions.push(new actions_1.Action('workbench.action.debug.openEditorAndEditBreakpoint', nls.localize('editBreakpoint', \"Edit {0}...\", breakpointType), '', true, function () {\n                if (element instanceof debugModel_1.Breakpoint) {\n                    return openBreakpointSource(element, false, false, _this.debugService, _this.editorService).then(function (editor) {\n                        if (editor) {\n                            var codeEditor = editor.getControl();\n                            if (editorBrowser_1.isCodeEditor(codeEditor)) {\n                                codeEditor.getContribution(debug_1.EDITOR_CONTRIBUTION_ID).showBreakpointWidget(element.lineNumber, element.column);\n                            }\n                        }\n                    });\n                }\n                _this.debugService.getViewModel().setSelectedFunctionBreakpoint(element);\n                _this.onBreakpointsChange();\n                return Promise.resolve(undefined);\n            }));\n            actions.push(new actionbar_1.Separator());\n        }\n        actions.push(new debugActions_1.RemoveBreakpointAction(debugActions_1.RemoveBreakpointAction.ID, nls.localize('removeBreakpoint', \"Remove {0}\", breakpointType), this.debugService, this.keybindingService));\n        if (this.debugService.getModel().getBreakpoints().length + this.debugService.getModel().getFunctionBreakpoints().length > 1) {\n            actions.push(new debugActions_1.RemoveAllBreakpointsAction(debugActions_1.RemoveAllBreakpointsAction.ID, debugActions_1.RemoveAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n            actions.push(new actionbar_1.Separator());\n            actions.push(new debugActions_1.EnableAllBreakpointsAction(debugActions_1.EnableAllBreakpointsAction.ID, debugActions_1.EnableAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n            actions.push(new debugActions_1.DisableAllBreakpointsAction(debugActions_1.DisableAllBreakpointsAction.ID, debugActions_1.DisableAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n        }\n        actions.push(new actionbar_1.Separator());\n        actions.push(new debugActions_1.ReapplyBreakpointsAction(debugActions_1.ReapplyBreakpointsAction.ID, debugActions_1.ReapplyBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return e.anchor; },\n            getActions: function () { return actions; },\n            getActionsContext: function () { return element; }\n        });\n    };\n    BreakpointsView.prototype.getActions = function () {\n        return [\n            new debugActions_1.AddFunctionBreakpointAction(debugActions_1.AddFunctionBreakpointAction.ID, debugActions_1.AddFunctionBreakpointAction.LABEL, this.debugService, this.keybindingService),\n            new debugActions_1.ToggleBreakpointsActivatedAction(debugActions_1.ToggleBreakpointsActivatedAction.ID, debugActions_1.ToggleBreakpointsActivatedAction.ACTIVATE_LABEL, this.debugService, this.keybindingService),\n            new debugActions_1.RemoveAllBreakpointsAction(debugActions_1.RemoveAllBreakpointsAction.ID, debugActions_1.RemoveAllBreakpointsAction.LABEL, this.debugService, this.keybindingService)\n        ];\n    };\n    BreakpointsView.prototype.onBreakpointsChange = function () {\n        if (this.isBodyVisible()) {\n            this.minimumBodySize = this.getExpandedBodySize();\n            if (this.maximumBodySize < Number.POSITIVE_INFINITY) {\n                this.maximumBodySize = this.minimumBodySize;\n            }\n            if (this.list) {\n                this.list.splice(0, this.list.length, this.elements);\n                this.needsRefresh = false;\n            }\n        }\n        else {\n            this.needsRefresh = true;\n        }\n    };\n    Object.defineProperty(BreakpointsView.prototype, \"elements\", {\n        get: function () {\n            var model = this.debugService.getModel();\n            var elements = model.getExceptionBreakpoints().concat(model.getFunctionBreakpoints()).concat(model.getBreakpoints());\n            return elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BreakpointsView.prototype.getExpandedBodySize = function () {\n        var model = this.debugService.getModel();\n        var length = model.getBreakpoints().length + model.getExceptionBreakpoints().length + model.getFunctionBreakpoints().length;\n        return Math.min(BreakpointsView.MAX_VISIBLE_FILES, length) * 22;\n    };\n    BreakpointsView.MAX_VISIBLE_FILES = 9;\n    BreakpointsView = tslib_1.__decorate([\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, debug_1.IDebugService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, themeService_1.IThemeService),\n        tslib_1.__param(6, editorService_1.IEditorService),\n        tslib_1.__param(7, contextView_1.IContextViewService),\n        tslib_1.__param(8, configuration_1.IConfigurationService)\n    ], BreakpointsView);\n    return BreakpointsView;\n}(panelViewlet_1.ViewletPanel));\nexports.BreakpointsView = BreakpointsView;\nvar BreakpointsDelegate = /** @class */ (function () {\n    function BreakpointsDelegate(debugService) {\n        this.debugService = debugService;\n        // noop\n    }\n    BreakpointsDelegate.prototype.getHeight = function (element) {\n        return 22;\n    };\n    BreakpointsDelegate.prototype.getTemplateId = function (element) {\n        if (element instanceof debugModel_1.Breakpoint) {\n            return BreakpointsRenderer.ID;\n        }\n        if (element instanceof debugModel_1.FunctionBreakpoint) {\n            var selected = this.debugService.getViewModel().getSelectedFunctionBreakpoint();\n            if (!element.name || (selected && selected.getId() === element.getId())) {\n                return FunctionBreakpointInputRenderer.ID;\n            }\n            return FunctionBreakpointsRenderer.ID;\n        }\n        if (element instanceof debugModel_1.ExceptionBreakpoint) {\n            return ExceptionBreakpointsRenderer.ID;\n        }\n        return '';\n    };\n    return BreakpointsDelegate;\n}());\nvar BreakpointsRenderer = /** @class */ (function () {\n    function BreakpointsRenderer(debugService, labelService) {\n        this.debugService = debugService;\n        this.labelService = labelService;\n        // noop\n    }\n    Object.defineProperty(BreakpointsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return BreakpointsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BreakpointsRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var data = Object.create(null);\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox();\n        data.toDispose = [];\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', function (e) {\n            _this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        data.filePath = dom.append(data.breakpoint, $('span.file-path'));\n        var lineNumberContainer = dom.append(data.breakpoint, $('.line-number-container'));\n        data.lineNumber = dom.append(lineNumberContainer, $('span.line-number'));\n        return data;\n    };\n    BreakpointsRenderer.prototype.renderElement = function (breakpoint, index, data) {\n        data.context = breakpoint;\n        dom.toggleClass(data.breakpoint, 'disabled', !this.debugService.getModel().areBreakpointsActivated());\n        data.name.textContent = resources.basenameOrAuthority(breakpoint.uri);\n        data.lineNumber.textContent = breakpoint.lineNumber.toString();\n        if (breakpoint.column) {\n            data.lineNumber.textContent += \":\" + breakpoint.column;\n        }\n        data.filePath.textContent = this.labelService.getUriLabel(resources.dirname(breakpoint.uri), { relative: true });\n        data.checkbox.checked = breakpoint.enabled;\n        var _a = getBreakpointMessageAndClassName(this.debugService, breakpoint), message = _a.message, className = _a.className;\n        data.icon.className = className + ' icon';\n        data.breakpoint.title = breakpoint.message || message || '';\n        var debugActive = this.debugService.state === debug_1.State.Running || this.debugService.state === debug_1.State.Stopped;\n        if (debugActive && !breakpoint.verified) {\n            dom.addClass(data.breakpoint, 'disabled');\n        }\n    };\n    BreakpointsRenderer.prototype.disposeTemplate = function (templateData) {\n        lifecycle_1.dispose(templateData.toDispose);\n    };\n    BreakpointsRenderer.ID = 'breakpoints';\n    BreakpointsRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, debug_1.IDebugService),\n        tslib_1.__param(1, label_1.ILabelService)\n    ], BreakpointsRenderer);\n    return BreakpointsRenderer;\n}());\nvar ExceptionBreakpointsRenderer = /** @class */ (function () {\n    function ExceptionBreakpointsRenderer(debugService) {\n        this.debugService = debugService;\n        // noop\n    }\n    Object.defineProperty(ExceptionBreakpointsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return ExceptionBreakpointsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExceptionBreakpointsRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var data = Object.create(null);\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.checkbox = createCheckbox();\n        data.toDispose = [];\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', function (e) {\n            _this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        dom.addClass(data.breakpoint, 'exception');\n        return data;\n    };\n    ExceptionBreakpointsRenderer.prototype.renderElement = function (exceptionBreakpoint, index, data) {\n        data.context = exceptionBreakpoint;\n        data.name.textContent = exceptionBreakpoint.label || exceptionBreakpoint.filter + \" exceptions\";\n        data.breakpoint.title = data.name.textContent;\n        data.checkbox.checked = exceptionBreakpoint.enabled;\n    };\n    ExceptionBreakpointsRenderer.prototype.disposeTemplate = function (templateData) {\n        lifecycle_1.dispose(templateData.toDispose);\n    };\n    ExceptionBreakpointsRenderer.ID = 'exceptionbreakpoints';\n    return ExceptionBreakpointsRenderer;\n}());\nvar FunctionBreakpointsRenderer = /** @class */ (function () {\n    function FunctionBreakpointsRenderer(debugService) {\n        this.debugService = debugService;\n        // noop\n    }\n    Object.defineProperty(FunctionBreakpointsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return FunctionBreakpointsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionBreakpointsRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var data = Object.create(null);\n        data.breakpoint = dom.append(container, $('.breakpoint'));\n        data.icon = $('.icon');\n        data.checkbox = createCheckbox();\n        data.toDispose = [];\n        data.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', function (e) {\n            _this.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n        }));\n        dom.append(data.breakpoint, data.icon);\n        dom.append(data.breakpoint, data.checkbox);\n        data.name = dom.append(data.breakpoint, $('span.name'));\n        return data;\n    };\n    FunctionBreakpointsRenderer.prototype.renderElement = function (functionBreakpoint, index, data) {\n        data.context = functionBreakpoint;\n        data.name.textContent = functionBreakpoint.name;\n        var _a = getBreakpointMessageAndClassName(this.debugService, functionBreakpoint), className = _a.className, message = _a.message;\n        data.icon.className = className + ' icon';\n        data.icon.title = message ? message : '';\n        data.checkbox.checked = functionBreakpoint.enabled;\n        data.breakpoint.title = functionBreakpoint.name;\n        // Mark function breakpoints as disabled if deactivated or if debug type does not support them #9099\n        var session = this.debugService.getViewModel().focusedSession;\n        dom.toggleClass(data.breakpoint, 'disabled', (session && !session.capabilities.supportsFunctionBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n        if (session && !session.capabilities.supportsFunctionBreakpoints) {\n            data.breakpoint.title = nls.localize('functionBreakpointsNotSupported', \"Function breakpoints are not supported by this debug type\");\n        }\n    };\n    FunctionBreakpointsRenderer.prototype.disposeTemplate = function (templateData) {\n        lifecycle_1.dispose(templateData.toDispose);\n    };\n    FunctionBreakpointsRenderer.ID = 'functionbreakpoints';\n    FunctionBreakpointsRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, debug_1.IDebugService)\n    ], FunctionBreakpointsRenderer);\n    return FunctionBreakpointsRenderer;\n}());\nvar FunctionBreakpointInputRenderer = /** @class */ (function () {\n    function FunctionBreakpointInputRenderer(debugService, contextViewService, themeService) {\n        this.debugService = debugService;\n        this.contextViewService = contextViewService;\n        this.themeService = themeService;\n        // noop\n    }\n    Object.defineProperty(FunctionBreakpointInputRenderer.prototype, \"templateId\", {\n        get: function () {\n            return FunctionBreakpointInputRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionBreakpointInputRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var template = Object.create(null);\n        var breakpoint = dom.append(container, $('.breakpoint'));\n        template.icon = $('.icon');\n        template.checkbox = createCheckbox();\n        dom.append(breakpoint, template.icon);\n        dom.append(breakpoint, template.checkbox);\n        var inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n        var inputBox = new inputBox_1.InputBox(inputBoxContainer, this.contextViewService, {\n            placeholder: nls.localize('functionBreakpointPlaceholder', \"Function to break on\"),\n            ariaLabel: nls.localize('functionBreakPointInputAriaLabel', \"Type function breakpoint\")\n        });\n        var styler = styler_1.attachInputBoxStyler(inputBox, this.themeService);\n        var toDispose = [inputBox, styler];\n        var wrapUp = function (renamed) {\n            if (!template.reactedOnEvent) {\n                template.reactedOnEvent = true;\n                _this.debugService.getViewModel().setSelectedFunctionBreakpoint(undefined);\n                if (inputBox.value && (renamed || template.breakpoint.name)) {\n                    _this.debugService.renameFunctionBreakpoint(template.breakpoint.getId(), renamed ? inputBox.value : template.breakpoint.name);\n                }\n                else {\n                    _this.debugService.removeFunctionBreakpoints(template.breakpoint.getId());\n                }\n            }\n        };\n        toDispose.push(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', function (e) {\n            var isEscape = e.equals(keyCodes_1.KeyCode.Escape);\n            var isEnter = e.equals(keyCodes_1.KeyCode.Enter);\n            if (isEscape || isEnter) {\n                e.preventDefault();\n                e.stopPropagation();\n                wrapUp(isEnter);\n            }\n        }));\n        toDispose.push(dom.addDisposableListener(inputBox.inputElement, 'blur', function () {\n            // Need to react with a timeout on the blur event due to possible concurent splices #56443\n            setTimeout(function () {\n                if (!template.breakpoint.name) {\n                    wrapUp(true);\n                }\n            });\n        }));\n        template.inputBox = inputBox;\n        template.toDispose = toDispose;\n        return template;\n    };\n    FunctionBreakpointInputRenderer.prototype.renderElement = function (functionBreakpoint, index, data) {\n        data.breakpoint = functionBreakpoint;\n        data.reactedOnEvent = false;\n        var _a = getBreakpointMessageAndClassName(this.debugService, functionBreakpoint), className = _a.className, message = _a.message;\n        data.icon.className = className + ' icon';\n        data.icon.title = message ? message : '';\n        data.checkbox.checked = functionBreakpoint.enabled;\n        data.checkbox.disabled = true;\n        data.inputBox.value = functionBreakpoint.name || '';\n        setTimeout(function () {\n            data.inputBox.focus();\n            data.inputBox.select();\n        }, 0);\n    };\n    FunctionBreakpointInputRenderer.prototype.disposeTemplate = function (templateData) {\n        lifecycle_1.dispose(templateData.toDispose);\n    };\n    FunctionBreakpointInputRenderer.ID = 'functionbreakpointinput';\n    return FunctionBreakpointInputRenderer;\n}());\nfunction openBreakpointSource(breakpoint, sideBySide, preserveFocus, debugService, editorService) {\n    if (breakpoint.uri.scheme === debug_1.DEBUG_SCHEME && debugService.state === debug_1.State.Inactive) {\n        return Promise.resolve(null);\n    }\n    var selection = breakpoint.endLineNumber ? {\n        startLineNumber: breakpoint.lineNumber,\n        endLineNumber: breakpoint.endLineNumber,\n        startColumn: breakpoint.column || 1,\n        endColumn: breakpoint.endColumn || uint_1.Constants.MAX_SAFE_SMALL_INTEGER\n    } : {\n        startLineNumber: breakpoint.lineNumber,\n        startColumn: breakpoint.column || 1,\n        endLineNumber: breakpoint.lineNumber,\n        endColumn: breakpoint.column || uint_1.Constants.MAX_SAFE_SMALL_INTEGER\n    };\n    return editorService.openEditor({\n        resource: breakpoint.uri,\n        options: {\n            preserveFocus: preserveFocus,\n            selection: selection,\n            revealIfVisible: true,\n            revealInCenterIfOutsideViewport: true,\n            pinned: !preserveFocus\n        }\n    }, sideBySide ? editorService_1.SIDE_GROUP : editorService_1.ACTIVE_GROUP);\n}\nexports.openBreakpointSource = openBreakpointSource;\nfunction getBreakpointMessageAndClassName(debugService, breakpoint) {\n    var state = debugService.state;\n    var debugActive = state === debug_1.State.Running || state === debug_1.State.Stopped;\n    if (!breakpoint.enabled || !debugService.getModel().areBreakpointsActivated()) {\n        return {\n            className: breakpoint instanceof debugModel_1.FunctionBreakpoint ? 'debug-function-breakpoint-disabled' : breakpoint.logMessage ? 'debug-breakpoint-log-disabled' : 'debug-breakpoint-disabled',\n            message: breakpoint.logMessage ? nls.localize('disabledLogpoint', \"Disabled logpoint\") : nls.localize('disabledBreakpoint', \"Disabled breakpoint\"),\n        };\n    }\n    var appendMessage = function (text) {\n        return !(breakpoint instanceof debugModel_1.FunctionBreakpoint) && breakpoint.message ? text.concat(', ' + breakpoint.message) : text;\n    };\n    if (debugActive && !breakpoint.verified) {\n        return {\n            className: breakpoint instanceof debugModel_1.FunctionBreakpoint ? 'debug-function-breakpoint-unverified' : breakpoint.logMessage ? 'debug-breakpoint-log-unverified' : 'debug-breakpoint-unverified',\n            message: breakpoint.logMessage ? nls.localize('unverifiedLogpoint', \"Unverified logpoint\") : nls.localize('unverifiedBreakopint', \"Unverified breakpoint\"),\n        };\n    }\n    var session = debugService.getViewModel().focusedSession;\n    if (breakpoint instanceof debugModel_1.FunctionBreakpoint) {\n        if (session && !session.capabilities.supportsFunctionBreakpoints) {\n            return {\n                className: 'debug-function-breakpoint-unverified',\n                message: nls.localize('functionBreakpointUnsupported', \"Function breakpoints not supported by this debug type\"),\n            };\n        }\n        return {\n            className: 'debug-function-breakpoint',\n        };\n    }\n    if (breakpoint.logMessage || breakpoint.condition || breakpoint.hitCondition) {\n        var messages = [];\n        if (breakpoint.logMessage) {\n            if (session && !session.capabilities.supportsLogPoints) {\n                return {\n                    className: 'debug-breakpoint-unsupported',\n                    message: nls.localize('logBreakpointUnsupported', \"Logpoints not supported by this debug type\"),\n                };\n            }\n            messages.push(nls.localize('logMessage', \"Log Message: {0}\", breakpoint.logMessage));\n        }\n        if (session && breakpoint.condition && !session.capabilities.supportsConditionalBreakpoints) {\n            return {\n                className: 'debug-breakpoint-unsupported',\n                message: nls.localize('conditionalBreakpointUnsupported', \"Conditional breakpoints not supported by this debug type\"),\n            };\n        }\n        if (session && breakpoint.hitCondition && !session.capabilities.supportsHitConditionalBreakpoints) {\n            return {\n                className: 'debug-breakpoint-unsupported',\n                message: nls.localize('hitBreakpointUnsupported', \"Hit conditional breakpoints not supported by this debug type\"),\n            };\n        }\n        if (breakpoint.condition) {\n            messages.push(nls.localize('expression', \"Expression: {0}\", breakpoint.condition));\n        }\n        if (breakpoint.hitCondition) {\n            messages.push(nls.localize('hitCount', \"Hit Count: {0}\", breakpoint.hitCondition));\n        }\n        return {\n            className: breakpoint.logMessage ? 'debug-breakpoint-log' : 'debug-breakpoint-conditional',\n            message: appendMessage(messages.join('\\n'))\n        };\n    }\n    return {\n        className: 'debug-breakpoint',\n        message: breakpoint.message\n    };\n}\nexports.getBreakpointMessageAndClassName = getBreakpointMessageAndClassName;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/breakpointsView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/breakpointsView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as resources from 'vs/base/common/resources';\nimport * as dom from 'vs/base/browser/dom';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { IDebugService, IBreakpoint, CONTEXT_BREAKPOINTS_FOCUSED, EDITOR_CONTRIBUTION_ID, State, DEBUG_SCHEME, IFunctionBreakpoint, IExceptionBreakpoint, IEnablement, IDebugEditorContribution } from 'vs/workbench/contrib/debug/common/debug';\nimport { ExceptionBreakpoint, FunctionBreakpoint, Breakpoint } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { AddFunctionBreakpointAction, ToggleBreakpointsActivatedAction, RemoveAllBreakpointsAction, RemoveBreakpointAction, EnableAllBreakpointsAction, DisableAllBreakpointsAction, ReapplyBreakpointsAction } from 'vs/workbench/contrib/debug/browser/debugActions';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IListVirtualDelegate, IListContextMenuEvent, IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { IEditor } from 'vs/workbench/common/editor';\nimport { InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEditorService, SIDE_GROUP, ACTIVE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nconst $ = dom.$;\n\nfunction createCheckbox(): HTMLInputElement {\n\tconst checkbox = <HTMLInputElement>$('input');\n\tcheckbox.type = 'checkbox';\n\tcheckbox.tabIndex = -1;\n\n\treturn checkbox;\n}\n\nexport class BreakpointsView extends ViewletPanel {\n\n\tprivate static readonly MAX_VISIBLE_FILES = 9;\n\tprivate list: WorkbenchList<IEnablement>;\n\tprivate needsRefresh: boolean;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: nls.localize('breakpointsSection', \"Breakpoints Section\") }, keybindingService, contextMenuService, configurationService);\n\n\t\tthis.minimumBodySize = this.maximumBodySize = this.getExpandedBodySize();\n\t\tthis.disposables.push(this.debugService.getModel().onDidChangeBreakpoints(() => this.onBreakpointsChange()));\n\t}\n\n\tpublic renderBody(container: HTMLElement): void {\n\t\tdom.addClass(container, 'debug-breakpoints');\n\t\tconst delegate = new BreakpointsDelegate(this.debugService);\n\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchList, container, delegate, [\n\t\t\tthis.instantiationService.createInstance(BreakpointsRenderer),\n\t\t\tnew ExceptionBreakpointsRenderer(this.debugService),\n\t\t\tthis.instantiationService.createInstance(FunctionBreakpointsRenderer),\n\t\t\tnew FunctionBreakpointInputRenderer(this.debugService, this.contextViewService, this.themeService)\n\t\t], {\n\t\t\t\tidentityProvider: { getId: (element: IEnablement) => element.getId() },\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IEnablement) => e }\n\t\t\t}) as WorkbenchList<IEnablement>;\n\n\t\tCONTEXT_BREAKPOINTS_FOCUSED.bindTo(this.list.contextKeyService);\n\n\t\tthis.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n\n\t\tthis.disposables.push(this.list.onDidOpen(e => {\n\t\t\tlet isSingleClick = false;\n\t\t\tlet isDoubleClick = false;\n\t\t\tlet isMiddleClick = false;\n\t\t\tlet openToSide = false;\n\n\t\t\tconst browserEvent = e.browserEvent;\n\t\t\tif (browserEvent instanceof MouseEvent) {\n\t\t\t\tisSingleClick = browserEvent.detail === 1;\n\t\t\t\tisDoubleClick = browserEvent.detail === 2;\n\t\t\t\tisMiddleClick = browserEvent.button === 1;\n\t\t\t\topenToSide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n\t\t\t}\n\n\t\t\tconst focused = this.list.getFocusedElements();\n\t\t\tconst element = focused.length ? focused[0] : undefined;\n\n\t\t\tif (isMiddleClick) {\n\t\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\t\tthis.debugService.removeBreakpoints(element.getId());\n\t\t\t\t} else if (element instanceof FunctionBreakpoint) {\n\t\t\t\t\tthis.debugService.removeFunctionBreakpoints(element.getId());\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\topenBreakpointSource(element, openToSide, isSingleClick, this.debugService, this.editorService);\n\t\t\t}\n\t\t\tif (isDoubleClick && element instanceof FunctionBreakpoint && element !== this.debugService.getViewModel().getSelectedFunctionBreakpoint()) {\n\t\t\t\tthis.debugService.getViewModel().setSelectedFunctionBreakpoint(element);\n\t\t\t\tthis.onBreakpointsChange();\n\t\t\t}\n\t\t}));\n\n\t\tthis.list.splice(0, this.list.length, this.elements);\n\n\t\tthis.disposables.push(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.onBreakpointsChange();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic focus(): void {\n\t\tsuper.focus();\n\t\tif (this.list) {\n\t\t\tthis.list.domFocus();\n\t\t}\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tif (this.list) {\n\t\t\tthis.list.layout(height, width);\n\t\t}\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<IEnablement>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actions: IAction[] = [];\n\t\tconst element = e.element;\n\n\t\tconst breakpointType = element instanceof Breakpoint && element.logMessage ? nls.localize('Logpoint', \"Logpoint\") : nls.localize('Breakpoint', \"Breakpoint\");\n\t\tif (element instanceof Breakpoint || element instanceof FunctionBreakpoint) {\n\t\t\tactions.push(new Action('workbench.action.debug.openEditorAndEditBreakpoint', nls.localize('editBreakpoint', \"Edit {0}...\", breakpointType), '', true, () => {\n\t\t\t\tif (element instanceof Breakpoint) {\n\t\t\t\t\treturn openBreakpointSource(element, false, false, this.debugService, this.editorService).then(editor => {\n\t\t\t\t\t\tif (editor) {\n\t\t\t\t\t\t\tconst codeEditor = editor.getControl();\n\t\t\t\t\t\t\tif (isCodeEditor(codeEditor)) {\n\t\t\t\t\t\t\t\tcodeEditor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showBreakpointWidget(element.lineNumber, element.column);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.debugService.getViewModel().setSelectedFunctionBreakpoint(element);\n\t\t\t\tthis.onBreakpointsChange();\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}));\n\t\t\tactions.push(new Separator());\n\t\t}\n\n\t\tactions.push(new RemoveBreakpointAction(RemoveBreakpointAction.ID, nls.localize('removeBreakpoint', \"Remove {0}\", breakpointType), this.debugService, this.keybindingService));\n\n\t\tif (this.debugService.getModel().getBreakpoints().length + this.debugService.getModel().getFunctionBreakpoints().length > 1) {\n\t\t\tactions.push(new RemoveAllBreakpointsAction(RemoveAllBreakpointsAction.ID, RemoveAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n\t\t\tactions.push(new Separator());\n\n\t\t\tactions.push(new EnableAllBreakpointsAction(EnableAllBreakpointsAction.ID, EnableAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n\t\t\tactions.push(new DisableAllBreakpointsAction(DisableAllBreakpointsAction.ID, DisableAllBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n\t\t}\n\n\t\tactions.push(new Separator());\n\t\tactions.push(new ReapplyBreakpointsAction(ReapplyBreakpointsAction.ID, ReapplyBreakpointsAction.LABEL, this.debugService, this.keybindingService));\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => element\n\t\t});\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\treturn [\n\t\t\tnew AddFunctionBreakpointAction(AddFunctionBreakpointAction.ID, AddFunctionBreakpointAction.LABEL, this.debugService, this.keybindingService),\n\t\t\tnew ToggleBreakpointsActivatedAction(ToggleBreakpointsActivatedAction.ID, ToggleBreakpointsActivatedAction.ACTIVATE_LABEL, this.debugService, this.keybindingService),\n\t\t\tnew RemoveAllBreakpointsAction(RemoveAllBreakpointsAction.ID, RemoveAllBreakpointsAction.LABEL, this.debugService, this.keybindingService)\n\t\t];\n\t}\n\n\tprivate onBreakpointsChange(): void {\n\t\tif (this.isBodyVisible()) {\n\t\t\tthis.minimumBodySize = this.getExpandedBodySize();\n\t\t\tif (this.maximumBodySize < Number.POSITIVE_INFINITY) {\n\t\t\t\tthis.maximumBodySize = this.minimumBodySize;\n\t\t\t}\n\t\t\tif (this.list) {\n\t\t\t\tthis.list.splice(0, this.list.length, this.elements);\n\t\t\t\tthis.needsRefresh = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.needsRefresh = true;\n\t\t}\n\t}\n\n\tprivate get elements(): IEnablement[] {\n\t\tconst model = this.debugService.getModel();\n\t\tconst elements = (<ReadonlyArray<IEnablement>>model.getExceptionBreakpoints()).concat(model.getFunctionBreakpoints()).concat(model.getBreakpoints());\n\n\t\treturn elements;\n\t}\n\n\tprivate getExpandedBodySize(): number {\n\t\tconst model = this.debugService.getModel();\n\t\tconst length = model.getBreakpoints().length + model.getExceptionBreakpoints().length + model.getFunctionBreakpoints().length;\n\t\treturn Math.min(BreakpointsView.MAX_VISIBLE_FILES, length) * 22;\n\t}\n}\n\nclass BreakpointsDelegate implements IListVirtualDelegate<IEnablement> {\n\n\tconstructor(private debugService: IDebugService) {\n\t\t// noop\n\t}\n\n\tgetHeight(element: IEnablement): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IEnablement): string {\n\t\tif (element instanceof Breakpoint) {\n\t\t\treturn BreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof FunctionBreakpoint) {\n\t\t\tconst selected = this.debugService.getViewModel().getSelectedFunctionBreakpoint();\n\t\t\tif (!element.name || (selected && selected.getId() === element.getId())) {\n\t\t\t\treturn FunctionBreakpointInputRenderer.ID;\n\t\t\t}\n\n\t\t\treturn FunctionBreakpointsRenderer.ID;\n\t\t}\n\t\tif (element instanceof ExceptionBreakpoint) {\n\t\t\treturn ExceptionBreakpointsRenderer.ID;\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\ninterface IBaseBreakpointTemplateData {\n\tbreakpoint: HTMLElement;\n\tname: HTMLElement;\n\tcheckbox: HTMLInputElement;\n\tcontext: IEnablement;\n\ttoDispose: IDisposable[];\n}\n\ninterface IBaseBreakpointWithIconTemplateData extends IBaseBreakpointTemplateData {\n\ticon: HTMLElement;\n}\n\ninterface IBreakpointTemplateData extends IBaseBreakpointWithIconTemplateData {\n\tlineNumber: HTMLElement;\n\tfilePath: HTMLElement;\n}\n\ninterface IInputTemplateData {\n\tinputBox: InputBox;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLElement;\n\tbreakpoint: IFunctionBreakpoint;\n\treactedOnEvent: boolean;\n\ttoDispose: IDisposable[];\n}\n\nclass BreakpointsRenderer implements IListRenderer<IBreakpoint, IBreakpointTemplateData> {\n\n\tconstructor(\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@ILabelService private readonly labelService: ILabelService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'breakpoints';\n\n\tget templateId() {\n\t\treturn BreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IBreakpointTemplateData {\n\t\tconst data: IBreakpointTemplateData = Object.create(null);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox();\n\t\tdata.toDispose = [];\n\t\tdata.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\n\t\tdata.filePath = dom.append(data.breakpoint, $('span.file-path'));\n\t\tconst lineNumberContainer = dom.append(data.breakpoint, $('.line-number-container'));\n\t\tdata.lineNumber = dom.append(lineNumberContainer, $('span.line-number'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(breakpoint: IBreakpoint, index: number, data: IBreakpointTemplateData): void {\n\t\tdata.context = breakpoint;\n\t\tdom.toggleClass(data.breakpoint, 'disabled', !this.debugService.getModel().areBreakpointsActivated());\n\n\t\tdata.name.textContent = resources.basenameOrAuthority(breakpoint.uri);\n\t\tdata.lineNumber.textContent = breakpoint.lineNumber.toString();\n\t\tif (breakpoint.column) {\n\t\t\tdata.lineNumber.textContent += `:${breakpoint.column}`;\n\t\t}\n\t\tdata.filePath.textContent = this.labelService.getUriLabel(resources.dirname(breakpoint.uri), { relative: true });\n\t\tdata.checkbox.checked = breakpoint.enabled;\n\n\t\tconst { message, className } = getBreakpointMessageAndClassName(this.debugService, breakpoint);\n\t\tdata.icon.className = className + ' icon';\n\t\tdata.breakpoint.title = breakpoint.message || message || '';\n\n\t\tconst debugActive = this.debugService.state === State.Running || this.debugService.state === State.Stopped;\n\t\tif (debugActive && !breakpoint.verified) {\n\t\t\tdom.addClass(data.breakpoint, 'disabled');\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IBreakpointTemplateData): void {\n\t\tdispose(templateData.toDispose);\n\t}\n}\n\nclass ExceptionBreakpointsRenderer implements IListRenderer<IExceptionBreakpoint, IBaseBreakpointTemplateData> {\n\n\tconstructor(\n\t\tprivate debugService: IDebugService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'exceptionbreakpoints';\n\n\tget templateId() {\n\t\treturn ExceptionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IBaseBreakpointTemplateData {\n\t\tconst data: IBreakpointTemplateData = Object.create(null);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.checkbox = createCheckbox();\n\t\tdata.toDispose = [];\n\t\tdata.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\t\tdom.addClass(data.breakpoint, 'exception');\n\n\t\treturn data;\n\t}\n\n\trenderElement(exceptionBreakpoint: IExceptionBreakpoint, index: number, data: IBaseBreakpointTemplateData): void {\n\t\tdata.context = exceptionBreakpoint;\n\t\tdata.name.textContent = exceptionBreakpoint.label || `${exceptionBreakpoint.filter} exceptions`;\n\t\tdata.breakpoint.title = data.name.textContent;\n\t\tdata.checkbox.checked = exceptionBreakpoint.enabled;\n\t}\n\n\tdisposeTemplate(templateData: IBaseBreakpointTemplateData): void {\n\t\tdispose(templateData.toDispose);\n\t}\n}\n\nclass FunctionBreakpointsRenderer implements IListRenderer<FunctionBreakpoint, IBaseBreakpointWithIconTemplateData> {\n\n\tconstructor(\n\t\t@IDebugService private readonly debugService: IDebugService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'functionbreakpoints';\n\n\tget templateId() {\n\t\treturn FunctionBreakpointsRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IBaseBreakpointWithIconTemplateData {\n\t\tconst data: IBreakpointTemplateData = Object.create(null);\n\t\tdata.breakpoint = dom.append(container, $('.breakpoint'));\n\n\t\tdata.icon = $('.icon');\n\t\tdata.checkbox = createCheckbox();\n\t\tdata.toDispose = [];\n\t\tdata.toDispose.push(dom.addStandardDisposableListener(data.checkbox, 'change', (e) => {\n\t\t\tthis.debugService.enableOrDisableBreakpoints(!data.context.enabled, data.context);\n\t\t}));\n\n\t\tdom.append(data.breakpoint, data.icon);\n\t\tdom.append(data.breakpoint, data.checkbox);\n\n\t\tdata.name = dom.append(data.breakpoint, $('span.name'));\n\n\t\treturn data;\n\t}\n\n\trenderElement(functionBreakpoint: FunctionBreakpoint, index: number, data: IBaseBreakpointWithIconTemplateData): void {\n\t\tdata.context = functionBreakpoint;\n\t\tdata.name.textContent = functionBreakpoint.name;\n\t\tconst { className, message } = getBreakpointMessageAndClassName(this.debugService, functionBreakpoint);\n\t\tdata.icon.className = className + ' icon';\n\t\tdata.icon.title = message ? message : '';\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.breakpoint.title = functionBreakpoint.name;\n\n\t\t// Mark function breakpoints as disabled if deactivated or if debug type does not support them #9099\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tdom.toggleClass(data.breakpoint, 'disabled', (session && !session.capabilities.supportsFunctionBreakpoints) || !this.debugService.getModel().areBreakpointsActivated());\n\t\tif (session && !session.capabilities.supportsFunctionBreakpoints) {\n\t\t\tdata.breakpoint.title = nls.localize('functionBreakpointsNotSupported', \"Function breakpoints are not supported by this debug type\");\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: IBaseBreakpointWithIconTemplateData): void {\n\t\tdispose(templateData.toDispose);\n\t}\n}\n\nclass FunctionBreakpointInputRenderer implements IListRenderer<IFunctionBreakpoint, IInputTemplateData> {\n\n\tconstructor(\n\t\tprivate debugService: IDebugService,\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate themeService: IThemeService\n\t) {\n\t\t// noop\n\t}\n\n\tstatic readonly ID = 'functionbreakpointinput';\n\n\tget templateId() {\n\t\treturn FunctionBreakpointInputRenderer.ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): IInputTemplateData {\n\t\tconst template: IInputTemplateData = Object.create(null);\n\n\t\tconst breakpoint = dom.append(container, $('.breakpoint'));\n\t\ttemplate.icon = $('.icon');\n\t\ttemplate.checkbox = createCheckbox();\n\n\t\tdom.append(breakpoint, template.icon);\n\t\tdom.append(breakpoint, template.checkbox);\n\t\tconst inputBoxContainer = dom.append(breakpoint, $('.inputBoxContainer'));\n\t\tconst inputBox = new InputBox(inputBoxContainer, this.contextViewService, {\n\t\t\tplaceholder: nls.localize('functionBreakpointPlaceholder', \"Function to break on\"),\n\t\t\tariaLabel: nls.localize('functionBreakPointInputAriaLabel', \"Type function breakpoint\")\n\t\t});\n\t\tconst styler = attachInputBoxStyler(inputBox, this.themeService);\n\t\tconst toDispose: IDisposable[] = [inputBox, styler];\n\n\t\tconst wrapUp = (renamed: boolean) => {\n\t\t\tif (!template.reactedOnEvent) {\n\t\t\t\ttemplate.reactedOnEvent = true;\n\t\t\t\tthis.debugService.getViewModel().setSelectedFunctionBreakpoint(undefined);\n\t\t\t\tif (inputBox.value && (renamed || template.breakpoint.name)) {\n\t\t\t\t\tthis.debugService.renameFunctionBreakpoint(template.breakpoint.getId(), renamed ? inputBox.value : template.breakpoint.name);\n\t\t\t\t} else {\n\t\t\t\t\tthis.debugService.removeFunctionBreakpoints(template.breakpoint.getId());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttoDispose.push(dom.addStandardDisposableListener(inputBox.inputElement, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tconst isEscape = e.equals(KeyCode.Escape);\n\t\t\tconst isEnter = e.equals(KeyCode.Enter);\n\t\t\tif (isEscape || isEnter) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\twrapUp(isEnter);\n\t\t\t}\n\t\t}));\n\t\ttoDispose.push(dom.addDisposableListener(inputBox.inputElement, 'blur', () => {\n\t\t\t// Need to react with a timeout on the blur event due to possible concurent splices #56443\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!template.breakpoint.name) {\n\t\t\t\t\twrapUp(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\ttemplate.inputBox = inputBox;\n\t\ttemplate.toDispose = toDispose;\n\t\treturn template;\n\t}\n\n\trenderElement(functionBreakpoint: FunctionBreakpoint, index: number, data: IInputTemplateData): void {\n\t\tdata.breakpoint = functionBreakpoint;\n\t\tdata.reactedOnEvent = false;\n\t\tconst { className, message } = getBreakpointMessageAndClassName(this.debugService, functionBreakpoint);\n\n\t\tdata.icon.className = className + ' icon';\n\t\tdata.icon.title = message ? message : '';\n\t\tdata.checkbox.checked = functionBreakpoint.enabled;\n\t\tdata.checkbox.disabled = true;\n\t\tdata.inputBox.value = functionBreakpoint.name || '';\n\t\tsetTimeout(() => {\n\t\t\tdata.inputBox.focus();\n\t\t\tdata.inputBox.select();\n\t\t}, 0);\n\t}\n\n\tdisposeTemplate(templateData: IInputTemplateData): void {\n\t\tdispose(templateData.toDispose);\n\t}\n}\n\nexport function openBreakpointSource(breakpoint: IBreakpoint, sideBySide: boolean, preserveFocus: boolean, debugService: IDebugService, editorService: IEditorService): Promise<IEditor | null> {\n\tif (breakpoint.uri.scheme === DEBUG_SCHEME && debugService.state === State.Inactive) {\n\t\treturn Promise.resolve(null);\n\t}\n\n\tconst selection = breakpoint.endLineNumber ? {\n\t\tstartLineNumber: breakpoint.lineNumber,\n\t\tendLineNumber: breakpoint.endLineNumber,\n\t\tstartColumn: breakpoint.column || 1,\n\t\tendColumn: breakpoint.endColumn || Constants.MAX_SAFE_SMALL_INTEGER\n\t} : {\n\t\t\tstartLineNumber: breakpoint.lineNumber,\n\t\t\tstartColumn: breakpoint.column || 1,\n\t\t\tendLineNumber: breakpoint.lineNumber,\n\t\t\tendColumn: breakpoint.column || Constants.MAX_SAFE_SMALL_INTEGER\n\t\t};\n\n\treturn editorService.openEditor({\n\t\tresource: breakpoint.uri,\n\t\toptions: {\n\t\t\tpreserveFocus,\n\t\t\tselection,\n\t\t\trevealIfVisible: true,\n\t\t\trevealInCenterIfOutsideViewport: true,\n\t\t\tpinned: !preserveFocus\n\t\t}\n\t}, sideBySide ? SIDE_GROUP : ACTIVE_GROUP);\n}\n\nexport function getBreakpointMessageAndClassName(debugService: IDebugService, breakpoint: IBreakpoint | FunctionBreakpoint): { message?: string, className: string } {\n\tconst state = debugService.state;\n\tconst debugActive = state === State.Running || state === State.Stopped;\n\n\tif (!breakpoint.enabled || !debugService.getModel().areBreakpointsActivated()) {\n\t\treturn {\n\t\t\tclassName: breakpoint instanceof FunctionBreakpoint ? 'debug-function-breakpoint-disabled' : breakpoint.logMessage ? 'debug-breakpoint-log-disabled' : 'debug-breakpoint-disabled',\n\t\t\tmessage: breakpoint.logMessage ? nls.localize('disabledLogpoint', \"Disabled logpoint\") : nls.localize('disabledBreakpoint', \"Disabled breakpoint\"),\n\t\t};\n\t}\n\n\tconst appendMessage = (text: string): string => {\n\t\treturn !(breakpoint instanceof FunctionBreakpoint) && breakpoint.message ? text.concat(', ' + breakpoint.message) : text;\n\t};\n\tif (debugActive && !breakpoint.verified) {\n\t\treturn {\n\t\t\tclassName: breakpoint instanceof FunctionBreakpoint ? 'debug-function-breakpoint-unverified' : breakpoint.logMessage ? 'debug-breakpoint-log-unverified' : 'debug-breakpoint-unverified',\n\t\t\tmessage: breakpoint.logMessage ? nls.localize('unverifiedLogpoint', \"Unverified logpoint\") : nls.localize('unverifiedBreakopint', \"Unverified breakpoint\"),\n\t\t};\n\t}\n\n\tconst session = debugService.getViewModel().focusedSession;\n\tif (breakpoint instanceof FunctionBreakpoint) {\n\t\tif (session && !session.capabilities.supportsFunctionBreakpoints) {\n\t\t\treturn {\n\t\t\t\tclassName: 'debug-function-breakpoint-unverified',\n\t\t\t\tmessage: nls.localize('functionBreakpointUnsupported', \"Function breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tclassName: 'debug-function-breakpoint',\n\t\t};\n\t}\n\n\tif (breakpoint.logMessage || breakpoint.condition || breakpoint.hitCondition) {\n\t\tconst messages: string[] = [];\n\t\tif (breakpoint.logMessage) {\n\t\t\tif (session && !session.capabilities.supportsLogPoints) {\n\t\t\t\treturn {\n\t\t\t\t\tclassName: 'debug-breakpoint-unsupported',\n\t\t\t\t\tmessage: nls.localize('logBreakpointUnsupported', \"Logpoints not supported by this debug type\"),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmessages.push(nls.localize('logMessage', \"Log Message: {0}\", breakpoint.logMessage));\n\t\t}\n\n\t\tif (session && breakpoint.condition && !session.capabilities.supportsConditionalBreakpoints) {\n\t\t\treturn {\n\t\t\t\tclassName: 'debug-breakpoint-unsupported',\n\t\t\t\tmessage: nls.localize('conditionalBreakpointUnsupported', \"Conditional breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\t\tif (session && breakpoint.hitCondition && !session.capabilities.supportsHitConditionalBreakpoints) {\n\t\t\treturn {\n\t\t\t\tclassName: 'debug-breakpoint-unsupported',\n\t\t\t\tmessage: nls.localize('hitBreakpointUnsupported', \"Hit conditional breakpoints not supported by this debug type\"),\n\t\t\t};\n\t\t}\n\n\t\tif (breakpoint.condition) {\n\t\t\tmessages.push(nls.localize('expression', \"Expression: {0}\", breakpoint.condition));\n\t\t}\n\t\tif (breakpoint.hitCondition) {\n\t\t\tmessages.push(nls.localize('hitCount', \"Hit Count: {0}\", breakpoint.hitCondition));\n\t\t}\n\n\t\treturn {\n\t\t\tclassName: breakpoint.logMessage ? 'debug-breakpoint-log' : 'debug-breakpoint-conditional',\n\t\t\tmessage: appendMessage(messages.join('\\n'))\n\t\t};\n\t}\n\n\treturn {\n\t\tclassName: 'debug-breakpoint',\n\t\tmessage: breakpoint.message\n\t};\n}\n"]}]}