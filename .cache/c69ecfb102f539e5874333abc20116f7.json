{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalProcessExtHostProxy.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalProcessExtHostProxy.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar terminal_1 = require(\"vs/workbench/contrib/terminal/common/terminal\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar TerminalProcessExtHostProxy = /** @class */ (function () {\n    function TerminalProcessExtHostProxy(terminalId, shellLaunchConfig, activeWorkspaceRootUri, cols, rows, _terminalService, _extensionService) {\n        var _this = this;\n        this.terminalId = terminalId;\n        this._terminalService = _terminalService;\n        this._extensionService = _extensionService;\n        this._disposables = [];\n        this._onProcessData = new event_1.Emitter();\n        this._onProcessExit = new event_1.Emitter();\n        this._onProcessIdReady = new event_1.Emitter();\n        this._onProcessTitleChanged = new event_1.Emitter();\n        this._onInput = new event_1.Emitter();\n        this._onResize = new event_1.Emitter();\n        this._onShutdown = new event_1.Emitter();\n        this._onRequestInitialCwd = new event_1.Emitter();\n        this._onRequestCwd = new event_1.Emitter();\n        this._onRequestLatency = new event_1.Emitter();\n        this._pendingInitialCwdRequests = [];\n        this._pendingCwdRequests = [];\n        this._pendingLatencyRequests = [];\n        this._extensionService.whenInstalledExtensionsRegistered().then(function () {\n            // TODO: MainThreadTerminalService is not ready at this point, fix this\n            setTimeout(function () {\n                _this._terminalService.requestExtHostProcess(_this, shellLaunchConfig, activeWorkspaceRootUri, cols, rows);\n            }, 0);\n        });\n    }\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onProcessData\", {\n        get: function () { return this._onProcessData.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onProcessExit\", {\n        get: function () { return this._onProcessExit.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onProcessIdReady\", {\n        get: function () { return this._onProcessIdReady.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onProcessTitleChanged\", {\n        get: function () { return this._onProcessTitleChanged.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onInput\", {\n        get: function () { return this._onInput.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onResize\", {\n        get: function () { return this._onResize.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onShutdown\", {\n        get: function () { return this._onShutdown.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onRequestInitialCwd\", {\n        get: function () { return this._onRequestInitialCwd.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onRequestCwd\", {\n        get: function () { return this._onRequestCwd.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalProcessExtHostProxy.prototype, \"onRequestLatency\", {\n        get: function () { return this._onRequestLatency.event; },\n        enumerable: true,\n        configurable: true\n    });\n    TerminalProcessExtHostProxy.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d.dispose(); });\n        this._disposables.length = 0;\n    };\n    TerminalProcessExtHostProxy.prototype.emitData = function (data) {\n        this._onProcessData.fire(data);\n    };\n    TerminalProcessExtHostProxy.prototype.emitTitle = function (title) {\n        this._onProcessTitleChanged.fire(title);\n    };\n    TerminalProcessExtHostProxy.prototype.emitPid = function (pid) {\n        this._onProcessIdReady.fire(pid);\n    };\n    TerminalProcessExtHostProxy.prototype.emitExit = function (exitCode) {\n        this._onProcessExit.fire(exitCode);\n        this.dispose();\n    };\n    TerminalProcessExtHostProxy.prototype.emitInitialCwd = function (initialCwd) {\n        while (this._pendingInitialCwdRequests.length > 0) {\n            this._pendingInitialCwdRequests.pop()(initialCwd);\n        }\n    };\n    TerminalProcessExtHostProxy.prototype.emitCwd = function (cwd) {\n        while (this._pendingCwdRequests.length > 0) {\n            this._pendingCwdRequests.pop()(cwd);\n        }\n    };\n    TerminalProcessExtHostProxy.prototype.emitLatency = function (latency) {\n        while (this._pendingLatencyRequests.length > 0) {\n            this._pendingLatencyRequests.pop()(latency);\n        }\n    };\n    TerminalProcessExtHostProxy.prototype.shutdown = function (immediate) {\n        this._onShutdown.fire(immediate);\n    };\n    TerminalProcessExtHostProxy.prototype.input = function (data) {\n        this._onInput.fire(data);\n    };\n    TerminalProcessExtHostProxy.prototype.resize = function (cols, rows) {\n        this._onResize.fire({ cols: cols, rows: rows });\n    };\n    TerminalProcessExtHostProxy.prototype.getInitialCwd = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._onRequestInitialCwd.fire();\n            _this._pendingInitialCwdRequests.push(resolve);\n        });\n    };\n    TerminalProcessExtHostProxy.prototype.getCwd = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._onRequestCwd.fire();\n            _this._pendingCwdRequests.push(resolve);\n        });\n    };\n    TerminalProcessExtHostProxy.prototype.getLatency = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._onRequestLatency.fire();\n            _this._pendingLatencyRequests.push(resolve);\n        });\n    };\n    TerminalProcessExtHostProxy = tslib_1.__decorate([\n        tslib_1.__param(5, terminal_1.ITerminalService),\n        tslib_1.__param(6, extensions_1.IExtensionService)\n    ], TerminalProcessExtHostProxy);\n    return TerminalProcessExtHostProxy;\n}());\nexports.TerminalProcessExtHostProxy = TerminalProcessExtHostProxy;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalProcessExtHostProxy.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalProcessExtHostProxy.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ITerminalService, ITerminalProcessExtHostProxy, IShellLaunchConfig, ITerminalChildProcess } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\n\nexport class TerminalProcessExtHostProxy implements ITerminalChildProcess, ITerminalProcessExtHostProxy {\n\tprivate _disposables: IDisposable[] = [];\n\n\tprivate readonly _onProcessData = new Emitter<string>();\n\tpublic get onProcessData(): Event<string> { return this._onProcessData.event; }\n\tprivate readonly _onProcessExit = new Emitter<number>();\n\tpublic get onProcessExit(): Event<number> { return this._onProcessExit.event; }\n\tprivate readonly _onProcessIdReady = new Emitter<number>();\n\tpublic get onProcessIdReady(): Event<number> { return this._onProcessIdReady.event; }\n\tprivate readonly _onProcessTitleChanged = new Emitter<string>();\n\tpublic get onProcessTitleChanged(): Event<string> { return this._onProcessTitleChanged.event; }\n\n\tprivate readonly _onInput = new Emitter<string>();\n\tpublic get onInput(): Event<string> { return this._onInput.event; }\n\tprivate readonly _onResize: Emitter<{ cols: number, rows: number }> = new Emitter<{ cols: number, rows: number }>();\n\tpublic get onResize(): Event<{ cols: number, rows: number }> { return this._onResize.event; }\n\tprivate readonly _onShutdown = new Emitter<boolean>();\n\tpublic get onShutdown(): Event<boolean> { return this._onShutdown.event; }\n\tprivate readonly _onRequestInitialCwd = new Emitter<void>();\n\tpublic get onRequestInitialCwd(): Event<void> { return this._onRequestInitialCwd.event; }\n\tprivate readonly _onRequestCwd = new Emitter<void>();\n\tpublic get onRequestCwd(): Event<void> { return this._onRequestCwd.event; }\n\tprivate readonly _onRequestLatency = new Emitter<void>();\n\tpublic get onRequestLatency(): Event<void> { return this._onRequestLatency.event; }\n\n\tprivate _pendingInitialCwdRequests: ((value?: string | Thenable<string>) => void)[] = [];\n\tprivate _pendingCwdRequests: ((value?: string | Thenable<string>) => void)[] = [];\n\tprivate _pendingLatencyRequests: ((value?: number | Thenable<number>) => void)[] = [];\n\n\tconstructor(\n\t\tpublic terminalId: number,\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tactiveWorkspaceRootUri: URI,\n\t\tcols: number,\n\t\trows: number,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService\n\t) {\n\t\tthis._extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\t// TODO: MainThreadTerminalService is not ready at this point, fix this\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._terminalService.requestExtHostProcess(this, shellLaunchConfig, activeWorkspaceRootUri, cols, rows);\n\t\t\t}, 0);\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._disposables.forEach(d => d.dispose());\n\t\tthis._disposables.length = 0;\n\t}\n\n\tpublic emitData(data: string): void {\n\t\tthis._onProcessData.fire(data);\n\t}\n\n\tpublic emitTitle(title: string): void {\n\t\tthis._onProcessTitleChanged.fire(title);\n\t}\n\n\tpublic emitPid(pid: number): void {\n\t\tthis._onProcessIdReady.fire(pid);\n\t}\n\n\tpublic emitExit(exitCode: number): void {\n\t\tthis._onProcessExit.fire(exitCode);\n\t\tthis.dispose();\n\t}\n\n\tpublic emitInitialCwd(initialCwd: string): void {\n\t\twhile (this._pendingInitialCwdRequests.length > 0) {\n\t\t\tthis._pendingInitialCwdRequests.pop()!(initialCwd);\n\t\t}\n\t}\n\n\tpublic emitCwd(cwd: string): void {\n\t\twhile (this._pendingCwdRequests.length > 0) {\n\t\t\tthis._pendingCwdRequests.pop()!(cwd);\n\t\t}\n\t}\n\n\tpublic emitLatency(latency: number): void {\n\t\twhile (this._pendingLatencyRequests.length > 0) {\n\t\t\tthis._pendingLatencyRequests.pop()!(latency);\n\t\t}\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\tthis._onShutdown.fire(immediate);\n\t}\n\n\tpublic input(data: string): void {\n\t\tthis._onInput.fire(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tthis._onResize.fire({ cols, rows });\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestInitialCwd.fire();\n\t\t\tthis._pendingInitialCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\treturn new Promise<string>(resolve => {\n\t\t\tthis._onRequestCwd.fire();\n\t\t\tthis._pendingCwdRequests.push(resolve);\n\t\t});\n\t}\n\n\tpublic getLatency(): Promise<number> {\n\t\treturn new Promise<number>(resolve => {\n\t\t\tthis._onRequestLatency.fire();\n\t\t\tthis._pendingLatencyRequests.push(resolve);\n\t\t});\n\t}\n}"]}]}