{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestAlternatives.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestAlternatives.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar SuggestAlternatives = /** @class */ (function () {\n    function SuggestAlternatives(_editor, contextKeyService) {\n        this._editor = _editor;\n        this._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\n    }\n    SuggestAlternatives.prototype.dispose = function () {\n        this.reset();\n    };\n    SuggestAlternatives.prototype.reset = function () {\n        this._ckOtherSuggestions.reset();\n        lifecycle_1.dispose(this._listener);\n        this._model = undefined;\n        this._acceptNext = undefined;\n        this._ignore = false;\n    };\n    SuggestAlternatives.prototype.set = function (_a, acceptNext) {\n        var _this = this;\n        var model = _a.model, index = _a.index;\n        // no suggestions -> nothing to do\n        if (model.items.length === 0) {\n            this.reset();\n            return;\n        }\n        // no alternative suggestions -> nothing to do\n        var nextIndex = SuggestAlternatives._moveIndex(true, model, index);\n        if (nextIndex === index) {\n            this.reset();\n            return;\n        }\n        this._acceptNext = acceptNext;\n        this._model = model;\n        this._index = index;\n        this._listener = this._editor.onDidChangeCursorPosition(function () {\n            if (!_this._ignore) {\n                _this.reset();\n            }\n        });\n        this._ckOtherSuggestions.set(true);\n    };\n    SuggestAlternatives._moveIndex = function (fwd, model, index) {\n        var newIndex = index;\n        while (true) {\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\n            if (newIndex === index) {\n                break;\n            }\n            if (!model.items[newIndex].completion.additionalTextEdits) {\n                break;\n            }\n        }\n        return newIndex;\n    };\n    SuggestAlternatives.prototype.next = function () {\n        this._move(true);\n    };\n    SuggestAlternatives.prototype.prev = function () {\n        this._move(false);\n    };\n    SuggestAlternatives.prototype._move = function (fwd) {\n        if (!this._model) {\n            // nothing to reason about\n            return;\n        }\n        try {\n            this._ignore = true;\n            this._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\n        }\n        finally {\n            this._ignore = false;\n        }\n    };\n    SuggestAlternatives.OtherSuggestions = new contextkey_1.RawContextKey('hasOtherSuggestions', false);\n    SuggestAlternatives = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService)\n    ], SuggestAlternatives);\n    return SuggestAlternatives;\n}());\nexports.SuggestAlternatives = SuggestAlternatives;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestAlternatives.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/suggestAlternatives.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { CompletionModel } from './completionModel';\nimport { ISelectedSuggestion } from './suggestWidget';\n\nexport class SuggestAlternatives {\n\n\tstatic OtherSuggestions = new RawContextKey<boolean>('hasOtherSuggestions', false);\n\n\tprivate readonly _ckOtherSuggestions: IContextKey<boolean>;\n\n\tprivate _index: number;\n\tprivate _model: CompletionModel | undefined;\n\tprivate _acceptNext: ((selected: ISelectedSuggestion) => any) | undefined;\n\tprivate _listener: IDisposable | undefined;\n\tprivate _ignore: boolean | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\n\t}\n\n\tdispose(): void {\n\t\tthis.reset();\n\t}\n\n\treset(): void {\n\t\tthis._ckOtherSuggestions.reset();\n\t\tdispose(this._listener);\n\t\tthis._model = undefined;\n\t\tthis._acceptNext = undefined;\n\t\tthis._ignore = false;\n\t}\n\n\tset({ model, index }: ISelectedSuggestion, acceptNext: (selected: ISelectedSuggestion) => any): void {\n\n\t\t// no suggestions -> nothing to do\n\t\tif (model.items.length === 0) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\t// no alternative suggestions -> nothing to do\n\t\tlet nextIndex = SuggestAlternatives._moveIndex(true, model, index);\n\t\tif (nextIndex === index) {\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._acceptNext = acceptNext;\n\t\tthis._model = model;\n\t\tthis._index = index;\n\t\tthis._listener = this._editor.onDidChangeCursorPosition(() => {\n\t\t\tif (!this._ignore) {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\tthis._ckOtherSuggestions.set(true);\n\t}\n\n\tprivate static _moveIndex(fwd: boolean, model: CompletionModel, index: number): number {\n\t\tlet newIndex = index;\n\t\twhile (true) {\n\t\t\tnewIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\n\t\t\tif (newIndex === index) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!model.items[newIndex].completion.additionalTextEdits) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn newIndex;\n\t}\n\n\tnext(): void {\n\t\tthis._move(true);\n\t}\n\n\tprev(): void {\n\t\tthis._move(false);\n\t}\n\n\tprivate _move(fwd: boolean): void {\n\t\tif (!this._model) {\n\t\t\t// nothing to reason about\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._ignore = true;\n\t\t\tthis._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\n\t\t\tthis._acceptNext!({ index: this._index, item: this._model.items[this._index], model: this._model });\n\t\t} finally {\n\t\t\tthis._ignore = false;\n\t\t}\n\t}\n}\n"]}]}