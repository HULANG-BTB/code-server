{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/map.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/map.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar charCode_1 = require(\"vs/base/common/charCode\");\nvar iterator_1 = require(\"./iterator\");\nfunction values(forEachable) {\n    var result = [];\n    forEachable.forEach(function (value) { return result.push(value); });\n    return result;\n}\nexports.values = values;\nfunction keys(map) {\n    var result = [];\n    map.forEach(function (value, key) { return result.push(key); });\n    return result;\n}\nexports.keys = keys;\nfunction getOrSet(map, key, value) {\n    var result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nexports.getOrSet = getOrSet;\nfunction mapToString(map) {\n    var entries = [];\n    map.forEach(function (value, key) {\n        entries.push(key + \" => \" + value);\n    });\n    return \"Map(\" + map.size + \") {\" + entries.join(', ') + \"}\";\n}\nexports.mapToString = mapToString;\nfunction setToString(set) {\n    var entries = [];\n    set.forEach(function (value) {\n        entries.push(value);\n    });\n    return \"Set(\" + set.size + \") {\" + entries.join(', ') + \"}\";\n}\nexports.setToString = setToString;\nfunction mapToSerializable(map) {\n    var serializable = [];\n    map.forEach(function (value, key) {\n        serializable.push([key, value]);\n    });\n    return serializable;\n}\nexports.mapToSerializable = mapToSerializable;\nfunction serializableToMap(serializable) {\n    var items = new Map();\n    for (var _i = 0, serializable_1 = serializable; _i < serializable_1.length; _i++) {\n        var _a = serializable_1[_i], key = _a[0], value = _a[1];\n        items.set(key, value);\n    }\n    return items;\n}\nexports.serializableToMap = serializableToMap;\nvar StringIterator = /** @class */ (function () {\n    function StringIterator() {\n        this._value = '';\n        this._pos = 0;\n    }\n    StringIterator.prototype.reset = function (key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    };\n    StringIterator.prototype.next = function () {\n        this._pos += 1;\n        return this;\n    };\n    StringIterator.prototype.hasNext = function () {\n        return this._pos < this._value.length - 1;\n    };\n    StringIterator.prototype.cmp = function (a) {\n        var aCode = a.charCodeAt(0);\n        var thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    };\n    StringIterator.prototype.value = function () {\n        return this._value[this._pos];\n    };\n    return StringIterator;\n}());\nexports.StringIterator = StringIterator;\nvar PathIterator = /** @class */ (function () {\n    function PathIterator() {\n    }\n    PathIterator.prototype.reset = function (key) {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    };\n    PathIterator.prototype.hasNext = function () {\n        return this._to < this._value.length;\n    };\n    PathIterator.prototype.next = function () {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        var justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            var ch = this._value.charCodeAt(this._to);\n            if (ch === charCode_1.CharCode.Slash || ch === charCode_1.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    };\n    PathIterator.prototype.cmp = function (a) {\n        var aPos = 0;\n        var aLen = a.length;\n        var thisPos = this._from;\n        while (aPos < aLen && thisPos < this._to) {\n            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    };\n    PathIterator.prototype.value = function () {\n        return this._value.substring(this._from, this._to);\n    };\n    return PathIterator;\n}());\nexports.PathIterator = PathIterator;\nvar TernarySearchTreeNode = /** @class */ (function () {\n    function TernarySearchTreeNode() {\n    }\n    TernarySearchTreeNode.prototype.isEmpty = function () {\n        return !this.left && !this.mid && !this.right && !this.value;\n    };\n    return TernarySearchTreeNode;\n}());\nvar TernarySearchTree = /** @class */ (function () {\n    function TernarySearchTree(segments) {\n        this._iter = segments;\n    }\n    TernarySearchTree.forPaths = function () {\n        return new TernarySearchTree(new PathIterator());\n    };\n    TernarySearchTree.forStrings = function () {\n        return new TernarySearchTree(new StringIterator());\n    };\n    TernarySearchTree.prototype.clear = function () {\n        this._root = undefined;\n    };\n    TernarySearchTree.prototype.set = function (key, element) {\n        var iter = this._iter.reset(key);\n        var node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        node = this._root;\n        while (true) {\n            var val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        var oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    };\n    TernarySearchTree.prototype.get = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    };\n    TernarySearchTree.prototype.delete = function (key) {\n        var iter = this._iter.reset(key);\n        var stack = [];\n        var node = this._root;\n        // find and unset node\n        while (node) {\n            var val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    var _a = stack.pop(), dir = _a[0], parent = _a[1];\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    };\n    TernarySearchTree.prototype.findSubstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        var candidate = undefined;\n        while (node) {\n            var val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    };\n    TernarySearchTree.prototype.findSuperstr = function (key) {\n        var iter = this._iter.reset(key);\n        var node = this._root;\n        while (node) {\n            var val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    return this._nodeIterator(node.mid);\n                }\n            }\n        }\n        return undefined;\n    };\n    TernarySearchTree.prototype._nodeIterator = function (node) {\n        var _this = this;\n        var res;\n        var idx;\n        var data;\n        var next = function () {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                _this._forEach(node, function (value) { return data.push(value); });\n            }\n            if (idx >= data.length) {\n                return iterator_1.FIN;\n            }\n            if (!res) {\n                res = { done: false, value: data[idx++] };\n            }\n            else {\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next: next };\n    };\n    TernarySearchTree.prototype.forEach = function (callback) {\n        this._forEach(this._root, callback);\n    };\n    TernarySearchTree.prototype._forEach = function (node, callback) {\n        if (node) {\n            // left\n            this._forEach(node.left, callback);\n            // node\n            if (node.value) {\n                // callback(node.value, this._iter.join(parts));\n                callback(node.value, node.key);\n            }\n            // mid\n            this._forEach(node.mid, callback);\n            // right\n            this._forEach(node.right, callback);\n        }\n    };\n    return TernarySearchTree;\n}());\nexports.TernarySearchTree = TernarySearchTree;\nvar ResourceMap = /** @class */ (function () {\n    function ResourceMap() {\n        this.map = new Map();\n        this.ignoreCase = false; // in the future this should be an uri-comparator\n    }\n    ResourceMap.prototype.set = function (resource, value) {\n        this.map.set(this.toKey(resource), value);\n    };\n    ResourceMap.prototype.get = function (resource) {\n        return this.map.get(this.toKey(resource));\n    };\n    ResourceMap.prototype.has = function (resource) {\n        return this.map.has(this.toKey(resource));\n    };\n    Object.defineProperty(ResourceMap.prototype, \"size\", {\n        get: function () {\n            return this.map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceMap.prototype.clear = function () {\n        this.map.clear();\n    };\n    ResourceMap.prototype.delete = function (resource) {\n        return this.map.delete(this.toKey(resource));\n    };\n    ResourceMap.prototype.forEach = function (clb) {\n        this.map.forEach(clb);\n    };\n    ResourceMap.prototype.values = function () {\n        return values(this.map);\n    };\n    ResourceMap.prototype.toKey = function (resource) {\n        var key = resource.toString();\n        if (this.ignoreCase) {\n            key = key.toLowerCase();\n        }\n        return key;\n    };\n    ResourceMap.prototype.keys = function () {\n        return keys(this.map).map(function (k) { return uri_1.URI.parse(k); });\n    };\n    ResourceMap.prototype.clone = function () {\n        var resourceMap = new ResourceMap();\n        this.map.forEach(function (value, key) { return resourceMap.map.set(key, value); });\n        return resourceMap;\n    };\n    return ResourceMap;\n}());\nexports.ResourceMap = ResourceMap;\nvar Touch;\n(function (Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch = exports.Touch || (exports.Touch = {}));\nvar LinkedMap = /** @class */ (function () {\n    function LinkedMap() {\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    }\n    LinkedMap.prototype.clear = function () {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n    };\n    LinkedMap.prototype.isEmpty = function () {\n        return !this._head && !this._tail;\n    };\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedMap.prototype.has = function (key) {\n        return this._map.has(key);\n    };\n    LinkedMap.prototype.get = function (key, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    };\n    LinkedMap.prototype.set = function (key, value, touch) {\n        if (touch === void 0) { touch = Touch.None; }\n        var item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key: key, value: value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n    };\n    LinkedMap.prototype.delete = function (key) {\n        return !!this.remove(key);\n    };\n    LinkedMap.prototype.remove = function (key) {\n        var item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.shift = function () {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        var item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    };\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\n        var current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            current = current.next;\n        }\n    };\n    LinkedMap.prototype.values = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.value);\n            current = current.next;\n        }\n        return result;\n    };\n    LinkedMap.prototype.keys = function () {\n        var result = [];\n        var current = this._head;\n        while (current) {\n            result.push(current.key);\n            current = current.next;\n        }\n        return result;\n    };\n    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n    keys(): IterableIterator<K> {\n        const current = this._head;\n        const iterator: IterableIterator<K> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<K> {\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n\n    values(): IterableIterator<V> {\n        const current = this._head;\n        const iterator: IterableIterator<V> = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next():IteratorResult<V> {\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                } else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    */\n    LinkedMap.prototype.trimOld = function (newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        var current = this._head;\n        var currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n    };\n    LinkedMap.prototype.addItemFirst = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n    };\n    LinkedMap.prototype.addItemLast = function (item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n    };\n    LinkedMap.prototype.removeItem = function (item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            var next = item.next;\n            var previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n    };\n    LinkedMap.prototype.touch = function (item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            var next = item.next;\n            var previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n        }\n    };\n    LinkedMap.prototype.toJSON = function () {\n        var data = [];\n        this.forEach(function (value, key) {\n            data.push([key, value]);\n        });\n        return data;\n    };\n    LinkedMap.prototype.fromJSON = function (data) {\n        this.clear();\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n            var _a = data_1[_i], key = _a[0], value = _a[1];\n            this.set(key, value);\n        }\n    };\n    return LinkedMap;\n}());\nexports.LinkedMap = LinkedMap;\nvar LRUCache = /** @class */ (function (_super) {\n    tslib_1.__extends(LRUCache, _super);\n    function LRUCache(limit, ratio) {\n        if (ratio === void 0) { ratio = 1; }\n        var _this = _super.call(this) || this;\n        _this._limit = limit;\n        _this._ratio = Math.min(Math.max(0, ratio), 1);\n        return _this;\n    }\n    Object.defineProperty(LRUCache.prototype, \"limit\", {\n        get: function () {\n            return this._limit;\n        },\n        set: function (limit) {\n            this._limit = limit;\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LRUCache.prototype, \"ratio\", {\n        get: function () {\n            return this._ratio;\n        },\n        set: function (ratio) {\n            this._ratio = Math.min(Math.max(0, ratio), 1);\n            this.checkTrim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.get = function (key) {\n        return _super.prototype.get.call(this, key, Touch.AsNew);\n    };\n    LRUCache.prototype.peek = function (key) {\n        return _super.prototype.get.call(this, key, Touch.None);\n    };\n    LRUCache.prototype.set = function (key, value) {\n        _super.prototype.set.call(this, key, value, Touch.AsNew);\n        this.checkTrim();\n    };\n    LRUCache.prototype.checkTrim = function () {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    };\n    return LRUCache;\n}(LinkedMap));\nexports.LRUCache = LRUCache;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/map.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/map.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value: string;\n\tprivate _from: number;\n\tprivate _to: number;\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment: string;\n\tvalue: E | undefined;\n\tkey: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T) => void): void {\n\t\tthis.map.forEach(clb);\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\n// We should fold BoundedMap and LinkedMap. See https://github.com/Microsoft/vscode/issues/28496\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n"]}]}