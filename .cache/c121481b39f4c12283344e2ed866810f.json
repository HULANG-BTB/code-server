{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffNavigator.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffNavigator.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert = require(\"vs/base/common/assert\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar objects = require(\"vs/base/common/objects\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nvar DiffNavigator = /** @class */ (function () {\n    function DiffNavigator(editor, options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        this._onDidUpdate = new event_1.Emitter();\n        this.onDidUpdate = this._onDidUpdate.event;\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this._disposables = [];\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._disposables.push(this._editor.onDidDispose(function () { return _this.dispose(); }));\n        this._disposables.push(this._editor.onDidUpdateDiff(function () { return _this._onDiffUpdated(); }));\n        if (this._options.followsCaret) {\n            this._disposables.push(this._editor.getModifiedEditor().onDidChangeCursorPosition(function (e) {\n                if (_this.ignoreSelectionChange) {\n                    return;\n                }\n                _this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._disposables.push(this._editor.getModifiedEditor().onDidChangeModel(function (e) {\n                _this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    DiffNavigator.prototype._init = function () {\n        var changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    };\n    DiffNavigator.prototype._onDiffUpdated = function () {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(editorCommon_1.ScrollType.Immediate);\n            }\n        }\n    };\n    DiffNavigator.prototype._compute = function (lineChanges) {\n        var _this = this;\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach(function (lineChange) {\n                if (!_this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach(function (charChange) {\n                        _this.ranges.push({\n                            rhs: true,\n                            range: new range_1.Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    _this.ranges.push({\n                        rhs: true,\n                        range: new range_1.Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\n                    });\n                }\n            });\n        }\n        // sort\n        this.ranges.sort(function (left, right) {\n            if (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\n                return -1;\n            }\n            else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        this._onDidUpdate.fire(this);\n    };\n    DiffNavigator.prototype._initIdx = function (fwd) {\n        var found = false;\n        var position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (var i = 0, len = this.ranges.length; i < len && !found; i++) {\n            var range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    };\n    DiffNavigator.prototype._move = function (fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        var info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            var pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealPositionInCenter(pos, scrollType);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    };\n    DiffNavigator.prototype.canNavigate = function () {\n        return this.ranges && this.ranges.length > 0;\n    };\n    DiffNavigator.prototype.next = function (scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon_1.ScrollType.Smooth; }\n        this._move(true, scrollType);\n    };\n    DiffNavigator.prototype.previous = function (scrollType) {\n        if (scrollType === void 0) { scrollType = editorCommon_1.ScrollType.Smooth; }\n        this._move(false, scrollType);\n    };\n    DiffNavigator.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        this._disposables.length = 0;\n        this._onDidUpdate.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    };\n    return DiffNavigator;\n}());\nexports.DiffNavigator = DiffNavigator;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffNavigator.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffNavigator.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'vs/base/common/assert';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport * as objects from 'vs/base/common/objects';\nimport { IDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILineChange, ScrollType } from 'vs/editor/common/editorCommon';\n\n\ninterface IDiffRange {\n\trhs: boolean;\n\trange: Range;\n}\n\nexport interface Options {\n\tfollowsCaret?: boolean;\n\tignoreCharChanges?: boolean;\n\talwaysRevealFirst?: boolean;\n}\n\nconst defaultOptions: Options = {\n\tfollowsCaret: true,\n\tignoreCharChanges: true,\n\talwaysRevealFirst: true\n};\n\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport class DiffNavigator {\n\n\tprivate readonly _editor: IDiffEditor;\n\tprivate readonly _options: Options;\n\tprivate readonly _disposables: IDisposable[];\n\tprivate readonly _onDidUpdate = new Emitter<this>();\n\n\treadonly onDidUpdate: Event<this> = this._onDidUpdate.event;\n\n\tprivate disposed: boolean;\n\tprivate revealFirst: boolean;\n\tprivate nextIdx: number;\n\tprivate ranges: IDiffRange[];\n\tprivate ignoreSelectionChange: boolean;\n\n\tconstructor(editor: IDiffEditor, options: Options = {}) {\n\t\tthis._editor = editor;\n\t\tthis._options = objects.mixin(options, defaultOptions, false);\n\n\t\tthis.disposed = false;\n\t\tthis._disposables = [];\n\n\t\tthis.nextIdx = -1;\n\t\tthis.ranges = [];\n\t\tthis.ignoreSelectionChange = false;\n\t\tthis.revealFirst = Boolean(this._options.alwaysRevealFirst);\n\n\t\t// hook up to diff editor for diff, disposal, and caret move\n\t\tthis._disposables.push(this._editor.onDidDispose(() => this.dispose()));\n\t\tthis._disposables.push(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n\n\t\tif (this._options.followsCaret) {\n\t\t\tthis._disposables.push(this._editor.getModifiedEditor().onDidChangeCursorPosition((e: ICursorPositionChangedEvent) => {\n\t\t\t\tif (this.ignoreSelectionChange) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.nextIdx = -1;\n\t\t\t}));\n\t\t}\n\t\tif (this._options.alwaysRevealFirst) {\n\t\t\tthis._disposables.push(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n\t\t\t\tthis.revealFirst = true;\n\t\t\t}));\n\t\t}\n\n\t\t// init things\n\t\tthis._init();\n\t}\n\n\tprivate _init(): void {\n\t\tlet changes = this._editor.getLineChanges();\n\t\tif (!changes) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _onDiffUpdated(): void {\n\t\tthis._init();\n\n\t\tthis._compute(this._editor.getLineChanges());\n\t\tif (this.revealFirst) {\n\t\t\t// Only reveal first on first non-null changes\n\t\t\tif (this._editor.getLineChanges() !== null) {\n\t\t\t\tthis.revealFirst = false;\n\t\t\t\tthis.nextIdx = -1;\n\t\t\t\tthis.next(ScrollType.Immediate);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _compute(lineChanges: ILineChange[] | null): void {\n\n\t\t// new ranges\n\t\tthis.ranges = [];\n\n\t\tif (lineChanges) {\n\t\t\t// create ranges from changes\n\t\t\tlineChanges.forEach((lineChange) => {\n\n\t\t\t\tif (!this._options.ignoreCharChanges && lineChange.charChanges) {\n\n\t\t\t\t\tlineChange.charChanges.forEach((charChange) => {\n\t\t\t\t\t\tthis.ranges.push({\n\t\t\t\t\t\t\trhs: true,\n\t\t\t\t\t\t\trange: new Range(\n\t\t\t\t\t\t\t\tcharChange.modifiedStartLineNumber,\n\t\t\t\t\t\t\t\tcharChange.modifiedStartColumn,\n\t\t\t\t\t\t\t\tcharChange.modifiedEndLineNumber,\n\t\t\t\t\t\t\t\tcharChange.modifiedEndColumn)\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ranges.push({\n\t\t\t\t\t\trhs: true,\n\t\t\t\t\t\trange: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// sort\n\t\tthis.ranges.sort((left, right) => {\n\t\t\tif (left.range.getStartPosition().isBeforeOrEqual(right.range.getStartPosition())) {\n\t\t\t\treturn -1;\n\t\t\t} else if (right.range.getStartPosition().isBeforeOrEqual(left.range.getStartPosition())) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t\tthis._onDidUpdate.fire(this);\n\t}\n\n\tprivate _initIdx(fwd: boolean): void {\n\t\tlet found = false;\n\t\tlet position = this._editor.getPosition();\n\t\tif (!position) {\n\t\t\tthis.nextIdx = 0;\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n\t\t\tlet range = this.ranges[i].range;\n\t\t\tif (position.isBeforeOrEqual(range.getStartPosition())) {\n\t\t\t\tthis.nextIdx = i + (fwd ? 0 : -1);\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t\tif (!found) {\n\t\t\t// after the last change\n\t\t\tthis.nextIdx = fwd ? 0 : this.ranges.length - 1;\n\t\t}\n\t\tif (this.nextIdx < 0) {\n\t\t\tthis.nextIdx = this.ranges.length - 1;\n\t\t}\n\t}\n\n\tprivate _move(fwd: boolean, scrollType: ScrollType): void {\n\t\tassert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n\n\t\tif (!this.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.nextIdx === -1) {\n\t\t\tthis._initIdx(fwd);\n\n\t\t} else if (fwd) {\n\t\t\tthis.nextIdx += 1;\n\t\t\tif (this.nextIdx >= this.ranges.length) {\n\t\t\t\tthis.nextIdx = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.nextIdx -= 1;\n\t\t\tif (this.nextIdx < 0) {\n\t\t\t\tthis.nextIdx = this.ranges.length - 1;\n\t\t\t}\n\t\t}\n\n\t\tlet info = this.ranges[this.nextIdx];\n\t\tthis.ignoreSelectionChange = true;\n\t\ttry {\n\t\t\tlet pos = info.range.getStartPosition();\n\t\t\tthis._editor.setPosition(pos);\n\t\t\tthis._editor.revealPositionInCenter(pos, scrollType);\n\t\t} finally {\n\t\t\tthis.ignoreSelectionChange = false;\n\t\t}\n\t}\n\n\tcanNavigate(): boolean {\n\t\treturn this.ranges && this.ranges.length > 0;\n\t}\n\n\tnext(scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._move(true, scrollType);\n\t}\n\n\tprevious(scrollType: ScrollType = ScrollType.Smooth): void {\n\t\tthis._move(false, scrollType);\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\t\tthis._disposables.length = 0;\n\t\tthis._onDidUpdate.dispose();\n\t\tthis.ranges = [];\n\t\tthis.disposed = true;\n\t}\n}\n"]}]}