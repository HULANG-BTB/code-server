{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/common/preferences.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/common/preferences.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nexports.IPreferencesSearchService = instantiation_1.createDecorator('preferencesSearchService');\nexports.CONTEXT_SETTINGS_EDITOR = new contextkey_1.RawContextKey('inSettingsEditor', false);\nexports.CONTEXT_SETTINGS_JSON_EDITOR = new contextkey_1.RawContextKey('inSettingsJSONEditor', false);\nexports.CONTEXT_SETTINGS_SEARCH_FOCUS = new contextkey_1.RawContextKey('inSettingsSearch', false);\nexports.CONTEXT_TOC_ROW_FOCUS = new contextkey_1.RawContextKey('settingsTocRowFocus', false);\nexports.CONTEXT_KEYBINDINGS_EDITOR = new contextkey_1.RawContextKey('inKeybindings', false);\nexports.CONTEXT_KEYBINDINGS_SEARCH_FOCUS = new contextkey_1.RawContextKey('inKeybindingsSearch', false);\nexports.CONTEXT_KEYBINDING_FOCUS = new contextkey_1.RawContextKey('keybindingFocus', false);\nexports.SETTINGS_EDITOR_COMMAND_SEARCH = 'settings.action.search';\nexports.SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'settings.action.clearSearchResults';\nexports.SETTINGS_EDITOR_COMMAND_FOCUS_NEXT_SETTING = 'settings.action.focusNextSetting';\nexports.SETTINGS_EDITOR_COMMAND_FOCUS_PREVIOUS_SETTING = 'settings.action.focusPreviousSetting';\nexports.SETTINGS_EDITOR_COMMAND_FOCUS_FILE = 'settings.action.focusSettingsFile';\nexports.SETTINGS_EDITOR_COMMAND_EDIT_FOCUSED_SETTING = 'settings.action.editFocusedSetting';\nexports.SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_FROM_SEARCH = 'settings.action.focusSettingsFromSearch';\nexports.SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_LIST = 'settings.action.focusSettingsList';\nexports.SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU = 'settings.action.showContextMenu';\nexports.SETTINGS_EDITOR_COMMAND_SWITCH_TO_JSON = 'settings.switchToJSON';\nexports.SETTINGS_EDITOR_COMMAND_FILTER_MODIFIED = 'settings.filterByModified';\nexports.SETTINGS_EDITOR_COMMAND_FILTER_ONLINE = 'settings.filterByOnline';\nexports.KEYBINDINGS_EDITOR_COMMAND_SEARCH = 'keybindings.editor.searchKeybindings';\nexports.KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'keybindings.editor.clearSearchResults';\nexports.KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS = 'keybindings.editor.recordSearchKeys';\nexports.KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE = 'keybindings.editor.toggleSortByPrecedence';\nexports.KEYBINDINGS_EDITOR_COMMAND_DEFINE = 'keybindings.editor.defineKeybinding';\nexports.KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN = 'keybindings.editor.defineWhenExpression';\nexports.KEYBINDINGS_EDITOR_COMMAND_REMOVE = 'keybindings.editor.removeKeybinding';\nexports.KEYBINDINGS_EDITOR_COMMAND_RESET = 'keybindings.editor.resetKeybinding';\nexports.KEYBINDINGS_EDITOR_COMMAND_COPY = 'keybindings.editor.copyKeybindingEntry';\nexports.KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND = 'keybindings.editor.copyCommandKeybindingEntry';\nexports.KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR = 'keybindings.editor.showConflicts';\nexports.KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS = 'keybindings.editor.focusKeybindings';\nexports.KEYBINDINGS_EDITOR_CLEAR_INPUT = 'keybindings.editor.showDefaultKeybindings';\nexports.KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS = 'keybindings.editor.showDefaultKeybindings';\nexports.KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS = 'keybindings.editor.showUserKeybindings';\nexports.DEFAULT_SETTINGS_EDITOR_SETTING = 'workbench.settings.openDefaultSettings';\nexports.MODIFIED_SETTING_TAG = 'modified';\nexports.SETTINGS_COMMAND_OPEN_SETTINGS = 'workbench.action.openSettings';\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/common/preferences.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/common/preferences.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AACjF,uEAAyE;AA0B5D,QAAA,yBAAyB,GAAG,+BAAe,CAA4B,0BAA0B,CAAC,CAAC;AAqCnG,QAAA,uBAAuB,GAAG,IAAI,0BAAa,CAAU,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAChF,QAAA,4BAA4B,GAAG,IAAI,0BAAa,CAAU,sBAAsB,EAAE,KAAK,CAAC,CAAC;AACzF,QAAA,6BAA6B,GAAG,IAAI,0BAAa,CAAU,kBAAkB,EAAE,KAAK,CAAC,CAAC;AACtF,QAAA,qBAAqB,GAAG,IAAI,0BAAa,CAAU,qBAAqB,EAAE,KAAK,CAAC,CAAC;AACjF,QAAA,0BAA0B,GAAG,IAAI,0BAAa,CAAU,eAAe,EAAE,KAAK,CAAC,CAAC;AAChF,QAAA,gCAAgC,GAAG,IAAI,0BAAa,CAAU,qBAAqB,EAAE,KAAK,CAAC,CAAC;AAC5F,QAAA,wBAAwB,GAAG,IAAI,0BAAa,CAAU,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAEhF,QAAA,8BAA8B,GAAG,wBAAwB,CAAC;AAC1D,QAAA,4CAA4C,GAAG,oCAAoC,CAAC;AACpF,QAAA,0CAA0C,GAAG,kCAAkC,CAAC;AAChF,QAAA,8CAA8C,GAAG,sCAAsC,CAAC;AACxF,QAAA,kCAAkC,GAAG,mCAAmC,CAAC;AACzE,QAAA,4CAA4C,GAAG,oCAAoC,CAAC;AACpF,QAAA,kDAAkD,GAAG,yCAAyC,CAAC;AAC/F,QAAA,2CAA2C,GAAG,mCAAmC,CAAC;AAClF,QAAA,yCAAyC,GAAG,iCAAiC,CAAC;AAE9E,QAAA,sCAAsC,GAAG,uBAAuB,CAAC;AACjE,QAAA,uCAAuC,GAAG,2BAA2B,CAAC;AACtE,QAAA,qCAAqC,GAAG,yBAAyB,CAAC;AAElE,QAAA,iCAAiC,GAAG,sCAAsC,CAAC;AAC3E,QAAA,+CAA+C,GAAG,uCAAuC,CAAC;AAC1F,QAAA,6CAA6C,GAAG,qCAAqC,CAAC;AACtF,QAAA,4CAA4C,GAAG,2CAA2C,CAAC;AAC3F,QAAA,iCAAiC,GAAG,qCAAqC,CAAC;AAC1E,QAAA,sCAAsC,GAAG,yCAAyC,CAAC;AACnF,QAAA,iCAAiC,GAAG,qCAAqC,CAAC;AAC1E,QAAA,gCAAgC,GAAG,oCAAoC,CAAC;AACxE,QAAA,+BAA+B,GAAG,wCAAwC,CAAC;AAC3E,QAAA,uCAAuC,GAAG,+CAA+C,CAAC;AAC1F,QAAA,uCAAuC,GAAG,kCAAkC,CAAC;AAC7E,QAAA,4CAA4C,GAAG,qCAAqC,CAAC;AACrF,QAAA,8BAA8B,GAAG,2CAA2C,CAAC;AAC7E,QAAA,2CAA2C,GAAG,2CAA2C,CAAC;AAC1F,QAAA,wCAAwC,GAAG,wCAAwC,CAAC;AAEpF,QAAA,+BAA+B,GAAG,wCAAwC,CAAC;AAE3E,QAAA,oBAAoB,GAAG,UAAU,CAAC;AAElC,QAAA,8BAA8B,GAAG,+BAA+B,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ISettingsEditorModel, ISearchResult } from 'vs/workbench/services/preferences/common/preferences';\nimport { IEditor } from 'vs/workbench/common/editor';\nimport { IKeybindingItemEntry } from 'vs/workbench/services/preferences/common/keybindingsEditorModel';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface IWorkbenchSettingsConfiguration {\n\tworkbench: {\n\t\tsettings: {\n\t\t\topenDefaultSettings: boolean;\n\t\t\tnaturalLanguageSearchEndpoint: string;\n\t\t\tnaturalLanguageSearchKey: string;\n\t\t\tnaturalLanguageSearchAutoIngestFeedback: boolean;\n\t\t\tuseNaturalLanguageSearchPost: boolean;\n\t\t\tenableNaturalLanguageSearch: boolean;\n\t\t\tenableNaturalLanguageSearchFeedback: boolean;\n\t\t}\n\t};\n}\n\nexport interface IEndpointDetails {\n\turlBase: string;\n\tkey?: string;\n}\n\nexport const IPreferencesSearchService = createDecorator<IPreferencesSearchService>('preferencesSearchService');\n\nexport interface IPreferencesSearchService {\n\t_serviceBrand: any;\n\n\tgetLocalSearchProvider(filter: string): ISearchProvider;\n\tgetRemoteSearchProvider(filter: string, newExtensionsOnly?: boolean): ISearchProvider | undefined;\n}\n\nexport interface ISearchProvider {\n\tsearchModel(preferencesModel: ISettingsEditorModel, token?: CancellationToken): Promise<ISearchResult | null>;\n}\n\nexport interface IKeybindingsEditor extends IEditor {\n\n\treadonly activeKeybindingEntry: IKeybindingItemEntry | null;\n\treadonly onDefineWhenExpression: Event<IKeybindingItemEntry>;\n\treadonly onLayout: Event<void>;\n\n\tsearch(filter: string): void;\n\tfocusSearch(): void;\n\tclearSearchResults(): void;\n\tfocusKeybindings(): void;\n\trecordSearchKeys(): void;\n\ttoggleSortByPrecedence(): void;\n\tlayoutColumns(columns: HTMLElement[]): void;\n\tselectKeybinding(keybindingEntry: IKeybindingItemEntry): void;\n\tdefineKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<void>;\n\tdefineWhenExpression(keybindingEntry: IKeybindingItemEntry): void;\n\tupdateKeybinding(keybindingEntry: IKeybindingItemEntry, key: string, when: string | undefined): Promise<any>;\n\tremoveKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<any>;\n\tresetKeybinding(keybindingEntry: IKeybindingItemEntry): Promise<any>;\n\tcopyKeybinding(keybindingEntry: IKeybindingItemEntry): void;\n\tcopyKeybindingCommand(keybindingEntry: IKeybindingItemEntry): void;\n\tshowSimilarKeybindings(keybindingEntry: IKeybindingItemEntry): void;\n}\n\nexport const CONTEXT_SETTINGS_EDITOR = new RawContextKey<boolean>('inSettingsEditor', false);\nexport const CONTEXT_SETTINGS_JSON_EDITOR = new RawContextKey<boolean>('inSettingsJSONEditor', false);\nexport const CONTEXT_SETTINGS_SEARCH_FOCUS = new RawContextKey<boolean>('inSettingsSearch', false);\nexport const CONTEXT_TOC_ROW_FOCUS = new RawContextKey<boolean>('settingsTocRowFocus', false);\nexport const CONTEXT_KEYBINDINGS_EDITOR = new RawContextKey<boolean>('inKeybindings', false);\nexport const CONTEXT_KEYBINDINGS_SEARCH_FOCUS = new RawContextKey<boolean>('inKeybindingsSearch', false);\nexport const CONTEXT_KEYBINDING_FOCUS = new RawContextKey<boolean>('keybindingFocus', false);\n\nexport const SETTINGS_EDITOR_COMMAND_SEARCH = 'settings.action.search';\nexport const SETTINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'settings.action.clearSearchResults';\nexport const SETTINGS_EDITOR_COMMAND_FOCUS_NEXT_SETTING = 'settings.action.focusNextSetting';\nexport const SETTINGS_EDITOR_COMMAND_FOCUS_PREVIOUS_SETTING = 'settings.action.focusPreviousSetting';\nexport const SETTINGS_EDITOR_COMMAND_FOCUS_FILE = 'settings.action.focusSettingsFile';\nexport const SETTINGS_EDITOR_COMMAND_EDIT_FOCUSED_SETTING = 'settings.action.editFocusedSetting';\nexport const SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_FROM_SEARCH = 'settings.action.focusSettingsFromSearch';\nexport const SETTINGS_EDITOR_COMMAND_FOCUS_SETTINGS_LIST = 'settings.action.focusSettingsList';\nexport const SETTINGS_EDITOR_COMMAND_SHOW_CONTEXT_MENU = 'settings.action.showContextMenu';\n\nexport const SETTINGS_EDITOR_COMMAND_SWITCH_TO_JSON = 'settings.switchToJSON';\nexport const SETTINGS_EDITOR_COMMAND_FILTER_MODIFIED = 'settings.filterByModified';\nexport const SETTINGS_EDITOR_COMMAND_FILTER_ONLINE = 'settings.filterByOnline';\n\nexport const KEYBINDINGS_EDITOR_COMMAND_SEARCH = 'keybindings.editor.searchKeybindings';\nexport const KEYBINDINGS_EDITOR_COMMAND_CLEAR_SEARCH_RESULTS = 'keybindings.editor.clearSearchResults';\nexport const KEYBINDINGS_EDITOR_COMMAND_RECORD_SEARCH_KEYS = 'keybindings.editor.recordSearchKeys';\nexport const KEYBINDINGS_EDITOR_COMMAND_SORTBY_PRECEDENCE = 'keybindings.editor.toggleSortByPrecedence';\nexport const KEYBINDINGS_EDITOR_COMMAND_DEFINE = 'keybindings.editor.defineKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_DEFINE_WHEN = 'keybindings.editor.defineWhenExpression';\nexport const KEYBINDINGS_EDITOR_COMMAND_REMOVE = 'keybindings.editor.removeKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_RESET = 'keybindings.editor.resetKeybinding';\nexport const KEYBINDINGS_EDITOR_COMMAND_COPY = 'keybindings.editor.copyKeybindingEntry';\nexport const KEYBINDINGS_EDITOR_COMMAND_COPY_COMMAND = 'keybindings.editor.copyCommandKeybindingEntry';\nexport const KEYBINDINGS_EDITOR_COMMAND_SHOW_SIMILAR = 'keybindings.editor.showConflicts';\nexport const KEYBINDINGS_EDITOR_COMMAND_FOCUS_KEYBINDINGS = 'keybindings.editor.focusKeybindings';\nexport const KEYBINDINGS_EDITOR_CLEAR_INPUT = 'keybindings.editor.showDefaultKeybindings';\nexport const KEYBINDINGS_EDITOR_SHOW_DEFAULT_KEYBINDINGS = 'keybindings.editor.showDefaultKeybindings';\nexport const KEYBINDINGS_EDITOR_SHOW_USER_KEYBINDINGS = 'keybindings.editor.showUserKeybindings';\n\nexport const DEFAULT_SETTINGS_EDITOR_SETTING = 'workbench.settings.openDefaultSettings';\n\nexport const MODIFIED_SETTING_TAG = 'modified';\n\nexport const SETTINGS_COMMAND_OPEN_SETTINGS = 'workbench.action.openSettings';\n"]}]}