{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/scmViewlet.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/scmViewlet.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/scmViewlet\");\nvar nls_1 = require(\"vs/nls\");\nvar event_1 = require(\"vs/base/common/event\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar scm_1 = require(\"vs/workbench/contrib/scm/common/scm\");\nvar labels_1 = require(\"vs/workbench/browser/labels\");\nvar countBadge_1 = require(\"vs/base/browser/ui/countBadge/countBadge\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar actions_2 = require(\"vs/base/common/actions\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar scmMenus_1 = require(\"./scmMenus\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar scmUtil_1 = require(\"./scmUtil\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar octiconLabel_1 = require(\"vs/base/browser/ui/octiconLabel/octiconLabel\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar async_1 = require(\"vs/base/common/async\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar browser = require(\"vs/base/browser/browser\");\nvar viewsViewlet_1 = require(\"vs/workbench/browser/parts/views/viewsViewlet\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar views_1 = require(\"vs/workbench/common/views\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar ProvidersListDelegate = /** @class */ (function () {\n    function ProvidersListDelegate() {\n    }\n    ProvidersListDelegate.prototype.getHeight = function (element) {\n        return 22;\n    };\n    ProvidersListDelegate.prototype.getTemplateId = function (element) {\n        return 'provider';\n    };\n    return ProvidersListDelegate;\n}());\nvar StatusBarAction = /** @class */ (function (_super) {\n    tslib_1.__extends(StatusBarAction, _super);\n    function StatusBarAction(command, commandService) {\n        var _this = _super.call(this, \"statusbaraction{\" + command.id + \"}\", command.title, '', true) || this;\n        _this.command = command;\n        _this.commandService = commandService;\n        _this.tooltip = command.tooltip || '';\n        return _this;\n    }\n    StatusBarAction.prototype.run = function () {\n        var _a;\n        return (_a = this.commandService).executeCommand.apply(_a, [this.command.id].concat((this.command.arguments || [])));\n    };\n    return StatusBarAction;\n}(actions_2.Action));\nvar StatusBarActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(StatusBarActionItem, _super);\n    function StatusBarActionItem(action) {\n        return _super.call(this, null, action, {}) || this;\n    }\n    StatusBarActionItem.prototype.updateLabel = function () {\n        if (this.options.label) {\n            this.label.innerHTML = octiconLabel_1.renderOcticons(this.getAction().label);\n        }\n    };\n    return StatusBarActionItem;\n}(actionbar_1.ActionItem));\nfunction connectPrimaryMenuToInlineActionBar(menu, actionBar) {\n    var cachedPrimary = [];\n    var updateActions = function () {\n        var primary = [];\n        var secondary = [];\n        var result = { primary: primary, secondary: secondary };\n        menuItemActionItem_1.fillInActionBarActions(menu, { shouldForwardArgs: true }, result, function (g) { return /^inline/.test(g); });\n        if (arrays_1.equals(cachedPrimary, primary, function (a, b) { return a.id === b.id; })) {\n            return;\n        }\n        cachedPrimary = primary;\n        actionBar.clear();\n        actionBar.push(primary, { icon: true, label: false });\n    };\n    updateActions();\n    return menu.onDidChange(updateActions);\n}\nvar ProviderRenderer = /** @class */ (function () {\n    function ProviderRenderer(commandService, themeService) {\n        this.commandService = commandService;\n        this.themeService = themeService;\n        this.templateId = 'provider';\n        this._onDidRenderElement = new event_1.Emitter();\n        this.onDidRenderElement = this._onDidRenderElement.event;\n    }\n    ProviderRenderer.prototype.renderTemplate = function (container) {\n        var provider = dom_1.append(container, dom_1.$('.scm-provider'));\n        var name = dom_1.append(provider, dom_1.$('.name'));\n        var title = dom_1.append(name, dom_1.$('span.title'));\n        var type = dom_1.append(name, dom_1.$('span.type'));\n        var countContainer = dom_1.append(provider, dom_1.$('.count'));\n        var count = new countBadge_1.CountBadge(countContainer);\n        var badgeStyler = styler_1.attachBadgeStyler(count, this.themeService);\n        var actionBar = new actionbar_1.ActionBar(provider, { actionItemProvider: function (a) { return new StatusBarActionItem(a); } });\n        var disposable = lifecycle_1.Disposable.None;\n        var templateDisposable = lifecycle_1.combinedDisposable([actionBar, badgeStyler]);\n        return { title: title, type: type, countContainer: countContainer, count: count, actionBar: actionBar, disposable: disposable, templateDisposable: templateDisposable };\n    };\n    ProviderRenderer.prototype.renderElement = function (repository, index, templateData) {\n        var _this = this;\n        templateData.disposable.dispose();\n        var disposables = [];\n        if (repository.provider.rootUri) {\n            templateData.title.textContent = resources_1.basename(repository.provider.rootUri);\n            templateData.type.textContent = repository.provider.label;\n        }\n        else {\n            templateData.title.textContent = repository.provider.label;\n            templateData.type.textContent = '';\n        }\n        var actions = [];\n        var disposeActions = function () { return lifecycle_1.dispose(actions); };\n        disposables.push({ dispose: disposeActions });\n        var update = function () {\n            disposeActions();\n            var commands = repository.provider.statusBarCommands || [];\n            actions.splice.apply(actions, [0, actions.length].concat(commands.map(function (c) { return new StatusBarAction(c, _this.commandService); })));\n            templateData.actionBar.clear();\n            templateData.actionBar.push(actions);\n            var count = repository.provider.count || 0;\n            dom_1.toggleClass(templateData.countContainer, 'hidden', count === 0);\n            templateData.count.setCount(count);\n            _this._onDidRenderElement.fire(repository);\n        };\n        repository.provider.onDidChange(update, null, disposables);\n        update();\n        templateData.disposable = lifecycle_1.combinedDisposable(disposables);\n    };\n    ProviderRenderer.prototype.disposeTemplate = function (templateData) {\n        templateData.disposable.dispose();\n        templateData.templateDisposable.dispose();\n    };\n    ProviderRenderer = tslib_1.__decorate([\n        tslib_1.__param(0, commands_1.ICommandService),\n        tslib_1.__param(1, themeService_1.IThemeService)\n    ], ProviderRenderer);\n    return ProviderRenderer;\n}());\nvar MainPanel = /** @class */ (function (_super) {\n    tslib_1.__extends(MainPanel, _super);\n    function MainPanel(viewModel, options, keybindingService, contextMenuService, scmService, instantiationService, contextKeyService, menuService, configurationService) {\n        var _this = _super.call(this, options, keybindingService, contextMenuService, configurationService) || this;\n        _this.viewModel = viewModel;\n        _this.keybindingService = keybindingService;\n        _this.contextMenuService = contextMenuService;\n        _this.scmService = scmService;\n        _this.instantiationService = instantiationService;\n        _this.contextKeyService = contextKeyService;\n        _this.menuService = menuService;\n        return _this;\n    }\n    MainPanel.prototype.renderBody = function (container) {\n        var _this = this;\n        var delegate = new ProvidersListDelegate();\n        var renderer = this.instantiationService.createInstance(ProviderRenderer);\n        var identityProvider = { getId: function (r) { return r.provider.id; } };\n        this.list = this.instantiationService.createInstance(listService_1.WorkbenchList, container, delegate, [renderer], {\n            identityProvider: identityProvider,\n            horizontalScrolling: false\n        });\n        renderer.onDidRenderElement(function (e) { return _this.list.updateWidth(_this.viewModel.repositories.indexOf(e)); }, null, this.disposables);\n        this.list.onSelectionChange(this.onListSelectionChange, this, this.disposables);\n        this.list.onFocusChange(this.onListFocusChange, this, this.disposables);\n        this.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n        this.viewModel.onDidChangeVisibleRepositories(this.updateListSelection, this, this.disposables);\n        this.viewModel.onDidSplice(function (_a) {\n            var index = _a.index, deleteCount = _a.deleteCount, elements = _a.elements;\n            return _this.splice(index, deleteCount, elements);\n        }, null, this.disposables);\n        this.splice(0, 0, this.viewModel.repositories);\n        this.disposables.push(this.list);\n        this.configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('scm.providers.visible')) {\n                _this.updateBodySize();\n            }\n        }, this.disposables);\n        this.updateListSelection();\n    };\n    MainPanel.prototype.splice = function (index, deleteCount, repositories) {\n        if (repositories === void 0) { repositories = []; }\n        this.list.splice(index, deleteCount, repositories);\n        var empty = this.list.length === 0;\n        dom_1.toggleClass(this.element, 'empty', empty);\n        this.updateBodySize();\n    };\n    MainPanel.prototype.layoutBody = function (height, width) {\n        this.list.layout(height, width);\n    };\n    MainPanel.prototype.updateBodySize = function () {\n        var visibleCount = this.configurationService.getValue('scm.providers.visible');\n        var empty = this.list.length === 0;\n        var size = Math.min(this.viewModel.repositories.length, visibleCount) * 22;\n        this.minimumBodySize = visibleCount === 0 ? 22 : size;\n        this.maximumBodySize = visibleCount === 0 ? Number.POSITIVE_INFINITY : empty ? Number.POSITIVE_INFINITY : size;\n    };\n    MainPanel.prototype.onListContextMenu = function (e) {\n        if (!e.element) {\n            return;\n        }\n        var repository = e.element;\n        var contextKeyService = this.contextKeyService.createScoped();\n        var scmProviderKey = contextKeyService.createKey('scmProvider', undefined);\n        scmProviderKey.set(repository.provider.contextValue);\n        var menu = this.menuService.createMenu(actions_1.MenuId.SCMSourceControl, contextKeyService);\n        var primary = [];\n        var secondary = [];\n        var result = { primary: primary, secondary: secondary };\n        menuItemActionItem_1.fillInContextMenuActions(menu, { shouldForwardArgs: true }, result, this.contextMenuService, function (g) { return g === 'inline'; });\n        menu.dispose();\n        contextKeyService.dispose();\n        if (secondary.length === 0) {\n            return;\n        }\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return e.anchor; },\n            getActions: function () { return secondary; },\n            getActionsContext: function () { return repository.provider; }\n        });\n    };\n    MainPanel.prototype.onListSelectionChange = function (e) {\n        if (e.elements.length > 0 && e.browserEvent) {\n            var scrollTop = this.list.scrollTop;\n            this.viewModel.setVisibleRepositories(e.elements);\n            this.list.scrollTop = scrollTop;\n        }\n    };\n    MainPanel.prototype.onListFocusChange = function (e) {\n        if (e.elements.length > 0) {\n            e.elements[0].focus();\n        }\n    };\n    MainPanel.prototype.updateListSelection = function () {\n        var set = new Set();\n        for (var _i = 0, _a = this.viewModel.visibleRepositories; _i < _a.length; _i++) {\n            var repository = _a[_i];\n            set.add(repository);\n        }\n        var selection = [];\n        for (var i = 0; i < this.list.length; i++) {\n            if (set.has(this.list.element(i))) {\n                selection.push(i);\n            }\n        }\n        this.list.setSelection(selection);\n        if (selection.length > 0) {\n            this.list.setFocus([selection[0]]);\n        }\n    };\n    MainPanel.ID = 'scm.mainPanel';\n    MainPanel.TITLE = nls_1.localize('scm providers', \"Source Control Providers\");\n    MainPanel = tslib_1.__decorate([\n        tslib_1.__param(2, keybinding_1.IKeybindingService),\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, scm_1.ISCMService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService),\n        tslib_1.__param(6, contextkey_1.IContextKeyService),\n        tslib_1.__param(7, actions_1.IMenuService),\n        tslib_1.__param(8, configuration_1.IConfigurationService)\n    ], MainPanel);\n    return MainPanel;\n}(panelViewlet_1.ViewletPanel));\nexports.MainPanel = MainPanel;\nvar ResourceGroupRenderer = /** @class */ (function () {\n    function ResourceGroupRenderer(actionItemProvider, themeService, menus) {\n        this.actionItemProvider = actionItemProvider;\n        this.themeService = themeService;\n        this.menus = menus;\n    }\n    Object.defineProperty(ResourceGroupRenderer.prototype, \"templateId\", {\n        get: function () { return ResourceGroupRenderer.TEMPLATE_ID; },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceGroupRenderer.prototype.renderTemplate = function (container) {\n        var element = dom_1.append(container, dom_1.$('.resource-group'));\n        var name = dom_1.append(element, dom_1.$('.name'));\n        var actionsContainer = dom_1.append(element, dom_1.$('.actions'));\n        var actionBar = new actionbar_1.ActionBar(actionsContainer, { actionItemProvider: this.actionItemProvider });\n        var countContainer = dom_1.append(element, dom_1.$('.count'));\n        var count = new countBadge_1.CountBadge(countContainer);\n        var styler = styler_1.attachBadgeStyler(count, this.themeService);\n        var elementDisposable = lifecycle_1.Disposable.None;\n        return {\n            name: name, count: count, actionBar: actionBar, elementDisposable: elementDisposable, dispose: function () {\n                actionBar.dispose();\n                styler.dispose();\n            }\n        };\n    };\n    ResourceGroupRenderer.prototype.renderElement = function (group, index, template) {\n        template.elementDisposable.dispose();\n        template.name.textContent = group.label;\n        template.actionBar.clear();\n        template.actionBar.context = group;\n        var disposables = [];\n        disposables.push(connectPrimaryMenuToInlineActionBar(this.menus.getResourceGroupMenu(group), template.actionBar));\n        var updateCount = function () { return template.count.setCount(group.elements.length); };\n        group.onDidSplice(updateCount, null, disposables);\n        updateCount();\n        template.elementDisposable = lifecycle_1.combinedDisposable(disposables);\n    };\n    ResourceGroupRenderer.prototype.disposeElement = function (group, index, template) {\n        template.elementDisposable.dispose();\n    };\n    ResourceGroupRenderer.prototype.disposeTemplate = function (template) {\n        template.dispose();\n    };\n    ResourceGroupRenderer.TEMPLATE_ID = 'resource group';\n    return ResourceGroupRenderer;\n}());\nvar MultipleSelectionActionRunner = /** @class */ (function (_super) {\n    tslib_1.__extends(MultipleSelectionActionRunner, _super);\n    function MultipleSelectionActionRunner(getSelectedResources) {\n        var _this = _super.call(this) || this;\n        _this.getSelectedResources = getSelectedResources;\n        return _this;\n    }\n    MultipleSelectionActionRunner.prototype.runAction = function (action, context) {\n        if (action instanceof actions_1.MenuItemAction) {\n            var selection = this.getSelectedResources();\n            var filteredSelection = selection.filter(function (s) { return s !== context; });\n            if (selection.length === filteredSelection.length || selection.length === 1) {\n                return action.run(context);\n            }\n            return action.run.apply(action, [context].concat(filteredSelection));\n        }\n        return _super.prototype.runAction.call(this, action, context);\n    };\n    return MultipleSelectionActionRunner;\n}(actions_2.ActionRunner));\nvar ResourceRenderer = /** @class */ (function () {\n    function ResourceRenderer(labels, actionItemProvider, getSelectedResources, themeService, menus) {\n        this.labels = labels;\n        this.actionItemProvider = actionItemProvider;\n        this.getSelectedResources = getSelectedResources;\n        this.themeService = themeService;\n        this.menus = menus;\n    }\n    Object.defineProperty(ResourceRenderer.prototype, \"templateId\", {\n        get: function () { return ResourceRenderer.TEMPLATE_ID; },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceRenderer.prototype.renderTemplate = function (container) {\n        var element = dom_1.append(container, dom_1.$('.resource'));\n        var name = dom_1.append(element, dom_1.$('.name'));\n        var fileLabel = this.labels.create(name);\n        var actionsContainer = dom_1.append(fileLabel.element, dom_1.$('.actions'));\n        var actionBar = new actionbar_1.ActionBar(actionsContainer, {\n            actionItemProvider: this.actionItemProvider,\n            actionRunner: new MultipleSelectionActionRunner(this.getSelectedResources)\n        });\n        var decorationIcon = dom_1.append(element, dom_1.$('.decoration-icon'));\n        return {\n            element: element, name: name, fileLabel: fileLabel, decorationIcon: decorationIcon, actionBar: actionBar, elementDisposable: lifecycle_1.Disposable.None, dispose: function () {\n                actionBar.dispose();\n                fileLabel.dispose();\n            }\n        };\n    };\n    ResourceRenderer.prototype.renderElement = function (resource, index, template) {\n        template.elementDisposable.dispose();\n        var theme = this.themeService.getTheme();\n        var icon = theme.type === themeService_1.LIGHT ? resource.decorations.icon : resource.decorations.iconDark;\n        template.fileLabel.setFile(resource.sourceUri, { fileDecorations: { colors: false, badges: !icon, data: resource.decorations } });\n        template.actionBar.context = resource;\n        var disposables = [];\n        disposables.push(connectPrimaryMenuToInlineActionBar(this.menus.getResourceMenu(resource.resourceGroup), template.actionBar));\n        dom_1.toggleClass(template.name, 'strike-through', resource.decorations.strikeThrough);\n        dom_1.toggleClass(template.element, 'faded', resource.decorations.faded);\n        if (icon) {\n            template.decorationIcon.style.display = '';\n            template.decorationIcon.style.backgroundImage = \"url('\" + icon + \"')\";\n            template.decorationIcon.title = resource.decorations.tooltip || '';\n        }\n        else {\n            template.decorationIcon.style.display = 'none';\n            template.decorationIcon.style.backgroundImage = '';\n        }\n        template.element.setAttribute('data-tooltip', resource.decorations.tooltip || '');\n        template.elementDisposable = lifecycle_1.combinedDisposable(disposables);\n    };\n    ResourceRenderer.prototype.disposeElement = function (resource, index, template) {\n        template.elementDisposable.dispose();\n    };\n    ResourceRenderer.prototype.disposeTemplate = function (template) {\n        template.elementDisposable.dispose();\n        template.dispose();\n    };\n    ResourceRenderer.TEMPLATE_ID = 'resource';\n    return ResourceRenderer;\n}());\nvar ProviderListDelegate = /** @class */ (function () {\n    function ProviderListDelegate() {\n    }\n    ProviderListDelegate.prototype.getHeight = function () { return 22; };\n    ProviderListDelegate.prototype.getTemplateId = function (element) {\n        return scmUtil_1.isSCMResource(element) ? ResourceRenderer.TEMPLATE_ID : ResourceGroupRenderer.TEMPLATE_ID;\n    };\n    return ProviderListDelegate;\n}());\nvar scmResourceIdentityProvider = new /** @class */ (function () {\n    function class_1() {\n    }\n    class_1.prototype.getId = function (r) {\n        if (scmUtil_1.isSCMResource(r)) {\n            var group = r.resourceGroup;\n            var provider = group.provider;\n            return provider.contextValue + \"/\" + group.id + \"/\" + r.sourceUri.toString();\n        }\n        else {\n            var provider = r.provider;\n            return provider.contextValue + \"/\" + r.id;\n        }\n    };\n    return class_1;\n}());\nvar scmKeyboardNavigationLabelProvider = new /** @class */ (function () {\n    function class_2() {\n    }\n    class_2.prototype.getKeyboardNavigationLabel = function (e) {\n        if (scmUtil_1.isSCMResource(e)) {\n            return resources_1.basename(e.sourceUri);\n        }\n        else {\n            return e.label;\n        }\n    };\n    return class_2;\n}());\nfunction isGroupVisible(group) {\n    return group.elements.length > 0 || !group.hideWhenEmpty;\n}\nvar ResourceGroupSplicer = /** @class */ (function () {\n    function ResourceGroupSplicer(groupSequence, spliceable) {\n        this.spliceable = spliceable;\n        this.items = [];\n        this.disposables = [];\n        groupSequence.onDidSplice(this.onDidSpliceGroups, this, this.disposables);\n        this.onDidSpliceGroups({ start: 0, deleteCount: 0, toInsert: groupSequence.elements });\n    }\n    ResourceGroupSplicer.prototype.onDidSpliceGroups = function (_a) {\n        var _this = this;\n        var start = _a.start, deleteCount = _a.deleteCount, toInsert = _a.toInsert;\n        var _b;\n        var absoluteStart = 0;\n        for (var i = 0; i < start; i++) {\n            var item = this.items[i];\n            absoluteStart += (item.visible ? 1 : 0) + item.group.elements.length;\n        }\n        var absoluteDeleteCount = 0;\n        for (var i = 0; i < deleteCount; i++) {\n            var item = this.items[start + i];\n            absoluteDeleteCount += (item.visible ? 1 : 0) + item.group.elements.length;\n        }\n        var itemsToInsert = [];\n        var absoluteToInsert = [];\n        var _loop_1 = function (group) {\n            var visible = isGroupVisible(group);\n            if (visible) {\n                absoluteToInsert.push(group);\n            }\n            for (var _i = 0, _a = group.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                absoluteToInsert.push(element);\n            }\n            var disposable = lifecycle_1.combinedDisposable([\n                group.onDidChange(function () { return _this.onDidChangeGroup(group); }),\n                group.onDidSplice(function (splice) { return _this.onDidSpliceGroup(group, splice); })\n            ]);\n            itemsToInsert.push({ group: group, visible: visible, disposable: disposable });\n        };\n        for (var _i = 0, toInsert_1 = toInsert; _i < toInsert_1.length; _i++) {\n            var group = toInsert_1[_i];\n            _loop_1(group);\n        }\n        var itemsToDispose = (_b = this.items).splice.apply(_b, [start, deleteCount].concat(itemsToInsert));\n        for (var _c = 0, itemsToDispose_1 = itemsToDispose; _c < itemsToDispose_1.length; _c++) {\n            var item = itemsToDispose_1[_c];\n            item.disposable.dispose();\n        }\n        this.spliceable.splice(absoluteStart, absoluteDeleteCount, absoluteToInsert);\n    };\n    ResourceGroupSplicer.prototype.onDidChangeGroup = function (group) {\n        var itemIndex = arrays_1.firstIndex(this.items, function (item) { return item.group === group; });\n        if (itemIndex < 0) {\n            return;\n        }\n        var item = this.items[itemIndex];\n        var visible = isGroupVisible(group);\n        if (item.visible === visible) {\n            return;\n        }\n        var absoluteStart = 0;\n        for (var i = 0; i < itemIndex; i++) {\n            var item_1 = this.items[i];\n            absoluteStart += (item_1.visible ? 1 : 0) + item_1.group.elements.length;\n        }\n        if (visible) {\n            this.spliceable.splice(absoluteStart, 0, [group].concat(group.elements));\n        }\n        else {\n            this.spliceable.splice(absoluteStart, 1 + group.elements.length, []);\n        }\n        item.visible = visible;\n    };\n    ResourceGroupSplicer.prototype.onDidSpliceGroup = function (group, _a) {\n        var start = _a.start, deleteCount = _a.deleteCount, toInsert = _a.toInsert;\n        var itemIndex = arrays_1.firstIndex(this.items, function (item) { return item.group === group; });\n        if (itemIndex < 0) {\n            return;\n        }\n        var item = this.items[itemIndex];\n        var visible = isGroupVisible(group);\n        if (!item.visible && !visible) {\n            return;\n        }\n        var absoluteStart = start;\n        for (var i = 0; i < itemIndex; i++) {\n            var item_2 = this.items[i];\n            absoluteStart += (item_2.visible ? 1 : 0) + item_2.group.elements.length;\n        }\n        if (item.visible && !visible) {\n            this.spliceable.splice(absoluteStart, 1 + deleteCount, toInsert);\n        }\n        else if (!item.visible && visible) {\n            this.spliceable.splice(absoluteStart, deleteCount, [group].concat(toInsert));\n        }\n        else {\n            this.spliceable.splice(absoluteStart + 1, deleteCount, toInsert);\n        }\n        item.visible = visible;\n    };\n    ResourceGroupSplicer.prototype.dispose = function () {\n        this.onDidSpliceGroups({ start: 0, deleteCount: this.items.length, toInsert: [] });\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    return ResourceGroupSplicer;\n}());\nfunction convertValidationType(type) {\n    switch (type) {\n        case scm_1.InputValidationType.Information: return inputBox_1.MessageType.INFO;\n        case scm_1.InputValidationType.Warning: return inputBox_1.MessageType.WARNING;\n        case scm_1.InputValidationType.Error: return inputBox_1.MessageType.ERROR;\n    }\n}\nvar RepositoryPanel = /** @class */ (function (_super) {\n    tslib_1.__extends(RepositoryPanel, _super);\n    function RepositoryPanel(repository, viewModel, options, keybindingService, themeService, contextMenuService, contextViewService, commandService, notificationService, editorService, instantiationService, configurationService, contextKeyService, menuService) {\n        var _this = _super.call(this, options, keybindingService, contextMenuService, configurationService) || this;\n        _this.repository = repository;\n        _this.viewModel = viewModel;\n        _this.keybindingService = keybindingService;\n        _this.themeService = themeService;\n        _this.contextMenuService = contextMenuService;\n        _this.contextViewService = contextViewService;\n        _this.commandService = commandService;\n        _this.notificationService = notificationService;\n        _this.editorService = editorService;\n        _this.instantiationService = instantiationService;\n        _this.configurationService = configurationService;\n        _this.menuService = menuService;\n        _this.cachedHeight = undefined;\n        _this.cachedWidth = undefined;\n        _this.visibilityDisposables = [];\n        _this.menus = instantiationService.createInstance(scmMenus_1.SCMMenus, _this.repository.provider);\n        _this.disposables.push(_this.menus);\n        _this.menus.onDidChangeTitle(_this._onDidChangeTitleArea.fire, _this._onDidChangeTitleArea, _this.disposables);\n        _this.contextKeyService = contextKeyService.createScoped(_this.element);\n        _this.contextKeyService.createKey('scmRepository', _this.repository);\n        return _this;\n    }\n    RepositoryPanel.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.menus.onDidChangeTitle(this.updateActions, this, this.disposables);\n    };\n    RepositoryPanel.prototype.renderHeaderTitle = function (container) {\n        var title;\n        var type;\n        if (this.repository.provider.rootUri) {\n            title = resources_1.basename(this.repository.provider.rootUri);\n            type = this.repository.provider.label;\n        }\n        else {\n            title = this.repository.provider.label;\n            type = '';\n        }\n        _super.prototype.renderHeaderTitle.call(this, container, title);\n        dom_1.addClass(container, 'scm-provider');\n        dom_1.append(container, dom_1.$('span.type', undefined, type));\n    };\n    RepositoryPanel.prototype.renderBody = function (container) {\n        var _this = this;\n        var focusTracker = dom_1.trackFocus(container);\n        this.disposables.push(focusTracker.onDidFocus(function () { return _this.repository.focus(); }));\n        this.disposables.push(focusTracker);\n        // Input\n        this.inputBoxContainer = dom_1.append(container, dom_1.$('.scm-editor'));\n        var updatePlaceholder = function () {\n            var binding = _this.keybindingService.lookupKeybinding('scm.acceptInput');\n            var label = binding ? binding.getLabel() : (browser.isMacintosh ? 'Cmd+Enter' : 'Ctrl+Enter');\n            var placeholder = strings_1.format(_this.repository.input.placeholder, label);\n            _this.inputBox.setPlaceHolder(placeholder);\n        };\n        var validationDelayer = new async_1.ThrottledDelayer(200);\n        var validate = function () {\n            return _this.repository.input.validateInput(_this.inputBox.value, _this.inputBox.inputElement.selectionStart || 0).then(function (result) {\n                if (!result) {\n                    _this.inputBox.inputElement.removeAttribute('aria-invalid');\n                    _this.inputBox.hideMessage();\n                }\n                else {\n                    _this.inputBox.inputElement.setAttribute('aria-invalid', 'true');\n                    _this.inputBox.showMessage({ content: result.message, type: convertValidationType(result.type) });\n                }\n            });\n        };\n        var triggerValidation = function () { return validationDelayer.trigger(validate); };\n        this.inputBox = new inputBox_1.InputBox(this.inputBoxContainer, this.contextViewService, { flexibleHeight: true });\n        this.inputBox.setEnabled(this.isBodyVisible());\n        this.disposables.push(styler_1.attachInputBoxStyler(this.inputBox, this.themeService));\n        this.disposables.push(this.inputBox);\n        this.inputBox.onDidChange(triggerValidation, null, this.disposables);\n        var onKeyUp = event_2.domEvent(this.inputBox.inputElement, 'keyup');\n        var onMouseUp = event_2.domEvent(this.inputBox.inputElement, 'mouseup');\n        event_1.Event.any(onKeyUp, onMouseUp)(triggerValidation, null, this.disposables);\n        this.inputBox.value = this.repository.input.value;\n        this.inputBox.onDidChange(function (value) { return _this.repository.input.value = value; }, null, this.disposables);\n        this.repository.input.onDidChange(function (value) { return _this.inputBox.value = value; }, null, this.disposables);\n        updatePlaceholder();\n        this.repository.input.onDidChangePlaceholder(updatePlaceholder, null, this.disposables);\n        this.keybindingService.onDidUpdateKeybindings(updatePlaceholder, null, this.disposables);\n        this.disposables.push(this.inputBox.onDidHeightChange(function () { return _this.layoutBody(); }));\n        if (this.repository.provider.onDidChangeCommitTemplate) {\n            this.repository.provider.onDidChangeCommitTemplate(this.updateInputBox, this, this.disposables);\n        }\n        this.updateInputBox();\n        // Input box visibility\n        this.repository.input.onDidChangeVisibility(this.updateInputBoxVisibility, this, this.disposables);\n        this.updateInputBoxVisibility();\n        // List\n        this.listContainer = dom_1.append(container, dom_1.$('.scm-status.show-file-icons'));\n        var updateActionsVisibility = function () { return dom_1.toggleClass(_this.listContainer, 'show-actions', _this.configurationService.getValue('scm.alwaysShowActions')); };\n        event_1.Event.filter(this.configurationService.onDidChangeConfiguration, function (e) { return e.affectsConfiguration('scm.alwaysShowActions'); })(updateActionsVisibility);\n        updateActionsVisibility();\n        var delegate = new ProviderListDelegate();\n        var actionItemProvider = function (action) { return _this.getActionItem(action); };\n        this.listLabels = this.instantiationService.createInstance(labels_1.ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility });\n        this.disposables.push(this.listLabels);\n        var renderers = [\n            new ResourceGroupRenderer(actionItemProvider, this.themeService, this.menus),\n            new ResourceRenderer(this.listLabels, actionItemProvider, function () { return _this.getSelectedResources(); }, this.themeService, this.menus)\n        ];\n        this.list = this.instantiationService.createInstance(listService_1.WorkbenchList, this.listContainer, delegate, renderers, {\n            identityProvider: scmResourceIdentityProvider,\n            keyboardNavigationLabelProvider: scmKeyboardNavigationLabelProvider,\n            horizontalScrolling: false\n        });\n        event_1.Event.chain(this.list.onDidOpen)\n            .map(function (e) { return e.elements[0]; })\n            .filter(function (e) { return !!e && scmUtil_1.isSCMResource(e); })\n            .on(this.open, this, this.disposables);\n        event_1.Event.chain(this.list.onPin)\n            .map(function (e) { return e.elements[0]; })\n            .filter(function (e) { return !!e && scmUtil_1.isSCMResource(e); })\n            .on(this.pin, this, this.disposables);\n        this.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n        this.disposables.push(this.list);\n        this.viewModel.onDidChangeVisibility(this.onDidChangeVisibility, this, this.disposables);\n        this.onDidChangeVisibility(this.viewModel.isVisible());\n        this.onDidChangeBodyVisibility(function (visible) { return _this.inputBox.setEnabled(visible); });\n    };\n    RepositoryPanel.prototype.onDidChangeVisibility = function (visible) {\n        if (visible) {\n            var listSplicer = new ResourceGroupSplicer(this.repository.provider.groups, this.list);\n            this.visibilityDisposables.push(listSplicer);\n        }\n        else {\n            this.visibilityDisposables = lifecycle_1.dispose(this.visibilityDisposables);\n        }\n    };\n    RepositoryPanel.prototype.layoutBody = function (height, width) {\n        if (height === void 0) { height = this.cachedHeight; }\n        if (width === void 0) { width = this.cachedWidth; }\n        if (height === undefined) {\n            return;\n        }\n        this.cachedHeight = height;\n        if (this.repository.input.visible) {\n            dom_1.removeClass(this.inputBoxContainer, 'hidden');\n            this.inputBox.layout();\n            var editorHeight = this.inputBox.height;\n            var listHeight = height - (editorHeight + 12 /* margin */);\n            this.listContainer.style.height = listHeight + \"px\";\n            this.list.layout(listHeight, width);\n            dom_1.toggleClass(this.inputBoxContainer, 'scroll', editorHeight >= 134);\n        }\n        else {\n            dom_1.addClass(this.inputBoxContainer, 'hidden');\n            dom_1.removeClass(this.inputBoxContainer, 'scroll');\n            this.listContainer.style.height = height + \"px\";\n            this.list.layout(height, width);\n        }\n    };\n    RepositoryPanel.prototype.focus = function () {\n        _super.prototype.focus.call(this);\n        if (this.isExpanded()) {\n            if (this.repository.input.visible) {\n                this.inputBox.focus();\n            }\n            else {\n                this.list.domFocus();\n            }\n            this.repository.focus();\n        }\n    };\n    RepositoryPanel.prototype.getActions = function () {\n        return this.menus.getTitleActions();\n    };\n    RepositoryPanel.prototype.getSecondaryActions = function () {\n        return this.menus.getTitleSecondaryActions();\n    };\n    RepositoryPanel.prototype.getActionItem = function (action) {\n        if (!(action instanceof actions_1.MenuItemAction)) {\n            return undefined;\n        }\n        return new menuItemActionItem_1.ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n    };\n    RepositoryPanel.prototype.getActionsContext = function () {\n        return this.repository.provider;\n    };\n    RepositoryPanel.prototype.open = function (e) {\n        e.open();\n    };\n    RepositoryPanel.prototype.pin = function () {\n        var activeControl = this.editorService.activeControl;\n        if (activeControl) {\n            activeControl.group.pinEditor(activeControl.input);\n        }\n    };\n    RepositoryPanel.prototype.onListContextMenu = function (e) {\n        var _this = this;\n        if (!e.element) {\n            return;\n        }\n        var element = e.element;\n        var actions;\n        if (scmUtil_1.isSCMResource(element)) {\n            actions = this.menus.getResourceContextActions(element);\n        }\n        else {\n            actions = this.menus.getResourceGroupContextActions(element);\n        }\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return e.anchor; },\n            getActions: function () { return actions; },\n            getActionsContext: function () { return element; },\n            actionRunner: new MultipleSelectionActionRunner(function () { return _this.getSelectedResources(); })\n        });\n    };\n    RepositoryPanel.prototype.getSelectedResources = function () {\n        return this.list.getSelectedElements()\n            .filter(function (r) { return scmUtil_1.isSCMResource(r); });\n    };\n    RepositoryPanel.prototype.updateInputBox = function () {\n        if (typeof this.repository.provider.commitTemplate === 'undefined' || !this.repository.input.visible || this.inputBox.value) {\n            return;\n        }\n        this.inputBox.value = this.repository.provider.commitTemplate;\n    };\n    RepositoryPanel.prototype.updateInputBoxVisibility = function () {\n        if (this.cachedHeight) {\n            this.layoutBody(this.cachedHeight);\n        }\n    };\n    RepositoryPanel.prototype.dispose = function () {\n        this.visibilityDisposables = lifecycle_1.dispose(this.visibilityDisposables);\n        _super.prototype.dispose.call(this);\n    };\n    RepositoryPanel = tslib_1.__decorate([\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, themeService_1.IThemeService),\n        tslib_1.__param(5, contextView_1.IContextMenuService),\n        tslib_1.__param(6, contextView_1.IContextViewService),\n        tslib_1.__param(7, commands_1.ICommandService),\n        tslib_1.__param(8, notification_1.INotificationService),\n        tslib_1.__param(9, editorService_1.IEditorService),\n        tslib_1.__param(10, instantiation_1.IInstantiationService),\n        tslib_1.__param(11, configuration_1.IConfigurationService),\n        tslib_1.__param(12, contextkey_1.IContextKeyService),\n        tslib_1.__param(13, actions_1.IMenuService)\n    ], RepositoryPanel);\n    return RepositoryPanel;\n}(panelViewlet_1.ViewletPanel));\nexports.RepositoryPanel = RepositoryPanel;\nvar RepositoryViewDescriptor = /** @class */ (function () {\n    function RepositoryViewDescriptor(repository, viewModel, hideByDefault) {\n        this.repository = repository;\n        this.hideByDefault = hideByDefault;\n        this.canToggleVisibility = true;\n        this.order = -500;\n        this.workspace = true;\n        var repoId = repository.provider.rootUri ? repository.provider.rootUri.toString() : \"#\" + RepositoryViewDescriptor.counter++;\n        this.id = \"scm:repository:\" + repository.provider.label + \":\" + repoId;\n        this.name = repository.provider.rootUri ? resources_1.basename(repository.provider.rootUri) : repository.provider.label;\n        this.ctorDescriptor = { ctor: RepositoryPanel, arguments: [repository, viewModel] };\n    }\n    RepositoryViewDescriptor.counter = 0;\n    return RepositoryViewDescriptor;\n}());\nvar MainPanelDescriptor = /** @class */ (function () {\n    function MainPanelDescriptor(viewModel) {\n        this.id = MainPanel.ID;\n        this.name = MainPanel.TITLE;\n        this.canToggleVisibility = true;\n        this.hideByDefault = true;\n        this.order = -1000;\n        this.workspace = true;\n        this.ctorDescriptor = { ctor: MainPanel, arguments: [viewModel] };\n    }\n    return MainPanelDescriptor;\n}());\nvar SCMViewlet = /** @class */ (function (_super) {\n    tslib_1.__extends(SCMViewlet, _super);\n    function SCMViewlet(layoutService, telemetryService, scmService, instantiationService, contextViewService, keybindingService, notificationService, contextMenuService, themeService, commandService, storageService, configurationService, extensionService, contextService) {\n        var _this = _super.call(this, scm_1.VIEWLET_ID, SCMViewlet.STATE_KEY, true, configurationService, layoutService, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService) || this;\n        _this.scmService = scmService;\n        _this.instantiationService = instantiationService;\n        _this.contextViewService = contextViewService;\n        _this.keybindingService = keybindingService;\n        _this.notificationService = notificationService;\n        _this.contextMenuService = contextMenuService;\n        _this.themeService = themeService;\n        _this.commandService = commandService;\n        _this.contextService = contextService;\n        _this.repositoryCount = 0;\n        _this._repositories = [];\n        _this.mainPanelDescriptor = new MainPanelDescriptor(_this);\n        _this.viewDescriptors = [];\n        _this._onDidSplice = new event_1.Emitter();\n        _this.onDidSplice = _this._onDidSplice.event;\n        _this._height = undefined;\n        _this.menus = instantiationService.createInstance(scmMenus_1.SCMMenus, undefined);\n        _this.menus.onDidChangeTitle(_this.updateTitleArea, _this, _this.toDispose);\n        _this.message = dom_1.$('.empty-message', { tabIndex: 0 }, nls_1.localize('no open repo', \"No source control providers registered.\"));\n        configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('scm.alwaysShowProviders')) {\n                _this.onDidChangeRepositories();\n            }\n        }, _this.toDispose);\n        return _this;\n    }\n    Object.defineProperty(SCMViewlet.prototype, \"height\", {\n        get: function () { return this._height; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SCMViewlet.prototype, \"repositories\", {\n        get: function () {\n            return this._repositories;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SCMViewlet.prototype, \"visibleRepositories\", {\n        get: function () {\n            return this.panels.filter(function (panel) { return panel instanceof RepositoryPanel; })\n                .map(function (panel) { return panel.repository; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SCMViewlet.prototype, \"onDidChangeVisibleRepositories\", {\n        get: function () {\n            var _this = this;\n            var modificationEvent = event_1.Event.debounce(event_1.Event.any(this.viewsModel.onDidAdd, this.viewsModel.onDidRemove), function () { return null; }, 0);\n            return event_1.Event.map(modificationEvent, function () { return _this.visibleRepositories; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SCMViewlet.prototype.setVisibleRepositories = function (repositories) {\n        var visibleViewDescriptors = this.viewsModel.visibleViewDescriptors;\n        var toSetVisible = this.viewsModel.viewDescriptors\n            .filter(function (d) { return d instanceof RepositoryViewDescriptor && repositories.indexOf(d.repository) > -1 && visibleViewDescriptors.indexOf(d) === -1; });\n        var toSetInvisible = visibleViewDescriptors\n            .filter(function (d) { return d instanceof RepositoryViewDescriptor && repositories.indexOf(d.repository) === -1; });\n        var size;\n        var oneToOne = toSetVisible.length === 1 && toSetInvisible.length === 1;\n        var _loop_2 = function (viewDescriptor) {\n            if (oneToOne) {\n                var panel = this_1.panels.filter(function (panel) { return panel.id === viewDescriptor.id; })[0];\n                if (panel) {\n                    size = this_1.getPanelSize(panel);\n                }\n            }\n            this_1.viewsModel.setVisible(viewDescriptor.id, false);\n        };\n        var this_1 = this;\n        for (var _i = 0, toSetInvisible_1 = toSetInvisible; _i < toSetInvisible_1.length; _i++) {\n            var viewDescriptor = toSetInvisible_1[_i];\n            _loop_2(viewDescriptor);\n        }\n        for (var _a = 0, toSetVisible_1 = toSetVisible; _a < toSetVisible_1.length; _a++) {\n            var viewDescriptor = toSetVisible_1[_a];\n            this.viewsModel.setVisible(viewDescriptor.id, true, size);\n        }\n    };\n    SCMViewlet.prototype.create = function (parent) {\n        var _this = this;\n        _super.prototype.create.call(this, parent);\n        this.el = parent;\n        dom_1.addClasses(parent, 'scm-viewlet', 'empty');\n        dom_1.append(parent, this.message);\n        this.scmService.onDidAddRepository(this.onDidAddRepository, this, this.toDispose);\n        this.scmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.toDispose);\n        this.scmService.repositories.forEach(function (r) { return _this.onDidAddRepository(r); });\n    };\n    SCMViewlet.prototype.onDidAddRepository = function (repository) {\n        var index = this._repositories.length;\n        this._repositories.push(repository);\n        var viewDescriptor = new RepositoryViewDescriptor(repository, this, false);\n        platform_1.Registry.as(views_1.Extensions.ViewsRegistry).registerViews([viewDescriptor], scm_1.VIEW_CONTAINER);\n        this.viewDescriptors.push(viewDescriptor);\n        this._onDidSplice.fire({ index: index, deleteCount: 0, elements: [repository] });\n        this.updateTitleArea();\n        this.onDidChangeRepositories();\n    };\n    SCMViewlet.prototype.onDidRemoveRepository = function (repository) {\n        var index = this._repositories.indexOf(repository);\n        if (index === -1) {\n            return;\n        }\n        platform_1.Registry.as(views_1.Extensions.ViewsRegistry).deregisterViews([this.viewDescriptors[index]], scm_1.VIEW_CONTAINER);\n        this._repositories.splice(index, 1);\n        this.viewDescriptors.splice(index, 1);\n        this._onDidSplice.fire({ index: index, deleteCount: 1, elements: [] });\n        this.updateTitleArea();\n        this.onDidChangeRepositories();\n    };\n    SCMViewlet.prototype.onDidChangeRepositories = function () {\n        var repositoryCount = this.repositories.length;\n        var viewsRegistry = platform_1.Registry.as(views_1.Extensions.ViewsRegistry);\n        if (this.repositoryCount === 0 && repositoryCount !== 0) {\n            viewsRegistry.registerViews([this.mainPanelDescriptor], scm_1.VIEW_CONTAINER);\n        }\n        else if (this.repositoryCount !== 0 && repositoryCount === 0) {\n            viewsRegistry.deregisterViews([this.mainPanelDescriptor], scm_1.VIEW_CONTAINER);\n        }\n        var alwaysShowProviders = this.configurationService.getValue('scm.alwaysShowProviders') || false;\n        if (alwaysShowProviders && repositoryCount > 0) {\n            this.viewsModel.setVisible(MainPanel.ID, true);\n        }\n        else if (!alwaysShowProviders && repositoryCount === 1) {\n            this.viewsModel.setVisible(MainPanel.ID, false);\n        }\n        else if (this.repositoryCount < 2 && repositoryCount >= 2) {\n            this.viewsModel.setVisible(MainPanel.ID, true);\n        }\n        else if (this.repositoryCount >= 2 && repositoryCount === 1) {\n            this.viewsModel.setVisible(MainPanel.ID, false);\n        }\n        if (repositoryCount === 1) {\n            this.viewsModel.setVisible(this.viewDescriptors[0].id, true);\n        }\n        dom_1.toggleClass(this.el, 'empty', repositoryCount === 0);\n        this.repositoryCount = repositoryCount;\n    };\n    SCMViewlet.prototype.focus = function () {\n        if (this.repositoryCount === 0) {\n            this.message.focus();\n        }\n        else {\n            var repository_1 = this.visibleRepositories[0];\n            if (repository_1) {\n                var panel = this.panels\n                    .filter(function (panel) { return panel instanceof RepositoryPanel && panel.repository === repository_1; })[0];\n                if (panel) {\n                    panel.focus();\n                }\n                else {\n                    _super.prototype.focus.call(this);\n                }\n            }\n            else {\n                _super.prototype.focus.call(this);\n            }\n        }\n    };\n    SCMViewlet.prototype.getOptimalWidth = function () {\n        return 400;\n    };\n    SCMViewlet.prototype.getTitle = function () {\n        var title = nls_1.localize('source control', \"Source Control\");\n        if (this.visibleRepositories.length === 1) {\n            var repository = this.repositories[0];\n            return nls_1.localize('viewletTitle', \"{0}: {1}\", title, repository.provider.label);\n        }\n        else {\n            return title;\n        }\n    };\n    SCMViewlet.prototype.getActionItem = function (action) {\n        if (!(action instanceof actions_1.MenuItemAction)) {\n            return undefined;\n        }\n        return new menuItemActionItem_1.ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n    };\n    SCMViewlet.prototype.getActions = function () {\n        if (this.repositories.length > 0) {\n            return _super.prototype.getActions.call(this);\n        }\n        return this.menus.getTitleActions();\n    };\n    SCMViewlet.prototype.getSecondaryActions = function () {\n        if (this.repositories.length > 0) {\n            return _super.prototype.getSecondaryActions.call(this);\n        }\n        return this.menus.getTitleSecondaryActions();\n    };\n    SCMViewlet.prototype.getActionsContext = function () {\n        if (this.visibleRepositories.length === 1) {\n            return this.repositories[0].provider;\n        }\n    };\n    SCMViewlet.STATE_KEY = 'workbench.scm.views.state';\n    SCMViewlet = tslib_1.__decorate([\n        tslib_1.__param(0, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(1, telemetry_1.ITelemetryService),\n        tslib_1.__param(2, scm_1.ISCMService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, contextView_1.IContextViewService),\n        tslib_1.__param(5, keybinding_1.IKeybindingService),\n        tslib_1.__param(6, notification_1.INotificationService),\n        tslib_1.__param(7, contextView_1.IContextMenuService),\n        tslib_1.__param(8, themeService_1.IThemeService),\n        tslib_1.__param(9, commands_1.ICommandService),\n        tslib_1.__param(10, storage_1.IStorageService),\n        tslib_1.__param(11, configuration_1.IConfigurationService),\n        tslib_1.__param(12, extensions_1.IExtensionService),\n        tslib_1.__param(13, workspace_1.IWorkspaceContextService)\n    ], SCMViewlet);\n    return SCMViewlet;\n}(viewsViewlet_1.ViewContainerViewlet));\nexports.SCMViewlet = SCMViewlet;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/scmViewlet.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/scmViewlet.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/scmViewlet';\nimport { localize } from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { domEvent } from 'vs/base/browser/event';\nimport { basename } from 'vs/base/common/resources';\nimport { IDisposable, dispose, combinedDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { append, $, addClass, toggleClass, trackFocus, removeClass, addClasses } from 'vs/base/browser/dom';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate, IListRenderer, IListContextMenuEvent, IListEvent, IKeyboardNavigationLabelProvider, IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { VIEWLET_ID, ISCMService, ISCMRepository, ISCMResourceGroup, ISCMResource, InputValidationType, VIEW_CONTAINER } from 'vs/workbench/contrib/scm/common/scm';\nimport { ResourceLabels, IResourceLabel, IResourceLabelsContainer } from 'vs/workbench/browser/labels';\nimport { CountBadge } from 'vs/base/browser/ui/countBadge/countBadge';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextViewService, IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { MenuItemAction, IMenuService, MenuId, IMenu } from 'vs/platform/actions/common/actions';\nimport { IAction, Action, IActionItem, ActionRunner } from 'vs/base/common/actions';\nimport { fillInContextMenuActions, ContextAwareMenuItemActionItem, fillInActionBarActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { SCMMenus } from './scmMenus';\nimport { ActionBar, IActionItemProvider, ActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IThemeService, LIGHT } from 'vs/platform/theme/common/themeService';\nimport { isSCMResource } from './scmUtil';\nimport { attachBadgeStyler, attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { InputBox, MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { Command } from 'vs/editor/common/modes';\nimport { renderOcticons } from 'vs/base/browser/ui/octiconLabel/octiconLabel';\nimport { format } from 'vs/base/common/strings';\nimport { ISpliceable, ISequence, ISplice } from 'vs/base/common/sequence';\nimport { firstIndex, equals } from 'vs/base/common/arrays';\nimport { WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport * as browser from 'vs/base/browser/browser';\nimport { ViewContainerViewlet } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IViewsRegistry, IViewDescriptor, Extensions } from 'vs/workbench/common/views';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport interface ISpliceEvent<T> {\n\tindex: number;\n\tdeleteCount: number;\n\telements: T[];\n}\n\nexport interface IViewModel {\n\treadonly repositories: ISCMRepository[];\n\treadonly onDidSplice: Event<ISpliceEvent<ISCMRepository>>;\n\n\treadonly visibleRepositories: ISCMRepository[];\n\treadonly onDidChangeVisibleRepositories: Event<ISCMRepository[]>;\n\tsetVisibleRepositories(repositories: ISCMRepository[]): void;\n\n\tisVisible(): boolean;\n\treadonly onDidChangeVisibility: Event<boolean>;\n}\n\nclass ProvidersListDelegate implements IListVirtualDelegate<ISCMRepository> {\n\n\tgetHeight(element: ISCMRepository): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: ISCMRepository): string {\n\t\treturn 'provider';\n\t}\n}\n\nclass StatusBarAction extends Action {\n\n\tconstructor(\n\t\tprivate command: Command,\n\t\tprivate commandService: ICommandService\n\t) {\n\t\tsuper(`statusbaraction{${command.id}}`, command.title, '', true);\n\t\tthis.tooltip = command.tooltip || '';\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.commandService.executeCommand(this.command.id, ...(this.command.arguments || []));\n\t}\n}\n\nclass StatusBarActionItem extends ActionItem {\n\n\tconstructor(action: StatusBarAction) {\n\t\tsuper(null, action, {});\n\t}\n\n\tupdateLabel(): void {\n\t\tif (this.options.label) {\n\t\t\tthis.label.innerHTML = renderOcticons(this.getAction().label);\n\t\t}\n\t}\n}\n\nfunction connectPrimaryMenuToInlineActionBar(menu: IMenu, actionBar: ActionBar): IDisposable {\n\tlet cachedPrimary: IAction[] = [];\n\n\tconst updateActions = () => {\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\n\t\tfillInActionBarActions(menu, { shouldForwardArgs: true }, result, g => /^inline/.test(g));\n\n\t\tif (equals(cachedPrimary, primary, (a, b) => a.id === b.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcachedPrimary = primary;\n\t\tactionBar.clear();\n\t\tactionBar.push(primary, { icon: true, label: false });\n\t};\n\n\tupdateActions();\n\treturn menu.onDidChange(updateActions);\n}\n\ninterface RepositoryTemplateData {\n\ttitle: HTMLElement;\n\ttype: HTMLElement;\n\tcountContainer: HTMLElement;\n\tcount: CountBadge;\n\tactionBar: ActionBar;\n\tdisposable: IDisposable;\n\ttemplateDisposable: IDisposable;\n}\n\nclass ProviderRenderer implements IListRenderer<ISCMRepository, RepositoryTemplateData> {\n\n\treadonly templateId = 'provider';\n\n\tprivate _onDidRenderElement = new Emitter<ISCMRepository>();\n\treadonly onDidRenderElement = this._onDidRenderElement.event;\n\n\tconstructor(\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IThemeService protected themeService: IThemeService\n\t) { }\n\n\trenderTemplate(container: HTMLElement): RepositoryTemplateData {\n\t\tconst provider = append(container, $('.scm-provider'));\n\t\tconst name = append(provider, $('.name'));\n\t\tconst title = append(name, $('span.title'));\n\t\tconst type = append(name, $('span.type'));\n\t\tconst countContainer = append(provider, $('.count'));\n\t\tconst count = new CountBadge(countContainer);\n\t\tconst badgeStyler = attachBadgeStyler(count, this.themeService);\n\t\tconst actionBar = new ActionBar(provider, { actionItemProvider: a => new StatusBarActionItem(a as StatusBarAction) });\n\t\tconst disposable = Disposable.None;\n\t\tconst templateDisposable = combinedDisposable([actionBar, badgeStyler]);\n\n\t\treturn { title, type, countContainer, count, actionBar, disposable, templateDisposable };\n\t}\n\n\trenderElement(repository: ISCMRepository, index: number, templateData: RepositoryTemplateData): void {\n\t\ttemplateData.disposable.dispose();\n\t\tconst disposables: IDisposable[] = [];\n\n\t\tif (repository.provider.rootUri) {\n\t\t\ttemplateData.title.textContent = basename(repository.provider.rootUri);\n\t\t\ttemplateData.type.textContent = repository.provider.label;\n\t\t} else {\n\t\t\ttemplateData.title.textContent = repository.provider.label;\n\t\t\ttemplateData.type.textContent = '';\n\t\t}\n\n\t\tconst actions: IAction[] = [];\n\t\tconst disposeActions = () => dispose(actions);\n\t\tdisposables.push({ dispose: disposeActions });\n\n\t\tconst update = () => {\n\t\t\tdisposeActions();\n\n\t\t\tconst commands = repository.provider.statusBarCommands || [];\n\t\t\tactions.splice(0, actions.length, ...commands.map(c => new StatusBarAction(c, this.commandService)));\n\t\t\ttemplateData.actionBar.clear();\n\t\t\ttemplateData.actionBar.push(actions);\n\n\t\t\tconst count = repository.provider.count || 0;\n\t\t\ttoggleClass(templateData.countContainer, 'hidden', count === 0);\n\t\t\ttemplateData.count.setCount(count);\n\n\t\t\tthis._onDidRenderElement.fire(repository);\n\t\t};\n\n\t\trepository.provider.onDidChange(update, null, disposables);\n\t\tupdate();\n\n\t\ttemplateData.disposable = combinedDisposable(disposables);\n\t}\n\n\tdisposeTemplate(templateData: RepositoryTemplateData): void {\n\t\ttemplateData.disposable.dispose();\n\t\ttemplateData.templateDisposable.dispose();\n\t}\n}\n\nexport class MainPanel extends ViewletPanel {\n\n\tstatic readonly ID = 'scm.mainPanel';\n\tstatic readonly TITLE = localize('scm providers', \"Source Control Providers\");\n\n\tprivate list: List<ISCMRepository>;\n\n\tconstructor(\n\t\tprotected viewModel: IViewModel,\n\t\toptions: IViewletPanelOptions,\n\t\t@IKeybindingService protected keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@ISCMService protected scmService: ISCMService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService);\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tconst delegate = new ProvidersListDelegate();\n\t\tconst renderer = this.instantiationService.createInstance(ProviderRenderer);\n\t\tconst identityProvider = { getId: (r: ISCMRepository) => r.provider.id };\n\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchList, container, delegate, [renderer], {\n\t\t\tidentityProvider,\n\t\t\thorizontalScrolling: false\n\t\t}) as WorkbenchList<ISCMRepository>;\n\n\t\trenderer.onDidRenderElement(e => this.list.updateWidth(this.viewModel.repositories.indexOf(e)), null, this.disposables);\n\t\tthis.list.onSelectionChange(this.onListSelectionChange, this, this.disposables);\n\t\tthis.list.onFocusChange(this.onListFocusChange, this, this.disposables);\n\t\tthis.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n\n\t\tthis.viewModel.onDidChangeVisibleRepositories(this.updateListSelection, this, this.disposables);\n\n\t\tthis.viewModel.onDidSplice(({ index, deleteCount, elements }) => this.splice(index, deleteCount, elements), null, this.disposables);\n\t\tthis.splice(0, 0, this.viewModel.repositories);\n\n\t\tthis.disposables.push(this.list);\n\n\t\tthis.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('scm.providers.visible')) {\n\t\t\t\tthis.updateBodySize();\n\t\t\t}\n\t\t}, this.disposables);\n\n\t\tthis.updateListSelection();\n\t}\n\n\tprivate splice(index: number, deleteCount: number, repositories: ISCMRepository[] = []): void {\n\t\tthis.list.splice(index, deleteCount, repositories);\n\n\t\tconst empty = this.list.length === 0;\n\t\ttoggleClass(this.element, 'empty', empty);\n\n\t\tthis.updateBodySize();\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis.list.layout(height, width);\n\t}\n\n\tprivate updateBodySize(): void {\n\t\tconst visibleCount = this.configurationService.getValue<number>('scm.providers.visible');\n\t\tconst empty = this.list.length === 0;\n\t\tconst size = Math.min(this.viewModel.repositories.length, visibleCount) * 22;\n\n\t\tthis.minimumBodySize = visibleCount === 0 ? 22 : size;\n\t\tthis.maximumBodySize = visibleCount === 0 ? Number.POSITIVE_INFINITY : empty ? Number.POSITIVE_INFINITY : size;\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<ISCMRepository>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst repository = e.element;\n\t\tconst contextKeyService = this.contextKeyService.createScoped();\n\t\tconst scmProviderKey = contextKeyService.createKey<string | undefined>('scmProvider', undefined);\n\t\tscmProviderKey.set(repository.provider.contextValue);\n\n\t\tconst menu = this.menuService.createMenu(MenuId.SCMSourceControl, contextKeyService);\n\t\tconst primary: IAction[] = [];\n\t\tconst secondary: IAction[] = [];\n\t\tconst result = { primary, secondary };\n\n\t\tfillInContextMenuActions(menu, { shouldForwardArgs: true }, result, this.contextMenuService, g => g === 'inline');\n\n\t\tmenu.dispose();\n\t\tcontextKeyService.dispose();\n\n\t\tif (secondary.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => secondary,\n\t\t\tgetActionsContext: () => repository.provider\n\t\t});\n\t}\n\n\tprivate onListSelectionChange(e: IListEvent<ISCMRepository>): void {\n\t\tif (e.elements.length > 0 && e.browserEvent) {\n\t\t\tconst scrollTop = this.list.scrollTop;\n\t\t\tthis.viewModel.setVisibleRepositories(e.elements);\n\t\t\tthis.list.scrollTop = scrollTop;\n\t\t}\n\t}\n\n\tprivate onListFocusChange(e: IListEvent<ISCMRepository>): void {\n\t\tif (e.elements.length > 0) {\n\t\t\te.elements[0].focus();\n\t\t}\n\t}\n\n\tprivate updateListSelection(): void {\n\t\tconst set = new Set();\n\n\t\tfor (const repository of this.viewModel.visibleRepositories) {\n\t\t\tset.add(repository);\n\t\t}\n\n\t\tconst selection: number[] = [];\n\n\t\tfor (let i = 0; i < this.list.length; i++) {\n\t\t\tif (set.has(this.list.element(i))) {\n\t\t\t\tselection.push(i);\n\t\t\t}\n\t\t}\n\n\t\tthis.list.setSelection(selection);\n\n\t\tif (selection.length > 0) {\n\t\t\tthis.list.setFocus([selection[0]]);\n\t\t}\n\t}\n}\n\ninterface ResourceGroupTemplate {\n\tname: HTMLElement;\n\tcount: CountBadge;\n\tactionBar: ActionBar;\n\telementDisposable: IDisposable;\n\tdispose: () => void;\n}\n\nclass ResourceGroupRenderer implements IListRenderer<ISCMResourceGroup, ResourceGroupTemplate> {\n\n\tstatic TEMPLATE_ID = 'resource group';\n\tget templateId(): string { return ResourceGroupRenderer.TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate actionItemProvider: IActionItemProvider,\n\t\tprivate themeService: IThemeService,\n\t\tprivate menus: SCMMenus\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ResourceGroupTemplate {\n\t\tconst element = append(container, $('.resource-group'));\n\t\tconst name = append(element, $('.name'));\n\t\tconst actionsContainer = append(element, $('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, { actionItemProvider: this.actionItemProvider });\n\t\tconst countContainer = append(element, $('.count'));\n\t\tconst count = new CountBadge(countContainer);\n\t\tconst styler = attachBadgeStyler(count, this.themeService);\n\t\tconst elementDisposable = Disposable.None;\n\n\t\treturn {\n\t\t\tname, count, actionBar, elementDisposable, dispose: () => {\n\t\t\t\tactionBar.dispose();\n\t\t\t\tstyler.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\trenderElement(group: ISCMResourceGroup, index: number, template: ResourceGroupTemplate): void {\n\t\ttemplate.elementDisposable.dispose();\n\n\t\ttemplate.name.textContent = group.label;\n\t\ttemplate.actionBar.clear();\n\t\ttemplate.actionBar.context = group;\n\n\t\tconst disposables: IDisposable[] = [];\n\t\tdisposables.push(connectPrimaryMenuToInlineActionBar(this.menus.getResourceGroupMenu(group), template.actionBar));\n\n\t\tconst updateCount = () => template.count.setCount(group.elements.length);\n\t\tgroup.onDidSplice(updateCount, null, disposables);\n\t\tupdateCount();\n\n\t\ttemplate.elementDisposable = combinedDisposable(disposables);\n\t}\n\n\tdisposeElement(group: ISCMResourceGroup, index: number, template: ResourceGroupTemplate): void {\n\t\ttemplate.elementDisposable.dispose();\n\t}\n\n\tdisposeTemplate(template: ResourceGroupTemplate): void {\n\t\ttemplate.dispose();\n\t}\n}\n\ninterface ResourceTemplate {\n\telement: HTMLElement;\n\tname: HTMLElement;\n\tfileLabel: IResourceLabel;\n\tdecorationIcon: HTMLElement;\n\tactionBar: ActionBar;\n\telementDisposable: IDisposable;\n\tdispose: () => void;\n}\n\nclass MultipleSelectionActionRunner extends ActionRunner {\n\n\tconstructor(private getSelectedResources: () => ISCMResource[]) {\n\t\tsuper();\n\t}\n\n\trunAction(action: IAction, context: ISCMResource): Promise<any> {\n\t\tif (action instanceof MenuItemAction) {\n\t\t\tconst selection = this.getSelectedResources();\n\t\t\tconst filteredSelection = selection.filter(s => s !== context);\n\n\t\t\tif (selection.length === filteredSelection.length || selection.length === 1) {\n\t\t\t\treturn action.run(context);\n\t\t\t}\n\n\t\t\treturn action.run(context, ...filteredSelection);\n\t\t}\n\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nclass ResourceRenderer implements IListRenderer<ISCMResource, ResourceTemplate> {\n\n\tstatic TEMPLATE_ID = 'resource';\n\tget templateId(): string { return ResourceRenderer.TEMPLATE_ID; }\n\n\tconstructor(\n\t\tprivate labels: ResourceLabels,\n\t\tprivate actionItemProvider: IActionItemProvider,\n\t\tprivate getSelectedResources: () => ISCMResource[],\n\t\tprivate themeService: IThemeService,\n\t\tprivate menus: SCMMenus\n\t) { }\n\n\trenderTemplate(container: HTMLElement): ResourceTemplate {\n\t\tconst element = append(container, $('.resource'));\n\t\tconst name = append(element, $('.name'));\n\t\tconst fileLabel = this.labels.create(name);\n\t\tconst actionsContainer = append(fileLabel.element, $('.actions'));\n\t\tconst actionBar = new ActionBar(actionsContainer, {\n\t\t\tactionItemProvider: this.actionItemProvider,\n\t\t\tactionRunner: new MultipleSelectionActionRunner(this.getSelectedResources)\n\t\t});\n\n\t\tconst decorationIcon = append(element, $('.decoration-icon'));\n\n\t\treturn {\n\t\t\telement, name, fileLabel, decorationIcon, actionBar, elementDisposable: Disposable.None, dispose: () => {\n\t\t\t\tactionBar.dispose();\n\t\t\t\tfileLabel.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\trenderElement(resource: ISCMResource, index: number, template: ResourceTemplate): void {\n\t\ttemplate.elementDisposable.dispose();\n\n\t\tconst theme = this.themeService.getTheme();\n\t\tconst icon = theme.type === LIGHT ? resource.decorations.icon : resource.decorations.iconDark;\n\n\t\ttemplate.fileLabel.setFile(resource.sourceUri, { fileDecorations: { colors: false, badges: !icon, data: resource.decorations } });\n\t\ttemplate.actionBar.context = resource;\n\n\t\tconst disposables: IDisposable[] = [];\n\t\tdisposables.push(connectPrimaryMenuToInlineActionBar(this.menus.getResourceMenu(resource.resourceGroup), template.actionBar));\n\n\t\ttoggleClass(template.name, 'strike-through', resource.decorations.strikeThrough);\n\t\ttoggleClass(template.element, 'faded', resource.decorations.faded);\n\n\t\tif (icon) {\n\t\t\ttemplate.decorationIcon.style.display = '';\n\t\t\ttemplate.decorationIcon.style.backgroundImage = `url('${icon}')`;\n\t\t\ttemplate.decorationIcon.title = resource.decorations.tooltip || '';\n\t\t} else {\n\t\t\ttemplate.decorationIcon.style.display = 'none';\n\t\t\ttemplate.decorationIcon.style.backgroundImage = '';\n\t\t}\n\n\t\ttemplate.element.setAttribute('data-tooltip', resource.decorations.tooltip || '');\n\t\ttemplate.elementDisposable = combinedDisposable(disposables);\n\t}\n\n\tdisposeElement(resource: ISCMResource, index: number, template: ResourceTemplate): void {\n\t\ttemplate.elementDisposable.dispose();\n\t}\n\n\tdisposeTemplate(template: ResourceTemplate): void {\n\t\ttemplate.elementDisposable.dispose();\n\t\ttemplate.dispose();\n\t}\n}\n\nclass ProviderListDelegate implements IListVirtualDelegate<ISCMResourceGroup | ISCMResource> {\n\n\tgetHeight() { return 22; }\n\n\tgetTemplateId(element: ISCMResourceGroup | ISCMResource) {\n\t\treturn isSCMResource(element) ? ResourceRenderer.TEMPLATE_ID : ResourceGroupRenderer.TEMPLATE_ID;\n\t}\n}\n\nconst scmResourceIdentityProvider = new class implements IIdentityProvider<ISCMResourceGroup | ISCMResource> {\n\tgetId(r: ISCMResourceGroup | ISCMResource): string {\n\t\tif (isSCMResource(r)) {\n\t\t\tconst group = r.resourceGroup;\n\t\t\tconst provider = group.provider;\n\t\t\treturn `${provider.contextValue}/${group.id}/${r.sourceUri.toString()}`;\n\t\t} else {\n\t\t\tconst provider = r.provider;\n\t\t\treturn `${provider.contextValue}/${r.id}`;\n\t\t}\n\t}\n};\n\nconst scmKeyboardNavigationLabelProvider = new class implements IKeyboardNavigationLabelProvider<ISCMResourceGroup | ISCMResource> {\n\tgetKeyboardNavigationLabel(e: ISCMResourceGroup | ISCMResource) {\n\t\tif (isSCMResource(e)) {\n\t\t\treturn basename(e.sourceUri);\n\t\t} else {\n\t\t\treturn e.label;\n\t\t}\n\t}\n};\n\nfunction isGroupVisible(group: ISCMResourceGroup) {\n\treturn group.elements.length > 0 || !group.hideWhenEmpty;\n}\n\ninterface IGroupItem {\n\treadonly group: ISCMResourceGroup;\n\tvisible: boolean;\n\treadonly disposable: IDisposable;\n}\n\nclass ResourceGroupSplicer {\n\n\tprivate items: IGroupItem[] = [];\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tgroupSequence: ISequence<ISCMResourceGroup>,\n\t\tprivate spliceable: ISpliceable<ISCMResourceGroup | ISCMResource>\n\t) {\n\t\tgroupSequence.onDidSplice(this.onDidSpliceGroups, this, this.disposables);\n\t\tthis.onDidSpliceGroups({ start: 0, deleteCount: 0, toInsert: groupSequence.elements });\n\t}\n\n\tprivate onDidSpliceGroups({ start, deleteCount, toInsert }: ISplice<ISCMResourceGroup>): void {\n\t\tlet absoluteStart = 0;\n\n\t\tfor (let i = 0; i < start; i++) {\n\t\t\tconst item = this.items[i];\n\t\t\tabsoluteStart += (item.visible ? 1 : 0) + item.group.elements.length;\n\t\t}\n\n\t\tlet absoluteDeleteCount = 0;\n\n\t\tfor (let i = 0; i < deleteCount; i++) {\n\t\t\tconst item = this.items[start + i];\n\t\t\tabsoluteDeleteCount += (item.visible ? 1 : 0) + item.group.elements.length;\n\t\t}\n\n\t\tconst itemsToInsert: IGroupItem[] = [];\n\t\tconst absoluteToInsert: Array<ISCMResourceGroup | ISCMResource> = [];\n\n\t\tfor (const group of toInsert) {\n\t\t\tconst visible = isGroupVisible(group);\n\n\t\t\tif (visible) {\n\t\t\t\tabsoluteToInsert.push(group);\n\t\t\t}\n\n\t\t\tfor (const element of group.elements) {\n\t\t\t\tabsoluteToInsert.push(element);\n\t\t\t}\n\n\t\t\tconst disposable = combinedDisposable([\n\t\t\t\tgroup.onDidChange(() => this.onDidChangeGroup(group)),\n\t\t\t\tgroup.onDidSplice(splice => this.onDidSpliceGroup(group, splice))\n\t\t\t]);\n\n\t\t\titemsToInsert.push({ group, visible, disposable });\n\t\t}\n\n\t\tconst itemsToDispose = this.items.splice(start, deleteCount, ...itemsToInsert);\n\n\t\tfor (const item of itemsToDispose) {\n\t\t\titem.disposable.dispose();\n\t\t}\n\n\t\tthis.spliceable.splice(absoluteStart, absoluteDeleteCount, absoluteToInsert);\n\t}\n\n\tprivate onDidChangeGroup(group: ISCMResourceGroup): void {\n\t\tconst itemIndex = firstIndex(this.items, item => item.group === group);\n\n\t\tif (itemIndex < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.items[itemIndex];\n\t\tconst visible = isGroupVisible(group);\n\n\t\tif (item.visible === visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet absoluteStart = 0;\n\n\t\tfor (let i = 0; i < itemIndex; i++) {\n\t\t\tconst item = this.items[i];\n\t\t\tabsoluteStart += (item.visible ? 1 : 0) + item.group.elements.length;\n\t\t}\n\n\t\tif (visible) {\n\t\t\tthis.spliceable.splice(absoluteStart, 0, [group, ...group.elements]);\n\t\t} else {\n\t\t\tthis.spliceable.splice(absoluteStart, 1 + group.elements.length, []);\n\t\t}\n\n\t\titem.visible = visible;\n\t}\n\n\tprivate onDidSpliceGroup(group: ISCMResourceGroup, { start, deleteCount, toInsert }: ISplice<ISCMResource>): void {\n\t\tconst itemIndex = firstIndex(this.items, item => item.group === group);\n\n\t\tif (itemIndex < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.items[itemIndex];\n\t\tconst visible = isGroupVisible(group);\n\n\t\tif (!item.visible && !visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet absoluteStart = start;\n\n\t\tfor (let i = 0; i < itemIndex; i++) {\n\t\t\tconst item = this.items[i];\n\t\t\tabsoluteStart += (item.visible ? 1 : 0) + item.group.elements.length;\n\t\t}\n\n\t\tif (item.visible && !visible) {\n\t\t\tthis.spliceable.splice(absoluteStart, 1 + deleteCount, toInsert);\n\t\t} else if (!item.visible && visible) {\n\t\t\tthis.spliceable.splice(absoluteStart, deleteCount, [group, ...toInsert]);\n\t\t} else {\n\t\t\tthis.spliceable.splice(absoluteStart + 1, deleteCount, toInsert);\n\t\t}\n\n\t\titem.visible = visible;\n\t}\n\n\tdispose(): void {\n\t\tthis.onDidSpliceGroups({ start: 0, deleteCount: this.items.length, toInsert: [] });\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nfunction convertValidationType(type: InputValidationType): MessageType {\n\tswitch (type) {\n\t\tcase InputValidationType.Information: return MessageType.INFO;\n\t\tcase InputValidationType.Warning: return MessageType.WARNING;\n\t\tcase InputValidationType.Error: return MessageType.ERROR;\n\t}\n}\n\nexport class RepositoryPanel extends ViewletPanel {\n\n\tprivate cachedHeight: number | undefined = undefined;\n\tprivate cachedWidth: number | undefined = undefined;\n\tprivate inputBoxContainer: HTMLElement;\n\tprivate inputBox: InputBox;\n\tprivate listContainer: HTMLElement;\n\tprivate list: List<ISCMResourceGroup | ISCMResource>;\n\tprivate listLabels: ResourceLabels;\n\tprivate menus: SCMMenus;\n\tprivate visibilityDisposables: IDisposable[] = [];\n\tprotected contextKeyService: IContextKeyService;\n\n\tconstructor(\n\t\treadonly repository: ISCMRepository,\n\t\tprivate readonly viewModel: IViewModel,\n\t\toptions: IViewletPanelOptions,\n\t\t@IKeybindingService protected keybindingService: IKeybindingService,\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IContextViewService protected contextViewService: IContextViewService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IEditorService protected editorService: IEditorService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IMenuService protected menuService: IMenuService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService);\n\n\t\tthis.menus = instantiationService.createInstance(SCMMenus, this.repository.provider);\n\t\tthis.disposables.push(this.menus);\n\t\tthis.menus.onDidChangeTitle(this._onDidChangeTitleArea.fire, this._onDidChangeTitleArea, this.disposables);\n\n\t\tthis.contextKeyService = contextKeyService.createScoped(this.element);\n\t\tthis.contextKeyService.createKey('scmRepository', this.repository);\n\t}\n\n\trender(): void {\n\t\tsuper.render();\n\t\tthis.menus.onDidChangeTitle(this.updateActions, this, this.disposables);\n\t}\n\n\tprotected renderHeaderTitle(container: HTMLElement): void {\n\t\tlet title: string;\n\t\tlet type: string;\n\n\t\tif (this.repository.provider.rootUri) {\n\t\t\ttitle = basename(this.repository.provider.rootUri);\n\t\t\ttype = this.repository.provider.label;\n\t\t} else {\n\t\t\ttitle = this.repository.provider.label;\n\t\t\ttype = '';\n\t\t}\n\n\t\tsuper.renderHeaderTitle(container, title);\n\t\taddClass(container, 'scm-provider');\n\t\tappend(container, $('span.type', undefined, type));\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tconst focusTracker = trackFocus(container);\n\t\tthis.disposables.push(focusTracker.onDidFocus(() => this.repository.focus()));\n\t\tthis.disposables.push(focusTracker);\n\n\t\t// Input\n\t\tthis.inputBoxContainer = append(container, $('.scm-editor'));\n\n\t\tconst updatePlaceholder = () => {\n\t\t\tconst binding = this.keybindingService.lookupKeybinding('scm.acceptInput');\n\t\t\tconst label = binding ? binding.getLabel() : (browser.isMacintosh ? 'Cmd+Enter' : 'Ctrl+Enter');\n\t\t\tconst placeholder = format(this.repository.input.placeholder, label);\n\n\t\t\tthis.inputBox.setPlaceHolder(placeholder);\n\t\t};\n\n\t\tconst validationDelayer = new ThrottledDelayer<any>(200);\n\t\tconst validate = () => {\n\t\t\treturn this.repository.input.validateInput(this.inputBox.value, this.inputBox.inputElement.selectionStart || 0).then(result => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.inputBox.inputElement.removeAttribute('aria-invalid');\n\t\t\t\t\tthis.inputBox.hideMessage();\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputBox.inputElement.setAttribute('aria-invalid', 'true');\n\t\t\t\t\tthis.inputBox.showMessage({ content: result.message, type: convertValidationType(result.type) });\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst triggerValidation = () => validationDelayer.trigger(validate);\n\n\t\tthis.inputBox = new InputBox(this.inputBoxContainer, this.contextViewService, { flexibleHeight: true });\n\t\tthis.inputBox.setEnabled(this.isBodyVisible());\n\t\tthis.disposables.push(attachInputBoxStyler(this.inputBox, this.themeService));\n\t\tthis.disposables.push(this.inputBox);\n\n\t\tthis.inputBox.onDidChange(triggerValidation, null, this.disposables);\n\n\t\tconst onKeyUp = domEvent(this.inputBox.inputElement, 'keyup');\n\t\tconst onMouseUp = domEvent(this.inputBox.inputElement, 'mouseup');\n\t\tEvent.any<any>(onKeyUp, onMouseUp)(triggerValidation, null, this.disposables);\n\n\t\tthis.inputBox.value = this.repository.input.value;\n\t\tthis.inputBox.onDidChange(value => this.repository.input.value = value, null, this.disposables);\n\t\tthis.repository.input.onDidChange(value => this.inputBox.value = value, null, this.disposables);\n\n\t\tupdatePlaceholder();\n\t\tthis.repository.input.onDidChangePlaceholder(updatePlaceholder, null, this.disposables);\n\t\tthis.keybindingService.onDidUpdateKeybindings(updatePlaceholder, null, this.disposables);\n\n\t\tthis.disposables.push(this.inputBox.onDidHeightChange(() => this.layoutBody()));\n\n\t\tif (this.repository.provider.onDidChangeCommitTemplate) {\n\t\t\tthis.repository.provider.onDidChangeCommitTemplate(this.updateInputBox, this, this.disposables);\n\t\t}\n\n\t\tthis.updateInputBox();\n\n\t\t// Input box visibility\n\t\tthis.repository.input.onDidChangeVisibility(this.updateInputBoxVisibility, this, this.disposables);\n\t\tthis.updateInputBoxVisibility();\n\n\t\t// List\n\t\tthis.listContainer = append(container, $('.scm-status.show-file-icons'));\n\n\t\tconst updateActionsVisibility = () => toggleClass(this.listContainer, 'show-actions', this.configurationService.getValue<boolean>('scm.alwaysShowActions'));\n\t\tEvent.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.alwaysShowActions'))(updateActionsVisibility);\n\t\tupdateActionsVisibility();\n\n\t\tconst delegate = new ProviderListDelegate();\n\n\t\tconst actionItemProvider = (action: IAction) => this.getActionItem(action);\n\n\t\tthis.listLabels = this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility } as IResourceLabelsContainer);\n\t\tthis.disposables.push(this.listLabels);\n\n\t\tconst renderers = [\n\t\t\tnew ResourceGroupRenderer(actionItemProvider, this.themeService, this.menus),\n\t\t\tnew ResourceRenderer(this.listLabels, actionItemProvider, () => this.getSelectedResources(), this.themeService, this.menus)\n\t\t];\n\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchList, this.listContainer, delegate, renderers, {\n\t\t\tidentityProvider: scmResourceIdentityProvider,\n\t\t\tkeyboardNavigationLabelProvider: scmKeyboardNavigationLabelProvider,\n\t\t\thorizontalScrolling: false\n\t\t}) as WorkbenchList<ISCMResourceGroup | ISCMResource>;\n\n\t\tEvent.chain(this.list.onDidOpen)\n\t\t\t.map(e => e.elements[0])\n\t\t\t.filter(e => !!e && isSCMResource(e))\n\t\t\t.on(this.open, this, this.disposables);\n\n\t\tEvent.chain(this.list.onPin)\n\t\t\t.map(e => e.elements[0])\n\t\t\t.filter(e => !!e && isSCMResource(e))\n\t\t\t.on(this.pin, this, this.disposables);\n\n\t\tthis.list.onContextMenu(this.onListContextMenu, this, this.disposables);\n\t\tthis.disposables.push(this.list);\n\n\t\tthis.viewModel.onDidChangeVisibility(this.onDidChangeVisibility, this, this.disposables);\n\t\tthis.onDidChangeVisibility(this.viewModel.isVisible());\n\t\tthis.onDidChangeBodyVisibility(visible => this.inputBox.setEnabled(visible));\n\t}\n\n\tprivate onDidChangeVisibility(visible: boolean): void {\n\t\tif (visible) {\n\t\t\tconst listSplicer = new ResourceGroupSplicer(this.repository.provider.groups, this.list);\n\t\t\tthis.visibilityDisposables.push(listSplicer);\n\t\t} else {\n\t\t\tthis.visibilityDisposables = dispose(this.visibilityDisposables);\n\t\t}\n\t}\n\n\tlayoutBody(height: number | undefined = this.cachedHeight, width: number | undefined = this.cachedWidth): void {\n\t\tif (height === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cachedHeight = height;\n\n\t\tif (this.repository.input.visible) {\n\t\t\tremoveClass(this.inputBoxContainer, 'hidden');\n\t\t\tthis.inputBox.layout();\n\n\t\t\tconst editorHeight = this.inputBox.height;\n\t\t\tconst listHeight = height - (editorHeight + 12 /* margin */);\n\t\t\tthis.listContainer.style.height = `${listHeight}px`;\n\t\t\tthis.list.layout(listHeight, width);\n\n\t\t\ttoggleClass(this.inputBoxContainer, 'scroll', editorHeight >= 134);\n\t\t} else {\n\t\t\taddClass(this.inputBoxContainer, 'hidden');\n\t\t\tremoveClass(this.inputBoxContainer, 'scroll');\n\n\t\t\tthis.listContainer.style.height = `${height}px`;\n\t\t\tthis.list.layout(height, width);\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.isExpanded()) {\n\t\t\tif (this.repository.input.visible) {\n\t\t\t\tthis.inputBox.focus();\n\t\t\t} else {\n\t\t\t\tthis.list.domFocus();\n\t\t\t}\n\n\t\t\tthis.repository.focus();\n\t\t}\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn this.menus.getTitleActions();\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\treturn this.menus.getTitleSecondaryActions();\n\t}\n\n\tgetActionItem(action: IAction): IActionItem | undefined {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n\t}\n\n\tgetActionsContext(): any {\n\t\treturn this.repository.provider;\n\t}\n\n\tprivate open(e: ISCMResource): void {\n\t\te.open();\n\t}\n\n\tprivate pin(): void {\n\t\tconst activeControl = this.editorService.activeControl;\n\t\tif (activeControl) {\n\t\t\tactiveControl.group.pinEditor(activeControl.input);\n\t\t}\n\t}\n\n\tprivate onListContextMenu(e: IListContextMenuEvent<ISCMResourceGroup | ISCMResource>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = e.element;\n\t\tlet actions: IAction[];\n\n\t\tif (isSCMResource(element)) {\n\t\t\tactions = this.menus.getResourceContextActions(element);\n\t\t} else {\n\t\t\tactions = this.menus.getResourceGroupContextActions(element);\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => element,\n\t\t\tactionRunner: new MultipleSelectionActionRunner(() => this.getSelectedResources())\n\t\t});\n\t}\n\n\tprivate getSelectedResources(): ISCMResource[] {\n\t\treturn this.list.getSelectedElements()\n\t\t\t.filter(r => isSCMResource(r)) as ISCMResource[];\n\t}\n\n\tprivate updateInputBox(): void {\n\t\tif (typeof this.repository.provider.commitTemplate === 'undefined' || !this.repository.input.visible || this.inputBox.value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputBox.value = this.repository.provider.commitTemplate;\n\t}\n\n\tprivate updateInputBoxVisibility(): void {\n\t\tif (this.cachedHeight) {\n\t\t\tthis.layoutBody(this.cachedHeight);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.visibilityDisposables = dispose(this.visibilityDisposables);\n\t\tsuper.dispose();\n\t}\n}\n\nclass RepositoryViewDescriptor implements IViewDescriptor {\n\n\tprivate static counter = 0;\n\n\treadonly id: string;\n\treadonly name: string;\n\treadonly ctorDescriptor: { ctor: any, arguments?: any[] };\n\treadonly canToggleVisibility = true;\n\treadonly order = -500;\n\treadonly workspace = true;\n\n\tconstructor(readonly repository: ISCMRepository, viewModel: IViewModel, readonly hideByDefault: boolean) {\n\t\tconst repoId = repository.provider.rootUri ? repository.provider.rootUri.toString() : `#${RepositoryViewDescriptor.counter++}`;\n\t\tthis.id = `scm:repository:${repository.provider.label}:${repoId}`;\n\t\tthis.name = repository.provider.rootUri ? basename(repository.provider.rootUri) : repository.provider.label;\n\n\t\tthis.ctorDescriptor = { ctor: RepositoryPanel, arguments: [repository, viewModel] };\n\t}\n}\n\nclass MainPanelDescriptor implements IViewDescriptor {\n\n\treadonly id = MainPanel.ID;\n\treadonly name = MainPanel.TITLE;\n\treadonly ctorDescriptor: { ctor: any, arguments?: any[] };\n\treadonly canToggleVisibility = true;\n\treadonly hideByDefault = true;\n\treadonly order = -1000;\n\treadonly workspace = true;\n\n\tconstructor(viewModel: IViewModel) {\n\t\tthis.ctorDescriptor = { ctor: MainPanel, arguments: [viewModel] };\n\t}\n}\n\nexport class SCMViewlet extends ViewContainerViewlet implements IViewModel {\n\n\tprivate static readonly STATE_KEY = 'workbench.scm.views.state';\n\n\tprivate repositoryCount = 0;\n\tprivate el: HTMLElement;\n\tprivate message: HTMLElement;\n\tprivate menus: SCMMenus;\n\tprivate _repositories: ISCMRepository[] = [];\n\n\tprivate mainPanelDescriptor = new MainPanelDescriptor(this);\n\tprivate viewDescriptors: RepositoryViewDescriptor[] = [];\n\n\tprivate _onDidSplice = new Emitter<ISpliceEvent<ISCMRepository>>();\n\treadonly onDidSplice: Event<ISpliceEvent<ISCMRepository>> = this._onDidSplice.event;\n\n\tprivate _height: number | undefined = undefined;\n\tget height(): number | undefined { return this._height; }\n\n\tget repositories(): ISCMRepository[] {\n\t\treturn this._repositories;\n\t}\n\n\tget visibleRepositories(): ISCMRepository[] {\n\t\treturn this.panels.filter(panel => panel instanceof RepositoryPanel)\n\t\t\t.map(panel => (panel as RepositoryPanel).repository);\n\t}\n\n\tget onDidChangeVisibleRepositories(): Event<ISCMRepository[]> {\n\t\tconst modificationEvent = Event.debounce(Event.any(this.viewsModel.onDidAdd, this.viewsModel.onDidRemove), () => null, 0);\n\t\treturn Event.map(modificationEvent, () => this.visibleRepositories);\n\t}\n\n\tsetVisibleRepositories(repositories: ISCMRepository[]): void {\n\t\tconst visibleViewDescriptors = this.viewsModel.visibleViewDescriptors;\n\n\t\tconst toSetVisible = this.viewsModel.viewDescriptors\n\t\t\t.filter(d => d instanceof RepositoryViewDescriptor && repositories.indexOf(d.repository) > -1 && visibleViewDescriptors.indexOf(d) === -1);\n\n\t\tconst toSetInvisible = visibleViewDescriptors\n\t\t\t.filter(d => d instanceof RepositoryViewDescriptor && repositories.indexOf(d.repository) === -1);\n\n\t\tlet size: number | undefined;\n\t\tconst oneToOne = toSetVisible.length === 1 && toSetInvisible.length === 1;\n\n\t\tfor (const viewDescriptor of toSetInvisible) {\n\t\t\tif (oneToOne) {\n\t\t\t\tconst panel = this.panels.filter(panel => panel.id === viewDescriptor.id)[0];\n\n\t\t\t\tif (panel) {\n\t\t\t\t\tsize = this.getPanelSize(panel);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.viewsModel.setVisible(viewDescriptor.id, false);\n\t\t}\n\n\t\tfor (const viewDescriptor of toSetVisible) {\n\t\t\tthis.viewsModel.setVisible(viewDescriptor.id, true, size);\n\t\t}\n\t}\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ISCMService protected scmService: ISCMService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IContextViewService protected contextViewService: IContextViewService,\n\t\t@IKeybindingService protected keybindingService: IKeybindingService,\n\t\t@INotificationService protected notificationService: INotificationService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t) {\n\t\tsuper(VIEWLET_ID, SCMViewlet.STATE_KEY, true, configurationService, layoutService, telemetryService, storageService, instantiationService, themeService, contextMenuService, extensionService, contextService);\n\n\t\tthis.menus = instantiationService.createInstance(SCMMenus, undefined);\n\t\tthis.menus.onDidChangeTitle(this.updateTitleArea, this, this.toDispose);\n\n\t\tthis.message = $('.empty-message', { tabIndex: 0 }, localize('no open repo', \"No source control providers registered.\"));\n\n\t\tconfigurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('scm.alwaysShowProviders')) {\n\t\t\t\tthis.onDidChangeRepositories();\n\t\t\t}\n\t\t}, this.toDispose);\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tsuper.create(parent);\n\n\t\tthis.el = parent;\n\t\taddClasses(parent, 'scm-viewlet', 'empty');\n\t\tappend(parent, this.message);\n\n\t\tthis.scmService.onDidAddRepository(this.onDidAddRepository, this, this.toDispose);\n\t\tthis.scmService.onDidRemoveRepository(this.onDidRemoveRepository, this, this.toDispose);\n\t\tthis.scmService.repositories.forEach(r => this.onDidAddRepository(r));\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst index = this._repositories.length;\n\t\tthis._repositories.push(repository);\n\n\t\tconst viewDescriptor = new RepositoryViewDescriptor(repository, this, false);\n\t\tRegistry.as<IViewsRegistry>(Extensions.ViewsRegistry).registerViews([viewDescriptor], VIEW_CONTAINER);\n\t\tthis.viewDescriptors.push(viewDescriptor);\n\n\t\tthis._onDidSplice.fire({ index, deleteCount: 0, elements: [repository] });\n\t\tthis.updateTitleArea();\n\n\t\tthis.onDidChangeRepositories();\n\t}\n\n\tprivate onDidRemoveRepository(repository: ISCMRepository): void {\n\t\tconst index = this._repositories.indexOf(repository);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tRegistry.as<IViewsRegistry>(Extensions.ViewsRegistry).deregisterViews([this.viewDescriptors[index]], VIEW_CONTAINER);\n\n\t\tthis._repositories.splice(index, 1);\n\t\tthis.viewDescriptors.splice(index, 1);\n\n\t\tthis._onDidSplice.fire({ index, deleteCount: 1, elements: [] });\n\t\tthis.updateTitleArea();\n\n\t\tthis.onDidChangeRepositories();\n\t}\n\n\tprivate onDidChangeRepositories(): void {\n\t\tconst repositoryCount = this.repositories.length;\n\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(Extensions.ViewsRegistry);\n\t\tif (this.repositoryCount === 0 && repositoryCount !== 0) {\n\t\t\tviewsRegistry.registerViews([this.mainPanelDescriptor], VIEW_CONTAINER);\n\t\t} else if (this.repositoryCount !== 0 && repositoryCount === 0) {\n\t\t\tviewsRegistry.deregisterViews([this.mainPanelDescriptor], VIEW_CONTAINER);\n\t\t}\n\n\t\tconst alwaysShowProviders = this.configurationService.getValue<boolean>('scm.alwaysShowProviders') || false;\n\n\t\tif (alwaysShowProviders && repositoryCount > 0) {\n\t\t\tthis.viewsModel.setVisible(MainPanel.ID, true);\n\t\t} else if (!alwaysShowProviders && repositoryCount === 1) {\n\t\t\tthis.viewsModel.setVisible(MainPanel.ID, false);\n\t\t} else if (this.repositoryCount < 2 && repositoryCount >= 2) {\n\t\t\tthis.viewsModel.setVisible(MainPanel.ID, true);\n\t\t} else if (this.repositoryCount >= 2 && repositoryCount === 1) {\n\t\t\tthis.viewsModel.setVisible(MainPanel.ID, false);\n\t\t}\n\n\t\tif (repositoryCount === 1) {\n\t\t\tthis.viewsModel.setVisible(this.viewDescriptors[0].id, true);\n\t\t}\n\n\t\ttoggleClass(this.el, 'empty', repositoryCount === 0);\n\t\tthis.repositoryCount = repositoryCount;\n\t}\n\n\tfocus(): void {\n\t\tif (this.repositoryCount === 0) {\n\t\t\tthis.message.focus();\n\t\t} else {\n\t\t\tconst repository = this.visibleRepositories[0];\n\n\t\t\tif (repository) {\n\t\t\t\tconst panel = this.panels\n\t\t\t\t\t.filter(panel => panel instanceof RepositoryPanel && panel.repository === repository)[0] as RepositoryPanel | undefined;\n\n\t\t\t\tif (panel) {\n\t\t\t\t\tpanel.focus();\n\t\t\t\t} else {\n\t\t\t\t\tsuper.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsuper.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn 400;\n\t}\n\n\tgetTitle(): string {\n\t\tconst title = localize('source control', \"Source Control\");\n\n\t\tif (this.visibleRepositories.length === 1) {\n\t\t\tconst [repository] = this.repositories;\n\t\t\treturn localize('viewletTitle', \"{0}: {1}\", title, repository.provider.label);\n\t\t} else {\n\t\t\treturn title;\n\t\t}\n\t}\n\n\tgetActionItem(action: IAction): IActionItem | undefined {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new ContextAwareMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n\t}\n\n\tgetActions(): IAction[] {\n\t\tif (this.repositories.length > 0) {\n\t\t\treturn super.getActions();\n\t\t}\n\n\t\treturn this.menus.getTitleActions();\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\tif (this.repositories.length > 0) {\n\t\t\treturn super.getSecondaryActions();\n\t\t}\n\n\t\treturn this.menus.getTitleSecondaryActions();\n\t}\n\n\tgetActionsContext(): any {\n\t\tif (this.visibleRepositories.length === 1) {\n\t\t\treturn this.repositories[0].provider;\n\t\t}\n\t}\n}\n"]}]}