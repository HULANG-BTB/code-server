{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugToolBar.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugToolBar.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/debugToolBar\");\nvar errors = require(\"vs/base/common/errors\");\nvar browser = require(\"vs/base/browser/browser\");\nvar dom = require(\"vs/base/browser/dom\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar debugActionItems_1 = require(\"vs/workbench/contrib/debug/browser/debugActionItems\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar nls_1 = require(\"vs/nls\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar async_1 = require(\"vs/base/common/async\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar debugActions_1 = require(\"vs/workbench/contrib/debug/browser/debugActions\");\nvar DEBUG_TOOLBAR_POSITION_KEY = 'debug.actionswidgetposition';\nvar DEBUG_TOOLBAR_Y_KEY = 'debug.actionswidgety';\nexports.debugToolBarBackground = colorRegistry_1.registerColor('debugToolBar.background', {\n    dark: '#333333',\n    light: '#F3F3F3',\n    hc: '#000000'\n}, nls_1.localize('debugToolBarBackground', \"Debug toolbar background color.\"));\nexports.debugToolBarBorder = colorRegistry_1.registerColor('debugToolBar.border', {\n    dark: null,\n    light: null,\n    hc: null\n}, nls_1.localize('debugToolBarBorder', \"Debug toolbar border color.\"));\nvar DebugToolBar = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugToolBar, _super);\n    function DebugToolBar(notificationService, telemetryService, debugService, layoutService, storageService, configurationService, themeService, keybindingService, contextViewService, instantiationService, menuService, contextMenuService, contextKeyService) {\n        var _this = _super.call(this, themeService) || this;\n        _this.notificationService = notificationService;\n        _this.telemetryService = telemetryService;\n        _this.debugService = debugService;\n        _this.layoutService = layoutService;\n        _this.storageService = storageService;\n        _this.configurationService = configurationService;\n        _this.keybindingService = keybindingService;\n        _this.instantiationService = instantiationService;\n        _this.$el = dom.$('div.debug-toolbar');\n        _this.$el.style.top = layoutService.getTitleBarOffset() + \"px\";\n        _this.dragArea = dom.append(_this.$el, dom.$('div.drag-area'));\n        var actionBarContainer = dom.append(_this.$el, dom.$('div.action-bar-container'));\n        _this.debugToolBarMenu = menuService.createMenu(actions_1.MenuId.DebugToolBar, contextKeyService);\n        _this.toDispose.push(_this.debugToolBarMenu);\n        _this.activeActions = [];\n        _this.actionBar = _this._register(new actionbar_1.ActionBar(actionBarContainer, {\n            orientation: actionbar_1.ActionsOrientation.HORIZONTAL,\n            actionItemProvider: function (action) {\n                if (action.id === debugActions_1.FocusSessionAction.ID) {\n                    return new debugActionItems_1.FocusSessionActionItem(action, _this.debugService, _this.themeService, contextViewService);\n                }\n                if (action instanceof actions_1.MenuItemAction) {\n                    return new menuItemActionItem_1.MenuItemActionItem(action, _this.keybindingService, _this.notificationService, contextMenuService);\n                }\n                return undefined;\n            }\n        }));\n        _this.updateScheduler = _this._register(new async_1.RunOnceScheduler(function () {\n            var state = _this.debugService.state;\n            var toolBarLocation = _this.configurationService.getValue('debug').toolBarLocation;\n            if (state === debug_1.State.Inactive || toolBarLocation === 'docked' || toolBarLocation === 'hidden') {\n                return _this.hide();\n            }\n            var actions = DebugToolBar.getActions(_this.debugToolBarMenu, _this.debugService, _this.instantiationService);\n            if (!arrays.equals(actions, _this.activeActions, function (first, second) { return first.id === second.id; })) {\n                _this.actionBar.clear();\n                _this.actionBar.push(actions, { icon: true, label: false });\n                _this.activeActions = actions;\n            }\n            _this.show();\n        }, 20));\n        _this.updateStyles();\n        _this.registerListeners();\n        _this.hide();\n        _this.isBuilt = false;\n        return _this;\n    }\n    DebugToolBar.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.debugService.onDidChangeState(function () { return _this.updateScheduler.schedule(); }));\n        this._register(this.debugService.getViewModel().onDidFocusSession(function () { return _this.updateScheduler.schedule(); }));\n        this._register(this.configurationService.onDidChangeConfiguration(function (e) { return _this.onDidConfigurationChange(e); }));\n        this._register(this.actionBar.actionRunner.onDidRun(function (e) {\n            // check for error\n            if (e.error && !errors.isPromiseCanceledError(e.error)) {\n                _this.notificationService.error(e.error);\n            }\n            // log in telemetry\n            if (_this.telemetryService) {\n                /* __GDPR__\n                    \"workbenchActionExecuted\" : {\n                        \"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                        \"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: 'debugActionsWidget' });\n            }\n        }));\n        this._register(dom.addDisposableListener(window, dom.EventType.RESIZE, function () { return _this.setCoordinates(); }));\n        this._register(dom.addDisposableListener(this.dragArea, dom.EventType.MOUSE_UP, function (event) {\n            var mouseClickEvent = new mouseEvent_1.StandardMouseEvent(event);\n            if (mouseClickEvent.detail === 2) {\n                // double click on debug bar centers it again #8250\n                var widgetWidth = _this.$el.clientWidth;\n                _this.setCoordinates(0.5 * window.innerWidth - 0.5 * widgetWidth, 0);\n                _this.storePosition();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.dragArea, dom.EventType.MOUSE_DOWN, function (event) {\n            dom.addClass(_this.dragArea, 'dragged');\n            var mouseMoveListener = dom.addDisposableListener(window, 'mousemove', function (e) {\n                var mouseMoveEvent = new mouseEvent_1.StandardMouseEvent(e);\n                // Prevent default to stop editor selecting text #8524\n                mouseMoveEvent.preventDefault();\n                // Reduce x by width of drag handle to reduce jarring #16604\n                _this.setCoordinates(mouseMoveEvent.posx - 14, mouseMoveEvent.posy - _this.layoutService.getTitleBarOffset());\n            });\n            var mouseUpListener = dom.addDisposableListener(window, 'mouseup', function (e) {\n                _this.storePosition();\n                dom.removeClass(_this.dragArea, 'dragged');\n                mouseMoveListener.dispose();\n                mouseUpListener.dispose();\n            });\n        }));\n        this._register(this.layoutService.onTitleBarVisibilityChange(function () { return _this.setYCoordinate(); }));\n        this._register(browser.onDidChangeZoomLevel(function () { return _this.setYCoordinate(); }));\n    };\n    DebugToolBar.prototype.storePosition = function () {\n        var left = dom.getComputedStyle(this.$el).left;\n        if (left) {\n            var position = parseFloat(left) / window.innerWidth;\n            this.storageService.store(DEBUG_TOOLBAR_POSITION_KEY, position, storage_1.StorageScope.GLOBAL);\n        }\n    };\n    DebugToolBar.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n        if (this.$el) {\n            this.$el.style.backgroundColor = this.getColor(exports.debugToolBarBackground);\n            var widgetShadowColor = this.getColor(colorRegistry_1.widgetShadow);\n            this.$el.style.boxShadow = widgetShadowColor ? \"0 5px 8px \" + widgetShadowColor : null;\n            var contrastBorderColor = this.getColor(colorRegistry_1.contrastBorder);\n            var borderColor = this.getColor(exports.debugToolBarBorder);\n            if (contrastBorderColor) {\n                this.$el.style.border = \"1px solid \" + contrastBorderColor;\n            }\n            else {\n                this.$el.style.border = borderColor ? \"solid \" + borderColor : 'none';\n                this.$el.style.border = '1px 0';\n            }\n        }\n    };\n    DebugToolBar.prototype.setYCoordinate = function (y) {\n        if (y === void 0) { y = 0; }\n        var titlebarOffset = this.layoutService.getTitleBarOffset();\n        this.$el.style.top = titlebarOffset + y + \"px\";\n    };\n    DebugToolBar.prototype.setCoordinates = function (x, y) {\n        if (!this.isVisible) {\n            return;\n        }\n        var widgetWidth = this.$el.clientWidth;\n        if (x === undefined) {\n            var positionPercentage = this.storageService.get(DEBUG_TOOLBAR_POSITION_KEY, storage_1.StorageScope.GLOBAL);\n            x = positionPercentage !== undefined ? parseFloat(positionPercentage) * window.innerWidth : (0.5 * window.innerWidth - 0.5 * widgetWidth);\n        }\n        x = Math.max(0, Math.min(x, window.innerWidth - widgetWidth)); // do not allow the widget to overflow on the right\n        this.$el.style.left = x + \"px\";\n        if (y === undefined) {\n            y = this.storageService.getNumber(DEBUG_TOOLBAR_Y_KEY, storage_1.StorageScope.GLOBAL, 0);\n        }\n        var titleAreaHeight = 35;\n        if ((y < titleAreaHeight / 2) || (y > titleAreaHeight + titleAreaHeight / 2)) {\n            var moveToTop = y < titleAreaHeight;\n            this.setYCoordinate(moveToTop ? 0 : titleAreaHeight);\n            this.storageService.store(DEBUG_TOOLBAR_Y_KEY, moveToTop ? 0 : 2 * titleAreaHeight, storage_1.StorageScope.GLOBAL);\n        }\n    };\n    DebugToolBar.prototype.onDidConfigurationChange = function (event) {\n        if (event.affectsConfiguration('debug.hideActionBar') || event.affectsConfiguration('debug.toolBarLocation')) {\n            this.updateScheduler.schedule();\n        }\n    };\n    DebugToolBar.prototype.show = function () {\n        if (this.isVisible) {\n            this.setCoordinates();\n            return;\n        }\n        if (!this.isBuilt) {\n            this.isBuilt = true;\n            this.layoutService.getWorkbenchElement().appendChild(this.$el);\n        }\n        this.isVisible = true;\n        dom.show(this.$el);\n        this.setCoordinates();\n    };\n    DebugToolBar.prototype.hide = function () {\n        this.isVisible = false;\n        dom.hide(this.$el);\n    };\n    DebugToolBar.getActions = function (menu, debugService, instantiationService) {\n        var actions = [];\n        menuItemActionItem_1.fillInActionBarActions(menu, undefined, actions, function () { return false; });\n        if (debugService.getViewModel().isMultiSessionView()) {\n            actions.push(instantiationService.createInstance(debugActions_1.FocusSessionAction, debugActions_1.FocusSessionAction.ID, debugActions_1.FocusSessionAction.LABEL));\n        }\n        return actions.filter(function (a) { return !(a instanceof actionbar_1.Separator); }); // do not render separators for now\n    };\n    DebugToolBar.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.$el) {\n            this.$el.remove();\n            delete this.$el;\n        }\n    };\n    DebugToolBar = tslib_1.__decorate([\n        tslib_1.__param(0, notification_1.INotificationService),\n        tslib_1.__param(1, telemetry_1.ITelemetryService),\n        tslib_1.__param(2, debug_1.IDebugService),\n        tslib_1.__param(3, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(4, storage_1.IStorageService),\n        tslib_1.__param(5, configuration_1.IConfigurationService),\n        tslib_1.__param(6, themeService_1.IThemeService),\n        tslib_1.__param(7, keybinding_1.IKeybindingService),\n        tslib_1.__param(8, contextView_1.IContextViewService),\n        tslib_1.__param(9, instantiation_1.IInstantiationService),\n        tslib_1.__param(10, actions_1.IMenuService),\n        tslib_1.__param(11, contextView_1.IContextMenuService),\n        tslib_1.__param(12, contextkey_1.IContextKeyService)\n    ], DebugToolBar);\n    return DebugToolBar;\n}(theme_1.Themable));\nexports.DebugToolBar = DebugToolBar;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugToolBar.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugToolBar.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/debugToolBar';\nimport * as errors from 'vs/base/common/errors';\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport * as arrays from 'vs/base/common/arrays';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IAction, IRunEvent } from 'vs/base/common/actions';\nimport { ActionBar, ActionsOrientation, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IDebugConfiguration, IDebugService, State } from 'vs/workbench/contrib/debug/common/debug';\nimport { FocusSessionActionItem } from 'vs/workbench/contrib/debug/browser/debugActionItems';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { Themable } from 'vs/workbench/common/theme';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { registerColor, contrastBorder, widgetShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { localize } from 'vs/nls';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextViewService, IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { fillInActionBarActions, MenuItemActionItem } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { IMenu, IMenuService, MenuId, MenuItemAction } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { FocusSessionAction } from 'vs/workbench/contrib/debug/browser/debugActions';\n\nconst DEBUG_TOOLBAR_POSITION_KEY = 'debug.actionswidgetposition';\nconst DEBUG_TOOLBAR_Y_KEY = 'debug.actionswidgety';\n\nexport const debugToolBarBackground = registerColor('debugToolBar.background', {\n\tdark: '#333333',\n\tlight: '#F3F3F3',\n\thc: '#000000'\n}, localize('debugToolBarBackground', \"Debug toolbar background color.\"));\nexport const debugToolBarBorder = registerColor('debugToolBar.border', {\n\tdark: null,\n\tlight: null,\n\thc: null\n}, localize('debugToolBarBorder', \"Debug toolbar border color.\"));\n\nexport class DebugToolBar extends Themable implements IWorkbenchContribution {\n\n\tprivate $el: HTMLElement;\n\tprivate dragArea: HTMLElement;\n\tprivate actionBar: ActionBar;\n\tprivate activeActions: IAction[];\n\tprivate updateScheduler: RunOnceScheduler;\n\tprivate debugToolBarMenu: IMenu;\n\n\tprivate isVisible: boolean;\n\tprivate isBuilt: boolean;\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.$el = dom.$('div.debug-toolbar');\n\t\tthis.$el.style.top = `${layoutService.getTitleBarOffset()}px`;\n\n\t\tthis.dragArea = dom.append(this.$el, dom.$('div.drag-area'));\n\n\t\tconst actionBarContainer = dom.append(this.$el, dom.$('div.action-bar-container'));\n\t\tthis.debugToolBarMenu = menuService.createMenu(MenuId.DebugToolBar, contextKeyService);\n\t\tthis.toDispose.push(this.debugToolBarMenu);\n\n\t\tthis.activeActions = [];\n\t\tthis.actionBar = this._register(new ActionBar(actionBarContainer, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactionItemProvider: (action: IAction) => {\n\t\t\t\tif (action.id === FocusSessionAction.ID) {\n\t\t\t\t\treturn new FocusSessionActionItem(action, this.debugService, this.themeService, contextViewService);\n\t\t\t\t}\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\treturn new MenuItemActionItem(action, this.keybindingService, this.notificationService, contextMenuService);\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tthis.updateScheduler = this._register(new RunOnceScheduler(() => {\n\t\t\tconst state = this.debugService.state;\n\t\t\tconst toolBarLocation = this.configurationService.getValue<IDebugConfiguration>('debug').toolBarLocation;\n\t\t\tif (state === State.Inactive || toolBarLocation === 'docked' || toolBarLocation === 'hidden') {\n\t\t\t\treturn this.hide();\n\t\t\t}\n\n\t\t\tconst actions = DebugToolBar.getActions(this.debugToolBarMenu, this.debugService, this.instantiationService);\n\t\t\tif (!arrays.equals(actions, this.activeActions, (first, second) => first.id === second.id)) {\n\t\t\t\tthis.actionBar.clear();\n\t\t\t\tthis.actionBar.push(actions, { icon: true, label: false });\n\t\t\t\tthis.activeActions = actions;\n\t\t\t}\n\t\t\tthis.show();\n\t\t}, 20));\n\n\t\tthis.updateStyles();\n\n\t\tthis.registerListeners();\n\n\t\tthis.hide();\n\t\tthis.isBuilt = false;\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.debugService.onDidChangeState(() => this.updateScheduler.schedule()));\n\t\tthis._register(this.debugService.getViewModel().onDidFocusSession(() => this.updateScheduler.schedule()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onDidConfigurationChange(e)));\n\t\tthis._register(this.actionBar.actionRunner.onDidRun((e: IRunEvent) => {\n\t\t\t// check for error\n\t\t\tif (e.error && !errors.isPromiseCanceledError(e.error)) {\n\t\t\t\tthis.notificationService.error(e.error);\n\t\t\t}\n\n\t\t\t// log in telemetry\n\t\t\tif (this.telemetryService) {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"workbenchActionExecuted\" : {\n\t\t\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: 'debugActionsWidget' });\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(window, dom.EventType.RESIZE, () => this.setCoordinates()));\n\n\t\tthis._register(dom.addDisposableListener(this.dragArea, dom.EventType.MOUSE_UP, (event: MouseEvent) => {\n\t\t\tconst mouseClickEvent = new StandardMouseEvent(event);\n\t\t\tif (mouseClickEvent.detail === 2) {\n\t\t\t\t// double click on debug bar centers it again #8250\n\t\t\t\tconst widgetWidth = this.$el.clientWidth;\n\t\t\t\tthis.setCoordinates(0.5 * window.innerWidth - 0.5 * widgetWidth, 0);\n\t\t\t\tthis.storePosition();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(dom.addDisposableListener(this.dragArea, dom.EventType.MOUSE_DOWN, (event: MouseEvent) => {\n\t\t\tdom.addClass(this.dragArea, 'dragged');\n\n\t\t\tconst mouseMoveListener = dom.addDisposableListener(window, 'mousemove', (e: MouseEvent) => {\n\t\t\t\tconst mouseMoveEvent = new StandardMouseEvent(e);\n\t\t\t\t// Prevent default to stop editor selecting text #8524\n\t\t\t\tmouseMoveEvent.preventDefault();\n\t\t\t\t// Reduce x by width of drag handle to reduce jarring #16604\n\t\t\t\tthis.setCoordinates(mouseMoveEvent.posx - 14, mouseMoveEvent.posy - this.layoutService.getTitleBarOffset());\n\t\t\t});\n\n\t\t\tconst mouseUpListener = dom.addDisposableListener(window, 'mouseup', (e: MouseEvent) => {\n\t\t\t\tthis.storePosition();\n\t\t\t\tdom.removeClass(this.dragArea, 'dragged');\n\n\t\t\t\tmouseMoveListener.dispose();\n\t\t\t\tmouseUpListener.dispose();\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this.layoutService.onTitleBarVisibilityChange(() => this.setYCoordinate()));\n\t\tthis._register(browser.onDidChangeZoomLevel(() => this.setYCoordinate()));\n\t}\n\n\tprivate storePosition(): void {\n\t\tconst left = dom.getComputedStyle(this.$el).left;\n\t\tif (left) {\n\t\t\tconst position = parseFloat(left) / window.innerWidth;\n\t\t\tthis.storageService.store(DEBUG_TOOLBAR_POSITION_KEY, position, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tprotected updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tif (this.$el) {\n\t\t\tthis.$el.style.backgroundColor = this.getColor(debugToolBarBackground);\n\n\t\t\tconst widgetShadowColor = this.getColor(widgetShadow);\n\t\t\tthis.$el.style.boxShadow = widgetShadowColor ? `0 5px 8px ${widgetShadowColor}` : null;\n\n\t\t\tconst contrastBorderColor = this.getColor(contrastBorder);\n\t\t\tconst borderColor = this.getColor(debugToolBarBorder);\n\n\t\t\tif (contrastBorderColor) {\n\t\t\t\tthis.$el.style.border = `1px solid ${contrastBorderColor}`;\n\t\t\t} else {\n\t\t\t\tthis.$el.style.border = borderColor ? `solid ${borderColor}` : 'none';\n\t\t\t\tthis.$el.style.border = '1px 0';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setYCoordinate(y = 0): void {\n\t\tconst titlebarOffset = this.layoutService.getTitleBarOffset();\n\t\tthis.$el.style.top = `${titlebarOffset + y}px`;\n\t}\n\n\tprivate setCoordinates(x?: number, y?: number): void {\n\t\tif (!this.isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tconst widgetWidth = this.$el.clientWidth;\n\t\tif (x === undefined) {\n\t\t\tconst positionPercentage = this.storageService.get(DEBUG_TOOLBAR_POSITION_KEY, StorageScope.GLOBAL);\n\t\t\tx = positionPercentage !== undefined ? parseFloat(positionPercentage) * window.innerWidth : (0.5 * window.innerWidth - 0.5 * widgetWidth);\n\t\t}\n\n\t\tx = Math.max(0, Math.min(x, window.innerWidth - widgetWidth)); // do not allow the widget to overflow on the right\n\t\tthis.$el.style.left = `${x}px`;\n\n\t\tif (y === undefined) {\n\t\t\ty = this.storageService.getNumber(DEBUG_TOOLBAR_Y_KEY, StorageScope.GLOBAL, 0);\n\t\t}\n\t\tconst titleAreaHeight = 35;\n\t\tif ((y < titleAreaHeight / 2) || (y > titleAreaHeight + titleAreaHeight / 2)) {\n\t\t\tconst moveToTop = y < titleAreaHeight;\n\t\t\tthis.setYCoordinate(moveToTop ? 0 : titleAreaHeight);\n\t\t\tthis.storageService.store(DEBUG_TOOLBAR_Y_KEY, moveToTop ? 0 : 2 * titleAreaHeight, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tprivate onDidConfigurationChange(event: IConfigurationChangeEvent): void {\n\t\tif (event.affectsConfiguration('debug.hideActionBar') || event.affectsConfiguration('debug.toolBarLocation')) {\n\t\t\tthis.updateScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate show(): void {\n\t\tif (this.isVisible) {\n\t\t\tthis.setCoordinates();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.isBuilt) {\n\t\t\tthis.isBuilt = true;\n\t\t\tthis.layoutService.getWorkbenchElement().appendChild(this.$el);\n\t\t}\n\n\t\tthis.isVisible = true;\n\t\tdom.show(this.$el);\n\t\tthis.setCoordinates();\n\t}\n\n\tprivate hide(): void {\n\t\tthis.isVisible = false;\n\t\tdom.hide(this.$el);\n\t}\n\n\tpublic static getActions(menu: IMenu, debugService: IDebugService, instantiationService: IInstantiationService): IAction[] {\n\t\tconst actions: IAction[] = [];\n\t\tfillInActionBarActions(menu, undefined, actions, () => false);\n\t\tif (debugService.getViewModel().isMultiSessionView()) {\n\t\t\tactions.push(instantiationService.createInstance(FocusSessionAction, FocusSessionAction.ID, FocusSessionAction.LABEL));\n\t\t}\n\n\t\treturn actions.filter(a => !(a instanceof Separator)); // do not render separators for now\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.$el) {\n\t\t\tthis.$el.remove();\n\t\t\tdelete this.$el;\n\t\t}\n\t}\n}\n"]}]}