{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/htmlContentRenderer.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/htmlContentRenderer.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DOM = require(\"vs/base/browser/dom\");\nvar idGenerator_1 = require(\"vs/base/common/idGenerator\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar htmlContent_1 = require(\"vs/base/common/htmlContent\");\nvar marked = require(\"vs/base/common/marked/marked\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar marshalling_1 = require(\"vs/base/common/marshalling\");\nvar objects_1 = require(\"vs/base/common/objects\");\nfunction createElement(options) {\n    var tagName = options.inline ? 'span' : 'div';\n    var element = document.createElement(tagName);\n    if (options.className) {\n        element.className = options.className;\n    }\n    return element;\n}\nfunction renderText(text, options) {\n    if (options === void 0) { options = {}; }\n    var element = createElement(options);\n    element.textContent = text;\n    return element;\n}\nexports.renderText = renderText;\nfunction renderFormattedText(formattedText, options) {\n    if (options === void 0) { options = {}; }\n    var element = createElement(options);\n    _renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\n    return element;\n}\nexports.renderFormattedText = renderFormattedText;\n/**\n * Create html nodes for the given content element.\n */\nfunction renderMarkdown(markdown, options) {\n    if (options === void 0) { options = {}; }\n    var element = createElement(options);\n    var _uriMassage = function (part) {\n        var data;\n        try {\n            data = marshalling_1.parse(decodeURIComponent(part));\n        }\n        catch (e) {\n            // ignore\n        }\n        if (!data) {\n            return part;\n        }\n        data = objects_1.cloneAndChange(data, function (value) {\n            if (markdown.uris && markdown.uris[value]) {\n                return uri_1.URI.revive(markdown.uris[value]);\n            }\n            else {\n                return undefined;\n            }\n        });\n        return encodeURIComponent(JSON.stringify(data));\n    };\n    var _href = function (href) {\n        var data = markdown.uris && markdown.uris[href];\n        if (!data) {\n            return href;\n        }\n        var uri = uri_1.URI.revive(data);\n        if (uri.query) {\n            uri = uri.with({ query: _uriMassage(uri.query) });\n        }\n        if (data) {\n            href = uri.toString(true);\n        }\n        return href;\n    };\n    // signal to code-block render that the\n    // element has been created\n    var signalInnerHTML;\n    var withInnerHTML = new Promise(function (c) { return signalInnerHTML = c; });\n    var renderer = new marked.Renderer();\n    renderer.image = function (href, title, text) {\n        href = _href(href);\n        var dimensions = [];\n        if (href) {\n            var splitted = href.split('|').map(function (s) { return s.trim(); });\n            href = splitted[0];\n            var parameters = splitted[1];\n            if (parameters) {\n                var heightFromParams = /height=(\\d+)/.exec(parameters);\n                var widthFromParams = /width=(\\d+)/.exec(parameters);\n                var height = heightFromParams ? heightFromParams[1] : '';\n                var width = widthFromParams ? widthFromParams[1] : '';\n                var widthIsFinite = isFinite(parseInt(width));\n                var heightIsFinite = isFinite(parseInt(height));\n                if (widthIsFinite) {\n                    dimensions.push(\"width=\\\"\" + width + \"\\\"\");\n                }\n                if (heightIsFinite) {\n                    dimensions.push(\"height=\\\"\" + height + \"\\\"\");\n                }\n            }\n        }\n        var attributes = [];\n        if (href) {\n            attributes.push(\"src=\\\"\" + href + \"\\\"\");\n        }\n        if (text) {\n            attributes.push(\"alt=\\\"\" + text + \"\\\"\");\n        }\n        if (title) {\n            attributes.push(\"title=\\\"\" + title + \"\\\"\");\n        }\n        if (dimensions.length) {\n            attributes = attributes.concat(dimensions);\n        }\n        return '<img ' + attributes.join(' ') + '>';\n    };\n    renderer.link = function (href, title, text) {\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n        if (href === text) { // raw link case\n            text = htmlContent_1.removeMarkdownEscapes(text);\n        }\n        href = _href(href);\n        title = htmlContent_1.removeMarkdownEscapes(title);\n        href = htmlContent_1.removeMarkdownEscapes(href);\n        if (!href\n            || href.match(/^data:|javascript:/i)\n            || (href.match(/^command:/i) && !markdown.isTrusted)\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\n            // drop the link\n            return text;\n        }\n        else {\n            // HTML Encode href\n            href = href.replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#39;');\n            return \"<a href=\\\"#\\\" data-href=\\\"\" + href + \"\\\" title=\\\"\" + (title || href) + \"\\\">\" + text + \"</a>\";\n        }\n    };\n    renderer.paragraph = function (text) {\n        return \"<p>\" + text + \"</p>\";\n    };\n    if (options.codeBlockRenderer) {\n        renderer.code = function (code, lang) {\n            var value = options.codeBlockRenderer(lang, code);\n            // when code-block rendering is async we return sync\n            // but update the node with the real result later.\n            var id = idGenerator_1.defaultGenerator.nextId();\n            var promise = Promise.all([value, withInnerHTML]).then(function (values) {\n                var strValue = values[0];\n                var span = element.querySelector(\"div[data-code=\\\"\" + id + \"\\\"]\");\n                if (span) {\n                    span.innerHTML = strValue;\n                }\n            }).catch(function (err) {\n                // ignore\n            });\n            if (options.codeBlockRenderCallback) {\n                promise.then(options.codeBlockRenderCallback);\n            }\n            return \"<div class=\\\"code\\\" data-code=\\\"\" + id + \"\\\">\" + strings_1.escape(code) + \"</div>\";\n        };\n    }\n    if (options.actionHandler) {\n        options.actionHandler.disposeables.push(DOM.addStandardDisposableListener(element, 'click', function (event) {\n            var target = event.target;\n            if (target.tagName !== 'A') {\n                target = target.parentElement;\n                if (!target || target.tagName !== 'A') {\n                    return;\n                }\n            }\n            try {\n                var href = target.dataset['href'];\n                if (href) {\n                    options.actionHandler.callback(href, event);\n                }\n            }\n            catch (err) {\n                errors_1.onUnexpectedError(err);\n            }\n            finally {\n                event.preventDefault();\n            }\n        }));\n    }\n    var markedOptions = {\n        sanitize: true,\n        renderer: renderer\n    };\n    element.innerHTML = marked.parse(markdown.value, markedOptions);\n    signalInnerHTML();\n    return element;\n}\nexports.renderMarkdown = renderMarkdown;\n// --- formatted string parsing\nvar StringStream = /** @class */ (function () {\n    function StringStream(source) {\n        this.source = source;\n        this.index = 0;\n    }\n    StringStream.prototype.eos = function () {\n        return this.index >= this.source.length;\n    };\n    StringStream.prototype.next = function () {\n        var next = this.peek();\n        this.advance();\n        return next;\n    };\n    StringStream.prototype.peek = function () {\n        return this.source[this.index];\n    };\n    StringStream.prototype.advance = function () {\n        this.index++;\n    };\n    return StringStream;\n}());\nvar FormatType;\n(function (FormatType) {\n    FormatType[FormatType[\"Invalid\"] = 0] = \"Invalid\";\n    FormatType[FormatType[\"Root\"] = 1] = \"Root\";\n    FormatType[FormatType[\"Text\"] = 2] = \"Text\";\n    FormatType[FormatType[\"Bold\"] = 3] = \"Bold\";\n    FormatType[FormatType[\"Italics\"] = 4] = \"Italics\";\n    FormatType[FormatType[\"Action\"] = 5] = \"Action\";\n    FormatType[FormatType[\"ActionClose\"] = 6] = \"ActionClose\";\n    FormatType[FormatType[\"NewLine\"] = 7] = \"NewLine\";\n})(FormatType || (FormatType = {}));\nfunction _renderFormattedText(element, treeNode, actionHandler) {\n    var child;\n    if (treeNode.type === FormatType.Text) {\n        child = document.createTextNode(treeNode.content || '');\n    }\n    else if (treeNode.type === FormatType.Bold) {\n        child = document.createElement('b');\n    }\n    else if (treeNode.type === FormatType.Italics) {\n        child = document.createElement('i');\n    }\n    else if (treeNode.type === FormatType.Action && actionHandler) {\n        var a = document.createElement('a');\n        a.href = '#';\n        actionHandler.disposeables.push(DOM.addStandardDisposableListener(a, 'click', function (event) {\n            actionHandler.callback(String(treeNode.index), event);\n        }));\n        child = a;\n    }\n    else if (treeNode.type === FormatType.NewLine) {\n        child = document.createElement('br');\n    }\n    else if (treeNode.type === FormatType.Root) {\n        child = element;\n    }\n    if (child && element !== child) {\n        element.appendChild(child);\n    }\n    if (child && Array.isArray(treeNode.children)) {\n        treeNode.children.forEach(function (nodeChild) {\n            _renderFormattedText(child, nodeChild, actionHandler);\n        });\n    }\n}\nfunction parseFormattedText(content) {\n    var root = {\n        type: FormatType.Root,\n        children: []\n    };\n    var actionItemIndex = 0;\n    var current = root;\n    var stack = [];\n    var stream = new StringStream(content);\n    while (!stream.eos()) {\n        var next = stream.next();\n        var isEscapedFormatType = (next === '\\\\' && formatTagType(stream.peek()) !== FormatType.Invalid);\n        if (isEscapedFormatType) {\n            next = stream.next(); // unread the backslash if it escapes a format tag type\n        }\n        if (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\n            stream.advance();\n            if (current.type === FormatType.Text) {\n                current = stack.pop();\n            }\n            var type = formatTagType(next);\n            if (current.type === type || (current.type === FormatType.Action && type === FormatType.ActionClose)) {\n                current = stack.pop();\n            }\n            else {\n                var newCurrent = {\n                    type: type,\n                    children: []\n                };\n                if (type === FormatType.Action) {\n                    newCurrent.index = actionItemIndex;\n                    actionItemIndex++;\n                }\n                current.children.push(newCurrent);\n                stack.push(current);\n                current = newCurrent;\n            }\n        }\n        else if (next === '\\n') {\n            if (current.type === FormatType.Text) {\n                current = stack.pop();\n            }\n            current.children.push({\n                type: FormatType.NewLine\n            });\n        }\n        else {\n            if (current.type !== FormatType.Text) {\n                var textCurrent = {\n                    type: FormatType.Text,\n                    content: next\n                };\n                current.children.push(textCurrent);\n                stack.push(current);\n                current = textCurrent;\n            }\n            else {\n                current.content += next;\n            }\n        }\n    }\n    if (current.type === FormatType.Text) {\n        current = stack.pop();\n    }\n    if (stack.length) {\n        // incorrectly formatted string literal\n    }\n    return root;\n}\nfunction isFormatTag(char) {\n    return formatTagType(char) !== FormatType.Invalid;\n}\nfunction formatTagType(char) {\n    switch (char) {\n        case '*':\n            return FormatType.Bold;\n        case '_':\n            return FormatType.Italics;\n        case '[':\n            return FormatType.Action;\n        case ']':\n            return FormatType.ActionClose;\n        default:\n            return FormatType.Invalid;\n    }\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/htmlContentRenderer.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/htmlContentRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport { escape } from 'vs/base/common/strings';\nimport { removeMarkdownEscapes, IMarkdownString } from 'vs/base/common/htmlContent';\nimport * as marked from 'vs/base/common/marked/marked';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { parse } from 'vs/base/common/marshalling';\nimport { cloneAndChange } from 'vs/base/common/objects';\n\nexport interface IContentActionHandler {\n\tcallback: (content: string, event?: IMouseEvent) => void;\n\tdisposeables: IDisposable[];\n}\n\nexport interface RenderOptions {\n\tclassName?: string;\n\tinline?: boolean;\n\tactionHandler?: IContentActionHandler;\n\tcodeBlockRenderer?: (modeId: string, value: string) => Promise<string>;\n\tcodeBlockRenderCallback?: () => void;\n}\n\nfunction createElement(options: RenderOptions): HTMLElement {\n\tconst tagName = options.inline ? 'span' : 'div';\n\tconst element = document.createElement(tagName);\n\tif (options.className) {\n\t\telement.className = options.className;\n\t}\n\treturn element;\n}\n\nexport function renderText(text: string, options: RenderOptions = {}): HTMLElement {\n\tconst element = createElement(options);\n\telement.textContent = text;\n\treturn element;\n}\n\nexport function renderFormattedText(formattedText: string, options: RenderOptions = {}): HTMLElement {\n\tconst element = createElement(options);\n\t_renderFormattedText(element, parseFormattedText(formattedText), options.actionHandler);\n\treturn element;\n}\n\n/**\n * Create html nodes for the given content element.\n */\nexport function renderMarkdown(markdown: IMarkdownString, options: RenderOptions = {}): HTMLElement {\n\tconst element = createElement(options);\n\n\tconst _uriMassage = function (part: string): string {\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(decodeURIComponent(part));\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tdata = cloneAndChange(data, value => {\n\t\t\tif (markdown.uris && markdown.uris[value]) {\n\t\t\t\treturn URI.revive(markdown.uris[value]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\treturn encodeURIComponent(JSON.stringify(data));\n\t};\n\n\tconst _href = function (href: string): string {\n\t\tconst data = markdown.uris && markdown.uris[href];\n\t\tif (!data) {\n\t\t\treturn href;\n\t\t}\n\t\tlet uri = URI.revive(data);\n\t\tif (uri.query) {\n\t\t\turi = uri.with({ query: _uriMassage(uri.query) });\n\t\t}\n\t\tif (data) {\n\t\t\thref = uri.toString(true);\n\t\t}\n\t\treturn href;\n\t};\n\n\t// signal to code-block render that the\n\t// element has been created\n\tlet signalInnerHTML: () => void;\n\tconst withInnerHTML = new Promise(c => signalInnerHTML = c);\n\n\tconst renderer = new marked.Renderer();\n\trenderer.image = (href: string, title: string, text: string) => {\n\t\thref = _href(href);\n\t\tlet dimensions: string[] = [];\n\t\tif (href) {\n\t\t\tconst splitted = href.split('|').map(s => s.trim());\n\t\t\thref = splitted[0];\n\t\t\tconst parameters = splitted[1];\n\t\t\tif (parameters) {\n\t\t\t\tconst heightFromParams = /height=(\\d+)/.exec(parameters);\n\t\t\t\tconst widthFromParams = /width=(\\d+)/.exec(parameters);\n\t\t\t\tconst height = heightFromParams ? heightFromParams[1] : '';\n\t\t\t\tconst width = widthFromParams ? widthFromParams[1] : '';\n\t\t\t\tconst widthIsFinite = isFinite(parseInt(width));\n\t\t\t\tconst heightIsFinite = isFinite(parseInt(height));\n\t\t\t\tif (widthIsFinite) {\n\t\t\t\t\tdimensions.push(`width=\"${width}\"`);\n\t\t\t\t}\n\t\t\t\tif (heightIsFinite) {\n\t\t\t\t\tdimensions.push(`height=\"${height}\"`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet attributes: string[] = [];\n\t\tif (href) {\n\t\t\tattributes.push(`src=\"${href}\"`);\n\t\t}\n\t\tif (text) {\n\t\t\tattributes.push(`alt=\"${text}\"`);\n\t\t}\n\t\tif (title) {\n\t\t\tattributes.push(`title=\"${title}\"`);\n\t\t}\n\t\tif (dimensions.length) {\n\t\t\tattributes = attributes.concat(dimensions);\n\t\t}\n\t\treturn '<img ' + attributes.join(' ') + '>';\n\t};\n\trenderer.link = (href, title, text): string => {\n\t\t// Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n\t\tif (href === text) { // raw link case\n\t\t\ttext = removeMarkdownEscapes(text);\n\t\t}\n\t\thref = _href(href);\n\t\ttitle = removeMarkdownEscapes(title);\n\t\thref = removeMarkdownEscapes(href);\n\t\tif (\n\t\t\t!href\n\t\t\t|| href.match(/^data:|javascript:/i)\n\t\t\t|| (href.match(/^command:/i) && !markdown.isTrusted)\n\t\t\t|| href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)\n\t\t) {\n\t\t\t// drop the link\n\t\t\treturn text;\n\n\t\t} else {\n\t\t\t// HTML Encode href\n\t\t\thref = href.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;')\n\t\t\t\t.replace(/'/g, '&#39;');\n\t\t\treturn `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\n\t\t}\n\t};\n\trenderer.paragraph = (text): string => {\n\t\treturn `<p>${text}</p>`;\n\t};\n\n\tif (options.codeBlockRenderer) {\n\t\trenderer.code = (code, lang) => {\n\t\t\tconst value = options.codeBlockRenderer!(lang, code);\n\t\t\t// when code-block rendering is async we return sync\n\t\t\t// but update the node with the real result later.\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst promise = Promise.all([value, withInnerHTML]).then(values => {\n\t\t\t\tconst strValue = values[0];\n\t\t\t\tconst span = element.querySelector(`div[data-code=\"${id}\"]`);\n\t\t\t\tif (span) {\n\t\t\t\t\tspan.innerHTML = strValue;\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\t// ignore\n\t\t\t});\n\n\t\t\tif (options.codeBlockRenderCallback) {\n\t\t\t\tpromise.then(options.codeBlockRenderCallback);\n\t\t\t}\n\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\n\t\t};\n\t}\n\n\tif (options.actionHandler) {\n\t\toptions.actionHandler.disposeables.push(DOM.addStandardDisposableListener(element, 'click', event => {\n\t\t\tlet target: HTMLElement | null = event.target;\n\t\t\tif (target.tagName !== 'A') {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t\tif (!target || target.tagName !== 'A') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst href = target.dataset['href'];\n\t\t\t\tif (href) {\n\t\t\t\t\toptions.actionHandler!.callback(href, event);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}));\n\t}\n\n\tconst markedOptions: marked.MarkedOptions = {\n\t\tsanitize: true,\n\t\trenderer\n\t};\n\n\telement.innerHTML = marked.parse(markdown.value, markedOptions);\n\tsignalInnerHTML!();\n\n\treturn element;\n}\n\n// --- formatted string parsing\n\nclass StringStream {\n\tprivate source: string;\n\tprivate index: number;\n\n\tconstructor(source: string) {\n\t\tthis.source = source;\n\t\tthis.index = 0;\n\t}\n\n\tpublic eos(): boolean {\n\t\treturn this.index >= this.source.length;\n\t}\n\n\tpublic next(): string {\n\t\tconst next = this.peek();\n\t\tthis.advance();\n\t\treturn next;\n\t}\n\n\tpublic peek(): string {\n\t\treturn this.source[this.index];\n\t}\n\n\tpublic advance(): void {\n\t\tthis.index++;\n\t}\n}\n\nconst enum FormatType {\n\tInvalid,\n\tRoot,\n\tText,\n\tBold,\n\tItalics,\n\tAction,\n\tActionClose,\n\tNewLine\n}\n\ninterface IFormatParseTree {\n\ttype: FormatType;\n\tcontent?: string;\n\tindex?: number;\n\tchildren?: IFormatParseTree[];\n}\n\nfunction _renderFormattedText(element: Node, treeNode: IFormatParseTree, actionHandler?: IContentActionHandler) {\n\tlet child: Node | undefined;\n\n\tif (treeNode.type === FormatType.Text) {\n\t\tchild = document.createTextNode(treeNode.content || '');\n\t}\n\telse if (treeNode.type === FormatType.Bold) {\n\t\tchild = document.createElement('b');\n\t}\n\telse if (treeNode.type === FormatType.Italics) {\n\t\tchild = document.createElement('i');\n\t}\n\telse if (treeNode.type === FormatType.Action && actionHandler) {\n\t\tconst a = document.createElement('a');\n\t\ta.href = '#';\n\t\tactionHandler.disposeables.push(DOM.addStandardDisposableListener(a, 'click', (event) => {\n\t\t\tactionHandler.callback(String(treeNode.index), event);\n\t\t}));\n\n\t\tchild = a;\n\t}\n\telse if (treeNode.type === FormatType.NewLine) {\n\t\tchild = document.createElement('br');\n\t}\n\telse if (treeNode.type === FormatType.Root) {\n\t\tchild = element;\n\t}\n\n\tif (child && element !== child) {\n\t\telement.appendChild(child);\n\t}\n\n\tif (child && Array.isArray(treeNode.children)) {\n\t\ttreeNode.children.forEach((nodeChild) => {\n\t\t\t_renderFormattedText(child!, nodeChild, actionHandler);\n\t\t});\n\t}\n}\n\nfunction parseFormattedText(content: string): IFormatParseTree {\n\n\tconst root: IFormatParseTree = {\n\t\ttype: FormatType.Root,\n\t\tchildren: []\n\t};\n\n\tlet actionItemIndex = 0;\n\tlet current = root;\n\tconst stack: IFormatParseTree[] = [];\n\tconst stream = new StringStream(content);\n\n\twhile (!stream.eos()) {\n\t\tlet next = stream.next();\n\n\t\tconst isEscapedFormatType = (next === '\\\\' && formatTagType(stream.peek()) !== FormatType.Invalid);\n\t\tif (isEscapedFormatType) {\n\t\t\tnext = stream.next(); // unread the backslash if it escapes a format tag type\n\t\t}\n\n\t\tif (!isEscapedFormatType && isFormatTag(next) && next === stream.peek()) {\n\t\t\tstream.advance();\n\n\t\t\tif (current.type === FormatType.Text) {\n\t\t\t\tcurrent = stack.pop()!;\n\t\t\t}\n\n\t\t\tconst type = formatTagType(next);\n\t\t\tif (current.type === type || (current.type === FormatType.Action && type === FormatType.ActionClose)) {\n\t\t\t\tcurrent = stack.pop()!;\n\t\t\t} else {\n\t\t\t\tconst newCurrent: IFormatParseTree = {\n\t\t\t\t\ttype: type,\n\t\t\t\t\tchildren: []\n\t\t\t\t};\n\n\t\t\t\tif (type === FormatType.Action) {\n\t\t\t\t\tnewCurrent.index = actionItemIndex;\n\t\t\t\t\tactionItemIndex++;\n\t\t\t\t}\n\n\t\t\t\tcurrent.children!.push(newCurrent);\n\t\t\t\tstack.push(current);\n\t\t\t\tcurrent = newCurrent;\n\t\t\t}\n\t\t} else if (next === '\\n') {\n\t\t\tif (current.type === FormatType.Text) {\n\t\t\t\tcurrent = stack.pop()!;\n\t\t\t}\n\n\t\t\tcurrent.children!.push({\n\t\t\t\ttype: FormatType.NewLine\n\t\t\t});\n\n\t\t} else {\n\t\t\tif (current.type !== FormatType.Text) {\n\t\t\t\tconst textCurrent: IFormatParseTree = {\n\t\t\t\t\ttype: FormatType.Text,\n\t\t\t\t\tcontent: next\n\t\t\t\t};\n\t\t\t\tcurrent.children!.push(textCurrent);\n\t\t\t\tstack.push(current);\n\t\t\t\tcurrent = textCurrent;\n\n\t\t\t} else {\n\t\t\t\tcurrent.content += next;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (current.type === FormatType.Text) {\n\t\tcurrent = stack.pop()!;\n\t}\n\n\tif (stack.length) {\n\t\t// incorrectly formatted string literal\n\t}\n\n\treturn root;\n}\n\nfunction isFormatTag(char: string): boolean {\n\treturn formatTagType(char) !== FormatType.Invalid;\n}\n\nfunction formatTagType(char: string): FormatType {\n\tswitch (char) {\n\t\tcase '*':\n\t\t\treturn FormatType.Bold;\n\t\tcase '_':\n\t\t\treturn FormatType.Italics;\n\t\tcase '[':\n\t\t\treturn FormatType.Action;\n\t\tcase ']':\n\t\t\treturn FormatType.ActionClose;\n\t\tdefault:\n\t\t\treturn FormatType.Invalid;\n\t}\n}\n"]}]}