{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/title/common/titleService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/title/common/titleService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.ITitleService = instantiation_1.createDecorator('titleService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/title/common/titleService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/title/common/titleService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAGpE,QAAA,aAAa,GAAG,+BAAe,CAAgB,cAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport const ITitleService = createDecorator<ITitleService>('titleService');\n\nexport interface ITitleProperties {\n\tisPure?: boolean;\n\tisAdmin?: boolean;\n}\n\nexport interface ITitleService {\n\t_serviceBrand: any;\n\n\t/**\n\t * An event when the menubar visibility changes.\n\t */\n\treadonly onMenubarVisibilityChange: Event<boolean>;\n\n\t/**\n\t * Update some environmental title properties.\n\t */\n\tupdateProperties(properties: ITitleProperties): void;\n}"]}]}