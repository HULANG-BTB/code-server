{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadQuickOpen.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadQuickOpen.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar MainThreadQuickOpen = /** @class */ (function () {\n    function MainThreadQuickOpen(extHostContext, quickInputService) {\n        this._items = {};\n        // ---- QuickInput\n        this.sessions = new Map();\n        this._proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostQuickOpen);\n        this._quickInputService = quickInputService;\n    }\n    MainThreadQuickOpen.prototype.dispose = function () {\n    };\n    MainThreadQuickOpen.prototype.$show = function (instance, options, token) {\n        var _this = this;\n        var contents = new Promise(function (resolve, reject) {\n            _this._items[instance] = { resolve: resolve, reject: reject };\n        });\n        options = tslib_1.__assign({}, options, { onDidFocus: function (el) {\n                if (el) {\n                    _this._proxy.$onItemSelected(el.handle);\n                }\n            } });\n        if (options.canPickMany) {\n            return this._quickInputService.pick(contents, options, token).then(function (items) {\n                if (items) {\n                    return items.map(function (item) { return item.handle; });\n                }\n                return undefined;\n            });\n        }\n        else {\n            return this._quickInputService.pick(contents, options, token).then(function (item) {\n                if (item) {\n                    return item.handle;\n                }\n                return undefined;\n            });\n        }\n    };\n    MainThreadQuickOpen.prototype.$setItems = function (instance, items) {\n        if (this._items[instance]) {\n            this._items[instance].resolve(items);\n            delete this._items[instance];\n        }\n        return Promise.resolve();\n    };\n    MainThreadQuickOpen.prototype.$setError = function (instance, error) {\n        if (this._items[instance]) {\n            this._items[instance].reject(error);\n            delete this._items[instance];\n        }\n        return Promise.resolve();\n    };\n    // ---- input\n    MainThreadQuickOpen.prototype.$input = function (options, validateInput, token) {\n        var _this = this;\n        var inputOptions = Object.create(null);\n        if (options) {\n            inputOptions.password = options.password;\n            inputOptions.placeHolder = options.placeHolder;\n            inputOptions.valueSelection = options.valueSelection;\n            inputOptions.prompt = options.prompt;\n            inputOptions.value = options.value;\n            inputOptions.ignoreFocusLost = options.ignoreFocusOut;\n        }\n        if (validateInput) {\n            inputOptions.validateInput = function (value) {\n                return _this._proxy.$validateInput(value);\n            };\n        }\n        return this._quickInputService.input(inputOptions, token);\n    };\n    MainThreadQuickOpen.prototype.$createOrUpdate = function (params) {\n        var _this = this;\n        var sessionId = params.id;\n        var session = this.sessions.get(sessionId);\n        if (!session) {\n            if (params.type === 'quickPick') {\n                var input_1 = this._quickInputService.createQuickPick();\n                input_1.onDidAccept(function () {\n                    _this._proxy.$onDidAccept(sessionId);\n                });\n                input_1.onDidChangeActive(function (items) {\n                    _this._proxy.$onDidChangeActive(sessionId, items.map(function (item) { return item.handle; }));\n                });\n                input_1.onDidChangeSelection(function (items) {\n                    _this._proxy.$onDidChangeSelection(sessionId, items.map(function (item) { return item.handle; }));\n                });\n                input_1.onDidTriggerButton(function (button) {\n                    _this._proxy.$onDidTriggerButton(sessionId, button.handle);\n                });\n                input_1.onDidChangeValue(function (value) {\n                    _this._proxy.$onDidChangeValue(sessionId, value);\n                });\n                input_1.onDidHide(function () {\n                    _this._proxy.$onDidHide(sessionId);\n                });\n                session = {\n                    input: input_1,\n                    handlesToItems: new Map()\n                };\n            }\n            else {\n                var input_2 = this._quickInputService.createInputBox();\n                input_2.onDidAccept(function () {\n                    _this._proxy.$onDidAccept(sessionId);\n                });\n                input_2.onDidTriggerButton(function (button) {\n                    _this._proxy.$onDidTriggerButton(sessionId, button.handle);\n                });\n                input_2.onDidChangeValue(function (value) {\n                    _this._proxy.$onDidChangeValue(sessionId, value);\n                });\n                input_2.onDidHide(function () {\n                    _this._proxy.$onDidHide(sessionId);\n                });\n                session = {\n                    input: input_2,\n                    handlesToItems: new Map()\n                };\n            }\n            this.sessions.set(sessionId, session);\n        }\n        var input = session.input, handlesToItems = session.handlesToItems;\n        for (var param in params) {\n            if (param === 'id' || param === 'type') {\n                continue;\n            }\n            if (param === 'visible') {\n                if (params.visible) {\n                    input.show();\n                }\n                else {\n                    input.hide();\n                }\n            }\n            else if (param === 'items') {\n                handlesToItems.clear();\n                params[param].forEach(function (item) {\n                    handlesToItems.set(item.handle, item);\n                });\n                input[param] = params[param];\n            }\n            else if (param === 'activeItems' || param === 'selectedItems') {\n                input[param] = params[param]\n                    .filter(function (handle) { return handlesToItems.has(handle); })\n                    .map(function (handle) { return handlesToItems.get(handle); });\n            }\n            else if (param === 'buttons') {\n                input[param] = params.buttons.map(function (button) {\n                    if (button.handle === -1) {\n                        return _this._quickInputService.backButton;\n                    }\n                    var iconPath = button.iconPath, tooltip = button.tooltip, handle = button.handle;\n                    return {\n                        iconPath: iconPath && {\n                            dark: uri_1.URI.revive(iconPath.dark),\n                            light: iconPath.light && uri_1.URI.revive(iconPath.light)\n                        },\n                        tooltip: tooltip,\n                        handle: handle\n                    };\n                });\n            }\n            else {\n                input[param] = params[param];\n            }\n        }\n        return Promise.resolve(undefined);\n    };\n    MainThreadQuickOpen.prototype.$dispose = function (sessionId) {\n        var session = this.sessions.get(sessionId);\n        if (session) {\n            session.input.dispose();\n            this.sessions.delete(sessionId);\n        }\n        return Promise.resolve(undefined);\n    };\n    MainThreadQuickOpen = tslib_1.__decorate([\n        extHostCustomers_1.extHostNamedCustomer(extHost_protocol_1.MainContext.MainThreadQuickOpen),\n        tslib_1.__param(1, quickInput_1.IQuickInputService)\n    ], MainThreadQuickOpen);\n    return MainThreadQuickOpen;\n}());\nexports.MainThreadQuickOpen = MainThreadQuickOpen;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadQuickOpen.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadQuickOpen.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPickOptions, IInputOptions, IQuickInputService, IQuickInput } from 'vs/platform/quickinput/common/quickInput';\nimport { ExtHostContext, MainThreadQuickOpenShape, ExtHostQuickOpenShape, TransferQuickPickItems, MainContext, IExtHostContext, TransferQuickInput, TransferQuickInputButton, IInputBoxOptions } from 'vs/workbench/api/common/extHost.protocol';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\ninterface QuickInputSession {\n\tinput: IQuickInput;\n\thandlesToItems: Map<number, TransferQuickPickItems>;\n}\n\n@extHostNamedCustomer(MainContext.MainThreadQuickOpen)\nexport class MainThreadQuickOpen implements MainThreadQuickOpenShape {\n\n\tprivate readonly _proxy: ExtHostQuickOpenShape;\n\tprivate readonly _quickInputService: IQuickInputService;\n\tprivate readonly _items: Record<number, {\n\t\tresolve(items: TransferQuickPickItems[]): void;\n\t\treject(error: Error): void;\n\t}> = {};\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IQuickInputService quickInputService: IQuickInputService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostQuickOpen);\n\t\tthis._quickInputService = quickInputService;\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\t$show(instance: number, options: IPickOptions<TransferQuickPickItems>, token: CancellationToken): Promise<number | number[] | undefined> {\n\t\tconst contents = new Promise<TransferQuickPickItems[]>((resolve, reject) => {\n\t\t\tthis._items[instance] = { resolve, reject };\n\t\t});\n\n\t\toptions = {\n\t\t\t...options,\n\t\t\tonDidFocus: el => {\n\t\t\t\tif (el) {\n\t\t\t\t\tthis._proxy.$onItemSelected((<TransferQuickPickItems>el).handle);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (options.canPickMany) {\n\t\t\treturn this._quickInputService.pick(contents, options as { canPickMany: true }, token).then(items => {\n\t\t\t\tif (items) {\n\t\t\t\t\treturn items.map(item => item.handle);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t} else {\n\t\t\treturn this._quickInputService.pick(contents, options, token).then(item => {\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.handle;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\t$setItems(instance: number, items: TransferQuickPickItems[]): Promise<void> {\n\t\tif (this._items[instance]) {\n\t\t\tthis._items[instance].resolve(items);\n\t\t\tdelete this._items[instance];\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t$setError(instance: number, error: Error): Promise<void> {\n\t\tif (this._items[instance]) {\n\t\t\tthis._items[instance].reject(error);\n\t\t\tdelete this._items[instance];\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t// ---- input\n\n\t$input(options: IInputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string> {\n\t\tconst inputOptions: IInputOptions = Object.create(null);\n\n\t\tif (options) {\n\t\t\tinputOptions.password = options.password;\n\t\t\tinputOptions.placeHolder = options.placeHolder;\n\t\t\tinputOptions.valueSelection = options.valueSelection;\n\t\t\tinputOptions.prompt = options.prompt;\n\t\t\tinputOptions.value = options.value;\n\t\t\tinputOptions.ignoreFocusLost = options.ignoreFocusOut;\n\t\t}\n\n\t\tif (validateInput) {\n\t\t\tinputOptions.validateInput = (value) => {\n\t\t\t\treturn this._proxy.$validateInput(value);\n\t\t\t};\n\t\t}\n\n\t\treturn this._quickInputService.input(inputOptions, token);\n\t}\n\n\t// ---- QuickInput\n\n\tprivate sessions = new Map<number, QuickInputSession>();\n\n\t$createOrUpdate(params: TransferQuickInput): Promise<void> {\n\t\tconst sessionId = params.id;\n\t\tlet session = this.sessions.get(sessionId);\n\t\tif (!session) {\n\t\t\tif (params.type === 'quickPick') {\n\t\t\t\tconst input = this._quickInputService.createQuickPick();\n\t\t\t\tinput.onDidAccept(() => {\n\t\t\t\t\tthis._proxy.$onDidAccept(sessionId);\n\t\t\t\t});\n\t\t\t\tinput.onDidChangeActive(items => {\n\t\t\t\t\tthis._proxy.$onDidChangeActive(sessionId, items.map(item => (item as TransferQuickPickItems).handle));\n\t\t\t\t});\n\t\t\t\tinput.onDidChangeSelection(items => {\n\t\t\t\t\tthis._proxy.$onDidChangeSelection(sessionId, items.map(item => (item as TransferQuickPickItems).handle));\n\t\t\t\t});\n\t\t\t\tinput.onDidTriggerButton(button => {\n\t\t\t\t\tthis._proxy.$onDidTriggerButton(sessionId, (button as TransferQuickInputButton).handle);\n\t\t\t\t});\n\t\t\t\tinput.onDidChangeValue(value => {\n\t\t\t\t\tthis._proxy.$onDidChangeValue(sessionId, value);\n\t\t\t\t});\n\t\t\t\tinput.onDidHide(() => {\n\t\t\t\t\tthis._proxy.$onDidHide(sessionId);\n\t\t\t\t});\n\t\t\t\tsession = {\n\t\t\t\t\tinput,\n\t\t\t\t\thandlesToItems: new Map()\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst input = this._quickInputService.createInputBox();\n\t\t\t\tinput.onDidAccept(() => {\n\t\t\t\t\tthis._proxy.$onDidAccept(sessionId);\n\t\t\t\t});\n\t\t\t\tinput.onDidTriggerButton(button => {\n\t\t\t\t\tthis._proxy.$onDidTriggerButton(sessionId, (button as TransferQuickInputButton).handle);\n\t\t\t\t});\n\t\t\t\tinput.onDidChangeValue(value => {\n\t\t\t\t\tthis._proxy.$onDidChangeValue(sessionId, value);\n\t\t\t\t});\n\t\t\t\tinput.onDidHide(() => {\n\t\t\t\t\tthis._proxy.$onDidHide(sessionId);\n\t\t\t\t});\n\t\t\t\tsession = {\n\t\t\t\t\tinput,\n\t\t\t\t\thandlesToItems: new Map()\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.sessions.set(sessionId, session);\n\t\t}\n\t\tconst { input, handlesToItems } = session;\n\t\tfor (const param in params) {\n\t\t\tif (param === 'id' || param === 'type') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (param === 'visible') {\n\t\t\t\tif (params.visible) {\n\t\t\t\t\tinput.show();\n\t\t\t\t} else {\n\t\t\t\t\tinput.hide();\n\t\t\t\t}\n\t\t\t} else if (param === 'items') {\n\t\t\t\thandlesToItems.clear();\n\t\t\t\tparams[param].forEach((item: TransferQuickPickItems) => {\n\t\t\t\t\thandlesToItems.set(item.handle, item);\n\t\t\t\t});\n\t\t\t\tinput[param] = params[param];\n\t\t\t} else if (param === 'activeItems' || param === 'selectedItems') {\n\t\t\t\tinput[param] = params[param]\n\t\t\t\t\t.filter((handle: number) => handlesToItems.has(handle))\n\t\t\t\t\t.map((handle: number) => handlesToItems.get(handle));\n\t\t\t} else if (param === 'buttons') {\n\t\t\t\tinput[param] = params.buttons!.map(button => {\n\t\t\t\t\tif (button.handle === -1) {\n\t\t\t\t\t\treturn this._quickInputService.backButton;\n\t\t\t\t\t}\n\t\t\t\t\tconst { iconPath, tooltip, handle } = button;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ticonPath: iconPath && {\n\t\t\t\t\t\t\tdark: URI.revive(iconPath.dark),\n\t\t\t\t\t\t\tlight: iconPath.light && URI.revive(iconPath.light)\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\thandle\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinput[param] = params[param];\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$dispose(sessionId: number): Promise<void> {\n\t\tconst session = this.sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession.input.dispose();\n\t\t\tthis.sessions.delete(sessionId);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n"]}]}