{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/editorDom.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/editorDom.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar globalMouseMoveMonitor_1 = require(\"vs/base/browser/globalMouseMoveMonitor\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nvar PageCoordinates = /** @class */ (function () {\n    function PageCoordinates(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    PageCoordinates.prototype.toClientCoordinates = function () {\n        return new ClientCoordinates(this.x - dom.StandardWindow.scrollX, this.y - dom.StandardWindow.scrollY);\n    };\n    return PageCoordinates;\n}());\nexports.PageCoordinates = PageCoordinates;\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nvar ClientCoordinates = /** @class */ (function () {\n    function ClientCoordinates(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n    }\n    ClientCoordinates.prototype.toPageCoordinates = function () {\n        return new PageCoordinates(this.clientX + dom.StandardWindow.scrollX, this.clientY + dom.StandardWindow.scrollY);\n    };\n    return ClientCoordinates;\n}());\nexports.ClientCoordinates = ClientCoordinates;\n/**\n * The position of the editor in the page.\n */\nvar EditorPagePosition = /** @class */ (function () {\n    function EditorPagePosition(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return EditorPagePosition;\n}());\nexports.EditorPagePosition = EditorPagePosition;\nfunction createEditorPagePosition(editorViewDomNode) {\n    var editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexports.createEditorPagePosition = createEditorPagePosition;\nvar EditorMouseEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(EditorMouseEvent, _super);\n    function EditorMouseEvent(e, editorViewDomNode) {\n        var _this = _super.call(this, e) || this;\n        _this.pos = new PageCoordinates(_this.posx, _this.posy);\n        _this.editorPos = createEditorPagePosition(editorViewDomNode);\n        return _this;\n    }\n    return EditorMouseEvent;\n}(mouseEvent_1.StandardMouseEvent));\nexports.EditorMouseEvent = EditorMouseEvent;\nvar EditorMouseEventFactory = /** @class */ (function () {\n    function EditorMouseEventFactory(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    EditorMouseEventFactory.prototype._create = function (e) {\n        return new EditorMouseEvent(e, this._editorViewDomNode);\n    };\n    EditorMouseEventFactory.prototype.onContextMenu = function (target, callback) {\n        var _this = this;\n        return dom.addDisposableListener(target, 'contextmenu', function (e) {\n            callback(_this._create(e));\n        });\n    };\n    EditorMouseEventFactory.prototype.onMouseUp = function (target, callback) {\n        var _this = this;\n        return dom.addDisposableListener(target, 'mouseup', function (e) {\n            callback(_this._create(e));\n        });\n    };\n    EditorMouseEventFactory.prototype.onMouseDown = function (target, callback) {\n        var _this = this;\n        return dom.addDisposableListener(target, 'mousedown', function (e) {\n            callback(_this._create(e));\n        });\n    };\n    EditorMouseEventFactory.prototype.onMouseLeave = function (target, callback) {\n        var _this = this;\n        return dom.addDisposableNonBubblingMouseOutListener(target, function (e) {\n            callback(_this._create(e));\n        });\n    };\n    EditorMouseEventFactory.prototype.onMouseMoveThrottled = function (target, callback, merger, minimumTimeMs) {\n        var _this = this;\n        var myMerger = function (lastEvent, currentEvent) {\n            return merger(lastEvent, _this._create(currentEvent));\n        };\n        return dom.addDisposableThrottledListener(target, 'mousemove', callback, myMerger, minimumTimeMs);\n    };\n    return EditorMouseEventFactory;\n}());\nexports.EditorMouseEventFactory = EditorMouseEventFactory;\nvar GlobalEditorMouseMoveMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(GlobalEditorMouseMoveMonitor, _super);\n    function GlobalEditorMouseMoveMonitor(editorViewDomNode) {\n        var _this = _super.call(this) || this;\n        _this._editorViewDomNode = editorViewDomNode;\n        _this._globalMouseMoveMonitor = _this._register(new globalMouseMoveMonitor_1.GlobalMouseMoveMonitor());\n        _this._keydownListener = null;\n        return _this;\n    }\n    GlobalEditorMouseMoveMonitor.prototype.startMonitoring = function (merger, mouseMoveCallback, onStopCallback) {\n        var _this = this;\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(document, 'keydown', function (e) {\n            var kb = e.toKeybinding();\n            if (kb.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            _this._globalMouseMoveMonitor.stopMonitoring(true);\n        }, true);\n        var myMerger = function (lastEvent, currentEvent) {\n            return merger(lastEvent, new EditorMouseEvent(currentEvent, _this._editorViewDomNode));\n        };\n        this._globalMouseMoveMonitor.startMonitoring(myMerger, mouseMoveCallback, function () {\n            _this._keydownListener.dispose();\n            onStopCallback();\n        });\n    };\n    return GlobalEditorMouseMoveMonitor;\n}(lifecycle_1.Disposable));\nexports.GlobalEditorMouseMoveMonitor = GlobalEditorMouseMoveMonitor;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/editorDom.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/editorDom.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { GlobalMouseMoveMonitor } from 'vs/base/browser/globalMouseMoveMonitor';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n\t_pageCoordinatesBrand: void;\n\n\tconstructor(\n\t\tpublic readonly x: number,\n\t\tpublic readonly y: number\n\t) { }\n\n\tpublic toClientCoordinates(): ClientCoordinates {\n\t\treturn new ClientCoordinates(this.x - dom.StandardWindow.scrollX, this.y - dom.StandardWindow.scrollY);\n\t}\n}\n\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n\t_clientCoordinatesBrand: void;\n\n\tconstructor(\n\t\tpublic readonly clientX: number,\n\t\tpublic readonly clientY: number\n\t) { }\n\n\tpublic toPageCoordinates(): PageCoordinates {\n\t\treturn new PageCoordinates(this.clientX + dom.StandardWindow.scrollX, this.clientY + dom.StandardWindow.scrollY);\n\t}\n}\n\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n\t_editorPagePositionBrand: void;\n\n\tconstructor(\n\t\tpublic readonly x: number,\n\t\tpublic readonly y: number,\n\t\tpublic readonly width: number,\n\t\tpublic readonly height: number\n\t) { }\n}\n\nexport function createEditorPagePosition(editorViewDomNode: HTMLElement): EditorPagePosition {\n\tconst editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n\treturn new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\n\nexport class EditorMouseEvent extends StandardMouseEvent {\n\t_editorMouseEventBrand: void;\n\n\t/**\n\t * Coordinates relative to the whole document.\n\t */\n\tpublic readonly pos: PageCoordinates;\n\n\t/**\n\t * Editor's coordinates relative to the whole document.\n\t */\n\tpublic readonly editorPos: EditorPagePosition;\n\n\tconstructor(e: MouseEvent, editorViewDomNode: HTMLElement) {\n\t\tsuper(e);\n\t\tthis.pos = new PageCoordinates(this.posx, this.posy);\n\t\tthis.editorPos = createEditorPagePosition(editorViewDomNode);\n\t}\n}\n\nexport interface EditorMouseEventMerger {\n\t(lastEvent: EditorMouseEvent, currentEvent: EditorMouseEvent): EditorMouseEvent;\n}\n\nexport class EditorMouseEventFactory {\n\n\tprivate readonly _editorViewDomNode: HTMLElement;\n\n\tconstructor(editorViewDomNode: HTMLElement) {\n\t\tthis._editorViewDomNode = editorViewDomNode;\n\t}\n\n\tprivate _create(e: MouseEvent): EditorMouseEvent {\n\t\treturn new EditorMouseEvent(e, this._editorViewDomNode);\n\t}\n\n\tpublic onContextMenu(target: HTMLElement, callback: (e: EditorMouseEvent) => void): IDisposable {\n\t\treturn dom.addDisposableListener(target, 'contextmenu', (e: MouseEvent) => {\n\t\t\tcallback(this._create(e));\n\t\t});\n\t}\n\n\tpublic onMouseUp(target: HTMLElement, callback: (e: EditorMouseEvent) => void): IDisposable {\n\t\treturn dom.addDisposableListener(target, 'mouseup', (e: MouseEvent) => {\n\t\t\tcallback(this._create(e));\n\t\t});\n\t}\n\n\tpublic onMouseDown(target: HTMLElement, callback: (e: EditorMouseEvent) => void): IDisposable {\n\t\treturn dom.addDisposableListener(target, 'mousedown', (e: MouseEvent) => {\n\t\t\tcallback(this._create(e));\n\t\t});\n\t}\n\n\tpublic onMouseLeave(target: HTMLElement, callback: (e: EditorMouseEvent) => void): IDisposable {\n\t\treturn dom.addDisposableNonBubblingMouseOutListener(target, (e: MouseEvent) => {\n\t\t\tcallback(this._create(e));\n\t\t});\n\t}\n\n\tpublic onMouseMoveThrottled(target: HTMLElement, callback: (e: EditorMouseEvent) => void, merger: EditorMouseEventMerger, minimumTimeMs: number): IDisposable {\n\t\tconst myMerger: dom.IEventMerger<EditorMouseEvent, MouseEvent> = (lastEvent: EditorMouseEvent, currentEvent: MouseEvent): EditorMouseEvent => {\n\t\t\treturn merger(lastEvent, this._create(currentEvent));\n\t\t};\n\t\treturn dom.addDisposableThrottledListener<EditorMouseEvent, MouseEvent>(target, 'mousemove', callback, myMerger, minimumTimeMs);\n\t}\n}\n\nexport class GlobalEditorMouseMoveMonitor extends Disposable {\n\n\tprivate readonly _editorViewDomNode: HTMLElement;\n\tprivate readonly _globalMouseMoveMonitor: GlobalMouseMoveMonitor<EditorMouseEvent>;\n\tprivate _keydownListener: IDisposable | null;\n\n\tconstructor(editorViewDomNode: HTMLElement) {\n\t\tsuper();\n\t\tthis._editorViewDomNode = editorViewDomNode;\n\t\tthis._globalMouseMoveMonitor = this._register(new GlobalMouseMoveMonitor<EditorMouseEvent>());\n\t\tthis._keydownListener = null;\n\t}\n\n\tpublic startMonitoring(merger: EditorMouseEventMerger, mouseMoveCallback: (e: EditorMouseEvent) => void, onStopCallback: () => void): void {\n\n\t\t// Add a <<capture>> keydown event listener that will cancel the monitoring\n\t\t// if something other than a modifier key is pressed\n\t\tthis._keydownListener = dom.addStandardDisposableListener(<any>document, 'keydown', (e) => {\n\t\t\tconst kb = e.toKeybinding();\n\t\t\tif (kb.isModifierKey()) {\n\t\t\t\t// Allow modifier keys\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._globalMouseMoveMonitor.stopMonitoring(true);\n\t\t}, true);\n\n\t\tconst myMerger: dom.IEventMerger<EditorMouseEvent, MouseEvent> = (lastEvent: EditorMouseEvent, currentEvent: MouseEvent): EditorMouseEvent => {\n\t\t\treturn merger(lastEvent, new EditorMouseEvent(currentEvent, this._editorViewDomNode));\n\t\t};\n\n\t\tthis._globalMouseMoveMonitor.startMonitoring(myMerger, mouseMoveCallback, () => {\n\t\t\tthis._keydownListener!.dispose();\n\t\t\tonStopCallback();\n\t\t});\n\t}\n}\n"]}]}