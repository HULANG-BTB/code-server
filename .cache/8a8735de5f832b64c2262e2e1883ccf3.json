{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugHover.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugHover.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar lifecycle = require(\"vs/base/common/lifecycle\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar scrollable_1 = require(\"vs/base/common/scrollable\");\nvar dom = require(\"vs/base/browser/dom\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar debugModel_1 = require(\"vs/workbench/contrib/debug/common/debugModel\");\nvar baseDebugView_1 = require(\"vs/workbench/contrib/debug/browser/baseDebugView\");\nvar scrollableElement_1 = require(\"vs/base/browser/ui/scrollbar/scrollableElement\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar debugUtils_1 = require(\"vs/workbench/contrib/debug/common/debugUtils\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar variablesView_1 = require(\"vs/workbench/contrib/debug/browser/variablesView\");\nvar $ = dom.$;\nvar MAX_TREE_HEIGHT = 324;\nvar DebugHoverWidget = /** @class */ (function () {\n    function DebugHoverWidget(editor, debugService, instantiationService, themeService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.instantiationService = instantiationService;\n        this.themeService = themeService;\n        // editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = true;\n        this.toDispose = [];\n        this._isVisible = false;\n        this.showAtPosition = null;\n        this.highlightDecorations = [];\n    }\n    DebugHoverWidget.prototype.create = function () {\n        var _this = this;\n        this.domNode = $('.debug-hover-widget');\n        this.complexValueContainer = dom.append(this.domNode, $('.complex-value'));\n        this.complexValueTitle = dom.append(this.complexValueContainer, $('.title'));\n        this.treeContainer = dom.append(this.complexValueContainer, $('.debug-hover-tree'));\n        this.treeContainer.setAttribute('role', 'tree');\n        this.dataSource = new DebugHoverDataSource();\n        this.tree = this.instantiationService.createInstance(listService_1.WorkbenchAsyncDataTree, this.treeContainer, new DebugHoverDelegate(), [this.instantiationService.createInstance(variablesView_1.VariablesRenderer)], this.dataSource, {\n            ariaLabel: nls.localize('treeAriaLabel', \"Debug Hover\"),\n            accessibilityProvider: new DebugHoverAccessibilityProvider(),\n            mouseSupport: false,\n            horizontalScrolling: true\n        });\n        this.valueContainer = $('.value');\n        this.valueContainer.tabIndex = 0;\n        this.valueContainer.setAttribute('role', 'tooltip');\n        this.scrollbar = new scrollableElement_1.DomScrollableElement(this.valueContainer, { horizontal: scrollable_1.ScrollbarVisibility.Hidden });\n        this.domNode.appendChild(this.scrollbar.getDomNode());\n        this.toDispose.push(this.scrollbar);\n        this.editor.applyFontInfo(this.domNode);\n        this.toDispose.push(styler_1.attachStylerCallback(this.themeService, { editorHoverBackground: colorRegistry_1.editorHoverBackground, editorHoverBorder: colorRegistry_1.editorHoverBorder }, function (colors) {\n            if (colors.editorHoverBackground) {\n                _this.domNode.style.backgroundColor = colors.editorHoverBackground.toString();\n            }\n            else {\n                _this.domNode.style.backgroundColor = null;\n            }\n            if (colors.editorHoverBorder) {\n                _this.domNode.style.border = \"1px solid \" + colors.editorHoverBorder;\n            }\n            else {\n                _this.domNode.style.border = null;\n            }\n        }));\n        this.toDispose.push(this.tree.onDidChangeContentHeight(function () { return _this.layoutTreeAndContainer(); }));\n        this.registerListeners();\n        this.editor.addContentWidget(this);\n    };\n    DebugHoverWidget.prototype.registerListeners = function () {\n        var _this = this;\n        this.toDispose.push(dom.addStandardDisposableListener(this.domNode, 'keydown', function (e) {\n            if (e.equals(keyCodes_1.KeyCode.Escape)) {\n                _this.hide();\n            }\n        }));\n        this.toDispose.push(this.editor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo) {\n                _this.editor.applyFontInfo(_this.domNode);\n            }\n        }));\n    };\n    DebugHoverWidget.prototype.isVisible = function () {\n        return this._isVisible;\n    };\n    DebugHoverWidget.prototype.getId = function () {\n        return DebugHoverWidget.ID;\n    };\n    DebugHoverWidget.prototype.getDomNode = function () {\n        return this.domNode;\n    };\n    DebugHoverWidget.prototype.showAt = function (range, focus) {\n        var _this = this;\n        var pos = range.getStartPosition();\n        var session = this.debugService.getViewModel().focusedSession;\n        if (!this.editor.hasModel()) {\n            return Promise.resolve(this.hide());\n        }\n        var lineContent = this.editor.getModel().getLineContent(pos.lineNumber);\n        var _a = debugUtils_1.getExactExpressionStartAndEnd(lineContent, range.startColumn, range.endColumn), start = _a.start, end = _a.end;\n        // use regex to extract the sub-expression #9821\n        var matchingExpression = lineContent.substring(start - 1, end);\n        if (!matchingExpression || !session) {\n            return Promise.resolve(this.hide());\n        }\n        var promise;\n        if (session.capabilities.supportsEvaluateForHovers) {\n            var result_1 = new debugModel_1.Expression(matchingExpression);\n            promise = result_1.evaluate(session, this.debugService.getViewModel().focusedStackFrame, 'hover').then(function () { return result_1; });\n        }\n        else {\n            promise = this.findExpressionInStackFrame(arrays_1.coalesce(matchingExpression.split('.').map(function (word) { return word.trim(); })));\n        }\n        return promise.then(function (expression) {\n            if (!expression || (expression instanceof debugModel_1.Expression && !expression.available)) {\n                _this.hide();\n                return undefined;\n            }\n            _this.highlightDecorations = _this.editor.deltaDecorations(_this.highlightDecorations, [{\n                    range: new range_1.Range(pos.lineNumber, start, pos.lineNumber, start + matchingExpression.length),\n                    options: DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS\n                }]);\n            return _this.doShow(pos, expression, focus);\n        });\n    };\n    DebugHoverWidget.prototype.doFindExpression = function (container, namesToFind) {\n        var _this = this;\n        if (!container) {\n            return Promise.resolve(null);\n        }\n        return container.getChildren().then(function (children) {\n            // look for our variable in the list. First find the parents of the hovered variable if there are any.\n            var filtered = children.filter(function (v) { return namesToFind[0] === v.name; });\n            if (filtered.length !== 1) {\n                return null;\n            }\n            if (namesToFind.length === 1) {\n                return filtered[0];\n            }\n            else {\n                return _this.doFindExpression(filtered[0], namesToFind.slice(1));\n            }\n        });\n    };\n    DebugHoverWidget.prototype.findExpressionInStackFrame = function (namesToFind) {\n        var _this = this;\n        return this.debugService.getViewModel().focusedStackFrame.getScopes()\n            .then(function (scopes) { return scopes.filter(function (s) { return !s.expensive; }); })\n            .then(function (scopes) { return Promise.all(scopes.map(function (scope) { return _this.doFindExpression(scope, namesToFind); })); })\n            .then(arrays_1.coalesce)\n            // only show if all expressions found have the same value\n            .then(function (expressions) { return (expressions.length > 0 && expressions.every(function (e) { return e.value === expressions[0].value; })) ? expressions[0] : undefined; });\n    };\n    DebugHoverWidget.prototype.doShow = function (position, expression, focus, forceValueHover) {\n        var _this = this;\n        if (forceValueHover === void 0) { forceValueHover = false; }\n        if (!this.domNode) {\n            this.create();\n        }\n        this.showAtPosition = position;\n        this._isVisible = true;\n        if (!expression.hasChildren || forceValueHover) {\n            this.complexValueContainer.hidden = true;\n            this.valueContainer.hidden = false;\n            baseDebugView_1.renderExpressionValue(expression, this.valueContainer, {\n                showChanged: false,\n                preserveWhitespace: true,\n                colorize: true\n            });\n            this.valueContainer.title = '';\n            this.editor.layoutContentWidget(this);\n            this.scrollbar.scanDomNode();\n            if (focus) {\n                this.editor.render();\n                this.valueContainer.focus();\n            }\n            return Promise.resolve(undefined);\n        }\n        this.valueContainer.hidden = true;\n        this.complexValueContainer.hidden = false;\n        return this.tree.setInput(expression).then(function () {\n            _this.complexValueTitle.textContent = expression.value;\n            _this.complexValueTitle.title = expression.value;\n            _this.layoutTreeAndContainer();\n            _this.editor.layoutContentWidget(_this);\n            _this.scrollbar.scanDomNode();\n            if (focus) {\n                _this.editor.render();\n                _this.tree.domFocus();\n            }\n        });\n    };\n    DebugHoverWidget.prototype.layoutTreeAndContainer = function () {\n        var treeHeight = Math.min(MAX_TREE_HEIGHT, this.tree.contentHeight);\n        this.treeContainer.style.height = treeHeight + \"px\";\n        this.tree.layout(treeHeight, 324);\n    };\n    DebugHoverWidget.prototype.hide = function () {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this.editor.deltaDecorations(this.highlightDecorations, []);\n        this.highlightDecorations = [];\n        this.editor.layoutContentWidget(this);\n        this.editor.focus();\n    };\n    DebugHoverWidget.prototype.getPosition = function () {\n        return this._isVisible ? {\n            position: this.showAtPosition,\n            preference: [\n                editorBrowser_1.ContentWidgetPositionPreference.ABOVE,\n                editorBrowser_1.ContentWidgetPositionPreference.BELOW\n            ]\n        } : null;\n    };\n    DebugHoverWidget.prototype.dispose = function () {\n        this.toDispose = lifecycle.dispose(this.toDispose);\n    };\n    DebugHoverWidget.ID = 'debug.hoverWidget';\n    DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS = textModel_1.ModelDecorationOptions.register({\n        className: 'hoverHighlight'\n    });\n    DebugHoverWidget = tslib_1.__decorate([\n        tslib_1.__param(1, debug_1.IDebugService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, themeService_1.IThemeService)\n    ], DebugHoverWidget);\n    return DebugHoverWidget;\n}());\nexports.DebugHoverWidget = DebugHoverWidget;\nvar DebugHoverAccessibilityProvider = /** @class */ (function () {\n    function DebugHoverAccessibilityProvider() {\n    }\n    DebugHoverAccessibilityProvider.prototype.getAriaLabel = function (element) {\n        return nls.localize('variableAriaLabel', \"{0} value {1}, variables, debug\", element.name, element.value);\n    };\n    return DebugHoverAccessibilityProvider;\n}());\nvar DebugHoverDataSource = /** @class */ (function () {\n    function DebugHoverDataSource() {\n    }\n    DebugHoverDataSource.prototype.hasChildren = function (element) {\n        return element.hasChildren;\n    };\n    DebugHoverDataSource.prototype.getChildren = function (element) {\n        return element.getChildren();\n    };\n    return DebugHoverDataSource;\n}());\nvar DebugHoverDelegate = /** @class */ (function () {\n    function DebugHoverDelegate() {\n    }\n    DebugHoverDelegate.prototype.getHeight = function (element) {\n        return 18;\n    };\n    DebugHoverDelegate.prototype.getTemplateId = function (element) {\n        return variablesView_1.VariablesRenderer.ID;\n    };\n    return DebugHoverDelegate;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugHover.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugHover.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as lifecycle from 'vs/base/common/lifecycle';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { IConfigurationChangedEvent } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IContentWidget, ICodeEditor, IContentWidgetPosition, ContentWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IDebugService, IExpression, IExpressionContainer } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { renderExpressionValue } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { attachStylerCallback } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { editorHoverBackground, editorHoverBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { getExactExpressionStartAndEnd } from 'vs/workbench/contrib/debug/common/debugUtils';\nimport { AsyncDataTree } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { IAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { VariablesRenderer } from 'vs/workbench/contrib/debug/browser/variablesView';\n\nconst $ = dom.$;\nconst MAX_TREE_HEIGHT = 324;\n\nexport class DebugHoverWidget implements IContentWidget {\n\n\tstatic readonly ID = 'debug.hoverWidget';\n\t// editor.IContentWidget.allowEditorOverflow\n\tallowEditorOverflow = true;\n\n\tprivate _isVisible: boolean;\n\tprivate domNode: HTMLElement;\n\tprivate tree: AsyncDataTree<IExpression, IExpression, any>;\n\tprivate showAtPosition: Position | null;\n\tprivate highlightDecorations: string[];\n\tprivate complexValueContainer: HTMLElement;\n\tprivate complexValueTitle: HTMLElement;\n\tprivate valueContainer: HTMLElement;\n\tprivate treeContainer: HTMLElement;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate scrollbar: DomScrollableElement;\n\tprivate dataSource: DebugHoverDataSource;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t) {\n\t\tthis.toDispose = [];\n\n\t\tthis._isVisible = false;\n\t\tthis.showAtPosition = null;\n\t\tthis.highlightDecorations = [];\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = $('.debug-hover-widget');\n\t\tthis.complexValueContainer = dom.append(this.domNode, $('.complex-value'));\n\t\tthis.complexValueTitle = dom.append(this.complexValueContainer, $('.title'));\n\t\tthis.treeContainer = dom.append(this.complexValueContainer, $('.debug-hover-tree'));\n\t\tthis.treeContainer.setAttribute('role', 'tree');\n\t\tthis.dataSource = new DebugHoverDataSource();\n\n\t\tthis.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, this.treeContainer, new DebugHoverDelegate(), [this.instantiationService.createInstance(VariablesRenderer)],\n\t\t\tthis.dataSource, {\n\t\t\t\tariaLabel: nls.localize('treeAriaLabel', \"Debug Hover\"),\n\t\t\t\taccessibilityProvider: new DebugHoverAccessibilityProvider(),\n\t\t\t\tmouseSupport: false,\n\t\t\t\thorizontalScrolling: true\n\t\t\t}) as any as AsyncDataTree<IExpression, IExpression, any>;\n\n\t\tthis.valueContainer = $('.value');\n\t\tthis.valueContainer.tabIndex = 0;\n\t\tthis.valueContainer.setAttribute('role', 'tooltip');\n\t\tthis.scrollbar = new DomScrollableElement(this.valueContainer, { horizontal: ScrollbarVisibility.Hidden });\n\t\tthis.domNode.appendChild(this.scrollbar.getDomNode());\n\t\tthis.toDispose.push(this.scrollbar);\n\n\t\tthis.editor.applyFontInfo(this.domNode);\n\n\t\tthis.toDispose.push(attachStylerCallback(this.themeService, { editorHoverBackground, editorHoverBorder }, colors => {\n\t\t\tif (colors.editorHoverBackground) {\n\t\t\t\tthis.domNode.style.backgroundColor = colors.editorHoverBackground.toString();\n\t\t\t} else {\n\t\t\t\tthis.domNode.style.backgroundColor = null;\n\t\t\t}\n\t\t\tif (colors.editorHoverBorder) {\n\t\t\t\tthis.domNode.style.border = `1px solid ${colors.editorHoverBorder}`;\n\t\t\t} else {\n\t\t\t\tthis.domNode.style.border = null;\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.tree.onDidChangeContentHeight(() => this.layoutTreeAndContainer()));\n\n\t\tthis.registerListeners();\n\t\tthis.editor.addContentWidget(this);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.domNode, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {\n\t\t\tif (e.fontInfo) {\n\t\t\t\tthis.editor.applyFontInfo(this.domNode);\n\t\t\t}\n\t\t}));\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tgetId(): string {\n\t\treturn DebugHoverWidget.ID;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tshowAt(range: Range, focus: boolean): Promise<void> {\n\t\tconst pos = range.getStartPosition();\n\n\t\tconst session = this.debugService.getViewModel().focusedSession;\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn Promise.resolve(this.hide());\n\t\t}\n\n\t\tconst lineContent = this.editor.getModel().getLineContent(pos.lineNumber);\n\t\tconst { start, end } = getExactExpressionStartAndEnd(lineContent, range.startColumn, range.endColumn);\n\t\t// use regex to extract the sub-expression #9821\n\t\tconst matchingExpression = lineContent.substring(start - 1, end);\n\t\tif (!matchingExpression || !session) {\n\t\t\treturn Promise.resolve(this.hide());\n\t\t}\n\n\t\tlet promise: Promise<IExpression | undefined>;\n\t\tif (session.capabilities.supportsEvaluateForHovers) {\n\t\t\tconst result = new Expression(matchingExpression);\n\t\t\tpromise = result.evaluate(session, this.debugService.getViewModel().focusedStackFrame, 'hover').then(() => result);\n\t\t} else {\n\t\t\tpromise = this.findExpressionInStackFrame(coalesce(matchingExpression.split('.').map(word => word.trim())));\n\t\t}\n\n\t\treturn promise.then(expression => {\n\t\t\tif (!expression || (expression instanceof Expression && !expression.available)) {\n\t\t\t\tthis.hide();\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tthis.highlightDecorations = this.editor.deltaDecorations(this.highlightDecorations, [{\n\t\t\t\trange: new Range(pos.lineNumber, start, pos.lineNumber, start + matchingExpression.length),\n\t\t\t\toptions: DebugHoverWidget._HOVER_HIGHLIGHT_DECORATION_OPTIONS\n\t\t\t}]);\n\n\t\t\treturn this.doShow(pos, expression, focus);\n\t\t});\n\t}\n\n\tprivate static _HOVER_HIGHLIGHT_DECORATION_OPTIONS = ModelDecorationOptions.register({\n\t\tclassName: 'hoverHighlight'\n\t});\n\n\tprivate doFindExpression(container: IExpressionContainer, namesToFind: string[]): Promise<IExpression | null> {\n\t\tif (!container) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn container.getChildren().then(children => {\n\t\t\t// look for our variable in the list. First find the parents of the hovered variable if there are any.\n\t\t\tconst filtered = children.filter(v => namesToFind[0] === v.name);\n\t\t\tif (filtered.length !== 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (namesToFind.length === 1) {\n\t\t\t\treturn filtered[0];\n\t\t\t} else {\n\t\t\t\treturn this.doFindExpression(filtered[0], namesToFind.slice(1));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate findExpressionInStackFrame(namesToFind: string[]): Promise<IExpression | undefined> {\n\t\treturn this.debugService.getViewModel().focusedStackFrame!.getScopes()\n\t\t\t.then(scopes => scopes.filter(s => !s.expensive))\n\t\t\t.then(scopes => Promise.all(scopes.map(scope => this.doFindExpression(scope, namesToFind))))\n\t\t\t.then(coalesce)\n\t\t\t// only show if all expressions found have the same value\n\t\t\t.then(expressions => (expressions.length > 0 && expressions.every(e => e.value === expressions[0].value)) ? expressions[0] : undefined);\n\t}\n\n\tprivate doShow(position: Position, expression: IExpression, focus: boolean, forceValueHover = false): Promise<void> {\n\t\tif (!this.domNode) {\n\t\t\tthis.create();\n\t\t}\n\n\t\tthis.showAtPosition = position;\n\t\tthis._isVisible = true;\n\n\t\tif (!expression.hasChildren || forceValueHover) {\n\t\t\tthis.complexValueContainer.hidden = true;\n\t\t\tthis.valueContainer.hidden = false;\n\t\t\trenderExpressionValue(expression, this.valueContainer, {\n\t\t\t\tshowChanged: false,\n\t\t\t\tpreserveWhitespace: true,\n\t\t\t\tcolorize: true\n\t\t\t});\n\t\t\tthis.valueContainer.title = '';\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t\tthis.scrollbar.scanDomNode();\n\t\t\tif (focus) {\n\t\t\t\tthis.editor.render();\n\t\t\t\tthis.valueContainer.focus();\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.valueContainer.hidden = true;\n\t\tthis.complexValueContainer.hidden = false;\n\n\t\treturn this.tree.setInput(expression).then(() => {\n\t\t\tthis.complexValueTitle.textContent = expression.value;\n\t\t\tthis.complexValueTitle.title = expression.value;\n\t\t\tthis.layoutTreeAndContainer();\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t\tthis.scrollbar.scanDomNode();\n\t\t\tif (focus) {\n\t\t\t\tthis.editor.render();\n\t\t\t\tthis.tree.domFocus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate layoutTreeAndContainer(): void {\n\t\tconst treeHeight = Math.min(MAX_TREE_HEIGHT, this.tree.contentHeight);\n\t\tthis.treeContainer.style.height = `${treeHeight}px`;\n\t\tthis.tree.layout(treeHeight, 324);\n\t}\n\n\thide(): void {\n\t\tif (!this._isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isVisible = false;\n\t\tthis.editor.deltaDecorations(this.highlightDecorations, []);\n\t\tthis.highlightDecorations = [];\n\t\tthis.editor.layoutContentWidget(this);\n\t\tthis.editor.focus();\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn this._isVisible ? {\n\t\t\tposition: this.showAtPosition,\n\t\t\tpreference: [\n\t\t\t\tContentWidgetPositionPreference.ABOVE,\n\t\t\t\tContentWidgetPositionPreference.BELOW\n\t\t\t]\n\t\t} : null;\n\t}\n\n\tdispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nclass DebugHoverAccessibilityProvider implements IAccessibilityProvider<IExpression> {\n\tgetAriaLabel(element: IExpression): string {\n\t\treturn nls.localize('variableAriaLabel', \"{0} value {1}, variables, debug\", element.name, element.value);\n\t}\n}\n\nclass DebugHoverDataSource implements IAsyncDataSource<IExpression, IExpression> {\n\n\thasChildren(element: IExpression): boolean {\n\t\treturn element.hasChildren;\n\t}\n\n\tgetChildren(element: IExpression): Promise<IExpression[]> {\n\t\treturn element.getChildren();\n\t}\n}\n\nclass DebugHoverDelegate implements IListVirtualDelegate<IExpression> {\n\tgetHeight(element: IExpression): number {\n\t\treturn 18;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n"]}]}