{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/cursorUndo/cursorUndo.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/cursorUndo/cursorUndo.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar CursorState = /** @class */ (function () {\n    function CursorState(selections) {\n        this.selections = selections;\n    }\n    CursorState.prototype.equals = function (other) {\n        var thisLen = this.selections.length;\n        var otherLen = other.selections.length;\n        if (thisLen !== otherLen) {\n            return false;\n        }\n        for (var i = 0; i < thisLen; i++) {\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return CursorState;\n}());\nvar CursorUndoController = /** @class */ (function (_super) {\n    tslib_1.__extends(CursorUndoController, _super);\n    function CursorUndoController(editor) {\n        var _this = _super.call(this) || this;\n        _this._editor = editor;\n        _this._isCursorUndo = false;\n        _this._undoStack = [];\n        _this._prevState = _this._readState();\n        _this._register(editor.onDidChangeModel(function (e) {\n            _this._undoStack = [];\n            _this._prevState = null;\n        }));\n        _this._register(editor.onDidChangeModelContent(function (e) {\n            _this._undoStack = [];\n            _this._prevState = null;\n        }));\n        _this._register(editor.onDidChangeCursorSelection(function (e) {\n            if (!_this._isCursorUndo && _this._prevState) {\n                _this._undoStack.push(_this._prevState);\n                if (_this._undoStack.length > 50) {\n                    // keep the cursor undo stack bounded\n                    _this._undoStack.shift();\n                }\n            }\n            _this._prevState = _this._readState();\n        }));\n        return _this;\n    }\n    CursorUndoController.get = function (editor) {\n        return editor.getContribution(CursorUndoController.ID);\n    };\n    CursorUndoController.prototype._readState = function () {\n        if (!this._editor.hasModel()) {\n            // no model => no state\n            return null;\n        }\n        return new CursorState(this._editor.getSelections());\n    };\n    CursorUndoController.prototype.getId = function () {\n        return CursorUndoController.ID;\n    };\n    CursorUndoController.prototype.cursorUndo = function () {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var currState = new CursorState(this._editor.getSelections());\n        while (this._undoStack.length > 0) {\n            var prevState = this._undoStack.pop();\n            if (!prevState.equals(currState)) {\n                this._isCursorUndo = true;\n                this._editor.setSelections(prevState.selections);\n                this._editor.revealRangeInCenterIfOutsideViewport(prevState.selections[0], editorCommon_1.ScrollType.Smooth);\n                this._isCursorUndo = false;\n                return;\n            }\n        }\n    };\n    CursorUndoController.ID = 'editor.contrib.cursorUndoController';\n    return CursorUndoController;\n}(lifecycle_1.Disposable));\nexports.CursorUndoController = CursorUndoController;\nvar CursorUndo = /** @class */ (function (_super) {\n    tslib_1.__extends(CursorUndo, _super);\n    function CursorUndo() {\n        return _super.call(this, {\n            id: 'cursorUndo',\n            label: nls.localize('cursor.undo', \"Soft Undo\"),\n            alias: 'Soft Undo',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n                primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_U,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    CursorUndo.prototype.run = function (accessor, editor, args) {\n        CursorUndoController.get(editor).cursorUndo();\n    };\n    return CursorUndo;\n}(editorExtensions_1.EditorAction));\nexports.CursorUndo = CursorUndo;\neditorExtensions_1.registerEditorContribution(CursorUndoController);\neditorExtensions_1.registerEditorAction(CursorUndo);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/cursorUndo/cursorUndo.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/cursorUndo/cursorUndo.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IEditorContribution, ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\n\nclass CursorState {\n\treadonly selections: Selection[];\n\n\tconstructor(selections: Selection[]) {\n\t\tthis.selections = selections;\n\t}\n\n\tpublic equals(other: CursorState): boolean {\n\t\tconst thisLen = this.selections.length;\n\t\tconst otherLen = other.selections.length;\n\t\tif (thisLen !== otherLen) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < thisLen; i++) {\n\t\t\tif (!this.selections[i].equalsSelection(other.selections[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class CursorUndoController extends Disposable implements IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.cursorUndoController';\n\n\tpublic static get(editor: ICodeEditor): CursorUndoController {\n\t\treturn editor.getContribution<CursorUndoController>(CursorUndoController.ID);\n\t}\n\n\tprivate readonly _editor: ICodeEditor;\n\tprivate _isCursorUndo: boolean;\n\n\tprivate _undoStack: CursorState[];\n\tprivate _prevState: CursorState | null;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._isCursorUndo = false;\n\n\t\tthis._undoStack = [];\n\t\tthis._prevState = this._readState();\n\n\t\tthis._register(editor.onDidChangeModel((e) => {\n\t\t\tthis._undoStack = [];\n\t\t\tthis._prevState = null;\n\t\t}));\n\t\tthis._register(editor.onDidChangeModelContent((e) => {\n\t\t\tthis._undoStack = [];\n\t\t\tthis._prevState = null;\n\t\t}));\n\t\tthis._register(editor.onDidChangeCursorSelection((e) => {\n\n\t\t\tif (!this._isCursorUndo && this._prevState) {\n\t\t\t\tthis._undoStack.push(this._prevState);\n\t\t\t\tif (this._undoStack.length > 50) {\n\t\t\t\t\t// keep the cursor undo stack bounded\n\t\t\t\t\tthis._undoStack.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._prevState = this._readState();\n\t\t}));\n\t}\n\n\tprivate _readState(): CursorState | null {\n\t\tif (!this._editor.hasModel()) {\n\t\t\t// no model => no state\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new CursorState(this._editor.getSelections());\n\t}\n\n\tpublic getId(): string {\n\t\treturn CursorUndoController.ID;\n\t}\n\n\tpublic cursorUndo(): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currState = new CursorState(this._editor.getSelections());\n\n\t\twhile (this._undoStack.length > 0) {\n\t\t\tconst prevState = this._undoStack.pop()!;\n\n\t\t\tif (!prevState.equals(currState)) {\n\t\t\t\tthis._isCursorUndo = true;\n\t\t\t\tthis._editor.setSelections(prevState.selections);\n\t\t\t\tthis._editor.revealRangeInCenterIfOutsideViewport(prevState.selections[0], ScrollType.Smooth);\n\t\t\t\tthis._isCursorUndo = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class CursorUndo extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'cursorUndo',\n\t\t\tlabel: nls.localize('cursor.undo', \"Soft Undo\"),\n\t\t\talias: 'Soft Undo',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_U,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor, args: any): void {\n\t\tCursorUndoController.get(editor).cursorUndo();\n\t}\n}\n\nregisterEditorContribution(CursorUndoController);\nregisterEditorAction(CursorUndo);\n"]}]}