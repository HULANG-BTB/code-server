{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/dataUriEditorInput.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/editor/dataUriEditorInput.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/workbench/common/editor\", \"vs/platform/instantiation/common/instantiation\", \"vs/workbench/common/editor/binaryEditorModel\", \"vs/base/common/resources\", \"vs/base/common/types\"], function (require, exports, editor_1, instantiation_1, binaryEditorModel_1, resources_1, types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * An editor input to present data URIs in a binary editor. Data URIs have the form of:\n     * data:[mime type];[meta data <key=value>;...];base64,[base64 encoded value]\n     */\n    let DataUriEditorInput = class DataUriEditorInput extends editor_1.EditorInput {\n        constructor(name, description, resource, instantiationService) {\n            super();\n            this.name = name;\n            this.description = description;\n            this.resource = resource;\n            this.instantiationService = instantiationService;\n            this.name = name;\n            this.description = description;\n            this.resource = resource;\n            if (!this.name || !this.description) {\n                const metadata = resources_1.DataUri.parseMetaData(this.resource);\n                if (!this.name) {\n                    this.name = metadata.get(resources_1.DataUri.META_DATA_LABEL);\n                }\n                if (!this.description) {\n                    this.description = metadata.get(resources_1.DataUri.META_DATA_DESCRIPTION);\n                }\n            }\n        }\n        getResource() {\n            return this.resource;\n        }\n        getTypeId() {\n            return DataUriEditorInput.ID;\n        }\n        getName() {\n            return types_1.withUndefinedAsNull(this.name);\n        }\n        getDescription() {\n            return types_1.withUndefinedAsNull(this.description);\n        }\n        resolve() {\n            return this.instantiationService.createInstance(binaryEditorModel_1.BinaryEditorModel, this.resource, this.getName()).load().then(m => m);\n        }\n        matches(otherInput) {\n            if (super.matches(otherInput) === true) {\n                return true;\n            }\n            if (otherInput instanceof DataUriEditorInput) {\n                const otherDataUriEditorInput = otherInput;\n                // Compare by resource\n                return otherDataUriEditorInput.resource.toString() === this.resource.toString();\n            }\n            return false;\n        }\n    };\n    DataUriEditorInput.ID = 'workbench.editors.dataUriEditorInput';\n    DataUriEditorInput = __decorate([\n        __param(3, instantiation_1.IInstantiationService)\n    ], DataUriEditorInput);\n    exports.DataUriEditorInput = DataUriEditorInput;\n});\n",null]}