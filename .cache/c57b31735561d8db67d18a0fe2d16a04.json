{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar async_1 = require(\"vs/base/common/async\");\nvar map_1 = require(\"vs/base/common/map\");\nvar URLService = /** @class */ (function () {\n    function URLService() {\n        this.handlers = new Set();\n    }\n    URLService.prototype.open = function (uri) {\n        var handlers = map_1.values(this.handlers);\n        return async_1.first(handlers.map(function (h) { return function () { return h.handleURL(uri); }; }), undefined, false).then(function (val) { return val || false; });\n    };\n    URLService.prototype.registerHandler = function (handler) {\n        var _this = this;\n        this.handlers.add(handler);\n        return lifecycle_1.toDisposable(function () { return _this.handlers.delete(handler); });\n    };\n    return URLService;\n}());\nexports.URLService = URLService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/url/common/urlService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAIhG,sDAAqE;AACrE,8CAA6C;AAC7C,0CAA4C;AAG5C;IAAA;QAIS,aAAQ,GAAG,IAAI,GAAG,EAAe,CAAC;IAW3C,CAAC;IATA,yBAAI,GAAJ,UAAK,GAAQ;QACZ,IAAM,QAAQ,GAAG,YAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,OAAO,aAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,cAAM,OAAA,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAhB,CAAgB,EAAtB,CAAsB,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,IAAI,KAAK,EAAZ,CAAY,CAAC,CAAC;IACrG,CAAC;IAED,oCAAe,GAAf,UAAgB,OAAoB;QAApC,iBAGC;QAFA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3B,OAAO,wBAAY,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;IAC1D,CAAC;IACF,iBAAC;AAAD,CAAC,AAfD,IAeC;AAfY,gCAAU","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IURLService, IURLHandler } from 'vs/platform/url/common/url';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { first } from 'vs/base/common/async';\nimport { values } from 'vs/base/common/map';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport class URLService implements IURLService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate handlers = new Set<IURLHandler>();\n\n\topen(uri: URI): Promise<boolean> {\n\t\tconst handlers = values(this.handlers);\n\t\treturn first(handlers.map(h => () => h.handleURL(uri)), undefined, false).then(val => val || false);\n\t}\n\n\tregisterHandler(handler: IURLHandler): IDisposable {\n\t\tthis.handlers.add(handler);\n\t\treturn toDisposable(() => this.handlers.delete(handler));\n\t}\n}\n"]}]}