{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/splitview/splitview.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/splitview/splitview.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./splitview\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar types = require(\"vs/base/common/types\");\nvar dom = require(\"vs/base/browser/dom\");\nvar numbers_1 = require(\"vs/base/common/numbers\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar sash_1 = require(\"vs/base/browser/ui/sash/sash\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar sash_2 = require(\"vs/base/browser/ui/sash/sash\");\nexports.Orientation = sash_2.Orientation;\nvar defaultStyles = {\n    separatorBorder: color_1.Color.transparent\n};\n/**\n * Only used when `proportionalLayout` is false.\n */\nvar LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[LayoutPriority[\"Normal\"] = 0] = \"Normal\";\n    LayoutPriority[LayoutPriority[\"Low\"] = 1] = \"Low\";\n    LayoutPriority[LayoutPriority[\"High\"] = 2] = \"High\";\n})(LayoutPriority = exports.LayoutPriority || (exports.LayoutPriority = {}));\nvar State;\n(function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nvar Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) { return { type: 'split', index: index }; }\n    Sizing.Split = Split;\n})(Sizing = exports.Sizing || (exports.Sizing = {}));\nvar SplitView = /** @class */ (function (_super) {\n    tslib_1.__extends(SplitView, _super);\n    function SplitView(container, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.size = 0;\n        _this.contentSize = 0;\n        _this.proportions = undefined;\n        _this.viewItems = [];\n        _this.sashItems = [];\n        _this.state = State.Idle;\n        _this._onDidSashChange = _this._register(new event_1.Emitter());\n        _this.onDidSashChange = _this._onDidSashChange.event;\n        _this._onDidSashReset = _this._register(new event_1.Emitter());\n        _this.onDidSashReset = _this._onDidSashReset.event;\n        _this.orientation = types.isUndefined(options.orientation) ? sash_1.Orientation.VERTICAL : options.orientation;\n        _this.inverseAltBehavior = !!options.inverseAltBehavior;\n        _this.proportionalLayout = types.isUndefined(options.proportionalLayout) ? true : !!options.proportionalLayout;\n        _this.el = document.createElement('div');\n        dom.addClass(_this.el, 'monaco-split-view2');\n        dom.addClass(_this.el, _this.orientation === sash_1.Orientation.VERTICAL ? 'vertical' : 'horizontal');\n        container.appendChild(_this.el);\n        _this.sashContainer = dom.append(_this.el, dom.$('.sash-container'));\n        _this.viewContainer = dom.append(_this.el, dom.$('.split-view-container'));\n        _this.style(options.styles || defaultStyles);\n        return _this;\n    }\n    Object.defineProperty(SplitView.prototype, \"length\", {\n        get: function () {\n            return this.viewItems.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitView.prototype, \"minimumSize\", {\n        get: function () {\n            return this.viewItems.reduce(function (r, item) { return r + item.view.minimumSize; }, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitView.prototype, \"maximumSize\", {\n        get: function () {\n            return this.length === 0 ? Number.POSITIVE_INFINITY : this.viewItems.reduce(function (r, item) { return r + item.view.maximumSize; }, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitView.prototype, \"orthogonalStartSash\", {\n        get: function () { return this._orthogonalStartSash; },\n        set: function (sash) {\n            for (var _i = 0, _a = this.sashItems; _i < _a.length; _i++) {\n                var sashItem = _a[_i];\n                sashItem.sash.orthogonalStartSash = sash;\n            }\n            this._orthogonalStartSash = sash;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitView.prototype, \"orthogonalEndSash\", {\n        get: function () { return this._orthogonalEndSash; },\n        set: function (sash) {\n            for (var _i = 0, _a = this.sashItems; _i < _a.length; _i++) {\n                var sashItem = _a[_i];\n                sashItem.sash.orthogonalEndSash = sash;\n            }\n            this._orthogonalEndSash = sash;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitView.prototype, \"sashes\", {\n        get: function () {\n            return this.sashItems.map(function (s) { return s.sash; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SplitView.prototype.style = function (styles) {\n        if (styles.separatorBorder.isTransparent()) {\n            dom.removeClass(this.el, 'separator-border');\n            this.el.style.removeProperty('--separator-border');\n        }\n        else {\n            dom.addClass(this.el, 'separator-border');\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n        }\n    };\n    SplitView.prototype.addView = function (view, size, index) {\n        var _this = this;\n        if (index === void 0) { index = this.viewItems.length; }\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        // Add view\n        var container = dom.$('.split-view-view');\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        var onChangeDisposable = view.onDidChange(function (size) { return _this.onViewChange(item, size); });\n        var containerDisposable = lifecycle_1.toDisposable(function () { return _this.viewContainer.removeChild(container); });\n        var disposable = lifecycle_1.combinedDisposable([onChangeDisposable, containerDisposable]);\n        var layoutContainer = this.orientation === sash_1.Orientation.VERTICAL\n            ? function () { return item.container.style.height = item.size + \"px\"; }\n            : function () { return item.container.style.width = item.size + \"px\"; };\n        var layout = function () {\n            layoutContainer();\n            item.view.layout(item.size, _this.orientation);\n        };\n        var viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        var item = { view: view, container: container, size: viewSize, layout: layout, disposable: disposable };\n        this.viewItems.splice(index, 0, item);\n        // Add sash\n        if (this.viewItems.length > 1) {\n            var orientation = this.orientation === sash_1.Orientation.VERTICAL ? sash_1.Orientation.HORIZONTAL : sash_1.Orientation.VERTICAL;\n            var layoutProvider = this.orientation === sash_1.Orientation.VERTICAL ? { getHorizontalSashTop: function (sash) { return _this.getSashPosition(sash); } } : { getVerticalSashLeft: function (sash) { return _this.getSashPosition(sash); } };\n            var sash_3 = new sash_1.Sash(this.sashContainer, layoutProvider, {\n                orientation: orientation,\n                orthogonalStartSash: this.orthogonalStartSash,\n                orthogonalEndSash: this.orthogonalEndSash\n            });\n            var sashEventMapper = this.orientation === sash_1.Orientation.VERTICAL\n                ? function (e) { return ({ sash: sash_3, start: e.startY, current: e.currentY, alt: e.altKey }); }\n                : function (e) { return ({ sash: sash_3, start: e.startX, current: e.currentX, alt: e.altKey }); };\n            var onStart = event_1.Event.map(sash_3.onDidStart, sashEventMapper);\n            var onStartDisposable = onStart(this.onSashStart, this);\n            var onChange = event_1.Event.map(sash_3.onDidChange, sashEventMapper);\n            var onChangeDisposable_1 = onChange(this.onSashChange, this);\n            var onEnd = event_1.Event.map(sash_3.onDidEnd, function () { return arrays_1.firstIndex(_this.sashItems, function (item) { return item.sash === sash_3; }); });\n            var onEndDisposable = onEnd(this.onSashEnd, this);\n            var onDidResetDisposable = sash_3.onDidReset(function () { return _this._onDidSashReset.fire(arrays_1.firstIndex(_this.sashItems, function (item) { return item.sash === sash_3; })); });\n            var disposable_1 = lifecycle_1.combinedDisposable([onStartDisposable, onChangeDisposable_1, onEndDisposable, onDidResetDisposable, sash_3]);\n            var sashItem = { sash: sash_3, disposable: disposable_1 };\n            this.sashItems.splice(index - 1, 0, sashItem);\n        }\n        container.appendChild(view.element);\n        var highPriorityIndex;\n        if (typeof size !== 'number' && size.type === 'split') {\n            highPriorityIndex = size.index;\n        }\n        this.relayout(index, highPriorityIndex);\n        this.state = State.Idle;\n        if (typeof size !== 'number' && size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n    };\n    SplitView.prototype.removeView = function (index, sizing) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        // Remove view\n        var viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.disposable.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            var sashIndex = Math.max(index - 1, 0);\n            var sashItem = this.sashItems.splice(sashIndex, 1)[0];\n            sashItem.disposable.dispose();\n        }\n        this.relayout();\n        this.state = State.Idle;\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        return viewItem.view;\n    };\n    SplitView.prototype.moveView = function (from, to) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        var size = this.getViewSize(from);\n        var view = this.removeView(from);\n        this.addView(view, size, to);\n    };\n    SplitView.prototype.swapViews = function (from, to) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        if (from > to) {\n            return this.swapViews(to, from);\n        }\n        var fromSize = this.getViewSize(from);\n        var toSize = this.getViewSize(to);\n        var toView = this.removeView(to);\n        var fromView = this.removeView(from);\n        this.addView(toView, fromSize, from);\n        this.addView(fromView, toSize, to);\n    };\n    SplitView.prototype.relayout = function (lowPriorityIndex, highPriorityIndex) {\n        var contentSize = this.viewItems.reduce(function (r, i) { return r + i.size; }, 0);\n        var lowPriorityIndexes = typeof lowPriorityIndex === 'number' ? [lowPriorityIndex] : undefined;\n        var highPriorityIndexes = typeof highPriorityIndex === 'number' ? [highPriorityIndex] : undefined;\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    };\n    SplitView.prototype.layout = function (size) {\n        var _this = this;\n        var previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        if (!this.proportions) {\n            var indexes = arrays_1.range(this.viewItems.length);\n            var lowPriorityIndexes = indexes.filter(function (i) { return _this.viewItems[i].view.priority === LayoutPriority.Low; });\n            var highPriorityIndexes = indexes.filter(function (i) { return _this.viewItems[i].view.priority === LayoutPriority.High; });\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (var i = 0; i < this.viewItems.length; i++) {\n                var item = this.viewItems[i];\n                item.size = numbers_1.clamp(Math.round(this.proportions[i] * size), item.view.minimumSize, item.view.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    };\n    SplitView.prototype.saveProportions = function () {\n        var _this = this;\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this.proportions = this.viewItems.map(function (i) { return i.size / _this.contentSize; });\n        }\n    };\n    SplitView.prototype.onSashStart = function (_a) {\n        var _this = this;\n        var sash = _a.sash, start = _a.start, alt = _a.alt;\n        var index = arrays_1.firstIndex(this.sashItems, function (item) { return item.sash === sash; });\n        // This way, we can press Alt while we resize a sash, macOS style!\n        var disposable = lifecycle_1.combinedDisposable([\n            event_2.domEvent(document.body, 'keydown')(function (e) { return resetSashDragState(_this.sashDragState.current, e.altKey); }),\n            event_2.domEvent(document.body, 'keyup')(function () { return resetSashDragState(_this.sashDragState.current, false); })\n        ]);\n        var resetSashDragState = function (start, alt) {\n            var sizes = _this.viewItems.map(function (i) { return i.size; });\n            var minDelta = Number.NEGATIVE_INFINITY;\n            var maxDelta = Number.POSITIVE_INFINITY;\n            if (_this.inverseAltBehavior) {\n                alt = !alt;\n            }\n            if (alt) {\n                // When we're using the last sash with Alt, we're resizing\n                // the view to the left/up, instead of right/down as usual\n                // Thus, we must do the inverse of the usual\n                var isLastSash = index === _this.sashItems.length - 1;\n                if (isLastSash) {\n                    var viewItem = _this.viewItems[index];\n                    minDelta = (viewItem.view.minimumSize - viewItem.size) / 2;\n                    maxDelta = (viewItem.view.maximumSize - viewItem.size) / 2;\n                }\n                else {\n                    var viewItem = _this.viewItems[index + 1];\n                    minDelta = (viewItem.size - viewItem.view.maximumSize) / 2;\n                    maxDelta = (viewItem.size - viewItem.view.minimumSize) / 2;\n                }\n            }\n            _this.sashDragState = { start: start, current: start, index: index, sizes: sizes, minDelta: minDelta, maxDelta: maxDelta, alt: alt, disposable: disposable };\n        };\n        resetSashDragState(start, alt);\n    };\n    SplitView.prototype.onSashChange = function (_a) {\n        var current = _a.current;\n        var _b = this.sashDragState, index = _b.index, start = _b.start, sizes = _b.sizes, alt = _b.alt, minDelta = _b.minDelta, maxDelta = _b.maxDelta;\n        this.sashDragState.current = current;\n        var delta = current - start;\n        var newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta);\n        if (alt) {\n            var isLastSash = index === this.sashItems.length - 1;\n            var newSizes = this.viewItems.map(function (i) { return i.size; });\n            var viewItemIndex = isLastSash ? index : index + 1;\n            var viewItem = this.viewItems[viewItemIndex];\n            var newMinDelta = viewItem.size - viewItem.view.maximumSize;\n            var newMaxDelta = viewItem.size - viewItem.view.minimumSize;\n            var resizeIndex = isLastSash ? index - 1 : index + 1;\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    };\n    SplitView.prototype.onSashEnd = function (index) {\n        this._onDidSashChange.fire(index);\n        this.sashDragState.disposable.dispose();\n        this.saveProportions();\n    };\n    SplitView.prototype.onViewChange = function (item, size) {\n        var index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = numbers_1.clamp(size, item.view.minimumSize, item.view.maximumSize);\n        if (this.inverseAltBehavior && index > 0) {\n            // In this case, we want the view to grow or shrink both sides equally\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\n            this.distributeEmptySpace();\n            this.layoutViews();\n        }\n        else {\n            item.size = size;\n            this.relayout(index, undefined);\n        }\n    };\n    SplitView.prototype.resizeView = function (index, size) {\n        var _this = this;\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        var item = this.viewItems[index];\n        size = Math.round(size);\n        size = numbers_1.clamp(size, item.view.minimumSize, item.view.maximumSize);\n        var delta = size - item.size;\n        if (delta !== 0 && index < this.viewItems.length - 1) {\n            var downIndexes = arrays_1.range(index + 1, this.viewItems.length);\n            var collapseDown = downIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].size - _this.viewItems[i].view.minimumSize); }, 0);\n            var expandDown = downIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].view.maximumSize - _this.viewItems[i].size); }, 0);\n            var deltaDown = numbers_1.clamp(delta, -expandDown, collapseDown);\n            this.resize(index, deltaDown);\n            delta -= deltaDown;\n        }\n        if (delta !== 0 && index > 0) {\n            var upIndexes = arrays_1.range(index - 1, -1);\n            var collapseUp = upIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].size - _this.viewItems[i].view.minimumSize); }, 0);\n            var expandUp = upIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].view.maximumSize - _this.viewItems[i].size); }, 0);\n            var deltaUp = numbers_1.clamp(-delta, -collapseUp, expandUp);\n            this.resize(index - 1, deltaUp);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n        this.state = State.Idle;\n    };\n    SplitView.prototype.distributeViewSizes = function () {\n        var size = Math.floor(this.size / this.viewItems.length);\n        for (var i = 0; i < this.viewItems.length - 1; i++) {\n            this.resizeView(i, size);\n        }\n    };\n    SplitView.prototype.getViewSize = function (index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    };\n    SplitView.prototype.resize = function (index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta) {\n        var _this = this;\n        if (sizes === void 0) { sizes = this.viewItems.map(function (i) { return i.size; }); }\n        if (overloadMinDelta === void 0) { overloadMinDelta = Number.NEGATIVE_INFINITY; }\n        if (overloadMaxDelta === void 0) { overloadMaxDelta = Number.POSITIVE_INFINITY; }\n        if (index < 0 || index >= this.viewItems.length) {\n            return 0;\n        }\n        var upIndexes = arrays_1.range(index, -1);\n        var downIndexes = arrays_1.range(index + 1, this.viewItems.length);\n        if (highPriorityIndexes) {\n            for (var _i = 0, highPriorityIndexes_1 = highPriorityIndexes; _i < highPriorityIndexes_1.length; _i++) {\n                var index_1 = highPriorityIndexes_1[_i];\n                arrays_1.pushToStart(upIndexes, index_1);\n                arrays_1.pushToStart(downIndexes, index_1);\n            }\n        }\n        if (lowPriorityIndexes) {\n            for (var _a = 0, lowPriorityIndexes_1 = lowPriorityIndexes; _a < lowPriorityIndexes_1.length; _a++) {\n                var index_2 = lowPriorityIndexes_1[_a];\n                arrays_1.pushToEnd(upIndexes, index_2);\n                arrays_1.pushToEnd(downIndexes, index_2);\n            }\n        }\n        var upItems = upIndexes.map(function (i) { return _this.viewItems[i]; });\n        var upSizes = upIndexes.map(function (i) { return sizes[i]; });\n        var downItems = downIndexes.map(function (i) { return _this.viewItems[i]; });\n        var downSizes = downIndexes.map(function (i) { return sizes[i]; });\n        var minDeltaUp = upIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].view.minimumSize - sizes[i]); }, 0);\n        var maxDeltaUp = upIndexes.reduce(function (r, i) { return r + (_this.viewItems[i].view.maximumSize - sizes[i]); }, 0);\n        var maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce(function (r, i) { return r + (sizes[i] - _this.viewItems[i].view.minimumSize); }, 0);\n        var minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce(function (r, i) { return r + (sizes[i] - _this.viewItems[i].view.maximumSize); }, 0);\n        var minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n        var maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n        delta = numbers_1.clamp(delta, minDelta, maxDelta);\n        for (var i = 0, deltaUp = delta; i < upItems.length; i++) {\n            var item = upItems[i];\n            var size = numbers_1.clamp(upSizes[i] + deltaUp, item.view.minimumSize, item.view.maximumSize);\n            var viewDelta = size - upSizes[i];\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        for (var i = 0, deltaDown = delta; i < downItems.length; i++) {\n            var item = downItems[i];\n            var size = numbers_1.clamp(downSizes[i] - deltaDown, item.view.minimumSize, item.view.maximumSize);\n            var viewDelta = size - downSizes[i];\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        return delta;\n    };\n    SplitView.prototype.distributeEmptySpace = function () {\n        var contentSize = this.viewItems.reduce(function (r, i) { return r + i.size; }, 0);\n        var emptyDelta = this.size - contentSize;\n        for (var i = this.viewItems.length - 1; emptyDelta !== 0 && i >= 0; i--) {\n            var item = this.viewItems[i];\n            var size = numbers_1.clamp(item.size + emptyDelta, item.view.minimumSize, item.view.maximumSize);\n            var viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    };\n    SplitView.prototype.layoutViews = function () {\n        // Save new content size\n        this.contentSize = this.viewItems.reduce(function (r, i) { return r + i.size; }, 0);\n        // Layout views\n        this.viewItems.forEach(function (item) { return item.layout(); });\n        // Layout sashes\n        this.sashItems.forEach(function (item) { return item.sash.layout(); });\n        // Update sashes enablement\n        var previous = false;\n        var collapsesDown = this.viewItems.map(function (i) { return previous = (i.size - i.view.minimumSize > 0) || previous; });\n        previous = false;\n        var expandsDown = this.viewItems.map(function (i) { return previous = (i.view.maximumSize - i.size > 0) || previous; });\n        var reverseViews = this.viewItems.slice().reverse();\n        previous = false;\n        var collapsesUp = reverseViews.map(function (i) { return previous = (i.size - i.view.minimumSize > 0) || previous; }).reverse();\n        previous = false;\n        var expandsUp = reverseViews.map(function (i) { return previous = (i.view.maximumSize - i.size > 0) || previous; }).reverse();\n        this.sashItems.forEach(function (s, i) {\n            var min = !(collapsesDown[i] && expandsUp[i + 1]);\n            var max = !(expandsDown[i] && collapsesUp[i + 1]);\n            if (min && max) {\n                s.sash.state = sash_1.SashState.Disabled;\n            }\n            else if (min && !max) {\n                s.sash.state = sash_1.SashState.Minimum;\n            }\n            else if (!min && max) {\n                s.sash.state = sash_1.SashState.Maximum;\n            }\n            else {\n                s.sash.state = sash_1.SashState.Enabled;\n            }\n        });\n    };\n    SplitView.prototype.getSashPosition = function (sash) {\n        var position = 0;\n        for (var i = 0; i < this.sashItems.length; i++) {\n            position += this.viewItems[i].size;\n            if (this.sashItems[i].sash === sash) {\n                return position;\n            }\n        }\n        return 0;\n    };\n    SplitView.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.viewItems.forEach(function (i) { return i.disposable.dispose(); });\n        this.viewItems = [];\n        this.sashItems.forEach(function (i) { return i.disposable.dispose(); });\n        this.sashItems = [];\n    };\n    return SplitView;\n}(lifecycle_1.Disposable));\nexports.SplitView = SplitView;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/splitview/splitview.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/splitview/splitview.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./splitview';\nimport { IDisposable, combinedDisposable, toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as types from 'vs/base/common/types';\nimport * as dom from 'vs/base/browser/dom';\nimport { clamp } from 'vs/base/common/numbers';\nimport { range, firstIndex, pushToStart, pushToEnd } from 'vs/base/common/arrays';\nimport { Sash, Orientation, ISashEvent as IBaseSashEvent, SashState } from 'vs/base/browser/ui/sash/sash';\nimport { Color } from 'vs/base/common/color';\nimport { domEvent } from 'vs/base/browser/event';\nexport { Orientation } from 'vs/base/browser/ui/sash/sash';\n\nexport interface ISplitViewStyles {\n\tseparatorBorder: Color;\n}\n\nconst defaultStyles: ISplitViewStyles = {\n\tseparatorBorder: Color.transparent\n};\n\nexport interface ISplitViewOptions {\n\torientation?: Orientation; // default Orientation.VERTICAL\n\tstyles?: ISplitViewStyles;\n\torthogonalStartSash?: Sash;\n\torthogonalEndSash?: Sash;\n\tinverseAltBehavior?: boolean;\n\tproportionalLayout?: boolean; // default true\n}\n\n/**\n * Only used when `proportionalLayout` is false.\n */\nexport const enum LayoutPriority {\n\tNormal,\n\tLow,\n\tHigh\n}\n\nexport interface IView {\n\treadonly element: HTMLElement;\n\treadonly minimumSize: number;\n\treadonly maximumSize: number;\n\treadonly onDidChange: Event<number | undefined>;\n\treadonly priority?: LayoutPriority;\n\tlayout(size: number, orientation: Orientation): void;\n}\n\ninterface ISashEvent {\n\tsash: Sash;\n\tstart: number;\n\tcurrent: number;\n\talt: boolean;\n}\n\ninterface IViewItem {\n\tview: IView;\n\tsize: number;\n\tcontainer: HTMLElement;\n\tdisposable: IDisposable;\n\tlayout(): void;\n}\n\ninterface ISashItem {\n\tsash: Sash;\n\tdisposable: IDisposable;\n}\n\ninterface ISashDragState {\n\tindex: number;\n\tstart: number;\n\tcurrent: number;\n\tsizes: number[];\n\tminDelta: number;\n\tmaxDelta: number;\n\talt: boolean;\n\tdisposable: IDisposable;\n}\n\nenum State {\n\tIdle,\n\tBusy\n}\n\nexport type DistributeSizing = { type: 'distribute' };\nexport type SplitSizing = { type: 'split', index: number };\nexport type Sizing = DistributeSizing | SplitSizing;\n\nexport namespace Sizing {\n\texport const Distribute: DistributeSizing = { type: 'distribute' };\n\texport function Split(index: number): SplitSizing { return { type: 'split', index }; }\n}\n\nexport class SplitView extends Disposable {\n\n\treadonly orientation: Orientation;\n\treadonly el: HTMLElement;\n\tprivate sashContainer: HTMLElement;\n\tprivate viewContainer: HTMLElement;\n\tprivate size = 0;\n\tprivate contentSize = 0;\n\tprivate proportions: undefined | number[] = undefined;\n\tprivate viewItems: IViewItem[] = [];\n\tprivate sashItems: ISashItem[] = [];\n\tprivate sashDragState: ISashDragState;\n\tprivate state: State = State.Idle;\n\tprivate inverseAltBehavior: boolean;\n\tprivate proportionalLayout: boolean;\n\n\tprivate _onDidSashChange = this._register(new Emitter<number>());\n\treadonly onDidSashChange = this._onDidSashChange.event;\n\n\tprivate _onDidSashReset = this._register(new Emitter<number>());\n\treadonly onDidSashReset = this._onDidSashReset.event;\n\n\tget length(): number {\n\t\treturn this.viewItems.length;\n\t}\n\n\tget minimumSize(): number {\n\t\treturn this.viewItems.reduce((r, item) => r + item.view.minimumSize, 0);\n\t}\n\n\tget maximumSize(): number {\n\t\treturn this.length === 0 ? Number.POSITIVE_INFINITY : this.viewItems.reduce((r, item) => r + item.view.maximumSize, 0);\n\t}\n\n\tprivate _orthogonalStartSash: Sash | undefined;\n\tget orthogonalStartSash(): Sash | undefined { return this._orthogonalStartSash; }\n\tset orthogonalStartSash(sash: Sash | undefined) {\n\t\tfor (const sashItem of this.sashItems) {\n\t\t\tsashItem.sash.orthogonalStartSash = sash;\n\t\t}\n\n\t\tthis._orthogonalStartSash = sash;\n\t}\n\n\tprivate _orthogonalEndSash: Sash | undefined;\n\tget orthogonalEndSash(): Sash | undefined { return this._orthogonalEndSash; }\n\tset orthogonalEndSash(sash: Sash | undefined) {\n\t\tfor (const sashItem of this.sashItems) {\n\t\t\tsashItem.sash.orthogonalEndSash = sash;\n\t\t}\n\n\t\tthis._orthogonalEndSash = sash;\n\t}\n\n\tget sashes(): Sash[] {\n\t\treturn this.sashItems.map(s => s.sash);\n\t}\n\n\tconstructor(container: HTMLElement, options: ISplitViewOptions = {}) {\n\t\tsuper();\n\n\t\tthis.orientation = types.isUndefined(options.orientation) ? Orientation.VERTICAL : options.orientation;\n\t\tthis.inverseAltBehavior = !!options.inverseAltBehavior;\n\t\tthis.proportionalLayout = types.isUndefined(options.proportionalLayout) ? true : !!options.proportionalLayout;\n\n\t\tthis.el = document.createElement('div');\n\t\tdom.addClass(this.el, 'monaco-split-view2');\n\t\tdom.addClass(this.el, this.orientation === Orientation.VERTICAL ? 'vertical' : 'horizontal');\n\t\tcontainer.appendChild(this.el);\n\n\t\tthis.sashContainer = dom.append(this.el, dom.$('.sash-container'));\n\t\tthis.viewContainer = dom.append(this.el, dom.$('.split-view-container'));\n\n\t\tthis.style(options.styles || defaultStyles);\n\t}\n\n\tstyle(styles: ISplitViewStyles): void {\n\t\tif (styles.separatorBorder.isTransparent()) {\n\t\t\tdom.removeClass(this.el, 'separator-border');\n\t\t\tthis.el.style.removeProperty('--separator-border');\n\t\t} else {\n\t\t\tdom.addClass(this.el, 'separator-border');\n\t\t\tthis.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n\t\t}\n\t}\n\n\taddView(view: IView, size: number | Sizing, index = this.viewItems.length): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\t// Add view\n\t\tconst container = dom.$('.split-view-view');\n\n\t\tif (index === this.viewItems.length) {\n\t\t\tthis.viewContainer.appendChild(container);\n\t\t} else {\n\t\t\tthis.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n\t\t}\n\n\t\tconst onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n\t\tconst containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n\t\tconst disposable = combinedDisposable([onChangeDisposable, containerDisposable]);\n\n\t\tconst layoutContainer = this.orientation === Orientation.VERTICAL\n\t\t\t? () => item.container.style.height = `${item.size}px`\n\t\t\t: () => item.container.style.width = `${item.size}px`;\n\n\t\tconst layout = () => {\n\t\t\tlayoutContainer();\n\t\t\titem.view.layout(item.size, this.orientation);\n\t\t};\n\n\t\tlet viewSize: number;\n\n\t\tif (typeof size === 'number') {\n\t\t\tviewSize = size;\n\t\t} else if (size.type === 'split') {\n\t\t\tviewSize = this.getViewSize(size.index) / 2;\n\t\t} else {\n\t\t\tviewSize = view.minimumSize;\n\t\t}\n\n\t\tconst item: IViewItem = { view, container, size: viewSize, layout, disposable };\n\t\tthis.viewItems.splice(index, 0, item);\n\n\t\t// Add sash\n\t\tif (this.viewItems.length > 1) {\n\t\t\tconst orientation = this.orientation === Orientation.VERTICAL ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\tconst layoutProvider = this.orientation === Orientation.VERTICAL ? { getHorizontalSashTop: (sash: Sash) => this.getSashPosition(sash) } : { getVerticalSashLeft: (sash: Sash) => this.getSashPosition(sash) };\n\t\t\tconst sash = new Sash(this.sashContainer, layoutProvider, {\n\t\t\t\torientation,\n\t\t\t\torthogonalStartSash: this.orthogonalStartSash,\n\t\t\t\torthogonalEndSash: this.orthogonalEndSash\n\t\t\t});\n\n\t\t\tconst sashEventMapper = this.orientation === Orientation.VERTICAL\n\t\t\t\t? (e: IBaseSashEvent) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey } as ISashEvent)\n\t\t\t\t: (e: IBaseSashEvent) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey } as ISashEvent);\n\n\t\t\tconst onStart = Event.map(sash.onDidStart, sashEventMapper);\n\t\t\tconst onStartDisposable = onStart(this.onSashStart, this);\n\t\t\tconst onChange = Event.map(sash.onDidChange, sashEventMapper);\n\t\t\tconst onChangeDisposable = onChange(this.onSashChange, this);\n\t\t\tconst onEnd = Event.map(sash.onDidEnd, () => firstIndex(this.sashItems, item => item.sash === sash));\n\t\t\tconst onEndDisposable = onEnd(this.onSashEnd, this);\n\t\t\tconst onDidResetDisposable = sash.onDidReset(() => this._onDidSashReset.fire(firstIndex(this.sashItems, item => item.sash === sash)));\n\n\t\t\tconst disposable = combinedDisposable([onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash]);\n\t\t\tconst sashItem: ISashItem = { sash, disposable };\n\n\t\t\tthis.sashItems.splice(index - 1, 0, sashItem);\n\t\t}\n\n\t\tcontainer.appendChild(view.element);\n\n\t\tlet highPriorityIndex: number | undefined;\n\n\t\tif (typeof size !== 'number' && size.type === 'split') {\n\t\t\thighPriorityIndex = size.index;\n\t\t}\n\n\t\tthis.relayout(index, highPriorityIndex);\n\t\tthis.state = State.Idle;\n\n\t\tif (typeof size !== 'number' && size.type === 'distribute') {\n\t\t\tthis.distributeViewSizes();\n\t\t}\n\t}\n\n\tremoveView(index: number, sizing?: Sizing): IView {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\tthrow new Error('Index out of bounds');\n\t\t}\n\n\t\t// Remove view\n\t\tconst viewItem = this.viewItems.splice(index, 1)[0];\n\t\tviewItem.disposable.dispose();\n\n\t\t// Remove sash\n\t\tif (this.viewItems.length >= 1) {\n\t\t\tconst sashIndex = Math.max(index - 1, 0);\n\t\t\tconst sashItem = this.sashItems.splice(sashIndex, 1)[0];\n\t\t\tsashItem.disposable.dispose();\n\t\t}\n\n\t\tthis.relayout();\n\t\tthis.state = State.Idle;\n\n\t\tif (sizing && sizing.type === 'distribute') {\n\t\t\tthis.distributeViewSizes();\n\t\t}\n\n\t\treturn viewItem.view;\n\t}\n\n\tmoveView(from: number, to: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tconst size = this.getViewSize(from);\n\t\tconst view = this.removeView(from);\n\t\tthis.addView(view, size, to);\n\t}\n\n\tswapViews(from: number, to: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tif (from > to) {\n\t\t\treturn this.swapViews(to, from);\n\t\t}\n\n\t\tconst fromSize = this.getViewSize(from);\n\t\tconst toSize = this.getViewSize(to);\n\t\tconst toView = this.removeView(to);\n\t\tconst fromView = this.removeView(from);\n\n\t\tthis.addView(toView, fromSize, from);\n\t\tthis.addView(fromView, toSize, to);\n\t}\n\n\tprivate relayout(lowPriorityIndex?: number, highPriorityIndex?: number): void {\n\t\tconst contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\t\tconst lowPriorityIndexes = typeof lowPriorityIndex === 'number' ? [lowPriorityIndex] : undefined;\n\t\tconst highPriorityIndexes = typeof highPriorityIndex === 'number' ? [highPriorityIndex] : undefined;\n\n\t\tthis.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t\tthis.saveProportions();\n\t}\n\n\tlayout(size: number): void {\n\t\tconst previousSize = Math.max(this.size, this.contentSize);\n\t\tthis.size = size;\n\n\t\tif (!this.proportions) {\n\t\t\tconst indexes = range(this.viewItems.length);\n\t\t\tconst lowPriorityIndexes = indexes.filter(i => this.viewItems[i].view.priority === LayoutPriority.Low);\n\t\t\tconst highPriorityIndexes = indexes.filter(i => this.viewItems[i].view.priority === LayoutPriority.High);\n\n\t\t\tthis.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n\t\t} else {\n\t\t\tfor (let i = 0; i < this.viewItems.length; i++) {\n\t\t\t\tconst item = this.viewItems[i];\n\t\t\t\titem.size = clamp(Math.round(this.proportions[i] * size), item.view.minimumSize, item.view.maximumSize);\n\t\t\t}\n\t\t}\n\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t}\n\n\tprivate saveProportions(): void {\n\t\tif (this.proportionalLayout && this.contentSize > 0) {\n\t\t\tthis.proportions = this.viewItems.map(i => i.size / this.contentSize);\n\t\t}\n\t}\n\n\tprivate onSashStart({ sash, start, alt }: ISashEvent): void {\n\t\tconst index = firstIndex(this.sashItems, item => item.sash === sash);\n\n\t\t// This way, we can press Alt while we resize a sash, macOS style!\n\t\tconst disposable = combinedDisposable([\n\t\t\tdomEvent(document.body, 'keydown')(e => resetSashDragState(this.sashDragState.current, e.altKey)),\n\t\t\tdomEvent(document.body, 'keyup')(() => resetSashDragState(this.sashDragState.current, false))\n\t\t]);\n\n\t\tconst resetSashDragState = (start: number, alt: boolean) => {\n\t\t\tconst sizes = this.viewItems.map(i => i.size);\n\t\t\tlet minDelta = Number.NEGATIVE_INFINITY;\n\t\t\tlet maxDelta = Number.POSITIVE_INFINITY;\n\n\t\t\tif (this.inverseAltBehavior) {\n\t\t\t\talt = !alt;\n\t\t\t}\n\n\t\t\tif (alt) {\n\t\t\t\t// When we're using the last sash with Alt, we're resizing\n\t\t\t\t// the view to the left/up, instead of right/down as usual\n\t\t\t\t// Thus, we must do the inverse of the usual\n\t\t\t\tconst isLastSash = index === this.sashItems.length - 1;\n\n\t\t\t\tif (isLastSash) {\n\t\t\t\t\tconst viewItem = this.viewItems[index];\n\t\t\t\t\tminDelta = (viewItem.view.minimumSize - viewItem.size) / 2;\n\t\t\t\t\tmaxDelta = (viewItem.view.maximumSize - viewItem.size) / 2;\n\t\t\t\t} else {\n\t\t\t\t\tconst viewItem = this.viewItems[index + 1];\n\t\t\t\t\tminDelta = (viewItem.size - viewItem.view.maximumSize) / 2;\n\t\t\t\t\tmaxDelta = (viewItem.size - viewItem.view.minimumSize) / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, disposable };\n\t\t};\n\n\t\tresetSashDragState(start, alt);\n\t}\n\n\tprivate onSashChange({ current }: ISashEvent): void {\n\t\tconst { index, start, sizes, alt, minDelta, maxDelta } = this.sashDragState;\n\t\tthis.sashDragState.current = current;\n\n\t\tconst delta = current - start;\n\t\tconst newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta);\n\n\t\tif (alt) {\n\t\t\tconst isLastSash = index === this.sashItems.length - 1;\n\t\t\tconst newSizes = this.viewItems.map(i => i.size);\n\t\t\tconst viewItemIndex = isLastSash ? index : index + 1;\n\t\t\tconst viewItem = this.viewItems[viewItemIndex];\n\t\t\tconst newMinDelta = viewItem.size - viewItem.view.maximumSize;\n\t\t\tconst newMaxDelta = viewItem.size - viewItem.view.minimumSize;\n\t\t\tconst resizeIndex = isLastSash ? index - 1 : index + 1;\n\n\t\t\tthis.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n\t\t}\n\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t}\n\n\tprivate onSashEnd(index: number): void {\n\t\tthis._onDidSashChange.fire(index);\n\t\tthis.sashDragState.disposable.dispose();\n\t\tthis.saveProportions();\n\t}\n\n\tprivate onViewChange(item: IViewItem, size: number | undefined): void {\n\t\tconst index = this.viewItems.indexOf(item);\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tsize = typeof size === 'number' ? size : item.size;\n\t\tsize = clamp(size, item.view.minimumSize, item.view.maximumSize);\n\n\t\tif (this.inverseAltBehavior && index > 0) {\n\t\t\t// In this case, we want the view to grow or shrink both sides equally\n\t\t\t// so we just resize the \"left\" side by half and let `resize` do the clamping magic\n\t\t\tthis.resize(index - 1, Math.floor((item.size - size) / 2));\n\t\t\tthis.distributeEmptySpace();\n\t\t\tthis.layoutViews();\n\t\t} else {\n\t\t\titem.size = size;\n\t\t\tthis.relayout(index, undefined);\n\t\t}\n\t}\n\n\tresizeView(index: number, size: number): void {\n\t\tif (this.state !== State.Idle) {\n\t\t\tthrow new Error('Cant modify splitview');\n\t\t}\n\n\t\tthis.state = State.Busy;\n\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.viewItems[index];\n\t\tsize = Math.round(size);\n\t\tsize = clamp(size, item.view.minimumSize, item.view.maximumSize);\n\t\tlet delta = size - item.size;\n\n\t\tif (delta !== 0 && index < this.viewItems.length - 1) {\n\t\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\t\t\tconst collapseDown = downIndexes.reduce((r, i) => r + (this.viewItems[i].size - this.viewItems[i].view.minimumSize), 0);\n\t\t\tconst expandDown = downIndexes.reduce((r, i) => r + (this.viewItems[i].view.maximumSize - this.viewItems[i].size), 0);\n\t\t\tconst deltaDown = clamp(delta, -expandDown, collapseDown);\n\n\t\t\tthis.resize(index, deltaDown);\n\t\t\tdelta -= deltaDown;\n\t\t}\n\n\t\tif (delta !== 0 && index > 0) {\n\t\t\tconst upIndexes = range(index - 1, -1);\n\t\t\tconst collapseUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].size - this.viewItems[i].view.minimumSize), 0);\n\t\t\tconst expandUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].view.maximumSize - this.viewItems[i].size), 0);\n\t\t\tconst deltaUp = clamp(-delta, -collapseUp, expandUp);\n\n\t\t\tthis.resize(index - 1, deltaUp);\n\t\t}\n\n\t\tthis.distributeEmptySpace();\n\t\tthis.layoutViews();\n\t\tthis.saveProportions();\n\t\tthis.state = State.Idle;\n\t}\n\n\tdistributeViewSizes(): void {\n\t\tconst size = Math.floor(this.size / this.viewItems.length);\n\n\t\tfor (let i = 0; i < this.viewItems.length - 1; i++) {\n\t\t\tthis.resizeView(i, size);\n\t\t}\n\t}\n\n\tgetViewSize(index: number): number {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.viewItems[index].size;\n\t}\n\n\tprivate resize(\n\t\tindex: number,\n\t\tdelta: number,\n\t\tsizes = this.viewItems.map(i => i.size),\n\t\tlowPriorityIndexes?: number[],\n\t\thighPriorityIndexes?: number[],\n\t\toverloadMinDelta: number = Number.NEGATIVE_INFINITY,\n\t\toverloadMaxDelta: number = Number.POSITIVE_INFINITY\n\t): number {\n\t\tif (index < 0 || index >= this.viewItems.length) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst upIndexes = range(index, -1);\n\t\tconst downIndexes = range(index + 1, this.viewItems.length);\n\n\t\tif (highPriorityIndexes) {\n\t\t\tfor (const index of highPriorityIndexes) {\n\t\t\t\tpushToStart(upIndexes, index);\n\t\t\t\tpushToStart(downIndexes, index);\n\t\t\t}\n\t\t}\n\n\t\tif (lowPriorityIndexes) {\n\t\t\tfor (const index of lowPriorityIndexes) {\n\t\t\t\tpushToEnd(upIndexes, index);\n\t\t\t\tpushToEnd(downIndexes, index);\n\t\t\t}\n\t\t}\n\n\t\tconst upItems = upIndexes.map(i => this.viewItems[i]);\n\t\tconst upSizes = upIndexes.map(i => sizes[i]);\n\n\t\tconst downItems = downIndexes.map(i => this.viewItems[i]);\n\t\tconst downSizes = downIndexes.map(i => sizes[i]);\n\n\t\tconst minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].view.minimumSize - sizes[i]), 0);\n\t\tconst maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].view.maximumSize - sizes[i]), 0);\n\t\tconst maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].view.minimumSize), 0);\n\t\tconst minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].view.maximumSize), 0);\n\t\tconst minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n\t\tconst maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n\n\t\tdelta = clamp(delta, minDelta, maxDelta);\n\n\t\tfor (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n\t\t\tconst item = upItems[i];\n\t\t\tconst size = clamp(upSizes[i] + deltaUp, item.view.minimumSize, item.view.maximumSize);\n\t\t\tconst viewDelta = size - upSizes[i];\n\n\t\t\tdeltaUp -= viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\n\t\tfor (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n\t\t\tconst item = downItems[i];\n\t\t\tconst size = clamp(downSizes[i] - deltaDown, item.view.minimumSize, item.view.maximumSize);\n\t\t\tconst viewDelta = size - downSizes[i];\n\n\t\t\tdeltaDown += viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\tprivate distributeEmptySpace(): void {\n\t\tlet contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\t\tlet emptyDelta = this.size - contentSize;\n\n\t\tfor (let i = this.viewItems.length - 1; emptyDelta !== 0 && i >= 0; i--) {\n\t\t\tconst item = this.viewItems[i];\n\t\t\tconst size = clamp(item.size + emptyDelta, item.view.minimumSize, item.view.maximumSize);\n\t\t\tconst viewDelta = size - item.size;\n\n\t\t\temptyDelta -= viewDelta;\n\t\t\titem.size = size;\n\t\t}\n\t}\n\n\tprivate layoutViews(): void {\n\t\t// Save new content size\n\t\tthis.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n\n\t\t// Layout views\n\t\tthis.viewItems.forEach(item => item.layout());\n\n\t\t// Layout sashes\n\t\tthis.sashItems.forEach(item => item.sash.layout());\n\n\t\t// Update sashes enablement\n\t\tlet previous = false;\n\t\tconst collapsesDown = this.viewItems.map(i => previous = (i.size - i.view.minimumSize > 0) || previous);\n\n\t\tprevious = false;\n\t\tconst expandsDown = this.viewItems.map(i => previous = (i.view.maximumSize - i.size > 0) || previous);\n\n\t\tconst reverseViews = [...this.viewItems].reverse();\n\t\tprevious = false;\n\t\tconst collapsesUp = reverseViews.map(i => previous = (i.size - i.view.minimumSize > 0) || previous).reverse();\n\n\t\tprevious = false;\n\t\tconst expandsUp = reverseViews.map(i => previous = (i.view.maximumSize - i.size > 0) || previous).reverse();\n\n\t\tthis.sashItems.forEach((s, i) => {\n\t\t\tconst min = !(collapsesDown[i] && expandsUp[i + 1]);\n\t\t\tconst max = !(expandsDown[i] && collapsesUp[i + 1]);\n\n\t\t\tif (min && max) {\n\t\t\t\ts.sash.state = SashState.Disabled;\n\t\t\t} else if (min && !max) {\n\t\t\t\ts.sash.state = SashState.Minimum;\n\t\t\t} else if (!min && max) {\n\t\t\t\ts.sash.state = SashState.Maximum;\n\t\t\t} else {\n\t\t\t\ts.sash.state = SashState.Enabled;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getSashPosition(sash: Sash): number {\n\t\tlet position = 0;\n\n\t\tfor (let i = 0; i < this.sashItems.length; i++) {\n\t\t\tposition += this.viewItems[i].size;\n\n\t\t\tif (this.sashItems[i].sash === sash) {\n\t\t\t\treturn position;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.viewItems.forEach(i => i.disposable.dispose());\n\t\tthis.viewItems = [];\n\n\t\tthis.sashItems.forEach(i => i.disposable.dispose());\n\t\tthis.sashItems = [];\n\t}\n}\n"]}]}