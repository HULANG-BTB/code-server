{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalLinkHandler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalLinkHandler.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar platform = require(\"vs/base/common/platform\");\nvar browser = require(\"vs/base/browser/browser\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar terminal_1 = require(\"vs/workbench/contrib/terminal/common/terminal\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar remoteHosts_1 = require(\"vs/platform/remote/common/remoteHosts\");\nvar path_1 = require(\"vs/base/common/path\");\nvar pathPrefix = '(\\\\.\\\\.?|\\\\~)';\nvar pathSeparatorClause = '\\\\/';\n// '\":; are allowed in paths but they are often separators so ignore them\n// Also disallow \\\\ to prevent a catastropic backtracking case #24798\nvar excludedPathCharactersClause = '[^\\\\0\\\\s!$`&*()\\\\[\\\\]+\\'\":;\\\\\\\\]';\n/** A regex that matches paths in the form /foo, ~/foo, ./foo, ../foo, foo/bar */\nvar unixLocalLinkClause = '((' + pathPrefix + '|(' + excludedPathCharactersClause + ')+)?(' + pathSeparatorClause + '(' + excludedPathCharactersClause + ')+)+)';\nvar winDrivePrefix = '[a-zA-Z]:';\nvar winPathPrefix = '(' + winDrivePrefix + '|\\\\.\\\\.?|\\\\~)';\nvar winPathSeparatorClause = '(\\\\\\\\|\\\\/)';\nvar winExcludedPathCharactersClause = '[^\\\\0<>\\\\?\\\\|\\\\/\\\\s!$`&*()\\\\[\\\\]+\\'\":;]';\n/** A regex that matches paths in the form c:\\foo, ~\\foo, .\\foo, ..\\foo, foo\\bar */\nvar winLocalLinkClause = '((' + winPathPrefix + '|(' + winExcludedPathCharactersClause + ')+)?(' + winPathSeparatorClause + '(' + winExcludedPathCharactersClause + ')+)+)';\n/** As xterm reads from DOM, space in that case is nonbreaking char ASCII code - 160,\nreplacing space with nonBreakningSpace or space ASCII code - 32. */\nvar lineAndColumnClause = [\n    '((\\\\S*)\", line ((\\\\d+)( column (\\\\d+))?))',\n    '((\\\\S*) on line ((\\\\d+)(, column (\\\\d+))?))',\n    '((\\\\S*):line ((\\\\d+)(, column (\\\\d+))?))',\n    '(([^\\\\s\\\\(\\\\)]*)(\\\\s?[\\\\(\\\\[](\\\\d+)(,\\\\s?(\\\\d+))?)[\\\\)\\\\]])',\n    '(([^:\\\\s\\\\(\\\\)<>\\'\\\"\\\\[\\\\]]*)(:(\\\\d+))?(:(\\\\d+))?)' // (file path):336, (file path):336:9\n].join('|').replace(/ /g, \"[\" + '\\u00A0' + \" ]\");\n// Changing any regex may effect this value, hence changes this as well if required.\nvar winLineAndColumnMatchIndex = 12;\nvar unixLineAndColumnMatchIndex = 11;\n// Each line and column clause have 6 groups (ie no. of expressions in round brackets)\nvar lineAndColumnClauseGroupCount = 6;\n/** Higher than local link, lower than hypertext */\nvar CUSTOM_LINK_PRIORITY = -1;\n/** Lowest */\nvar LOCAL_LINK_PRIORITY = -2;\nvar TerminalLinkHandler = /** @class */ (function () {\n    function TerminalLinkHandler(_xterm, _platform, _processManager, _openerService, _editorService, _configurationService, _terminalService, _fileService) {\n        var _this = this;\n        this._xterm = _xterm;\n        this._platform = _platform;\n        this._processManager = _processManager;\n        this._openerService = _openerService;\n        this._editorService = _editorService;\n        this._configurationService = _configurationService;\n        this._terminalService = _terminalService;\n        this._fileService = _fileService;\n        this._hoverDisposables = [];\n        // Matches '--- a/src/file1', capturing 'src/file1' in group 1\n        this._gitDiffPreImagePattern = /^--- a\\/(\\S*)/;\n        // Matches '+++ b/src/file1', capturing 'src/file1' in group 1\n        this._gitDiffPostImagePattern = /^\\+\\+\\+ b\\/(\\S*)/;\n        this._tooltipCallback = function (e) {\n            if (_this._terminalService && _this._terminalService.configHelper.config.rendererType === 'dom') {\n                var target = e.target;\n                _this._widgetManager.showMessage(target.offsetLeft, target.offsetTop, _this._getLinkHoverString());\n            }\n            else {\n                _this._widgetManager.showMessage(e.offsetX, e.offsetY, _this._getLinkHoverString());\n            }\n        };\n        this.registerWebLinkHandler();\n        this.registerLocalLinkHandler();\n        this.registerGitDiffLinkHandlers();\n    }\n    TerminalLinkHandler.prototype.setWidgetManager = function (widgetManager) {\n        this._widgetManager = widgetManager;\n    };\n    Object.defineProperty(TerminalLinkHandler.prototype, \"processCwd\", {\n        set: function (processCwd) {\n            this._processCwd = processCwd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TerminalLinkHandler.prototype.registerCustomLinkHandler = function (regex, handler, matchIndex, validationCallback) {\n        var _this = this;\n        var options = {\n            matchIndex: matchIndex,\n            tooltipCallback: this._tooltipCallback,\n            leaveCallback: function () { return _this._widgetManager.closeMessage(); },\n            willLinkActivate: function (e) { return _this._isLinkActivationModifierDown(e); },\n            priority: CUSTOM_LINK_PRIORITY\n        };\n        if (validationCallback) {\n            options.validationCallback = function (uri, callback) { return validationCallback(uri, callback); };\n        }\n        return this._xterm.registerLinkMatcher(regex, this._wrapLinkHandler(handler), options);\n    };\n    TerminalLinkHandler.prototype.registerWebLinkHandler = function () {\n        var _this = this;\n        var wrappedHandler = this._wrapLinkHandler(function (uri) {\n            _this._handleHypertextLink(uri);\n        });\n        this._xterm.webLinksInit(wrappedHandler, {\n            validationCallback: function (uri, callback) { return _this._validateWebLink(uri, callback); },\n            tooltipCallback: this._tooltipCallback,\n            leaveCallback: function () { return _this._widgetManager.closeMessage(); },\n            willLinkActivate: function (e) { return _this._isLinkActivationModifierDown(e); }\n        });\n    };\n    TerminalLinkHandler.prototype.registerLocalLinkHandler = function () {\n        var _this = this;\n        var wrappedHandler = this._wrapLinkHandler(function (url) {\n            _this._handleLocalLink(url);\n        });\n        this._xterm.registerLinkMatcher(this._localLinkRegex, wrappedHandler, {\n            validationCallback: function (uri, callback) { return _this._validateLocalLink(uri, callback); },\n            tooltipCallback: this._tooltipCallback,\n            leaveCallback: function () { return _this._widgetManager.closeMessage(); },\n            willLinkActivate: function (e) { return _this._isLinkActivationModifierDown(e); },\n            priority: LOCAL_LINK_PRIORITY\n        });\n    };\n    TerminalLinkHandler.prototype.registerGitDiffLinkHandlers = function () {\n        var _this = this;\n        var wrappedHandler = this._wrapLinkHandler(function (url) {\n            _this._handleLocalLink(url);\n        });\n        var options = {\n            matchIndex: 1,\n            validationCallback: function (uri, callback) { return _this._validateLocalLink(uri, callback); },\n            tooltipCallback: this._tooltipCallback,\n            leaveCallback: function () { return _this._widgetManager.closeMessage(); },\n            willLinkActivate: function (e) { return _this._isLinkActivationModifierDown(e); },\n            priority: LOCAL_LINK_PRIORITY\n        };\n        this._xterm.registerLinkMatcher(this._gitDiffPreImagePattern, wrappedHandler, options);\n        this._xterm.registerLinkMatcher(this._gitDiffPostImagePattern, wrappedHandler, options);\n    };\n    TerminalLinkHandler.prototype.dispose = function () {\n        this._xterm = null;\n        this._hoverDisposables = lifecycle_1.dispose(this._hoverDisposables);\n        this._mouseMoveDisposable = lifecycle_1.dispose(this._mouseMoveDisposable);\n    };\n    TerminalLinkHandler.prototype._wrapLinkHandler = function (handler) {\n        var _this = this;\n        return function (event, uri) {\n            // Prevent default electron link handling so Alt+Click mode works normally\n            event.preventDefault();\n            // Require correct modifier on click\n            if (!_this._isLinkActivationModifierDown(event)) {\n                // If the modifier is not pressed, the terminal should be\n                // focused if it's not already\n                _this._terminalService.getActiveInstance().focus(true);\n                return false;\n            }\n            return handler(uri);\n        };\n    };\n    Object.defineProperty(TerminalLinkHandler.prototype, \"_localLinkRegex\", {\n        get: function () {\n            var baseLocalLinkClause = this._processManager.os === platform.OperatingSystem.Windows ? winLocalLinkClause : unixLocalLinkClause;\n            // Append line and column number regex\n            return new RegExp(baseLocalLinkClause + \"(\" + lineAndColumnClause + \")\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalLinkHandler.prototype, \"_gitDiffPreImageRegex\", {\n        get: function () {\n            return this._gitDiffPreImagePattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TerminalLinkHandler.prototype, \"_gitDiffPostImageRegex\", {\n        get: function () {\n            return this._gitDiffPostImagePattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TerminalLinkHandler.prototype._handleLocalLink = function (link) {\n        var _this = this;\n        return this._resolvePath(link).then(function (resolvedLink) {\n            if (!resolvedLink) {\n                return Promise.resolve(null);\n            }\n            var lineColumnInfo = _this.extractLineColumnInfo(link);\n            var selection = {\n                startLineNumber: lineColumnInfo.lineNumber,\n                startColumn: lineColumnInfo.columnNumber\n            };\n            return _this._editorService.openEditor({ resource: resolvedLink, options: { pinned: true, selection: selection } });\n        });\n    };\n    TerminalLinkHandler.prototype._validateLocalLink = function (link, callback) {\n        this._resolvePath(link).then(function (resolvedLink) { return callback(!!resolvedLink); });\n    };\n    TerminalLinkHandler.prototype._validateWebLink = function (link, callback) {\n        callback(true);\n    };\n    TerminalLinkHandler.prototype._handleHypertextLink = function (url) {\n        var uri = uri_1.URI.parse(url);\n        this._openerService.open(uri);\n    };\n    TerminalLinkHandler.prototype._isLinkActivationModifierDown = function (event) {\n        var editorConf = this._configurationService.getValue('editor');\n        if (editorConf.multiCursorModifier === 'ctrlCmd') {\n            return !!event.altKey;\n        }\n        return browser.isMacintosh ? event.metaKey : event.ctrlKey;\n    };\n    TerminalLinkHandler.prototype._getLinkHoverString = function () {\n        var editorConf = this._configurationService.getValue('editor');\n        if (editorConf.multiCursorModifier === 'ctrlCmd') {\n            return nls.localize('terminalLinkHandler.followLinkAlt', 'Alt + click to follow link');\n        }\n        if (browser.isMacintosh) {\n            return nls.localize('terminalLinkHandler.followLinkCmd', 'Cmd + click to follow link');\n        }\n        return nls.localize('terminalLinkHandler.followLinkCtrl', 'Ctrl + click to follow link');\n    };\n    Object.defineProperty(TerminalLinkHandler.prototype, \"osPath\", {\n        get: function () {\n            if (this._processManager.os === platform.OperatingSystem.Windows) {\n                return path_1.win32;\n            }\n            return path_1.posix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TerminalLinkHandler.prototype._preprocessPath = function (link) {\n        if (link.charAt(0) === '~') {\n            // Resolve ~ -> userHome\n            if (!this._processManager.userHome) {\n                return null;\n            }\n            link = this.osPath.join(this._processManager.userHome, link.substring(1));\n        }\n        else if (link.charAt(0) !== '/' && link.charAt(0) !== '~') {\n            // Resolve workspace path . | .. | <relative_path> -> <path>/. | <path>/.. | <path>/<relative_path>\n            if (this._processManager.os === platform.OperatingSystem.Windows) {\n                if (!link.match('^' + winDrivePrefix)) {\n                    if (!this._processCwd) {\n                        // Abort if no workspace is open\n                        return null;\n                    }\n                    link = this.osPath.join(this._processCwd, link);\n                }\n            }\n            else {\n                if (!this._processCwd) {\n                    // Abort if no workspace is open\n                    return null;\n                }\n                link = this.osPath.join(this._processCwd, link);\n            }\n        }\n        link = this.osPath.normalize(link);\n        return link;\n    };\n    TerminalLinkHandler.prototype._resolvePath = function (link) {\n        var preprocessedLink = this._preprocessPath(link);\n        if (!preprocessedLink) {\n            return Promise.resolve(null);\n        }\n        var linkUrl = this.extractLinkUrl(preprocessedLink);\n        if (!linkUrl) {\n            return Promise.resolve(null);\n        }\n        try {\n            var uri_2;\n            if (this._processManager.remoteAuthority) {\n                uri_2 = uri_1.URI.from({\n                    scheme: remoteHosts_1.REMOTE_HOST_SCHEME,\n                    authority: this._processManager.remoteAuthority,\n                    path: linkUrl\n                });\n            }\n            else {\n                uri_2 = uri_1.URI.file(linkUrl);\n            }\n            return this._fileService.resolveFile(uri_2).then(function (stat) {\n                if (stat.isDirectory) {\n                    return null;\n                }\n                return uri_2;\n            }).catch(function () {\n                // Does not exist\n                return null;\n            });\n        }\n        catch (_a) {\n            // Errors in parsing the path\n            return Promise.resolve(null);\n        }\n    };\n    /**\n     * Returns line and column number of URl if that is present.\n     *\n     * @param link Url link which may contain line and column number.\n     */\n    TerminalLinkHandler.prototype.extractLineColumnInfo = function (link) {\n        var matches = this._localLinkRegex.exec(link);\n        var lineColumnInfo = {\n            lineNumber: 1,\n            columnNumber: 1\n        };\n        if (!matches) {\n            return lineColumnInfo;\n        }\n        var lineAndColumnMatchIndex = this._platform === platform.Platform.Windows ? winLineAndColumnMatchIndex : unixLineAndColumnMatchIndex;\n        for (var i = 0; i < lineAndColumnClause.length; i++) {\n            var lineMatchIndex = lineAndColumnMatchIndex + (lineAndColumnClauseGroupCount * i);\n            var rowNumber = matches[lineMatchIndex];\n            if (rowNumber) {\n                lineColumnInfo['lineNumber'] = parseInt(rowNumber, 10);\n                // Check if column number exists\n                var columnNumber = matches[lineMatchIndex + 2];\n                if (columnNumber) {\n                    lineColumnInfo['columnNumber'] = parseInt(columnNumber, 10);\n                }\n                break;\n            }\n        }\n        return lineColumnInfo;\n    };\n    /**\n     * Returns url from link as link may contain line and column information.\n     *\n     * @param link url link which may contain line and column number.\n     */\n    TerminalLinkHandler.prototype.extractLinkUrl = function (link) {\n        var matches = this._localLinkRegex.exec(link);\n        if (!matches) {\n            return null;\n        }\n        return matches[1];\n    };\n    TerminalLinkHandler = tslib_1.__decorate([\n        tslib_1.__param(3, opener_1.IOpenerService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, configuration_1.IConfigurationService),\n        tslib_1.__param(6, terminal_1.ITerminalService),\n        tslib_1.__param(7, files_1.IFileService)\n    ], TerminalLinkHandler);\n    return TerminalLinkHandler;\n}());\nexports.TerminalLinkHandler = TerminalLinkHandler;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalLinkHandler.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/browser/terminalLinkHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as platform from 'vs/base/common/platform';\nimport * as browser from 'vs/base/browser/browser';\nimport { URI } from 'vs/base/common/uri';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { TerminalWidgetManager } from 'vs/workbench/contrib/terminal/browser/terminalWidgetManager';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ITerminalService, ITerminalProcessManager } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { ITextEditorSelection } from 'vs/platform/editor/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILinkMatcherOptions } from 'vscode-xterm';\nimport { REMOTE_HOST_SCHEME } from 'vs/platform/remote/common/remoteHosts';\nimport { posix, win32 } from 'vs/base/common/path';\n\nconst pathPrefix = '(\\\\.\\\\.?|\\\\~)';\nconst pathSeparatorClause = '\\\\/';\n// '\":; are allowed in paths but they are often separators so ignore them\n// Also disallow \\\\ to prevent a catastropic backtracking case #24798\nconst excludedPathCharactersClause = '[^\\\\0\\\\s!$`&*()\\\\[\\\\]+\\'\":;\\\\\\\\]';\n/** A regex that matches paths in the form /foo, ~/foo, ./foo, ../foo, foo/bar */\nconst unixLocalLinkClause = '((' + pathPrefix + '|(' + excludedPathCharactersClause + ')+)?(' + pathSeparatorClause + '(' + excludedPathCharactersClause + ')+)+)';\n\nconst winDrivePrefix = '[a-zA-Z]:';\nconst winPathPrefix = '(' + winDrivePrefix + '|\\\\.\\\\.?|\\\\~)';\nconst winPathSeparatorClause = '(\\\\\\\\|\\\\/)';\nconst winExcludedPathCharactersClause = '[^\\\\0<>\\\\?\\\\|\\\\/\\\\s!$`&*()\\\\[\\\\]+\\'\":;]';\n/** A regex that matches paths in the form c:\\foo, ~\\foo, .\\foo, ..\\foo, foo\\bar */\nconst winLocalLinkClause = '((' + winPathPrefix + '|(' + winExcludedPathCharactersClause + ')+)?(' + winPathSeparatorClause + '(' + winExcludedPathCharactersClause + ')+)+)';\n\n/** As xterm reads from DOM, space in that case is nonbreaking char ASCII code - 160,\nreplacing space with nonBreakningSpace or space ASCII code - 32. */\nconst lineAndColumnClause = [\n\t'((\\\\S*)\", line ((\\\\d+)( column (\\\\d+))?))', // \"(file path)\", line 45 [see #40468]\n\t'((\\\\S*) on line ((\\\\d+)(, column (\\\\d+))?))', // (file path) on line 8, column 13\n\t'((\\\\S*):line ((\\\\d+)(, column (\\\\d+))?))', // (file path):line 8, column 13\n\t'(([^\\\\s\\\\(\\\\)]*)(\\\\s?[\\\\(\\\\[](\\\\d+)(,\\\\s?(\\\\d+))?)[\\\\)\\\\]])', // (file path)(45), (file path) (45), (file path)(45,18), (file path) (45,18), (file path)(45, 18), (file path) (45, 18), also with []\n\t'(([^:\\\\s\\\\(\\\\)<>\\'\\\"\\\\[\\\\]]*)(:(\\\\d+))?(:(\\\\d+))?)' // (file path):336, (file path):336:9\n].join('|').replace(/ /g, `[${'\\u00A0'} ]`);\n\n// Changing any regex may effect this value, hence changes this as well if required.\nconst winLineAndColumnMatchIndex = 12;\nconst unixLineAndColumnMatchIndex = 11;\n\n// Each line and column clause have 6 groups (ie no. of expressions in round brackets)\nconst lineAndColumnClauseGroupCount = 6;\n\n/** Higher than local link, lower than hypertext */\nconst CUSTOM_LINK_PRIORITY = -1;\n/** Lowest */\nconst LOCAL_LINK_PRIORITY = -2;\n\nexport type XtermLinkMatcherHandler = (event: MouseEvent, uri: string) => boolean | void;\nexport type XtermLinkMatcherValidationCallback = (uri: string, callback: (isValid: boolean) => void) => void;\n\ninterface IPath {\n\tjoin(...paths: string[]): string;\n\tnormalize(path: string): string;\n}\n\nexport class TerminalLinkHandler {\n\tprivate _hoverDisposables: IDisposable[] = [];\n\tprivate _mouseMoveDisposable: IDisposable;\n\tprivate _widgetManager: TerminalWidgetManager;\n\tprivate _processCwd: string;\n\tprivate _gitDiffPreImagePattern: RegExp;\n\tprivate _gitDiffPostImagePattern: RegExp;\n\tprivate readonly _tooltipCallback: (event: MouseEvent, uri: string) => boolean | void;\n\n\tconstructor(\n\t\tprivate _xterm: any,\n\t\tprivate _platform: platform.Platform,\n\t\tprivate readonly _processManager: ITerminalProcessManager,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITerminalService private readonly _terminalService: ITerminalService,\n\t\t@IFileService private readonly _fileService: IFileService\n\t) {\n\t\t// Matches '--- a/src/file1', capturing 'src/file1' in group 1\n\t\tthis._gitDiffPreImagePattern = /^--- a\\/(\\S*)/;\n\t\t// Matches '+++ b/src/file1', capturing 'src/file1' in group 1\n\t\tthis._gitDiffPostImagePattern = /^\\+\\+\\+ b\\/(\\S*)/;\n\n\t\tthis._tooltipCallback = (e: MouseEvent) => {\n\t\t\tif (this._terminalService && this._terminalService.configHelper.config.rendererType === 'dom') {\n\t\t\t\tconst target = (e.target as HTMLElement);\n\t\t\t\tthis._widgetManager.showMessage(target.offsetLeft, target.offsetTop, this._getLinkHoverString());\n\t\t\t} else {\n\t\t\t\tthis._widgetManager.showMessage(e.offsetX, e.offsetY, this._getLinkHoverString());\n\t\t\t}\n\t\t};\n\n\t\tthis.registerWebLinkHandler();\n\t\tthis.registerLocalLinkHandler();\n\t\tthis.registerGitDiffLinkHandlers();\n\t}\n\n\tpublic setWidgetManager(widgetManager: TerminalWidgetManager): void {\n\t\tthis._widgetManager = widgetManager;\n\t}\n\n\tpublic set processCwd(processCwd: string) {\n\t\tthis._processCwd = processCwd;\n\t}\n\n\tpublic registerCustomLinkHandler(regex: RegExp, handler: (uri: string) => void, matchIndex?: number, validationCallback?: XtermLinkMatcherValidationCallback): number {\n\t\tconst options: ILinkMatcherOptions = {\n\t\t\tmatchIndex,\n\t\t\ttooltipCallback: this._tooltipCallback,\n\t\t\tleaveCallback: () => this._widgetManager.closeMessage(),\n\t\t\twillLinkActivate: (e: MouseEvent) => this._isLinkActivationModifierDown(e),\n\t\t\tpriority: CUSTOM_LINK_PRIORITY\n\t\t};\n\t\tif (validationCallback) {\n\t\t\toptions.validationCallback = (uri: string, callback: (isValid: boolean) => void) => validationCallback(uri, callback);\n\t\t}\n\t\treturn this._xterm.registerLinkMatcher(regex, this._wrapLinkHandler(handler), options);\n\t}\n\n\tpublic registerWebLinkHandler(): void {\n\t\tconst wrappedHandler = this._wrapLinkHandler(uri => {\n\t\t\tthis._handleHypertextLink(uri);\n\t\t});\n\t\tthis._xterm.webLinksInit(wrappedHandler, {\n\t\t\tvalidationCallback: (uri: string, callback: (isValid: boolean) => void) => this._validateWebLink(uri, callback),\n\t\t\ttooltipCallback: this._tooltipCallback,\n\t\t\tleaveCallback: () => this._widgetManager.closeMessage(),\n\t\t\twillLinkActivate: (e: MouseEvent) => this._isLinkActivationModifierDown(e)\n\t\t});\n\t}\n\n\tpublic registerLocalLinkHandler(): void {\n\t\tconst wrappedHandler = this._wrapLinkHandler(url => {\n\t\t\tthis._handleLocalLink(url);\n\t\t});\n\t\tthis._xterm.registerLinkMatcher(this._localLinkRegex, wrappedHandler, {\n\t\t\tvalidationCallback: (uri: string, callback: (isValid: boolean) => void) => this._validateLocalLink(uri, callback),\n\t\t\ttooltipCallback: this._tooltipCallback,\n\t\t\tleaveCallback: () => this._widgetManager.closeMessage(),\n\t\t\twillLinkActivate: (e: MouseEvent) => this._isLinkActivationModifierDown(e),\n\t\t\tpriority: LOCAL_LINK_PRIORITY\n\t\t});\n\t}\n\n\tpublic registerGitDiffLinkHandlers(): void {\n\t\tconst wrappedHandler = this._wrapLinkHandler(url => {\n\t\t\tthis._handleLocalLink(url);\n\t\t});\n\t\tconst options = {\n\t\t\tmatchIndex: 1,\n\t\t\tvalidationCallback: (uri: string, callback: (isValid: boolean) => void) => this._validateLocalLink(uri, callback),\n\t\t\ttooltipCallback: this._tooltipCallback,\n\t\t\tleaveCallback: () => this._widgetManager.closeMessage(),\n\t\t\twillLinkActivate: (e: MouseEvent) => this._isLinkActivationModifierDown(e),\n\t\t\tpriority: LOCAL_LINK_PRIORITY\n\t\t};\n\t\tthis._xterm.registerLinkMatcher(this._gitDiffPreImagePattern, wrappedHandler, options);\n\t\tthis._xterm.registerLinkMatcher(this._gitDiffPostImagePattern, wrappedHandler, options);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._xterm = null;\n\t\tthis._hoverDisposables = dispose(this._hoverDisposables);\n\t\tthis._mouseMoveDisposable = dispose(this._mouseMoveDisposable);\n\t}\n\n\tprivate _wrapLinkHandler(handler: (uri: string) => boolean | void): XtermLinkMatcherHandler {\n\t\treturn (event: MouseEvent, uri: string) => {\n\t\t\t// Prevent default electron link handling so Alt+Click mode works normally\n\t\t\tevent.preventDefault();\n\t\t\t// Require correct modifier on click\n\t\t\tif (!this._isLinkActivationModifierDown(event)) {\n\t\t\t\t// If the modifier is not pressed, the terminal should be\n\t\t\t\t// focused if it's not already\n\t\t\t\tthis._terminalService.getActiveInstance()!.focus(true);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn handler(uri);\n\t\t};\n\t}\n\n\tprotected get _localLinkRegex(): RegExp {\n\t\tconst baseLocalLinkClause = this._processManager.os === platform.OperatingSystem.Windows ? winLocalLinkClause : unixLocalLinkClause;\n\t\t// Append line and column number regex\n\t\treturn new RegExp(`${baseLocalLinkClause}(${lineAndColumnClause})`);\n\t}\n\n\tprotected get _gitDiffPreImageRegex(): RegExp {\n\t\treturn this._gitDiffPreImagePattern;\n\t}\n\n\tprotected get _gitDiffPostImageRegex(): RegExp {\n\t\treturn this._gitDiffPostImagePattern;\n\t}\n\n\tprivate _handleLocalLink(link: string): PromiseLike<any> {\n\t\treturn this._resolvePath(link).then(resolvedLink => {\n\t\t\tif (!resolvedLink) {\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t\tconst lineColumnInfo: LineColumnInfo = this.extractLineColumnInfo(link);\n\t\t\tconst selection: ITextEditorSelection = {\n\t\t\t\tstartLineNumber: lineColumnInfo.lineNumber,\n\t\t\t\tstartColumn: lineColumnInfo.columnNumber\n\t\t\t};\n\t\t\treturn this._editorService.openEditor({ resource: resolvedLink, options: { pinned: true, selection } });\n\t\t});\n\t}\n\n\tprivate _validateLocalLink(link: string, callback: (isValid: boolean) => void): void {\n\t\tthis._resolvePath(link).then(resolvedLink => callback(!!resolvedLink));\n\t}\n\n\tprivate _validateWebLink(link: string, callback: (isValid: boolean) => void): void {\n\t\tcallback(true);\n\t}\n\n\tprivate _handleHypertextLink(url: string): void {\n\t\tconst uri = URI.parse(url);\n\t\tthis._openerService.open(uri);\n\t}\n\n\tprivate _isLinkActivationModifierDown(event: MouseEvent): boolean {\n\t\tconst editorConf = this._configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\treturn !!event.altKey;\n\t\t}\n\t\treturn browser.isMacintosh ? event.metaKey : event.ctrlKey;\n\t}\n\n\tprivate _getLinkHoverString(): string {\n\t\tconst editorConf = this._configurationService.getValue<{ multiCursorModifier: 'ctrlCmd' | 'alt' }>('editor');\n\t\tif (editorConf.multiCursorModifier === 'ctrlCmd') {\n\t\t\treturn nls.localize('terminalLinkHandler.followLinkAlt', 'Alt + click to follow link');\n\t\t}\n\t\tif (browser.isMacintosh) {\n\t\t\treturn nls.localize('terminalLinkHandler.followLinkCmd', 'Cmd + click to follow link');\n\t\t}\n\t\treturn nls.localize('terminalLinkHandler.followLinkCtrl', 'Ctrl + click to follow link');\n\t}\n\n\tprivate get osPath(): IPath {\n\t\tif (this._processManager.os === platform.OperatingSystem.Windows) {\n\t\t\treturn win32;\n\t\t}\n\t\treturn posix;\n\t}\n\n\tprotected _preprocessPath(link: string): string | null {\n\t\tif (link.charAt(0) === '~') {\n\t\t\t// Resolve ~ -> userHome\n\t\t\tif (!this._processManager.userHome) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlink = this.osPath.join(this._processManager.userHome, link.substring(1));\n\t\t} else if (link.charAt(0) !== '/' && link.charAt(0) !== '~') {\n\t\t\t// Resolve workspace path . | .. | <relative_path> -> <path>/. | <path>/.. | <path>/<relative_path>\n\t\t\tif (this._processManager.os === platform.OperatingSystem.Windows) {\n\t\t\t\tif (!link.match('^' + winDrivePrefix)) {\n\t\t\t\t\tif (!this._processCwd) {\n\t\t\t\t\t\t// Abort if no workspace is open\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tlink = this.osPath.join(this._processCwd, link);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this._processCwd) {\n\t\t\t\t\t// Abort if no workspace is open\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlink = this.osPath.join(this._processCwd, link);\n\t\t\t}\n\t\t}\n\t\tlink = this.osPath.normalize(link);\n\n\t\treturn link;\n\t}\n\n\tprivate _resolvePath(link: string): PromiseLike<URI | null> {\n\t\tconst preprocessedLink = this._preprocessPath(link);\n\t\tif (!preprocessedLink) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst linkUrl = this.extractLinkUrl(preprocessedLink);\n\t\tif (!linkUrl) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\ttry {\n\t\t\tlet uri: URI;\n\t\t\tif (this._processManager.remoteAuthority) {\n\t\t\t\turi = URI.from({\n\t\t\t\t\tscheme: REMOTE_HOST_SCHEME,\n\t\t\t\t\tauthority: this._processManager.remoteAuthority,\n\t\t\t\t\tpath: linkUrl\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\turi = URI.file(linkUrl);\n\t\t\t}\n\n\t\t\treturn this._fileService.resolveFile(uri).then(stat => {\n\t\t\t\tif (stat.isDirectory) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn uri;\n\t\t\t}).catch(() => {\n\t\t\t\t// Does not exist\n\t\t\t\treturn null;\n\t\t\t});\n\t\t} catch {\n\t\t\t// Errors in parsing the path\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t}\n\n\t/**\n\t * Returns line and column number of URl if that is present.\n\t *\n\t * @param link Url link which may contain line and column number.\n\t */\n\tpublic extractLineColumnInfo(link: string): LineColumnInfo {\n\t\tconst matches: string[] | null = this._localLinkRegex.exec(link);\n\t\tconst lineColumnInfo: LineColumnInfo = {\n\t\t\tlineNumber: 1,\n\t\t\tcolumnNumber: 1\n\t\t};\n\n\t\tif (!matches) {\n\t\t\treturn lineColumnInfo;\n\t\t}\n\n\t\tconst lineAndColumnMatchIndex = this._platform === platform.Platform.Windows ? winLineAndColumnMatchIndex : unixLineAndColumnMatchIndex;\n\t\tfor (let i = 0; i < lineAndColumnClause.length; i++) {\n\t\t\tconst lineMatchIndex = lineAndColumnMatchIndex + (lineAndColumnClauseGroupCount * i);\n\t\t\tconst rowNumber = matches[lineMatchIndex];\n\t\t\tif (rowNumber) {\n\t\t\t\tlineColumnInfo['lineNumber'] = parseInt(rowNumber, 10);\n\t\t\t\t// Check if column number exists\n\t\t\t\tconst columnNumber = matches[lineMatchIndex + 2];\n\t\t\t\tif (columnNumber) {\n\t\t\t\t\tlineColumnInfo['columnNumber'] = parseInt(columnNumber, 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn lineColumnInfo;\n\t}\n\n\t/**\n\t * Returns url from link as link may contain line and column information.\n\t *\n\t * @param link url link which may contain line and column number.\n\t */\n\tpublic extractLinkUrl(link: string): string | null {\n\t\tconst matches: string[] | null = this._localLinkRegex.exec(link);\n\t\tif (!matches) {\n\t\t\treturn null;\n\t\t}\n\t\treturn matches[1];\n\t}\n}\n\nexport interface LineColumnInfo {\n\tlineNumber: number;\n\tcolumnNumber: number;\n}\n"]}]}