{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/core/editorState.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/core/editorState.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar strings = require(\"vs/base/common/strings\");\nvar CodeEditorStateFlag;\n(function (CodeEditorStateFlag) {\n    CodeEditorStateFlag[CodeEditorStateFlag[\"Value\"] = 1] = \"Value\";\n    CodeEditorStateFlag[CodeEditorStateFlag[\"Selection\"] = 2] = \"Selection\";\n    CodeEditorStateFlag[CodeEditorStateFlag[\"Position\"] = 4] = \"Position\";\n    CodeEditorStateFlag[CodeEditorStateFlag[\"Scroll\"] = 8] = \"Scroll\";\n})(CodeEditorStateFlag = exports.CodeEditorStateFlag || (exports.CodeEditorStateFlag = {}));\nvar EditorState = /** @class */ (function () {\n    function EditorState(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & CodeEditorStateFlag.Value) !== 0) {\n            var model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        if ((this.flags & CodeEditorStateFlag.Position) !== 0) {\n            this.position = editor.getPosition();\n        }\n        if ((this.flags & CodeEditorStateFlag.Selection) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        if ((this.flags & CodeEditorStateFlag.Scroll) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n    }\n    EditorState.prototype._equals = function (other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        var state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    };\n    EditorState.prototype.validate = function (editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    };\n    return EditorState;\n}());\nexports.EditorState = EditorState;\nvar StableEditorScrollState = /** @class */ (function () {\n    function StableEditorScrollState(_visiblePosition, _visiblePositionScrollDelta) {\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n    }\n    StableEditorScrollState.capture = function (editor) {\n        var visiblePosition = null;\n        var visiblePositionScrollDelta = 0;\n        if (editor.getScrollTop() !== 0) {\n            var visibleRanges = editor.getVisibleRanges();\n            if (visibleRanges.length > 0) {\n                visiblePosition = visibleRanges[0].getStartPosition();\n                var visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n                visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n            }\n        }\n        return new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta);\n    };\n    StableEditorScrollState.prototype.restore = function (editor) {\n        if (this._visiblePosition) {\n            var visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    };\n    return StableEditorScrollState;\n}());\nexports.StableEditorScrollState = StableEditorScrollState;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/core/editorState.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/core/editorState.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport const enum CodeEditorStateFlag {\n\tValue = 1,\n\tSelection = 2,\n\tPosition = 4,\n\tScroll = 8\n}\n\nexport class EditorState {\n\n\tprivate readonly flags: number;\n\n\tprivate readonly position: Position | null;\n\tprivate readonly selection: Range | null;\n\tprivate readonly modelVersionId: string | null;\n\tprivate readonly scrollLeft: number;\n\tprivate readonly scrollTop: number;\n\n\tconstructor(editor: ICodeEditor, flags: number) {\n\t\tthis.flags = flags;\n\n\t\tif ((this.flags & CodeEditorStateFlag.Value) !== 0) {\n\t\t\tconst model = editor.getModel();\n\t\t\tthis.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Position) !== 0) {\n\t\t\tthis.position = editor.getPosition();\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Selection) !== 0) {\n\t\t\tthis.selection = editor.getSelection();\n\t\t}\n\t\tif ((this.flags & CodeEditorStateFlag.Scroll) !== 0) {\n\t\t\tthis.scrollLeft = editor.getScrollLeft();\n\t\t\tthis.scrollTop = editor.getScrollTop();\n\t\t}\n\t}\n\n\tprivate _equals(other: any): boolean {\n\n\t\tif (!(other instanceof EditorState)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst state = <EditorState>other;\n\n\t\tif (this.modelVersionId !== state.modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic validate(editor: ICodeEditor): boolean {\n\t\treturn this._equals(new EditorState(editor, this.flags));\n\t}\n}\n\nexport class StableEditorScrollState {\n\n\tpublic static capture(editor: ICodeEditor): StableEditorScrollState {\n\t\tlet visiblePosition: Position | null = null;\n\t\tlet visiblePositionScrollDelta = 0;\n\t\tif (editor.getScrollTop() !== 0) {\n\t\t\tconst visibleRanges = editor.getVisibleRanges();\n\t\t\tif (visibleRanges.length > 0) {\n\t\t\t\tvisiblePosition = visibleRanges[0].getStartPosition();\n\t\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n\t\t\t\tvisiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n\t\t\t}\n\t\t}\n\t\treturn new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _visiblePosition: Position | null,\n\t\tprivate readonly _visiblePositionScrollDelta: number\n\t) {\n\t}\n\n\tpublic restore(editor: ICodeEditor): void {\n\t\tif (this._visiblePosition) {\n\t\t\tconst visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n\t\t\teditor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n\t\t}\n\t}\n}\n"]}]}