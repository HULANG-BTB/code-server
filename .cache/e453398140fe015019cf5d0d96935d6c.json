{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickopen/quickOpenActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickopen/quickOpenActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar quickOpen_1 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar quickOpenController_1 = require(\"vs/workbench/browser/parts/quickopen/quickOpenController\");\nvar quickopen_1 = require(\"vs/workbench/browser/parts/quickopen/quickopen\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.closeQuickOpen',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: quickopen_1.inQuickOpenContext,\n    primary: keyCodes_1.KeyCode.Escape, secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape],\n    handler: function (accessor) {\n        var quickOpenService = accessor.get(quickOpen_1.IQuickOpenService);\n        quickOpenService.close();\n        var quickInputService = accessor.get(quickInput_1.IQuickInputService);\n        return quickInputService.cancel();\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.acceptSelectedQuickOpenItem',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: quickopen_1.inQuickOpenContext,\n    primary: 0,\n    handler: function (accessor) {\n        var quickOpenService = accessor.get(quickOpen_1.IQuickOpenService);\n        quickOpenService.accept();\n        var quickInputService = accessor.get(quickInput_1.IQuickInputService);\n        return quickInputService.accept();\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.focusQuickOpen',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: quickopen_1.inQuickOpenContext,\n    primary: 0,\n    handler: function (accessor) {\n        var quickOpenService = accessor.get(quickOpen_1.IQuickOpenService);\n        quickOpenService.focus();\n        var quickInputService = accessor.get(quickInput_1.IQuickInputService);\n        quickInputService.focus();\n    }\n});\nvar registry = platform_1.Registry.as(actions_2.Extensions.WorkbenchActions);\nvar globalQuickOpenKeybinding = { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_P, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_E], mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_P, secondary: undefined } };\nkeybindingsRegistry_1.KeybindingsRegistry.registerKeybindingRule({\n    id: quickopen_1.QUICKOPEN_ACTION_ID,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: undefined,\n    primary: globalQuickOpenKeybinding.primary,\n    secondary: globalQuickOpenKeybinding.secondary,\n    mac: globalQuickOpenKeybinding.mac\n});\nactions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.CommandPalette, {\n    command: { id: quickopen_1.QUICKOPEN_ACTION_ID, title: { value: quickopen_1.QUICKOPEN_ACION_LABEL, original: 'Go to File...' } }\n});\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(quickopen_1.QuickOpenSelectNextAction, quickopen_1.QuickOpenSelectNextAction.ID, quickopen_1.QuickOpenSelectNextAction.LABEL, { primary: 0, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_N } }, quickopen_1.inQuickOpenContext, keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50), 'Select Next in Quick Open');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(quickopen_1.QuickOpenSelectPreviousAction, quickopen_1.QuickOpenSelectPreviousAction.ID, quickopen_1.QuickOpenSelectPreviousAction.LABEL, { primary: 0, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_P } }, quickopen_1.inQuickOpenContext, keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50), 'Select Previous in Quick Open');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(quickopen_1.QuickOpenNavigateNextAction, quickopen_1.QuickOpenNavigateNextAction.ID, quickopen_1.QuickOpenNavigateNextAction.LABEL), 'Navigate Next in Quick Open');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(quickopen_1.QuickOpenNavigatePreviousAction, quickopen_1.QuickOpenNavigatePreviousAction.ID, quickopen_1.QuickOpenNavigatePreviousAction.LABEL), 'Navigate Previous in Quick Open');\nregistry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(quickOpenController_1.RemoveFromEditorHistoryAction, quickOpenController_1.RemoveFromEditorHistoryAction.ID, quickOpenController_1.RemoveFromEditorHistoryAction.LABEL), 'Remove From History');\nvar quickOpenNavigateNextInFilePickerId = 'workbench.action.quickOpenNavigateNextInFilePicker';\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickOpenNavigateNextInFilePickerId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    handler: quickopen_1.getQuickNavigateHandler(quickOpenNavigateNextInFilePickerId, true),\n    when: quickopen_1.defaultQuickOpenContext,\n    primary: globalQuickOpenKeybinding.primary,\n    secondary: globalQuickOpenKeybinding.secondary,\n    mac: globalQuickOpenKeybinding.mac\n});\nvar quickOpenNavigatePreviousInFilePickerId = 'workbench.action.quickOpenNavigatePreviousInFilePicker';\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: quickOpenNavigatePreviousInFilePickerId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n    handler: quickopen_1.getQuickNavigateHandler(quickOpenNavigatePreviousInFilePickerId, false),\n    when: quickopen_1.defaultQuickOpenContext,\n    primary: globalQuickOpenKeybinding.primary | keyCodes_1.KeyMod.Shift,\n    secondary: [globalQuickOpenKeybinding.secondary[0] | keyCodes_1.KeyMod.Shift],\n    mac: {\n        primary: globalQuickOpenKeybinding.mac.primary | keyCodes_1.KeyMod.Shift,\n        secondary: undefined\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickopen/quickOpenActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickopen/quickOpenActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { SyncActionDescriptor, MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { RemoveFromEditorHistoryAction } from 'vs/workbench/browser/parts/quickopen/quickOpenController';\nimport { QuickOpenSelectNextAction, QuickOpenSelectPreviousAction, inQuickOpenContext, getQuickNavigateHandler, QuickOpenNavigateNextAction, QuickOpenNavigatePreviousAction, defaultQuickOpenContext, QUICKOPEN_ACTION_ID, QUICKOPEN_ACION_LABEL } from 'vs/workbench/browser/parts/quickopen/quickopen';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.closeQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickOpenContext,\n\tprimary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape],\n\thandler: accessor => {\n\t\tconst quickOpenService = accessor.get(IQuickOpenService);\n\t\tquickOpenService.close();\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.cancel();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.acceptSelectedQuickOpenItem',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickOpenContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickOpenService = accessor.get(IQuickOpenService);\n\t\tquickOpenService.accept();\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.focusQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickOpenContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickOpenService = accessor.get(IQuickOpenService);\n\t\tquickOpenService.focus();\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.focus();\n\t}\n});\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\nconst globalQuickOpenKeybinding = { primary: KeyMod.CtrlCmd | KeyCode.KEY_P, secondary: [KeyMod.CtrlCmd | KeyCode.KEY_E], mac: { primary: KeyMod.CtrlCmd | KeyCode.KEY_P, secondary: undefined } };\n\nKeybindingsRegistry.registerKeybindingRule({\n\tid: QUICKOPEN_ACTION_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: undefined,\n\tprimary: globalQuickOpenKeybinding.primary,\n\tsecondary: globalQuickOpenKeybinding.secondary,\n\tmac: globalQuickOpenKeybinding.mac\n});\n\nMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\tcommand: { id: QUICKOPEN_ACTION_ID, title: { value: QUICKOPEN_ACION_LABEL, original: 'Go to File...' } }\n});\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenSelectNextAction, QuickOpenSelectNextAction.ID, QuickOpenSelectNextAction.LABEL, { primary: 0, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_N } }, inQuickOpenContext, KeybindingWeight.WorkbenchContrib + 50), 'Select Next in Quick Open');\nregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenSelectPreviousAction, QuickOpenSelectPreviousAction.ID, QuickOpenSelectPreviousAction.LABEL, { primary: 0, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_P } }, inQuickOpenContext, KeybindingWeight.WorkbenchContrib + 50), 'Select Previous in Quick Open');\nregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenNavigateNextAction, QuickOpenNavigateNextAction.ID, QuickOpenNavigateNextAction.LABEL), 'Navigate Next in Quick Open');\nregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenNavigatePreviousAction, QuickOpenNavigatePreviousAction.ID, QuickOpenNavigatePreviousAction.LABEL), 'Navigate Previous in Quick Open');\nregistry.registerWorkbenchAction(new SyncActionDescriptor(RemoveFromEditorHistoryAction, RemoveFromEditorHistoryAction.ID, RemoveFromEditorHistoryAction.LABEL), 'Remove From History');\n\nconst quickOpenNavigateNextInFilePickerId = 'workbench.action.quickOpenNavigateNextInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickOpenNavigateNextInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickOpenNavigateNextInFilePickerId, true),\n\twhen: defaultQuickOpenContext,\n\tprimary: globalQuickOpenKeybinding.primary,\n\tsecondary: globalQuickOpenKeybinding.secondary,\n\tmac: globalQuickOpenKeybinding.mac\n});\n\nconst quickOpenNavigatePreviousInFilePickerId = 'workbench.action.quickOpenNavigatePreviousInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickOpenNavigatePreviousInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickOpenNavigatePreviousInFilePickerId, false),\n\twhen: defaultQuickOpenContext,\n\tprimary: globalQuickOpenKeybinding.primary | KeyMod.Shift,\n\tsecondary: [globalQuickOpenKeybinding.secondary[0] | KeyMod.Shift],\n\tmac: {\n\t\tprimary: globalQuickOpenKeybinding.mac.primary | KeyMod.Shift,\n\t\tsecondary: undefined\n\t}\n});"]}]}