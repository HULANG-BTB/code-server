{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/htmlContent.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/htmlContent.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar MarkdownString = /** @class */ (function () {\n    function MarkdownString(value) {\n        if (value === void 0) { value = ''; }\n        this.value = value;\n    }\n    MarkdownString.prototype.appendText = function (value) {\n        // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n        this.value += value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n        return this;\n    };\n    MarkdownString.prototype.appendMarkdown = function (value) {\n        this.value += value;\n        return this;\n    };\n    MarkdownString.prototype.appendCodeblock = function (langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    };\n    return MarkdownString;\n}());\nexports.MarkdownString = MarkdownString;\nfunction isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexports.isEmptyMarkdownString = isEmptyMarkdownString;\nfunction isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined);\n    }\n    return false;\n}\nexports.isMarkdownString = isMarkdownString;\nfunction markedStringsEquals(a, b) {\n    if (!a && !b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else if (Array.isArray(a) && Array.isArray(b)) {\n        return arrays_1.equals(a, b, markdownStringEqual);\n    }\n    else if (isMarkdownString(a) && isMarkdownString(b)) {\n        return markdownStringEqual(a, b);\n    }\n    else {\n        return false;\n    }\n}\nexports.markedStringsEquals = markedStringsEquals;\nfunction markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value && a.isTrusted === b.isTrusted;\n    }\n}\nfunction removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexports.removeMarkdownEscapes = removeMarkdownEscapes;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/htmlContent.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/htmlContent.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gDAA+C;AAS/C;IAKC,wBAAY,KAAkB;QAAlB,sBAAA,EAAA,UAAkB;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,mCAAU,GAAV,UAAW,KAAa;QACvB,8FAA8F;QAC9F,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;IACb,CAAC;IAED,uCAAc,GAAd,UAAe,KAAa;QAC3B,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;QACpB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,wCAAe,GAAf,UAAgB,MAAc,EAAE,IAAY;QAC3C,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC;QACtB,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;QACxB,OAAO,IAAI,CAAC;IACb,CAAC;IACF,qBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,wCAAc;AA8B3B,SAAgB,qBAAqB,CAAC,SAAiE;IACtG,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;QAChC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;KACxB;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QACpC,OAAO,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;KAC9C;SAAM;QACN,OAAO,IAAI,CAAC;KACZ;AACF,CAAC;AARD,sDAQC;AAED,SAAgB,gBAAgB,CAAC,KAAU;IAC1C,IAAI,KAAK,YAAY,cAAc,EAAE;QACpC,OAAO,IAAI,CAAC;KACZ;SAAM,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC9C,OAAO,OAAyB,KAAM,CAAC,KAAK,KAAK,QAAQ;eACrD,CAAC,OAAyB,KAAM,CAAC,SAAS,KAAK,SAAS,IAAsB,KAAM,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;KAClH;IACD,OAAO,KAAK,CAAC;AACd,CAAC;AARD,4CAQC;AAED,SAAgB,mBAAmB,CAAC,CAAsC,EAAE,CAAsC;IACjH,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;QACb,OAAO,IAAI,CAAC;KACZ;SAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;QACpB,OAAO,KAAK,CAAC;KACb;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;QAChD,OAAO,eAAM,CAAC,CAAC,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAC;KACzC;SAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,EAAE;QACtD,OAAO,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjC;SAAM;QACN,OAAO,KAAK,CAAC;KACb;AACF,CAAC;AAZD,kDAYC;AAED,SAAS,mBAAmB,CAAC,CAAkB,EAAE,CAAkB;IAClE,IAAI,CAAC,KAAK,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC;KACZ;SAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;QACpB,OAAO,KAAK,CAAC;KACb;SAAM;QACN,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,CAAC;KAC1D;AACF,CAAC;AAED,SAAgB,qBAAqB,CAAC,IAAY;IACjD,IAAI,CAAC,IAAI,EAAE;QACV,OAAO,IAAI,CAAC;KACZ;IACD,OAAO,IAAI,CAAC,OAAO,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;AACxD,CAAC;AALD,sDAKC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { UriComponents } from 'vs/base/common/uri';\n\nexport interface IMarkdownString {\n\tvalue: string;\n\tisTrusted?: boolean;\n\turis?: { [href: string]: UriComponents };\n}\n\nexport class MarkdownString implements IMarkdownString {\n\n\tvalue: string;\n\tisTrusted?: boolean;\n\n\tconstructor(value: string = '') {\n\t\tthis.value = value;\n\t}\n\n\tappendText(value: string): MarkdownString {\n\t\t// escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n\t\tthis.value += value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\n\t\treturn this;\n\t}\n\n\tappendMarkdown(value: string): MarkdownString {\n\t\tthis.value += value;\n\t\treturn this;\n\t}\n\n\tappendCodeblock(langId: string, code: string): MarkdownString {\n\t\tthis.value += '\\n```';\n\t\tthis.value += langId;\n\t\tthis.value += '\\n';\n\t\tthis.value += code;\n\t\tthis.value += '\\n```\\n';\n\t\treturn this;\n\t}\n}\n\nexport function isEmptyMarkdownString(oneOrMany: IMarkdownString | IMarkdownString[] | null | undefined): boolean {\n\tif (isMarkdownString(oneOrMany)) {\n\t\treturn !oneOrMany.value;\n\t} else if (Array.isArray(oneOrMany)) {\n\t\treturn oneOrMany.every(isEmptyMarkdownString);\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport function isMarkdownString(thing: any): thing is IMarkdownString {\n\tif (thing instanceof MarkdownString) {\n\t\treturn true;\n\t} else if (thing && typeof thing === 'object') {\n\t\treturn typeof (<IMarkdownString>thing).value === 'string'\n\t\t\t&& (typeof (<IMarkdownString>thing).isTrusted === 'boolean' || (<IMarkdownString>thing).isTrusted === undefined);\n\t}\n\treturn false;\n}\n\nexport function markedStringsEquals(a: IMarkdownString | IMarkdownString[], b: IMarkdownString | IMarkdownString[]): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn equals(a, b, markdownStringEqual);\n\t} else if (isMarkdownString(a) && isMarkdownString(b)) {\n\t\treturn markdownStringEqual(a, b);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction markdownStringEqual(a: IMarkdownString, b: IMarkdownString): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t} else if (!a || !b) {\n\t\treturn false;\n\t} else {\n\t\treturn a.value === b.value && a.isTrusted === b.isTrusted;\n\t}\n}\n\nexport function removeMarkdownEscapes(text: string): string {\n\tif (!text) {\n\t\treturn text;\n\t}\n\treturn text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\n"]}]}