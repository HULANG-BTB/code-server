{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/registry/common/platform\", \"vs/base/common/event\"], function (require, exports, platform, event_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Extensions = {\n        JSONContribution: 'base.contributions.json'\n    };\n    function normalizeId(id) {\n        if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n            return id.substring(0, id.length - 1);\n        }\n        return id;\n    }\n    class JSONContributionRegistry {\n        constructor() {\n            this._onDidChangeSchema = new event_1.Emitter();\n            this.onDidChangeSchema = this._onDidChangeSchema.event;\n            this.schemasById = {};\n        }\n        registerSchema(uri, unresolvedSchemaContent) {\n            this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n            this._onDidChangeSchema.fire(uri);\n        }\n        notifySchemaChanged(uri) {\n            this._onDidChangeSchema.fire(uri);\n        }\n        getSchemaContributions() {\n            return {\n                schemas: this.schemasById,\n            };\n        }\n    }\n    const jsonContributionRegistry = new JSONContributionRegistry();\n    platform.Registry.add(exports.Extensions.JSONContribution, jsonContributionRegistry);\n});\n",null]}