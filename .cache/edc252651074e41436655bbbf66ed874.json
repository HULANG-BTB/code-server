{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/view/viewEventDispatcher.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/view/viewEventDispatcher.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ViewEventDispatcher = /** @class */ (function () {\n    function ViewEventDispatcher(eventHandlerGateKeeper) {\n        this._eventHandlerGateKeeper = eventHandlerGateKeeper;\n        this._eventHandlers = [];\n        this._eventQueue = null;\n        this._isConsumingQueue = false;\n    }\n    ViewEventDispatcher.prototype.addEventHandler = function (eventHandler) {\n        for (var i = 0, len = this._eventHandlers.length; i < len; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                console.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n            }\n        }\n        this._eventHandlers.push(eventHandler);\n    };\n    ViewEventDispatcher.prototype.removeEventHandler = function (eventHandler) {\n        for (var i = 0; i < this._eventHandlers.length; i++) {\n            if (this._eventHandlers[i] === eventHandler) {\n                this._eventHandlers.splice(i, 1);\n                break;\n            }\n        }\n    };\n    ViewEventDispatcher.prototype.emit = function (event) {\n        if (this._eventQueue) {\n            this._eventQueue.push(event);\n        }\n        else {\n            this._eventQueue = [event];\n        }\n        if (!this._isConsumingQueue) {\n            this.consumeQueue();\n        }\n    };\n    ViewEventDispatcher.prototype.emitMany = function (events) {\n        if (this._eventQueue) {\n            this._eventQueue = this._eventQueue.concat(events);\n        }\n        else {\n            this._eventQueue = events;\n        }\n        if (!this._isConsumingQueue) {\n            this.consumeQueue();\n        }\n    };\n    ViewEventDispatcher.prototype.consumeQueue = function () {\n        var _this = this;\n        this._eventHandlerGateKeeper(function () {\n            try {\n                _this._isConsumingQueue = true;\n                _this._doConsumeQueue();\n            }\n            finally {\n                _this._isConsumingQueue = false;\n            }\n        });\n    };\n    ViewEventDispatcher.prototype._doConsumeQueue = function () {\n        while (this._eventQueue) {\n            // Empty event queue, as events might come in while sending these off\n            var events = this._eventQueue;\n            this._eventQueue = null;\n            // Use a clone of the event handlers list, as they might remove themselves\n            var eventHandlers = this._eventHandlers.slice(0);\n            for (var i = 0, len = eventHandlers.length; i < len; i++) {\n                eventHandlers[i].handleEvents(events);\n            }\n        }\n    };\n    return ViewEventDispatcher;\n}());\nexports.ViewEventDispatcher = ViewEventDispatcher;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/view/viewEventDispatcher.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/view/viewEventDispatcher.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAKhG;IAOC,6BAAY,sBAAsD;QACjE,IAAI,CAAC,uBAAuB,GAAG,sBAAsB,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;IAEM,6CAAe,GAAtB,UAAuB,YAA8B;QACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC/D,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,oDAAoD,EAAE,YAAY,CAAC,CAAC;aACjF;SACD;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAEM,gDAAkB,GAAzB,UAA0B,YAA8B;QACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;gBAC5C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,MAAM;aACN;SACD;IACF,CAAC;IAEM,kCAAI,GAAX,UAAY,KAAgB;QAE3B,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACN,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB;IACF,CAAC;IAEM,sCAAQ,GAAf,UAAgB,MAAmB;QAClC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACnD;aAAM;YACN,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC1B;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB;IACF,CAAC;IAEO,0CAAY,GAApB;QAAA,iBAWC;QAVA,IAAI,CAAC,uBAAuB,CAAC;YAC5B,IAAI;gBACH,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAE9B,KAAI,CAAC,eAAe,EAAE,CAAC;aAEvB;oBAAS;gBACT,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAC/B;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,6CAAe,GAAvB;QACC,OAAO,IAAI,CAAC,WAAW,EAAE;YACxB,qEAAqE;YACrE,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,0EAA0E;YAC1E,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBACzD,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aACtC;SACD;IACF,CAAC;IACF,0BAAC;AAAD,CAAC,AAnFD,IAmFC;AAnFY,kDAAmB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ViewEvent } from 'vs/editor/common/view/viewEvents';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\n\nexport class ViewEventDispatcher {\n\n\tprivate readonly _eventHandlerGateKeeper: (callback: () => void) => void;\n\tprivate readonly _eventHandlers: ViewEventHandler[];\n\tprivate _eventQueue: ViewEvent[] | null;\n\tprivate _isConsumingQueue: boolean;\n\n\tconstructor(eventHandlerGateKeeper: (callback: () => void) => void) {\n\t\tthis._eventHandlerGateKeeper = eventHandlerGateKeeper;\n\t\tthis._eventHandlers = [];\n\t\tthis._eventQueue = null;\n\t\tthis._isConsumingQueue = false;\n\t}\n\n\tpublic addEventHandler(eventHandler: ViewEventHandler): void {\n\t\tfor (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tconsole.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n\t\t\t}\n\t\t}\n\t\tthis._eventHandlers.push(eventHandler);\n\t}\n\n\tpublic removeEventHandler(eventHandler: ViewEventHandler): void {\n\t\tfor (let i = 0; i < this._eventHandlers.length; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tthis._eventHandlers.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic emit(event: ViewEvent): void {\n\n\t\tif (this._eventQueue) {\n\t\t\tthis._eventQueue.push(event);\n\t\t} else {\n\t\t\tthis._eventQueue = [event];\n\t\t}\n\n\t\tif (!this._isConsumingQueue) {\n\t\t\tthis.consumeQueue();\n\t\t}\n\t}\n\n\tpublic emitMany(events: ViewEvent[]): void {\n\t\tif (this._eventQueue) {\n\t\t\tthis._eventQueue = this._eventQueue.concat(events);\n\t\t} else {\n\t\t\tthis._eventQueue = events;\n\t\t}\n\n\t\tif (!this._isConsumingQueue) {\n\t\t\tthis.consumeQueue();\n\t\t}\n\t}\n\n\tprivate consumeQueue(): void {\n\t\tthis._eventHandlerGateKeeper(() => {\n\t\t\ttry {\n\t\t\t\tthis._isConsumingQueue = true;\n\n\t\t\t\tthis._doConsumeQueue();\n\n\t\t\t} finally {\n\t\t\t\tthis._isConsumingQueue = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _doConsumeQueue(): void {\n\t\twhile (this._eventQueue) {\n\t\t\t// Empty event queue, as events might come in while sending these off\n\t\t\tlet events = this._eventQueue;\n\t\t\tthis._eventQueue = null;\n\n\t\t\t// Use a clone of the event handlers list, as they might remove themselves\n\t\t\tlet eventHandlers = this._eventHandlers.slice(0);\n\t\t\tfor (let i = 0, len = eventHandlers.length; i < len; i++) {\n\t\t\t\teventHandlers[i].handleEvents(events);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}]}