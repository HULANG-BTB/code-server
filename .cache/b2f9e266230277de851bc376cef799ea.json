{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/externalTerminal/common/externalTerminal.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/externalTerminal/common/externalTerminal.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IExternalTerminalService = instantiation_1.createDecorator('nativeTerminalService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/externalTerminal/common/externalTerminal.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/externalTerminal/common/externalTerminal.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAGpE,QAAA,wBAAwB,GAAG,+BAAe,CAA2B,uBAAuB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const IExternalTerminalService = createDecorator<IExternalTerminalService>('nativeTerminalService');\n\nexport interface IExternalTerminalService {\n\t_serviceBrand: any;\n\topenTerminal(path: string): void;\n\trunInTerminal(title: string, cwd: string, args: string[], env: IProcessEnvironment): Promise<number | undefined>;\n}\n\nexport interface IExternalTerminalConfiguration {\n\tterminal: {\n\t\texplorerKind: 'integrated' | 'external',\n\t\texternal: {\n\t\t\tlinuxExec: string,\n\t\t\tosxExec: string,\n\t\t\twindowsExec: string\n\t\t}\n\t};\n}"]}]}