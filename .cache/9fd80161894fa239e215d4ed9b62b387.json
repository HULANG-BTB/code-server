{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar dom = require(\"vs/base/browser/dom\");\nvar viewlet_1 = require(\"vs/workbench/browser/viewlet\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar debugModel_1 = require(\"vs/workbench/contrib/debug/common/debugModel\");\nvar debugActions_1 = require(\"vs/workbench/contrib/debug/browser/debugActions\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar baseDebugView_1 = require(\"vs/workbench/contrib/debug/browser/baseDebugView\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar listView_1 = require(\"vs/base/browser/ui/list/listView\");\nvar variablesView_1 = require(\"vs/workbench/contrib/debug/browser/variablesView\");\nvar MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\nvar WatchExpressionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(WatchExpressionsView, _super);\n    function WatchExpressionsView(options, contextMenuService, debugService, keybindingService, instantiationService, configurationService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: nls.localize('watchExpressionsSection', \"Watch Expressions Section\") }), keybindingService, contextMenuService, configurationService) || this;\n        _this.debugService = debugService;\n        _this.instantiationService = instantiationService;\n        _this.onWatchExpressionsUpdatedScheduler = new async_1.RunOnceScheduler(function () {\n            _this.needsRefresh = false;\n            _this.tree.updateChildren();\n        }, 50);\n        return _this;\n    }\n    WatchExpressionsView.prototype.renderBody = function (container) {\n        var _this = this;\n        dom.addClass(container, 'debug-watch');\n        var treeContainer = baseDebugView_1.renderViewTree(container);\n        var expressionsRenderer = this.instantiationService.createInstance(WatchExpressionsRenderer);\n        this.tree = this.instantiationService.createInstance(listService_1.WorkbenchAsyncDataTree, treeContainer, new WatchExpressionsDelegate(), [expressionsRenderer, this.instantiationService.createInstance(variablesView_1.VariablesRenderer)], new WatchExpressionsDataSource(), {\n            ariaLabel: nls.localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'watchAriaTreeLabel' }, \"Debug Watch Expressions\"),\n            accessibilityProvider: new WatchExpressionsAccessibilityProvider(),\n            identityProvider: { getId: function (element) { return element.getId(); } },\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel: function (e) { return e; } },\n            dnd: new WatchExpressionsDragAndDrop(this.debugService),\n        });\n        this.tree.setInput(this.debugService).then(undefined, errors_1.onUnexpectedError);\n        debug_1.CONTEXT_WATCH_EXPRESSIONS_FOCUSED.bindTo(this.tree.contextKeyService);\n        var addWatchExpressionAction = new debugActions_1.AddWatchExpressionAction(debugActions_1.AddWatchExpressionAction.ID, debugActions_1.AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService);\n        var collapseAction = new viewlet_1.CollapseAction(this.tree, true, 'explorer-action collapse-explorer');\n        var removeAllWatchExpressionsAction = new debugActions_1.RemoveAllWatchExpressionsAction(debugActions_1.RemoveAllWatchExpressionsAction.ID, debugActions_1.RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService);\n        this.toolbar.setActions([addWatchExpressionAction, collapseAction, removeAllWatchExpressionsAction])();\n        this.disposables.push(this.tree.onContextMenu(function (e) { return _this.onContextMenu(e); }));\n        this.disposables.push(this.tree.onMouseDblClick(function (e) { return _this.onMouseDblClick(e); }));\n        this.disposables.push(this.debugService.getModel().onDidChangeWatchExpressions(function (we) {\n            if (!_this.isBodyVisible()) {\n                _this.needsRefresh = true;\n            }\n            else {\n                _this.tree.updateChildren();\n            }\n        }));\n        this.disposables.push(this.debugService.getViewModel().onDidFocusStackFrame(function () {\n            if (!_this.isBodyVisible()) {\n                _this.needsRefresh = true;\n                return;\n            }\n            if (!_this.onWatchExpressionsUpdatedScheduler.isScheduled()) {\n                _this.onWatchExpressionsUpdatedScheduler.schedule();\n            }\n        }));\n        this.disposables.push(variablesView_1.variableSetEmitter.event(function () { return _this.tree.updateChildren(); }));\n        this.disposables.push(this.onDidChangeBodyVisibility(function (visible) {\n            if (visible && _this.needsRefresh) {\n                _this.onWatchExpressionsUpdatedScheduler.schedule();\n            }\n        }));\n        this.disposables.push(this.debugService.getViewModel().onDidSelectExpression(function (e) {\n            if (e instanceof debugModel_1.Expression && e.name) {\n                _this.tree.rerender(e);\n            }\n        }));\n    };\n    WatchExpressionsView.prototype.layoutBody = function (height, width) {\n        this.tree.layout(height, width);\n    };\n    WatchExpressionsView.prototype.focus = function () {\n        this.tree.domFocus();\n    };\n    WatchExpressionsView.prototype.onMouseDblClick = function (e) {\n        if (e.browserEvent.target.className.indexOf('twistie') >= 0) {\n            // Ignore double click events on twistie\n            return;\n        }\n        var element = e.element;\n        // double click on primitive value: open input box to be able to select and copy value.\n        if (element instanceof debugModel_1.Expression && element !== this.debugService.getViewModel().getSelectedExpression()) {\n            this.debugService.getViewModel().setSelectedExpression(element);\n        }\n        else if (!element) {\n            // Double click in watch panel triggers to add a new watch expression\n            this.debugService.addWatchExpression();\n        }\n    };\n    WatchExpressionsView.prototype.onContextMenu = function (e) {\n        var _this = this;\n        var element = e.element;\n        var anchor = e.anchor;\n        if (!anchor) {\n            return;\n        }\n        var actions = [];\n        if (element instanceof debugModel_1.Expression) {\n            var expression_1 = element;\n            actions.push(new debugActions_1.AddWatchExpressionAction(debugActions_1.AddWatchExpressionAction.ID, debugActions_1.AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService));\n            actions.push(new actions_1.Action('debug.editWatchExpression', nls.localize('editWatchExpression', \"Edit Expression\"), undefined, true, function () {\n                _this.debugService.getViewModel().setSelectedExpression(expression_1);\n                return Promise.resolve();\n            }));\n            if (!expression_1.hasChildren) {\n                actions.push(this.instantiationService.createInstance(debugActions_1.CopyValueAction, debugActions_1.CopyValueAction.ID, debugActions_1.CopyValueAction.LABEL, expression_1.value, 'watch', this.debugService));\n            }\n            actions.push(new actionbar_1.Separator());\n            actions.push(new actions_1.Action('debug.removeWatchExpression', nls.localize('removeWatchExpression', \"Remove Expression\"), undefined, true, function () {\n                _this.debugService.removeWatchExpressions(expression_1.getId());\n                return Promise.resolve();\n            }));\n            actions.push(new debugActions_1.RemoveAllWatchExpressionsAction(debugActions_1.RemoveAllWatchExpressionsAction.ID, debugActions_1.RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService));\n        }\n        else {\n            actions.push(new debugActions_1.AddWatchExpressionAction(debugActions_1.AddWatchExpressionAction.ID, debugActions_1.AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService));\n            if (element instanceof debugModel_1.Variable) {\n                var variable = element;\n                if (!variable.hasChildren) {\n                    actions.push(this.instantiationService.createInstance(debugActions_1.CopyValueAction, debugActions_1.CopyValueAction.ID, debugActions_1.CopyValueAction.LABEL, variable, 'watch', this.debugService));\n                }\n                actions.push(new actionbar_1.Separator());\n            }\n            actions.push(new debugActions_1.RemoveAllWatchExpressionsAction(debugActions_1.RemoveAllWatchExpressionsAction.ID, debugActions_1.RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService));\n        }\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActions: function () { return actions; },\n            getActionsContext: function () { return element; }\n        });\n    };\n    WatchExpressionsView = tslib_1.__decorate([\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, debug_1.IDebugService),\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, configuration_1.IConfigurationService)\n    ], WatchExpressionsView);\n    return WatchExpressionsView;\n}(panelViewlet_1.ViewletPanel));\nexports.WatchExpressionsView = WatchExpressionsView;\nvar WatchExpressionsDelegate = /** @class */ (function () {\n    function WatchExpressionsDelegate() {\n    }\n    WatchExpressionsDelegate.prototype.getHeight = function (element) {\n        return 22;\n    };\n    WatchExpressionsDelegate.prototype.getTemplateId = function (element) {\n        if (element instanceof debugModel_1.Expression) {\n            return WatchExpressionsRenderer.ID;\n        }\n        // Variable\n        return variablesView_1.VariablesRenderer.ID;\n    };\n    return WatchExpressionsDelegate;\n}());\nfunction isDebugService(element) {\n    return typeof element.getConfigurationManager === 'function';\n}\nvar WatchExpressionsDataSource = /** @class */ (function () {\n    function WatchExpressionsDataSource() {\n    }\n    WatchExpressionsDataSource.prototype.hasChildren = function (element) {\n        return isDebugService(element) || element.hasChildren;\n    };\n    WatchExpressionsDataSource.prototype.getChildren = function (element) {\n        if (isDebugService(element)) {\n            var debugService = element;\n            var watchExpressions = debugService.getModel().getWatchExpressions();\n            var viewModel_1 = debugService.getViewModel();\n            return Promise.all(watchExpressions.map(function (we) { return !!we.name\n                ? we.evaluate(viewModel_1.focusedSession, viewModel_1.focusedStackFrame, 'watch').then(function () { return we; })\n                : Promise.resolve(we); }));\n        }\n        return element.getChildren();\n    };\n    return WatchExpressionsDataSource;\n}());\nvar WatchExpressionsRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(WatchExpressionsRenderer, _super);\n    function WatchExpressionsRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WatchExpressionsRenderer.prototype, \"templateId\", {\n        get: function () {\n            return WatchExpressionsRenderer.ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WatchExpressionsRenderer.prototype.renderExpression = function (expression, data, highlights) {\n        var text = typeof expression.value === 'string' ? expression.name + \":\" : expression.name;\n        data.label.set(text, highlights, expression.type ? expression.type : expression.value);\n        baseDebugView_1.renderExpressionValue(expression, data.value, {\n            showChanged: true,\n            maxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n            preserveWhitespace: false,\n            showHover: true,\n            colorize: true\n        });\n    };\n    WatchExpressionsRenderer.prototype.getInputBoxOptions = function (expression) {\n        var _this = this;\n        return {\n            initialValue: expression.name ? expression.name : '',\n            ariaLabel: nls.localize('watchExpressionInputAriaLabel', \"Type watch expression\"),\n            placeholder: nls.localize('watchExpressionPlaceholder', \"Expression to watch\"),\n            onFinish: function (value, success) {\n                if (success && value) {\n                    _this.debugService.renameWatchExpression(expression.getId(), value);\n                }\n                else if (!expression.name) {\n                    _this.debugService.removeWatchExpressions(expression.getId());\n                }\n            }\n        };\n    };\n    WatchExpressionsRenderer.ID = 'watchexpression';\n    return WatchExpressionsRenderer;\n}(baseDebugView_1.AbstractExpressionsRenderer));\nexports.WatchExpressionsRenderer = WatchExpressionsRenderer;\nvar WatchExpressionsAccessibilityProvider = /** @class */ (function () {\n    function WatchExpressionsAccessibilityProvider() {\n    }\n    WatchExpressionsAccessibilityProvider.prototype.getAriaLabel = function (element) {\n        if (element instanceof debugModel_1.Expression) {\n            return nls.localize('watchExpressionAriaLabel', \"{0} value {1}, watch, debug\", element.name, element.value);\n        }\n        // Variable\n        return nls.localize('watchVariableAriaLabel', \"{0} value {1}, watch, debug\", element.name, element.value);\n    };\n    return WatchExpressionsAccessibilityProvider;\n}());\nvar WatchExpressionsDragAndDrop = /** @class */ (function () {\n    function WatchExpressionsDragAndDrop(debugService) {\n        this.debugService = debugService;\n    }\n    WatchExpressionsDragAndDrop.prototype.onDragOver = function (data) {\n        if (!(data instanceof listView_1.ElementsDragAndDropData)) {\n            return false;\n        }\n        var expressions = data.elements;\n        return expressions.length > 0 && expressions[0] instanceof debugModel_1.Expression;\n    };\n    WatchExpressionsDragAndDrop.prototype.getDragURI = function (element) {\n        if (!(element instanceof debugModel_1.Expression) || element === this.debugService.getViewModel().getSelectedExpression()) {\n            return null;\n        }\n        return element.getId();\n    };\n    WatchExpressionsDragAndDrop.prototype.getDragLabel = function (elements) {\n        if (elements.length === 1) {\n            return elements[0].name;\n        }\n        return undefined;\n    };\n    WatchExpressionsDragAndDrop.prototype.drop = function (data, targetElement) {\n        if (!(data instanceof listView_1.ElementsDragAndDropData)) {\n            return;\n        }\n        var draggedElement = data.elements[0];\n        var watches = this.debugService.getModel().getWatchExpressions();\n        var position = targetElement instanceof debugModel_1.Expression ? watches.indexOf(targetElement) : watches.length - 1;\n        this.debugService.moveWatchExpression(draggedElement.getId(), position);\n    };\n    return WatchExpressionsDragAndDrop;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as dom from 'vs/base/browser/dom';\nimport { CollapseAction } from 'vs/workbench/browser/viewlet';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { IDebugService, IExpression, CONTEXT_WATCH_EXPRESSIONS_FOCUSED } from 'vs/workbench/contrib/debug/common/debug';\nimport { Expression, Variable } from 'vs/workbench/contrib/debug/common/debugModel';\nimport { AddWatchExpressionAction, RemoveAllWatchExpressionsAction, CopyValueAction } from 'vs/workbench/contrib/debug/browser/debugActions';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { renderExpressionValue, renderViewTree, IInputBoxOptions, AbstractExpressionsRenderer, IExpressionTemplateData } from 'vs/workbench/contrib/debug/browser/baseDebugView';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IViewletPanelOptions, ViewletPanel } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { IAccessibilityProvider } from 'vs/base/browser/ui/list/listWidget';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { IAsyncDataSource, ITreeMouseEvent, ITreeContextMenuEvent, ITreeDragAndDrop, ITreeDragOverReaction } from 'vs/base/browser/ui/tree/tree';\nimport { IDragAndDropData } from 'vs/base/browser/dnd';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ElementsDragAndDropData } from 'vs/base/browser/ui/list/listView';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { IHighlight } from 'vs/base/browser/ui/highlightedlabel/highlightedLabel';\nimport { variableSetEmitter, VariablesRenderer } from 'vs/workbench/contrib/debug/browser/variablesView';\n\nconst MAX_VALUE_RENDER_LENGTH_IN_VIEWLET = 1024;\n\nexport class WatchExpressionsView extends ViewletPanel {\n\n\tprivate onWatchExpressionsUpdatedScheduler: RunOnceScheduler;\n\tprivate needsRefresh: boolean;\n\tprivate tree: WorkbenchAsyncDataTree<IDebugService | IExpression, IExpression, FuzzyScore>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: nls.localize('watchExpressionsSection', \"Watch Expressions Section\") }, keybindingService, contextMenuService, configurationService);\n\n\t\tthis.onWatchExpressionsUpdatedScheduler = new RunOnceScheduler(() => {\n\t\t\tthis.needsRefresh = false;\n\t\t\tthis.tree.updateChildren();\n\t\t}, 50);\n\t}\n\n\trenderBody(container: HTMLElement): void {\n\t\tdom.addClass(container, 'debug-watch');\n\t\tconst treeContainer = renderViewTree(container);\n\n\t\tconst expressionsRenderer = this.instantiationService.createInstance(WatchExpressionsRenderer);\n\t\tthis.tree = this.instantiationService.createInstance(WorkbenchAsyncDataTree, treeContainer, new WatchExpressionsDelegate(), [expressionsRenderer, this.instantiationService.createInstance(VariablesRenderer)],\n\t\t\tnew WatchExpressionsDataSource(), {\n\t\t\t\tariaLabel: nls.localize({ comment: ['Debug is a noun in this context, not a verb.'], key: 'watchAriaTreeLabel' }, \"Debug Watch Expressions\"),\n\t\t\t\taccessibilityProvider: new WatchExpressionsAccessibilityProvider(),\n\t\t\t\tidentityProvider: { getId: (element: IExpression) => element.getId() },\n\t\t\t\tkeyboardNavigationLabelProvider: { getKeyboardNavigationLabel: (e: IExpression) => e },\n\t\t\t\tdnd: new WatchExpressionsDragAndDrop(this.debugService),\n\t\t\t}) as WorkbenchAsyncDataTree<IDebugService | IExpression, IExpression, FuzzyScore>;\n\n\t\tthis.tree.setInput(this.debugService).then(undefined, onUnexpectedError);\n\t\tCONTEXT_WATCH_EXPRESSIONS_FOCUSED.bindTo(this.tree.contextKeyService);\n\n\t\tconst addWatchExpressionAction = new AddWatchExpressionAction(AddWatchExpressionAction.ID, AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService);\n\t\tconst collapseAction = new CollapseAction(this.tree, true, 'explorer-action collapse-explorer');\n\t\tconst removeAllWatchExpressionsAction = new RemoveAllWatchExpressionsAction(RemoveAllWatchExpressionsAction.ID, RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService);\n\t\tthis.toolbar.setActions([addWatchExpressionAction, collapseAction, removeAllWatchExpressionsAction])();\n\n\t\tthis.disposables.push(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\t\tthis.disposables.push(this.tree.onMouseDblClick(e => this.onMouseDblClick(e)));\n\t\tthis.disposables.push(this.debugService.getModel().onDidChangeWatchExpressions(we => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t} else {\n\t\t\t\tthis.tree.updateChildren();\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.push(this.debugService.getViewModel().onDidFocusStackFrame(() => {\n\t\t\tif (!this.isBodyVisible()) {\n\t\t\t\tthis.needsRefresh = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.onWatchExpressionsUpdatedScheduler.isScheduled()) {\n\t\t\t\tthis.onWatchExpressionsUpdatedScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.push(variableSetEmitter.event(() => this.tree.updateChildren()));\n\n\t\tthis.disposables.push(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && this.needsRefresh) {\n\t\t\t\tthis.onWatchExpressionsUpdatedScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis.disposables.push(this.debugService.getViewModel().onDidSelectExpression(e => {\n\t\t\tif (e instanceof Expression && e.name) {\n\t\t\t\tthis.tree.rerender(e);\n\t\t\t}\n\t\t}));\n\t}\n\n\tlayoutBody(height: number, width: number): void {\n\t\tthis.tree.layout(height, width);\n\t}\n\n\tfocus(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tprivate onMouseDblClick(e: ITreeMouseEvent<IExpression>): void {\n\t\tif ((e.browserEvent.target as HTMLElement).className.indexOf('twistie') >= 0) {\n\t\t\t// Ignore double click events on twistie\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = e.element;\n\t\t// double click on primitive value: open input box to be able to select and copy value.\n\t\tif (element instanceof Expression && element !== this.debugService.getViewModel().getSelectedExpression()) {\n\t\t\tthis.debugService.getViewModel().setSelectedExpression(element);\n\t\t} else if (!element) {\n\t\t\t// Double click in watch panel triggers to add a new watch expression\n\t\t\tthis.debugService.addWatchExpression();\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<IExpression>): void {\n\t\tconst element = e.element;\n\t\tconst anchor = e.anchor;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst actions: IAction[] = [];\n\n\t\tif (element instanceof Expression) {\n\t\t\tconst expression = <Expression>element;\n\t\t\tactions.push(new AddWatchExpressionAction(AddWatchExpressionAction.ID, AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService));\n\t\t\tactions.push(new Action('debug.editWatchExpression', nls.localize('editWatchExpression', \"Edit Expression\"), undefined, true, () => {\n\t\t\t\tthis.debugService.getViewModel().setSelectedExpression(expression);\n\t\t\t\treturn Promise.resolve();\n\t\t\t}));\n\t\t\tif (!expression.hasChildren) {\n\t\t\t\tactions.push(this.instantiationService.createInstance(CopyValueAction, CopyValueAction.ID, CopyValueAction.LABEL, expression.value, 'watch', this.debugService));\n\t\t\t}\n\t\t\tactions.push(new Separator());\n\n\t\t\tactions.push(new Action('debug.removeWatchExpression', nls.localize('removeWatchExpression', \"Remove Expression\"), undefined, true, () => {\n\t\t\t\tthis.debugService.removeWatchExpressions(expression.getId());\n\t\t\t\treturn Promise.resolve();\n\t\t\t}));\n\t\t\tactions.push(new RemoveAllWatchExpressionsAction(RemoveAllWatchExpressionsAction.ID, RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService));\n\t\t} else {\n\t\t\tactions.push(new AddWatchExpressionAction(AddWatchExpressionAction.ID, AddWatchExpressionAction.LABEL, this.debugService, this.keybindingService));\n\t\t\tif (element instanceof Variable) {\n\t\t\t\tconst variable = element as Variable;\n\t\t\t\tif (!variable.hasChildren) {\n\t\t\t\t\tactions.push(this.instantiationService.createInstance(CopyValueAction, CopyValueAction.ID, CopyValueAction.LABEL, variable, 'watch', this.debugService));\n\t\t\t\t}\n\t\t\t\tactions.push(new Separator());\n\t\t\t}\n\t\t\tactions.push(new RemoveAllWatchExpressionsAction(RemoveAllWatchExpressionsAction.ID, RemoveAllWatchExpressionsAction.LABEL, this.debugService, this.keybindingService));\n\t\t}\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions,\n\t\t\tgetActionsContext: () => element\n\t\t});\n\t}\n}\n\nclass WatchExpressionsDelegate implements IListVirtualDelegate<IExpression> {\n\n\tgetHeight(element: IExpression): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn WatchExpressionsRenderer.ID;\n\t\t}\n\n\t\t// Variable\n\t\treturn VariablesRenderer.ID;\n\t}\n}\n\nfunction isDebugService(element: any): element is IDebugService {\n\treturn typeof element.getConfigurationManager === 'function';\n}\n\nclass WatchExpressionsDataSource implements IAsyncDataSource<IDebugService, IExpression> {\n\n\thasChildren(element: IExpression | IDebugService): boolean {\n\t\treturn isDebugService(element) || element.hasChildren;\n\t}\n\n\tgetChildren(element: IDebugService | IExpression): Promise<Array<IExpression>> {\n\t\tif (isDebugService(element)) {\n\t\t\tconst debugService = element as IDebugService;\n\t\t\tconst watchExpressions = debugService.getModel().getWatchExpressions();\n\t\t\tconst viewModel = debugService.getViewModel();\n\t\t\treturn Promise.all(watchExpressions.map(we => !!we.name\n\t\t\t\t? we.evaluate(viewModel.focusedSession!, viewModel.focusedStackFrame!, 'watch').then(() => we)\n\t\t\t\t: Promise.resolve(we)));\n\t\t}\n\n\t\treturn element.getChildren();\n\t}\n}\n\n\nexport class WatchExpressionsRenderer extends AbstractExpressionsRenderer {\n\n\tstatic readonly ID = 'watchexpression';\n\n\tget templateId() {\n\t\treturn WatchExpressionsRenderer.ID;\n\t}\n\n\tprotected renderExpression(expression: IExpression, data: IExpressionTemplateData, highlights: IHighlight[]): void {\n\t\tconst text = typeof expression.value === 'string' ? `${expression.name}:` : expression.name;\n\t\tdata.label.set(text, highlights, expression.type ? expression.type : expression.value);\n\t\trenderExpressionValue(expression, data.value, {\n\t\t\tshowChanged: true,\n\t\t\tmaxValueLength: MAX_VALUE_RENDER_LENGTH_IN_VIEWLET,\n\t\t\tpreserveWhitespace: false,\n\t\t\tshowHover: true,\n\t\t\tcolorize: true\n\t\t});\n\t}\n\n\tprotected getInputBoxOptions(expression: IExpression): IInputBoxOptions {\n\t\treturn {\n\t\t\tinitialValue: expression.name ? expression.name : '',\n\t\t\tariaLabel: nls.localize('watchExpressionInputAriaLabel', \"Type watch expression\"),\n\t\t\tplaceholder: nls.localize('watchExpressionPlaceholder', \"Expression to watch\"),\n\t\t\tonFinish: (value: string, success: boolean) => {\n\t\t\t\tif (success && value) {\n\t\t\t\t\tthis.debugService.renameWatchExpression(expression.getId(), value);\n\t\t\t\t} else if (!expression.name) {\n\t\t\t\t\tthis.debugService.removeWatchExpressions(expression.getId());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass WatchExpressionsAccessibilityProvider implements IAccessibilityProvider<IExpression> {\n\tgetAriaLabel(element: IExpression): string {\n\t\tif (element instanceof Expression) {\n\t\t\treturn nls.localize('watchExpressionAriaLabel', \"{0} value {1}, watch, debug\", (<Expression>element).name, (<Expression>element).value);\n\t\t}\n\n\t\t// Variable\n\t\treturn nls.localize('watchVariableAriaLabel', \"{0} value {1}, watch, debug\", (<Variable>element).name, (<Variable>element).value);\n\t}\n}\n\nclass WatchExpressionsDragAndDrop implements ITreeDragAndDrop<IExpression> {\n\n\tconstructor(private debugService: IDebugService) { }\n\n\tonDragOver(data: IDragAndDropData): boolean | ITreeDragOverReaction {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst expressions = (data as ElementsDragAndDropData<IExpression>).elements;\n\t\treturn expressions.length > 0 && expressions[0] instanceof Expression;\n\t}\n\n\tgetDragURI(element: IExpression): string | null {\n\t\tif (!(element instanceof Expression) || element === this.debugService.getViewModel().getSelectedExpression()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn element.getId();\n\t}\n\n\tgetDragLabel(elements: IExpression[]): string | undefined {\n\t\tif (elements.length === 1) {\n\t\t\treturn elements[0].name;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdrop(data: IDragAndDropData, targetElement: IExpression): void {\n\t\tif (!(data instanceof ElementsDragAndDropData)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst draggedElement = (data as ElementsDragAndDropData<IExpression>).elements[0];\n\t\tconst watches = this.debugService.getModel().getWatchExpressions();\n\t\tconst position = targetElement instanceof Expression ? watches.indexOf(targetElement) : watches.length - 1;\n\t\tthis.debugService.moveWatchExpression(draggedElement.getId(), position);\n\t}\n}\n"]}]}