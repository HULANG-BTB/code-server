{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar nls_1 = require(\"vs/nls\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar extensions_1 = require(\"vs/workbench/contrib/extensions/common/extensions\");\nvar event_1 = require(\"vs/base/common/event\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar DataSource = /** @class */ (function () {\n    function DataSource() {\n    }\n    DataSource.prototype.getId = function (tree, _a) {\n        var extension = _a.extension, parent = _a.parent;\n        return parent ? this.getId(tree, parent) + '/' + extension.identifier.id : extension.identifier.id;\n    };\n    DataSource.prototype.hasChildren = function (tree, _a) {\n        var hasChildren = _a.hasChildren;\n        return hasChildren;\n    };\n    DataSource.prototype.getChildren = function (tree, extensionData) {\n        return extensionData.getChildren();\n    };\n    DataSource.prototype.getParent = function (tree, _a) {\n        var parent = _a.parent;\n        return Promise.resolve(parent);\n    };\n    return DataSource;\n}());\nexports.DataSource = DataSource;\nvar Renderer = /** @class */ (function () {\n    function Renderer(instantiationService) {\n        this.instantiationService = instantiationService;\n    }\n    Renderer.prototype.getHeight = function (tree, element) {\n        return 62;\n    };\n    Renderer.prototype.getTemplateId = function (tree, _a) {\n        var extension = _a.extension;\n        return extension ? Renderer.EXTENSION_TEMPLATE_ID : Renderer.UNKNOWN_EXTENSION_TEMPLATE_ID;\n    };\n    Renderer.prototype.renderTemplate = function (tree, templateId, container) {\n        if (Renderer.EXTENSION_TEMPLATE_ID === templateId) {\n            return this.renderExtensionTemplate(tree, container);\n        }\n        return this.renderUnknownExtensionTemplate(tree, container);\n    };\n    Renderer.prototype.renderExtensionTemplate = function (tree, container) {\n        dom.addClass(container, 'extension');\n        var icon = dom.append(container, dom.$('img.icon'));\n        var details = dom.append(container, dom.$('.details'));\n        var header = dom.append(details, dom.$('.header'));\n        var name = dom.append(header, dom.$('span.name'));\n        var openExtensionAction = this.instantiationService.createInstance(OpenExtensionAction);\n        var extensionDisposables = [dom.addDisposableListener(name, 'click', function (e) {\n                tree.setFocus(openExtensionAction.extensionData);\n                tree.setSelection([openExtensionAction.extensionData]);\n                openExtensionAction.run(e.ctrlKey || e.metaKey);\n                e.stopPropagation();\n                e.preventDefault();\n            })];\n        var identifier = dom.append(header, dom.$('span.identifier'));\n        var footer = dom.append(details, dom.$('.footer'));\n        var author = dom.append(footer, dom.$('.author'));\n        return {\n            icon: icon,\n            name: name,\n            identifier: identifier,\n            author: author,\n            extensionDisposables: extensionDisposables,\n            set extensionData(extensionData) {\n                openExtensionAction.extensionData = extensionData;\n            }\n        };\n    };\n    Renderer.prototype.renderUnknownExtensionTemplate = function (tree, container) {\n        var messageContainer = dom.append(container, dom.$('div.unknown-extension'));\n        dom.append(messageContainer, dom.$('span.error-marker')).textContent = nls_1.localize('error', \"Error\");\n        dom.append(messageContainer, dom.$('span.message')).textContent = nls_1.localize('Unknown Extension', \"Unknown Extension:\");\n        var identifier = dom.append(messageContainer, dom.$('span.message'));\n        return { identifier: identifier };\n    };\n    Renderer.prototype.renderElement = function (tree, element, templateId, templateData) {\n        if (templateId === Renderer.EXTENSION_TEMPLATE_ID) {\n            this.renderExtension(tree, element, templateData);\n            return;\n        }\n        this.renderUnknownExtension(tree, element, templateData);\n    };\n    Renderer.prototype.renderExtension = function (tree, extensionData, data) {\n        var extension = extensionData.extension;\n        var onError = event_1.Event.once(event_2.domEvent(data.icon, 'error'));\n        onError(function () { return data.icon.src = extension.iconUrlFallback; }, null, data.extensionDisposables);\n        data.icon.src = extension.iconUrl;\n        if (!data.icon.complete) {\n            data.icon.style.visibility = 'hidden';\n            data.icon.onload = function () { return data.icon.style.visibility = 'inherit'; };\n        }\n        else {\n            data.icon.style.visibility = 'inherit';\n        }\n        data.name.textContent = extension.displayName;\n        data.identifier.textContent = extension.identifier.id;\n        data.author.textContent = extension.publisherDisplayName;\n        data.extensionData = extensionData;\n    };\n    Renderer.prototype.renderUnknownExtension = function (tree, _a, data) {\n        var extension = _a.extension;\n        data.identifier.textContent = extension.identifier.id;\n    };\n    Renderer.prototype.disposeTemplate = function (tree, templateId, templateData) {\n        if (templateId === Renderer.EXTENSION_TEMPLATE_ID) {\n            templateData.extensionDisposables = lifecycle_1.dispose(templateData.extensionDisposables);\n        }\n    };\n    Renderer.EXTENSION_TEMPLATE_ID = 'extension-template';\n    Renderer.UNKNOWN_EXTENSION_TEMPLATE_ID = 'unknown-extension-template';\n    Renderer = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService)\n    ], Renderer);\n    return Renderer;\n}());\nexports.Renderer = Renderer;\nvar Controller = /** @class */ (function (_super) {\n    tslib_1.__extends(Controller, _super);\n    function Controller(extensionsWorkdbenchService, configurationService) {\n        var _this = _super.call(this, {}, configurationService) || this;\n        _this.extensionsWorkdbenchService = extensionsWorkdbenchService;\n        // TODO@Sandeep this should be a command\n        _this.downKeyBindingDispatcher.set(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Enter, function (tree, event) { return _this.openExtension(tree, true); });\n        return _this;\n    }\n    Controller.prototype.onLeftClick = function (tree, element, event) {\n        var currentFocused = tree.getFocus();\n        if (_super.prototype.onLeftClick.call(this, tree, element, event)) {\n            if (element.parent === null) {\n                if (currentFocused) {\n                    tree.setFocus(currentFocused);\n                }\n                else {\n                    tree.focusFirst();\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    Controller.prototype.openExtension = function (tree, sideByside) {\n        var element = tree.getFocus();\n        if (element.extension) {\n            this.extensionsWorkdbenchService.open(element.extension, sideByside);\n            return true;\n        }\n        return false;\n    };\n    Controller = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, configuration_1.IConfigurationService)\n    ], Controller);\n    return Controller;\n}(listService_1.WorkbenchTreeController));\nexports.Controller = Controller;\nvar OpenExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenExtensionAction, _super);\n    function OpenExtensionAction(extensionsWorkdbenchService) {\n        var _this = _super.call(this, 'extensions.action.openExtension', '') || this;\n        _this.extensionsWorkdbenchService = extensionsWorkdbenchService;\n        return _this;\n    }\n    Object.defineProperty(OpenExtensionAction.prototype, \"extensionData\", {\n        get: function () {\n            return this._extensionData;\n        },\n        set: function (extension) {\n            this._extensionData = extension;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OpenExtensionAction.prototype.run = function (sideByside) {\n        return this.extensionsWorkdbenchService.open(this.extensionData.extension, sideByside);\n    };\n    OpenExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService)\n    ], OpenExtensionAction);\n    return OpenExtensionAction;\n}(actions_1.Action));\nvar ExtensionsTree = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionsTree, _super);\n    function ExtensionsTree(input, container, contextKeyService, listService, themeService, instantiationService, configurationService) {\n        var _this = this;\n        var renderer = instantiationService.createInstance(Renderer);\n        var controller = instantiationService.createInstance(Controller);\n        _this = _super.call(this, container, {\n            dataSource: new DataSource(),\n            renderer: renderer,\n            controller: controller\n        }, {\n            indentPixels: 40,\n            twistiePixels: 20\n        }, contextKeyService, listService, themeService, instantiationService, configurationService) || this;\n        _this.setInput(input);\n        _this.disposables.push(_this.onDidChangeSelection(function (event) {\n            if (event && event.payload && event.payload.origin === 'keyboard') {\n                controller.openExtension(_this, false);\n            }\n        }));\n        return _this;\n    }\n    ExtensionsTree = tslib_1.__decorate([\n        tslib_1.__param(2, contextkey_1.IContextKeyService),\n        tslib_1.__param(3, listService_1.IListService),\n        tslib_1.__param(4, themeService_1.IThemeService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService),\n        tslib_1.__param(6, configuration_1.IConfigurationService)\n    ], ExtensionsTree);\n    return ExtensionsTree;\n}(listService_1.WorkbenchTree));\nexports.ExtensionsTree = ExtensionsTree;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { localize } from 'vs/nls';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IDataSource, ITree, IRenderer } from 'vs/base/parts/tree/browser/tree';\nimport { Action } from 'vs/base/common/actions';\nimport { IExtensionsWorkbenchService, IExtension } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { Event } from 'vs/base/common/event';\nimport { domEvent } from 'vs/base/browser/event';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { WorkbenchTreeController, WorkbenchTree, IListService } from 'vs/platform/list/browser/listService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\n\nexport interface IExtensionTemplateData {\n\ticon: HTMLImageElement;\n\tname: HTMLElement;\n\tidentifier: HTMLElement;\n\tauthor: HTMLElement;\n\textensionDisposables: IDisposable[];\n\textensionData: IExtensionData;\n}\n\nexport interface IUnknownExtensionTemplateData {\n\tidentifier: HTMLElement;\n}\n\nexport interface IExtensionData {\n\textension: IExtension;\n\thasChildren: boolean;\n\tgetChildren: () => Promise<IExtensionData[] | null>;\n\tparent: IExtensionData | null;\n}\n\nexport class DataSource implements IDataSource {\n\n\tpublic getId(tree: ITree, { extension, parent }: IExtensionData): string {\n\t\treturn parent ? this.getId(tree, parent) + '/' + extension.identifier.id : extension.identifier.id;\n\t}\n\n\tpublic hasChildren(tree: ITree, { hasChildren }: IExtensionData): boolean {\n\t\treturn hasChildren;\n\t}\n\n\tpublic getChildren(tree: ITree, extensionData: IExtensionData): Promise<any> {\n\t\treturn extensionData.getChildren();\n\t}\n\n\tpublic getParent(tree: ITree, { parent }: IExtensionData): Promise<any> {\n\t\treturn Promise.resolve(parent);\n\t}\n}\n\nexport class Renderer implements IRenderer {\n\n\tprivate static readonly EXTENSION_TEMPLATE_ID = 'extension-template';\n\tprivate static readonly UNKNOWN_EXTENSION_TEMPLATE_ID = 'unknown-extension-template';\n\n\tconstructor(@IInstantiationService private readonly instantiationService: IInstantiationService) {\n\t}\n\n\tpublic getHeight(tree: ITree, element: IExtensionData): number {\n\t\treturn 62;\n\t}\n\n\tpublic getTemplateId(tree: ITree, { extension }: IExtensionData): string {\n\t\treturn extension ? Renderer.EXTENSION_TEMPLATE_ID : Renderer.UNKNOWN_EXTENSION_TEMPLATE_ID;\n\t}\n\n\tpublic renderTemplate(tree: ITree, templateId: string, container: HTMLElement): any {\n\t\tif (Renderer.EXTENSION_TEMPLATE_ID === templateId) {\n\t\t\treturn this.renderExtensionTemplate(tree, container);\n\t\t}\n\t\treturn this.renderUnknownExtensionTemplate(tree, container);\n\t}\n\n\tprivate renderExtensionTemplate(tree: ITree, container: HTMLElement): IExtensionTemplateData {\n\t\tdom.addClass(container, 'extension');\n\n\t\tconst icon = dom.append(container, dom.$<HTMLImageElement>('img.icon'));\n\t\tconst details = dom.append(container, dom.$('.details'));\n\n\t\tconst header = dom.append(details, dom.$('.header'));\n\t\tconst name = dom.append(header, dom.$('span.name'));\n\t\tconst openExtensionAction = this.instantiationService.createInstance(OpenExtensionAction);\n\t\tconst extensionDisposables = [dom.addDisposableListener(name, 'click', (e: MouseEvent) => {\n\t\t\ttree.setFocus(openExtensionAction.extensionData);\n\t\t\ttree.setSelection([openExtensionAction.extensionData]);\n\t\t\topenExtensionAction.run(e.ctrlKey || e.metaKey);\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t})];\n\t\tconst identifier = dom.append(header, dom.$('span.identifier'));\n\n\t\tconst footer = dom.append(details, dom.$('.footer'));\n\t\tconst author = dom.append(footer, dom.$('.author'));\n\t\treturn {\n\t\t\ticon,\n\t\t\tname,\n\t\t\tidentifier,\n\t\t\tauthor,\n\t\t\textensionDisposables,\n\t\t\tset extensionData(extensionData: IExtensionData) {\n\t\t\t\topenExtensionAction.extensionData = extensionData;\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate renderUnknownExtensionTemplate(tree: ITree, container: HTMLElement): IUnknownExtensionTemplateData {\n\t\tconst messageContainer = dom.append(container, dom.$('div.unknown-extension'));\n\t\tdom.append(messageContainer, dom.$('span.error-marker')).textContent = localize('error', \"Error\");\n\t\tdom.append(messageContainer, dom.$('span.message')).textContent = localize('Unknown Extension', \"Unknown Extension:\");\n\n\t\tconst identifier = dom.append(messageContainer, dom.$('span.message'));\n\t\treturn { identifier };\n\t}\n\n\tpublic renderElement(tree: ITree, element: IExtensionData, templateId: string, templateData: any): void {\n\t\tif (templateId === Renderer.EXTENSION_TEMPLATE_ID) {\n\t\t\tthis.renderExtension(tree, element, templateData);\n\t\t\treturn;\n\t\t}\n\t\tthis.renderUnknownExtension(tree, element, templateData);\n\t}\n\n\tprivate renderExtension(tree: ITree, extensionData: IExtensionData, data: IExtensionTemplateData): void {\n\t\tconst extension = extensionData.extension;\n\t\tconst onError = Event.once(domEvent(data.icon, 'error'));\n\t\tonError(() => data.icon.src = extension.iconUrlFallback, null, data.extensionDisposables);\n\t\tdata.icon.src = extension.iconUrl;\n\n\t\tif (!data.icon.complete) {\n\t\t\tdata.icon.style.visibility = 'hidden';\n\t\t\tdata.icon.onload = () => data.icon.style.visibility = 'inherit';\n\t\t} else {\n\t\t\tdata.icon.style.visibility = 'inherit';\n\t\t}\n\n\t\tdata.name.textContent = extension.displayName;\n\t\tdata.identifier.textContent = extension.identifier.id;\n\t\tdata.author.textContent = extension.publisherDisplayName;\n\t\tdata.extensionData = extensionData;\n\t}\n\n\tprivate renderUnknownExtension(tree: ITree, { extension }: IExtensionData, data: IUnknownExtensionTemplateData): void {\n\t\tdata.identifier.textContent = extension.identifier.id;\n\t}\n\n\tpublic disposeTemplate(tree: ITree, templateId: string, templateData: any): void {\n\t\tif (templateId === Renderer.EXTENSION_TEMPLATE_ID) {\n\t\t\ttemplateData.extensionDisposables = dispose((<IExtensionTemplateData>templateData).extensionDisposables);\n\t\t}\n\t}\n}\n\nexport class Controller extends WorkbenchTreeController {\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkdbenchService: IExtensionsWorkbenchService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper({}, configurationService);\n\n\t\t// TODO@Sandeep this should be a command\n\t\tthis.downKeyBindingDispatcher.set(KeyMod.CtrlCmd | KeyCode.Enter, (tree: ITree, event: any) => this.openExtension(tree, true));\n\t}\n\n\tprotected onLeftClick(tree: ITree, element: IExtensionData, event: IMouseEvent): boolean {\n\t\tlet currentFocused = tree.getFocus();\n\t\tif (super.onLeftClick(tree, element, event)) {\n\t\t\tif (element.parent === null) {\n\t\t\t\tif (currentFocused) {\n\t\t\t\t\ttree.setFocus(currentFocused);\n\t\t\t\t} else {\n\t\t\t\t\ttree.focusFirst();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic openExtension(tree: ITree, sideByside: boolean): boolean {\n\t\tconst element: IExtensionData = tree.getFocus();\n\t\tif (element.extension) {\n\t\t\tthis.extensionsWorkdbenchService.open(element.extension, sideByside);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass OpenExtensionAction extends Action {\n\n\tprivate _extensionData: IExtensionData;\n\n\tconstructor(@IExtensionsWorkbenchService private readonly extensionsWorkdbenchService: IExtensionsWorkbenchService) {\n\t\tsuper('extensions.action.openExtension', '');\n\t}\n\n\tpublic set extensionData(extension: IExtensionData) {\n\t\tthis._extensionData = extension;\n\t}\n\n\tpublic get extensionData(): IExtensionData {\n\t\treturn this._extensionData;\n\t}\n\n\trun(sideByside: boolean): Promise<any> {\n\t\treturn this.extensionsWorkdbenchService.open(this.extensionData.extension, sideByside);\n\t}\n}\n\nexport class ExtensionsTree extends WorkbenchTree {\n\n\tconstructor(\n\t\tinput: IExtensionData,\n\t\tcontainer: HTMLElement,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IListService listService: IListService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tconst renderer = instantiationService.createInstance(Renderer);\n\t\tconst controller = instantiationService.createInstance(Controller);\n\n\t\tsuper(\n\t\t\tcontainer,\n\t\t\t{\n\t\t\t\tdataSource: new DataSource(),\n\t\t\t\trenderer,\n\t\t\t\tcontroller\n\t\t\t}, {\n\t\t\t\tindentPixels: 40,\n\t\t\t\ttwistiePixels: 20\n\t\t\t},\n\t\t\tcontextKeyService, listService, themeService, instantiationService, configurationService\n\t\t);\n\n\t\tthis.setInput(input);\n\n\t\tthis.disposables.push(this.onDidChangeSelection(event => {\n\t\t\tif (event && event.payload && event.payload.origin === 'keyboard') {\n\t\t\t\tcontroller.openExtension(this, false);\n\t\t\t}\n\t\t}));\n\t}\n}"]}]}