{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar dotnetBuild = {\n    id: 'dotnetCore',\n    label: '.NET Core',\n    sort: 'NET Core',\n    autoDetect: false,\n    description: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"2.0.0\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"label\": \"build\",',\n        '\\t\\t\\t\"command\": \"dotnet build\",',\n        '\\t\\t\\t\"type\": \"shell\",',\n        '\\t\\t\\t\"group\": \"build\",',\n        '\\t\\t\\t\"presentation\": {',\n        '\\t\\t\\t\\t\"reveal\": \"silent\"',\n        '\\t\\t\\t},',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\nvar msbuild = {\n    id: 'msbuild',\n    label: 'MSBuild',\n    autoDetect: false,\n    description: nls.localize('msbuild', 'Executes the build target'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"2.0.0\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"label\": \"build\",',\n        '\\t\\t\\t\"type\": \"shell\",',\n        '\\t\\t\\t\"command\": \"msbuild\",',\n        '\\t\\t\\t\"args\": [',\n        '\\t\\t\\t\\t// Ask msbuild to generate full paths for file names.',\n        '\\t\\t\\t\\t\"/property:GenerateFullPaths=true\",',\n        '\\t\\t\\t\\t\"/t:build\"',\n        '\\t\\t\\t],',\n        '\\t\\t\\t\"group\": \"build\",',\n        '\\t\\t\\t\"presentation\": {',\n        '\\t\\t\\t\\t// Reveal the output only if unrecognized errors occur.',\n        '\\t\\t\\t\\t\"reveal\": \"silent\"',\n        '\\t\\t\\t},',\n        '\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\nvar command = {\n    id: 'externalCommand',\n    label: 'Others',\n    autoDetect: false,\n    description: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"2.0.0\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"label\": \"echo\",',\n        '\\t\\t\\t\"type\": \"shell\",',\n        '\\t\\t\\t\"command\": \"echo Hello\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\nvar maven = {\n    id: 'maven',\n    label: 'maven',\n    sort: 'MVN',\n    autoDetect: false,\n    description: nls.localize('Maven', 'Executes common maven commands'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"2.0.0\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"label\": \"verify\",',\n        '\\t\\t\\t\"type\": \"shell\",',\n        '\\t\\t\\t\"command\": \"mvn -B verify\",',\n        '\\t\\t\\t\"group\": \"build\"',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"label\": \"test\",',\n        '\\t\\t\\t\"type\": \"shell\",',\n        '\\t\\t\\t\"command\": \"mvn -B test\",',\n        '\\t\\t\\t\"group\": \"test\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\nvar _templates = null;\nfunction getTemplates() {\n    if (!_templates) {\n        _templates = [dotnetBuild, msbuild, maven].sort(function (a, b) {\n            return (a.sort || a.label).localeCompare(b.sort || b.label);\n        });\n        _templates.push(command);\n    }\n    return _templates;\n}\nexports.getTemplates = getTemplates;\n/** Version 1.0 templates\n *\nconst gulp: TaskEntry = {\n    id: 'gulp',\n    label: 'Gulp',\n    autoDetect: true,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"gulp\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"--no-color\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst grunt: TaskEntry = {\n    id: 'grunt',\n    label: 'Grunt',\n    autoDetect: true,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"grunt\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"--no-color\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst npm: TaskEntry = {\n    id: 'npm',\n    label: 'npm',\n    sort: 'NPM',\n    autoDetect: false,\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"npm\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"showOutput\": \"always\",',\n        '\\t\"suppressTaskName\": true,',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"install\",',\n        '\\t\\t\\t\"args\": [\"install\"]',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"update\",',\n        '\\t\\t\\t\"args\": [\"update\"]',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"test\",',\n        '\\t\\t\\t\"args\": [\"run\", \"test\"]',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst tscConfig: TaskEntry = {\n    id: 'tsc.config',\n    label: 'TypeScript - tsconfig.json',\n    autoDetect: false,\n    description: nls.localize('tsc.config', 'Compiles a TypeScript project'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"tsc\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"-p\", \".\"],',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"problemMatcher\": \"$tsc\"',\n        '}'\n    ].join('\\n')\n};\n\nconst tscWatch: TaskEntry = {\n    id: 'tsc.watch',\n    label: 'TypeScript - Watch Mode',\n    autoDetect: false,\n    description: nls.localize('tsc.watch', 'Compiles a TypeScript project in watch mode'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"tsc\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"-w\", \"-p\", \".\"],',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"isBackground\": true,',\n        '\\t\"problemMatcher\": \"$tsc-watch\"',\n        '}'\n    ].join('\\n')\n};\n\nconst dotnetBuild: TaskEntry = {\n    id: 'dotnetCore',\n    label: '.NET Core',\n    sort: 'NET Core',\n    autoDetect: false,\n    description: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"dotnet\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [],',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"build\",',\n        '\\t\\t\\t\"args\": [ ],',\n        '\\t\\t\\t\"isBuildCommand\": true,',\n        '\\t\\t\\t\"showOutput\": \"silent\",',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n    id: 'msbuild',\n    label: 'MSBuild',\n    autoDetect: false,\n    description: nls.localize('msbuild', 'Executes the build target'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"msbuild\",',\n        '\\t\"args\": [',\n        '\\t\\t// Ask msbuild to generate full paths for file names.',\n        '\\t\\t\"/property:GenerateFullPaths=true\"',\n        '\\t],',\n        '\\t\"taskSelector\": \"/t:\",',\n        '\\t\"showOutput\": \"silent\",',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"build\",',\n        '\\t\\t\\t// Show the output window only if unrecognized errors occur.',\n        '\\t\\t\\t\"showOutput\": \"silent\",',\n        '\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n        '\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nconst command: TaskEntry = {\n    id: 'externalCommand',\n    label: 'Others',\n    autoDetect: false,\n    description: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"echo\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"args\": [\"Hello World\"],',\n        '\\t\"showOutput\": \"always\"',\n        '}'\n    ].join('\\n')\n};\n\nconst maven: TaskEntry = {\n    id: 'maven',\n    label: 'maven',\n    sort: 'MVN',\n    autoDetect: false,\n    description: nls.localize('Maven', 'Executes common maven commands'),\n    content: [\n        '{',\n        '\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n        '\\t// for the documentation about the tasks.json format',\n        '\\t\"version\": \"0.1.0\",',\n        '\\t\"command\": \"mvn\",',\n        '\\t\"isShellCommand\": true,',\n        '\\t\"showOutput\": \"always\",',\n        '\\t\"suppressTaskName\": true,',\n        '\\t\"tasks\": [',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"verify\",',\n        '\\t\\t\\t\"args\": [\"-B\", \"verify\"],',\n        '\\t\\t\\t\"isBuildCommand\": true',\n        '\\t\\t},',\n        '\\t\\t{',\n        '\\t\\t\\t\"taskName\": \"test\",',\n        '\\t\\t\\t\"args\": [\"-B\", \"test\"],',\n        '\\t\\t\\t\"isTestCommand\": true',\n        '\\t\\t}',\n        '\\t]',\n        '}'\n    ].join('\\n')\n};\n\nexport let templates: TaskEntry[] = [gulp, grunt, tscConfig, tscWatch, dotnetBuild, msbuild, npm, maven].sort((a, b) => {\n    return (a.sort || a.label).localeCompare(b.sort || b.label);\n});\ntemplates.push(command);\n*/\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/tasks/common/taskTemplates.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,4BAA8B;AAU9B,IAAM,WAAW,GAAc;IAC9B,EAAE,EAAE,YAAY;IAChB,KAAK,EAAE,WAAW;IAClB,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,kCAAkC,CAAC;IAC3E,OAAO,EAAE;QACR,GAAG;QACH,yDAAyD;QACzD,wDAAwD;QACxD,uBAAuB;QACvB,cAAc;QACd,OAAO;QACP,yBAAyB;QACzB,kCAAkC;QAClC,wBAAwB;QACxB,yBAAyB;QACzB,yBAAyB;QACzB,4BAA4B;QAC5B,UAAU;QACV,sCAAsC;QACtC,OAAO;QACP,KAAK;QACL,GAAG;KACH,CAAC,IAAI,CAAC,IAAI,CAAC;CACZ,CAAC;AAEF,IAAM,OAAO,GAAc;IAC1B,EAAE,EAAE,SAAS;IACb,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,2BAA2B,CAAC;IACjE,OAAO,EAAE;QACR,GAAG;QACH,yDAAyD;QACzD,wDAAwD;QACxD,uBAAuB;QACvB,cAAc;QACd,OAAO;QACP,yBAAyB;QACzB,wBAAwB;QACxB,6BAA6B;QAC7B,iBAAiB;QACjB,+DAA+D;QAC/D,6CAA6C;QAC7C,oBAAoB;QACpB,UAAU;QACV,yBAAyB;QACzB,yBAAyB;QACzB,iEAAiE;QACjE,4BAA4B;QAC5B,UAAU;QACV,oFAAoF;QACpF,sCAAsC;QACtC,OAAO;QACP,KAAK;QACL,GAAG;KACH,CAAC,IAAI,CAAC,IAAI,CAAC;CACZ,CAAC;AAEF,IAAM,OAAO,GAAc;IAC1B,EAAE,EAAE,iBAAiB;IACrB,KAAK,EAAE,QAAQ;IACf,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,8CAA8C,CAAC;IAC5F,OAAO,EAAE;QACR,GAAG;QACH,yDAAyD;QACzD,wDAAwD;QACxD,uBAAuB;QACvB,cAAc;QACd,OAAO;QACP,wBAAwB;QACxB,wBAAwB;QACxB,+BAA+B;QAC/B,OAAO;QACP,KAAK;QACL,GAAG;KACH,CAAC,IAAI,CAAC,IAAI,CAAC;CACZ,CAAC;AAEF,IAAM,KAAK,GAAc;IACxB,EAAE,EAAE,OAAO;IACX,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,KAAK;IACX,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,gCAAgC,CAAC;IACpE,OAAO,EAAE;QACR,GAAG;QACH,yDAAyD;QACzD,wDAAwD;QACxD,uBAAuB;QACvB,cAAc;QACd,OAAO;QACP,0BAA0B;QAC1B,wBAAwB;QACxB,mCAAmC;QACnC,wBAAwB;QACxB,QAAQ;QACR,OAAO;QACP,wBAAwB;QACxB,wBAAwB;QACxB,iCAAiC;QACjC,uBAAuB;QACvB,OAAO;QACP,KAAK;QACL,GAAG;KACH,CAAC,IAAI,CAAC,IAAI,CAAC;CACZ,CAAC;AAEF,IAAI,UAAU,GAAuB,IAAI,CAAC;AAC1C,SAAgB,YAAY;IAC3B,IAAI,CAAC,UAAU,EAAE;QAChB,UAAU,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACpD,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB;IACD,OAAO,UAAU,CAAC;AACnB,CAAC;AARD,oCAQC;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyNE","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\n\nexport interface TaskEntry extends IQuickPickItem {\n\tsort?: string;\n\tautoDetect: boolean;\n\tcontent: string;\n}\n\nconst dotnetBuild: TaskEntry = {\n\tid: 'dotnetCore',\n\tlabel: '.NET Core',\n\tsort: 'NET Core',\n\tautoDetect: false,\n\tdescription: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"build\",',\n\t\t'\\t\\t\\t\"command\": \"dotnet build\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"group\": \"build\",',\n\t\t'\\t\\t\\t\"presentation\": {',\n\t\t'\\t\\t\\t\\t\"reveal\": \"silent\"',\n\t\t'\\t\\t\\t},',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n\tid: 'msbuild',\n\tlabel: 'MSBuild',\n\tautoDetect: false,\n\tdescription: nls.localize('msbuild', 'Executes the build target'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"build\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"msbuild\",',\n\t\t'\\t\\t\\t\"args\": [',\n\t\t'\\t\\t\\t\\t// Ask msbuild to generate full paths for file names.',\n\t\t'\\t\\t\\t\\t\"/property:GenerateFullPaths=true\",',\n\t\t'\\t\\t\\t\\t\"/t:build\"',\n\t\t'\\t\\t\\t],',\n\t\t'\\t\\t\\t\"group\": \"build\",',\n\t\t'\\t\\t\\t\"presentation\": {',\n\t\t'\\t\\t\\t\\t// Reveal the output only if unrecognized errors occur.',\n\t\t'\\t\\t\\t\\t\"reveal\": \"silent\"',\n\t\t'\\t\\t\\t},',\n\t\t'\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst command: TaskEntry = {\n\tid: 'externalCommand',\n\tlabel: 'Others',\n\tautoDetect: false,\n\tdescription: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"echo\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"echo Hello\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst maven: TaskEntry = {\n\tid: 'maven',\n\tlabel: 'maven',\n\tsort: 'MVN',\n\tautoDetect: false,\n\tdescription: nls.localize('Maven', 'Executes common maven commands'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"2.0.0\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"verify\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"mvn -B verify\",',\n\t\t'\\t\\t\\t\"group\": \"build\"',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"label\": \"test\",',\n\t\t'\\t\\t\\t\"type\": \"shell\",',\n\t\t'\\t\\t\\t\"command\": \"mvn -B test\",',\n\t\t'\\t\\t\\t\"group\": \"test\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nlet _templates: TaskEntry[] | null = null;\nexport function getTemplates(): TaskEntry[] {\n\tif (!_templates) {\n\t\t_templates = [dotnetBuild, msbuild, maven].sort((a, b) => {\n\t\t\treturn (a.sort || a.label).localeCompare(b.sort || b.label);\n\t\t});\n\t\t_templates.push(command);\n\t}\n\treturn _templates;\n}\n\n\n/** Version 1.0 templates\n *\nconst gulp: TaskEntry = {\n\tid: 'gulp',\n\tlabel: 'Gulp',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"gulp\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst grunt: TaskEntry = {\n\tid: 'grunt',\n\tlabel: 'Grunt',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"grunt\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst npm: TaskEntry = {\n\tid: 'npm',\n\tlabel: 'npm',\n\tsort: 'NPM',\n\tautoDetect: false,\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"npm\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"showOutput\": \"always\",',\n\t\t'\\t\"suppressTaskName\": true,',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"install\",',\n\t\t'\\t\\t\\t\"args\": [\"install\"]',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"update\",',\n\t\t'\\t\\t\\t\"args\": [\"update\"]',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"test\",',\n\t\t'\\t\\t\\t\"args\": [\"run\", \"test\"]',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscConfig: TaskEntry = {\n\tid: 'tsc.config',\n\tlabel: 'TypeScript - tsconfig.json',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.config', 'Compiles a TypeScript project'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"tsc\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"-p\", \".\"],',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"problemMatcher\": \"$tsc\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscWatch: TaskEntry = {\n\tid: 'tsc.watch',\n\tlabel: 'TypeScript - Watch Mode',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.watch', 'Compiles a TypeScript project in watch mode'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"tsc\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"-w\", \"-p\", \".\"],',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"isBackground\": true,',\n\t\t'\\t\"problemMatcher\": \"$tsc-watch\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst dotnetBuild: TaskEntry = {\n\tid: 'dotnetCore',\n\tlabel: '.NET Core',\n\tsort: 'NET Core',\n\tautoDetect: false,\n\tdescription: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"dotnet\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [],',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t'\\t\\t\\t\"args\": [ ],',\n\t\t'\\t\\t\\t\"isBuildCommand\": true,',\n\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n\tid: 'msbuild',\n\tlabel: 'MSBuild',\n\tautoDetect: false,\n\tdescription: nls.localize('msbuild', 'Executes the build target'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"msbuild\",',\n\t\t'\\t\"args\": [',\n\t\t'\\t\\t// Ask msbuild to generate full paths for file names.',\n\t\t'\\t\\t\"/property:GenerateFullPaths=true\"',\n\t\t'\\t],',\n\t\t'\\t\"taskSelector\": \"/t:\",',\n\t\t'\\t\"showOutput\": \"silent\",',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t'\\t\\t\\t// Show the output window only if unrecognized errors occur.',\n\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t'\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst command: TaskEntry = {\n\tid: 'externalCommand',\n\tlabel: 'Others',\n\tautoDetect: false,\n\tdescription: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"echo\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"args\": [\"Hello World\"],',\n\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst maven: TaskEntry = {\n\tid: 'maven',\n\tlabel: 'maven',\n\tsort: 'MVN',\n\tautoDetect: false,\n\tdescription: nls.localize('Maven', 'Executes common maven commands'),\n\tcontent: [\n\t\t'{',\n\t\t'\\t// See https://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t'\\t// for the documentation about the tasks.json format',\n\t\t'\\t\"version\": \"0.1.0\",',\n\t\t'\\t\"command\": \"mvn\",',\n\t\t'\\t\"isShellCommand\": true,',\n\t\t'\\t\"showOutput\": \"always\",',\n\t\t'\\t\"suppressTaskName\": true,',\n\t\t'\\t\"tasks\": [',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"verify\",',\n\t\t'\\t\\t\\t\"args\": [\"-B\", \"verify\"],',\n\t\t'\\t\\t\\t\"isBuildCommand\": true',\n\t\t'\\t\\t},',\n\t\t'\\t\\t{',\n\t\t'\\t\\t\\t\"taskName\": \"test\",',\n\t\t'\\t\\t\\t\"args\": [\"-B\", \"test\"],',\n\t\t'\\t\\t\\t\"isTestCommand\": true',\n\t\t'\\t\\t}',\n\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nexport let templates: TaskEntry[] = [gulp, grunt, tscConfig, tscWatch, dotnetBuild, msbuild, npm, maven].sort((a, b) => {\n\treturn (a.sort || a.label).localeCompare(b.sort || b.label);\n});\ntemplates.push(command);\n*/\n"]}]}