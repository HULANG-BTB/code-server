{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/legacyLayout.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/legacyLayout.ts","mtime":1555846338036},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar sash_1 = require(\"vs/base/browser/ui/sash/sash\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar TITLE_BAR_HEIGHT = platform_1.isNative && platform_1.isMacintosh ? 22 : 30;\nvar STATUS_BAR_HEIGHT = 22;\nvar ACTIVITY_BAR_WIDTH = 50;\nvar MIN_SIDEBAR_PART_WIDTH = 170;\nvar DEFAULT_SIDEBAR_PART_WIDTH = 300;\nvar HIDE_SIDEBAR_WIDTH_THRESHOLD = 50;\nvar MIN_PANEL_PART_HEIGHT = 77;\nvar MIN_PANEL_PART_WIDTH = 300;\nvar DEFAULT_PANEL_PART_SIZE = 350;\nvar DEFAULT_PANEL_SIZE_COEFFICIENT = 0.4;\nvar PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY = 0.7;\nvar HIDE_PANEL_HEIGHT_THRESHOLD = 50;\nvar HIDE_PANEL_WIDTH_THRESHOLD = 100;\n/**\n * @deprecated to be replaced by new Grid layout\n */\nvar WorkbenchLegacyLayout = /** @class */ (function (_super) {\n    tslib_1.__extends(WorkbenchLegacyLayout, _super);\n    function WorkbenchLegacyLayout(parent, workbenchContainer, parts, storageService, contextViewService, layoutService, viewletService, themeService, editorGroupService) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.workbenchContainer = workbenchContainer;\n        _this.parts = parts;\n        _this.storageService = storageService;\n        _this.contextViewService = contextViewService;\n        _this.layoutService = layoutService;\n        _this.viewletService = viewletService;\n        _this.themeService = themeService;\n        _this.editorGroupService = editorGroupService;\n        // Restore state\n        _this.restorePreviousState();\n        // Create layout sashes\n        _this.sashXOne = new sash_1.Sash(_this.workbenchContainer, _this);\n        _this.sashXTwo = new sash_1.Sash(_this.workbenchContainer, _this);\n        _this.sashY = new sash_1.Sash(_this.workbenchContainer, _this, { orientation: sash_1.Orientation.HORIZONTAL });\n        _this.registerListeners();\n        return _this;\n    }\n    WorkbenchLegacyLayout.prototype.restorePreviousState = function () {\n        this._sidebarWidth = Math.max(this.partLayoutInfo.sidebar.minWidth, this.storageService.getNumber(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, storage_1.StorageScope.GLOBAL, DEFAULT_SIDEBAR_PART_WIDTH));\n        this._panelWidth = Math.max(this.partLayoutInfo.panel.minWidth, this.storageService.getNumber(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, storage_1.StorageScope.GLOBAL, DEFAULT_PANEL_PART_SIZE));\n        this._panelHeight = Math.max(this.partLayoutInfo.panel.minHeight, this.storageService.getNumber(WorkbenchLegacyLayout.sashYHeightSettingsKey, storage_1.StorageScope.GLOBAL, DEFAULT_PANEL_PART_SIZE));\n        this.panelMaximized = false;\n        this.panelSizeBeforeMaximized = this.storageService.getNumber(WorkbenchLegacyLayout.panelSizeBeforeMaximizedKey, storage_1.StorageScope.GLOBAL, 0);\n    };\n    WorkbenchLegacyLayout.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.themeService.onThemeChange(function (_) { return _this.layout(); }));\n        this._register(this.parts.editor.onDidSizeConstraintsChange(function () { return _this.onDidEditorSizeConstraintsChange(); }));\n        this.registerSashListeners();\n    };\n    WorkbenchLegacyLayout.prototype.onDidEditorSizeConstraintsChange = function () {\n        if (this.workbenchSize && (this.sidebarWidth || this.panelHeight)) {\n            if (this.editorGroupService.count > 1) {\n                var minimumEditorPartSize = new dom_1.Dimension(this.parts.editor.minimumWidth, this.parts.editor.minimumHeight);\n                var sidebarOverflow = this.workbenchSize.width - this.sidebarWidth < minimumEditorPartSize.width;\n                var panelOverflow = false;\n                if (this.layoutService.getPanelPosition() === layoutService_1.Position.RIGHT) {\n                    panelOverflow = this.workbenchSize.width - this.panelWidth - this.sidebarWidth < minimumEditorPartSize.width;\n                }\n                else {\n                    panelOverflow = this.workbenchSize.height - this.panelHeight < minimumEditorPartSize.height;\n                }\n                // Trigger a layout if we detect that either sidebar or panel overflow\n                // as a matter of a new editor group being added to the editor part\n                if (sidebarOverflow || panelOverflow) {\n                    this.layout();\n                }\n            }\n        }\n    };\n    Object.defineProperty(WorkbenchLegacyLayout.prototype, \"activitybarWidth\", {\n        get: function () {\n            if (this.layoutService.isVisible(layoutService_1.Parts.ACTIVITYBAR_PART)) {\n                return this.partLayoutInfo.activitybar.width;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WorkbenchLegacyLayout.prototype, \"panelHeight\", {\n        get: function () {\n            var panelPosition = this.layoutService.getPanelPosition();\n            if (panelPosition === layoutService_1.Position.RIGHT) {\n                return this.sidebarHeight;\n            }\n            return this._panelHeight;\n        },\n        set: function (value) {\n            this._panelHeight = Math.min(this.computeMaxPanelHeight(), Math.max(this.partLayoutInfo.panel.minHeight, value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WorkbenchLegacyLayout.prototype, \"panelWidth\", {\n        get: function () {\n            var panelPosition = this.layoutService.getPanelPosition();\n            if (panelPosition === layoutService_1.Position.BOTTOM) {\n                return this.workbenchSize.width - this.activitybarWidth - this.sidebarWidth;\n            }\n            return this._panelWidth;\n        },\n        set: function (value) {\n            this._panelWidth = Math.min(this.computeMaxPanelWidth(), Math.max(this.partLayoutInfo.panel.minWidth, value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkbenchLegacyLayout.prototype.computeMaxPanelWidth = function () {\n        var minSidebarWidth;\n        if (this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n            if (this.layoutService.getSideBarPosition() === layoutService_1.Position.LEFT) {\n                minSidebarWidth = this.partLayoutInfo.sidebar.minWidth;\n            }\n            else {\n                minSidebarWidth = this.sidebarWidth;\n            }\n        }\n        else {\n            minSidebarWidth = 0;\n        }\n        return Math.max(this.partLayoutInfo.panel.minWidth, this.workbenchSize.width - this.parts.editor.minimumWidth - minSidebarWidth - this.activitybarWidth);\n    };\n    WorkbenchLegacyLayout.prototype.computeMaxPanelHeight = function () {\n        return Math.max(this.partLayoutInfo.panel.minHeight, this.sidebarHeight /* simplification for: window.height - status.height - title-height */ - this.parts.editor.minimumHeight);\n    };\n    Object.defineProperty(WorkbenchLegacyLayout.prototype, \"sidebarWidth\", {\n        get: function () {\n            if (this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n                return this._sidebarWidth;\n            }\n            return 0;\n        },\n        set: function (value) {\n            var panelMinWidth = this.layoutService.getPanelPosition() === layoutService_1.Position.RIGHT && this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART) ? this.partLayoutInfo.panel.minWidth : 0;\n            var maxSidebarWidth = this.workbenchSize.width - this.activitybarWidth - this.parts.editor.minimumWidth - panelMinWidth;\n            this._sidebarWidth = Math.max(this.partLayoutInfo.sidebar.minWidth, Math.min(maxSidebarWidth, value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WorkbenchLegacyLayout.prototype, \"partLayoutInfo\", {\n        get: function () {\n            return {\n                titlebar: {\n                    height: TITLE_BAR_HEIGHT\n                },\n                activitybar: {\n                    width: ACTIVITY_BAR_WIDTH\n                },\n                sidebar: {\n                    minWidth: MIN_SIDEBAR_PART_WIDTH\n                },\n                panel: {\n                    minHeight: MIN_PANEL_PART_HEIGHT,\n                    minWidth: MIN_PANEL_PART_WIDTH\n                },\n                statusbar: {\n                    height: STATUS_BAR_HEIGHT\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkbenchLegacyLayout.prototype.registerSashListeners = function () {\n        var _this = this;\n        var startX = 0;\n        var startY = 0;\n        var startXTwo = 0;\n        var startSidebarWidth;\n        var startPanelHeight;\n        var startPanelWidth;\n        this._register(this.sashXOne.onDidStart(function (e) {\n            startSidebarWidth = _this.sidebarWidth;\n            startX = e.startX;\n        }));\n        this._register(this.sashY.onDidStart(function (e) {\n            startPanelHeight = _this.panelHeight;\n            startY = e.startY;\n        }));\n        this._register(this.sashXTwo.onDidStart(function (e) {\n            startPanelWidth = _this.panelWidth;\n            startXTwo = e.startX;\n        }));\n        this._register(this.sashXOne.onDidChange(function (e) {\n            var doLayout = false;\n            var sidebarPosition = _this.layoutService.getSideBarPosition();\n            var isSidebarVisible = _this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART);\n            var newSashWidth = (sidebarPosition === layoutService_1.Position.LEFT) ? startSidebarWidth + e.currentX - startX : startSidebarWidth - e.currentX + startX;\n            // Sidebar visible\n            if (isSidebarVisible) {\n                // Automatically hide side bar when a certain threshold is met\n                if (newSashWidth + HIDE_SIDEBAR_WIDTH_THRESHOLD < _this.partLayoutInfo.sidebar.minWidth) {\n                    var dragCompensation = _this.partLayoutInfo.sidebar.minWidth - HIDE_SIDEBAR_WIDTH_THRESHOLD;\n                    _this.layoutService.setSideBarHidden(true);\n                    startX = (sidebarPosition === layoutService_1.Position.LEFT) ? Math.max(_this.activitybarWidth, e.currentX - dragCompensation) : Math.min(e.currentX + dragCompensation, _this.workbenchSize.width - _this.activitybarWidth);\n                    _this.sidebarWidth = startSidebarWidth; // when restoring sidebar, restore to the sidebar width we started from\n                }\n                // Otherwise size the sidebar accordingly\n                else {\n                    _this.sidebarWidth = Math.max(_this.partLayoutInfo.sidebar.minWidth, newSashWidth); // Sidebar can not become smaller than MIN_PART_WIDTH\n                    doLayout = newSashWidth >= _this.partLayoutInfo.sidebar.minWidth;\n                }\n            }\n            // Sidebar hidden\n            else {\n                if ((sidebarPosition === layoutService_1.Position.LEFT && e.currentX - startX >= _this.partLayoutInfo.sidebar.minWidth) ||\n                    (sidebarPosition === layoutService_1.Position.RIGHT && startX - e.currentX >= _this.partLayoutInfo.sidebar.minWidth)) {\n                    startSidebarWidth = _this.partLayoutInfo.sidebar.minWidth - (sidebarPosition === layoutService_1.Position.LEFT ? e.currentX - startX : startX - e.currentX);\n                    _this.sidebarWidth = _this.partLayoutInfo.sidebar.minWidth;\n                    _this.layoutService.setSideBarHidden(false);\n                }\n            }\n            if (doLayout) {\n                _this.layout({ source: layoutService_1.Parts.SIDEBAR_PART });\n            }\n        }));\n        this._register(this.sashY.onDidChange(function (e) {\n            var doLayout = false;\n            var isPanelVisible = _this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART);\n            var newSashHeight = startPanelHeight - (e.currentY - startY);\n            // Panel visible\n            if (isPanelVisible) {\n                // Automatically hide panel when a certain threshold is met\n                if (newSashHeight + HIDE_PANEL_HEIGHT_THRESHOLD < _this.partLayoutInfo.panel.minHeight) {\n                    var dragCompensation = _this.partLayoutInfo.panel.minHeight - HIDE_PANEL_HEIGHT_THRESHOLD;\n                    _this.layoutService.setPanelHidden(true);\n                    startY = Math.min(_this.sidebarHeight - _this.statusbarHeight - _this.titlebarHeight, e.currentY + dragCompensation);\n                    _this.panelHeight = startPanelHeight; // when restoring panel, restore to the panel height we started from\n                }\n                // Otherwise size the panel accordingly\n                else {\n                    _this.panelHeight = Math.max(_this.partLayoutInfo.panel.minHeight, newSashHeight); // Panel can not become smaller than MIN_PART_HEIGHT\n                    doLayout = newSashHeight >= _this.partLayoutInfo.panel.minHeight;\n                }\n            }\n            // Panel hidden\n            else {\n                if (startY - e.currentY >= _this.partLayoutInfo.panel.minHeight) {\n                    startPanelHeight = 0;\n                    _this.panelHeight = _this.partLayoutInfo.panel.minHeight;\n                    _this.layoutService.setPanelHidden(false);\n                }\n            }\n            if (doLayout) {\n                _this.layout({ source: layoutService_1.Parts.PANEL_PART });\n            }\n        }));\n        this._register(this.sashXTwo.onDidChange(function (e) {\n            var doLayout = false;\n            var isPanelVisible = _this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART);\n            var newSashWidth = startPanelWidth - (e.currentX - startXTwo);\n            // Panel visible\n            if (isPanelVisible) {\n                // Automatically hide panel when a certain threshold is met\n                if (newSashWidth + HIDE_PANEL_WIDTH_THRESHOLD < _this.partLayoutInfo.panel.minWidth) {\n                    var dragCompensation = _this.partLayoutInfo.panel.minWidth - HIDE_PANEL_WIDTH_THRESHOLD;\n                    _this.layoutService.setPanelHidden(true);\n                    startXTwo = Math.min(_this.workbenchSize.width - _this.activitybarWidth, e.currentX + dragCompensation);\n                    _this.panelWidth = startPanelWidth; // when restoring panel, restore to the panel height we started from\n                }\n                // Otherwise size the panel accordingly\n                else {\n                    _this.panelWidth = newSashWidth;\n                    doLayout = newSashWidth >= _this.partLayoutInfo.panel.minWidth;\n                }\n            }\n            // Panel hidden\n            else {\n                if (startXTwo - e.currentX >= _this.partLayoutInfo.panel.minWidth) {\n                    startPanelWidth = 0;\n                    _this.panelWidth = _this.partLayoutInfo.panel.minWidth;\n                    _this.layoutService.setPanelHidden(false);\n                }\n            }\n            if (doLayout) {\n                _this.layout({ source: layoutService_1.Parts.PANEL_PART });\n            }\n        }));\n        this._register(this.sashXOne.onDidEnd(function () {\n            _this.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, _this.sidebarWidth, storage_1.StorageScope.GLOBAL);\n        }));\n        this._register(this.sashY.onDidEnd(function () {\n            _this.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, _this.panelHeight, storage_1.StorageScope.GLOBAL);\n        }));\n        this._register(this.sashXTwo.onDidEnd(function () {\n            _this.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, _this.panelWidth, storage_1.StorageScope.GLOBAL);\n        }));\n        this._register(this.sashY.onDidReset(function () {\n            _this.panelHeight = _this.sidebarHeight * DEFAULT_PANEL_SIZE_COEFFICIENT;\n            _this.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, _this.panelHeight, storage_1.StorageScope.GLOBAL);\n            _this.layout();\n        }));\n        this._register(this.sashXOne.onDidReset(function () {\n            var activeViewlet = _this.viewletService.getActiveViewlet();\n            var optimalWidth = activeViewlet ? activeViewlet.getOptimalWidth() : null;\n            _this.sidebarWidth = typeof optimalWidth === 'number' ? Math.max(optimalWidth, DEFAULT_SIDEBAR_PART_WIDTH) : DEFAULT_SIDEBAR_PART_WIDTH;\n            _this.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, _this.sidebarWidth, storage_1.StorageScope.GLOBAL);\n            _this.layoutService.setSideBarHidden(false);\n            _this.layout();\n        }));\n        this._register(this.sashXTwo.onDidReset(function () {\n            _this.panelWidth = (_this.workbenchSize.width - _this.sidebarWidth - _this.activitybarWidth) * DEFAULT_PANEL_SIZE_COEFFICIENT;\n            _this.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, _this.panelWidth, storage_1.StorageScope.GLOBAL);\n            _this.layout();\n        }));\n    };\n    WorkbenchLegacyLayout.prototype.layout = function (options) {\n        var _this = this;\n        this.workbenchSize = dom_1.getClientArea(this.parent);\n        var isActivityBarHidden = !this.layoutService.isVisible(layoutService_1.Parts.ACTIVITYBAR_PART);\n        var isTitlebarHidden = !this.layoutService.isVisible(layoutService_1.Parts.TITLEBAR_PART);\n        var isPanelHidden = !this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART);\n        var isStatusbarHidden = !this.layoutService.isVisible(layoutService_1.Parts.STATUSBAR_PART);\n        var isSidebarHidden = !this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART);\n        var sidebarPosition = this.layoutService.getSideBarPosition();\n        var panelPosition = this.layoutService.getPanelPosition();\n        var menubarVisibility = this.layoutService.getMenubarVisibility();\n        // Sidebar\n        if (this.sidebarWidth === -1) {\n            this.sidebarWidth = this.workbenchSize.width / 5;\n        }\n        this.statusbarHeight = isStatusbarHidden ? 0 : this.partLayoutInfo.statusbar.height;\n        this.titlebarHeight = isTitlebarHidden ? 0 : this.partLayoutInfo.titlebar.height / ((platform_1.isNative && platform_1.isMacintosh) || !menubarVisibility || menubarVisibility === 'hidden' ? browser_1.getZoomFactor() : 1); // adjust for zoom prevention\n        this.sidebarHeight = this.workbenchSize.height - this.statusbarHeight - this.titlebarHeight;\n        var sidebarSize = new dom_1.Dimension(this.sidebarWidth, this.sidebarHeight);\n        // Activity Bar\n        var activityBarSize = new dom_1.Dimension(this.activitybarWidth, sidebarSize.height);\n        // Panel part\n        var panelHeight;\n        var panelWidth;\n        var maxPanelHeight = this.computeMaxPanelHeight();\n        var maxPanelWidth = this.computeMaxPanelWidth();\n        if (isPanelHidden) {\n            panelHeight = 0;\n            panelWidth = 0;\n        }\n        else if (panelPosition === layoutService_1.Position.BOTTOM) {\n            if (this.panelHeight > 0) {\n                panelHeight = Math.min(maxPanelHeight, Math.max(this.partLayoutInfo.panel.minHeight, this.panelHeight));\n            }\n            else {\n                panelHeight = sidebarSize.height * DEFAULT_PANEL_SIZE_COEFFICIENT;\n            }\n            panelWidth = this.workbenchSize.width - sidebarSize.width - activityBarSize.width;\n            if (options && options.toggleMaximizedPanel) {\n                panelHeight = this.panelMaximized ? Math.max(this.partLayoutInfo.panel.minHeight, Math.min(this.panelSizeBeforeMaximized, maxPanelHeight)) : maxPanelHeight;\n            }\n            this.panelMaximized = panelHeight === maxPanelHeight;\n            if (panelHeight / maxPanelHeight < PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY) {\n                this.panelSizeBeforeMaximized = panelHeight;\n            }\n        }\n        else {\n            panelHeight = sidebarSize.height;\n            if (this.panelWidth > 0) {\n                panelWidth = Math.min(maxPanelWidth, Math.max(this.partLayoutInfo.panel.minWidth, this.panelWidth));\n            }\n            else {\n                panelWidth = (this.workbenchSize.width - activityBarSize.width - sidebarSize.width) * DEFAULT_PANEL_SIZE_COEFFICIENT;\n            }\n            if (options && options.toggleMaximizedPanel) {\n                panelWidth = this.panelMaximized ? Math.max(this.partLayoutInfo.panel.minWidth, Math.min(this.panelSizeBeforeMaximized, maxPanelWidth)) : maxPanelWidth;\n            }\n            this.panelMaximized = panelWidth === maxPanelWidth;\n            if (panelWidth / maxPanelWidth < PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY) {\n                this.panelSizeBeforeMaximized = panelWidth;\n            }\n        }\n        this.storageService.store(WorkbenchLegacyLayout.panelSizeBeforeMaximizedKey, this.panelSizeBeforeMaximized, storage_1.StorageScope.GLOBAL);\n        var panelDimension = new dom_1.Dimension(panelWidth, panelHeight);\n        // Editor\n        var editorSize = {\n            width: 0,\n            height: 0\n        };\n        editorSize.width = this.workbenchSize.width - sidebarSize.width - activityBarSize.width - (panelPosition === layoutService_1.Position.RIGHT ? panelDimension.width : 0);\n        editorSize.height = sidebarSize.height - (panelPosition === layoutService_1.Position.BOTTOM ? panelDimension.height : 0);\n        // Adjust for Editor Part minimum width\n        var minimumEditorPartSize = new dom_1.Dimension(this.parts.editor.minimumWidth, this.parts.editor.minimumHeight);\n        if (editorSize.width < minimumEditorPartSize.width) {\n            var missingPreferredEditorWidth = minimumEditorPartSize.width - editorSize.width;\n            var outstandingMissingPreferredEditorWidth = missingPreferredEditorWidth;\n            // Take from Panel if Panel Position on the Right and Visible\n            if (!isPanelHidden && panelPosition === layoutService_1.Position.RIGHT && (!options || options.source !== layoutService_1.Parts.PANEL_PART)) {\n                var oldPanelWidth = panelDimension.width;\n                panelDimension.width = Math.max(this.partLayoutInfo.panel.minWidth, panelDimension.width - outstandingMissingPreferredEditorWidth);\n                outstandingMissingPreferredEditorWidth -= oldPanelWidth - panelDimension.width;\n            }\n            // Take from Sidebar if Visible\n            if (!isSidebarHidden && outstandingMissingPreferredEditorWidth > 0) {\n                var oldSidebarWidth = sidebarSize.width;\n                sidebarSize.width = Math.max(this.partLayoutInfo.sidebar.minWidth, sidebarSize.width - outstandingMissingPreferredEditorWidth);\n                outstandingMissingPreferredEditorWidth -= oldSidebarWidth - sidebarSize.width;\n            }\n            editorSize.width += missingPreferredEditorWidth - outstandingMissingPreferredEditorWidth;\n            if (!isPanelHidden && panelPosition === layoutService_1.Position.BOTTOM) {\n                panelDimension.width = editorSize.width; // ensure panel width is always following editor width\n            }\n        }\n        // Adjust for Editor Part minimum height\n        if (editorSize.height < minimumEditorPartSize.height) {\n            var missingPreferredEditorHeight = minimumEditorPartSize.height - editorSize.height;\n            var outstandingMissingPreferredEditorHeight = missingPreferredEditorHeight;\n            // Take from Panel if Panel Position on the Bottom and Visible\n            if (!isPanelHidden && panelPosition === layoutService_1.Position.BOTTOM) {\n                var oldPanelHeight = panelDimension.height;\n                panelDimension.height = Math.max(this.partLayoutInfo.panel.minHeight, panelDimension.height - outstandingMissingPreferredEditorHeight);\n                outstandingMissingPreferredEditorHeight -= oldPanelHeight - panelDimension.height;\n            }\n            editorSize.height += missingPreferredEditorHeight - outstandingMissingPreferredEditorHeight;\n        }\n        if (!isSidebarHidden) {\n            this.sidebarWidth = sidebarSize.width;\n            this.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, this.sidebarWidth, storage_1.StorageScope.GLOBAL);\n        }\n        if (!isPanelHidden) {\n            if (panelPosition === layoutService_1.Position.BOTTOM) {\n                this.panelHeight = panelDimension.height;\n                this.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, this.panelHeight, storage_1.StorageScope.GLOBAL);\n            }\n            else {\n                this.panelWidth = panelDimension.width;\n                this.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, this.panelWidth, storage_1.StorageScope.GLOBAL);\n            }\n        }\n        // Workbench\n        dom_1.position(this.workbenchContainer, 0, 0, 0, 0, 'relative');\n        dom_1.size(this.workbenchContainer, this.workbenchSize.width, this.workbenchSize.height);\n        // Bug on Chrome: Sometimes Chrome wants to scroll the workbench container on layout changes. The fix is to reset scrolling in this case.\n        // uses set time to ensure this happens in th next frame (RAF will be at the end of this JS time slice and we don't want that)\n        setTimeout(function () {\n            var workbenchContainer = _this.workbenchContainer;\n            if (workbenchContainer.scrollTop > 0) {\n                workbenchContainer.scrollTop = 0;\n            }\n            if (workbenchContainer.scrollLeft > 0) {\n                workbenchContainer.scrollLeft = 0;\n            }\n        });\n        // Title Part\n        var titleContainer = this.parts.titlebar.getContainer();\n        if (isTitlebarHidden) {\n            dom_1.hide(titleContainer);\n        }\n        else {\n            dom_1.show(titleContainer);\n        }\n        // Editor Part and Panel part\n        var editorContainer = this.parts.editor.getContainer();\n        var panelContainer = this.parts.panel.getContainer();\n        dom_1.size(editorContainer, editorSize.width, editorSize.height);\n        dom_1.size(panelContainer, panelDimension.width, panelDimension.height);\n        if (panelPosition === layoutService_1.Position.BOTTOM) {\n            if (sidebarPosition === layoutService_1.Position.LEFT) {\n                dom_1.position(editorContainer, this.titlebarHeight, 0, this.statusbarHeight + panelDimension.height, sidebarSize.width + activityBarSize.width);\n                dom_1.position(panelContainer, editorSize.height + this.titlebarHeight, 0, this.statusbarHeight, sidebarSize.width + activityBarSize.width);\n            }\n            else {\n                dom_1.position(editorContainer, this.titlebarHeight, sidebarSize.width, this.statusbarHeight + panelDimension.height, 0);\n                dom_1.position(panelContainer, editorSize.height + this.titlebarHeight, sidebarSize.width, this.statusbarHeight, 0);\n            }\n        }\n        else {\n            if (sidebarPosition === layoutService_1.Position.LEFT) {\n                dom_1.position(editorContainer, this.titlebarHeight, panelDimension.width, this.statusbarHeight, sidebarSize.width + activityBarSize.width);\n                dom_1.position(panelContainer, this.titlebarHeight, 0, this.statusbarHeight, sidebarSize.width + activityBarSize.width + editorSize.width);\n            }\n            else {\n                dom_1.position(editorContainer, this.titlebarHeight, sidebarSize.width + activityBarSize.width + panelWidth, this.statusbarHeight, 0);\n                dom_1.position(panelContainer, this.titlebarHeight, sidebarSize.width + activityBarSize.width, this.statusbarHeight, editorSize.width);\n            }\n        }\n        // Activity Bar Part\n        var activitybarContainer = this.parts.activitybar.getContainer();\n        dom_1.size(activitybarContainer, null, activityBarSize.height);\n        if (sidebarPosition === layoutService_1.Position.LEFT) {\n            this.parts.activitybar.getContainer().style.right = '';\n            dom_1.position(activitybarContainer, this.titlebarHeight, undefined, 0, 0);\n        }\n        else {\n            this.parts.activitybar.getContainer().style.left = '';\n            dom_1.position(activitybarContainer, this.titlebarHeight, 0, 0, undefined);\n        }\n        if (isActivityBarHidden) {\n            dom_1.hide(activitybarContainer);\n        }\n        else {\n            dom_1.show(activitybarContainer);\n        }\n        // Sidebar Part\n        var sidebarContainer = this.parts.sidebar.getContainer();\n        dom_1.size(sidebarContainer, sidebarSize.width, sidebarSize.height);\n        var editorAndPanelWidth = editorSize.width + (panelPosition === layoutService_1.Position.RIGHT ? panelWidth : 0);\n        if (sidebarPosition === layoutService_1.Position.LEFT) {\n            dom_1.position(sidebarContainer, this.titlebarHeight, editorAndPanelWidth, this.statusbarHeight, activityBarSize.width);\n        }\n        else {\n            dom_1.position(sidebarContainer, this.titlebarHeight, activityBarSize.width, this.statusbarHeight, editorAndPanelWidth);\n        }\n        // Statusbar Part\n        var statusbarContainer = this.parts.statusbar.getContainer();\n        dom_1.position(statusbarContainer, this.workbenchSize.height - this.statusbarHeight);\n        if (isStatusbarHidden) {\n            dom_1.hide(statusbarContainer);\n        }\n        else {\n            dom_1.show(statusbarContainer);\n        }\n        // Sashes\n        this.sashXOne.layout();\n        if (panelPosition === layoutService_1.Position.BOTTOM) {\n            this.sashXTwo.hide();\n            this.sashY.layout();\n            this.sashY.show();\n        }\n        else {\n            this.sashY.hide();\n            this.sashXTwo.layout();\n            this.sashXTwo.show();\n        }\n        // Propagate to Part Layouts\n        this.parts.titlebar.layout(this.workbenchSize.width, this.titlebarHeight, -1);\n        this.parts.editor.layout(editorSize.width, editorSize.height, -1);\n        this.parts.sidebar.layout(sidebarSize.width, sidebarSize.height, -1);\n        this.parts.panel.layout(panelDimension.width, panelDimension.height, -1);\n        this.parts.activitybar.layout(activityBarSize.width, activityBarSize.height, -1);\n        // Propagate to Context View\n        this.contextViewService.layout();\n    };\n    WorkbenchLegacyLayout.prototype.getVerticalSashTop = function (sash) {\n        return this.titlebarHeight;\n    };\n    WorkbenchLegacyLayout.prototype.getVerticalSashLeft = function (sash) {\n        var sidebarPosition = this.layoutService.getSideBarPosition();\n        if (sash === this.sashXOne) {\n            if (sidebarPosition === layoutService_1.Position.LEFT) {\n                return this.sidebarWidth + this.activitybarWidth;\n            }\n            return this.workbenchSize.width - this.sidebarWidth - this.activitybarWidth;\n        }\n        return this.workbenchSize.width - this.panelWidth - (sidebarPosition === layoutService_1.Position.RIGHT ? this.sidebarWidth + this.activitybarWidth : 0);\n    };\n    WorkbenchLegacyLayout.prototype.getVerticalSashHeight = function (sash) {\n        if (sash === this.sashXTwo && !this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART)) {\n            return 0;\n        }\n        return this.sidebarHeight;\n    };\n    WorkbenchLegacyLayout.prototype.getHorizontalSashTop = function (sash) {\n        var offset = 2; // Horizontal sash should be a bit lower than the editor area, thus add 2px #5524\n        return offset + (this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART) ? this.sidebarHeight - this.panelHeight + this.titlebarHeight : this.sidebarHeight + this.titlebarHeight);\n    };\n    WorkbenchLegacyLayout.prototype.getHorizontalSashLeft = function (sash) {\n        if (this.layoutService.getSideBarPosition() === layoutService_1.Position.RIGHT) {\n            return 0;\n        }\n        return this.sidebarWidth + this.activitybarWidth;\n    };\n    WorkbenchLegacyLayout.prototype.getHorizontalSashWidth = function (sash) {\n        return this.panelWidth;\n    };\n    WorkbenchLegacyLayout.prototype.isPanelMaximized = function () {\n        return this.panelMaximized;\n    };\n    WorkbenchLegacyLayout.prototype.resizePart = function (part, sizeChange) {\n        var panelPosition = this.layoutService.getPanelPosition();\n        var sizeChangePxWidth = this.workbenchSize.width * (sizeChange / 100);\n        var sizeChangePxHeight = this.workbenchSize.height * (sizeChange / 100);\n        var doLayout = false;\n        switch (part) {\n            case layoutService_1.Parts.SIDEBAR_PART:\n                this.sidebarWidth = this.sidebarWidth + sizeChangePxWidth; // Sidebar can not become smaller than MIN_PART_WIDTH\n                if (this.workbenchSize.width - this.sidebarWidth < this.parts.editor.minimumWidth) {\n                    this.sidebarWidth = this.workbenchSize.width - this.parts.editor.minimumWidth;\n                }\n                doLayout = true;\n                break;\n            case layoutService_1.Parts.PANEL_PART:\n                if (panelPosition === layoutService_1.Position.BOTTOM) {\n                    this.panelHeight = this.panelHeight + sizeChangePxHeight;\n                }\n                else if (panelPosition === layoutService_1.Position.RIGHT) {\n                    this.panelWidth = this.panelWidth + sizeChangePxWidth;\n                }\n                doLayout = true;\n                break;\n            case layoutService_1.Parts.EDITOR_PART:\n                // If we have one editor we can cheat and resize sidebar with the negative delta\n                // If the sidebar is not visible and panel is, resize panel main axis with negative Delta\n                if (this.editorGroupService.count === 1) {\n                    if (this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n                        this.sidebarWidth = this.sidebarWidth - sizeChangePxWidth;\n                        doLayout = true;\n                    }\n                    else if (this.layoutService.isVisible(layoutService_1.Parts.PANEL_PART)) {\n                        if (panelPosition === layoutService_1.Position.BOTTOM) {\n                            this.panelHeight = this.panelHeight - sizeChangePxHeight;\n                        }\n                        else if (panelPosition === layoutService_1.Position.RIGHT) {\n                            this.panelWidth = this.panelWidth - sizeChangePxWidth;\n                        }\n                        doLayout = true;\n                    }\n                }\n                else {\n                    var activeGroup = this.editorGroupService.activeGroup;\n                    var activeGroupSize = this.editorGroupService.getSize(activeGroup);\n                    this.editorGroupService.setSize(activeGroup, activeGroupSize + sizeChangePxWidth);\n                }\n        }\n        if (doLayout) {\n            this.layout();\n        }\n    };\n    WorkbenchLegacyLayout.sashXOneWidthSettingsKey = 'workbench.sidebar.width';\n    WorkbenchLegacyLayout.sashXTwoWidthSettingsKey = 'workbench.panel.width';\n    WorkbenchLegacyLayout.sashYHeightSettingsKey = 'workbench.panel.height';\n    WorkbenchLegacyLayout.panelSizeBeforeMaximizedKey = 'workbench.panel.sizeBeforeMaximized';\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], WorkbenchLegacyLayout.prototype, \"partLayoutInfo\", null);\n    WorkbenchLegacyLayout = tslib_1.__decorate([\n        tslib_1.__param(3, storage_1.IStorageService),\n        tslib_1.__param(4, contextView_1.IContextViewService),\n        tslib_1.__param(5, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(6, viewlet_1.IViewletService),\n        tslib_1.__param(7, themeService_1.IThemeService),\n        tslib_1.__param(8, editorGroupsService_1.IEditorGroupsService)\n    ], WorkbenchLegacyLayout);\n    return WorkbenchLegacyLayout;\n}(lifecycle_1.Disposable));\nexports.WorkbenchLegacyLayout = WorkbenchLegacyLayout;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/legacyLayout.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/legacyLayout.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Sash, ISashEvent, IVerticalSashLayoutProvider, IHorizontalSashLayoutProvider, Orientation } from 'vs/base/browser/ui/sash/sash';\nimport { IWorkbenchLayoutService, Position, ILayoutOptions, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { isMacintosh, isNative } from 'vs/base/common/platform';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Dimension, getClientArea, size, position, hide, show } from 'vs/base/browser/dom';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { getZoomFactor } from 'vs/base/browser/browser';\nimport { Part } from 'vs/workbench/browser/part';\n\nconst TITLE_BAR_HEIGHT = isNative && isMacintosh ? 22 : 30;\nconst STATUS_BAR_HEIGHT = 22;\nconst ACTIVITY_BAR_WIDTH = 50;\n\nconst MIN_SIDEBAR_PART_WIDTH = 170;\nconst DEFAULT_SIDEBAR_PART_WIDTH = 300;\nconst HIDE_SIDEBAR_WIDTH_THRESHOLD = 50;\n\nconst MIN_PANEL_PART_HEIGHT = 77;\nconst MIN_PANEL_PART_WIDTH = 300;\nconst DEFAULT_PANEL_PART_SIZE = 350;\nconst DEFAULT_PANEL_SIZE_COEFFICIENT = 0.4;\nconst PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY = 0.7;\nconst HIDE_PANEL_HEIGHT_THRESHOLD = 50;\nconst HIDE_PANEL_WIDTH_THRESHOLD = 100;\n\n/**\n * @deprecated to be replaced by new Grid layout\n */\nexport class WorkbenchLegacyLayout extends Disposable implements IVerticalSashLayoutProvider, IHorizontalSashLayoutProvider {\n\n\tprivate static readonly sashXOneWidthSettingsKey = 'workbench.sidebar.width';\n\tprivate static readonly sashXTwoWidthSettingsKey = 'workbench.panel.width';\n\tprivate static readonly sashYHeightSettingsKey = 'workbench.panel.height';\n\tprivate static readonly panelSizeBeforeMaximizedKey = 'workbench.panel.sizeBeforeMaximized';\n\n\tprivate workbenchSize: Dimension;\n\n\tprivate sashXOne: Sash;\n\tprivate sashXTwo: Sash;\n\tprivate sashY: Sash;\n\n\tprivate _sidebarWidth: number;\n\tprivate sidebarHeight: number;\n\tprivate titlebarHeight: number;\n\tprivate statusbarHeight: number;\n\tprivate panelSizeBeforeMaximized: number;\n\tprivate panelMaximized: boolean;\n\tprivate _panelHeight: number;\n\tprivate _panelWidth: number;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tprivate workbenchContainer: HTMLElement,\n\t\tprivate parts: {\n\t\t\ttitlebar: Part,\n\t\t\tactivitybar: Part,\n\t\t\teditor: Part,\n\t\t\tsidebar: Part,\n\t\t\tpanel: Part,\n\t\t\tstatusbar: Part\n\t\t},\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper();\n\n\t\t// Restore state\n\t\tthis.restorePreviousState();\n\n\t\t// Create layout sashes\n\t\tthis.sashXOne = new Sash(this.workbenchContainer, this);\n\t\tthis.sashXTwo = new Sash(this.workbenchContainer, this);\n\t\tthis.sashY = new Sash(this.workbenchContainer, this, { orientation: Orientation.HORIZONTAL });\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate restorePreviousState(): void {\n\t\tthis._sidebarWidth = Math.max(this.partLayoutInfo.sidebar.minWidth, this.storageService.getNumber(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, StorageScope.GLOBAL, DEFAULT_SIDEBAR_PART_WIDTH));\n\n\t\tthis._panelWidth = Math.max(this.partLayoutInfo.panel.minWidth, this.storageService.getNumber(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, StorageScope.GLOBAL, DEFAULT_PANEL_PART_SIZE));\n\t\tthis._panelHeight = Math.max(this.partLayoutInfo.panel.minHeight, this.storageService.getNumber(WorkbenchLegacyLayout.sashYHeightSettingsKey, StorageScope.GLOBAL, DEFAULT_PANEL_PART_SIZE));\n\n\t\tthis.panelMaximized = false;\n\t\tthis.panelSizeBeforeMaximized = this.storageService.getNumber(WorkbenchLegacyLayout.panelSizeBeforeMaximizedKey, StorageScope.GLOBAL, 0);\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.themeService.onThemeChange(_ => this.layout()));\n\t\tthis._register((this.parts.editor as any).onDidSizeConstraintsChange(() => this.onDidEditorSizeConstraintsChange()));\n\n\t\tthis.registerSashListeners();\n\t}\n\n\tprivate onDidEditorSizeConstraintsChange(): void {\n\t\tif (this.workbenchSize && (this.sidebarWidth || this.panelHeight)) {\n\t\t\tif (this.editorGroupService.count > 1) {\n\t\t\t\tconst minimumEditorPartSize = new Dimension(this.parts.editor.minimumWidth, this.parts.editor.minimumHeight);\n\n\t\t\t\tconst sidebarOverflow = this.workbenchSize.width - this.sidebarWidth < minimumEditorPartSize.width;\n\n\t\t\t\tlet panelOverflow = false;\n\t\t\t\tif (this.layoutService.getPanelPosition() === Position.RIGHT) {\n\t\t\t\t\tpanelOverflow = this.workbenchSize.width - this.panelWidth - this.sidebarWidth < minimumEditorPartSize.width;\n\t\t\t\t} else {\n\t\t\t\t\tpanelOverflow = this.workbenchSize.height - this.panelHeight < minimumEditorPartSize.height;\n\t\t\t\t}\n\n\t\t\t\t// Trigger a layout if we detect that either sidebar or panel overflow\n\t\t\t\t// as a matter of a new editor group being added to the editor part\n\t\t\t\tif (sidebarOverflow || panelOverflow) {\n\t\t\t\t\tthis.layout();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate get activitybarWidth(): number {\n\t\tif (this.layoutService.isVisible(Parts.ACTIVITYBAR_PART)) {\n\t\t\treturn this.partLayoutInfo.activitybar.width;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate get panelHeight(): number {\n\t\tconst panelPosition = this.layoutService.getPanelPosition();\n\t\tif (panelPosition === Position.RIGHT) {\n\t\t\treturn this.sidebarHeight;\n\t\t}\n\n\t\treturn this._panelHeight;\n\t}\n\n\tprivate set panelHeight(value: number) {\n\t\tthis._panelHeight = Math.min(this.computeMaxPanelHeight(), Math.max(this.partLayoutInfo.panel.minHeight, value));\n\t}\n\n\tprivate get panelWidth(): number {\n\t\tconst panelPosition = this.layoutService.getPanelPosition();\n\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\treturn this.workbenchSize.width - this.activitybarWidth - this.sidebarWidth;\n\t\t}\n\n\t\treturn this._panelWidth;\n\t}\n\n\tprivate set panelWidth(value: number) {\n\t\tthis._panelWidth = Math.min(this.computeMaxPanelWidth(), Math.max(this.partLayoutInfo.panel.minWidth, value));\n\t}\n\n\tprivate computeMaxPanelWidth(): number {\n\t\tlet minSidebarWidth: number;\n\t\tif (this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\tif (this.layoutService.getSideBarPosition() === Position.LEFT) {\n\t\t\t\tminSidebarWidth = this.partLayoutInfo.sidebar.minWidth;\n\t\t\t} else {\n\t\t\t\tminSidebarWidth = this.sidebarWidth;\n\t\t\t}\n\t\t} else {\n\t\t\tminSidebarWidth = 0;\n\t\t}\n\n\t\treturn Math.max(this.partLayoutInfo.panel.minWidth, this.workbenchSize.width - this.parts.editor.minimumWidth - minSidebarWidth - this.activitybarWidth);\n\t}\n\n\tprivate computeMaxPanelHeight(): number {\n\t\treturn Math.max(this.partLayoutInfo.panel.minHeight, this.sidebarHeight /* simplification for: window.height - status.height - title-height */ - this.parts.editor.minimumHeight);\n\t}\n\n\tprivate get sidebarWidth(): number {\n\t\tif (this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\treturn this._sidebarWidth;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprivate set sidebarWidth(value: number) {\n\t\tconst panelMinWidth = this.layoutService.getPanelPosition() === Position.RIGHT && this.layoutService.isVisible(Parts.PANEL_PART) ? this.partLayoutInfo.panel.minWidth : 0;\n\t\tconst maxSidebarWidth = this.workbenchSize.width - this.activitybarWidth - this.parts.editor.minimumWidth - panelMinWidth;\n\n\t\tthis._sidebarWidth = Math.max(this.partLayoutInfo.sidebar.minWidth, Math.min(maxSidebarWidth, value));\n\t}\n\n\t@memoize\n\tpublic get partLayoutInfo() {\n\t\treturn {\n\t\t\ttitlebar: {\n\t\t\t\theight: TITLE_BAR_HEIGHT\n\t\t\t},\n\t\t\tactivitybar: {\n\t\t\t\twidth: ACTIVITY_BAR_WIDTH\n\t\t\t},\n\t\t\tsidebar: {\n\t\t\t\tminWidth: MIN_SIDEBAR_PART_WIDTH\n\t\t\t},\n\t\t\tpanel: {\n\t\t\t\tminHeight: MIN_PANEL_PART_HEIGHT,\n\t\t\t\tminWidth: MIN_PANEL_PART_WIDTH\n\t\t\t},\n\t\t\tstatusbar: {\n\t\t\t\theight: STATUS_BAR_HEIGHT\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate registerSashListeners(): void {\n\t\tlet startX: number = 0;\n\t\tlet startY: number = 0;\n\t\tlet startXTwo: number = 0;\n\t\tlet startSidebarWidth: number;\n\t\tlet startPanelHeight: number;\n\t\tlet startPanelWidth: number;\n\n\t\tthis._register(this.sashXOne.onDidStart((e: ISashEvent) => {\n\t\t\tstartSidebarWidth = this.sidebarWidth;\n\t\t\tstartX = e.startX;\n\t\t}));\n\n\t\tthis._register(this.sashY.onDidStart((e: ISashEvent) => {\n\t\t\tstartPanelHeight = this.panelHeight;\n\t\t\tstartY = e.startY;\n\t\t}));\n\n\t\tthis._register(this.sashXTwo.onDidStart((e: ISashEvent) => {\n\t\t\tstartPanelWidth = this.panelWidth;\n\t\t\tstartXTwo = e.startX;\n\t\t}));\n\n\t\tthis._register(this.sashXOne.onDidChange((e: ISashEvent) => {\n\t\t\tlet doLayout = false;\n\t\t\tlet sidebarPosition = this.layoutService.getSideBarPosition();\n\t\t\tlet isSidebarVisible = this.layoutService.isVisible(Parts.SIDEBAR_PART);\n\t\t\tlet newSashWidth = (sidebarPosition === Position.LEFT) ? startSidebarWidth + e.currentX - startX : startSidebarWidth - e.currentX + startX;\n\n\t\t\t// Sidebar visible\n\t\t\tif (isSidebarVisible) {\n\n\t\t\t\t// Automatically hide side bar when a certain threshold is met\n\t\t\t\tif (newSashWidth + HIDE_SIDEBAR_WIDTH_THRESHOLD < this.partLayoutInfo.sidebar.minWidth) {\n\t\t\t\t\tlet dragCompensation = this.partLayoutInfo.sidebar.minWidth - HIDE_SIDEBAR_WIDTH_THRESHOLD;\n\t\t\t\t\tthis.layoutService.setSideBarHidden(true);\n\t\t\t\t\tstartX = (sidebarPosition === Position.LEFT) ? Math.max(this.activitybarWidth, e.currentX - dragCompensation) : Math.min(e.currentX + dragCompensation, this.workbenchSize.width - this.activitybarWidth);\n\t\t\t\t\tthis.sidebarWidth = startSidebarWidth; // when restoring sidebar, restore to the sidebar width we started from\n\t\t\t\t}\n\n\t\t\t\t// Otherwise size the sidebar accordingly\n\t\t\t\telse {\n\t\t\t\t\tthis.sidebarWidth = Math.max(this.partLayoutInfo.sidebar.minWidth, newSashWidth); // Sidebar can not become smaller than MIN_PART_WIDTH\n\t\t\t\t\tdoLayout = newSashWidth >= this.partLayoutInfo.sidebar.minWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sidebar hidden\n\t\t\telse {\n\t\t\t\tif ((sidebarPosition === Position.LEFT && e.currentX - startX >= this.partLayoutInfo.sidebar.minWidth) ||\n\t\t\t\t\t(sidebarPosition === Position.RIGHT && startX - e.currentX >= this.partLayoutInfo.sidebar.minWidth)) {\n\t\t\t\t\tstartSidebarWidth = this.partLayoutInfo.sidebar.minWidth - (sidebarPosition === Position.LEFT ? e.currentX - startX : startX - e.currentX);\n\t\t\t\t\tthis.sidebarWidth = this.partLayoutInfo.sidebar.minWidth;\n\t\t\t\t\tthis.layoutService.setSideBarHidden(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (doLayout) {\n\t\t\t\tthis.layout({ source: Parts.SIDEBAR_PART });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.sashY.onDidChange((e: ISashEvent) => {\n\t\t\tlet doLayout = false;\n\t\t\tlet isPanelVisible = this.layoutService.isVisible(Parts.PANEL_PART);\n\t\t\tlet newSashHeight = startPanelHeight - (e.currentY - startY);\n\n\t\t\t// Panel visible\n\t\t\tif (isPanelVisible) {\n\n\t\t\t\t// Automatically hide panel when a certain threshold is met\n\t\t\t\tif (newSashHeight + HIDE_PANEL_HEIGHT_THRESHOLD < this.partLayoutInfo.panel.minHeight) {\n\t\t\t\t\tlet dragCompensation = this.partLayoutInfo.panel.minHeight - HIDE_PANEL_HEIGHT_THRESHOLD;\n\t\t\t\t\tthis.layoutService.setPanelHidden(true);\n\t\t\t\t\tstartY = Math.min(this.sidebarHeight - this.statusbarHeight - this.titlebarHeight, e.currentY + dragCompensation);\n\t\t\t\t\tthis.panelHeight = startPanelHeight; // when restoring panel, restore to the panel height we started from\n\t\t\t\t}\n\n\t\t\t\t// Otherwise size the panel accordingly\n\t\t\t\telse {\n\t\t\t\t\tthis.panelHeight = Math.max(this.partLayoutInfo.panel.minHeight, newSashHeight); // Panel can not become smaller than MIN_PART_HEIGHT\n\t\t\t\t\tdoLayout = newSashHeight >= this.partLayoutInfo.panel.minHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Panel hidden\n\t\t\telse {\n\t\t\t\tif (startY - e.currentY >= this.partLayoutInfo.panel.minHeight) {\n\t\t\t\t\tstartPanelHeight = 0;\n\t\t\t\t\tthis.panelHeight = this.partLayoutInfo.panel.minHeight;\n\t\t\t\t\tthis.layoutService.setPanelHidden(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (doLayout) {\n\t\t\t\tthis.layout({ source: Parts.PANEL_PART });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.sashXTwo.onDidChange((e: ISashEvent) => {\n\t\t\tlet doLayout = false;\n\t\t\tlet isPanelVisible = this.layoutService.isVisible(Parts.PANEL_PART);\n\t\t\tlet newSashWidth = startPanelWidth - (e.currentX - startXTwo);\n\n\t\t\t// Panel visible\n\t\t\tif (isPanelVisible) {\n\n\t\t\t\t// Automatically hide panel when a certain threshold is met\n\t\t\t\tif (newSashWidth + HIDE_PANEL_WIDTH_THRESHOLD < this.partLayoutInfo.panel.minWidth) {\n\t\t\t\t\tlet dragCompensation = this.partLayoutInfo.panel.minWidth - HIDE_PANEL_WIDTH_THRESHOLD;\n\t\t\t\t\tthis.layoutService.setPanelHidden(true);\n\t\t\t\t\tstartXTwo = Math.min(this.workbenchSize.width - this.activitybarWidth, e.currentX + dragCompensation);\n\t\t\t\t\tthis.panelWidth = startPanelWidth; // when restoring panel, restore to the panel height we started from\n\t\t\t\t}\n\n\t\t\t\t// Otherwise size the panel accordingly\n\t\t\t\telse {\n\t\t\t\t\tthis.panelWidth = newSashWidth;\n\t\t\t\t\tdoLayout = newSashWidth >= this.partLayoutInfo.panel.minWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Panel hidden\n\t\t\telse {\n\t\t\t\tif (startXTwo - e.currentX >= this.partLayoutInfo.panel.minWidth) {\n\t\t\t\t\tstartPanelWidth = 0;\n\t\t\t\t\tthis.panelWidth = this.partLayoutInfo.panel.minWidth;\n\t\t\t\t\tthis.layoutService.setPanelHidden(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (doLayout) {\n\t\t\t\tthis.layout({ source: Parts.PANEL_PART });\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.sashXOne.onDidEnd(() => {\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, this.sidebarWidth, StorageScope.GLOBAL);\n\t\t}));\n\n\t\tthis._register(this.sashY.onDidEnd(() => {\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, this.panelHeight, StorageScope.GLOBAL);\n\t\t}));\n\n\t\tthis._register(this.sashXTwo.onDidEnd(() => {\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, this.panelWidth, StorageScope.GLOBAL);\n\t\t}));\n\n\t\tthis._register(this.sashY.onDidReset(() => {\n\t\t\tthis.panelHeight = this.sidebarHeight * DEFAULT_PANEL_SIZE_COEFFICIENT;\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, this.panelHeight, StorageScope.GLOBAL);\n\n\t\t\tthis.layout();\n\t\t}));\n\n\t\tthis._register(this.sashXOne.onDidReset(() => {\n\t\t\tconst activeViewlet = this.viewletService.getActiveViewlet();\n\t\t\tconst optimalWidth = activeViewlet ? activeViewlet.getOptimalWidth() : null;\n\t\t\tthis.sidebarWidth = typeof optimalWidth === 'number' ? Math.max(optimalWidth, DEFAULT_SIDEBAR_PART_WIDTH) : DEFAULT_SIDEBAR_PART_WIDTH;\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, this.sidebarWidth, StorageScope.GLOBAL);\n\n\t\t\tthis.layoutService.setSideBarHidden(false);\n\t\t\tthis.layout();\n\t\t}));\n\n\t\tthis._register(this.sashXTwo.onDidReset(() => {\n\t\t\tthis.panelWidth = (this.workbenchSize.width - this.sidebarWidth - this.activitybarWidth) * DEFAULT_PANEL_SIZE_COEFFICIENT;\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, this.panelWidth, StorageScope.GLOBAL);\n\n\t\t\tthis.layout();\n\t\t}));\n\t}\n\n\tlayout(options?: ILayoutOptions): void {\n\t\tthis.workbenchSize = getClientArea(this.parent);\n\n\t\tconst isActivityBarHidden = !this.layoutService.isVisible(Parts.ACTIVITYBAR_PART);\n\t\tconst isTitlebarHidden = !this.layoutService.isVisible(Parts.TITLEBAR_PART);\n\t\tconst isPanelHidden = !this.layoutService.isVisible(Parts.PANEL_PART);\n\t\tconst isStatusbarHidden = !this.layoutService.isVisible(Parts.STATUSBAR_PART);\n\t\tconst isSidebarHidden = !this.layoutService.isVisible(Parts.SIDEBAR_PART);\n\t\tconst sidebarPosition = this.layoutService.getSideBarPosition();\n\t\tconst panelPosition = this.layoutService.getPanelPosition();\n\t\tconst menubarVisibility = this.layoutService.getMenubarVisibility();\n\n\t\t// Sidebar\n\t\tif (this.sidebarWidth === -1) {\n\t\t\tthis.sidebarWidth = this.workbenchSize.width / 5;\n\t\t}\n\n\t\tthis.statusbarHeight = isStatusbarHidden ? 0 : this.partLayoutInfo.statusbar.height;\n\t\tthis.titlebarHeight = isTitlebarHidden ? 0 : this.partLayoutInfo.titlebar.height / ((isNative && isMacintosh) || !menubarVisibility || menubarVisibility === 'hidden' ? getZoomFactor() : 1); // adjust for zoom prevention\n\n\t\tthis.sidebarHeight = this.workbenchSize.height - this.statusbarHeight - this.titlebarHeight;\n\t\tlet sidebarSize = new Dimension(this.sidebarWidth, this.sidebarHeight);\n\n\t\t// Activity Bar\n\t\tlet activityBarSize = new Dimension(this.activitybarWidth, sidebarSize.height);\n\n\t\t// Panel part\n\t\tlet panelHeight: number;\n\t\tlet panelWidth: number;\n\t\tconst maxPanelHeight = this.computeMaxPanelHeight();\n\t\tconst maxPanelWidth = this.computeMaxPanelWidth();\n\n\t\tif (isPanelHidden) {\n\t\t\tpanelHeight = 0;\n\t\t\tpanelWidth = 0;\n\t\t} else if (panelPosition === Position.BOTTOM) {\n\t\t\tif (this.panelHeight > 0) {\n\t\t\t\tpanelHeight = Math.min(maxPanelHeight, Math.max(this.partLayoutInfo.panel.minHeight, this.panelHeight));\n\t\t\t} else {\n\t\t\t\tpanelHeight = sidebarSize.height * DEFAULT_PANEL_SIZE_COEFFICIENT;\n\t\t\t}\n\t\t\tpanelWidth = this.workbenchSize.width - sidebarSize.width - activityBarSize.width;\n\n\t\t\tif (options && options.toggleMaximizedPanel) {\n\t\t\t\tpanelHeight = this.panelMaximized ? Math.max(this.partLayoutInfo.panel.minHeight, Math.min(this.panelSizeBeforeMaximized, maxPanelHeight)) : maxPanelHeight;\n\t\t\t}\n\n\t\t\tthis.panelMaximized = panelHeight === maxPanelHeight;\n\t\t\tif (panelHeight / maxPanelHeight < PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY) {\n\t\t\t\tthis.panelSizeBeforeMaximized = panelHeight;\n\t\t\t}\n\t\t} else {\n\t\t\tpanelHeight = sidebarSize.height;\n\t\t\tif (this.panelWidth > 0) {\n\t\t\t\tpanelWidth = Math.min(maxPanelWidth, Math.max(this.partLayoutInfo.panel.minWidth, this.panelWidth));\n\t\t\t} else {\n\t\t\t\tpanelWidth = (this.workbenchSize.width - activityBarSize.width - sidebarSize.width) * DEFAULT_PANEL_SIZE_COEFFICIENT;\n\t\t\t}\n\n\t\t\tif (options && options.toggleMaximizedPanel) {\n\t\t\t\tpanelWidth = this.panelMaximized ? Math.max(this.partLayoutInfo.panel.minWidth, Math.min(this.panelSizeBeforeMaximized, maxPanelWidth)) : maxPanelWidth;\n\t\t\t}\n\n\t\t\tthis.panelMaximized = panelWidth === maxPanelWidth;\n\t\t\tif (panelWidth / maxPanelWidth < PANEL_SIZE_BEFORE_MAXIMIZED_BOUNDARY) {\n\t\t\t\tthis.panelSizeBeforeMaximized = panelWidth;\n\t\t\t}\n\t\t}\n\n\t\tthis.storageService.store(WorkbenchLegacyLayout.panelSizeBeforeMaximizedKey, this.panelSizeBeforeMaximized, StorageScope.GLOBAL);\n\n\t\tconst panelDimension = new Dimension(panelWidth, panelHeight);\n\n\t\t// Editor\n\t\tlet editorSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\teditorSize.width = this.workbenchSize.width - sidebarSize.width - activityBarSize.width - (panelPosition === Position.RIGHT ? panelDimension.width : 0);\n\t\teditorSize.height = sidebarSize.height - (panelPosition === Position.BOTTOM ? panelDimension.height : 0);\n\n\t\t// Adjust for Editor Part minimum width\n\t\tconst minimumEditorPartSize = new Dimension(this.parts.editor.minimumWidth, this.parts.editor.minimumHeight);\n\t\tif (editorSize.width < minimumEditorPartSize.width) {\n\t\t\tconst missingPreferredEditorWidth = minimumEditorPartSize.width - editorSize.width;\n\t\t\tlet outstandingMissingPreferredEditorWidth = missingPreferredEditorWidth;\n\n\t\t\t// Take from Panel if Panel Position on the Right and Visible\n\t\t\tif (!isPanelHidden && panelPosition === Position.RIGHT && (!options || options.source !== Parts.PANEL_PART)) {\n\t\t\t\tconst oldPanelWidth = panelDimension.width;\n\t\t\t\tpanelDimension.width = Math.max(this.partLayoutInfo.panel.minWidth, panelDimension.width - outstandingMissingPreferredEditorWidth);\n\t\t\t\toutstandingMissingPreferredEditorWidth -= oldPanelWidth - panelDimension.width;\n\t\t\t}\n\n\t\t\t// Take from Sidebar if Visible\n\t\t\tif (!isSidebarHidden && outstandingMissingPreferredEditorWidth > 0) {\n\t\t\t\tconst oldSidebarWidth = sidebarSize.width;\n\t\t\t\tsidebarSize.width = Math.max(this.partLayoutInfo.sidebar.minWidth, sidebarSize.width - outstandingMissingPreferredEditorWidth);\n\t\t\t\toutstandingMissingPreferredEditorWidth -= oldSidebarWidth - sidebarSize.width;\n\t\t\t}\n\n\t\t\teditorSize.width += missingPreferredEditorWidth - outstandingMissingPreferredEditorWidth;\n\t\t\tif (!isPanelHidden && panelPosition === Position.BOTTOM) {\n\t\t\t\tpanelDimension.width = editorSize.width; // ensure panel width is always following editor width\n\t\t\t}\n\t\t}\n\n\t\t// Adjust for Editor Part minimum height\n\t\tif (editorSize.height < minimumEditorPartSize.height) {\n\t\t\tconst missingPreferredEditorHeight = minimumEditorPartSize.height - editorSize.height;\n\t\t\tlet outstandingMissingPreferredEditorHeight = missingPreferredEditorHeight;\n\n\t\t\t// Take from Panel if Panel Position on the Bottom and Visible\n\t\t\tif (!isPanelHidden && panelPosition === Position.BOTTOM) {\n\t\t\t\tconst oldPanelHeight = panelDimension.height;\n\t\t\t\tpanelDimension.height = Math.max(this.partLayoutInfo.panel.minHeight, panelDimension.height - outstandingMissingPreferredEditorHeight);\n\t\t\t\toutstandingMissingPreferredEditorHeight -= oldPanelHeight - panelDimension.height;\n\t\t\t}\n\n\t\t\teditorSize.height += missingPreferredEditorHeight - outstandingMissingPreferredEditorHeight;\n\t\t}\n\n\t\tif (!isSidebarHidden) {\n\t\t\tthis.sidebarWidth = sidebarSize.width;\n\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXOneWidthSettingsKey, this.sidebarWidth, StorageScope.GLOBAL);\n\t\t}\n\n\t\tif (!isPanelHidden) {\n\t\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\t\tthis.panelHeight = panelDimension.height;\n\t\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashYHeightSettingsKey, this.panelHeight, StorageScope.GLOBAL);\n\t\t\t} else {\n\t\t\t\tthis.panelWidth = panelDimension.width;\n\t\t\t\tthis.storageService.store(WorkbenchLegacyLayout.sashXTwoWidthSettingsKey, this.panelWidth, StorageScope.GLOBAL);\n\t\t\t}\n\t\t}\n\n\t\t// Workbench\n\t\tposition(this.workbenchContainer, 0, 0, 0, 0, 'relative');\n\t\tsize(this.workbenchContainer, this.workbenchSize.width, this.workbenchSize.height);\n\n\t\t// Bug on Chrome: Sometimes Chrome wants to scroll the workbench container on layout changes. The fix is to reset scrolling in this case.\n\t\t// uses set time to ensure this happens in th next frame (RAF will be at the end of this JS time slice and we don't want that)\n\t\tsetTimeout(() => {\n\t\t\tconst workbenchContainer = this.workbenchContainer;\n\t\t\tif (workbenchContainer.scrollTop > 0) {\n\t\t\t\tworkbenchContainer.scrollTop = 0;\n\t\t\t}\n\t\t\tif (workbenchContainer.scrollLeft > 0) {\n\t\t\t\tworkbenchContainer.scrollLeft = 0;\n\t\t\t}\n\t\t});\n\n\t\t// Title Part\n\t\tconst titleContainer = this.parts.titlebar.getContainer();\n\t\tif (isTitlebarHidden) {\n\t\t\thide(titleContainer);\n\t\t} else {\n\t\t\tshow(titleContainer);\n\t\t}\n\n\t\t// Editor Part and Panel part\n\t\tconst editorContainer = this.parts.editor.getContainer();\n\t\tconst panelContainer = this.parts.panel.getContainer();\n\t\tsize(editorContainer, editorSize.width, editorSize.height);\n\t\tsize(panelContainer, panelDimension.width, panelDimension.height);\n\n\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\tif (sidebarPosition === Position.LEFT) {\n\t\t\t\tposition(editorContainer, this.titlebarHeight, 0, this.statusbarHeight + panelDimension.height, sidebarSize.width + activityBarSize.width);\n\t\t\t\tposition(panelContainer, editorSize.height + this.titlebarHeight, 0, this.statusbarHeight, sidebarSize.width + activityBarSize.width);\n\t\t\t} else {\n\t\t\t\tposition(editorContainer, this.titlebarHeight, sidebarSize.width, this.statusbarHeight + panelDimension.height, 0);\n\t\t\t\tposition(panelContainer, editorSize.height + this.titlebarHeight, sidebarSize.width, this.statusbarHeight, 0);\n\t\t\t}\n\t\t} else {\n\t\t\tif (sidebarPosition === Position.LEFT) {\n\t\t\t\tposition(editorContainer, this.titlebarHeight, panelDimension.width, this.statusbarHeight, sidebarSize.width + activityBarSize.width);\n\t\t\t\tposition(panelContainer, this.titlebarHeight, 0, this.statusbarHeight, sidebarSize.width + activityBarSize.width + editorSize.width);\n\t\t\t} else {\n\t\t\t\tposition(editorContainer, this.titlebarHeight, sidebarSize.width + activityBarSize.width + panelWidth, this.statusbarHeight, 0);\n\t\t\t\tposition(panelContainer, this.titlebarHeight, sidebarSize.width + activityBarSize.width, this.statusbarHeight, editorSize.width);\n\t\t\t}\n\t\t}\n\n\t\t// Activity Bar Part\n\t\tconst activitybarContainer = this.parts.activitybar.getContainer();\n\t\tsize(activitybarContainer, null, activityBarSize.height);\n\t\tif (sidebarPosition === Position.LEFT) {\n\t\t\tthis.parts.activitybar.getContainer().style.right = '';\n\t\t\tposition(activitybarContainer, this.titlebarHeight, undefined, 0, 0);\n\t\t} else {\n\t\t\tthis.parts.activitybar.getContainer().style.left = '';\n\t\t\tposition(activitybarContainer, this.titlebarHeight, 0, 0, undefined);\n\t\t}\n\t\tif (isActivityBarHidden) {\n\t\t\thide(activitybarContainer);\n\t\t} else {\n\t\t\tshow(activitybarContainer);\n\t\t}\n\n\t\t// Sidebar Part\n\t\tconst sidebarContainer = this.parts.sidebar.getContainer();\n\t\tsize(sidebarContainer, sidebarSize.width, sidebarSize.height);\n\t\tconst editorAndPanelWidth = editorSize.width + (panelPosition === Position.RIGHT ? panelWidth : 0);\n\t\tif (sidebarPosition === Position.LEFT) {\n\t\t\tposition(sidebarContainer, this.titlebarHeight, editorAndPanelWidth, this.statusbarHeight, activityBarSize.width);\n\t\t} else {\n\t\t\tposition(sidebarContainer, this.titlebarHeight, activityBarSize.width, this.statusbarHeight, editorAndPanelWidth);\n\t\t}\n\n\t\t// Statusbar Part\n\t\tconst statusbarContainer = this.parts.statusbar.getContainer();\n\t\tposition(statusbarContainer, this.workbenchSize.height - this.statusbarHeight);\n\t\tif (isStatusbarHidden) {\n\t\t\thide(statusbarContainer);\n\t\t} else {\n\t\t\tshow(statusbarContainer);\n\t\t}\n\n\t\t// Sashes\n\t\tthis.sashXOne.layout();\n\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\tthis.sashXTwo.hide();\n\t\t\tthis.sashY.layout();\n\t\t\tthis.sashY.show();\n\t\t} else {\n\t\t\tthis.sashY.hide();\n\t\t\tthis.sashXTwo.layout();\n\t\t\tthis.sashXTwo.show();\n\t\t}\n\n\t\t// Propagate to Part Layouts\n\t\tthis.parts.titlebar.layout(this.workbenchSize.width, this.titlebarHeight, -1);\n\t\tthis.parts.editor.layout(editorSize.width, editorSize.height, -1);\n\t\tthis.parts.sidebar.layout(sidebarSize.width, sidebarSize.height, -1);\n\t\tthis.parts.panel.layout(panelDimension.width, panelDimension.height, -1);\n\t\tthis.parts.activitybar.layout(activityBarSize.width, activityBarSize.height, -1);\n\n\t\t// Propagate to Context View\n\t\tthis.contextViewService.layout();\n\t}\n\n\tgetVerticalSashTop(sash: Sash): number {\n\t\treturn this.titlebarHeight;\n\t}\n\n\tgetVerticalSashLeft(sash: Sash): number {\n\t\tlet sidebarPosition = this.layoutService.getSideBarPosition();\n\t\tif (sash === this.sashXOne) {\n\n\t\t\tif (sidebarPosition === Position.LEFT) {\n\t\t\t\treturn this.sidebarWidth + this.activitybarWidth;\n\t\t\t}\n\n\t\t\treturn this.workbenchSize.width - this.sidebarWidth - this.activitybarWidth;\n\t\t}\n\n\t\treturn this.workbenchSize.width - this.panelWidth - (sidebarPosition === Position.RIGHT ? this.sidebarWidth + this.activitybarWidth : 0);\n\t}\n\n\tgetVerticalSashHeight(sash: Sash): number {\n\t\tif (sash === this.sashXTwo && !this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.sidebarHeight;\n\t}\n\n\tgetHorizontalSashTop(sash: Sash): number {\n\t\tconst offset = 2; // Horizontal sash should be a bit lower than the editor area, thus add 2px #5524\n\t\treturn offset + (this.layoutService.isVisible(Parts.PANEL_PART) ? this.sidebarHeight - this.panelHeight + this.titlebarHeight : this.sidebarHeight + this.titlebarHeight);\n\t}\n\n\tgetHorizontalSashLeft(sash: Sash): number {\n\t\tif (this.layoutService.getSideBarPosition() === Position.RIGHT) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.sidebarWidth + this.activitybarWidth;\n\t}\n\n\tgetHorizontalSashWidth(sash: Sash): number {\n\t\treturn this.panelWidth;\n\t}\n\n\tisPanelMaximized(): boolean {\n\t\treturn this.panelMaximized;\n\t}\n\n\tresizePart(part: Parts, sizeChange: number): void {\n\t\tconst panelPosition = this.layoutService.getPanelPosition();\n\t\tconst sizeChangePxWidth = this.workbenchSize.width * (sizeChange / 100);\n\t\tconst sizeChangePxHeight = this.workbenchSize.height * (sizeChange / 100);\n\n\t\tlet doLayout = false;\n\t\tswitch (part) {\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\tthis.sidebarWidth = this.sidebarWidth + sizeChangePxWidth; // Sidebar can not become smaller than MIN_PART_WIDTH\n\n\t\t\t\tif (this.workbenchSize.width - this.sidebarWidth < this.parts.editor.minimumWidth) {\n\t\t\t\t\tthis.sidebarWidth = this.workbenchSize.width - this.parts.editor.minimumWidth;\n\t\t\t\t}\n\n\t\t\t\tdoLayout = true;\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\t\t\tthis.panelHeight = this.panelHeight + sizeChangePxHeight;\n\t\t\t\t} else if (panelPosition === Position.RIGHT) {\n\t\t\t\t\tthis.panelWidth = this.panelWidth + sizeChangePxWidth;\n\t\t\t\t}\n\n\t\t\t\tdoLayout = true;\n\t\t\t\tbreak;\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\t// If we have one editor we can cheat and resize sidebar with the negative delta\n\t\t\t\t// If the sidebar is not visible and panel is, resize panel main axis with negative Delta\n\t\t\t\tif (this.editorGroupService.count === 1) {\n\t\t\t\t\tif (this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\t\t\t\tthis.sidebarWidth = this.sidebarWidth - sizeChangePxWidth;\n\t\t\t\t\t\tdoLayout = true;\n\t\t\t\t\t} else if (this.layoutService.isVisible(Parts.PANEL_PART)) {\n\t\t\t\t\t\tif (panelPosition === Position.BOTTOM) {\n\t\t\t\t\t\t\tthis.panelHeight = this.panelHeight - sizeChangePxHeight;\n\t\t\t\t\t\t} else if (panelPosition === Position.RIGHT) {\n\t\t\t\t\t\t\tthis.panelWidth = this.panelWidth - sizeChangePxWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdoLayout = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst activeGroup = this.editorGroupService.activeGroup;\n\n\t\t\t\t\tconst activeGroupSize = this.editorGroupService.getSize(activeGroup);\n\t\t\t\t\tthis.editorGroupService.setSize(activeGroup, activeGroupSize + sizeChangePxWidth);\n\t\t\t\t}\n\t\t}\n\n\t\tif (doLayout) {\n\t\t\tthis.layout();\n\t\t}\n\t}\n}\n"]}]}