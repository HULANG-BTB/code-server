{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageSelector.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageSelector.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glob_1 = require(\"vs/base/common/glob\");\nfunction score(selector, candidateUri, candidateLanguage, candidateIsSynchronized) {\n    if (Array.isArray(selector)) {\n        // array -> take max individual value\n        var ret = 0;\n        for (var _i = 0, selector_1 = selector; _i < selector_1.length; _i++) {\n            var filter = selector_1[_i];\n            var value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n            if (value === 10) {\n                return value; // already at the highest\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n    }\n    else if (typeof selector === 'string') {\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n        // short-hand notion, desugars to\n        // 'fooLang' -> { language: 'fooLang'}\n        // '*' -> { language: '*' }\n        if (selector === '*') {\n            return 5;\n        }\n        else if (selector === candidateLanguage) {\n            return 10;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (selector) {\n        // filter -> select accordingly, use defaults for scheme\n        var language = selector.language, pattern = selector.pattern, scheme = selector.scheme, hasAccessToAllModels = selector.hasAccessToAllModels;\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n        var ret = 0;\n        if (scheme) {\n            if (scheme === candidateUri.scheme) {\n                ret = 10;\n            }\n            else if (scheme === '*') {\n                ret = 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (language) {\n            if (language === candidateLanguage) {\n                ret = 10;\n            }\n            else if (language === '*') {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (pattern) {\n            if (pattern === candidateUri.fsPath || glob_1.match(pattern, candidateUri.fsPath)) {\n                ret = 10;\n            }\n            else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n    else {\n        return 0;\n    }\n}\nexports.score = score;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageSelector.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/languageSelector.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,4CAAkF;AAgBlF,SAAgB,KAAK,CAAC,QAAsC,EAAE,YAAiB,EAAE,iBAAyB,EAAE,uBAAgC;IAE3I,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC5B,qCAAqC;QACrC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAqB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA1B,IAAM,MAAM,iBAAA;YAChB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,YAAY,EAAE,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;YACtF,IAAI,KAAK,KAAK,EAAE,EAAE;gBACjB,OAAO,KAAK,CAAC,CAAC,yBAAyB;aACvC;YACD,IAAI,KAAK,GAAG,GAAG,EAAE;gBAChB,GAAG,GAAG,KAAK,CAAC;aACZ;SACD;QACD,OAAO,GAAG,CAAC;KAEX;SAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAExC,IAAI,CAAC,uBAAuB,EAAE;YAC7B,OAAO,CAAC,CAAC;SACT;QAED,iCAAiC;QACjC,sCAAsC;QACtC,2BAA2B;QAC3B,IAAI,QAAQ,KAAK,GAAG,EAAE;YACrB,OAAO,CAAC,CAAC;SACT;aAAM,IAAI,QAAQ,KAAK,iBAAiB,EAAE;YAC1C,OAAO,EAAE,CAAC;SACV;aAAM;YACN,OAAO,CAAC,CAAC;SACT;KAED;SAAM,IAAI,QAAQ,EAAE;QACpB,wDAAwD;QAChD,IAAA,4BAAQ,EAAE,0BAAO,EAAE,wBAAM,EAAE,oDAAoB,CAAc;QAErE,IAAI,CAAC,uBAAuB,IAAI,CAAC,oBAAoB,EAAE;YACtD,OAAO,CAAC,CAAC;SACT;QAED,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,IAAI,MAAM,EAAE;YACX,IAAI,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;gBACnC,GAAG,GAAG,EAAE,CAAC;aACT;iBAAM,IAAI,MAAM,KAAK,GAAG,EAAE;gBAC1B,GAAG,GAAG,CAAC,CAAC;aACR;iBAAM;gBACN,OAAO,CAAC,CAAC;aACT;SACD;QAED,IAAI,QAAQ,EAAE;YACb,IAAI,QAAQ,KAAK,iBAAiB,EAAE;gBACnC,GAAG,GAAG,EAAE,CAAC;aACT;iBAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;gBAC5B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;aACvB;iBAAM;gBACN,OAAO,CAAC,CAAC;aACT;SACD;QAED,IAAI,OAAO,EAAE;YACZ,IAAI,OAAO,KAAK,YAAY,CAAC,MAAM,IAAI,YAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE;gBACtF,GAAG,GAAG,EAAE,CAAC;aACT;iBAAM;gBACN,OAAO,CAAC,CAAC;aACT;SACD;QAED,OAAO,GAAG,CAAC;KAEX;SAAM;QACN,OAAO,CAAC,CAAC;KACT;AACF,CAAC;AA5ED,sBA4EC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRelativePattern, match as matchGlobPattern } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri'; // TODO@Alex\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\t/**\n\t * This provider is implemented in the UI thread.\n\t */\n\thasAccessToAllModels?: boolean;\n\texclusive?: boolean;\n}\n\nexport type LanguageSelector = string | LanguageFilter | Array<string | LanguageFilter>;\n\nexport function score(selector: LanguageSelector | undefined, candidateUri: URI, candidateLanguage: string, candidateIsSynchronized: boolean): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// array -> take max individual value\n\t\tlet ret = 0;\n\t\tfor (const filter of selector) {\n\t\t\tconst value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n\t\t\tif (value === 10) {\n\t\t\t\treturn value; // already at the highest\n\t\t\t}\n\t\t\tif (value > ret) {\n\t\t\t\tret = value;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t} else if (typeof selector === 'string') {\n\n\t\tif (!candidateIsSynchronized) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// short-hand notion, desugars to\n\t\t// 'fooLang' -> { language: 'fooLang'}\n\t\t// '*' -> { language: '*' }\n\t\tif (selector === '*') {\n\t\t\treturn 5;\n\t\t} else if (selector === candidateLanguage) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t} else if (selector) {\n\t\t// filter -> select accordingly, use defaults for scheme\n\t\tconst { language, pattern, scheme, hasAccessToAllModels } = selector;\n\n\t\tif (!candidateIsSynchronized && !hasAccessToAllModels) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet ret = 0;\n\n\t\tif (scheme) {\n\t\t\tif (scheme === candidateUri.scheme) {\n\t\t\t\tret = 10;\n\t\t\t} else if (scheme === '*') {\n\t\t\t\tret = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (language) {\n\t\t\tif (language === candidateLanguage) {\n\t\t\t\tret = 10;\n\t\t\t} else if (language === '*') {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (pattern) {\n\t\t\tif (pattern === candidateUri.fsPath || matchGlobPattern(pattern, candidateUri.fsPath)) {\n\t\t\t\tret = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n"]}]}