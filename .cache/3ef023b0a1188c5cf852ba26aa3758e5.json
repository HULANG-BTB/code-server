{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadTask.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadTask.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar uuid_1 = require(\"vs/base/common/uuid\");\nvar Objects = require(\"vs/base/common/objects\");\nvar Types = require(\"vs/base/common/types\");\nvar Platform = require(\"vs/base/common/platform\");\nvar collections_1 = require(\"vs/base/common/collections\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar tasks_1 = require(\"vs/workbench/contrib/tasks/common/tasks\");\nvar taskService_1 = require(\"vs/workbench/contrib/tasks/common/taskService\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar configurationResolver_1 = require(\"vs/workbench/services/configurationResolver/common/configurationResolver\");\nvar TaskExecutionDTO;\n(function (TaskExecutionDTO) {\n    function from(value) {\n        return {\n            id: value.id,\n            task: TaskDTO.from(value.task)\n        };\n    }\n    TaskExecutionDTO.from = from;\n})(TaskExecutionDTO || (TaskExecutionDTO = {}));\nvar TaskProcessStartedDTO;\n(function (TaskProcessStartedDTO) {\n    function from(value, processId) {\n        return {\n            id: value.id,\n            processId: processId\n        };\n    }\n    TaskProcessStartedDTO.from = from;\n})(TaskProcessStartedDTO || (TaskProcessStartedDTO = {}));\nvar TaskProcessEndedDTO;\n(function (TaskProcessEndedDTO) {\n    function from(value, exitCode) {\n        return {\n            id: value.id,\n            exitCode: exitCode\n        };\n    }\n    TaskProcessEndedDTO.from = from;\n})(TaskProcessEndedDTO || (TaskProcessEndedDTO = {}));\nvar TaskDefinitionDTO;\n(function (TaskDefinitionDTO) {\n    function from(value) {\n        var result = Objects.assign(Object.create(null), value);\n        delete result._key;\n        return result;\n    }\n    TaskDefinitionDTO.from = from;\n    function to(value, executeOnly) {\n        var result = tasks_1.TaskDefinition.createTaskIdentifier(value, console);\n        if (result === undefined && executeOnly) {\n            result = {\n                _key: uuid_1.generateUuid(),\n                type: '$executeOnly'\n            };\n        }\n        return result;\n    }\n    TaskDefinitionDTO.to = to;\n})(TaskDefinitionDTO || (TaskDefinitionDTO = {}));\nvar TaskPresentationOptionsDTO;\n(function (TaskPresentationOptionsDTO) {\n    function from(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return Objects.assign(Object.create(null), value);\n    }\n    TaskPresentationOptionsDTO.from = from;\n    function to(value) {\n        if (value === undefined || value === null) {\n            return tasks_1.PresentationOptions.defaults;\n        }\n        return Objects.assign(Object.create(null), tasks_1.PresentationOptions.defaults, value);\n    }\n    TaskPresentationOptionsDTO.to = to;\n})(TaskPresentationOptionsDTO || (TaskPresentationOptionsDTO = {}));\nvar RunOptionsDTO;\n(function (RunOptionsDTO) {\n    function from(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return Objects.assign(Object.create(null), value);\n    }\n    RunOptionsDTO.from = from;\n    function to(value) {\n        if (value === undefined || value === null) {\n            return tasks_1.RunOptions.defaults;\n        }\n        return Objects.assign(Object.create(null), tasks_1.RunOptions.defaults, value);\n    }\n    RunOptionsDTO.to = to;\n})(RunOptionsDTO || (RunOptionsDTO = {}));\nvar ProcessExecutionOptionsDTO;\n(function (ProcessExecutionOptionsDTO) {\n    function from(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return {\n            cwd: value.cwd,\n            env: value.env\n        };\n    }\n    ProcessExecutionOptionsDTO.from = from;\n    function to(value) {\n        if (value === undefined || value === null) {\n            return tasks_1.CommandOptions.defaults;\n        }\n        return {\n            cwd: value.cwd || tasks_1.CommandOptions.defaults.cwd,\n            env: value.env\n        };\n    }\n    ProcessExecutionOptionsDTO.to = to;\n})(ProcessExecutionOptionsDTO || (ProcessExecutionOptionsDTO = {}));\nvar ProcessExecutionDTO;\n(function (ProcessExecutionDTO) {\n    function is(value) {\n        var candidate = value;\n        return candidate && !!candidate.process;\n    }\n    ProcessExecutionDTO.is = is;\n    function from(value) {\n        var process = Types.isString(value.name) ? value.name : value.name.value;\n        var args = value.args ? value.args.map(function (value) { return Types.isString(value) ? value : value.value; }) : [];\n        var result = {\n            process: process,\n            args: args\n        };\n        if (value.options) {\n            result.options = ProcessExecutionOptionsDTO.from(value.options);\n        }\n        return result;\n    }\n    ProcessExecutionDTO.from = from;\n    function to(value) {\n        var result = {\n            runtime: tasks_1.RuntimeType.Process,\n            name: value.process,\n            args: value.args,\n            presentation: undefined\n        };\n        result.options = ProcessExecutionOptionsDTO.to(value.options);\n        return result;\n    }\n    ProcessExecutionDTO.to = to;\n})(ProcessExecutionDTO || (ProcessExecutionDTO = {}));\nvar ShellExecutionOptionsDTO;\n(function (ShellExecutionOptionsDTO) {\n    function from(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        var result = {\n            cwd: value.cwd || tasks_1.CommandOptions.defaults.cwd,\n            env: value.env\n        };\n        if (value.shell) {\n            result.executable = value.shell.executable;\n            result.shellArgs = value.shell.args;\n            result.shellQuoting = value.shell.quoting;\n        }\n        return result;\n    }\n    ShellExecutionOptionsDTO.from = from;\n    function to(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        var result = {\n            cwd: value.cwd,\n            env: value.env\n        };\n        if (value.executable) {\n            result.shell = {\n                executable: value.executable\n            };\n            if (value.shellArgs) {\n                result.shell.args = value.shellArgs;\n            }\n            if (value.shellQuoting) {\n                result.shell.quoting = value.shellQuoting;\n            }\n        }\n        return result;\n    }\n    ShellExecutionOptionsDTO.to = to;\n})(ShellExecutionOptionsDTO || (ShellExecutionOptionsDTO = {}));\nvar ShellExecutionDTO;\n(function (ShellExecutionDTO) {\n    function is(value) {\n        var candidate = value;\n        return candidate && (!!candidate.commandLine || !!candidate.command);\n    }\n    ShellExecutionDTO.is = is;\n    function from(value) {\n        var result = {};\n        if (value.name && Types.isString(value.name) && (value.args === undefined || value.args === null || value.args.length === 0)) {\n            result.commandLine = value.name;\n        }\n        else {\n            result.command = value.name;\n            result.args = value.args;\n        }\n        if (value.options) {\n            result.options = ShellExecutionOptionsDTO.from(value.options);\n        }\n        return result;\n    }\n    ShellExecutionDTO.from = from;\n    function to(value) {\n        var result = {\n            runtime: tasks_1.RuntimeType.Shell,\n            name: value.commandLine ? value.commandLine : value.command,\n            args: value.args,\n            presentation: undefined\n        };\n        if (value.options) {\n            result.options = ShellExecutionOptionsDTO.to(value.options);\n        }\n        return result;\n    }\n    ShellExecutionDTO.to = to;\n})(ShellExecutionDTO || (ShellExecutionDTO = {}));\nvar CustomExecutionDTO;\n(function (CustomExecutionDTO) {\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.customExecution === 'customExecution';\n    }\n    CustomExecutionDTO.is = is;\n    function from(value) {\n        return {\n            customExecution: 'customExecution'\n        };\n    }\n    CustomExecutionDTO.from = from;\n    function to(value) {\n        return {\n            runtime: tasks_1.RuntimeType.CustomExecution,\n            presentation: undefined\n        };\n    }\n    CustomExecutionDTO.to = to;\n})(CustomExecutionDTO || (CustomExecutionDTO = {}));\nvar TaskSourceDTO;\n(function (TaskSourceDTO) {\n    function from(value) {\n        var result = {\n            label: value.label\n        };\n        if (value.kind === tasks_1.TaskSourceKind.Extension) {\n            result.extensionId = value.extension;\n            if (value.workspaceFolder) {\n                result.scope = value.workspaceFolder.uri;\n            }\n            else {\n                result.scope = value.scope;\n            }\n        }\n        else if (value.kind === tasks_1.TaskSourceKind.Workspace) {\n            result.extensionId = '$core';\n            result.scope = value.config.workspaceFolder.uri;\n        }\n        return result;\n    }\n    TaskSourceDTO.from = from;\n    function to(value, workspace) {\n        var scope;\n        var workspaceFolder;\n        if ((value.scope === undefined) || ((typeof value.scope === 'number') && (value.scope !== tasks_1.TaskScope.Global))) {\n            if (workspace.getWorkspace().folders.length === 0) {\n                scope = tasks_1.TaskScope.Global;\n                workspaceFolder = undefined;\n            }\n            else {\n                scope = tasks_1.TaskScope.Folder;\n                workspaceFolder = workspace.getWorkspace().folders[0];\n            }\n        }\n        else if (typeof value.scope === 'number') {\n            scope = value.scope;\n        }\n        else {\n            scope = tasks_1.TaskScope.Folder;\n            workspaceFolder = Types.withNullAsUndefined(workspace.getWorkspaceFolder(uri_1.URI.revive(value.scope)));\n        }\n        var result = {\n            kind: tasks_1.TaskSourceKind.Extension,\n            label: value.label,\n            extension: value.extensionId,\n            scope: scope,\n            workspaceFolder: workspaceFolder\n        };\n        return result;\n    }\n    TaskSourceDTO.to = to;\n})(TaskSourceDTO || (TaskSourceDTO = {}));\nvar TaskHandleDTO;\n(function (TaskHandleDTO) {\n    function is(value) {\n        var candidate = value;\n        return candidate && Types.isString(candidate.id) && !!candidate.workspaceFolder;\n    }\n    TaskHandleDTO.is = is;\n})(TaskHandleDTO || (TaskHandleDTO = {}));\nvar TaskDTO;\n(function (TaskDTO) {\n    function from(task) {\n        if (task === undefined || task === null || (!tasks_1.CustomTask.is(task) && !tasks_1.ContributedTask.is(task))) {\n            return undefined;\n        }\n        var result = {\n            _id: task._id,\n            name: task.configurationProperties.name,\n            definition: TaskDefinitionDTO.from(task.getDefinition()),\n            source: TaskSourceDTO.from(task._source),\n            execution: undefined,\n            presentationOptions: task.command ? TaskPresentationOptionsDTO.from(task.command.presentation) : undefined,\n            isBackground: task.configurationProperties.isBackground,\n            problemMatchers: [],\n            hasDefinedMatchers: tasks_1.ContributedTask.is(task) ? task.hasDefinedMatchers : false,\n            runOptions: RunOptionsDTO.from(task.runOptions),\n        };\n        if (task.configurationProperties.group) {\n            result.group = task.configurationProperties.group;\n        }\n        if (task.command) {\n            if (task.command.runtime === tasks_1.RuntimeType.Process) {\n                result.execution = ProcessExecutionDTO.from(task.command);\n            }\n            else if (task.command.runtime === tasks_1.RuntimeType.Shell) {\n                result.execution = ShellExecutionDTO.from(task.command);\n            }\n        }\n        if (task.configurationProperties.problemMatchers) {\n            for (var _i = 0, _a = task.configurationProperties.problemMatchers; _i < _a.length; _i++) {\n                var matcher = _a[_i];\n                if (Types.isString(matcher)) {\n                    result.problemMatchers.push(matcher);\n                }\n            }\n        }\n        return result;\n    }\n    TaskDTO.from = from;\n    function to(task, workspace, executeOnly) {\n        if (!task || (typeof task.name !== 'string')) {\n            return undefined;\n        }\n        var command;\n        if (task.execution) {\n            if (ShellExecutionDTO.is(task.execution)) {\n                command = ShellExecutionDTO.to(task.execution);\n            }\n            else if (ProcessExecutionDTO.is(task.execution)) {\n                command = ProcessExecutionDTO.to(task.execution);\n            }\n            else if (CustomExecutionDTO.is(task.execution)) {\n                command = CustomExecutionDTO.to(task.execution);\n            }\n        }\n        if (!command) {\n            return undefined;\n        }\n        command.presentation = TaskPresentationOptionsDTO.to(task.presentationOptions);\n        var source = TaskSourceDTO.to(task.source, workspace);\n        var label = nls.localize('task.label', '{0}: {1}', source.label, task.name);\n        var definition = TaskDefinitionDTO.to(task.definition, executeOnly);\n        var id = task.source.extensionId + \".\" + definition._key;\n        var result = new tasks_1.ContributedTask(id, // uuidMap.getUUID(identifier)\n        source, label, definition.type, definition, command, task.hasDefinedMatchers, RunOptionsDTO.to(task.runOptions), {\n            name: task.name,\n            identifier: label,\n            group: task.group,\n            isBackground: !!task.isBackground,\n            problemMatchers: task.problemMatchers.slice(),\n        });\n        return result;\n    }\n    TaskDTO.to = to;\n})(TaskDTO || (TaskDTO = {}));\nvar TaskFilterDTO;\n(function (TaskFilterDTO) {\n    function from(value) {\n        return value;\n    }\n    TaskFilterDTO.from = from;\n    function to(value) {\n        return value;\n    }\n    TaskFilterDTO.to = to;\n})(TaskFilterDTO || (TaskFilterDTO = {}));\nvar MainThreadTask = /** @class */ (function () {\n    function MainThreadTask(extHostContext, _taskService, _workspaceContextServer, _configurationResolverService) {\n        var _this = this;\n        this._taskService = _taskService;\n        this._workspaceContextServer = _workspaceContextServer;\n        this._configurationResolverService = _configurationResolverService;\n        this._proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostTask);\n        this._providers = new Map();\n        this._taskService.onDidStateChange(function (event) {\n            var task = event.__task;\n            if (event.kind === tasks_1.TaskEventKind.Start) {\n                _this._proxy.$onDidStartTask(TaskExecutionDTO.from(task.getTaskExecution()), event.terminalId);\n            }\n            else if (event.kind === tasks_1.TaskEventKind.ProcessStarted) {\n                _this._proxy.$onDidStartTaskProcess(TaskProcessStartedDTO.from(task.getTaskExecution(), event.processId));\n            }\n            else if (event.kind === tasks_1.TaskEventKind.ProcessEnded) {\n                _this._proxy.$onDidEndTaskProcess(TaskProcessEndedDTO.from(task.getTaskExecution(), event.exitCode));\n            }\n            else if (event.kind === tasks_1.TaskEventKind.End) {\n                _this._proxy.$OnDidEndTask(TaskExecutionDTO.from(task.getTaskExecution()));\n            }\n        });\n    }\n    MainThreadTask.prototype.dispose = function () {\n        this._providers.forEach(function (value) {\n            value.disposable.dispose();\n        });\n        this._providers.clear();\n    };\n    MainThreadTask.prototype.$createTaskId = function (taskDTO) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var task = TaskDTO.to(taskDTO, _this._workspaceContextServer, true);\n            if (task) {\n                resolve(task._id);\n            }\n            else {\n                reject(new Error('Task could not be created from DTO'));\n            }\n        });\n    };\n    MainThreadTask.prototype.$registerTaskProvider = function (handle) {\n        var _this = this;\n        var provider = {\n            provideTasks: function (validTypes) {\n                return Promise.resolve(_this._proxy.$provideTasks(handle, validTypes)).then(function (value) {\n                    var tasks = [];\n                    for (var _i = 0, _a = value.tasks; _i < _a.length; _i++) {\n                        var dto = _a[_i];\n                        var task = TaskDTO.to(dto, _this._workspaceContextServer, true);\n                        if (task) {\n                            tasks.push(task);\n                        }\n                        else {\n                            console.error(\"Task System: can not convert task: \" + JSON.stringify(dto.definition, undefined, 0) + \". Task will be dropped\");\n                        }\n                    }\n                    return {\n                        tasks: tasks,\n                        extension: value.extension\n                    };\n                });\n            }\n        };\n        var disposable = this._taskService.registerTaskProvider(provider);\n        this._providers.set(handle, { disposable: disposable, provider: provider });\n        return Promise.resolve(undefined);\n    };\n    MainThreadTask.prototype.$unregisterTaskProvider = function (handle) {\n        var provider = this._providers.get(handle);\n        if (provider) {\n            provider.disposable.dispose();\n            this._providers.delete(handle);\n        }\n        return Promise.resolve(undefined);\n    };\n    MainThreadTask.prototype.$fetchTasks = function (filter) {\n        return this._taskService.tasks(TaskFilterDTO.to(filter)).then(function (tasks) {\n            var result = [];\n            for (var _i = 0, tasks_2 = tasks; _i < tasks_2.length; _i++) {\n                var task = tasks_2[_i];\n                var item = TaskDTO.from(task);\n                if (item) {\n                    result.push(item);\n                }\n            }\n            return result;\n        });\n    };\n    MainThreadTask.prototype.$executeTask = function (value) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (TaskHandleDTO.is(value)) {\n                var workspaceFolder = _this._workspaceContextServer.getWorkspaceFolder(uri_1.URI.revive(value.workspaceFolder));\n                if (workspaceFolder) {\n                    _this._taskService.getTask(workspaceFolder, value.id, true).then(function (task) {\n                        _this._taskService.run(task).then(undefined, function (reason) {\n                            // eat the error, it has already been surfaced to the user and we don't care about it here\n                        });\n                        var result = {\n                            id: value.id,\n                            task: TaskDTO.from(task)\n                        };\n                        resolve(result);\n                    }, function (_error) {\n                        reject(new Error('Task not found'));\n                    });\n                }\n                else {\n                    reject(new Error('No workspace folder'));\n                }\n            }\n            else {\n                var task = TaskDTO.to(value, _this._workspaceContextServer, true);\n                _this._taskService.run(task).then(undefined, function (reason) {\n                    // eat the error, it has already been surfaced to the user and we don't care about it here\n                });\n                var result = {\n                    id: task._id,\n                    task: TaskDTO.from(task)\n                };\n                resolve(result);\n            }\n        });\n    };\n    MainThreadTask.prototype.$customExecutionComplete = function (id, result) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._taskService.getActiveTasks().then(function (tasks) {\n                for (var _i = 0, tasks_3 = tasks; _i < tasks_3.length; _i++) {\n                    var task = tasks_3[_i];\n                    if (id === task._id) {\n                        _this._taskService.extensionCallbackTaskComplete(task, result).then(function (value) {\n                            resolve(undefined);\n                        }, function (error) {\n                            reject(error);\n                        });\n                        return;\n                    }\n                }\n                reject(new Error('Task to mark as complete not found'));\n            });\n        });\n    };\n    MainThreadTask.prototype.$terminateTask = function (id) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._taskService.getActiveTasks().then(function (tasks) {\n                for (var _i = 0, tasks_4 = tasks; _i < tasks_4.length; _i++) {\n                    var task = tasks_4[_i];\n                    if (id === task._id) {\n                        _this._taskService.terminate(task).then(function (value) {\n                            resolve(undefined);\n                        }, function (error) {\n                            reject(undefined);\n                        });\n                        return;\n                    }\n                }\n                reject(new Error('Task to terminate not found'));\n            });\n        });\n    };\n    MainThreadTask.prototype.$registerTaskSystem = function (key, info) {\n        var _this = this;\n        var platform;\n        switch (info.platform) {\n            case 'win32':\n                platform = Platform.Platform.Windows;\n                break;\n            case 'darwin':\n                platform = Platform.Platform.Mac;\n                break;\n            case 'linux':\n                platform = Platform.Platform.Linux;\n                break;\n            default:\n                platform = Platform.platform;\n        }\n        this._taskService.registerTaskSystem(key, {\n            platform: platform,\n            uriProvider: function (path) {\n                return uri_1.URI.parse(info.scheme + \"://\" + info.authority + path);\n            },\n            context: this._extHostContext,\n            resolveVariables: function (workspaceFolder, toResolve) {\n                var vars = [];\n                toResolve.variables.forEach(function (item) { return vars.push(item); });\n                return Promise.resolve(_this._proxy.$resolveVariables(workspaceFolder.uri, { process: toResolve.process, variables: vars })).then(function (values) {\n                    var partiallyResolvedVars = new Array();\n                    collections_1.forEach(values.variables, function (entry) {\n                        partiallyResolvedVars.push(entry.value);\n                    });\n                    return new Promise(function (resolve, reject) {\n                        _this._configurationResolverService.resolveWithInteraction(workspaceFolder, partiallyResolvedVars, 'tasks').then(function (resolvedVars) {\n                            var result = {\n                                process: undefined,\n                                variables: new Map()\n                            };\n                            for (var i = 0; i < partiallyResolvedVars.length; i++) {\n                                var variableName = vars[i].substring(2, vars[i].length - 1);\n                                if (resolvedVars && values.variables[vars[i]] === vars[i]) {\n                                    result.variables.set(variableName, resolvedVars.get(variableName));\n                                }\n                                else {\n                                    result.variables.set(variableName, partiallyResolvedVars[i]);\n                                }\n                            }\n                            if (Types.isString(values.process)) {\n                                result.process = values.process;\n                            }\n                            resolve(result);\n                        }, function (reason) {\n                            reject(reason);\n                        });\n                    });\n                });\n            }\n        });\n    };\n    MainThreadTask = tslib_1.__decorate([\n        extHostCustomers_1.extHostNamedCustomer(extHost_protocol_1.MainContext.MainThreadTask),\n        tslib_1.__param(1, taskService_1.ITaskService),\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(3, configurationResolver_1.IConfigurationResolverService)\n    ], MainThreadTask);\n    return MainThreadTask;\n}());\nexports.MainThreadTask = MainThreadTask;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadTask.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadTask.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as Objects from 'vs/base/common/objects';\nimport * as Types from 'vs/base/common/types';\nimport * as Platform from 'vs/base/common/platform';\nimport { IStringDictionary, forEach } from 'vs/base/common/collections';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nimport { IWorkspaceContextService, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nimport {\n\tContributedTask, KeyedTaskIdentifier, TaskExecution, Task, TaskEvent, TaskEventKind,\n\tPresentationOptions, CommandOptions, CommandConfiguration, RuntimeType, CustomTask, TaskScope, TaskSource,\n\tTaskSourceKind, ExtensionTaskSource, RunOptions, TaskSet, TaskDefinition\n} from 'vs/workbench/contrib/tasks/common/tasks';\n\n\nimport { ResolveSet, ResolvedVariables } from 'vs/workbench/contrib/tasks/common/taskSystem';\nimport { ITaskService, TaskFilter, ITaskProvider } from 'vs/workbench/contrib/tasks/common/taskService';\n\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { ExtHostContext, MainThreadTaskShape, ExtHostTaskShape, MainContext, IExtHostContext } from 'vs/workbench/api/common/extHost.protocol';\nimport {\n\tTaskDefinitionDTO, TaskExecutionDTO, ProcessExecutionOptionsDTO, TaskPresentationOptionsDTO,\n\tProcessExecutionDTO, ShellExecutionDTO, ShellExecutionOptionsDTO, CustomExecutionDTO, TaskDTO, TaskSourceDTO, TaskHandleDTO, TaskFilterDTO, TaskProcessStartedDTO, TaskProcessEndedDTO, TaskSystemInfoDTO,\n\tRunOptionsDTO\n} from 'vs/workbench/api/common/shared/tasks';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\n\nnamespace TaskExecutionDTO {\n\texport function from(value: TaskExecution): TaskExecutionDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\ttask: TaskDTO.from(value.task)\n\t\t};\n\t}\n}\n\nnamespace TaskProcessStartedDTO {\n\texport function from(value: TaskExecution, processId: number): TaskProcessStartedDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\tprocessId\n\t\t};\n\t}\n}\n\nnamespace TaskProcessEndedDTO {\n\texport function from(value: TaskExecution, exitCode: number): TaskProcessEndedDTO {\n\t\treturn {\n\t\t\tid: value.id,\n\t\t\texitCode\n\t\t};\n\t}\n}\n\nnamespace TaskDefinitionDTO {\n\texport function from(value: KeyedTaskIdentifier): TaskDefinitionDTO {\n\t\tconst result = Objects.assign(Object.create(null), value);\n\t\tdelete result._key;\n\t\treturn result;\n\t}\n\texport function to(value: TaskDefinitionDTO, executeOnly: boolean): KeyedTaskIdentifier | undefined {\n\t\tlet result = TaskDefinition.createTaskIdentifier(value, console);\n\t\tif (result === undefined && executeOnly) {\n\t\t\tresult = {\n\t\t\t\t_key: generateUuid(),\n\t\t\t\ttype: '$executeOnly'\n\t\t\t};\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace TaskPresentationOptionsDTO {\n\texport function from(value: PresentationOptions | undefined): TaskPresentationOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), value);\n\t}\n\texport function to(value: TaskPresentationOptionsDTO | undefined): PresentationOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn PresentationOptions.defaults;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), PresentationOptions.defaults, value);\n\t}\n}\n\nnamespace RunOptionsDTO {\n\texport function from(value: RunOptions): RunOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), value);\n\t}\n\texport function to(value: RunOptionsDTO | undefined): RunOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn RunOptions.defaults;\n\t\t}\n\t\treturn Objects.assign(Object.create(null), RunOptions.defaults, value);\n\t}\n}\n\nnamespace ProcessExecutionOptionsDTO {\n\texport function from(value: CommandOptions): ProcessExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\tcwd: value.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t}\n\texport function to(value: ProcessExecutionOptionsDTO | undefined): CommandOptions {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn CommandOptions.defaults;\n\t\t}\n\t\treturn {\n\t\t\tcwd: value.cwd || CommandOptions.defaults.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t}\n}\n\nnamespace ProcessExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ProcessExecutionDTO {\n\t\tconst candidate = value as ProcessExecutionDTO;\n\t\treturn candidate && !!candidate.process;\n\t}\n\texport function from(value: CommandConfiguration): ProcessExecutionDTO {\n\t\tconst process: string = Types.isString(value.name) ? value.name : value.name!.value;\n\t\tconst args: string[] = value.args ? value.args.map(value => Types.isString(value) ? value : value.value) : [];\n\t\tconst result: ProcessExecutionDTO = {\n\t\t\tprocess: process,\n\t\t\targs: args\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ProcessExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ProcessExecutionDTO): CommandConfiguration {\n\t\tconst result: CommandConfiguration = {\n\t\t\truntime: RuntimeType.Process,\n\t\t\tname: value.process,\n\t\t\targs: value.args,\n\t\t\tpresentation: undefined\n\t\t};\n\t\tresult.options = ProcessExecutionOptionsDTO.to(value.options);\n\t\treturn result;\n\t}\n}\n\nnamespace ShellExecutionOptionsDTO {\n\texport function from(value: CommandOptions): ShellExecutionOptionsDTO | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: ShellExecutionOptionsDTO = {\n\t\t\tcwd: value.cwd || CommandOptions.defaults.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t\tif (value.shell) {\n\t\t\tresult.executable = value.shell.executable;\n\t\t\tresult.shellArgs = value.shell.args;\n\t\t\tresult.shellQuoting = value.shell.quoting;\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ShellExecutionOptionsDTO): CommandOptions | undefined {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: CommandOptions = {\n\t\t\tcwd: value.cwd,\n\t\t\tenv: value.env\n\t\t};\n\t\tif (value.executable) {\n\t\t\tresult.shell = {\n\t\t\t\texecutable: value.executable\n\t\t\t};\n\t\t\tif (value.shellArgs) {\n\t\t\t\tresult.shell.args = value.shellArgs;\n\t\t\t}\n\t\t\tif (value.shellQuoting) {\n\t\t\t\tresult.shell.quoting = value.shellQuoting;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace ShellExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is ShellExecutionDTO {\n\t\tconst candidate = value as ShellExecutionDTO;\n\t\treturn candidate && (!!candidate.commandLine || !!candidate.command);\n\t}\n\texport function from(value: CommandConfiguration): ShellExecutionDTO {\n\t\tconst result: ShellExecutionDTO = {};\n\t\tif (value.name && Types.isString(value.name) && (value.args === undefined || value.args === null || value.args.length === 0)) {\n\t\t\tresult.commandLine = value.name;\n\t\t} else {\n\t\t\tresult.command = value.name;\n\t\t\tresult.args = value.args;\n\t\t}\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.from(value.options);\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: ShellExecutionDTO): CommandConfiguration {\n\t\tconst result: CommandConfiguration = {\n\t\t\truntime: RuntimeType.Shell,\n\t\t\tname: value.commandLine ? value.commandLine : value.command,\n\t\t\targs: value.args,\n\t\t\tpresentation: undefined\n\t\t};\n\t\tif (value.options) {\n\t\t\tresult.options = ShellExecutionOptionsDTO.to(value.options);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace CustomExecutionDTO {\n\texport function is(value: ShellExecutionDTO | ProcessExecutionDTO | CustomExecutionDTO): value is CustomExecutionDTO {\n\t\tconst candidate = value as CustomExecutionDTO;\n\t\treturn candidate && candidate.customExecution === 'customExecution';\n\t}\n\n\texport function from(value: CommandConfiguration): CustomExecutionDTO {\n\t\treturn {\n\t\t\tcustomExecution: 'customExecution'\n\t\t};\n\t}\n\n\texport function to(value: CustomExecutionDTO): CommandConfiguration {\n\t\treturn {\n\t\t\truntime: RuntimeType.CustomExecution,\n\t\t\tpresentation: undefined\n\t\t};\n\t}\n}\n\nnamespace TaskSourceDTO {\n\texport function from(value: TaskSource): TaskSourceDTO {\n\t\tconst result: TaskSourceDTO = {\n\t\t\tlabel: value.label\n\t\t};\n\t\tif (value.kind === TaskSourceKind.Extension) {\n\t\t\tresult.extensionId = value.extension;\n\t\t\tif (value.workspaceFolder) {\n\t\t\t\tresult.scope = value.workspaceFolder.uri;\n\t\t\t} else {\n\t\t\t\tresult.scope = value.scope;\n\t\t\t}\n\t\t} else if (value.kind === TaskSourceKind.Workspace) {\n\t\t\tresult.extensionId = '$core';\n\t\t\tresult.scope = value.config.workspaceFolder.uri;\n\t\t}\n\t\treturn result;\n\t}\n\texport function to(value: TaskSourceDTO, workspace: IWorkspaceContextService): ExtensionTaskSource {\n\t\tlet scope: TaskScope;\n\t\tlet workspaceFolder: IWorkspaceFolder | undefined;\n\t\tif ((value.scope === undefined) || ((typeof value.scope === 'number') && (value.scope !== TaskScope.Global))) {\n\t\t\tif (workspace.getWorkspace().folders.length === 0) {\n\t\t\t\tscope = TaskScope.Global;\n\t\t\t\tworkspaceFolder = undefined;\n\t\t\t} else {\n\t\t\t\tscope = TaskScope.Folder;\n\t\t\t\tworkspaceFolder = workspace.getWorkspace().folders[0];\n\t\t\t}\n\t\t} else if (typeof value.scope === 'number') {\n\t\t\tscope = value.scope;\n\t\t} else {\n\t\t\tscope = TaskScope.Folder;\n\t\t\tworkspaceFolder = Types.withNullAsUndefined(workspace.getWorkspaceFolder(URI.revive(value.scope)));\n\t\t}\n\t\tconst result: ExtensionTaskSource = {\n\t\t\tkind: TaskSourceKind.Extension,\n\t\t\tlabel: value.label,\n\t\t\textension: value.extensionId,\n\t\t\tscope,\n\t\t\tworkspaceFolder\n\t\t};\n\t\treturn result;\n\t}\n}\n\nnamespace TaskHandleDTO {\n\texport function is(value: any): value is TaskHandleDTO {\n\t\tconst candidate: TaskHandleDTO = value;\n\t\treturn candidate && Types.isString(candidate.id) && !!candidate.workspaceFolder;\n\t}\n}\n\nnamespace TaskDTO {\n\texport function from(task: Task): TaskDTO | undefined {\n\t\tif (task === undefined || task === null || (!CustomTask.is(task) && !ContributedTask.is(task))) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result: TaskDTO = {\n\t\t\t_id: task._id,\n\t\t\tname: task.configurationProperties.name,\n\t\t\tdefinition: TaskDefinitionDTO.from(task.getDefinition()),\n\t\t\tsource: TaskSourceDTO.from(task._source),\n\t\t\texecution: undefined,\n\t\t\tpresentationOptions: task.command ? TaskPresentationOptionsDTO.from(task.command.presentation) : undefined,\n\t\t\tisBackground: task.configurationProperties.isBackground,\n\t\t\tproblemMatchers: [],\n\t\t\thasDefinedMatchers: ContributedTask.is(task) ? task.hasDefinedMatchers : false,\n\t\t\trunOptions: RunOptionsDTO.from(task.runOptions),\n\t\t};\n\t\tif (task.configurationProperties.group) {\n\t\t\tresult.group = task.configurationProperties.group;\n\t\t}\n\t\tif (task.command) {\n\t\t\tif (task.command.runtime === RuntimeType.Process) {\n\t\t\t\tresult.execution = ProcessExecutionDTO.from(task.command);\n\t\t\t} else if (task.command.runtime === RuntimeType.Shell) {\n\t\t\t\tresult.execution = ShellExecutionDTO.from(task.command);\n\t\t\t}\n\t\t}\n\t\tif (task.configurationProperties.problemMatchers) {\n\t\t\tfor (let matcher of task.configurationProperties.problemMatchers) {\n\t\t\t\tif (Types.isString(matcher)) {\n\t\t\t\t\tresult.problemMatchers.push(matcher);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\texport function to(task: TaskDTO | undefined, workspace: IWorkspaceContextService, executeOnly: boolean): ContributedTask | undefined {\n\t\tif (!task || (typeof task.name !== 'string')) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet command: CommandConfiguration | undefined;\n\t\tif (task.execution) {\n\t\t\tif (ShellExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = ShellExecutionDTO.to(task.execution);\n\t\t\t} else if (ProcessExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = ProcessExecutionDTO.to(task.execution);\n\t\t\t} else if (CustomExecutionDTO.is(task.execution)) {\n\t\t\t\tcommand = CustomExecutionDTO.to(task.execution);\n\t\t\t}\n\t\t}\n\n\t\tif (!command) {\n\t\t\treturn undefined;\n\t\t}\n\t\tcommand.presentation = TaskPresentationOptionsDTO.to(task.presentationOptions);\n\t\tconst source = TaskSourceDTO.to(task.source, workspace);\n\n\t\tconst label = nls.localize('task.label', '{0}: {1}', source.label, task.name);\n\t\tconst definition = TaskDefinitionDTO.to(task.definition, executeOnly)!;\n\t\tconst id = `${task.source.extensionId}.${definition._key}`;\n\t\tconst result: ContributedTask = new ContributedTask(\n\t\t\tid, // uuidMap.getUUID(identifier)\n\t\t\tsource,\n\t\t\tlabel,\n\t\t\tdefinition.type,\n\t\t\tdefinition,\n\t\t\tcommand,\n\t\t\ttask.hasDefinedMatchers,\n\t\t\tRunOptionsDTO.to(task.runOptions),\n\t\t\t{\n\t\t\t\tname: task.name,\n\t\t\t\tidentifier: label,\n\t\t\t\tgroup: task.group,\n\t\t\t\tisBackground: !!task.isBackground,\n\t\t\t\tproblemMatchers: task.problemMatchers.slice(),\n\t\t\t}\n\t\t);\n\t\treturn result;\n\t}\n}\n\nnamespace TaskFilterDTO {\n\texport function from(value: TaskFilter): TaskFilterDTO {\n\t\treturn value;\n\t}\n\texport function to(value: TaskFilterDTO | undefined): TaskFilter | undefined {\n\t\treturn value;\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadTask)\nexport class MainThreadTask implements MainThreadTaskShape {\n\n\tprivate readonly _extHostContext: IExtHostContext;\n\tprivate readonly _proxy: ExtHostTaskShape;\n\tprivate readonly _providers: Map<number, { disposable: IDisposable, provider: ITaskProvider }>;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITaskService private readonly _taskService: ITaskService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextServer: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _configurationResolverService: IConfigurationResolverService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTask);\n\t\tthis._providers = new Map();\n\t\tthis._taskService.onDidStateChange((event: TaskEvent) => {\n\t\t\tconst task = event.__task!;\n\t\t\tif (event.kind === TaskEventKind.Start) {\n\t\t\t\tthis._proxy.$onDidStartTask(TaskExecutionDTO.from(task.getTaskExecution()), event.terminalId!);\n\t\t\t} else if (event.kind === TaskEventKind.ProcessStarted) {\n\t\t\t\tthis._proxy.$onDidStartTaskProcess(TaskProcessStartedDTO.from(task.getTaskExecution(), event.processId!));\n\t\t\t} else if (event.kind === TaskEventKind.ProcessEnded) {\n\t\t\t\tthis._proxy.$onDidEndTaskProcess(TaskProcessEndedDTO.from(task.getTaskExecution(), event.exitCode!));\n\t\t\t} else if (event.kind === TaskEventKind.End) {\n\t\t\t\tthis._proxy.$OnDidEndTask(TaskExecutionDTO.from(task.getTaskExecution()));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._providers.forEach((value) => {\n\t\t\tvalue.disposable.dispose();\n\t\t});\n\t\tthis._providers.clear();\n\t}\n\n\t$createTaskId(taskDTO: TaskDTO): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet task = TaskDTO.to(taskDTO, this._workspaceContextServer, true);\n\t\t\tif (task) {\n\t\t\t\tresolve(task._id);\n\t\t\t} else {\n\t\t\t\treject(new Error('Task could not be created from DTO'));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic $registerTaskProvider(handle: number): Promise<void> {\n\t\tconst provider: ITaskProvider = {\n\t\t\tprovideTasks: (validTypes: IStringDictionary<boolean>) => {\n\t\t\t\treturn Promise.resolve(this._proxy.$provideTasks(handle, validTypes)).then((value) => {\n\t\t\t\t\tconst tasks: Task[] = [];\n\t\t\t\t\tfor (let dto of value.tasks) {\n\t\t\t\t\t\tconst task = TaskDTO.to(dto, this._workspaceContextServer, true);\n\t\t\t\t\t\tif (task) {\n\t\t\t\t\t\t\ttasks.push(task);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error(`Task System: can not convert task: ${JSON.stringify(dto.definition, undefined, 0)}. Task will be dropped`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttasks,\n\t\t\t\t\t\textension: value.extension\n\t\t\t\t\t} as TaskSet;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tconst disposable = this._taskService.registerTaskProvider(provider);\n\t\tthis._providers.set(handle, { disposable, provider });\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic $unregisterTaskProvider(handle: number): Promise<void> {\n\t\tconst provider = this._providers.get(handle);\n\t\tif (provider) {\n\t\t\tprovider.disposable.dispose();\n\t\t\tthis._providers.delete(handle);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tpublic $fetchTasks(filter?: TaskFilterDTO): Promise<TaskDTO[]> {\n\t\treturn this._taskService.tasks(TaskFilterDTO.to(filter)).then((tasks) => {\n\t\t\tconst result: TaskDTO[] = [];\n\t\t\tfor (let task of tasks) {\n\t\t\t\tconst item = TaskDTO.from(task);\n\t\t\t\tif (item) {\n\t\t\t\t\tresult.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic $executeTask(value: TaskHandleDTO | TaskDTO): Promise<TaskExecutionDTO> {\n\t\treturn new Promise<TaskExecutionDTO>((resolve, reject) => {\n\t\t\tif (TaskHandleDTO.is(value)) {\n\t\t\t\tconst workspaceFolder = this._workspaceContextServer.getWorkspaceFolder(URI.revive(value.workspaceFolder));\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\tthis._taskService.getTask(workspaceFolder, value.id, true).then((task: Task) => {\n\t\t\t\t\t\tthis._taskService.run(task).then(undefined, reason => {\n\t\t\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst result: TaskExecutionDTO = {\n\t\t\t\t\t\t\tid: value.id,\n\t\t\t\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}, (_error) => {\n\t\t\t\t\t\treject(new Error('Task not found'));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('No workspace folder'));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst task = TaskDTO.to(value, this._workspaceContextServer, true)!;\n\t\t\t\tthis._taskService.run(task).then(undefined, reason => {\n\t\t\t\t\t// eat the error, it has already been surfaced to the user and we don't care about it here\n\t\t\t\t});\n\t\t\t\tconst result: TaskExecutionDTO = {\n\t\t\t\t\tid: task._id,\n\t\t\t\t\ttask: TaskDTO.from(task)\n\t\t\t\t};\n\t\t\t\tresolve(result);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic $customExecutionComplete(id: string, result?: number): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis._taskService.getActiveTasks().then((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (id === task._id) {\n\t\t\t\t\t\tthis._taskService.extensionCallbackTaskComplete(task, result).then((value) => {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treject(new Error('Task to mark as complete not found'));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $terminateTask(id: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tthis._taskService.getActiveTasks().then((tasks) => {\n\t\t\t\tfor (let task of tasks) {\n\t\t\t\t\tif (id === task._id) {\n\t\t\t\t\t\tthis._taskService.terminate(task).then((value) => {\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\t\treject(undefined);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treject(new Error('Task to terminate not found'));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic $registerTaskSystem(key: string, info: TaskSystemInfoDTO): void {\n\t\tlet platform: Platform.Platform;\n\t\tswitch (info.platform) {\n\t\t\tcase 'win32':\n\t\t\t\tplatform = Platform.Platform.Windows;\n\t\t\t\tbreak;\n\t\t\tcase 'darwin':\n\t\t\t\tplatform = Platform.Platform.Mac;\n\t\t\t\tbreak;\n\t\t\tcase 'linux':\n\t\t\t\tplatform = Platform.Platform.Linux;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tplatform = Platform.platform;\n\t\t}\n\t\tthis._taskService.registerTaskSystem(key, {\n\t\t\tplatform: platform,\n\t\t\turiProvider: (path: string): URI => {\n\t\t\t\treturn URI.parse(`${info.scheme}://${info.authority}${path}`);\n\t\t\t},\n\t\t\tcontext: this._extHostContext,\n\t\t\tresolveVariables: (workspaceFolder: IWorkspaceFolder, toResolve: ResolveSet): Promise<ResolvedVariables> => {\n\t\t\t\tconst vars: string[] = [];\n\t\t\t\ttoResolve.variables.forEach(item => vars.push(item));\n\t\t\t\treturn Promise.resolve(this._proxy.$resolveVariables(workspaceFolder.uri, { process: toResolve.process, variables: vars })).then(values => {\n\t\t\t\t\tconst partiallyResolvedVars = new Array<string>();\n\t\t\t\t\tforEach(values.variables, (entry) => {\n\t\t\t\t\t\tpartiallyResolvedVars.push(entry.value);\n\t\t\t\t\t});\n\t\t\t\t\treturn new Promise<ResolvedVariables>((resolve, reject) => {\n\t\t\t\t\t\tthis._configurationResolverService.resolveWithInteraction(workspaceFolder, partiallyResolvedVars, 'tasks').then(resolvedVars => {\n\t\t\t\t\t\t\tconst result: ResolvedVariables = {\n\t\t\t\t\t\t\t\tprocess: undefined,\n\t\t\t\t\t\t\t\tvariables: new Map<string, string>()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor (let i = 0; i < partiallyResolvedVars.length; i++) {\n\t\t\t\t\t\t\t\tconst variableName = vars[i].substring(2, vars[i].length - 1);\n\t\t\t\t\t\t\t\tif (resolvedVars && values.variables[vars[i]] === vars[i]) {\n\t\t\t\t\t\t\t\t\tresult.variables.set(variableName, resolvedVars.get(variableName));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresult.variables.set(variableName, partiallyResolvedVars[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Types.isString(values.process)) {\n\t\t\t\t\t\t\t\tresult.process = values.process;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}, reason => {\n\t\t\t\t\t\t\treject(reason);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"]}]}