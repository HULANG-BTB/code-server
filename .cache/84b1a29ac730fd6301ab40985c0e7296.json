{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/statusbar/statusbarPart.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/statusbar/statusbarPart.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/statusbarpart\");\nvar nls = require(\"vs/nls\");\nvar errorMessage_1 = require(\"vs/base/common/errorMessage\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar octiconLabel_1 = require(\"vs/base/browser/ui/octiconLabel/octiconLabel\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar part_1 = require(\"vs/workbench/browser/part\");\nvar statusbar_1 = require(\"vs/workbench/browser/parts/statusbar/statusbar\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar statusbar_2 = require(\"vs/platform/statusbar/common/statusbar\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar color_1 = require(\"vs/base/common/color\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar StatusbarPart = /** @class */ (function (_super) {\n    tslib_1.__extends(StatusbarPart, _super);\n    function StatusbarPart(instantiationService, themeService, contextService, storageService, layoutService) {\n        var _this = _super.call(this, layoutService_1.Parts.STATUSBAR_PART, { hasTitle: false }, themeService, storageService, layoutService) || this;\n        _this.instantiationService = instantiationService;\n        _this.contextService = contextService;\n        //#region IView\n        _this.minimumWidth = 0;\n        _this.maximumWidth = Number.POSITIVE_INFINITY;\n        _this.minimumHeight = 22;\n        _this.maximumHeight = 22;\n        _this.pendingEntries = [];\n        _this.registerListeners();\n        return _this;\n    }\n    StatusbarPart.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.contextService.onDidChangeWorkbenchState(function () { return _this.updateStyles(); }));\n    };\n    StatusbarPart.prototype.addEntry = function (entry, alignment, priority) {\n        var _this = this;\n        if (priority === void 0) { priority = 0; }\n        // As long as we have not been created into a container yet, record all entries\n        // that are pending so that they can get created at a later point\n        if (!this.element) {\n            var pendingEntry_1 = { entry: entry, alignment: alignment, priority: priority, disposable: lifecycle_1.Disposable.None };\n            this.pendingEntries.push(pendingEntry_1);\n            return lifecycle_1.toDisposable(function () {\n                _this.pendingEntries = _this.pendingEntries.filter(function (e) { return e !== pendingEntry_1; });\n                pendingEntry_1.disposable.dispose();\n            });\n        }\n        // Render entry in status bar\n        var el = this.doCreateStatusItem(alignment, priority, entry.showBeak ? 'has-beak' : undefined);\n        var item = this.instantiationService.createInstance(StatusBarEntryItem, entry);\n        var toDispose = item.render(el);\n        // Insert according to priority\n        var container = this.element;\n        var neighbours = this.getEntries(alignment);\n        var inserted = false;\n        for (var _i = 0, neighbours_1 = neighbours; _i < neighbours_1.length; _i++) {\n            var neighbour = neighbours_1[_i];\n            var nPriority = Number(neighbour.getAttribute(StatusbarPart.PRIORITY_PROP));\n            if (alignment === statusbar_2.StatusbarAlignment.LEFT && nPriority < priority ||\n                alignment === statusbar_2.StatusbarAlignment.RIGHT && nPriority > priority) {\n                container.insertBefore(el, neighbour);\n                inserted = true;\n                break;\n            }\n        }\n        if (!inserted) {\n            container.appendChild(el);\n        }\n        return lifecycle_1.toDisposable(function () {\n            el.remove();\n            if (toDispose) {\n                toDispose.dispose();\n            }\n        });\n    };\n    StatusbarPart.prototype.getEntries = function (alignment) {\n        var entries = [];\n        var container = this.element;\n        var children = container.children;\n        for (var i = 0; i < children.length; i++) {\n            var childElement = children.item(i);\n            if (Number(childElement.getAttribute(StatusbarPart.ALIGNMENT_PROP)) === alignment) {\n                entries.push(childElement);\n            }\n        }\n        return entries;\n    };\n    StatusbarPart.prototype.createContentArea = function (parent) {\n        this.element = parent;\n        // Fill in initial items that were contributed from the registry\n        var registry = platform_1.Registry.as(statusbar_1.Extensions.Statusbar);\n        var descriptors = registry.items.slice().sort(function (a, b) {\n            if (a.alignment === b.alignment) {\n                if (a.alignment === statusbar_2.StatusbarAlignment.LEFT) {\n                    return b.priority - a.priority;\n                }\n                else {\n                    return a.priority - b.priority;\n                }\n            }\n            else if (a.alignment === statusbar_2.StatusbarAlignment.LEFT) {\n                return 1;\n            }\n            else if (a.alignment === statusbar_2.StatusbarAlignment.RIGHT) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n        for (var _i = 0, descriptors_1 = descriptors; _i < descriptors_1.length; _i++) {\n            var descriptor = descriptors_1[_i];\n            var item = this.instantiationService.createInstance(descriptor.syncDescriptor);\n            var el = this.doCreateStatusItem(descriptor.alignment, descriptor.priority);\n            this._register(item.render(el));\n            this.element.appendChild(el);\n        }\n        // Fill in pending entries if any\n        while (this.pendingEntries.length) {\n            var entry = this.pendingEntries.shift();\n            if (entry) {\n                entry.disposable = this.addEntry(entry.entry, entry.alignment, entry.priority);\n            }\n        }\n        return this.element;\n    };\n    StatusbarPart.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n        var container = this.getContainer();\n        // Background colors\n        var backgroundColor = this.getColor(this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY ? theme_1.STATUS_BAR_BACKGROUND : theme_1.STATUS_BAR_NO_FOLDER_BACKGROUND);\n        container.style.backgroundColor = backgroundColor;\n        container.style.color = this.getColor(this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY ? theme_1.STATUS_BAR_FOREGROUND : theme_1.STATUS_BAR_NO_FOLDER_FOREGROUND);\n        // Border color\n        var borderColor = this.getColor(this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY ? theme_1.STATUS_BAR_BORDER : theme_1.STATUS_BAR_NO_FOLDER_BORDER) || this.getColor(colorRegistry_1.contrastBorder);\n        container.style.borderTopWidth = borderColor ? '1px' : null;\n        container.style.borderTopStyle = borderColor ? 'solid' : null;\n        container.style.borderTopColor = borderColor;\n        // Notification Beak\n        if (!this.styleElement) {\n            this.styleElement = dom_1.createStyleSheet(container);\n        }\n        this.styleElement.innerHTML = \".monaco-workbench .part.statusbar > .statusbar-item.has-beak:before { border-bottom-color: \" + backgroundColor + \"; }\";\n    };\n    StatusbarPart.prototype.doCreateStatusItem = function (alignment, priority, extraClass) {\n        if (priority === void 0) { priority = 0; }\n        var el = document.createElement('div');\n        dom_1.addClass(el, 'statusbar-item');\n        if (extraClass) {\n            dom_1.addClass(el, extraClass);\n        }\n        if (alignment === statusbar_2.StatusbarAlignment.RIGHT) {\n            dom_1.addClass(el, 'right');\n        }\n        else {\n            dom_1.addClass(el, 'left');\n        }\n        el.setAttribute(StatusbarPart.PRIORITY_PROP, String(priority));\n        el.setAttribute(StatusbarPart.ALIGNMENT_PROP, String(alignment));\n        return el;\n    };\n    StatusbarPart.prototype.setStatusMessage = function (message, autoDisposeAfter, delayBy) {\n        var _this = this;\n        if (autoDisposeAfter === void 0) { autoDisposeAfter = -1; }\n        if (delayBy === void 0) { delayBy = 0; }\n        if (this.statusMsgDispose) {\n            this.statusMsgDispose.dispose(); // dismiss any previous\n        }\n        // Create new\n        var statusDispose;\n        var showHandle = setTimeout(function () {\n            statusDispose = _this.addEntry({ text: message }, statusbar_2.StatusbarAlignment.LEFT, -Number.MAX_VALUE /* far right on left hand side */);\n            showHandle = null;\n        }, delayBy);\n        var hideHandle;\n        // Dispose function takes care of timeouts and actual entry\n        var dispose = {\n            dispose: function () {\n                if (showHandle) {\n                    clearTimeout(showHandle);\n                }\n                if (hideHandle) {\n                    clearTimeout(hideHandle);\n                }\n                if (statusDispose) {\n                    statusDispose.dispose();\n                }\n            }\n        };\n        this.statusMsgDispose = dispose;\n        if (typeof autoDisposeAfter === 'number' && autoDisposeAfter > 0) {\n            hideHandle = setTimeout(function () { return dispose.dispose(); }, autoDisposeAfter);\n        }\n        return dispose;\n    };\n    StatusbarPart.prototype.layout = function (width, height) {\n        _super.prototype.layoutContents.call(this, width, height);\n    };\n    StatusbarPart.prototype.toJSON = function () {\n        return {\n            type: layoutService_1.Parts.STATUSBAR_PART\n        };\n    };\n    StatusbarPart.PRIORITY_PROP = 'statusbar-entry-priority';\n    StatusbarPart.ALIGNMENT_PROP = 'statusbar-entry-alignment';\n    StatusbarPart = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService),\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(3, storage_1.IStorageService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService)\n    ], StatusbarPart);\n    return StatusbarPart;\n}(part_1.Part));\nexports.StatusbarPart = StatusbarPart;\nvar manageExtensionAction;\nvar StatusBarEntryItem = /** @class */ (function () {\n    function StatusBarEntryItem(entry, commandService, instantiationService, notificationService, telemetryService, contextMenuService, editorService, themeService) {\n        this.entry = entry;\n        this.commandService = commandService;\n        this.instantiationService = instantiationService;\n        this.notificationService = notificationService;\n        this.telemetryService = telemetryService;\n        this.contextMenuService = contextMenuService;\n        this.editorService = editorService;\n        this.themeService = themeService;\n        this.entry = entry;\n        if (!manageExtensionAction) {\n            manageExtensionAction = this.instantiationService.createInstance(ManageExtensionAction);\n        }\n    }\n    StatusBarEntryItem.prototype.render = function (el) {\n        var _this = this;\n        var toDispose = [];\n        dom_1.addClass(el, 'statusbar-entry');\n        // Text Container\n        var textContainer;\n        if (this.entry.command) {\n            textContainer = document.createElement('a');\n            toDispose.push(dom_1.addDisposableListener(textContainer, 'click', function () { return _this.executeCommand(_this.entry.command, _this.entry.arguments); }));\n        }\n        else {\n            textContainer = document.createElement('span');\n        }\n        // Label\n        new octiconLabel_1.OcticonLabel(textContainer).text = this.entry.text;\n        // Tooltip\n        if (this.entry.tooltip) {\n            textContainer.title = this.entry.tooltip;\n        }\n        // Color (only applies to text container)\n        toDispose.push(this.applyColor(textContainer, this.entry.color));\n        // Background Color (applies to parent element to fully fill container)\n        if (this.entry.backgroundColor) {\n            toDispose.push(this.applyColor(el, this.entry.backgroundColor, true));\n            dom_1.addClass(el, 'has-background-color');\n        }\n        // Context Menu\n        if (this.entry.extensionId) {\n            toDispose.push(dom_1.addDisposableListener(textContainer, 'contextmenu', function (e) {\n                dom_1.EventHelper.stop(e, true);\n                _this.contextMenuService.showContextMenu({\n                    getAnchor: function () { return el; },\n                    getActionsContext: function () { return _this.entry.extensionId.value; },\n                    getActions: function () { return [manageExtensionAction]; }\n                });\n            }));\n        }\n        el.appendChild(textContainer);\n        return {\n            dispose: function () {\n                toDispose = lifecycle_1.dispose(toDispose);\n            }\n        };\n    };\n    StatusBarEntryItem.prototype.applyColor = function (container, color, isBackground) {\n        var disposable = [];\n        if (color) {\n            if (editorCommon_1.isThemeColor(color)) {\n                var colorId_1 = color.id;\n                color = (this.themeService.getTheme().getColor(colorId_1) || color_1.Color.transparent).toString();\n                disposable.push(this.themeService.onThemeChange(function (theme) {\n                    var colorValue = (theme.getColor(colorId_1) || color_1.Color.transparent).toString();\n                    isBackground ? container.style.backgroundColor = colorValue : container.style.color = colorValue;\n                }));\n            }\n            isBackground ? container.style.backgroundColor = color : container.style.color = color;\n        }\n        return lifecycle_1.combinedDisposable(disposable);\n    };\n    StatusBarEntryItem.prototype.executeCommand = function (id, args) {\n        var _this = this;\n        var _a;\n        args = args || [];\n        // Maintain old behaviour of always focusing the editor here\n        var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n        if (activeTextEditorWidget) {\n            activeTextEditorWidget.focus();\n        }\n        /* __GDPR__\n            \"workbenchActionExecuted\" : {\n                \"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                \"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            }\n        */\n        this.telemetryService.publicLog('workbenchActionExecuted', { id: id, from: 'status bar' });\n        (_a = this.commandService).executeCommand.apply(_a, [id].concat(args)).then(undefined, function (err) { return _this.notificationService.error(errorMessage_1.toErrorMessage(err)); });\n    };\n    StatusBarEntryItem = tslib_1.__decorate([\n        tslib_1.__param(1, commands_1.ICommandService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, telemetry_1.ITelemetryService),\n        tslib_1.__param(5, contextView_1.IContextMenuService),\n        tslib_1.__param(6, editorService_1.IEditorService),\n        tslib_1.__param(7, themeService_1.IThemeService)\n    ], StatusBarEntryItem);\n    return StatusBarEntryItem;\n}());\nvar ManageExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ManageExtensionAction, _super);\n    function ManageExtensionAction(commandService) {\n        var _this = _super.call(this, 'statusbar.manage.extension', nls.localize('manageExtension', \"Manage Extension\")) || this;\n        _this.commandService = commandService;\n        return _this;\n    }\n    ManageExtensionAction.prototype.run = function (extensionId) {\n        return this.commandService.executeCommand('_extensions.manage', extensionId);\n    };\n    ManageExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(0, commands_1.ICommandService)\n    ], ManageExtensionAction);\n    return ManageExtensionAction;\n}(actions_1.Action));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var statusBarItemHoverBackground = theme.getColor(theme_1.STATUS_BAR_ITEM_HOVER_BACKGROUND);\n    if (statusBarItemHoverBackground) {\n        collector.addRule(\".monaco-workbench .part.statusbar > .statusbar-item a:hover { background-color: \" + statusBarItemHoverBackground + \"; }\");\n    }\n    var statusBarItemActiveBackground = theme.getColor(theme_1.STATUS_BAR_ITEM_ACTIVE_BACKGROUND);\n    if (statusBarItemActiveBackground) {\n        collector.addRule(\".monaco-workbench .part.statusbar > .statusbar-item a:active { background-color: \" + statusBarItemActiveBackground + \"; }\");\n    }\n    var statusBarProminentItemBackground = theme.getColor(theme_1.STATUS_BAR_PROMINENT_ITEM_BACKGROUND);\n    if (statusBarProminentItemBackground) {\n        collector.addRule(\".monaco-workbench .part.statusbar > .statusbar-item .status-bar-info { background-color: \" + statusBarProminentItemBackground + \"; }\");\n    }\n    var statusBarProminentItemHoverBackground = theme.getColor(theme_1.STATUS_BAR_PROMINENT_ITEM_HOVER_BACKGROUND);\n    if (statusBarProminentItemHoverBackground) {\n        collector.addRule(\".monaco-workbench .part.statusbar > .statusbar-item a.status-bar-info:hover { background-color: \" + statusBarProminentItemHoverBackground + \"; }\");\n    }\n});\nextensions_1.registerSingleton(statusbar_2.IStatusbarService, StatusbarPart);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/statusbar/statusbarPart.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/statusbar/statusbarPart.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/statusbarpart';\nimport * as nls from 'vs/nls';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { dispose, IDisposable, toDisposable, combinedDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { OcticonLabel } from 'vs/base/browser/ui/octiconLabel/octiconLabel';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Part } from 'vs/workbench/browser/part';\nimport { IStatusbarRegistry, Extensions, IStatusbarItem } from 'vs/workbench/browser/parts/statusbar/statusbar';\nimport { IInstantiationService, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { StatusbarAlignment, IStatusbarService, IStatusbarEntry } from 'vs/platform/statusbar/common/statusbar';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { Action } from 'vs/base/common/actions';\nimport { IThemeService, registerThemingParticipant, ITheme, ICssStyleCollector, ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { STATUS_BAR_BACKGROUND, STATUS_BAR_FOREGROUND, STATUS_BAR_NO_FOLDER_BACKGROUND, STATUS_BAR_ITEM_HOVER_BACKGROUND, STATUS_BAR_ITEM_ACTIVE_BACKGROUND, STATUS_BAR_PROMINENT_ITEM_BACKGROUND, STATUS_BAR_PROMINENT_ITEM_HOVER_BACKGROUND, STATUS_BAR_BORDER, STATUS_BAR_NO_FOLDER_FOREGROUND, STATUS_BAR_NO_FOLDER_BORDER } from 'vs/workbench/common/theme';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { isThemeColor } from 'vs/editor/common/editorCommon';\nimport { Color } from 'vs/base/common/color';\nimport { addClass, EventHelper, createStyleSheet, addDisposableListener } from 'vs/base/browser/dom';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { Parts, IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport class StatusbarPart extends Part implements IStatusbarService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate static readonly PRIORITY_PROP = 'statusbar-entry-priority';\n\tprivate static readonly ALIGNMENT_PROP = 'statusbar-entry-alignment';\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 0;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 22;\n\treadonly maximumHeight: number = 22;\n\n\t//#endregion\n\n\tprivate statusMsgDispose: IDisposable;\n\tprivate styleElement: HTMLStyleElement;\n\n\tprivate pendingEntries: { entry: IStatusbarEntry, alignment: StatusbarAlignment, priority: number, disposable: IDisposable }[] = [];\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(Parts.STATUSBAR_PART, { hasTitle: false }, themeService, storageService, layoutService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.updateStyles()));\n\t}\n\n\taddEntry(entry: IStatusbarEntry, alignment: StatusbarAlignment, priority: number = 0): IDisposable {\n\n\t\t// As long as we have not been created into a container yet, record all entries\n\t\t// that are pending so that they can get created at a later point\n\t\tif (!this.element) {\n\t\t\tconst pendingEntry = { entry, alignment, priority, disposable: Disposable.None };\n\t\t\tthis.pendingEntries.push(pendingEntry);\n\n\t\t\treturn toDisposable(() => {\n\t\t\t\tthis.pendingEntries = this.pendingEntries.filter(e => e !== pendingEntry);\n\t\t\t\tpendingEntry.disposable.dispose();\n\t\t\t});\n\t\t}\n\n\t\t// Render entry in status bar\n\t\tconst el = this.doCreateStatusItem(alignment, priority, entry.showBeak ? 'has-beak' : undefined);\n\t\tconst item = this.instantiationService.createInstance(StatusBarEntryItem, entry);\n\t\tconst toDispose = item.render(el);\n\n\t\t// Insert according to priority\n\t\tconst container = this.element;\n\t\tconst neighbours = this.getEntries(alignment);\n\t\tlet inserted = false;\n\t\tfor (const neighbour of neighbours) {\n\t\t\tconst nPriority = Number(neighbour.getAttribute(StatusbarPart.PRIORITY_PROP));\n\t\t\tif (\n\t\t\t\talignment === StatusbarAlignment.LEFT && nPriority < priority ||\n\t\t\t\talignment === StatusbarAlignment.RIGHT && nPriority > priority\n\t\t\t) {\n\t\t\t\tcontainer.insertBefore(el, neighbour);\n\t\t\t\tinserted = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!inserted) {\n\t\t\tcontainer.appendChild(el);\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tel.remove();\n\n\t\t\tif (toDispose) {\n\t\t\t\ttoDispose.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getEntries(alignment: StatusbarAlignment): HTMLElement[] {\n\t\tconst entries: HTMLElement[] = [];\n\n\t\tconst container = this.element;\n\t\tconst children = container.children;\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst childElement = <HTMLElement>children.item(i);\n\t\t\tif (Number(childElement.getAttribute(StatusbarPart.ALIGNMENT_PROP)) === alignment) {\n\t\t\t\tentries.push(childElement);\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tcreateContentArea(parent: HTMLElement): HTMLElement {\n\t\tthis.element = parent;\n\n\t\t// Fill in initial items that were contributed from the registry\n\t\tconst registry = Registry.as<IStatusbarRegistry>(Extensions.Statusbar);\n\n\t\tconst descriptors = registry.items.slice().sort((a, b) => {\n\t\t\tif (a.alignment === b.alignment) {\n\t\t\t\tif (a.alignment === StatusbarAlignment.LEFT) {\n\t\t\t\t\treturn b.priority - a.priority;\n\t\t\t\t} else {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t} else if (a.alignment === StatusbarAlignment.LEFT) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a.alignment === StatusbarAlignment.RIGHT) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tfor (const descriptor of descriptors) {\n\t\t\tconst item = this.instantiationService.createInstance(descriptor.syncDescriptor);\n\t\t\tconst el = this.doCreateStatusItem(descriptor.alignment, descriptor.priority);\n\n\t\t\tthis._register(item.render(el));\n\t\t\tthis.element.appendChild(el);\n\t\t}\n\n\t\t// Fill in pending entries if any\n\t\twhile (this.pendingEntries.length) {\n\t\t\tconst entry = this.pendingEntries.shift();\n\t\t\tif (entry) {\n\t\t\t\tentry.disposable = this.addEntry(entry.entry, entry.alignment, entry.priority);\n\t\t\t}\n\t\t}\n\n\t\treturn this.element;\n\t}\n\n\tupdateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = this.getContainer();\n\n\t\t// Background colors\n\t\tconst backgroundColor = this.getColor(this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY ? STATUS_BAR_BACKGROUND : STATUS_BAR_NO_FOLDER_BACKGROUND);\n\t\tcontainer.style.backgroundColor = backgroundColor;\n\t\tcontainer.style.color = this.getColor(this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY ? STATUS_BAR_FOREGROUND : STATUS_BAR_NO_FOLDER_FOREGROUND);\n\n\t\t// Border color\n\t\tconst borderColor = this.getColor(this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY ? STATUS_BAR_BORDER : STATUS_BAR_NO_FOLDER_BORDER) || this.getColor(contrastBorder);\n\t\tcontainer.style.borderTopWidth = borderColor ? '1px' : null;\n\t\tcontainer.style.borderTopStyle = borderColor ? 'solid' : null;\n\t\tcontainer.style.borderTopColor = borderColor;\n\n\t\t// Notification Beak\n\t\tif (!this.styleElement) {\n\t\t\tthis.styleElement = createStyleSheet(container);\n\t\t}\n\n\t\tthis.styleElement.innerHTML = `.monaco-workbench .part.statusbar > .statusbar-item.has-beak:before { border-bottom-color: ${backgroundColor}; }`;\n\t}\n\n\tprivate doCreateStatusItem(alignment: StatusbarAlignment, priority: number = 0, extraClass?: string): HTMLElement {\n\t\tconst el = document.createElement('div');\n\t\taddClass(el, 'statusbar-item');\n\t\tif (extraClass) {\n\t\t\taddClass(el, extraClass);\n\t\t}\n\n\t\tif (alignment === StatusbarAlignment.RIGHT) {\n\t\t\taddClass(el, 'right');\n\t\t} else {\n\t\t\taddClass(el, 'left');\n\t\t}\n\n\t\tel.setAttribute(StatusbarPart.PRIORITY_PROP, String(priority));\n\t\tel.setAttribute(StatusbarPart.ALIGNMENT_PROP, String(alignment));\n\n\t\treturn el;\n\t}\n\n\tsetStatusMessage(message: string, autoDisposeAfter: number = -1, delayBy: number = 0): IDisposable {\n\t\tif (this.statusMsgDispose) {\n\t\t\tthis.statusMsgDispose.dispose(); // dismiss any previous\n\t\t}\n\n\t\t// Create new\n\t\tlet statusDispose: IDisposable;\n\t\tlet showHandle: any = setTimeout(() => {\n\t\t\tstatusDispose = this.addEntry({ text: message }, StatusbarAlignment.LEFT, -Number.MAX_VALUE /* far right on left hand side */);\n\t\t\tshowHandle = null;\n\t\t}, delayBy);\n\t\tlet hideHandle: any;\n\n\t\t// Dispose function takes care of timeouts and actual entry\n\t\tconst dispose = {\n\t\t\tdispose: () => {\n\t\t\t\tif (showHandle) {\n\t\t\t\t\tclearTimeout(showHandle);\n\t\t\t\t}\n\n\t\t\t\tif (hideHandle) {\n\t\t\t\t\tclearTimeout(hideHandle);\n\t\t\t\t}\n\n\t\t\t\tif (statusDispose) {\n\t\t\t\t\tstatusDispose.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.statusMsgDispose = dispose;\n\n\t\tif (typeof autoDisposeAfter === 'number' && autoDisposeAfter > 0) {\n\t\t\thideHandle = setTimeout(() => dispose.dispose(), autoDisposeAfter);\n\t\t}\n\n\t\treturn dispose;\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tsuper.layoutContents(width, height);\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.STATUSBAR_PART\n\t\t};\n\t}\n}\n\nlet manageExtensionAction: ManageExtensionAction;\nclass StatusBarEntryItem implements IStatusbarItem {\n\n\tconstructor(\n\t\tprivate entry: IStatusbarEntry,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tthis.entry = entry;\n\n\t\tif (!manageExtensionAction) {\n\t\t\tmanageExtensionAction = this.instantiationService.createInstance(ManageExtensionAction);\n\t\t}\n\t}\n\n\trender(el: HTMLElement): IDisposable {\n\t\tlet toDispose: IDisposable[] = [];\n\t\taddClass(el, 'statusbar-entry');\n\n\t\t// Text Container\n\t\tlet textContainer: HTMLElement;\n\t\tif (this.entry.command) {\n\t\t\ttextContainer = document.createElement('a');\n\n\t\t\ttoDispose.push(addDisposableListener(textContainer, 'click', () => this.executeCommand(this.entry.command!, this.entry.arguments)));\n\t\t} else {\n\t\t\ttextContainer = document.createElement('span');\n\t\t}\n\n\t\t// Label\n\t\tnew OcticonLabel(textContainer).text = this.entry.text;\n\n\t\t// Tooltip\n\t\tif (this.entry.tooltip) {\n\t\t\ttextContainer.title = this.entry.tooltip;\n\t\t}\n\n\t\t// Color (only applies to text container)\n\t\ttoDispose.push(this.applyColor(textContainer, this.entry.color));\n\n\t\t// Background Color (applies to parent element to fully fill container)\n\t\tif (this.entry.backgroundColor) {\n\t\t\ttoDispose.push(this.applyColor(el, this.entry.backgroundColor, true));\n\t\t\taddClass(el, 'has-background-color');\n\t\t}\n\n\t\t// Context Menu\n\t\tif (this.entry.extensionId) {\n\t\t\ttoDispose.push(addDisposableListener(textContainer, 'contextmenu', e => {\n\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => el,\n\t\t\t\t\tgetActionsContext: () => this.entry.extensionId!.value,\n\t\t\t\t\tgetActions: () => [manageExtensionAction]\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\tel.appendChild(textContainer);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\ttoDispose = dispose(toDispose);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate applyColor(container: HTMLElement, color: string | ThemeColor | undefined, isBackground?: boolean): IDisposable {\n\t\tconst disposable: IDisposable[] = [];\n\n\t\tif (color) {\n\t\t\tif (isThemeColor(color)) {\n\t\t\t\tconst colorId = color.id;\n\t\t\t\tcolor = (this.themeService.getTheme().getColor(colorId) || Color.transparent).toString();\n\t\t\t\tdisposable.push(this.themeService.onThemeChange(theme => {\n\t\t\t\t\tconst colorValue = (theme.getColor(colorId) || Color.transparent).toString();\n\t\t\t\t\tisBackground ? container.style.backgroundColor = colorValue : container.style.color = colorValue;\n\t\t\t\t}));\n\t\t\t}\n\t\t\tisBackground ? container.style.backgroundColor = color : container.style.color = color;\n\t\t}\n\n\t\treturn combinedDisposable(disposable);\n\t}\n\n\tprivate executeCommand(id: string, args?: any[]) {\n\t\targs = args || [];\n\n\t\t// Maintain old behaviour of always focusing the editor here\n\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\tif (activeTextEditorWidget) {\n\t\t\tactiveTextEditorWidget.focus();\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\"workbenchActionExecuted\" : {\n\t\t\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"from\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id, from: 'status bar' });\n\t\tthis.commandService.executeCommand(id, ...args).then(undefined, err => this.notificationService.error(toErrorMessage(err)));\n\t}\n}\n\nclass ManageExtensionAction extends Action {\n\n\tconstructor(\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper('statusbar.manage.extension', nls.localize('manageExtension', \"Manage Extension\"));\n\t}\n\n\trun(extensionId: string): Promise<any> {\n\t\treturn this.commandService.executeCommand('_extensions.manage', extensionId);\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst statusBarItemHoverBackground = theme.getColor(STATUS_BAR_ITEM_HOVER_BACKGROUND);\n\tif (statusBarItemHoverBackground) {\n\t\tcollector.addRule(`.monaco-workbench .part.statusbar > .statusbar-item a:hover { background-color: ${statusBarItemHoverBackground}; }`);\n\t}\n\n\tconst statusBarItemActiveBackground = theme.getColor(STATUS_BAR_ITEM_ACTIVE_BACKGROUND);\n\tif (statusBarItemActiveBackground) {\n\t\tcollector.addRule(`.monaco-workbench .part.statusbar > .statusbar-item a:active { background-color: ${statusBarItemActiveBackground}; }`);\n\t}\n\n\tconst statusBarProminentItemBackground = theme.getColor(STATUS_BAR_PROMINENT_ITEM_BACKGROUND);\n\tif (statusBarProminentItemBackground) {\n\t\tcollector.addRule(`.monaco-workbench .part.statusbar > .statusbar-item .status-bar-info { background-color: ${statusBarProminentItemBackground}; }`);\n\t}\n\n\tconst statusBarProminentItemHoverBackground = theme.getColor(STATUS_BAR_PROMINENT_ITEM_HOVER_BACKGROUND);\n\tif (statusBarProminentItemHoverBackground) {\n\t\tcollector.addRule(`.monaco-workbench .part.statusbar > .statusbar-item a.status-bar-info:hover { background-color: ${statusBarProminentItemHoverBackground}; }`);\n\t}\n});\n\nregisterSingleton(IStatusbarService, StatusbarPart);"]}]}