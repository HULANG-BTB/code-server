{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar contextmenu_1 = require(\"vs/base/browser/contextmenu\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar async_1 = require(\"vs/base/common/async\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorCommon = require(\"vs/editor/common/editorCommon\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar nls = require(\"vs/nls\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar rangeDecorations_1 = require(\"vs/workbench/browser/parts/editor/rangeDecorations\");\nvar preferencesWidgets_1 = require(\"vs/workbench/contrib/preferences/browser/preferencesWidgets\");\nvar preferences_1 = require(\"vs/workbench/services/preferences/common/preferences\");\nvar preferencesModels_1 = require(\"vs/workbench/services/preferences/common/preferencesModels\");\nvar UserSettingsRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(UserSettingsRenderer, _super);\n    function UserSettingsRenderer(editor, preferencesModel, preferencesService, configurationService, instantiationService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.preferencesModel = preferencesModel;\n        _this.preferencesService = preferencesService;\n        _this.configurationService = configurationService;\n        _this.instantiationService = instantiationService;\n        _this.modelChangeDelayer = new async_1.Delayer(200);\n        _this._onFocusPreference = new event_1.Emitter();\n        _this.onFocusPreference = _this._onFocusPreference.event;\n        _this._onClearFocusPreference = new event_1.Emitter();\n        _this.onClearFocusPreference = _this._onClearFocusPreference.event;\n        _this._onUpdatePreference = new event_1.Emitter();\n        _this.onUpdatePreference = _this._onUpdatePreference.event;\n        _this.settingHighlighter = _this._register(instantiationService.createInstance(SettingHighlighter, editor, _this._onFocusPreference, _this._onClearFocusPreference));\n        _this.highlightMatchesRenderer = _this._register(instantiationService.createInstance(HighlightMatchesRenderer, editor));\n        _this.editSettingActionRenderer = _this._register(_this.instantiationService.createInstance(EditSettingRenderer, _this.editor, _this.preferencesModel, _this.settingHighlighter));\n        _this._register(_this.editSettingActionRenderer.onUpdateSetting(function (_a) {\n            var key = _a.key, value = _a.value, source = _a.source;\n            return _this._updatePreference(key, value, source);\n        }));\n        _this._register(_this.editor.getModel().onDidChangeContent(function () { return _this.modelChangeDelayer.trigger(function () { return _this.onModelChanged(); }); }));\n        return _this;\n    }\n    UserSettingsRenderer.prototype.getAssociatedPreferencesModel = function () {\n        return this.associatedPreferencesModel;\n    };\n    UserSettingsRenderer.prototype.setAssociatedPreferencesModel = function (associatedPreferencesModel) {\n        this.associatedPreferencesModel = associatedPreferencesModel;\n        this.editSettingActionRenderer.associatedPreferencesModel = associatedPreferencesModel;\n        // Create header only in Settings editor mode\n        this.createHeader();\n    };\n    UserSettingsRenderer.prototype.createHeader = function () {\n        this._register(new preferencesWidgets_1.SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyUserSettingsHeader', \"Place your settings here to override the Default Settings.\"));\n    };\n    UserSettingsRenderer.prototype.render = function () {\n        this.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this.associatedPreferencesModel);\n        if (this.filterResult) {\n            this.filterPreferences(this.filterResult);\n        }\n    };\n    UserSettingsRenderer.prototype._updatePreference = function (key, value, source) {\n        this._onUpdatePreference.fire({ key: key, value: value, source: source });\n        this.updatePreference(key, value, source);\n    };\n    UserSettingsRenderer.prototype.updatePreference = function (key, value, source) {\n        var _this = this;\n        var overrideIdentifier = source.overrideOf ? configuration_1.overrideIdentifierFromKey(source.overrideOf.key) : null;\n        var resource = this.preferencesModel.uri;\n        this.configurationService.updateValue(key, value, { overrideIdentifier: overrideIdentifier, resource: resource }, this.preferencesModel.configurationTarget)\n            .then(function () { return _this.onSettingUpdated(source); });\n    };\n    UserSettingsRenderer.prototype.onModelChanged = function () {\n        if (!this.editor.hasModel()) {\n            // model could have been disposed during the delay\n            return;\n        }\n        this.render();\n    };\n    UserSettingsRenderer.prototype.onSettingUpdated = function (setting) {\n        this.editor.focus();\n        setting = this.getSetting(setting);\n        if (setting) {\n            // TODO:@sandy Selection range should be template range\n            this.editor.setSelection(setting.valueRange);\n            this.settingHighlighter.highlight(setting, true);\n        }\n    };\n    UserSettingsRenderer.prototype.getSetting = function (setting) {\n        var key = setting.key, overrideOf = setting.overrideOf;\n        if (overrideOf) {\n            var setting_1 = this.getSetting(overrideOf);\n            for (var _i = 0, _a = setting_1.overrides; _i < _a.length; _i++) {\n                var override = _a[_i];\n                if (override.key === key) {\n                    return override;\n                }\n            }\n            return undefined;\n        }\n        return this.preferencesModel.getPreference(key);\n    };\n    UserSettingsRenderer.prototype.filterPreferences = function (filterResult) {\n        this.filterResult = filterResult;\n        this.settingHighlighter.clear(true);\n        this.highlightMatchesRenderer.render(filterResult ? filterResult.matches : []);\n    };\n    UserSettingsRenderer.prototype.focusPreference = function (setting) {\n        var s = this.getSetting(setting);\n        if (s) {\n            this.settingHighlighter.highlight(s, true);\n            this.editor.setPosition({ lineNumber: s.keyRange.startLineNumber, column: s.keyRange.startColumn });\n        }\n        else {\n            this.settingHighlighter.clear(true);\n        }\n    };\n    UserSettingsRenderer.prototype.clearFocus = function (setting) {\n        this.settingHighlighter.clear(true);\n    };\n    UserSettingsRenderer.prototype.editPreference = function (setting) {\n        var editableSetting = this.getSetting(setting);\n        return !!(editableSetting && this.editSettingActionRenderer.activateOnSetting(editableSetting));\n    };\n    UserSettingsRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, preferences_1.IPreferencesService),\n        tslib_1.__param(3, configuration_1.IConfigurationService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService)\n    ], UserSettingsRenderer);\n    return UserSettingsRenderer;\n}(lifecycle_1.Disposable));\nexports.UserSettingsRenderer = UserSettingsRenderer;\nvar WorkspaceSettingsRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(WorkspaceSettingsRenderer, _super);\n    function WorkspaceSettingsRenderer(editor, preferencesModel, preferencesService, telemetryService, configurationService, instantiationService) {\n        var _this = _super.call(this, editor, preferencesModel, preferencesService, configurationService, instantiationService) || this;\n        _this.workspaceConfigurationRenderer = _this._register(instantiationService.createInstance(WorkspaceConfigurationRenderer, editor, preferencesModel));\n        return _this;\n    }\n    WorkspaceSettingsRenderer.prototype.createHeader = function () {\n        this._register(new preferencesWidgets_1.SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyWorkspaceSettingsHeader', \"Place your settings here to override the User Settings.\"));\n    };\n    WorkspaceSettingsRenderer.prototype.setAssociatedPreferencesModel = function (associatedPreferencesModel) {\n        _super.prototype.setAssociatedPreferencesModel.call(this, associatedPreferencesModel);\n        this.workspaceConfigurationRenderer.render(this.getAssociatedPreferencesModel());\n    };\n    WorkspaceSettingsRenderer.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.workspaceConfigurationRenderer.render(this.getAssociatedPreferencesModel());\n    };\n    WorkspaceSettingsRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, preferences_1.IPreferencesService),\n        tslib_1.__param(3, telemetry_1.ITelemetryService),\n        tslib_1.__param(4, configuration_1.IConfigurationService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService)\n    ], WorkspaceSettingsRenderer);\n    return WorkspaceSettingsRenderer;\n}(UserSettingsRenderer));\nexports.WorkspaceSettingsRenderer = WorkspaceSettingsRenderer;\nvar FolderSettingsRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(FolderSettingsRenderer, _super);\n    function FolderSettingsRenderer(editor, preferencesModel, preferencesService, telemetryService, configurationService, instantiationService) {\n        return _super.call(this, editor, preferencesModel, preferencesService, configurationService, instantiationService) || this;\n    }\n    FolderSettingsRenderer.prototype.createHeader = function () {\n        this._register(new preferencesWidgets_1.SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyFolderSettingsHeader', \"Place your folder settings here to override those from the Workspace Settings.\"));\n    };\n    FolderSettingsRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, preferences_1.IPreferencesService),\n        tslib_1.__param(3, telemetry_1.ITelemetryService),\n        tslib_1.__param(4, configuration_1.IConfigurationService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService)\n    ], FolderSettingsRenderer);\n    return FolderSettingsRenderer;\n}(UserSettingsRenderer));\nexports.FolderSettingsRenderer = FolderSettingsRenderer;\nvar DefaultSettingsRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(DefaultSettingsRenderer, _super);\n    function DefaultSettingsRenderer(editor, preferencesModel, preferencesService, instantiationService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.preferencesModel = preferencesModel;\n        _this.preferencesService = preferencesService;\n        _this.instantiationService = instantiationService;\n        _this._onUpdatePreference = new event_1.Emitter();\n        _this.onUpdatePreference = _this._onUpdatePreference.event;\n        _this._onFocusPreference = new event_1.Emitter();\n        _this.onFocusPreference = _this._onFocusPreference.event;\n        _this._onClearFocusPreference = new event_1.Emitter();\n        _this.onClearFocusPreference = _this._onClearFocusPreference.event;\n        _this.settingHighlighter = _this._register(instantiationService.createInstance(SettingHighlighter, editor, _this._onFocusPreference, _this._onClearFocusPreference));\n        _this.settingsHeaderRenderer = _this._register(instantiationService.createInstance(DefaultSettingsHeaderRenderer, editor));\n        _this.settingsGroupTitleRenderer = _this._register(instantiationService.createInstance(SettingsGroupTitleRenderer, editor));\n        _this.filteredMatchesRenderer = _this._register(instantiationService.createInstance(FilteredMatchesRenderer, editor));\n        _this.editSettingActionRenderer = _this._register(instantiationService.createInstance(EditSettingRenderer, editor, preferencesModel, _this.settingHighlighter));\n        _this.bracesHidingRenderer = _this._register(instantiationService.createInstance(BracesHidingRenderer, editor, preferencesModel));\n        _this.hiddenAreasRenderer = _this._register(instantiationService.createInstance(HiddenAreasRenderer, editor, [_this.settingsGroupTitleRenderer, _this.filteredMatchesRenderer, _this.bracesHidingRenderer]));\n        _this._register(_this.editSettingActionRenderer.onUpdateSetting(function (e) { return _this._onUpdatePreference.fire(e); }));\n        _this._register(_this.settingsGroupTitleRenderer.onHiddenAreasChanged(function () { return _this.hiddenAreasRenderer.render(); }));\n        _this._register(preferencesModel.onDidChangeGroups(function () { return _this.render(); }));\n        return _this;\n    }\n    DefaultSettingsRenderer.prototype.getAssociatedPreferencesModel = function () {\n        return this._associatedPreferencesModel;\n    };\n    DefaultSettingsRenderer.prototype.setAssociatedPreferencesModel = function (associatedPreferencesModel) {\n        this._associatedPreferencesModel = associatedPreferencesModel;\n        this.editSettingActionRenderer.associatedPreferencesModel = associatedPreferencesModel;\n    };\n    DefaultSettingsRenderer.prototype.render = function () {\n        this.settingsGroupTitleRenderer.render(this.preferencesModel.settingsGroups);\n        this.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this._associatedPreferencesModel);\n        this.settingHighlighter.clear(true);\n        this.bracesHidingRenderer.render(undefined, this.preferencesModel.settingsGroups);\n        this.settingsGroupTitleRenderer.showGroup(0);\n        this.hiddenAreasRenderer.render();\n    };\n    DefaultSettingsRenderer.prototype.filterPreferences = function (filterResult) {\n        this.filterResult = filterResult;\n        if (filterResult) {\n            this.filteredMatchesRenderer.render(filterResult, this.preferencesModel.settingsGroups);\n            this.settingsGroupTitleRenderer.render(undefined);\n            this.settingsHeaderRenderer.render(filterResult);\n            this.settingHighlighter.clear(true);\n            this.bracesHidingRenderer.render(filterResult, this.preferencesModel.settingsGroups);\n            this.editSettingActionRenderer.render(filterResult.filteredGroups, this._associatedPreferencesModel);\n        }\n        else {\n            this.settingHighlighter.clear(true);\n            this.filteredMatchesRenderer.render(undefined, this.preferencesModel.settingsGroups);\n            this.settingsHeaderRenderer.render(undefined);\n            this.settingsGroupTitleRenderer.render(this.preferencesModel.settingsGroups);\n            this.settingsGroupTitleRenderer.showGroup(0);\n            this.bracesHidingRenderer.render(undefined, this.preferencesModel.settingsGroups);\n            this.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this._associatedPreferencesModel);\n        }\n        this.hiddenAreasRenderer.render();\n    };\n    DefaultSettingsRenderer.prototype.focusPreference = function (s) {\n        var setting = this.getSetting(s);\n        if (setting) {\n            this.settingsGroupTitleRenderer.showSetting(setting);\n            this.settingHighlighter.highlight(setting, true);\n        }\n        else {\n            this.settingHighlighter.clear(true);\n        }\n    };\n    DefaultSettingsRenderer.prototype.getSetting = function (setting) {\n        var key = setting.key, overrideOf = setting.overrideOf;\n        if (overrideOf) {\n            var setting_2 = this.getSetting(overrideOf);\n            for (var _i = 0, _a = setting_2.overrides; _i < _a.length; _i++) {\n                var override = _a[_i];\n                if (override.key === key) {\n                    return override;\n                }\n            }\n            return undefined;\n        }\n        var settingsGroups = this.filterResult ? this.filterResult.filteredGroups : this.preferencesModel.settingsGroups;\n        return this.getPreference(key, settingsGroups);\n    };\n    DefaultSettingsRenderer.prototype.getPreference = function (key, settingsGroups) {\n        for (var _i = 0, settingsGroups_1 = settingsGroups; _i < settingsGroups_1.length; _i++) {\n            var group = settingsGroups_1[_i];\n            for (var _a = 0, _b = group.sections; _a < _b.length; _a++) {\n                var section = _b[_a];\n                for (var _c = 0, _d = section.settings; _c < _d.length; _c++) {\n                    var setting = _d[_c];\n                    if (setting.key === key) {\n                        return setting;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    DefaultSettingsRenderer.prototype.clearFocus = function (setting) {\n        this.settingHighlighter.clear(true);\n    };\n    DefaultSettingsRenderer.prototype.updatePreference = function (key, value, source) {\n    };\n    DefaultSettingsRenderer.prototype.editPreference = function (setting) {\n        return this.editSettingActionRenderer.activateOnSetting(setting);\n    };\n    DefaultSettingsRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, preferences_1.IPreferencesService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService)\n    ], DefaultSettingsRenderer);\n    return DefaultSettingsRenderer;\n}(lifecycle_1.Disposable));\nexports.DefaultSettingsRenderer = DefaultSettingsRenderer;\nvar BracesHidingRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(BracesHidingRenderer, _super);\n    function BracesHidingRenderer(editor) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        return _this;\n    }\n    BracesHidingRenderer.prototype.render = function (result, settingsGroups) {\n        this._result = result;\n        this._settingsGroups = settingsGroups;\n    };\n    Object.defineProperty(BracesHidingRenderer.prototype, \"hiddenAreas\", {\n        get: function () {\n            // Opening square brace\n            var hiddenAreas = [\n                {\n                    startLineNumber: 1,\n                    startColumn: 1,\n                    endLineNumber: 2,\n                    endColumn: 1\n                }\n            ];\n            var hideBraces = function (group, hideExtraLine) {\n                // Opening curly brace\n                hiddenAreas.push({\n                    startLineNumber: group.range.startLineNumber - 3,\n                    startColumn: 1,\n                    endLineNumber: group.range.startLineNumber - (hideExtraLine ? 1 : 3),\n                    endColumn: 1\n                });\n                // Closing curly brace\n                hiddenAreas.push({\n                    startLineNumber: group.range.endLineNumber + 1,\n                    startColumn: 1,\n                    endLineNumber: group.range.endLineNumber + 4,\n                    endColumn: 1\n                });\n            };\n            this._settingsGroups.forEach(function (g) { return hideBraces(g); });\n            if (this._result) {\n                this._result.filteredGroups.forEach(function (g, i) { return hideBraces(g, true); });\n            }\n            // Closing square brace\n            var lineCount = this.editor.getModel().getLineCount();\n            hiddenAreas.push({\n                startLineNumber: lineCount,\n                startColumn: 1,\n                endLineNumber: lineCount,\n                endColumn: 1\n            });\n            return hiddenAreas;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BracesHidingRenderer;\n}(lifecycle_1.Disposable));\nexports.BracesHidingRenderer = BracesHidingRenderer;\nvar DefaultSettingsHeaderRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(DefaultSettingsHeaderRenderer, _super);\n    function DefaultSettingsHeaderRenderer(editor) {\n        var _this = _super.call(this) || this;\n        _this.settingsHeaderWidget = _this._register(new preferencesWidgets_1.DefaultSettingsHeaderWidget(editor, ''));\n        _this.onClick = _this.settingsHeaderWidget.onClick;\n        return _this;\n    }\n    DefaultSettingsHeaderRenderer.prototype.render = function (filterResult) {\n        var hasSettings = !filterResult || filterResult.filteredGroups.length > 0;\n        this.settingsHeaderWidget.toggleMessage(hasSettings);\n    };\n    return DefaultSettingsHeaderRenderer;\n}(lifecycle_1.Disposable));\nvar SettingsGroupTitleRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingsGroupTitleRenderer, _super);\n    function SettingsGroupTitleRenderer(editor, instantiationService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.instantiationService = instantiationService;\n        _this._onHiddenAreasChanged = new event_1.Emitter();\n        _this.hiddenGroups = [];\n        _this.disposables = [];\n        return _this;\n    }\n    Object.defineProperty(SettingsGroupTitleRenderer.prototype, \"onHiddenAreasChanged\", {\n        get: function () { return this._onHiddenAreasChanged.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SettingsGroupTitleRenderer.prototype, \"hiddenAreas\", {\n        get: function () {\n            var hiddenAreas = [];\n            for (var _i = 0, _a = this.hiddenGroups; _i < _a.length; _i++) {\n                var group = _a[_i];\n                hiddenAreas.push(group.range);\n            }\n            return hiddenAreas;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SettingsGroupTitleRenderer.prototype.render = function (settingsGroups) {\n        var _this = this;\n        this.disposeWidgets();\n        if (!settingsGroups) {\n            return;\n        }\n        this.settingsGroups = settingsGroups.slice();\n        this.settingsGroupTitleWidgets = [];\n        var _loop_1 = function (group) {\n            if (group.sections.every(function (sect) { return sect.settings.length === 0; })) {\n                return \"continue\";\n            }\n            var settingsGroupTitleWidget = this_1.instantiationService.createInstance(preferencesWidgets_1.SettingsGroupTitleWidget, this_1.editor, group);\n            settingsGroupTitleWidget.render();\n            this_1.settingsGroupTitleWidgets.push(settingsGroupTitleWidget);\n            this_1.disposables.push(settingsGroupTitleWidget);\n            this_1.disposables.push(settingsGroupTitleWidget.onToggled(function (collapsed) { return _this.onToggled(collapsed, settingsGroupTitleWidget.settingsGroup); }));\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.settingsGroups.slice().reverse(); _i < _a.length; _i++) {\n            var group = _a[_i];\n            _loop_1(group);\n        }\n        this.settingsGroupTitleWidgets.reverse();\n    };\n    SettingsGroupTitleRenderer.prototype.showGroup = function (groupIdx) {\n        var shownGroup = this.settingsGroupTitleWidgets[groupIdx].settingsGroup;\n        this.hiddenGroups = this.settingsGroups.filter(function (g) { return g !== shownGroup; });\n        for (var _i = 0, _a = this.settingsGroupTitleWidgets.filter(function (widget) { return widget.settingsGroup !== shownGroup; }); _i < _a.length; _i++) {\n            var groupTitleWidget = _a[_i];\n            groupTitleWidget.toggleCollapse(true);\n        }\n        this._onHiddenAreasChanged.fire();\n    };\n    SettingsGroupTitleRenderer.prototype.showSetting = function (setting) {\n        var settingsGroupTitleWidget = this.settingsGroupTitleWidgets.filter(function (widget) { return range_1.Range.containsRange(widget.settingsGroup.range, setting.range); })[0];\n        if (settingsGroupTitleWidget && settingsGroupTitleWidget.isCollapsed()) {\n            settingsGroupTitleWidget.toggleCollapse(false);\n            this.hiddenGroups.splice(this.hiddenGroups.indexOf(settingsGroupTitleWidget.settingsGroup), 1);\n            this._onHiddenAreasChanged.fire();\n        }\n    };\n    SettingsGroupTitleRenderer.prototype.onToggled = function (collapsed, group) {\n        var index = this.hiddenGroups.indexOf(group);\n        if (collapsed) {\n            var currentPosition = this.editor.getPosition();\n            if (group.range.startLineNumber <= currentPosition.lineNumber && group.range.endLineNumber >= currentPosition.lineNumber) {\n                this.editor.setPosition({ lineNumber: group.range.startLineNumber - 1, column: 1 });\n            }\n            this.hiddenGroups.push(group);\n        }\n        else {\n            this.hiddenGroups.splice(index, 1);\n        }\n        this._onHiddenAreasChanged.fire();\n    };\n    SettingsGroupTitleRenderer.prototype.disposeWidgets = function () {\n        this.hiddenGroups = [];\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    SettingsGroupTitleRenderer.prototype.dispose = function () {\n        this.disposeWidgets();\n        _super.prototype.dispose.call(this);\n    };\n    SettingsGroupTitleRenderer = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService)\n    ], SettingsGroupTitleRenderer);\n    return SettingsGroupTitleRenderer;\n}(lifecycle_1.Disposable));\nexports.SettingsGroupTitleRenderer = SettingsGroupTitleRenderer;\nvar HiddenAreasRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(HiddenAreasRenderer, _super);\n    function HiddenAreasRenderer(editor, hiddenAreasProviders) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.hiddenAreasProviders = hiddenAreasProviders;\n        return _this;\n    }\n    HiddenAreasRenderer.prototype.render = function () {\n        var ranges = [];\n        for (var _i = 0, _a = this.hiddenAreasProviders; _i < _a.length; _i++) {\n            var hiddenAreaProvider = _a[_i];\n            ranges.push.apply(ranges, hiddenAreaProvider.hiddenAreas);\n        }\n        this.editor.setHiddenAreas(ranges);\n    };\n    HiddenAreasRenderer.prototype.dispose = function () {\n        this.editor.setHiddenAreas([]);\n        _super.prototype.dispose.call(this);\n    };\n    return HiddenAreasRenderer;\n}(lifecycle_1.Disposable));\nexports.HiddenAreasRenderer = HiddenAreasRenderer;\nvar FilteredMatchesRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(FilteredMatchesRenderer, _super);\n    function FilteredMatchesRenderer(editor) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.decorationIds = [];\n        _this.hiddenAreas = [];\n        return _this;\n    }\n    FilteredMatchesRenderer.prototype.render = function (result, allSettingsGroups) {\n        var _this = this;\n        this.hiddenAreas = [];\n        if (result) {\n            this.hiddenAreas = this.computeHiddenRanges(result.filteredGroups, result.allGroups);\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, result.matches.map(function (match) { return _this.createDecoration(match); }));\n        }\n        else {\n            this.hiddenAreas = this.computeHiddenRanges(undefined, allSettingsGroups);\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n        }\n    };\n    FilteredMatchesRenderer.prototype.createDecoration = function (range) {\n        return {\n            range: range,\n            options: FilteredMatchesRenderer._FIND_MATCH\n        };\n    };\n    FilteredMatchesRenderer.prototype.computeHiddenRanges = function (filteredGroups, allSettingsGroups) {\n        // Hide the contents of hidden groups\n        var notMatchesRanges = [];\n        if (filteredGroups) {\n            allSettingsGroups.forEach(function (group, i) {\n                notMatchesRanges.push({\n                    startLineNumber: group.range.startLineNumber - 1,\n                    startColumn: group.range.startColumn,\n                    endLineNumber: group.range.endLineNumber,\n                    endColumn: group.range.endColumn\n                });\n            });\n        }\n        return notMatchesRanges;\n    };\n    FilteredMatchesRenderer.prototype.dispose = function () {\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n        _super.prototype.dispose.call(this);\n    };\n    FilteredMatchesRenderer._FIND_MATCH = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'findMatch'\n    });\n    return FilteredMatchesRenderer;\n}(lifecycle_1.Disposable));\nexports.FilteredMatchesRenderer = FilteredMatchesRenderer;\nvar HighlightMatchesRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(HighlightMatchesRenderer, _super);\n    function HighlightMatchesRenderer(editor) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.decorationIds = [];\n        return _this;\n    }\n    HighlightMatchesRenderer.prototype.render = function (matches) {\n        var _this = this;\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, matches.map(function (match) { return _this.createDecoration(match); }));\n    };\n    HighlightMatchesRenderer.prototype.createDecoration = function (range) {\n        return {\n            range: range,\n            options: HighlightMatchesRenderer._FIND_MATCH\n        };\n    };\n    HighlightMatchesRenderer.prototype.dispose = function () {\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n        _super.prototype.dispose.call(this);\n    };\n    HighlightMatchesRenderer._FIND_MATCH = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'findMatch'\n    });\n    return HighlightMatchesRenderer;\n}(lifecycle_1.Disposable));\nexports.HighlightMatchesRenderer = HighlightMatchesRenderer;\nvar EditSettingRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(EditSettingRenderer, _super);\n    function EditSettingRenderer(editor, masterSettingsModel, settingHighlighter, instantiationService, contextMenuService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.masterSettingsModel = masterSettingsModel;\n        _this.settingHighlighter = settingHighlighter;\n        _this.instantiationService = instantiationService;\n        _this.contextMenuService = contextMenuService;\n        _this.settingsGroups = [];\n        _this._onUpdateSetting = new event_1.Emitter();\n        _this.onUpdateSetting = _this._onUpdateSetting.event;\n        _this.editPreferenceWidgetForCursorPosition = _this._register(_this.instantiationService.createInstance(preferencesWidgets_1.EditPreferenceWidget, editor));\n        _this.editPreferenceWidgetForMouseMove = _this._register(_this.instantiationService.createInstance(preferencesWidgets_1.EditPreferenceWidget, editor));\n        _this.toggleEditPreferencesForMouseMoveDelayer = new async_1.Delayer(75);\n        _this._register(_this.editPreferenceWidgetForCursorPosition.onClick(function (e) { return _this.onEditSettingClicked(_this.editPreferenceWidgetForCursorPosition, e); }));\n        _this._register(_this.editPreferenceWidgetForMouseMove.onClick(function (e) { return _this.onEditSettingClicked(_this.editPreferenceWidgetForMouseMove, e); }));\n        _this._register(_this.editor.onDidChangeCursorPosition(function (positionChangeEvent) { return _this.onPositionChanged(positionChangeEvent); }));\n        _this._register(_this.editor.onMouseMove(function (mouseMoveEvent) { return _this.onMouseMoved(mouseMoveEvent); }));\n        _this._register(_this.editor.onDidChangeConfiguration(function () { return _this.onConfigurationChanged(); }));\n        return _this;\n    }\n    EditSettingRenderer.prototype.render = function (settingsGroups, associatedPreferencesModel) {\n        this.editPreferenceWidgetForCursorPosition.hide();\n        this.editPreferenceWidgetForMouseMove.hide();\n        this.settingsGroups = settingsGroups;\n        this.associatedPreferencesModel = associatedPreferencesModel;\n        var settings = this.getSettings(this.editor.getPosition().lineNumber);\n        if (settings.length) {\n            this.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n        }\n    };\n    EditSettingRenderer.prototype.isDefaultSettings = function () {\n        return this.masterSettingsModel instanceof preferencesModels_1.DefaultSettingsEditorModel;\n    };\n    EditSettingRenderer.prototype.onConfigurationChanged = function () {\n        if (!this.editor.getConfiguration().viewInfo.glyphMargin) {\n            this.editPreferenceWidgetForCursorPosition.hide();\n            this.editPreferenceWidgetForMouseMove.hide();\n        }\n    };\n    EditSettingRenderer.prototype.onPositionChanged = function (positionChangeEvent) {\n        this.editPreferenceWidgetForMouseMove.hide();\n        var settings = this.getSettings(positionChangeEvent.position.lineNumber);\n        if (settings.length) {\n            this.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n        }\n        else {\n            this.editPreferenceWidgetForCursorPosition.hide();\n        }\n    };\n    EditSettingRenderer.prototype.onMouseMoved = function (mouseMoveEvent) {\n        var _this = this;\n        var editPreferenceWidget = this.getEditPreferenceWidgetUnderMouse(mouseMoveEvent);\n        if (editPreferenceWidget) {\n            this.onMouseOver(editPreferenceWidget);\n            return;\n        }\n        this.settingHighlighter.clear();\n        this.toggleEditPreferencesForMouseMoveDelayer.trigger(function () { return _this.toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent); });\n    };\n    EditSettingRenderer.prototype.getEditPreferenceWidgetUnderMouse = function (mouseMoveEvent) {\n        if (mouseMoveEvent.target.type === editorBrowser_1.MouseTargetType.GUTTER_GLYPH_MARGIN) {\n            var line = mouseMoveEvent.target.position.lineNumber;\n            if (this.editPreferenceWidgetForMouseMove.getLine() === line && this.editPreferenceWidgetForMouseMove.isVisible()) {\n                return this.editPreferenceWidgetForMouseMove;\n            }\n            if (this.editPreferenceWidgetForCursorPosition.getLine() === line && this.editPreferenceWidgetForCursorPosition.isVisible()) {\n                return this.editPreferenceWidgetForCursorPosition;\n            }\n        }\n        return undefined;\n    };\n    EditSettingRenderer.prototype.toggleEditPreferenceWidgetForMouseMove = function (mouseMoveEvent) {\n        var settings = mouseMoveEvent.target.position ? this.getSettings(mouseMoveEvent.target.position.lineNumber) : null;\n        if (settings && settings.length) {\n            this.showEditPreferencesWidget(this.editPreferenceWidgetForMouseMove, settings);\n        }\n        else {\n            this.editPreferenceWidgetForMouseMove.hide();\n        }\n    };\n    EditSettingRenderer.prototype.showEditPreferencesWidget = function (editPreferencesWidget, settings) {\n        var line = settings[0].valueRange.startLineNumber;\n        if (this.editor.getConfiguration().viewInfo.glyphMargin && this.marginFreeFromOtherDecorations(line)) {\n            editPreferencesWidget.show(line, nls.localize('editTtile', \"Edit\"), settings);\n            var editPreferenceWidgetToHide = editPreferencesWidget === this.editPreferenceWidgetForCursorPosition ? this.editPreferenceWidgetForMouseMove : this.editPreferenceWidgetForCursorPosition;\n            editPreferenceWidgetToHide.hide();\n        }\n    };\n    EditSettingRenderer.prototype.marginFreeFromOtherDecorations = function (line) {\n        var decorations = this.editor.getLineDecorations(line);\n        if (decorations) {\n            for (var _i = 0, decorations_1 = decorations; _i < decorations_1.length; _i++) {\n                var options = decorations_1[_i].options;\n                if (options.glyphMarginClassName && options.glyphMarginClassName.indexOf(preferencesWidgets_1.EditPreferenceWidget.GLYPH_MARGIN_CLASS_NAME) === -1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    EditSettingRenderer.prototype.getSettings = function (lineNumber) {\n        var _this = this;\n        var configurationMap = this.getConfigurationsMap();\n        return this.getSettingsAtLineNumber(lineNumber).filter(function (setting) {\n            var configurationNode = configurationMap[setting.key];\n            if (configurationNode) {\n                if (_this.isDefaultSettings()) {\n                    if (setting.key === 'launch') {\n                        // Do not show because of https://github.com/Microsoft/vscode/issues/32593\n                        return false;\n                    }\n                    return true;\n                }\n                if (configurationNode.type === 'boolean' || configurationNode.enum) {\n                    if (_this.masterSettingsModel.configurationTarget !== configuration_1.ConfigurationTarget.WORKSPACE_FOLDER) {\n                        return true;\n                    }\n                    if (configurationNode.scope === configurationRegistry_1.ConfigurationScope.RESOURCE) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        });\n    };\n    EditSettingRenderer.prototype.getSettingsAtLineNumber = function (lineNumber) {\n        // index of setting, across all groups/sections\n        var index = 0;\n        var settings = [];\n        for (var _i = 0, _a = this.settingsGroups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (group.range.startLineNumber > lineNumber) {\n                break;\n            }\n            if (lineNumber >= group.range.startLineNumber && lineNumber <= group.range.endLineNumber) {\n                for (var _b = 0, _c = group.sections; _b < _c.length; _b++) {\n                    var section = _c[_b];\n                    for (var _d = 0, _e = section.settings; _d < _e.length; _d++) {\n                        var setting = _e[_d];\n                        if (setting.range.startLineNumber > lineNumber) {\n                            break;\n                        }\n                        if (lineNumber >= setting.range.startLineNumber && lineNumber <= setting.range.endLineNumber) {\n                            if (!this.isDefaultSettings() && setting.overrides.length) {\n                                // Only one level because override settings cannot have override settings\n                                for (var _f = 0, _g = setting.overrides; _f < _g.length; _f++) {\n                                    var overrideSetting = _g[_f];\n                                    if (lineNumber >= overrideSetting.range.startLineNumber && lineNumber <= overrideSetting.range.endLineNumber) {\n                                        settings.push(tslib_1.__assign({}, overrideSetting, { index: index, groupId: group.id }));\n                                    }\n                                }\n                            }\n                            else {\n                                settings.push(tslib_1.__assign({}, setting, { index: index, groupId: group.id }));\n                            }\n                        }\n                        index++;\n                    }\n                }\n            }\n        }\n        return settings;\n    };\n    EditSettingRenderer.prototype.onMouseOver = function (editPreferenceWidget) {\n        this.settingHighlighter.highlight(editPreferenceWidget.preferences[0]);\n    };\n    EditSettingRenderer.prototype.onEditSettingClicked = function (editPreferenceWidget, e) {\n        var _this = this;\n        var anchor = { x: e.event.posx, y: e.event.posy + 10 };\n        var actions = this.getSettings(editPreferenceWidget.getLine()).length === 1 ? this.getActions(editPreferenceWidget.preferences[0], this.getConfigurationsMap()[editPreferenceWidget.preferences[0].key])\n            : editPreferenceWidget.preferences.map(function (setting) { return new contextmenu_1.ContextSubMenu(setting.key, _this.getActions(setting, _this.getConfigurationsMap()[setting.key])); });\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActions: function () { return actions; }\n        });\n    };\n    EditSettingRenderer.prototype.activateOnSetting = function (setting) {\n        var _this = this;\n        var startLine = setting.keyRange.startLineNumber;\n        var settings = this.getSettings(startLine);\n        if (!settings.length) {\n            return false;\n        }\n        this.editPreferenceWidgetForMouseMove.show(startLine, '', settings);\n        var actions = this.getActions(this.editPreferenceWidgetForMouseMove.preferences[0], this.getConfigurationsMap()[this.editPreferenceWidgetForMouseMove.preferences[0].key]);\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return _this.toAbsoluteCoords(new position_1.Position(startLine, 1)); },\n            getActions: function () { return actions; }\n        });\n        return true;\n    };\n    EditSettingRenderer.prototype.toAbsoluteCoords = function (position) {\n        var positionCoords = this.editor.getScrolledVisiblePosition(position);\n        var editorCoords = dom_1.getDomNodePagePosition(this.editor.getDomNode());\n        var x = editorCoords.left + positionCoords.left;\n        var y = editorCoords.top + positionCoords.top + positionCoords.height;\n        return { x: x, y: y + 10 };\n    };\n    EditSettingRenderer.prototype.getConfigurationsMap = function () {\n        return platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration).getConfigurationProperties();\n    };\n    EditSettingRenderer.prototype.getActions = function (setting, jsonSchema) {\n        var _this = this;\n        if (jsonSchema.type === 'boolean') {\n            return [{\n                    id: 'truthyValue',\n                    label: 'true',\n                    enabled: true,\n                    run: function () { return _this.updateSetting(setting.key, true, setting); }\n                }, {\n                    id: 'falsyValue',\n                    label: 'false',\n                    enabled: true,\n                    run: function () { return _this.updateSetting(setting.key, false, setting); }\n                }];\n        }\n        if (jsonSchema.enum) {\n            return jsonSchema.enum.map(function (value) {\n                return {\n                    id: value,\n                    label: JSON.stringify(value),\n                    enabled: true,\n                    run: function () { return _this.updateSetting(setting.key, value, setting); }\n                };\n            });\n        }\n        return this.getDefaultActions(setting);\n    };\n    EditSettingRenderer.prototype.getDefaultActions = function (setting) {\n        var _this = this;\n        if (this.isDefaultSettings()) {\n            var settingInOtherModel = this.associatedPreferencesModel.getPreference(setting.key);\n            return [{\n                    id: 'setDefaultValue',\n                    label: settingInOtherModel ? nls.localize('replaceDefaultValue', \"Replace in Settings\") : nls.localize('copyDefaultValue', \"Copy to Settings\"),\n                    enabled: true,\n                    run: function () { return _this.updateSetting(setting.key, setting.value, setting); }\n                }];\n        }\n        return [];\n    };\n    EditSettingRenderer.prototype.updateSetting = function (key, value, source) {\n        this._onUpdateSetting.fire({ key: key, value: value, source: source });\n    };\n    EditSettingRenderer = tslib_1.__decorate([\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, contextView_1.IContextMenuService)\n    ], EditSettingRenderer);\n    return EditSettingRenderer;\n}(lifecycle_1.Disposable));\nvar SettingHighlighter = /** @class */ (function (_super) {\n    tslib_1.__extends(SettingHighlighter, _super);\n    function SettingHighlighter(editor, focusEventEmitter, clearFocusEventEmitter, instantiationService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.focusEventEmitter = focusEventEmitter;\n        _this.clearFocusEventEmitter = clearFocusEventEmitter;\n        _this.fixedHighlighter = _this._register(instantiationService.createInstance(rangeDecorations_1.RangeHighlightDecorations));\n        _this.volatileHighlighter = _this._register(instantiationService.createInstance(rangeDecorations_1.RangeHighlightDecorations));\n        _this.fixedHighlighter.onHighlghtRemoved(function () { return _this.clearFocusEventEmitter.fire(_this.highlightedSetting); });\n        _this.volatileHighlighter.onHighlghtRemoved(function () { return _this.clearFocusEventEmitter.fire(_this.highlightedSetting); });\n        return _this;\n    }\n    SettingHighlighter.prototype.highlight = function (setting, fix) {\n        if (fix === void 0) { fix = false; }\n        this.highlightedSetting = setting;\n        this.volatileHighlighter.removeHighlightRange();\n        this.fixedHighlighter.removeHighlightRange();\n        var highlighter = fix ? this.fixedHighlighter : this.volatileHighlighter;\n        highlighter.highlightRange({\n            range: setting.valueRange,\n            resource: this.editor.getModel().uri\n        }, this.editor);\n        this.editor.revealLineInCenterIfOutsideViewport(setting.valueRange.startLineNumber, editorCommon.ScrollType.Smooth);\n        this.focusEventEmitter.fire(setting);\n    };\n    SettingHighlighter.prototype.clear = function (fix) {\n        if (fix === void 0) { fix = false; }\n        this.volatileHighlighter.removeHighlightRange();\n        if (fix) {\n            this.fixedHighlighter.removeHighlightRange();\n        }\n        this.clearFocusEventEmitter.fire(this.highlightedSetting);\n    };\n    SettingHighlighter = tslib_1.__decorate([\n        tslib_1.__param(3, instantiation_1.IInstantiationService)\n    ], SettingHighlighter);\n    return SettingHighlighter;\n}(lifecycle_1.Disposable));\nvar WorkspaceConfigurationRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(WorkspaceConfigurationRenderer, _super);\n    function WorkspaceConfigurationRenderer(editor, workspaceSettingsEditorModel, workspaceContextService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.workspaceSettingsEditorModel = workspaceSettingsEditorModel;\n        _this.workspaceContextService = workspaceContextService;\n        _this.decorationIds = [];\n        _this.renderingDelayer = new async_1.Delayer(200);\n        _this._register(_this.editor.getModel().onDidChangeContent(function () { return _this.renderingDelayer.trigger(function () { return _this.render(_this.associatedSettingsEditorModel); }); }));\n        return _this;\n    }\n    WorkspaceConfigurationRenderer.prototype.render = function (associatedSettingsEditorModel) {\n        var _this = this;\n        this.associatedSettingsEditorModel = associatedSettingsEditorModel;\n        // Dim other configurations in workspace configuration file only in the context of Settings Editor\n        if (this.associatedSettingsEditorModel && this.workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE && this.workspaceSettingsEditorModel instanceof preferencesModels_1.WorkspaceConfigurationEditorModel) {\n            var ranges = [];\n            for (var _i = 0, _a = this.workspaceSettingsEditorModel.configurationGroups; _i < _a.length; _i++) {\n                var settingsGroup = _a[_i];\n                for (var _b = 0, _c = settingsGroup.sections; _b < _c.length; _b++) {\n                    var section = _c[_b];\n                    for (var _d = 0, _e = section.settings; _d < _e.length; _d++) {\n                        var setting = _e[_d];\n                        if (setting.key !== 'settings') {\n                            ranges.push({\n                                startLineNumber: setting.keyRange.startLineNumber,\n                                startColumn: setting.keyRange.startColumn - 1,\n                                endLineNumber: setting.valueRange.endLineNumber,\n                                endColumn: setting.valueRange.endColumn\n                            });\n                        }\n                    }\n                }\n            }\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, ranges.map(function (range) { return _this.createDecoration(range); }));\n        }\n    };\n    WorkspaceConfigurationRenderer.prototype.createDecoration = function (range) {\n        return {\n            range: range,\n            options: WorkspaceConfigurationRenderer._DIM_CONFIGURATION_\n        };\n    };\n    WorkspaceConfigurationRenderer.prototype.dispose = function () {\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n        _super.prototype.dispose.call(this);\n    };\n    WorkspaceConfigurationRenderer._DIM_CONFIGURATION_ = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        inlineClassName: 'dim-configuration'\n    });\n    WorkspaceConfigurationRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService)\n    ], WorkspaceConfigurationRenderer);\n    return WorkspaceConfigurationRenderer;\n}(lifecycle_1.Disposable));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/preferences/browser/preferencesRenderers.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ContextSubMenu } from 'vs/base/browser/contextmenu';\nimport { getDomNodePagePosition } from 'vs/base/browser/dom';\nimport { IAction } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { ICursorPositionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDeltaDecoration, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport * as nls from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationService, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationPropertySchema, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { RangeHighlightDecorations } from 'vs/workbench/browser/parts/editor/rangeDecorations';\nimport { DefaultSettingsHeaderWidget, EditPreferenceWidget, SettingsGroupTitleWidget, SettingsHeaderWidget } from 'vs/workbench/contrib/preferences/browser/preferencesWidgets';\nimport { IFilterResult, IPreferencesEditorModel, IPreferencesService, ISetting, ISettingsEditorModel, ISettingsGroup } from 'vs/workbench/services/preferences/common/preferences';\nimport { DefaultSettingsEditorModel, SettingsEditorModel, WorkspaceConfigurationEditorModel } from 'vs/workbench/services/preferences/common/preferencesModels';\n\nexport interface IPreferencesRenderer<T> extends IDisposable {\n\treadonly preferencesModel: IPreferencesEditorModel<T>;\n\n\tgetAssociatedPreferencesModel(): IPreferencesEditorModel<T>;\n\tsetAssociatedPreferencesModel(associatedPreferencesModel: IPreferencesEditorModel<T>): void;\n\n\tonFocusPreference: Event<T>;\n\tonClearFocusPreference: Event<T>;\n\tonUpdatePreference: Event<{ key: string, value: any, source: T }>;\n\n\trender(): void;\n\tupdatePreference(key: string, value: any, source: T): void;\n\tfocusPreference(setting: T): void;\n\tclearFocus(setting: T): void;\n\tfilterPreferences(filterResult: IFilterResult | undefined): void;\n\teditPreference(setting: T): boolean;\n}\n\nexport class UserSettingsRenderer extends Disposable implements IPreferencesRenderer<ISetting> {\n\n\tprivate settingHighlighter: SettingHighlighter;\n\tprivate editSettingActionRenderer: EditSettingRenderer;\n\tprivate highlightMatchesRenderer: HighlightMatchesRenderer;\n\tprivate modelChangeDelayer: Delayer<void> = new Delayer<void>(200);\n\tprivate associatedPreferencesModel: IPreferencesEditorModel<ISetting>;\n\n\tprivate readonly _onFocusPreference = new Emitter<ISetting>();\n\treadonly onFocusPreference: Event<ISetting> = this._onFocusPreference.event;\n\n\tprivate readonly _onClearFocusPreference = new Emitter<ISetting>();\n\treadonly onClearFocusPreference: Event<ISetting> = this._onClearFocusPreference.event;\n\n\tprivate readonly _onUpdatePreference: Emitter<{ key: string, value: any, source: IIndexedSetting }> = new Emitter<{ key: string, value: any, source: IIndexedSetting }>();\n\treadonly onUpdatePreference: Event<{ key: string, value: any, source: IIndexedSetting }> = this._onUpdatePreference.event;\n\n\tprivate filterResult: IFilterResult | undefined;\n\n\tconstructor(protected editor: ICodeEditor, readonly preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService protected preferencesService: IPreferencesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.settingHighlighter = this._register(instantiationService.createInstance(SettingHighlighter, editor, this._onFocusPreference, this._onClearFocusPreference));\n\t\tthis.highlightMatchesRenderer = this._register(instantiationService.createInstance(HighlightMatchesRenderer, editor));\n\t\tthis.editSettingActionRenderer = this._register(this.instantiationService.createInstance(EditSettingRenderer, this.editor, this.preferencesModel, this.settingHighlighter));\n\t\tthis._register(this.editSettingActionRenderer.onUpdateSetting(({ key, value, source }) => this._updatePreference(key, value, source)));\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.modelChangeDelayer.trigger(() => this.onModelChanged())));\n\n\t}\n\n\tgetAssociatedPreferencesModel(): IPreferencesEditorModel<ISetting> {\n\t\treturn this.associatedPreferencesModel;\n\t}\n\n\tsetAssociatedPreferencesModel(associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis.associatedPreferencesModel = associatedPreferencesModel;\n\t\tthis.editSettingActionRenderer.associatedPreferencesModel = associatedPreferencesModel;\n\n\t\t// Create header only in Settings editor mode\n\t\tthis.createHeader();\n\t}\n\n\tprotected createHeader(): void {\n\t\tthis._register(new SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyUserSettingsHeader', \"Place your settings here to override the Default Settings.\"));\n\t}\n\n\trender(): void {\n\t\tthis.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this.associatedPreferencesModel);\n\t\tif (this.filterResult) {\n\t\t\tthis.filterPreferences(this.filterResult);\n\t\t}\n\t}\n\n\tprivate _updatePreference(key: string, value: any, source: IIndexedSetting): void {\n\t\tthis._onUpdatePreference.fire({ key, value, source });\n\t\tthis.updatePreference(key, value, source);\n\t}\n\n\tupdatePreference(key: string, value: any, source: IIndexedSetting): void {\n\t\tconst overrideIdentifier = source.overrideOf ? overrideIdentifierFromKey(source.overrideOf.key) : null;\n\t\tconst resource = this.preferencesModel.uri;\n\t\tthis.configurationService.updateValue(key, value, { overrideIdentifier, resource }, this.preferencesModel.configurationTarget)\n\t\t\t.then(() => this.onSettingUpdated(source));\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tif (!this.editor.hasModel()) {\n\t\t\t// model could have been disposed during the delay\n\t\t\treturn;\n\t\t}\n\t\tthis.render();\n\t}\n\n\tprivate onSettingUpdated(setting: ISetting) {\n\t\tthis.editor.focus();\n\t\tsetting = this.getSetting(setting)!;\n\t\tif (setting) {\n\t\t\t// TODO:@sandy Selection range should be template range\n\t\t\tthis.editor.setSelection(setting.valueRange);\n\t\t\tthis.settingHighlighter.highlight(setting, true);\n\t\t}\n\t}\n\n\tprivate getSetting(setting: ISetting): ISetting | undefined {\n\t\tconst { key, overrideOf } = setting;\n\t\tif (overrideOf) {\n\t\t\tconst setting = this.getSetting(overrideOf);\n\t\t\tfor (const override of setting!.overrides!) {\n\t\t\t\tif (override.key === key) {\n\t\t\t\t\treturn override;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.preferencesModel.getPreference(key);\n\t}\n\n\tfilterPreferences(filterResult: IFilterResult | undefined): void {\n\t\tthis.filterResult = filterResult;\n\t\tthis.settingHighlighter.clear(true);\n\t\tthis.highlightMatchesRenderer.render(filterResult ? filterResult.matches : []);\n\t}\n\n\tfocusPreference(setting: ISetting): void {\n\t\tconst s = this.getSetting(setting);\n\t\tif (s) {\n\t\t\tthis.settingHighlighter.highlight(s, true);\n\t\t\tthis.editor.setPosition({ lineNumber: s.keyRange.startLineNumber, column: s.keyRange.startColumn });\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t}\n\t}\n\n\tclearFocus(setting: ISetting): void {\n\t\tthis.settingHighlighter.clear(true);\n\t}\n\n\teditPreference(setting: ISetting): boolean {\n\t\tconst editableSetting = this.getSetting(setting);\n\t\treturn !!(editableSetting && this.editSettingActionRenderer.activateOnSetting(editableSetting));\n\t}\n}\n\nexport class WorkspaceSettingsRenderer extends UserSettingsRenderer implements IPreferencesRenderer<ISetting> {\n\n\tprivate workspaceConfigurationRenderer: WorkspaceConfigurationRenderer;\n\n\tconstructor(editor: ICodeEditor, preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, preferencesModel, preferencesService, configurationService, instantiationService);\n\t\tthis.workspaceConfigurationRenderer = this._register(instantiationService.createInstance(WorkspaceConfigurationRenderer, editor, preferencesModel));\n\t}\n\n\tprotected createHeader(): void {\n\t\tthis._register(new SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyWorkspaceSettingsHeader', \"Place your settings here to override the User Settings.\"));\n\t}\n\n\tsetAssociatedPreferencesModel(associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tsuper.setAssociatedPreferencesModel(associatedPreferencesModel);\n\t\tthis.workspaceConfigurationRenderer.render(this.getAssociatedPreferencesModel());\n\t}\n\n\trender(): void {\n\t\tsuper.render();\n\t\tthis.workspaceConfigurationRenderer.render(this.getAssociatedPreferencesModel());\n\t}\n}\n\nexport class FolderSettingsRenderer extends UserSettingsRenderer implements IPreferencesRenderer<ISetting> {\n\n\tconstructor(editor: ICodeEditor, preferencesModel: SettingsEditorModel,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(editor, preferencesModel, preferencesService, configurationService, instantiationService);\n\t}\n\n\tprotected createHeader(): void {\n\t\tthis._register(new SettingsHeaderWidget(this.editor, '')).setMessage(nls.localize('emptyFolderSettingsHeader', \"Place your folder settings here to override those from the Workspace Settings.\"));\n\t}\n\n}\n\nexport class DefaultSettingsRenderer extends Disposable implements IPreferencesRenderer<ISetting> {\n\n\tprivate _associatedPreferencesModel: IPreferencesEditorModel<ISetting>;\n\tprivate settingHighlighter: SettingHighlighter;\n\tprivate settingsHeaderRenderer: DefaultSettingsHeaderRenderer;\n\tprivate settingsGroupTitleRenderer: SettingsGroupTitleRenderer;\n\tprivate filteredMatchesRenderer: FilteredMatchesRenderer;\n\tprivate hiddenAreasRenderer: HiddenAreasRenderer;\n\tprivate editSettingActionRenderer: EditSettingRenderer;\n\tprivate bracesHidingRenderer: BracesHidingRenderer;\n\tprivate filterResult: IFilterResult | undefined;\n\n\tprivate readonly _onUpdatePreference: Emitter<{ key: string, value: any, source: IIndexedSetting }> = new Emitter<{ key: string, value: any, source: IIndexedSetting }>();\n\treadonly onUpdatePreference: Event<{ key: string, value: any, source: IIndexedSetting }> = this._onUpdatePreference.event;\n\n\tprivate readonly _onFocusPreference = new Emitter<ISetting>();\n\treadonly onFocusPreference: Event<ISetting> = this._onFocusPreference.event;\n\n\tprivate readonly _onClearFocusPreference = new Emitter<ISetting>();\n\treadonly onClearFocusPreference: Event<ISetting> = this._onClearFocusPreference.event;\n\n\tconstructor(protected editor: ICodeEditor, readonly preferencesModel: DefaultSettingsEditorModel,\n\t\t@IPreferencesService protected preferencesService: IPreferencesService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.settingHighlighter = this._register(instantiationService.createInstance(SettingHighlighter, editor, this._onFocusPreference, this._onClearFocusPreference));\n\t\tthis.settingsHeaderRenderer = this._register(instantiationService.createInstance(DefaultSettingsHeaderRenderer, editor));\n\t\tthis.settingsGroupTitleRenderer = this._register(instantiationService.createInstance(SettingsGroupTitleRenderer, editor));\n\t\tthis.filteredMatchesRenderer = this._register(instantiationService.createInstance(FilteredMatchesRenderer, editor));\n\t\tthis.editSettingActionRenderer = this._register(instantiationService.createInstance(EditSettingRenderer, editor, preferencesModel, this.settingHighlighter));\n\t\tthis.bracesHidingRenderer = this._register(instantiationService.createInstance(BracesHidingRenderer, editor, preferencesModel));\n\t\tthis.hiddenAreasRenderer = this._register(instantiationService.createInstance(HiddenAreasRenderer, editor, [this.settingsGroupTitleRenderer, this.filteredMatchesRenderer, this.bracesHidingRenderer]));\n\n\t\tthis._register(this.editSettingActionRenderer.onUpdateSetting(e => this._onUpdatePreference.fire(e)));\n\t\tthis._register(this.settingsGroupTitleRenderer.onHiddenAreasChanged(() => this.hiddenAreasRenderer.render()));\n\t\tthis._register(preferencesModel.onDidChangeGroups(() => this.render()));\n\t}\n\n\tgetAssociatedPreferencesModel(): IPreferencesEditorModel<ISetting> {\n\t\treturn this._associatedPreferencesModel;\n\t}\n\n\tsetAssociatedPreferencesModel(associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis._associatedPreferencesModel = associatedPreferencesModel;\n\t\tthis.editSettingActionRenderer.associatedPreferencesModel = associatedPreferencesModel;\n\t}\n\n\trender() {\n\t\tthis.settingsGroupTitleRenderer.render(this.preferencesModel.settingsGroups);\n\t\tthis.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this._associatedPreferencesModel);\n\t\tthis.settingHighlighter.clear(true);\n\t\tthis.bracesHidingRenderer.render(undefined, this.preferencesModel.settingsGroups);\n\t\tthis.settingsGroupTitleRenderer.showGroup(0);\n\t\tthis.hiddenAreasRenderer.render();\n\t}\n\n\tfilterPreferences(filterResult: IFilterResult | undefined): void {\n\t\tthis.filterResult = filterResult;\n\n\t\tif (filterResult) {\n\t\t\tthis.filteredMatchesRenderer.render(filterResult, this.preferencesModel.settingsGroups);\n\t\t\tthis.settingsGroupTitleRenderer.render(undefined);\n\t\t\tthis.settingsHeaderRenderer.render(filterResult);\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t\tthis.bracesHidingRenderer.render(filterResult, this.preferencesModel.settingsGroups);\n\t\t\tthis.editSettingActionRenderer.render(filterResult.filteredGroups, this._associatedPreferencesModel);\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t\tthis.filteredMatchesRenderer.render(undefined, this.preferencesModel.settingsGroups);\n\t\t\tthis.settingsHeaderRenderer.render(undefined);\n\t\t\tthis.settingsGroupTitleRenderer.render(this.preferencesModel.settingsGroups);\n\t\t\tthis.settingsGroupTitleRenderer.showGroup(0);\n\t\t\tthis.bracesHidingRenderer.render(undefined, this.preferencesModel.settingsGroups);\n\t\t\tthis.editSettingActionRenderer.render(this.preferencesModel.settingsGroups, this._associatedPreferencesModel);\n\t\t}\n\n\t\tthis.hiddenAreasRenderer.render();\n\t}\n\n\tfocusPreference(s: ISetting): void {\n\t\tconst setting = this.getSetting(s);\n\t\tif (setting) {\n\t\t\tthis.settingsGroupTitleRenderer.showSetting(setting);\n\t\t\tthis.settingHighlighter.highlight(setting, true);\n\t\t} else {\n\t\t\tthis.settingHighlighter.clear(true);\n\t\t}\n\t}\n\n\tprivate getSetting(setting: ISetting): ISetting | undefined {\n\t\tconst { key, overrideOf } = setting;\n\t\tif (overrideOf) {\n\t\t\tconst setting = this.getSetting(overrideOf);\n\t\t\tfor (const override of setting!.overrides!) {\n\t\t\t\tif (override.key === key) {\n\t\t\t\t\treturn override;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\tconst settingsGroups = this.filterResult ? this.filterResult.filteredGroups : this.preferencesModel.settingsGroups;\n\t\treturn this.getPreference(key, settingsGroups);\n\t}\n\n\tprivate getPreference(key: string, settingsGroups: ISettingsGroup[]): ISetting | undefined {\n\t\tfor (const group of settingsGroups) {\n\t\t\tfor (const section of group.sections) {\n\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\tif (setting.key === key) {\n\t\t\t\t\t\treturn setting;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tclearFocus(setting: ISetting): void {\n\t\tthis.settingHighlighter.clear(true);\n\t}\n\n\tupdatePreference(key: string, value: any, source: ISetting): void {\n\t}\n\n\teditPreference(setting: ISetting): boolean {\n\t\treturn this.editSettingActionRenderer.activateOnSetting(setting);\n\t}\n}\n\nexport interface HiddenAreasProvider {\n\thiddenAreas: IRange[];\n}\n\nexport class BracesHidingRenderer extends Disposable implements HiddenAreasProvider {\n\tprivate _result: IFilterResult | undefined;\n\tprivate _settingsGroups: ISettingsGroup[];\n\n\tconstructor(private editor: ICodeEditor) {\n\t\tsuper();\n\t}\n\n\trender(result: IFilterResult | undefined, settingsGroups: ISettingsGroup[]): void {\n\t\tthis._result = result;\n\t\tthis._settingsGroups = settingsGroups;\n\t}\n\n\tget hiddenAreas(): IRange[] {\n\t\t// Opening square brace\n\t\tconst hiddenAreas = [\n\t\t\t{\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 2,\n\t\t\t\tendColumn: 1\n\t\t\t}\n\t\t];\n\n\t\tconst hideBraces = (group: ISettingsGroup, hideExtraLine?: boolean) => {\n\t\t\t// Opening curly brace\n\t\t\thiddenAreas.push({\n\t\t\t\tstartLineNumber: group.range.startLineNumber - 3,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: group.range.startLineNumber - (hideExtraLine ? 1 : 3),\n\t\t\t\tendColumn: 1\n\t\t\t});\n\n\t\t\t// Closing curly brace\n\t\t\thiddenAreas.push({\n\t\t\t\tstartLineNumber: group.range.endLineNumber + 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: group.range.endLineNumber + 4,\n\t\t\t\tendColumn: 1\n\t\t\t});\n\t\t};\n\n\t\tthis._settingsGroups.forEach(g => hideBraces(g));\n\t\tif (this._result) {\n\t\t\tthis._result.filteredGroups.forEach((g, i) => hideBraces(g, true));\n\t\t}\n\n\t\t// Closing square brace\n\t\tconst lineCount = this.editor.getModel()!.getLineCount();\n\t\thiddenAreas.push({\n\t\t\tstartLineNumber: lineCount,\n\t\t\tstartColumn: 1,\n\t\t\tendLineNumber: lineCount,\n\t\t\tendColumn: 1\n\t\t});\n\n\n\t\treturn hiddenAreas;\n\t}\n\n}\n\nclass DefaultSettingsHeaderRenderer extends Disposable {\n\n\tprivate settingsHeaderWidget: DefaultSettingsHeaderWidget;\n\treadonly onClick: Event<void>;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper();\n\t\tthis.settingsHeaderWidget = this._register(new DefaultSettingsHeaderWidget(editor, ''));\n\t\tthis.onClick = this.settingsHeaderWidget.onClick;\n\t}\n\n\trender(filterResult: IFilterResult | undefined) {\n\t\tconst hasSettings = !filterResult || filterResult.filteredGroups.length > 0;\n\t\tthis.settingsHeaderWidget.toggleMessage(hasSettings);\n\t}\n}\n\nexport class SettingsGroupTitleRenderer extends Disposable implements HiddenAreasProvider {\n\n\tprivate readonly _onHiddenAreasChanged = new Emitter<void>();\n\tget onHiddenAreasChanged(): Event<void> { return this._onHiddenAreasChanged.event; }\n\n\tprivate settingsGroups: ISettingsGroup[];\n\tprivate hiddenGroups: ISettingsGroup[] = [];\n\tprivate settingsGroupTitleWidgets: SettingsGroupTitleWidget[];\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(private editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t}\n\n\tget hiddenAreas(): IRange[] {\n\t\tconst hiddenAreas: IRange[] = [];\n\t\tfor (const group of this.hiddenGroups) {\n\t\t\thiddenAreas.push(group.range);\n\t\t}\n\t\treturn hiddenAreas;\n\t}\n\n\trender(settingsGroups: ISettingsGroup[] | undefined) {\n\t\tthis.disposeWidgets();\n\t\tif (!settingsGroups) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.settingsGroups = settingsGroups.slice();\n\t\tthis.settingsGroupTitleWidgets = [];\n\t\tfor (const group of this.settingsGroups.slice().reverse()) {\n\t\t\tif (group.sections.every(sect => sect.settings.length === 0)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst settingsGroupTitleWidget = this.instantiationService.createInstance(SettingsGroupTitleWidget, this.editor, group);\n\t\t\tsettingsGroupTitleWidget.render();\n\t\t\tthis.settingsGroupTitleWidgets.push(settingsGroupTitleWidget);\n\t\t\tthis.disposables.push(settingsGroupTitleWidget);\n\t\t\tthis.disposables.push(settingsGroupTitleWidget.onToggled(collapsed => this.onToggled(collapsed, settingsGroupTitleWidget.settingsGroup)));\n\t\t}\n\t\tthis.settingsGroupTitleWidgets.reverse();\n\t}\n\n\tshowGroup(groupIdx: number) {\n\t\tconst shownGroup = this.settingsGroupTitleWidgets[groupIdx].settingsGroup;\n\n\t\tthis.hiddenGroups = this.settingsGroups.filter(g => g !== shownGroup);\n\t\tfor (const groupTitleWidget of this.settingsGroupTitleWidgets.filter(widget => widget.settingsGroup !== shownGroup)) {\n\t\t\tgroupTitleWidget.toggleCollapse(true);\n\t\t}\n\t\tthis._onHiddenAreasChanged.fire();\n\t}\n\n\tshowSetting(setting: ISetting): void {\n\t\tconst settingsGroupTitleWidget = this.settingsGroupTitleWidgets.filter(widget => Range.containsRange(widget.settingsGroup.range, setting.range))[0];\n\t\tif (settingsGroupTitleWidget && settingsGroupTitleWidget.isCollapsed()) {\n\t\t\tsettingsGroupTitleWidget.toggleCollapse(false);\n\t\t\tthis.hiddenGroups.splice(this.hiddenGroups.indexOf(settingsGroupTitleWidget.settingsGroup), 1);\n\t\t\tthis._onHiddenAreasChanged.fire();\n\t\t}\n\t}\n\n\tprivate onToggled(collapsed: boolean, group: ISettingsGroup) {\n\t\tconst index = this.hiddenGroups.indexOf(group);\n\t\tif (collapsed) {\n\t\t\tconst currentPosition = this.editor.getPosition();\n\t\t\tif (group.range.startLineNumber <= currentPosition!.lineNumber && group.range.endLineNumber >= currentPosition!.lineNumber) {\n\t\t\t\tthis.editor.setPosition({ lineNumber: group.range.startLineNumber - 1, column: 1 });\n\t\t\t}\n\t\t\tthis.hiddenGroups.push(group);\n\t\t} else {\n\t\t\tthis.hiddenGroups.splice(index, 1);\n\t\t}\n\t\tthis._onHiddenAreasChanged.fire();\n\t}\n\n\tprivate disposeWidgets() {\n\t\tthis.hiddenGroups = [];\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n\n\tdispose() {\n\t\tthis.disposeWidgets();\n\t\tsuper.dispose();\n\t}\n}\n\nexport class HiddenAreasRenderer extends Disposable {\n\n\tconstructor(private editor: ICodeEditor, private hiddenAreasProviders: HiddenAreasProvider[]\n\t) {\n\t\tsuper();\n\t}\n\n\trender() {\n\t\tconst ranges: IRange[] = [];\n\t\tfor (const hiddenAreaProvider of this.hiddenAreasProviders) {\n\t\t\tranges.push(...hiddenAreaProvider.hiddenAreas);\n\t\t}\n\t\tthis.editor.setHiddenAreas(ranges);\n\t}\n\n\tdispose() {\n\t\tthis.editor.setHiddenAreas([]);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class FilteredMatchesRenderer extends Disposable implements HiddenAreasProvider {\n\n\tprivate decorationIds: string[] = [];\n\thiddenAreas: IRange[] = [];\n\n\tconstructor(private editor: ICodeEditor\n\t) {\n\t\tsuper();\n\t}\n\n\trender(result: IFilterResult | undefined, allSettingsGroups: ISettingsGroup[]): void {\n\t\tthis.hiddenAreas = [];\n\t\tif (result) {\n\t\t\tthis.hiddenAreas = this.computeHiddenRanges(result.filteredGroups, result.allGroups);\n\t\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, result.matches.map(match => this.createDecoration(match)));\n\t\t} else {\n\t\t\tthis.hiddenAreas = this.computeHiddenRanges(undefined, allSettingsGroups);\n\t\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n\t\t}\n\t}\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: FilteredMatchesRenderer._FIND_MATCH\n\t\t};\n\t}\n\n\tprivate static readonly _FIND_MATCH = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch'\n\t});\n\n\tprivate computeHiddenRanges(filteredGroups: ISettingsGroup[] | undefined, allSettingsGroups: ISettingsGroup[]): IRange[] {\n\t\t// Hide the contents of hidden groups\n\t\tconst notMatchesRanges: IRange[] = [];\n\t\tif (filteredGroups) {\n\t\t\tallSettingsGroups.forEach((group, i) => {\n\t\t\t\tnotMatchesRanges.push({\n\t\t\t\t\tstartLineNumber: group.range.startLineNumber - 1,\n\t\t\t\t\tstartColumn: group.range.startColumn,\n\t\t\t\t\tendLineNumber: group.range.endLineNumber,\n\t\t\t\t\tendColumn: group.range.endColumn\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn notMatchesRanges;\n\t}\n\n\tdispose() {\n\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class HighlightMatchesRenderer extends Disposable {\n\n\tprivate decorationIds: string[] = [];\n\n\tconstructor(private editor: ICodeEditor\n\t) {\n\t\tsuper();\n\t}\n\n\trender(matches: IRange[]): void {\n\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, matches.map(match => this.createDecoration(match)));\n\t}\n\n\tprivate static readonly _FIND_MATCH = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'findMatch'\n\t});\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: HighlightMatchesRenderer._FIND_MATCH\n\t\t};\n\t}\n\n\tdispose() {\n\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IIndexedSetting extends ISetting {\n\tindex: number;\n\tgroupId: string;\n}\n\nclass EditSettingRenderer extends Disposable {\n\n\tprivate editPreferenceWidgetForCursorPosition: EditPreferenceWidget<IIndexedSetting>;\n\tprivate editPreferenceWidgetForMouseMove: EditPreferenceWidget<IIndexedSetting>;\n\n\tprivate settingsGroups: ISettingsGroup[] = [];\n\tassociatedPreferencesModel: IPreferencesEditorModel<ISetting>;\n\tprivate toggleEditPreferencesForMouseMoveDelayer: Delayer<void>;\n\n\tprivate readonly _onUpdateSetting: Emitter<{ key: string, value: any, source: IIndexedSetting }> = new Emitter<{ key: string, value: any, source: IIndexedSetting }>();\n\treadonly onUpdateSetting: Event<{ key: string, value: any, source: IIndexedSetting }> = this._onUpdateSetting.event;\n\n\tconstructor(private editor: ICodeEditor, private masterSettingsModel: ISettingsEditorModel,\n\t\tprivate settingHighlighter: SettingHighlighter,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper();\n\n\t\tthis.editPreferenceWidgetForCursorPosition = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.editPreferenceWidgetForMouseMove = <EditPreferenceWidget<IIndexedSetting>>this._register(this.instantiationService.createInstance(EditPreferenceWidget, editor));\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer = new Delayer<void>(75);\n\n\t\tthis._register(this.editPreferenceWidgetForCursorPosition.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForCursorPosition, e)));\n\t\tthis._register(this.editPreferenceWidgetForMouseMove.onClick(e => this.onEditSettingClicked(this.editPreferenceWidgetForMouseMove, e)));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(positionChangeEvent => this.onPositionChanged(positionChangeEvent)));\n\t\tthis._register(this.editor.onMouseMove(mouseMoveEvent => this.onMouseMoved(mouseMoveEvent)));\n\t\tthis._register(this.editor.onDidChangeConfiguration(() => this.onConfigurationChanged()));\n\t}\n\n\trender(settingsGroups: ISettingsGroup[], associatedPreferencesModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tthis.settingsGroups = settingsGroups;\n\t\tthis.associatedPreferencesModel = associatedPreferencesModel;\n\n\t\tconst settings = this.getSettings(this.editor.getPosition()!.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t}\n\t}\n\n\tprivate isDefaultSettings(): boolean {\n\t\treturn this.masterSettingsModel instanceof DefaultSettingsEditorModel;\n\t}\n\n\tprivate onConfigurationChanged(): void {\n\t\tif (!this.editor.getConfiguration().viewInfo.glyphMargin) {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate onPositionChanged(positionChangeEvent: ICursorPositionChangedEvent) {\n\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\tconst settings = this.getSettings(positionChangeEvent.position.lineNumber);\n\t\tif (settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForCursorPosition, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForCursorPosition.hide();\n\t\t}\n\t}\n\n\tprivate onMouseMoved(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst editPreferenceWidget = this.getEditPreferenceWidgetUnderMouse(mouseMoveEvent);\n\t\tif (editPreferenceWidget) {\n\t\t\tthis.onMouseOver(editPreferenceWidget);\n\t\t\treturn;\n\t\t}\n\t\tthis.settingHighlighter.clear();\n\t\tthis.toggleEditPreferencesForMouseMoveDelayer.trigger(() => this.toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent));\n\t}\n\n\tprivate getEditPreferenceWidgetUnderMouse(mouseMoveEvent: IEditorMouseEvent): EditPreferenceWidget<ISetting> | undefined {\n\t\tif (mouseMoveEvent.target.type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\tconst line = mouseMoveEvent.target.position!.lineNumber;\n\t\t\tif (this.editPreferenceWidgetForMouseMove.getLine() === line && this.editPreferenceWidgetForMouseMove.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForMouseMove;\n\t\t\t}\n\t\t\tif (this.editPreferenceWidgetForCursorPosition.getLine() === line && this.editPreferenceWidgetForCursorPosition.isVisible()) {\n\t\t\t\treturn this.editPreferenceWidgetForCursorPosition;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate toggleEditPreferenceWidgetForMouseMove(mouseMoveEvent: IEditorMouseEvent): void {\n\t\tconst settings = mouseMoveEvent.target.position ? this.getSettings(mouseMoveEvent.target.position.lineNumber) : null;\n\t\tif (settings && settings.length) {\n\t\t\tthis.showEditPreferencesWidget(this.editPreferenceWidgetForMouseMove, settings);\n\t\t} else {\n\t\t\tthis.editPreferenceWidgetForMouseMove.hide();\n\t\t}\n\t}\n\n\tprivate showEditPreferencesWidget(editPreferencesWidget: EditPreferenceWidget<ISetting>, settings: IIndexedSetting[]) {\n\t\tconst line = settings[0].valueRange.startLineNumber;\n\t\tif (this.editor.getConfiguration().viewInfo.glyphMargin && this.marginFreeFromOtherDecorations(line)) {\n\t\t\teditPreferencesWidget.show(line, nls.localize('editTtile', \"Edit\"), settings);\n\t\t\tconst editPreferenceWidgetToHide = editPreferencesWidget === this.editPreferenceWidgetForCursorPosition ? this.editPreferenceWidgetForMouseMove : this.editPreferenceWidgetForCursorPosition;\n\t\t\teditPreferenceWidgetToHide.hide();\n\t\t}\n\t}\n\n\tprivate marginFreeFromOtherDecorations(line: number): boolean {\n\t\tconst decorations = this.editor.getLineDecorations(line);\n\t\tif (decorations) {\n\t\t\tfor (const { options } of decorations) {\n\t\t\t\tif (options.glyphMarginClassName && options.glyphMarginClassName.indexOf(EditPreferenceWidget.GLYPH_MARGIN_CLASS_NAME) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate getSettings(lineNumber: number): IIndexedSetting[] {\n\t\tconst configurationMap = this.getConfigurationsMap();\n\t\treturn this.getSettingsAtLineNumber(lineNumber).filter(setting => {\n\t\t\tconst configurationNode = configurationMap[setting.key];\n\t\t\tif (configurationNode) {\n\t\t\t\tif (this.isDefaultSettings()) {\n\t\t\t\t\tif (setting.key === 'launch') {\n\t\t\t\t\t\t// Do not show because of https://github.com/Microsoft/vscode/issues/32593\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (configurationNode.type === 'boolean' || configurationNode.enum) {\n\t\t\t\t\tif ((<SettingsEditorModel>this.masterSettingsModel).configurationTarget !== ConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (configurationNode.scope === ConfigurationScope.RESOURCE) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate getSettingsAtLineNumber(lineNumber: number): IIndexedSetting[] {\n\t\t// index of setting, across all groups/sections\n\t\tlet index = 0;\n\n\t\tconst settings: IIndexedSetting[] = [];\n\t\tfor (const group of this.settingsGroups) {\n\t\t\tif (group.range.startLineNumber > lineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineNumber >= group.range.startLineNumber && lineNumber <= group.range.endLineNumber) {\n\t\t\t\tfor (const section of group.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (setting.range.startLineNumber > lineNumber) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (lineNumber >= setting.range.startLineNumber && lineNumber <= setting.range.endLineNumber) {\n\t\t\t\t\t\t\tif (!this.isDefaultSettings() && setting.overrides!.length) {\n\t\t\t\t\t\t\t\t// Only one level because override settings cannot have override settings\n\t\t\t\t\t\t\t\tfor (const overrideSetting of setting.overrides!) {\n\t\t\t\t\t\t\t\t\tif (lineNumber >= overrideSetting.range.startLineNumber && lineNumber <= overrideSetting.range.endLineNumber) {\n\t\t\t\t\t\t\t\t\t\tsettings.push({ ...overrideSetting, index, groupId: group.id });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsettings.push({ ...setting, index, groupId: group.id });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tprivate onMouseOver(editPreferenceWidget: EditPreferenceWidget<ISetting>): void {\n\t\tthis.settingHighlighter.highlight(editPreferenceWidget.preferences[0]);\n\t}\n\n\tprivate onEditSettingClicked(editPreferenceWidget: EditPreferenceWidget<IIndexedSetting>, e: IEditorMouseEvent): void {\n\t\tconst anchor = { x: e.event.posx, y: e.event.posy + 10 };\n\t\tconst actions = this.getSettings(editPreferenceWidget.getLine()).length === 1 ? this.getActions(editPreferenceWidget.preferences[0], this.getConfigurationsMap()[editPreferenceWidget.preferences[0].key])\n\t\t\t: editPreferenceWidget.preferences.map(setting => new ContextSubMenu(setting.key, this.getActions(setting, this.getConfigurationsMap()[setting.key])));\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\tactivateOnSetting(setting: ISetting): boolean {\n\t\tconst startLine = setting.keyRange.startLineNumber;\n\t\tconst settings = this.getSettings(startLine);\n\t\tif (!settings.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.editPreferenceWidgetForMouseMove.show(startLine, '', settings);\n\t\tconst actions = this.getActions(this.editPreferenceWidgetForMouseMove.preferences[0], this.getConfigurationsMap()[this.editPreferenceWidgetForMouseMove.preferences[0].key]);\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => this.toAbsoluteCoords(new Position(startLine, 1)),\n\t\t\tgetActions: () => actions\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tprivate toAbsoluteCoords(position: Position): { x: number, y: number } {\n\t\tconst positionCoords = this.editor.getScrolledVisiblePosition(position);\n\t\tconst editorCoords = getDomNodePagePosition(this.editor.getDomNode()!);\n\t\tconst x = editorCoords.left + positionCoords!.left;\n\t\tconst y = editorCoords.top + positionCoords!.top + positionCoords!.height;\n\n\t\treturn { x, y: y + 10 };\n\t}\n\n\tprivate getConfigurationsMap(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t}\n\n\tprivate getActions(setting: IIndexedSetting, jsonSchema: IJSONSchema): IAction[] {\n\t\tif (jsonSchema.type === 'boolean') {\n\t\t\treturn [<IAction>{\n\t\t\t\tid: 'truthyValue',\n\t\t\t\tlabel: 'true',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, true, setting)\n\t\t\t}, <IAction>{\n\t\t\t\tid: 'falsyValue',\n\t\t\t\tlabel: 'false',\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, false, setting)\n\t\t\t}];\n\t\t}\n\t\tif (jsonSchema.enum) {\n\t\t\treturn jsonSchema.enum.map(value => {\n\t\t\t\treturn <IAction>{\n\t\t\t\t\tid: value,\n\t\t\t\t\tlabel: JSON.stringify(value),\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => this.updateSetting(setting.key, value, setting)\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn this.getDefaultActions(setting);\n\t}\n\n\tprivate getDefaultActions(setting: IIndexedSetting): IAction[] {\n\t\tif (this.isDefaultSettings()) {\n\t\t\tconst settingInOtherModel = this.associatedPreferencesModel.getPreference(setting.key);\n\t\t\treturn [<IAction>{\n\t\t\t\tid: 'setDefaultValue',\n\t\t\t\tlabel: settingInOtherModel ? nls.localize('replaceDefaultValue', \"Replace in Settings\") : nls.localize('copyDefaultValue', \"Copy to Settings\"),\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this.updateSetting(setting.key, setting.value, setting)\n\t\t\t}];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate updateSetting(key: string, value: any, source: IIndexedSetting): void {\n\t\tthis._onUpdateSetting.fire({ key, value, source });\n\t}\n}\n\nclass SettingHighlighter extends Disposable {\n\n\tprivate fixedHighlighter: RangeHighlightDecorations;\n\tprivate volatileHighlighter: RangeHighlightDecorations;\n\tprivate highlightedSetting: ISetting;\n\n\tconstructor(private editor: ICodeEditor, private readonly focusEventEmitter: Emitter<ISetting>, private readonly clearFocusEventEmitter: Emitter<ISetting>,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis.fixedHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t\tthis.volatileHighlighter = this._register(instantiationService.createInstance(RangeHighlightDecorations));\n\t\tthis.fixedHighlighter.onHighlghtRemoved(() => this.clearFocusEventEmitter.fire(this.highlightedSetting));\n\t\tthis.volatileHighlighter.onHighlghtRemoved(() => this.clearFocusEventEmitter.fire(this.highlightedSetting));\n\t}\n\n\thighlight(setting: ISetting, fix: boolean = false) {\n\t\tthis.highlightedSetting = setting;\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tthis.fixedHighlighter.removeHighlightRange();\n\n\t\tconst highlighter = fix ? this.fixedHighlighter : this.volatileHighlighter;\n\t\thighlighter.highlightRange({\n\t\t\trange: setting.valueRange,\n\t\t\tresource: this.editor.getModel()!.uri\n\t\t}, this.editor);\n\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(setting.valueRange.startLineNumber, editorCommon.ScrollType.Smooth);\n\t\tthis.focusEventEmitter.fire(setting);\n\t}\n\n\tclear(fix: boolean = false): void {\n\t\tthis.volatileHighlighter.removeHighlightRange();\n\t\tif (fix) {\n\t\t\tthis.fixedHighlighter.removeHighlightRange();\n\t\t}\n\t\tthis.clearFocusEventEmitter.fire(this.highlightedSetting);\n\t}\n}\n\nclass WorkspaceConfigurationRenderer extends Disposable {\n\n\tprivate decorationIds: string[] = [];\n\tprivate associatedSettingsEditorModel: IPreferencesEditorModel<ISetting>;\n\tprivate renderingDelayer: Delayer<void> = new Delayer<void>(200);\n\n\tconstructor(private editor: ICodeEditor, private workspaceSettingsEditorModel: SettingsEditorModel,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.editor.getModel()!.onDidChangeContent(() => this.renderingDelayer.trigger(() => this.render(this.associatedSettingsEditorModel))));\n\t}\n\n\trender(associatedSettingsEditorModel: IPreferencesEditorModel<ISetting>): void {\n\t\tthis.associatedSettingsEditorModel = associatedSettingsEditorModel;\n\t\t// Dim other configurations in workspace configuration file only in the context of Settings Editor\n\t\tif (this.associatedSettingsEditorModel && this.workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE && this.workspaceSettingsEditorModel instanceof WorkspaceConfigurationEditorModel) {\n\t\t\tconst ranges: IRange[] = [];\n\t\t\tfor (const settingsGroup of this.workspaceSettingsEditorModel.configurationGroups) {\n\t\t\t\tfor (const section of settingsGroup.sections) {\n\t\t\t\t\tfor (const setting of section.settings) {\n\t\t\t\t\t\tif (setting.key !== 'settings') {\n\t\t\t\t\t\t\tranges.push({\n\t\t\t\t\t\t\t\tstartLineNumber: setting.keyRange.startLineNumber,\n\t\t\t\t\t\t\t\tstartColumn: setting.keyRange.startColumn - 1,\n\t\t\t\t\t\t\t\tendLineNumber: setting.valueRange.endLineNumber,\n\t\t\t\t\t\t\t\tendColumn: setting.valueRange.endColumn\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, ranges.map(range => this.createDecoration(range)));\n\t\t}\n\t}\n\n\tprivate static readonly _DIM_CONFIGURATION_ = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tinlineClassName: 'dim-configuration'\n\t});\n\n\tprivate createDecoration(range: IRange): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange,\n\t\t\toptions: WorkspaceConfigurationRenderer._DIM_CONFIGURATION_\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis.decorationIds = this.editor.deltaDecorations(this.decorationIds, []);\n\t\tsuper.dispose();\n\t}\n}\n"]}]}