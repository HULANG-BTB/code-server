{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/history.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/history.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterator_1 = require(\"vs/base/common/iterator\");\nvar HistoryNavigator = /** @class */ (function () {\n    function HistoryNavigator(history, limit) {\n        if (history === void 0) { history = []; }\n        if (limit === void 0) { limit = 10; }\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    HistoryNavigator.prototype.getHistory = function () {\n        return this._elements;\n    };\n    HistoryNavigator.prototype.add = function (t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    };\n    HistoryNavigator.prototype.next = function () {\n        return this._navigator.next();\n    };\n    HistoryNavigator.prototype.previous = function () {\n        return this._navigator.previous();\n    };\n    HistoryNavigator.prototype.current = function () {\n        return this._navigator.current();\n    };\n    HistoryNavigator.prototype.parent = function () {\n        return null;\n    };\n    HistoryNavigator.prototype.first = function () {\n        return this._navigator.first();\n    };\n    HistoryNavigator.prototype.last = function () {\n        return this._navigator.last();\n    };\n    HistoryNavigator.prototype.has = function (t) {\n        return this._history.has(t);\n    };\n    HistoryNavigator.prototype.clear = function () {\n        this._initialize([]);\n        this._onChange();\n    };\n    HistoryNavigator.prototype._onChange = function () {\n        this._reduceToLimit();\n        this._navigator = new iterator_1.ArrayNavigator(this._elements, 0, this._elements.length, this._elements.length);\n    };\n    HistoryNavigator.prototype._reduceToLimit = function () {\n        var data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    };\n    HistoryNavigator.prototype._initialize = function (history) {\n        this._history = new Set();\n        for (var _i = 0, history_1 = history; _i < history_1.length; _i++) {\n            var entry = history_1[_i];\n            this._history.add(entry);\n        }\n    };\n    Object.defineProperty(HistoryNavigator.prototype, \"_elements\", {\n        get: function () {\n            var elements = [];\n            this._history.forEach(function (e) { return elements.push(e); });\n            return elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HistoryNavigator;\n}());\nexports.HistoryNavigator = HistoryNavigator;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/history.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/history.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,oDAAqE;AAErE;IAMC,0BAAY,OAAiB,EAAE,KAAkB;QAArC,wBAAA,EAAA,YAAiB;QAAE,sBAAA,EAAA,UAAkB;QAChD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,qCAAU,GAAjB;QACC,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,8BAAG,GAAV,UAAW,CAAI;QACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,+BAAI,GAAX;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAEM,mCAAQ,GAAf;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAEM,kCAAO,GAAd;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAEM,iCAAM,GAAb;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,gCAAK,GAAZ;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,+BAAI,GAAX;QACC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAEM,8BAAG,GAAV,UAAW,CAAI;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEM,gCAAK,GAAZ;QACC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEO,oCAAS,GAAjB;QACC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,yBAAc,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACvG,CAAC;IAEO,yCAAc,GAAtB;QACC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACxD;IACF,CAAC;IAEO,sCAAW,GAAnB,UAAoB,OAAY;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QAC1B,KAAoB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAxB,IAAM,KAAK,gBAAA;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACzB;IACF,CAAC;IAED,sBAAY,uCAAS;aAArB;YACC,IAAM,QAAQ,GAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;YAC7C,OAAO,QAAQ,CAAC;QACjB,CAAC;;;OAAA;IACF,uBAAC;AAAD,CAAC,AA/ED,IA+EC;AA/EY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INavigator, ArrayNavigator } from 'vs/base/common/iterator';\n\nexport class HistoryNavigator<T> implements INavigator<T> {\n\n\tprivate _history: Set<T>;\n\tprivate _limit: number;\n\tprivate _navigator: ArrayNavigator<T>;\n\n\tconstructor(history: T[] = [], limit: number = 10) {\n\t\tthis._initialize(history);\n\t\tthis._limit = limit;\n\t\tthis._onChange();\n\t}\n\n\tpublic getHistory(): T[] {\n\t\treturn this._elements;\n\t}\n\n\tpublic add(t: T) {\n\t\tthis._history.delete(t);\n\t\tthis._history.add(t);\n\t\tthis._onChange();\n\t}\n\n\tpublic next(): T | null {\n\t\treturn this._navigator.next();\n\t}\n\n\tpublic previous(): T | null {\n\t\treturn this._navigator.previous();\n\t}\n\n\tpublic current(): T | null {\n\t\treturn this._navigator.current();\n\t}\n\n\tpublic parent(): null {\n\t\treturn null;\n\t}\n\n\tpublic first(): T | null {\n\t\treturn this._navigator.first();\n\t}\n\n\tpublic last(): T | null {\n\t\treturn this._navigator.last();\n\t}\n\n\tpublic has(t: T): boolean {\n\t\treturn this._history.has(t);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._initialize([]);\n\t\tthis._onChange();\n\t}\n\n\tprivate _onChange() {\n\t\tthis._reduceToLimit();\n\t\tthis._navigator = new ArrayNavigator(this._elements, 0, this._elements.length, this._elements.length);\n\t}\n\n\tprivate _reduceToLimit() {\n\t\tconst data = this._elements;\n\t\tif (data.length > this._limit) {\n\t\t\tthis._initialize(data.slice(data.length - this._limit));\n\t\t}\n\t}\n\n\tprivate _initialize(history: T[]): void {\n\t\tthis._history = new Set();\n\t\tfor (const entry of history) {\n\t\t\tthis._history.add(entry);\n\t\t}\n\t}\n\n\tprivate get _elements(): T[] {\n\t\tconst elements: T[] = [];\n\t\tthis._history.forEach(e => elements.push(e));\n\t\treturn elements;\n\t}\n}\n"]}]}