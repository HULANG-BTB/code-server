{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./welcomeOverlay\");\nvar dom = require(\"vs/base/browser/dom\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar commandsHandler_1 = require(\"vs/workbench/contrib/quickopen/browser/commandsHandler\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar nls_1 = require(\"vs/nls\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar actions_3 = require(\"vs/platform/actions/common/actions\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar color_1 = require(\"vs/base/common/color\");\nvar $ = dom.$;\nvar keys = [\n    {\n        id: 'explorer',\n        arrow: '&larr;',\n        label: nls_1.localize('welcomeOverlay.explorer', \"File explorer\"),\n        command: 'workbench.view.explorer'\n    },\n    {\n        id: 'search',\n        arrow: '&larr;',\n        label: nls_1.localize('welcomeOverlay.search', \"Search across files\"),\n        command: 'workbench.view.search'\n    },\n    {\n        id: 'git',\n        arrow: '&larr;',\n        label: nls_1.localize('welcomeOverlay.git', \"Source code management\"),\n        command: 'workbench.view.scm'\n    },\n    {\n        id: 'debug',\n        arrow: '&larr;',\n        label: nls_1.localize('welcomeOverlay.debug', \"Launch and debug\"),\n        command: 'workbench.view.debug'\n    },\n    {\n        id: 'extensions',\n        arrow: '&larr;',\n        label: nls_1.localize('welcomeOverlay.extensions', \"Manage extensions\"),\n        command: 'workbench.view.extensions'\n    },\n    // {\n    // \tid: 'watermark',\n    // \tarrow: '&larrpl;',\n    // \tlabel: localize('welcomeOverlay.watermark', \"Command Hints\"),\n    // \twithEditor: false\n    // },\n    {\n        id: 'problems',\n        arrow: '&larrpl;',\n        label: nls_1.localize('welcomeOverlay.problems', \"View errors and warnings\"),\n        command: 'workbench.actions.view.problems'\n    },\n    {\n        id: 'terminal',\n        label: nls_1.localize('welcomeOverlay.terminal', \"Toggle integrated terminal\"),\n        command: 'workbench.action.terminal.toggleTerminal'\n    },\n    // {\n    // \tid: 'openfile',\n    // \tarrow: '&cudarrl;',\n    // \tlabel: localize('welcomeOverlay.openfile', \"File Properties\"),\n    // \tarrowLast: true,\n    // \twithEditor: true\n    // },\n    {\n        id: 'commandPalette',\n        arrow: '&nwarr;',\n        label: nls_1.localize('welcomeOverlay.commandPalette', \"Find and run all commands\"),\n        command: commandsHandler_1.ShowAllCommandsAction.ID\n    },\n    {\n        id: 'notifications',\n        arrow: '&cudarrr;',\n        arrowLast: true,\n        label: nls_1.localize('welcomeOverlay.notifications', \"Show notifications\"),\n        command: 'notifications.showList'\n    }\n];\nvar OVERLAY_VISIBLE = new contextkey_1.RawContextKey('interfaceOverviewVisible', false);\nvar welcomeOverlay;\nvar WelcomeOverlayAction = /** @class */ (function (_super) {\n    tslib_1.__extends(WelcomeOverlayAction, _super);\n    function WelcomeOverlayAction(id, label, instantiationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.instantiationService = instantiationService;\n        return _this;\n    }\n    WelcomeOverlayAction.prototype.run = function () {\n        if (!welcomeOverlay) {\n            welcomeOverlay = this.instantiationService.createInstance(WelcomeOverlay);\n        }\n        welcomeOverlay.show();\n        return Promise.resolve();\n    };\n    WelcomeOverlayAction.ID = 'workbench.action.showInterfaceOverview';\n    WelcomeOverlayAction.LABEL = nls_1.localize('welcomeOverlay', \"User Interface Overview\");\n    WelcomeOverlayAction = tslib_1.__decorate([\n        tslib_1.__param(2, instantiation_1.IInstantiationService)\n    ], WelcomeOverlayAction);\n    return WelcomeOverlayAction;\n}(actions_1.Action));\nexports.WelcomeOverlayAction = WelcomeOverlayAction;\nvar HideWelcomeOverlayAction = /** @class */ (function (_super) {\n    tslib_1.__extends(HideWelcomeOverlayAction, _super);\n    function HideWelcomeOverlayAction(id, label) {\n        return _super.call(this, id, label) || this;\n    }\n    HideWelcomeOverlayAction.prototype.run = function () {\n        if (welcomeOverlay) {\n            welcomeOverlay.hide();\n        }\n        return Promise.resolve();\n    };\n    HideWelcomeOverlayAction.ID = 'workbench.action.hideInterfaceOverview';\n    HideWelcomeOverlayAction.LABEL = nls_1.localize('hideWelcomeOverlay', \"Hide Interface Overview\");\n    return HideWelcomeOverlayAction;\n}(actions_1.Action));\nexports.HideWelcomeOverlayAction = HideWelcomeOverlayAction;\nvar WelcomeOverlay = /** @class */ (function () {\n    function WelcomeOverlay(layoutService, editorService, commandService, _contextKeyService, keybindingService) {\n        this.layoutService = layoutService;\n        this.editorService = editorService;\n        this.commandService = commandService;\n        this._contextKeyService = _contextKeyService;\n        this.keybindingService = keybindingService;\n        this._toDispose = [];\n        this._overlayVisible = OVERLAY_VISIBLE.bindTo(this._contextKeyService);\n        this.create();\n    }\n    WelcomeOverlay.prototype.create = function () {\n        var _this = this;\n        var container = this.layoutService.getContainer(layoutService_1.Parts.EDITOR_PART);\n        var offset = this.layoutService.getTitleBarOffset();\n        this._overlay = dom.append(container.parentElement, $('.welcomeOverlay'));\n        this._overlay.style.top = offset + \"px\";\n        this._overlay.style.height = \"calc(100% - \" + offset + \"px)\";\n        this._overlay.style.display = 'none';\n        this._overlay.tabIndex = -1;\n        this._toDispose.push(dom.addStandardDisposableListener(this._overlay, 'click', function () { return _this.hide(); }));\n        this.commandService.onWillExecuteCommand(function () { return _this.hide(); });\n        dom.append(this._overlay, $('.commandPalettePlaceholder'));\n        var editorOpen = !!this.editorService.visibleEditors.length;\n        keys.filter(function (key) { return !('withEditor' in key) || key.withEditor === editorOpen; })\n            .forEach(function (_a) {\n            var id = _a.id, arrow = _a.arrow, label = _a.label, command = _a.command, arrowLast = _a.arrowLast;\n            var div = dom.append(_this._overlay, $(\".key.\" + id));\n            if (arrow && !arrowLast) {\n                dom.append(div, $('span.arrow')).innerHTML = arrow;\n            }\n            dom.append(div, $('span.label')).textContent = label;\n            if (command) {\n                var shortcut = _this.keybindingService.lookupKeybinding(command);\n                if (shortcut) {\n                    dom.append(div, $('span.shortcut')).textContent = shortcut.getLabel();\n                }\n            }\n            if (arrow && arrowLast) {\n                dom.append(div, $('span.arrow')).innerHTML = arrow;\n            }\n        });\n    };\n    WelcomeOverlay.prototype.show = function () {\n        if (this._overlay.style.display !== 'block') {\n            this._overlay.style.display = 'block';\n            var workbench = document.querySelector('.monaco-workbench');\n            dom.addClass(workbench, 'blur-background');\n            this._overlayVisible.set(true);\n            this.updateProblemsKey();\n            this._overlay.focus();\n        }\n    };\n    WelcomeOverlay.prototype.updateProblemsKey = function () {\n        var problems = document.querySelector('.task-statusbar-item');\n        var key = this._overlay.querySelector('.key.problems');\n        if (problems instanceof HTMLElement) {\n            var target = problems.getBoundingClientRect();\n            var bounds = this._overlay.getBoundingClientRect();\n            var bottom = bounds.bottom - target.top + 3;\n            var left = (target.left + target.right) / 2 - bounds.left;\n            key.style.bottom = bottom + 'px';\n            key.style.left = left + 'px';\n        }\n        else {\n            key.style.bottom = null;\n            key.style.left = null;\n        }\n    };\n    WelcomeOverlay.prototype.hide = function () {\n        if (this._overlay.style.display !== 'none') {\n            this._overlay.style.display = 'none';\n            var workbench = document.querySelector('.monaco-workbench');\n            dom.removeClass(workbench, 'blur-background');\n            this._overlayVisible.reset();\n        }\n    };\n    WelcomeOverlay.prototype.dispose = function () {\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n    };\n    WelcomeOverlay = tslib_1.__decorate([\n        tslib_1.__param(0, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(1, editorService_1.IEditorService),\n        tslib_1.__param(2, commands_1.ICommandService),\n        tslib_1.__param(3, contextkey_1.IContextKeyService),\n        tslib_1.__param(4, keybinding_1.IKeybindingService)\n    ], WelcomeOverlay);\n    return WelcomeOverlay;\n}());\nplatform_1.Registry.as(actions_2.Extensions.WorkbenchActions)\n    .registerWorkbenchAction(new actions_3.SyncActionDescriptor(WelcomeOverlayAction, WelcomeOverlayAction.ID, WelcomeOverlayAction.LABEL), 'Help: User Interface Overview', nls_1.localize('help', \"Help\"));\nplatform_1.Registry.as(actions_2.Extensions.WorkbenchActions)\n    .registerWorkbenchAction(new actions_3.SyncActionDescriptor(HideWelcomeOverlayAction, HideWelcomeOverlayAction.ID, HideWelcomeOverlayAction.LABEL, { primary: keyCodes_1.KeyCode.Escape }, OVERLAY_VISIBLE), 'Help: Hide Interface Overview', nls_1.localize('help', \"Help\"));\n// theming\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var key = theme.getColor(colorRegistry_1.foreground);\n    if (key) {\n        collector.addRule(\".monaco-workbench > .welcomeOverlay > .key { color: \" + key + \"; }\");\n    }\n    var backgroundColor = color_1.Color.fromHex(theme.type === 'light' ? '#FFFFFF85' : '#00000085');\n    if (backgroundColor) {\n        collector.addRule(\".monaco-workbench > .welcomeOverlay { background: \" + backgroundColor + \"; }\");\n    }\n    var shortcut = theme.getColor(colorRegistry_1.textPreformatForeground);\n    if (shortcut) {\n        collector.addRule(\".monaco-workbench > .welcomeOverlay > .key > .shortcut { color: \" + shortcut + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./welcomeOverlay';\nimport * as dom from 'vs/base/browser/dom';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ShowAllCommandsAction } from 'vs/workbench/contrib/quickopen/browser/commandsHandler';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Parts, IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { localize } from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { IWorkbenchActionRegistry, Extensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { RawContextKey, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { textPreformatForeground, foreground } from 'vs/platform/theme/common/colorRegistry';\nimport { Color } from 'vs/base/common/color';\n\nconst $ = dom.$;\n\ninterface Key {\n\tid: string;\n\tarrow?: string;\n\tlabel: string;\n\tcommand?: string;\n\tarrowLast?: boolean;\n\twithEditor?: boolean;\n}\n\nconst keys: Key[] = [\n\t{\n\t\tid: 'explorer',\n\t\tarrow: '&larr;',\n\t\tlabel: localize('welcomeOverlay.explorer', \"File explorer\"),\n\t\tcommand: 'workbench.view.explorer'\n\t},\n\t{\n\t\tid: 'search',\n\t\tarrow: '&larr;',\n\t\tlabel: localize('welcomeOverlay.search', \"Search across files\"),\n\t\tcommand: 'workbench.view.search'\n\t},\n\t{\n\t\tid: 'git',\n\t\tarrow: '&larr;',\n\t\tlabel: localize('welcomeOverlay.git', \"Source code management\"),\n\t\tcommand: 'workbench.view.scm'\n\t},\n\t{\n\t\tid: 'debug',\n\t\tarrow: '&larr;',\n\t\tlabel: localize('welcomeOverlay.debug', \"Launch and debug\"),\n\t\tcommand: 'workbench.view.debug'\n\t},\n\t{\n\t\tid: 'extensions',\n\t\tarrow: '&larr;',\n\t\tlabel: localize('welcomeOverlay.extensions', \"Manage extensions\"),\n\t\tcommand: 'workbench.view.extensions'\n\t},\n\t// {\n\t// \tid: 'watermark',\n\t// \tarrow: '&larrpl;',\n\t// \tlabel: localize('welcomeOverlay.watermark', \"Command Hints\"),\n\t// \twithEditor: false\n\t// },\n\t{\n\t\tid: 'problems',\n\t\tarrow: '&larrpl;',\n\t\tlabel: localize('welcomeOverlay.problems', \"View errors and warnings\"),\n\t\tcommand: 'workbench.actions.view.problems'\n\t},\n\t{\n\t\tid: 'terminal',\n\t\tlabel: localize('welcomeOverlay.terminal', \"Toggle integrated terminal\"),\n\t\tcommand: 'workbench.action.terminal.toggleTerminal'\n\t},\n\t// {\n\t// \tid: 'openfile',\n\t// \tarrow: '&cudarrl;',\n\t// \tlabel: localize('welcomeOverlay.openfile', \"File Properties\"),\n\t// \tarrowLast: true,\n\t// \twithEditor: true\n\t// },\n\t{\n\t\tid: 'commandPalette',\n\t\tarrow: '&nwarr;',\n\t\tlabel: localize('welcomeOverlay.commandPalette', \"Find and run all commands\"),\n\t\tcommand: ShowAllCommandsAction.ID\n\t},\n\t{\n\t\tid: 'notifications',\n\t\tarrow: '&cudarrr;',\n\t\tarrowLast: true,\n\t\tlabel: localize('welcomeOverlay.notifications', \"Show notifications\"),\n\t\tcommand: 'notifications.showList'\n\t}\n];\n\nconst OVERLAY_VISIBLE = new RawContextKey<boolean>('interfaceOverviewVisible', false);\n\nlet welcomeOverlay: WelcomeOverlay;\n\nexport class WelcomeOverlayAction extends Action {\n\n\tpublic static readonly ID = 'workbench.action.showInterfaceOverview';\n\tpublic static readonly LABEL = localize('welcomeOverlay', \"User Interface Overview\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<void> {\n\t\tif (!welcomeOverlay) {\n\t\t\twelcomeOverlay = this.instantiationService.createInstance(WelcomeOverlay);\n\t\t}\n\t\twelcomeOverlay.show();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class HideWelcomeOverlayAction extends Action {\n\n\tpublic static readonly ID = 'workbench.action.hideInterfaceOverview';\n\tpublic static readonly LABEL = localize('hideWelcomeOverlay', \"Hide Interface Overview\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<void> {\n\t\tif (welcomeOverlay) {\n\t\t\twelcomeOverlay.hide();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nclass WelcomeOverlay {\n\n\tprivate _toDispose: IDisposable[] = [];\n\tprivate _overlayVisible: IContextKey<boolean>;\n\tprivate _overlay: HTMLElement;\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) {\n\t\tthis._overlayVisible = OVERLAY_VISIBLE.bindTo(this._contextKeyService);\n\t\tthis.create();\n\t}\n\n\tprivate create(): void {\n\t\tconst container = this.layoutService.getContainer(Parts.EDITOR_PART)!;\n\n\t\tconst offset = this.layoutService.getTitleBarOffset();\n\t\tthis._overlay = dom.append(container.parentElement!, $('.welcomeOverlay'));\n\t\tthis._overlay.style.top = `${offset}px`;\n\t\tthis._overlay.style.height = `calc(100% - ${offset}px)`;\n\t\tthis._overlay.style.display = 'none';\n\t\tthis._overlay.tabIndex = -1;\n\n\t\tthis._toDispose.push(dom.addStandardDisposableListener(this._overlay, 'click', () => this.hide()));\n\t\tthis.commandService.onWillExecuteCommand(() => this.hide());\n\n\t\tdom.append(this._overlay, $('.commandPalettePlaceholder'));\n\n\t\tconst editorOpen = !!this.editorService.visibleEditors.length;\n\t\tkeys.filter(key => !('withEditor' in key) || key.withEditor === editorOpen)\n\t\t\t.forEach(({ id, arrow, label, command, arrowLast }) => {\n\t\t\t\tconst div = dom.append(this._overlay, $(`.key.${id}`));\n\t\t\t\tif (arrow && !arrowLast) {\n\t\t\t\t\tdom.append(div, $('span.arrow')).innerHTML = arrow;\n\t\t\t\t}\n\t\t\t\tdom.append(div, $('span.label')).textContent = label;\n\t\t\t\tif (command) {\n\t\t\t\t\tconst shortcut = this.keybindingService.lookupKeybinding(command);\n\t\t\t\t\tif (shortcut) {\n\t\t\t\t\t\tdom.append(div, $('span.shortcut')).textContent = shortcut.getLabel();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arrow && arrowLast) {\n\t\t\t\t\tdom.append(div, $('span.arrow')).innerHTML = arrow;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic show() {\n\t\tif (this._overlay.style.display !== 'block') {\n\t\t\tthis._overlay.style.display = 'block';\n\t\t\tconst workbench = document.querySelector('.monaco-workbench') as HTMLElement;\n\t\t\tdom.addClass(workbench, 'blur-background');\n\t\t\tthis._overlayVisible.set(true);\n\t\t\tthis.updateProblemsKey();\n\t\t\tthis._overlay.focus();\n\t\t}\n\t}\n\n\tprivate updateProblemsKey() {\n\t\tconst problems = document.querySelector('.task-statusbar-item');\n\t\tconst key = this._overlay.querySelector('.key.problems') as HTMLElement;\n\t\tif (problems instanceof HTMLElement) {\n\t\t\tconst target = problems.getBoundingClientRect();\n\t\t\tconst bounds = this._overlay.getBoundingClientRect();\n\t\t\tconst bottom = bounds.bottom - target.top + 3;\n\t\t\tconst left = (target.left + target.right) / 2 - bounds.left;\n\t\t\tkey.style.bottom = bottom + 'px';\n\t\t\tkey.style.left = left + 'px';\n\t\t} else {\n\t\t\tkey.style.bottom = null;\n\t\t\tkey.style.left = null;\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tif (this._overlay.style.display !== 'none') {\n\t\t\tthis._overlay.style.display = 'none';\n\t\t\tconst workbench = document.querySelector('.monaco-workbench') as HTMLElement;\n\t\t\tdom.removeClass(workbench, 'blur-background');\n\t\t\tthis._overlayVisible.reset();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n}\n\nRegistry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions)\n\t.registerWorkbenchAction(new SyncActionDescriptor(WelcomeOverlayAction, WelcomeOverlayAction.ID, WelcomeOverlayAction.LABEL), 'Help: User Interface Overview', localize('help', \"Help\"));\n\nRegistry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions)\n\t.registerWorkbenchAction(new SyncActionDescriptor(HideWelcomeOverlayAction, HideWelcomeOverlayAction.ID, HideWelcomeOverlayAction.LABEL, { primary: KeyCode.Escape }, OVERLAY_VISIBLE), 'Help: Hide Interface Overview', localize('help', \"Help\"));\n\n// theming\n\nregisterThemingParticipant((theme, collector) => {\n\tconst key = theme.getColor(foreground);\n\tif (key) {\n\t\tcollector.addRule(`.monaco-workbench > .welcomeOverlay > .key { color: ${key}; }`);\n\t}\n\tconst backgroundColor = Color.fromHex(theme.type === 'light' ? '#FFFFFF85' : '#00000085');\n\tif (backgroundColor) {\n\t\tcollector.addRule(`.monaco-workbench > .welcomeOverlay { background: ${backgroundColor}; }`);\n\t}\n\tconst shortcut = theme.getColor(textPreformatForeground);\n\tif (shortcut) {\n\t\tcollector.addRule(`.monaco-workbench > .welcomeOverlay > .key > .shortcut { color: ${shortcut}; }`);\n\t}\n});\n"]}]}