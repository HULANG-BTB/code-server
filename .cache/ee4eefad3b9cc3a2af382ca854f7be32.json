{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/log/common/log.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/log/common/log.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar event_1 = require(\"vs/base/common/event\");\nexports.ILogService = instantiation_1.createDecorator('logService');\nfunction now() {\n    return new Date().toISOString();\n}\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nexports.DEFAULT_LOG_LEVEL = LogLevel.Info;\nvar AbstractLogService = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractLogService, _super);\n    function AbstractLogService() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.level = exports.DEFAULT_LOG_LEVEL;\n        _this._onDidChangeLogLevel = _this._register(new event_1.Emitter());\n        _this.onDidChangeLogLevel = _this._onDidChangeLogLevel.event;\n        return _this;\n    }\n    AbstractLogService.prototype.setLevel = function (level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    };\n    AbstractLogService.prototype.getLevel = function () {\n        return this.level;\n    };\n    return AbstractLogService;\n}(lifecycle_1.Disposable));\nexports.AbstractLogService = AbstractLogService;\nvar ConsoleLogMainService = /** @class */ (function (_super) {\n    tslib_1.__extends(ConsoleLogMainService, _super);\n    function ConsoleLogMainService(logLevel) {\n        if (logLevel === void 0) { logLevel = exports.DEFAULT_LOG_LEVEL; }\n        var _this = _super.call(this) || this;\n        _this.setLevel(logLevel);\n        _this.useColors = !platform_1.isWindows;\n        return _this;\n    }\n    ConsoleLogMainService.prototype.trace = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Trace) {\n            if (this.useColors) {\n                console.log.apply(console, [\"\\u001B[90m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.log.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.debug = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Debug) {\n            if (this.useColors) {\n                console.log.apply(console, [\"\\u001B[90m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.log.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.info = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Info) {\n            if (this.useColors) {\n                console.log.apply(console, [\"\\u001B[90m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.log.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.warn = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Warning) {\n            if (this.useColors) {\n                console.warn.apply(console, [\"\\u001B[93m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.warn.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.error = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Error) {\n            if (this.useColors) {\n                console.error.apply(console, [\"\\u001B[91m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.error.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.critical = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Critical) {\n            if (this.useColors) {\n                console.error.apply(console, [\"\\u001B[90m[main \" + now() + \"]\\u001B[0m\", message].concat(args));\n            }\n            else {\n                console.error.apply(console, [\"[main \" + now() + \"]\", message].concat(args));\n            }\n        }\n    };\n    ConsoleLogMainService.prototype.dispose = function () {\n        // noop\n    };\n    return ConsoleLogMainService;\n}(AbstractLogService));\nexports.ConsoleLogMainService = ConsoleLogMainService;\nvar ConsoleLogService = /** @class */ (function (_super) {\n    tslib_1.__extends(ConsoleLogService, _super);\n    function ConsoleLogService(logLevel) {\n        if (logLevel === void 0) { logLevel = exports.DEFAULT_LOG_LEVEL; }\n        var _this = _super.call(this) || this;\n        _this.setLevel(logLevel);\n        return _this;\n    }\n    ConsoleLogService.prototype.trace = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Trace) {\n            console.log.apply(console, ['%cTRACE', 'color: #888', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.debug = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Debug) {\n            console.log.apply(console, ['%cDEBUG', 'background: #eee; color: #888', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.info = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Info) {\n            console.log.apply(console, ['%c INFO', 'color: #33f', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.warn = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Warning) {\n            console.log.apply(console, ['%c WARN', 'color: #993', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.error = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Error) {\n            console.log.apply(console, ['%c  ERR', 'color: #f33', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.critical = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.getLevel() <= LogLevel.Critical) {\n            console.log.apply(console, ['%cCRITI', 'background: #f33; color: white', message].concat(args));\n        }\n    };\n    ConsoleLogService.prototype.dispose = function () { };\n    return ConsoleLogService;\n}(AbstractLogService));\nexports.ConsoleLogService = ConsoleLogService;\nvar MultiplexLogService = /** @class */ (function (_super) {\n    tslib_1.__extends(MultiplexLogService, _super);\n    function MultiplexLogService(logServices) {\n        var _this = _super.call(this) || this;\n        _this.logServices = logServices;\n        if (logServices.length) {\n            _this.setLevel(logServices[0].getLevel());\n        }\n        return _this;\n    }\n    MultiplexLogService.prototype.setLevel = function (level) {\n        for (var _i = 0, _a = this.logServices; _i < _a.length; _i++) {\n            var logService = _a[_i];\n            logService.setLevel(level);\n        }\n        _super.prototype.setLevel.call(this, level);\n    };\n    MultiplexLogService.prototype.trace = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.trace.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.debug = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.debug.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.info = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.info.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.warn = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.warn.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.error = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.error.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.critical = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        for (var _a = 0, _b = this.logServices; _a < _b.length; _a++) {\n            var logService = _b[_a];\n            logService.critical.apply(logService, [message].concat(args));\n        }\n    };\n    MultiplexLogService.prototype.dispose = function () {\n        for (var _i = 0, _a = this.logServices; _i < _a.length; _i++) {\n            var logService = _a[_i];\n            logService.dispose();\n        }\n    };\n    return MultiplexLogService;\n}(AbstractLogService));\nexports.MultiplexLogService = MultiplexLogService;\nvar DelegatedLogService = /** @class */ (function (_super) {\n    tslib_1.__extends(DelegatedLogService, _super);\n    function DelegatedLogService(logService) {\n        var _this = _super.call(this) || this;\n        _this.logService = logService;\n        _this._register(logService);\n        return _this;\n    }\n    Object.defineProperty(DelegatedLogService.prototype, \"onDidChangeLogLevel\", {\n        get: function () {\n            return this.logService.onDidChangeLogLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DelegatedLogService.prototype.setLevel = function (level) {\n        this.logService.setLevel(level);\n    };\n    DelegatedLogService.prototype.getLevel = function () {\n        return this.logService.getLevel();\n    };\n    DelegatedLogService.prototype.trace = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).trace.apply(_a, [message].concat(args));\n    };\n    DelegatedLogService.prototype.debug = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).debug.apply(_a, [message].concat(args));\n    };\n    DelegatedLogService.prototype.info = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).info.apply(_a, [message].concat(args));\n    };\n    DelegatedLogService.prototype.warn = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).warn.apply(_a, [message].concat(args));\n    };\n    DelegatedLogService.prototype.error = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).error.apply(_a, [message].concat(args));\n    };\n    DelegatedLogService.prototype.critical = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a;\n        (_a = this.logService).critical.apply(_a, [message].concat(args));\n    };\n    return DelegatedLogService;\n}(lifecycle_1.Disposable));\nexports.DelegatedLogService = DelegatedLogService;\nvar NullLogService = /** @class */ (function () {\n    function NullLogService() {\n        this.onDidChangeLogLevel = new event_1.Emitter().event;\n    }\n    NullLogService.prototype.setLevel = function (level) { };\n    NullLogService.prototype.getLevel = function () { return LogLevel.Info; };\n    NullLogService.prototype.trace = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.debug = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.info = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.warn = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.error = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.critical = function (message) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n    };\n    NullLogService.prototype.dispose = function () { };\n    return NullLogService;\n}());\nexports.NullLogService = NullLogService;\nfunction getLogLevel(environmentService) {\n    if (environmentService.verbose) {\n        return LogLevel.Trace;\n    }\n    if (typeof environmentService.args.log === 'string') {\n        var logLevel = environmentService.args.log.toLowerCase();\n        switch (logLevel) {\n            case 'trace':\n                return LogLevel.Trace;\n            case 'debug':\n                return LogLevel.Debug;\n            case 'info':\n                return LogLevel.Info;\n            case 'warn':\n                return LogLevel.Warning;\n            case 'error':\n                return LogLevel.Error;\n            case 'critical':\n                return LogLevel.Critical;\n            case 'off':\n                return LogLevel.Off;\n        }\n    }\n    return exports.DEFAULT_LOG_LEVEL;\n}\nexports.getLogLevel = getLogLevel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/log/common/log.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/log/common/log.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogService extends IDisposable {\n\t_serviceBrand: any;\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: any;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void { }\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logServices: ILogService[]) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: any;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: any;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}"]}]}