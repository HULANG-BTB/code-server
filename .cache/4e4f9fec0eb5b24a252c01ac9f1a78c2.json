{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar objects_1 = require(\"vs/base/common/objects\");\nfunction computeStyles(theme, styleMap) {\n    var styles = Object.create(null);\n    for (var key in styleMap) {\n        var value = styleMap[key];\n        if (typeof value === 'string') {\n            styles[key] = theme.getColor(value);\n        }\n        else if (typeof value === 'function') {\n            styles[key] = value(theme);\n        }\n    }\n    return styles;\n}\nexports.computeStyles = computeStyles;\nfunction attachStyler(themeService, styleMap, widgetOrCallback) {\n    function applyStyles(theme) {\n        var styles = computeStyles(themeService.getTheme(), styleMap);\n        if (typeof widgetOrCallback === 'function') {\n            widgetOrCallback(styles);\n        }\n        else {\n            widgetOrCallback.style(styles);\n        }\n    }\n    applyStyles(themeService.getTheme());\n    return themeService.onThemeChange(applyStyles);\n}\nexports.attachStyler = attachStyler;\nfunction attachCheckboxStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        inputActiveOptionBorder: (style && style.inputActiveOptionBorderColor) || colorRegistry_1.inputActiveOptionBorder\n    }, widget);\n}\nexports.attachCheckboxStyler = attachCheckboxStyler;\nfunction attachBadgeStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        badgeBackground: (style && style.badgeBackground) || colorRegistry_1.badgeBackground,\n        badgeForeground: (style && style.badgeForeground) || colorRegistry_1.badgeForeground,\n        badgeBorder: colorRegistry_1.contrastBorder\n    }, widget);\n}\nexports.attachBadgeStyler = attachBadgeStyler;\nfunction attachInputBoxStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n        inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n        inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n        inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n        inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n        inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n        inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n        inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n        inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n        inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n        inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n        inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground\n    }, widget);\n}\nexports.attachInputBoxStyler = attachInputBoxStyler;\nfunction attachSelectBoxStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        selectBackground: (style && style.selectBackground) || colorRegistry_1.selectBackground,\n        selectListBackground: (style && style.selectListBackground) || colorRegistry_1.selectListBackground,\n        selectForeground: (style && style.selectForeground) || colorRegistry_1.selectForeground,\n        decoratorRightForeground: (style && style.pickerGroupForeground) || colorRegistry_1.pickerGroupForeground,\n        selectBorder: (style && style.selectBorder) || colorRegistry_1.selectBorder,\n        focusBorder: (style && style.focusBorder) || colorRegistry_1.focusBorder,\n        listFocusBackground: (style && style.listFocusBackground) || colorRegistry_1.listFocusBackground,\n        listFocusForeground: (style && style.listFocusForeground) || colorRegistry_1.listFocusForeground,\n        listFocusOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n        listHoverBackground: (style && style.listHoverBackground) || colorRegistry_1.listHoverBackground,\n        listHoverForeground: (style && style.listHoverForeground) || colorRegistry_1.listHoverForeground,\n        listHoverOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n        selectListBorder: (style && style.selectListBorder) || colorRegistry_1.editorWidgetBorder\n    }, widget);\n}\nexports.attachSelectBoxStyler = attachSelectBoxStyler;\nfunction attachFindInputBoxStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n        inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n        inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n        inputActiveOptionBorder: (style && style.inputActiveOptionBorder) || colorRegistry_1.inputActiveOptionBorder,\n        inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n        inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n        inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n        inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n        inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n        inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n        inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n        inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n        inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground\n    }, widget);\n}\nexports.attachFindInputBoxStyler = attachFindInputBoxStyler;\nfunction attachQuickOpenStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        foreground: (style && style.foreground) || colorRegistry_1.foreground,\n        background: (style && style.background) || colorRegistry_1.editorBackground,\n        borderColor: style && style.borderColor || colorRegistry_1.contrastBorder,\n        widgetShadow: style && style.widgetShadow || colorRegistry_1.widgetShadow,\n        progressBarBackground: style && style.progressBarBackground || colorRegistry_1.progressBarBackground,\n        pickerGroupForeground: style && style.pickerGroupForeground || colorRegistry_1.pickerGroupForeground,\n        pickerGroupBorder: style && style.pickerGroupBorder || colorRegistry_1.pickerGroupBorder,\n        inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n        inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n        inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n        inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n        inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n        inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n        inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n        inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n        inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n        inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n        inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n        inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground,\n        listFocusBackground: (style && style.listFocusBackground) || colorRegistry_1.listFocusBackground,\n        listFocusForeground: (style && style.listFocusForeground) || colorRegistry_1.listFocusForeground,\n        listActiveSelectionBackground: (style && style.listActiveSelectionBackground) || colorRegistry_1.darken(colorRegistry_1.listActiveSelectionBackground, 0.1),\n        listActiveSelectionForeground: (style && style.listActiveSelectionForeground) || colorRegistry_1.listActiveSelectionForeground,\n        listFocusAndSelectionBackground: style && style.listFocusAndSelectionBackground || colorRegistry_1.listActiveSelectionBackground,\n        listFocusAndSelectionForeground: (style && style.listFocusAndSelectionForeground) || colorRegistry_1.listActiveSelectionForeground,\n        listInactiveSelectionBackground: (style && style.listInactiveSelectionBackground) || colorRegistry_1.listInactiveSelectionBackground,\n        listInactiveSelectionForeground: (style && style.listInactiveSelectionForeground) || colorRegistry_1.listInactiveSelectionForeground,\n        listInactiveFocusBackground: (style && style.listInactiveFocusBackground) || colorRegistry_1.listInactiveFocusBackground,\n        listHoverBackground: (style && style.listHoverBackground) || colorRegistry_1.listHoverBackground,\n        listHoverForeground: (style && style.listHoverForeground) || colorRegistry_1.listHoverForeground,\n        listDropBackground: (style && style.listDropBackground) || colorRegistry_1.listDropBackground,\n        listFocusOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n        listSelectionOutline: (style && style.listSelectionOutline) || colorRegistry_1.activeContrastBorder,\n        listHoverOutline: (style && style.listHoverOutline) || colorRegistry_1.activeContrastBorder\n    }, widget);\n}\nexports.attachQuickOpenStyler = attachQuickOpenStyler;\nfunction attachListStyler(widget, themeService, overrides) {\n    return attachStyler(themeService, objects_1.mixin(overrides || Object.create(null), exports.defaultListStyles, false), widget);\n}\nexports.attachListStyler = attachListStyler;\nexports.defaultListStyles = {\n    listFocusBackground: colorRegistry_1.listFocusBackground,\n    listFocusForeground: colorRegistry_1.listFocusForeground,\n    listActiveSelectionBackground: colorRegistry_1.darken(colorRegistry_1.listActiveSelectionBackground, 0.1),\n    listActiveSelectionForeground: colorRegistry_1.listActiveSelectionForeground,\n    listFocusAndSelectionBackground: colorRegistry_1.listActiveSelectionBackground,\n    listFocusAndSelectionForeground: colorRegistry_1.listActiveSelectionForeground,\n    listInactiveSelectionBackground: colorRegistry_1.listInactiveSelectionBackground,\n    listInactiveSelectionForeground: colorRegistry_1.listInactiveSelectionForeground,\n    listInactiveFocusBackground: colorRegistry_1.listInactiveFocusBackground,\n    listHoverBackground: colorRegistry_1.listHoverBackground,\n    listHoverForeground: colorRegistry_1.listHoverForeground,\n    listDropBackground: colorRegistry_1.listDropBackground,\n    listFocusOutline: colorRegistry_1.activeContrastBorder,\n    listSelectionOutline: colorRegistry_1.activeContrastBorder,\n    listHoverOutline: colorRegistry_1.activeContrastBorder,\n    listFilterWidgetBackground: colorRegistry_1.listFilterWidgetBackground,\n    listFilterWidgetOutline: colorRegistry_1.listFilterWidgetOutline,\n    listFilterWidgetNoMatchesOutline: colorRegistry_1.listFilterWidgetNoMatchesOutline,\n    listMatchesShadow: colorRegistry_1.widgetShadow\n};\nfunction attachButtonStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        buttonForeground: (style && style.buttonForeground) || colorRegistry_1.buttonForeground,\n        buttonBackground: (style && style.buttonBackground) || colorRegistry_1.buttonBackground,\n        buttonHoverBackground: (style && style.buttonHoverBackground) || colorRegistry_1.buttonHoverBackground,\n        buttonBorder: colorRegistry_1.contrastBorder\n    }, widget);\n}\nexports.attachButtonStyler = attachButtonStyler;\nfunction attachProgressBarStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        progressBarBackground: (style && style.progressBarBackground) || colorRegistry_1.progressBarBackground\n    }, widget);\n}\nexports.attachProgressBarStyler = attachProgressBarStyler;\nfunction attachStylerCallback(themeService, colors, callback) {\n    return attachStyler(themeService, colors, callback);\n}\nexports.attachStylerCallback = attachStylerCallback;\nexports.defaultBreadcrumbsStyles = {\n    breadcrumbsBackground: colorRegistry_1.breadcrumbsBackground,\n    breadcrumbsForeground: colorRegistry_1.breadcrumbsForeground,\n    breadcrumbsHoverForeground: colorRegistry_1.breadcrumbsFocusForeground,\n    breadcrumbsFocusForeground: colorRegistry_1.breadcrumbsFocusForeground,\n    breadcrumbsFocusAndSelectionForeground: colorRegistry_1.breadcrumbsActiveSelectionForeground,\n};\nfunction attachBreadcrumbsStyler(widget, themeService, style) {\n    return attachStyler(themeService, tslib_1.__assign({}, exports.defaultBreadcrumbsStyles, style), widget);\n}\nexports.attachBreadcrumbsStyler = attachBreadcrumbsStyler;\nexports.defaultMenuStyles = {\n    shadowColor: colorRegistry_1.widgetShadow,\n    borderColor: colorRegistry_1.menuBorder,\n    foregroundColor: colorRegistry_1.menuForeground,\n    backgroundColor: colorRegistry_1.menuBackground,\n    selectionForegroundColor: colorRegistry_1.menuSelectionForeground,\n    selectionBackgroundColor: colorRegistry_1.menuSelectionBackground,\n    selectionBorderColor: colorRegistry_1.menuSelectionBorder,\n    separatorColor: colorRegistry_1.menuSeparatorBackground\n};\nfunction attachMenuStyler(widget, themeService, style) {\n    return attachStyler(themeService, tslib_1.__assign({}, exports.defaultMenuStyles, style), widget);\n}\nexports.attachMenuStyler = attachMenuStyler;\nexports.defaultDialogStyles = {\n    dialogBackground: colorRegistry_1.editorWidgetBackground,\n    dialogForeground: colorRegistry_1.foreground,\n    dialogShadow: colorRegistry_1.widgetShadow,\n    dialogBorder: colorRegistry_1.contrastBorder,\n    buttonForeground: colorRegistry_1.buttonForeground,\n    buttonBackground: colorRegistry_1.buttonBackground,\n    buttonHoverBackground: colorRegistry_1.buttonHoverBackground,\n    buttonBorder: colorRegistry_1.contrastBorder\n};\nfunction attachDialogStyler(widget, themeService, style) {\n    return attachStyler(themeService, tslib_1.__assign({}, exports.defaultDialogStyles, style), widget);\n}\nexports.attachDialogStyler = attachDialogStyler;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITheme, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { focusBorder, inputBackground, inputForeground, ColorIdentifier, selectForeground, selectBackground, selectListBackground, selectBorder, inputBorder, foreground, editorBackground, contrastBorder, inputActiveOptionBorder, listFocusBackground, listFocusForeground, listActiveSelectionBackground, listActiveSelectionForeground, listInactiveSelectionForeground, listInactiveSelectionBackground, listInactiveFocusBackground, listHoverBackground, listHoverForeground, listDropBackground, pickerGroupBorder, pickerGroupForeground, widgetShadow, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationErrorBorder, inputValidationErrorBackground, activeContrastBorder, buttonForeground, buttonBackground, buttonHoverBackground, ColorFunction, badgeBackground, badgeForeground, progressBarBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, breadcrumbsBackground, editorWidgetBorder, inputValidationInfoForeground, inputValidationWarningForeground, inputValidationErrorForeground, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuBorder, menuSeparatorBackground, darken, listFilterWidgetOutline, listFilterWidgetNoMatchesOutline, listFilterWidgetBackground, editorWidgetBackground } from 'vs/platform/theme/common/colorRegistry';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Color } from 'vs/base/common/color';\nimport { mixin } from 'vs/base/common/objects';\n\nexport type styleFn = (colors: { [name: string]: Color | undefined }) => void;\n\nexport interface IStyleOverrides {\n\t[color: string]: ColorIdentifier | undefined;\n}\n\nexport interface IThemable {\n\tstyle: styleFn;\n}\n\nexport interface IColorMapping {\n\t[optionsKey: string]: ColorIdentifier | ColorFunction | undefined;\n}\n\nexport interface IComputedStyles {\n\t[color: string]: Color | undefined;\n}\n\nexport function computeStyles(theme: ITheme, styleMap: IColorMapping): IComputedStyles {\n\tconst styles = Object.create(null) as IComputedStyles;\n\tfor (let key in styleMap) {\n\t\tconst value = styleMap[key as string];\n\t\tif (typeof value === 'string') {\n\t\t\tstyles[key] = theme.getColor(value);\n\t\t} else if (typeof value === 'function') {\n\t\t\tstyles[key] = value(theme);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\nexport function attachStyler<T extends IColorMapping>(themeService: IThemeService, styleMap: T, widgetOrCallback: IThemable | styleFn): IDisposable {\n\tfunction applyStyles(theme: ITheme): void {\n\t\tconst styles = computeStyles(themeService.getTheme(), styleMap);\n\n\t\tif (typeof widgetOrCallback === 'function') {\n\t\t\twidgetOrCallback(styles);\n\t\t} else {\n\t\t\twidgetOrCallback.style(styles);\n\t\t}\n\t}\n\n\tapplyStyles(themeService.getTheme());\n\n\treturn themeService.onThemeChange(applyStyles);\n}\n\nexport interface ICheckboxStyleOverrides extends IStyleOverrides {\n\tinputActiveOptionBorderColor?: ColorIdentifier;\n}\n\nexport function attachCheckboxStyler(widget: IThemable, themeService: IThemeService, style?: ICheckboxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputActiveOptionBorder: (style && style.inputActiveOptionBorderColor) || inputActiveOptionBorder\n\t} as ICheckboxStyleOverrides, widget);\n}\n\nexport interface IBadgeStyleOverrides extends IStyleOverrides {\n\tbadgeBackground?: ColorIdentifier;\n\tbadgeForeground?: ColorIdentifier;\n}\n\nexport function attachBadgeStyler(widget: IThemable, themeService: IThemeService, style?: IBadgeStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tbadgeBackground: (style && style.badgeBackground) || badgeBackground,\n\t\tbadgeForeground: (style && style.badgeForeground) || badgeForeground,\n\t\tbadgeBorder: contrastBorder\n\t} as IBadgeStyleOverrides, widget);\n}\n\nexport interface IInputBoxStyleOverrides extends IStyleOverrides {\n\tinputBackground?: ColorIdentifier;\n\tinputForeground?: ColorIdentifier;\n\tinputBorder?: ColorIdentifier;\n\tinputActiveOptionBorder?: ColorIdentifier;\n\tinputValidationInfoBorder?: ColorIdentifier;\n\tinputValidationInfoBackground?: ColorIdentifier;\n\tinputValidationInfoForeground?: ColorIdentifier;\n\tinputValidationWarningBorder?: ColorIdentifier;\n\tinputValidationWarningBackground?: ColorIdentifier;\n\tinputValidationWarningForeground?: ColorIdentifier;\n\tinputValidationErrorBorder?: ColorIdentifier;\n\tinputValidationErrorBackground?: ColorIdentifier;\n\tinputValidationErrorForeground?: ColorIdentifier;\n}\n\nexport function attachInputBoxStyler(widget: IThemable, themeService: IThemeService, style?: IInputBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputBackground: (style && style.inputBackground) || inputBackground,\n\t\tinputForeground: (style && style.inputForeground) || inputForeground,\n\t\tinputBorder: (style && style.inputBorder) || inputBorder,\n\t\tinputValidationInfoBorder: (style && style.inputValidationInfoBorder) || inputValidationInfoBorder,\n\t\tinputValidationInfoBackground: (style && style.inputValidationInfoBackground) || inputValidationInfoBackground,\n\t\tinputValidationInfoForeground: (style && style.inputValidationInfoForeground) || inputValidationInfoForeground,\n\t\tinputValidationWarningBorder: (style && style.inputValidationWarningBorder) || inputValidationWarningBorder,\n\t\tinputValidationWarningBackground: (style && style.inputValidationWarningBackground) || inputValidationWarningBackground,\n\t\tinputValidationWarningForeground: (style && style.inputValidationWarningForeground) || inputValidationWarningForeground,\n\t\tinputValidationErrorBorder: (style && style.inputValidationErrorBorder) || inputValidationErrorBorder,\n\t\tinputValidationErrorBackground: (style && style.inputValidationErrorBackground) || inputValidationErrorBackground,\n\t\tinputValidationErrorForeground: (style && style.inputValidationErrorForeground) || inputValidationErrorForeground\n\t} as IInputBoxStyleOverrides, widget);\n}\n\nexport interface ISelectBoxStyleOverrides extends IStyleOverrides, IListStyleOverrides {\n\tselectBackground?: ColorIdentifier;\n\tselectListBackground?: ColorIdentifier;\n\tselectForeground?: ColorIdentifier;\n\tdecoratorRightForeground?: ColorIdentifier;\n\tselectBorder?: ColorIdentifier;\n\tfocusBorder?: ColorIdentifier;\n}\n\nexport function attachSelectBoxStyler(widget: IThemable, themeService: IThemeService, style?: ISelectBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tselectBackground: (style && style.selectBackground) || selectBackground,\n\t\tselectListBackground: (style && style.selectListBackground) || selectListBackground,\n\t\tselectForeground: (style && style.selectForeground) || selectForeground,\n\t\tdecoratorRightForeground: (style && style.pickerGroupForeground) || pickerGroupForeground,\n\t\tselectBorder: (style && style.selectBorder) || selectBorder,\n\t\tfocusBorder: (style && style.focusBorder) || focusBorder,\n\t\tlistFocusBackground: (style && style.listFocusBackground) || listFocusBackground,\n\t\tlistFocusForeground: (style && style.listFocusForeground) || listFocusForeground,\n\t\tlistFocusOutline: (style && style.listFocusOutline) || activeContrastBorder,\n\t\tlistHoverBackground: (style && style.listHoverBackground) || listHoverBackground,\n\t\tlistHoverForeground: (style && style.listHoverForeground) || listHoverForeground,\n\t\tlistHoverOutline: (style && style.listFocusOutline) || activeContrastBorder,\n\t\tselectListBorder: (style && style.selectListBorder) || editorWidgetBorder\n\t} as ISelectBoxStyleOverrides, widget);\n}\n\nexport function attachFindInputBoxStyler(widget: IThemable, themeService: IThemeService, style?: IInputBoxStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tinputBackground: (style && style.inputBackground) || inputBackground,\n\t\tinputForeground: (style && style.inputForeground) || inputForeground,\n\t\tinputBorder: (style && style.inputBorder) || inputBorder,\n\t\tinputActiveOptionBorder: (style && style.inputActiveOptionBorder) || inputActiveOptionBorder,\n\t\tinputValidationInfoBorder: (style && style.inputValidationInfoBorder) || inputValidationInfoBorder,\n\t\tinputValidationInfoBackground: (style && style.inputValidationInfoBackground) || inputValidationInfoBackground,\n\t\tinputValidationInfoForeground: (style && style.inputValidationInfoForeground) || inputValidationInfoForeground,\n\t\tinputValidationWarningBorder: (style && style.inputValidationWarningBorder) || inputValidationWarningBorder,\n\t\tinputValidationWarningBackground: (style && style.inputValidationWarningBackground) || inputValidationWarningBackground,\n\t\tinputValidationWarningForeground: (style && style.inputValidationWarningForeground) || inputValidationWarningForeground,\n\t\tinputValidationErrorBorder: (style && style.inputValidationErrorBorder) || inputValidationErrorBorder,\n\t\tinputValidationErrorBackground: (style && style.inputValidationErrorBackground) || inputValidationErrorBackground,\n\t\tinputValidationErrorForeground: (style && style.inputValidationErrorForeground) || inputValidationErrorForeground\n\t} as IInputBoxStyleOverrides, widget);\n}\n\nexport interface IQuickOpenStyleOverrides extends IListStyleOverrides, IInputBoxStyleOverrides, IProgressBarStyleOverrides {\n\tforeground?: ColorIdentifier;\n\tbackground?: ColorIdentifier;\n\tborderColor?: ColorIdentifier;\n\twidgetShadow?: ColorIdentifier;\n\tpickerGroupForeground?: ColorIdentifier;\n\tpickerGroupBorder?: ColorIdentifier;\n}\n\nexport function attachQuickOpenStyler(widget: IThemable, themeService: IThemeService, style?: IQuickOpenStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tforeground: (style && style.foreground) || foreground,\n\t\tbackground: (style && style.background) || editorBackground,\n\t\tborderColor: style && style.borderColor || contrastBorder,\n\t\twidgetShadow: style && style.widgetShadow || widgetShadow,\n\t\tprogressBarBackground: style && style.progressBarBackground || progressBarBackground,\n\t\tpickerGroupForeground: style && style.pickerGroupForeground || pickerGroupForeground,\n\t\tpickerGroupBorder: style && style.pickerGroupBorder || pickerGroupBorder,\n\t\tinputBackground: (style && style.inputBackground) || inputBackground,\n\t\tinputForeground: (style && style.inputForeground) || inputForeground,\n\t\tinputBorder: (style && style.inputBorder) || inputBorder,\n\t\tinputValidationInfoBorder: (style && style.inputValidationInfoBorder) || inputValidationInfoBorder,\n\t\tinputValidationInfoBackground: (style && style.inputValidationInfoBackground) || inputValidationInfoBackground,\n\t\tinputValidationInfoForeground: (style && style.inputValidationInfoForeground) || inputValidationInfoForeground,\n\t\tinputValidationWarningBorder: (style && style.inputValidationWarningBorder) || inputValidationWarningBorder,\n\t\tinputValidationWarningBackground: (style && style.inputValidationWarningBackground) || inputValidationWarningBackground,\n\t\tinputValidationWarningForeground: (style && style.inputValidationWarningForeground) || inputValidationWarningForeground,\n\t\tinputValidationErrorBorder: (style && style.inputValidationErrorBorder) || inputValidationErrorBorder,\n\t\tinputValidationErrorBackground: (style && style.inputValidationErrorBackground) || inputValidationErrorBackground,\n\t\tinputValidationErrorForeground: (style && style.inputValidationErrorForeground) || inputValidationErrorForeground,\n\t\tlistFocusBackground: (style && style.listFocusBackground) || listFocusBackground,\n\t\tlistFocusForeground: (style && style.listFocusForeground) || listFocusForeground,\n\t\tlistActiveSelectionBackground: (style && style.listActiveSelectionBackground) || darken(listActiveSelectionBackground, 0.1),\n\t\tlistActiveSelectionForeground: (style && style.listActiveSelectionForeground) || listActiveSelectionForeground,\n\t\tlistFocusAndSelectionBackground: style && style.listFocusAndSelectionBackground || listActiveSelectionBackground,\n\t\tlistFocusAndSelectionForeground: (style && style.listFocusAndSelectionForeground) || listActiveSelectionForeground,\n\t\tlistInactiveSelectionBackground: (style && style.listInactiveSelectionBackground) || listInactiveSelectionBackground,\n\t\tlistInactiveSelectionForeground: (style && style.listInactiveSelectionForeground) || listInactiveSelectionForeground,\n\t\tlistInactiveFocusBackground: (style && style.listInactiveFocusBackground) || listInactiveFocusBackground,\n\t\tlistHoverBackground: (style && style.listHoverBackground) || listHoverBackground,\n\t\tlistHoverForeground: (style && style.listHoverForeground) || listHoverForeground,\n\t\tlistDropBackground: (style && style.listDropBackground) || listDropBackground,\n\t\tlistFocusOutline: (style && style.listFocusOutline) || activeContrastBorder,\n\t\tlistSelectionOutline: (style && style.listSelectionOutline) || activeContrastBorder,\n\t\tlistHoverOutline: (style && style.listHoverOutline) || activeContrastBorder\n\t} as IQuickOpenStyleOverrides, widget);\n}\n\nexport interface IListStyleOverrides extends IStyleOverrides {\n\tlistFocusBackground?: ColorIdentifier;\n\tlistFocusForeground?: ColorIdentifier;\n\tlistActiveSelectionBackground?: ColorIdentifier;\n\tlistActiveSelectionForeground?: ColorIdentifier;\n\tlistFocusAndSelectionBackground?: ColorIdentifier;\n\tlistFocusAndSelectionForeground?: ColorIdentifier;\n\tlistInactiveSelectionBackground?: ColorIdentifier;\n\tlistInactiveSelectionForeground?: ColorIdentifier;\n\tlistInactiveFocusBackground?: ColorIdentifier;\n\tlistHoverBackground?: ColorIdentifier;\n\tlistHoverForeground?: ColorIdentifier;\n\tlistDropBackground?: ColorIdentifier;\n\tlistFocusOutline?: ColorIdentifier;\n\tlistInactiveFocusOutline?: ColorIdentifier;\n\tlistSelectionOutline?: ColorIdentifier;\n\tlistHoverOutline?: ColorIdentifier;\n\tlistFilterWidgetBackground?: ColorIdentifier;\n\tlistFilterWidgetOutline?: ColorIdentifier;\n\tlistFilterWidgetNoMatchesOutline?: ColorIdentifier;\n\tlistMatchesShadow?: ColorIdentifier;\n}\n\nexport function attachListStyler(widget: IThemable, themeService: IThemeService, overrides?: IListStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, mixin(overrides || Object.create(null), defaultListStyles, false) as IListStyleOverrides, widget);\n}\n\nexport const defaultListStyles: IColorMapping = {\n\tlistFocusBackground: listFocusBackground,\n\tlistFocusForeground: listFocusForeground,\n\tlistActiveSelectionBackground: darken(listActiveSelectionBackground, 0.1),\n\tlistActiveSelectionForeground: listActiveSelectionForeground,\n\tlistFocusAndSelectionBackground: listActiveSelectionBackground,\n\tlistFocusAndSelectionForeground: listActiveSelectionForeground,\n\tlistInactiveSelectionBackground: listInactiveSelectionBackground,\n\tlistInactiveSelectionForeground: listInactiveSelectionForeground,\n\tlistInactiveFocusBackground: listInactiveFocusBackground,\n\tlistHoverBackground: listHoverBackground,\n\tlistHoverForeground: listHoverForeground,\n\tlistDropBackground: listDropBackground,\n\tlistFocusOutline: activeContrastBorder,\n\tlistSelectionOutline: activeContrastBorder,\n\tlistHoverOutline: activeContrastBorder,\n\tlistFilterWidgetBackground: listFilterWidgetBackground,\n\tlistFilterWidgetOutline: listFilterWidgetOutline,\n\tlistFilterWidgetNoMatchesOutline: listFilterWidgetNoMatchesOutline,\n\tlistMatchesShadow: widgetShadow\n};\n\nexport interface IButtonStyleOverrides extends IStyleOverrides {\n\tbuttonForeground?: ColorIdentifier;\n\tbuttonBackground?: ColorIdentifier;\n\tbuttonHoverBackground?: ColorIdentifier;\n}\n\nexport function attachButtonStyler(widget: IThemable, themeService: IThemeService, style?: IButtonStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tbuttonForeground: (style && style.buttonForeground) || buttonForeground,\n\t\tbuttonBackground: (style && style.buttonBackground) || buttonBackground,\n\t\tbuttonHoverBackground: (style && style.buttonHoverBackground) || buttonHoverBackground,\n\t\tbuttonBorder: contrastBorder\n\t} as IButtonStyleOverrides, widget);\n}\n\nexport interface IProgressBarStyleOverrides extends IStyleOverrides {\n\tprogressBarBackground?: ColorIdentifier;\n}\n\nexport function attachProgressBarStyler(widget: IThemable, themeService: IThemeService, style?: IProgressBarStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, {\n\t\tprogressBarBackground: (style && style.progressBarBackground) || progressBarBackground\n\t} as IProgressBarStyleOverrides, widget);\n}\n\nexport function attachStylerCallback(themeService: IThemeService, colors: { [name: string]: ColorIdentifier }, callback: styleFn): IDisposable {\n\treturn attachStyler(themeService, colors, callback);\n}\n\nexport interface IBreadcrumbsWidgetStyleOverrides extends IColorMapping {\n\tbreadcrumbsBackground?: ColorIdentifier | ColorFunction;\n\tbreadcrumbsForeground?: ColorIdentifier;\n\tbreadcrumbsHoverForeground?: ColorIdentifier;\n\tbreadcrumbsFocusForeground?: ColorIdentifier;\n\tbreadcrumbsFocusAndSelectionForeground?: ColorIdentifier;\n}\n\nexport const defaultBreadcrumbsStyles = <IBreadcrumbsWidgetStyleOverrides>{\n\tbreadcrumbsBackground: breadcrumbsBackground,\n\tbreadcrumbsForeground: breadcrumbsForeground,\n\tbreadcrumbsHoverForeground: breadcrumbsFocusForeground,\n\tbreadcrumbsFocusForeground: breadcrumbsFocusForeground,\n\tbreadcrumbsFocusAndSelectionForeground: breadcrumbsActiveSelectionForeground,\n};\n\nexport function attachBreadcrumbsStyler(widget: IThemable, themeService: IThemeService, style?: IBreadcrumbsWidgetStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultBreadcrumbsStyles, ...style }, widget);\n}\n\nexport interface IMenuStyleOverrides extends IColorMapping {\n\tshadowColor?: ColorIdentifier;\n\tborderColor?: ColorIdentifier;\n\tforegroundColor?: ColorIdentifier;\n\tbackgroundColor?: ColorIdentifier;\n\tselectionForegroundColor?: ColorIdentifier;\n\tselectionBackgroundColor?: ColorIdentifier;\n\tselectionBorderColor?: ColorIdentifier;\n\tseparatorColor?: ColorIdentifier;\n}\n\nexport const defaultMenuStyles = <IMenuStyleOverrides>{\n\tshadowColor: widgetShadow,\n\tborderColor: menuBorder,\n\tforegroundColor: menuForeground,\n\tbackgroundColor: menuBackground,\n\tselectionForegroundColor: menuSelectionForeground,\n\tselectionBackgroundColor: menuSelectionBackground,\n\tselectionBorderColor: menuSelectionBorder,\n\tseparatorColor: menuSeparatorBackground\n};\n\nexport function attachMenuStyler(widget: IThemable, themeService: IThemeService, style?: IMenuStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultMenuStyles, ...style }, widget);\n}\n\nexport interface IDialogStyleOverrides extends IButtonStyleOverrides {\n\tdialogForeground?: ColorIdentifier;\n\tdialogBackground?: ColorIdentifier;\n\tdialogShadow?: ColorIdentifier;\n\tdialogBorder?: ColorIdentifier;\n}\n\nexport const defaultDialogStyles = <IDialogStyleOverrides>{\n\tdialogBackground: editorWidgetBackground,\n\tdialogForeground: foreground,\n\tdialogShadow: widgetShadow,\n\tdialogBorder: contrastBorder,\n\tbuttonForeground: buttonForeground,\n\tbuttonBackground: buttonBackground,\n\tbuttonHoverBackground: buttonHoverBackground,\n\tbuttonBorder: contrastBorder\n};\n\n\nexport function attachDialogStyler(widget: IThemable, themeService: IThemeService, style?: IDialogStyleOverrides): IDisposable {\n\treturn attachStyler(themeService, { ...defaultDialogStyles, ...style }, widget);\n}\n"]}]}