{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/lines/rangeUtil.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/lines/rangeUtil.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar renderingContext_1 = require(\"vs/editor/common/view/renderingContext\");\nvar FloatHorizontalRange = /** @class */ (function () {\n    function FloatHorizontalRange(left, width) {\n        this.left = left;\n        this.width = width;\n    }\n    FloatHorizontalRange.prototype.toString = function () {\n        return \"[\" + this.left + \",\" + this.width + \"]\";\n    };\n    FloatHorizontalRange.compare = function (a, b) {\n        return a.left - b.left;\n    };\n    return FloatHorizontalRange;\n}());\nvar RangeUtil = /** @class */ (function () {\n    function RangeUtil() {\n    }\n    RangeUtil._createRange = function () {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    };\n    RangeUtil._detachRange = function (range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    };\n    RangeUtil._readClientRects = function (startElement, startOffset, endElement, endOffset, endNode) {\n        var range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    };\n    RangeUtil._mergeAdjacentRanges = function (ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return [new renderingContext_1.HorizontalRange(ranges[0].left, ranges[0].width)];\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        var result = [], resultLen = 0;\n        var prevLeft = ranges[0].left;\n        var prevWidth = ranges[0].width;\n        for (var i = 1, len = ranges.length; i < len; i++) {\n            var range = ranges[i];\n            var myLeft = range.left;\n            var myWidth = range.width;\n            if (prevLeft + prevWidth + 0.9 /* account for browser's rounding errors*/ >= myLeft) {\n                prevWidth = Math.max(prevWidth, myLeft + myWidth - prevLeft);\n            }\n            else {\n                result[resultLen++] = new renderingContext_1.HorizontalRange(prevLeft, prevWidth);\n                prevLeft = myLeft;\n                prevWidth = myWidth;\n            }\n        }\n        result[resultLen++] = new renderingContext_1.HorizontalRange(prevLeft, prevWidth);\n        return result;\n    };\n    RangeUtil._createHorizontalRangesFromClientRects = function (clientRects, clientRectDeltaLeft) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        var result = [];\n        for (var i = 0, len = clientRects.length; i < len; i++) {\n            var clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, clientRect.left - clientRectDeltaLeft), clientRect.width);\n        }\n        return this._mergeAdjacentRanges(result);\n    };\n    RangeUtil.readHorizontalRanges = function (domNode, startChildIndex, startOffset, endChildIndex, endOffset, clientRectDeltaLeft, endNode) {\n        // Panic check\n        var min = 0;\n        var max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = Number.MAX_VALUE;\n            }\n        }\n        var startElement = domNode.children[startChildIndex].firstChild;\n        var endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = uint_1.Constants.MAX_SAFE_SMALL_INTEGER;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = uint_1.Constants.MAX_SAFE_SMALL_INTEGER;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        var clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, endNode);\n        return this._createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft);\n    };\n    return RangeUtil;\n}());\nexports.RangeUtil = RangeUtil;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/lines/rangeUtil.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/lines/rangeUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { HorizontalRange } from 'vs/editor/common/view/renderingContext';\n\nclass FloatHorizontalRange {\n\t_floatHorizontalRangeBrand: void;\n\n\tpublic readonly left: number;\n\tpublic readonly width: number;\n\n\tconstructor(left: number, width: number) {\n\t\tthis.left = left;\n\t\tthis.width = width;\n\t}\n\n\tpublic toString(): string {\n\t\treturn `[${this.left},${this.width}]`;\n\t}\n\n\tpublic static compare(a: FloatHorizontalRange, b: FloatHorizontalRange): number {\n\t\treturn a.left - b.left;\n\t}\n}\n\nexport class RangeUtil {\n\n\t/**\n\t * Reusing the same range here\n\t * because IE is buggy and constantly freezes when using a large number\n\t * of ranges and calling .detach on them\n\t */\n\tprivate static _handyReadyRange: Range;\n\n\tprivate static _createRange(): Range {\n\t\tif (!this._handyReadyRange) {\n\t\t\tthis._handyReadyRange = document.createRange();\n\t\t}\n\t\treturn this._handyReadyRange;\n\t}\n\n\tprivate static _detachRange(range: Range, endNode: HTMLElement): void {\n\t\t// Move range out of the span node, IE doesn't like having many ranges in\n\t\t// the same spot and will act badly for lines containing dashes ('-')\n\t\trange.selectNodeContents(endNode);\n\t}\n\n\tprivate static _readClientRects(startElement: Node, startOffset: number, endElement: Node, endOffset: number, endNode: HTMLElement): ClientRectList | DOMRectList | null {\n\t\tconst range = this._createRange();\n\t\ttry {\n\t\t\trange.setStart(startElement, startOffset);\n\t\t\trange.setEnd(endElement, endOffset);\n\n\t\t\treturn range.getClientRects();\n\t\t} catch (e) {\n\t\t\t// This is life ...\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tthis._detachRange(range, endNode);\n\t\t}\n\t}\n\n\tprivate static _mergeAdjacentRanges(ranges: FloatHorizontalRange[]): HorizontalRange[] {\n\t\tif (ranges.length === 1) {\n\t\t\t// There is nothing to merge\n\t\t\treturn [new HorizontalRange(ranges[0].left, ranges[0].width)];\n\t\t}\n\n\t\tranges.sort(FloatHorizontalRange.compare);\n\n\t\tlet result: HorizontalRange[] = [], resultLen = 0;\n\t\tlet prevLeft = ranges[0].left;\n\t\tlet prevWidth = ranges[0].width;\n\n\t\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\t\tconst range = ranges[i];\n\t\t\tconst myLeft = range.left;\n\t\t\tconst myWidth = range.width;\n\n\t\t\tif (prevLeft + prevWidth + 0.9 /* account for browser's rounding errors*/ >= myLeft) {\n\t\t\t\tprevWidth = Math.max(prevWidth, myLeft + myWidth - prevLeft);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = new HorizontalRange(prevLeft, prevWidth);\n\t\t\t\tprevLeft = myLeft;\n\t\t\t\tprevWidth = myWidth;\n\t\t\t}\n\t\t}\n\n\t\tresult[resultLen++] = new HorizontalRange(prevLeft, prevWidth);\n\n\t\treturn result;\n\t}\n\n\tprivate static _createHorizontalRangesFromClientRects(clientRects: ClientRectList | DOMRectList | null, clientRectDeltaLeft: number): HorizontalRange[] | null {\n\t\tif (!clientRects || clientRects.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We go through FloatHorizontalRange because it has been observed in bi-di text\n\t\t// that the clientRects are not coming in sorted from the browser\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tfor (let i = 0, len = clientRects.length; i < len; i++) {\n\t\t\tconst clientRect = clientRects[i];\n\t\t\tresult[i] = new FloatHorizontalRange(Math.max(0, clientRect.left - clientRectDeltaLeft), clientRect.width);\n\t\t}\n\n\t\treturn this._mergeAdjacentRanges(result);\n\t}\n\n\tpublic static readHorizontalRanges(domNode: HTMLElement, startChildIndex: number, startOffset: number, endChildIndex: number, endOffset: number, clientRectDeltaLeft: number, endNode: HTMLElement): HorizontalRange[] | null {\n\t\t// Panic check\n\t\tconst min = 0;\n\t\tconst max = domNode.children.length - 1;\n\t\tif (min > max) {\n\t\t\treturn null;\n\t\t}\n\t\tstartChildIndex = Math.min(max, Math.max(min, startChildIndex));\n\t\tendChildIndex = Math.min(max, Math.max(min, endChildIndex));\n\n\t\t// If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n\t\t// Chrome is buggy and doesn't handle 0 offsets well sometimes.\n\t\tif (startChildIndex !== endChildIndex) {\n\t\t\tif (endChildIndex > 0 && endOffset === 0) {\n\t\t\t\tendChildIndex--;\n\t\t\t\tendOffset = Number.MAX_VALUE;\n\t\t\t}\n\t\t}\n\n\t\tlet startElement = domNode.children[startChildIndex].firstChild;\n\t\tlet endElement = domNode.children[endChildIndex].firstChild;\n\n\t\tif (!startElement || !endElement) {\n\t\t\t// When having an empty <span> (without any text content), try to move to the previous <span>\n\t\t\tif (!startElement && startOffset === 0 && startChildIndex > 0) {\n\t\t\t\tstartElement = domNode.children[startChildIndex - 1].firstChild;\n\t\t\t\tstartOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t\tif (!endElement && endOffset === 0 && endChildIndex > 0) {\n\t\t\t\tendElement = domNode.children[endChildIndex - 1].firstChild;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tif (!startElement || !endElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartOffset = Math.min(startElement.textContent!.length, Math.max(0, startOffset));\n\t\tendOffset = Math.min(endElement.textContent!.length, Math.max(0, endOffset));\n\n\t\tconst clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, endNode);\n\t\treturn this._createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft);\n\t}\n}\n"]}]}