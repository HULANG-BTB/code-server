{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/common/process.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/process.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"vs/base/common/platform\");\nvar safeProcess = (typeof process === 'undefined') ? {\n    cwd: function () { return '/'; },\n    env: Object.create(null),\n    get platform() { return platform_1.isWindows ? 'win32' : platform_1.isMacintosh ? 'darwin' : 'linux'; },\n    nextTick: function (callback) { return platform_1.setImmediate(callback); }\n} : process;\nexports.cwd = safeProcess.cwd;\nexports.env = safeProcess.env;\nexports.platform = safeProcess.platform;\nexports.nextTick = safeProcess.nextTick;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/common/process.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/common/process.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,oDAA+E;AAW/E,IAAM,WAAW,GAAa,CAAC,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;IAChE,GAAG,EAAH,cAAgB,OAAO,GAAG,CAAC,CAAC,CAAC;IAC7B,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACxB,IAAI,QAAQ,KAAa,OAAO,oBAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACzF,QAAQ,EAAR,UAAS,QAAkC,IAAY,OAAO,uBAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;CACvF,CAAC,CAAC,CAAC,OAAO,CAAC;AAEC,QAAA,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;AACtB,QAAA,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;AACtB,QAAA,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;AAChC,QAAA,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: object;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): number;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): number { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n"]}]}