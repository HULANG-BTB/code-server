{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/comments.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/comments.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nrequire(\"vs/workbench/contrib/comments/browser/commentsEditorContribution\");\nvar commentService_1 = require(\"vs/workbench/contrib/comments/browser/commentService\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nplatform_1.Registry.as(configurationRegistry_1.Extensions.Configuration).registerConfiguration({\n    id: 'comments',\n    order: 20,\n    title: nls.localize('commentsConfigurationTitle', \"Comments\"),\n    type: 'object',\n    properties: {\n        'comments.openPanel': {\n            enum: ['neverOpen', 'openOnSessionStart', 'openOnSessionStartWithComments'],\n            default: 'openOnSessionStartWithComments',\n            description: nls.localize('openComments', \"Controls when the comments panel should open.\")\n        }\n    }\n});\nextensions_1.registerSingleton(commentService_1.ICommentService, commentService_1.CommentService);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/comments.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/comments.contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,4BAA8B;AAC9B,0EAAgF;AAChF,iEAAgE;AAChE,4EAA0E;AAC1E,uFAAuG;AACvG,gGAAuI;AAMvI,mBAAQ,CAAC,EAAE,CAAyB,kCAAuB,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC;IAChG,EAAE,EAAE,UAAU;IACd,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,4BAA4B,EAAE,UAAU,CAAC;IAC7D,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACX,oBAAoB,EAAE;YACrB,IAAI,EAAE,CAAC,WAAW,EAAE,oBAAoB,EAAE,gCAAgC,CAAC;YAC3E,OAAO,EAAE,gCAAgC;YACzC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,+CAA+C,CAAC;SAC1F;KACD;CACD,CAAC,CAAC;AAEH,8BAAiB,CAAC,gCAAe,EAAE,+BAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport 'vs/workbench/contrib/comments/browser/commentsEditorContribution';\nimport { ICommentService, CommentService } from 'vs/workbench/contrib/comments/browser/commentService';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\n\nexport interface ICommentsConfiguration {\n\topenPanel: 'neverOpen' | 'openOnSessionStart' | 'openOnSessionStartWithComments';\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'comments',\n\torder: 20,\n\ttitle: nls.localize('commentsConfigurationTitle', \"Comments\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'comments.openPanel': {\n\t\t\tenum: ['neverOpen', 'openOnSessionStart', 'openOnSessionStartWithComments'],\n\t\t\tdefault: 'openOnSessionStartWithComments',\n\t\t\tdescription: nls.localize('openComments', \"Controls when the comments panel should open.\")\n\t\t}\n\t}\n});\n\nregisterSingleton(ICommentService, CommentService);\n"]}]}