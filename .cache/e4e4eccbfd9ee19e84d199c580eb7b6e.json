{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/packages/vscode/src/fill/codeEditor.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/codeEditor.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["define([\"require\", \"exports\", \"path\", \"vs/editor/browser/services/codeEditorServiceImpl\"], function (require, exports, path_1, editor) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * This converts icon paths for decorations to the correct URL.\n     */\n    class CodeEditorServiceImpl extends editor.CodeEditorServiceImpl {\n        registerDecorationType(key, options, parentTypeKey) {\n            super.registerDecorationType(key, options ? Object.assign({}, options, { gutterIconPath: options.gutterIconPath && options.gutterIconPath.scheme === \"file\" ? Object.assign({}, options.gutterIconPath, { scheme: location.protocol.replace(\":\", \"\"), authority: location.host, path: path_1.join(\"/resource\", options.gutterIconPath.path) }) : options.gutterIconPath }) : {}, parentTypeKey);\n        }\n    }\n    const target = editor;\n    target.CodeEditorServiceImpl = CodeEditorServiceImpl;\n});\n",null]}