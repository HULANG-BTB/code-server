{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverWidgets.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar scrollableElement_1 = require(\"vs/base/browser/ui/scrollbar/scrollableElement\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorBrowser = require(\"vs/editor/browser/editorBrowser\");\nvar ContentHoverWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(ContentHoverWidget, _super);\n    function ContentHoverWidget(id, editor) {\n        var _this = _super.call(this) || this;\n        _this.disposables = [];\n        // Editor.IContentWidget.allowEditorOverflow\n        _this.allowEditorOverflow = true;\n        _this._id = id;\n        _this._editor = editor;\n        _this._isVisible = false;\n        _this._containerDomNode = document.createElement('div');\n        _this._containerDomNode.className = 'monaco-editor-hover hidden';\n        _this._containerDomNode.tabIndex = 0;\n        _this._domNode = document.createElement('div');\n        _this._domNode.className = 'monaco-editor-hover-content';\n        _this.scrollbar = new scrollableElement_1.DomScrollableElement(_this._domNode, {});\n        _this.disposables.push(_this.scrollbar);\n        _this._containerDomNode.appendChild(_this.scrollbar.getDomNode());\n        _this.onkeydown(_this._containerDomNode, function (e) {\n            if (e.equals(keyCodes_1.KeyCode.Escape)) {\n                _this.hide();\n            }\n        });\n        _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo) {\n                _this.updateFont();\n            }\n        }));\n        _this._editor.onDidLayoutChange(function (e) { return _this.layout(); });\n        _this.layout();\n        _this._editor.addContentWidget(_this);\n        _this._showAtPosition = null;\n        _this._showAtRange = null;\n        return _this;\n    }\n    Object.defineProperty(ContentHoverWidget.prototype, \"isVisible\", {\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (value) {\n            this._isVisible = value;\n            dom_1.toggleClass(this._containerDomNode, 'hidden', !this._isVisible);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContentHoverWidget.prototype.getId = function () {\n        return this._id;\n    };\n    ContentHoverWidget.prototype.getDomNode = function () {\n        return this._containerDomNode;\n    };\n    ContentHoverWidget.prototype.showAt = function (position, range, focus) {\n        // Position has changed\n        this._showAtPosition = position;\n        this._showAtRange = range;\n        this.isVisible = true;\n        this._editor.layoutContentWidget(this);\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        this._stoleFocus = focus;\n        if (focus) {\n            this._containerDomNode.focus();\n        }\n    };\n    ContentHoverWidget.prototype.hide = function () {\n        if (!this.isVisible) {\n            return;\n        }\n        this.isVisible = false;\n        this._editor.layoutContentWidget(this);\n        if (this._stoleFocus) {\n            this._editor.focus();\n        }\n    };\n    ContentHoverWidget.prototype.getPosition = function () {\n        if (this.isVisible) {\n            return {\n                position: this._showAtPosition,\n                range: this._showAtRange,\n                preference: [\n                    editorBrowser.ContentWidgetPositionPreference.ABOVE,\n                    editorBrowser.ContentWidgetPositionPreference.BELOW\n                ]\n            };\n        }\n        return null;\n    };\n    ContentHoverWidget.prototype.dispose = function () {\n        this._editor.removeContentWidget(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    ContentHoverWidget.prototype.updateFont = function () {\n        var _this = this;\n        var codeClasses = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\n        codeClasses.forEach(function (node) { return _this._editor.applyFontInfo(node); });\n    };\n    ContentHoverWidget.prototype.updateContents = function (node) {\n        this._domNode.textContent = '';\n        this._domNode.appendChild(node);\n        this.updateFont();\n        this._editor.layoutContentWidget(this);\n        this.onContentsChange();\n    };\n    ContentHoverWidget.prototype.onContentsChange = function () {\n        this.scrollbar.scanDomNode();\n    };\n    ContentHoverWidget.prototype.layout = function () {\n        var height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        var _a = this._editor.getConfiguration().fontInfo, fontSize = _a.fontSize, lineHeight = _a.lineHeight;\n        this._domNode.style.fontSize = fontSize + \"px\";\n        this._domNode.style.lineHeight = lineHeight + \"px\";\n        this._domNode.style.maxHeight = height + \"px\";\n        this._domNode.style.maxWidth = Math.max(this._editor.getLayoutInfo().width * 0.66, 500) + \"px\";\n    };\n    return ContentHoverWidget;\n}(widget_1.Widget));\nexports.ContentHoverWidget = ContentHoverWidget;\nvar GlyphHoverWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(GlyphHoverWidget, _super);\n    function GlyphHoverWidget(id, editor) {\n        var _this = _super.call(this) || this;\n        _this._id = id;\n        _this._editor = editor;\n        _this._isVisible = false;\n        _this._domNode = document.createElement('div');\n        _this._domNode.className = 'monaco-editor-hover hidden';\n        _this._domNode.setAttribute('aria-hidden', 'true');\n        _this._domNode.setAttribute('role', 'presentation');\n        _this._showAtLineNumber = -1;\n        _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo) {\n                _this.updateFont();\n            }\n        }));\n        _this._editor.addOverlayWidget(_this);\n        return _this;\n    }\n    Object.defineProperty(GlyphHoverWidget.prototype, \"isVisible\", {\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (value) {\n            this._isVisible = value;\n            dom_1.toggleClass(this._domNode, 'hidden', !this._isVisible);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GlyphHoverWidget.prototype.getId = function () {\n        return this._id;\n    };\n    GlyphHoverWidget.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    GlyphHoverWidget.prototype.showAt = function (lineNumber) {\n        this._showAtLineNumber = lineNumber;\n        if (!this.isVisible) {\n            this.isVisible = true;\n        }\n        var editorLayout = this._editor.getLayoutInfo();\n        var topForLineNumber = this._editor.getTopForLineNumber(this._showAtLineNumber);\n        var editorScrollTop = this._editor.getScrollTop();\n        var lineHeight = this._editor.getConfiguration().lineHeight;\n        var nodeHeight = this._domNode.clientHeight;\n        var top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._domNode.style.left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + \"px\";\n        this._domNode.style.top = Math.max(Math.round(top), 0) + \"px\";\n    };\n    GlyphHoverWidget.prototype.hide = function () {\n        if (!this.isVisible) {\n            return;\n        }\n        this.isVisible = false;\n    };\n    GlyphHoverWidget.prototype.getPosition = function () {\n        return null;\n    };\n    GlyphHoverWidget.prototype.dispose = function () {\n        this._editor.removeOverlayWidget(this);\n        _super.prototype.dispose.call(this);\n    };\n    GlyphHoverWidget.prototype.updateFont = function () {\n        var _this = this;\n        var codeTags = Array.prototype.slice.call(this._domNode.getElementsByTagName('code'));\n        var codeClasses = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\n        codeTags.concat(codeClasses).forEach(function (node) { return _this._editor.applyFontInfo(node); });\n    };\n    GlyphHoverWidget.prototype.updateContents = function (node) {\n        this._domNode.textContent = '';\n        this._domNode.appendChild(node);\n        this.updateFont();\n    };\n    return GlyphHoverWidget;\n}(widget_1.Widget));\nexports.GlyphHoverWidget = GlyphHoverWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/hover/hoverWidgets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toggleClass } from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { IConfigurationChangedEvent } from 'vs/editor/common/config/editorOptions';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport class ContentHoverWidget extends Widget implements editorBrowser.IContentWidget {\n\n\tprivate readonly _id: string;\n\tprotected _editor: editorBrowser.ICodeEditor;\n\tprivate _isVisible: boolean;\n\tprivate readonly _containerDomNode: HTMLElement;\n\tprivate readonly _domNode: HTMLElement;\n\tprotected _showAtPosition: Position | null;\n\tprotected _showAtRange: Range | null;\n\tprivate _stoleFocus: boolean;\n\tprivate readonly scrollbar: DomScrollableElement;\n\tprivate disposables: IDisposable[] = [];\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\tpublic allowEditorOverflow = true;\n\n\tprotected get isVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tprotected set isVisible(value: boolean) {\n\t\tthis._isVisible = value;\n\t\ttoggleClass(this._containerDomNode, 'hidden', !this._isVisible);\n\t}\n\n\tconstructor(id: string, editor: editorBrowser.ICodeEditor) {\n\t\tsuper();\n\t\tthis._id = id;\n\t\tthis._editor = editor;\n\t\tthis._isVisible = false;\n\n\t\tthis._containerDomNode = document.createElement('div');\n\t\tthis._containerDomNode.className = 'monaco-editor-hover hidden';\n\t\tthis._containerDomNode.tabIndex = 0;\n\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'monaco-editor-hover-content';\n\n\t\tthis.scrollbar = new DomScrollableElement(this._domNode, {});\n\t\tthis.disposables.push(this.scrollbar);\n\t\tthis._containerDomNode.appendChild(this.scrollbar.getDomNode());\n\n\t\tthis.onkeydown(this._containerDomNode, (e: IKeyboardEvent) => {\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {\n\t\t\tif (e.fontInfo) {\n\t\t\t\tthis.updateFont();\n\t\t\t}\n\t\t}));\n\n\t\tthis._editor.onDidLayoutChange(e => this.layout());\n\n\t\tthis.layout();\n\t\tthis._editor.addContentWidget(this);\n\t\tthis._showAtPosition = null;\n\t\tthis._showAtRange = null;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._containerDomNode;\n\t}\n\n\tpublic showAt(position: Position, range: Range | null, focus: boolean): void {\n\t\t// Position has changed\n\t\tthis._showAtPosition = position;\n\t\tthis._showAtRange = range;\n\t\tthis.isVisible = true;\n\n\t\tthis._editor.layoutContentWidget(this);\n\t\t// Simply force a synchronous render on the editor\n\t\t// such that the widget does not really render with left = '0px'\n\t\tthis._editor.render();\n\t\tthis._stoleFocus = focus;\n\t\tif (focus) {\n\t\t\tthis._containerDomNode.focus();\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this.isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isVisible = false;\n\n\t\tthis._editor.layoutContentWidget(this);\n\t\tif (this._stoleFocus) {\n\t\t\tthis._editor.focus();\n\t\t}\n\t}\n\n\tpublic getPosition(): editorBrowser.IContentWidgetPosition | null {\n\t\tif (this.isVisible) {\n\t\t\treturn {\n\t\t\t\tposition: this._showAtPosition,\n\t\t\t\trange: this._showAtRange,\n\t\t\t\tpreference: [\n\t\t\t\t\teditorBrowser.ContentWidgetPositionPreference.ABOVE,\n\t\t\t\t\teditorBrowser.ContentWidgetPositionPreference.BELOW\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.removeContentWidget(this);\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n\n\tprivate updateFont(): void {\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\n\t\tcodeClasses.forEach(node => this._editor.applyFontInfo(node));\n\t}\n\n\tprotected updateContents(node: Node): void {\n\t\tthis._domNode.textContent = '';\n\t\tthis._domNode.appendChild(node);\n\t\tthis.updateFont();\n\n\t\tthis._editor.layoutContentWidget(this);\n\t\tthis.onContentsChange();\n\t}\n\n\tprotected onContentsChange(): void {\n\t\tthis.scrollbar.scanDomNode();\n\t}\n\n\tprivate layout(): void {\n\t\tconst height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n\t\tconst { fontSize, lineHeight } = this._editor.getConfiguration().fontInfo;\n\n\t\tthis._domNode.style.fontSize = `${fontSize}px`;\n\t\tthis._domNode.style.lineHeight = `${lineHeight}px`;\n\t\tthis._domNode.style.maxHeight = `${height}px`;\n\t\tthis._domNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n\t}\n}\n\nexport class GlyphHoverWidget extends Widget implements editorBrowser.IOverlayWidget {\n\n\tprivate readonly _id: string;\n\tprotected _editor: editorBrowser.ICodeEditor;\n\tprivate _isVisible: boolean;\n\tprivate readonly _domNode: HTMLElement;\n\tprotected _showAtLineNumber: number;\n\n\tconstructor(id: string, editor: editorBrowser.ICodeEditor) {\n\t\tsuper();\n\t\tthis._id = id;\n\t\tthis._editor = editor;\n\t\tthis._isVisible = false;\n\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'monaco-editor-hover hidden';\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\n\t\tthis._showAtLineNumber = -1;\n\n\t\tthis._register(this._editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {\n\t\t\tif (e.fontInfo) {\n\t\t\t\tthis.updateFont();\n\t\t\t}\n\t\t}));\n\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tprotected get isVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tprotected set isVisible(value: boolean) {\n\t\tthis._isVisible = value;\n\t\ttoggleClass(this._domNode, 'hidden', !this._isVisible);\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic showAt(lineNumber: number): void {\n\t\tthis._showAtLineNumber = lineNumber;\n\n\t\tif (!this.isVisible) {\n\t\t\tthis.isVisible = true;\n\t\t}\n\n\t\tconst editorLayout = this._editor.getLayoutInfo();\n\t\tconst topForLineNumber = this._editor.getTopForLineNumber(this._showAtLineNumber);\n\t\tconst editorScrollTop = this._editor.getScrollTop();\n\t\tconst lineHeight = this._editor.getConfiguration().lineHeight;\n\t\tconst nodeHeight = this._domNode.clientHeight;\n\t\tconst top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n\n\t\tthis._domNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n\t\tthis._domNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n\t}\n\n\tpublic hide(): void {\n\t\tif (!this.isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tthis.isVisible = false;\n\t}\n\n\tpublic getPosition(): editorBrowser.IOverlayWidgetPosition | null {\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._editor.removeOverlayWidget(this);\n\t\tsuper.dispose();\n\t}\n\n\tprivate updateFont(): void {\n\t\tconst codeTags: HTMLElement[] = Array.prototype.slice.call(this._domNode.getElementsByTagName('code'));\n\t\tconst codeClasses: HTMLElement[] = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\n\n\t\t[...codeTags, ...codeClasses].forEach(node => this._editor.applyFontInfo(node));\n\t}\n\n\tprotected updateContents(node: Node): void {\n\t\tthis._domNode.textContent = '';\n\t\tthis._domNode.appendChild(node);\n\t\tthis.updateFont();\n\t}\n}\n"]}]}