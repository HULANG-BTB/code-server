{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/main.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/main.contribution.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar nls = require(\"vs/nls\");\nvar os = require(\"os\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar platform_2 = require(\"vs/base/common/platform\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar helpActions_1 = require(\"vs/workbench/electron-browser/actions/helpActions\");\nvar developerActions_1 = require(\"vs/workbench/electron-browser/actions/developerActions\");\nvar windowActions_1 = require(\"vs/workbench/electron-browser/actions/windowActions\");\nvar workspaceActions_1 = require(\"vs/workbench/browser/actions/workspaceActions\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar quickopen_1 = require(\"vs/workbench/browser/parts/quickopen/quickopen\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar workspaceCommands_1 = require(\"vs/workbench/browser/actions/workspaceCommands\");\nvar contextkeys_1 = require(\"vs/workbench/common/contextkeys\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar storageService_1 = require(\"vs/platform/storage/node/storageService\");\n// Actions\n(function registerActions() {\n    var registry = platform_1.Registry.as(actions_2.Extensions.WorkbenchActions);\n    // Actions: File\n    (function registerFileActions() {\n        var fileCategory = nls.localize('file', \"File\");\n        if (platform_2.isNative && browser_1.isMacintosh) {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenFileFolderAction, workspaceActions_1.OpenFileFolderAction.ID, workspaceActions_1.OpenFileFolderAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O }), 'File: Open...', fileCategory);\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenLocalFileFolderAction, workspaceActions_1.OpenLocalFileFolderAction.ID, workspaceActions_1.OpenLocalFileFolderAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O }, contextkeys_1.RemoteFileDialogContext), 'File: Open Local...', fileCategory, contextkeys_1.RemoteFileDialogContext);\n        }\n        else {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenFileAction, workspaceActions_1.OpenFileAction.ID, workspaceActions_1.OpenFileAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O }), 'File: Open File...', fileCategory);\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenFolderAction, workspaceActions_1.OpenFolderAction.ID, workspaceActions_1.OpenFolderAction.LABEL, { primary: keyCodes_1.KeyChord(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_K, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O) }), 'File: Open Folder...', fileCategory);\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenLocalFileAction, workspaceActions_1.OpenLocalFileAction.ID, workspaceActions_1.OpenLocalFileAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O }, contextkeys_1.RemoteFileDialogContext), 'File: Open Local File...', fileCategory, contextkeys_1.RemoteFileDialogContext);\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenLocalFolderAction, workspaceActions_1.OpenLocalFolderAction.ID, workspaceActions_1.OpenLocalFolderAction.LABEL, { primary: keyCodes_1.KeyChord(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_K, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_O) }, contextkeys_1.RemoteFileDialogContext), 'File: Open Local Folder...', fileCategory, contextkeys_1.RemoteFileDialogContext);\n        }\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.QuickOpenRecentAction, windowActions_1.QuickOpenRecentAction.ID, windowActions_1.QuickOpenRecentAction.LABEL), 'File: Quick Open Recent...', fileCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.OpenRecentAction, windowActions_1.OpenRecentAction.ID, windowActions_1.OpenRecentAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_R, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_R } }), 'File: Open Recent...', fileCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.CloseWorkspaceAction, workspaceActions_1.CloseWorkspaceAction.ID, workspaceActions_1.CloseWorkspaceAction.LABEL, { primary: keyCodes_1.KeyChord(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_K, keyCodes_1.KeyCode.KEY_F) }), 'File: Close Workspace', fileCategory);\n        var recentFilesPickerContext = contextkey_1.ContextKeyExpr.and(quickopen_1.inQuickOpenContext, contextkey_1.ContextKeyExpr.has(windowActions_1.inRecentFilesPickerContextKey));\n        var quickOpenNavigateNextInRecentFilesPickerId = 'workbench.action.quickOpenNavigateNextInRecentFilesPicker';\n        keybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: quickOpenNavigateNextInRecentFilesPickerId,\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n            handler: quickopen_1.getQuickNavigateHandler(quickOpenNavigateNextInRecentFilesPickerId, true),\n            when: recentFilesPickerContext,\n            primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_R,\n            mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_R }\n        });\n        var quickOpenNavigatePreviousInRecentFilesPicker = 'workbench.action.quickOpenNavigatePreviousInRecentFilesPicker';\n        keybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: quickOpenNavigatePreviousInRecentFilesPicker,\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n            handler: quickopen_1.getQuickNavigateHandler(quickOpenNavigatePreviousInRecentFilesPicker, false),\n            when: recentFilesPickerContext,\n            primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_R,\n            mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_R }\n        });\n    })();\n    // Actions: View\n    (function registerViewActions() {\n        var viewCategory = nls.localize('view', \"View\");\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ZoomInAction, windowActions_1.ZoomInAction.ID, windowActions_1.ZoomInAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.US_EQUAL, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.US_EQUAL, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.NUMPAD_ADD] }), 'View: Zoom In', viewCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ZoomOutAction, windowActions_1.ZoomOutAction.ID, windowActions_1.ZoomOutAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.US_MINUS, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.US_MINUS, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.NUMPAD_SUBTRACT], linux: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.US_MINUS, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.NUMPAD_SUBTRACT] } }), 'View: Zoom Out', viewCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ZoomResetAction, windowActions_1.ZoomResetAction.ID, windowActions_1.ZoomResetAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.NUMPAD_0 }), 'View: Reset Zoom', viewCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ToggleFullScreenAction, windowActions_1.ToggleFullScreenAction.ID, windowActions_1.ToggleFullScreenAction.LABEL, { primary: keyCodes_1.KeyCode.F11, mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_F } }), 'View: Toggle Full Screen', viewCategory);\n    })();\n    // Actions: Window\n    (function registerWindowActions() {\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.NewWindowAction, windowActions_1.NewWindowAction.ID, windowActions_1.NewWindowAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_N }), 'New Window');\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.CloseCurrentWindowAction, windowActions_1.CloseCurrentWindowAction.ID, windowActions_1.CloseCurrentWindowAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_W }), 'Close Window');\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.SwitchWindow, windowActions_1.SwitchWindow.ID, windowActions_1.SwitchWindow.LABEL, { primary: 0, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_W } }), 'Switch Window...');\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.QuickSwitchWindow, windowActions_1.QuickSwitchWindow.ID, windowActions_1.QuickSwitchWindow.LABEL), 'Quick Switch Window...');\n        keybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: 'workbench.action.closeWindow',\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n            when: contextkey_1.ContextKeyExpr.and(editor_1.NoEditorsVisibleContext, editor_1.SingleEditorGroupsContext),\n            primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_W,\n            handler: function (accessor) {\n                var windowService = accessor.get(windows_1.IWindowService);\n                windowService.closeWindow();\n            }\n        });\n        keybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n            id: 'workbench.action.quit',\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n            handler: function (accessor) {\n                var windowsService = accessor.get(windows_1.IWindowsService);\n                windowsService.quit();\n            },\n            when: undefined,\n            mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_Q },\n            linux: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_Q }\n        });\n    })();\n    // Actions: Workspaces\n    (function registerWorkspaceActions() {\n        var workspacesCategory = nls.localize('workspaces', \"Workspaces\");\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.AddRootFolderAction, workspaceActions_1.AddRootFolderAction.ID, workspaceActions_1.AddRootFolderAction.LABEL), 'Workspaces: Add Folder to Workspace...', workspacesCategory, contextkeys_1.SupportsWorkspacesContext);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.GlobalRemoveRootFolderAction, workspaceActions_1.GlobalRemoveRootFolderAction.ID, workspaceActions_1.GlobalRemoveRootFolderAction.LABEL), 'Workspaces: Remove Folder from Workspace...', workspacesCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.OpenWorkspaceAction, workspaceActions_1.OpenWorkspaceAction.ID, workspaceActions_1.OpenWorkspaceAction.LABEL), 'Workspaces: Open Workspace...', workspacesCategory, contextkeys_1.SupportsWorkspacesContext);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.SaveWorkspaceAsAction, workspaceActions_1.SaveWorkspaceAsAction.ID, workspaceActions_1.SaveWorkspaceAsAction.LABEL), 'Workspaces: Save Workspace As...', workspacesCategory, contextkeys_1.SupportsWorkspacesContext);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(workspaceActions_1.DuplicateWorkspaceInNewWindowAction, workspaceActions_1.DuplicateWorkspaceInNewWindowAction.ID, workspaceActions_1.DuplicateWorkspaceInNewWindowAction.LABEL), 'Workspaces: Duplicate Workspace in New Window', workspacesCategory);\n        commands_1.CommandsRegistry.registerCommand(workspaceActions_1.OpenWorkspaceConfigFileAction.ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService).createInstance(workspaceActions_1.OpenWorkspaceConfigFileAction, workspaceActions_1.OpenWorkspaceConfigFileAction.ID, workspaceActions_1.OpenWorkspaceConfigFileAction.LABEL).run();\n        });\n        actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.CommandPalette, {\n            command: {\n                id: workspaceActions_1.OpenWorkspaceConfigFileAction.ID,\n                title: { value: workspacesCategory + \": \" + workspaceActions_1.OpenWorkspaceConfigFileAction.LABEL, original: 'Workspaces: Open Workspace Configuration File' },\n            },\n            when: contextkeys_1.WorkbenchStateContext.isEqualTo('workspace')\n        });\n    })();\n    // Actions: macOS Native Tabs\n    (function registerMacOSNativeTabsActions() {\n        if (browser_1.isMacintosh) {\n            [\n                { handler: windowActions_1.NewWindowTabHandler, id: 'workbench.action.newWindowTab', title: { value: nls.localize('newTab', \"New Window Tab\"), original: 'New Window Tab' } },\n                { handler: windowActions_1.ShowPreviousWindowTabHandler, id: 'workbench.action.showPreviousWindowTab', title: { value: nls.localize('showPreviousTab', \"Show Previous Window Tab\"), original: 'Show Previous Window Tab' } },\n                { handler: windowActions_1.ShowNextWindowTabHandler, id: 'workbench.action.showNextWindowTab', title: { value: nls.localize('showNextWindowTab', \"Show Next Window Tab\"), original: 'Show Next Window Tab' } },\n                { handler: windowActions_1.MoveWindowTabToNewWindowHandler, id: 'workbench.action.moveWindowTabToNewWindow', title: { value: nls.localize('moveWindowTabToNewWindow', \"Move Window Tab to New Window\"), original: 'Move Window Tab to New Window' } },\n                { handler: windowActions_1.MergeWindowTabsHandlerHandler, id: 'workbench.action.mergeAllWindowTabs', title: { value: nls.localize('mergeAllWindowTabs', \"Merge All Windows\"), original: 'Merge All Windows' } },\n                { handler: windowActions_1.ToggleWindowTabsBarHandler, id: 'workbench.action.toggleWindowTabsBar', title: { value: nls.localize('toggleWindowTabsBar', \"Toggle Window Tabs Bar\"), original: 'Toggle Window Tabs Bar' } }\n            ].forEach(function (command) {\n                commands_1.CommandsRegistry.registerCommand(command.id, command.handler);\n                actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.CommandPalette, {\n                    command: command,\n                    when: contextkeys_1.HasMacNativeTabsContext\n                });\n            });\n        }\n    })();\n    // Actions: Developer\n    (function registerDeveloperActions() {\n        var developerCategory = nls.localize('developer', \"Developer\");\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(developerActions_1.ToggleSharedProcessAction, developerActions_1.ToggleSharedProcessAction.ID, developerActions_1.ToggleSharedProcessAction.LABEL), 'Developer: Toggle Shared Process', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(developerActions_1.InspectContextKeysAction, developerActions_1.InspectContextKeysAction.ID, developerActions_1.InspectContextKeysAction.LABEL), 'Developer: Inspect Context Keys', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(developerActions_1.ToggleScreencastModeAction, developerActions_1.ToggleScreencastModeAction.ID, developerActions_1.ToggleScreencastModeAction.LABEL), 'Developer: Toggle Mouse Clicks', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ReloadWindowWithExtensionsDisabledAction, windowActions_1.ReloadWindowWithExtensionsDisabledAction.ID, windowActions_1.ReloadWindowWithExtensionsDisabledAction.LABEL), 'Developer: Reload Window Without Extensions', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(storageService_1.LogStorageAction, storageService_1.LogStorageAction.ID, storageService_1.LogStorageAction.LABEL), 'Developer: Log Storage', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ReloadWindowAction, windowActions_1.ReloadWindowAction.ID, windowActions_1.ReloadWindowAction.LABEL), 'Developer: Reload Window', developerCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(developerActions_1.ToggleDevToolsAction, developerActions_1.ToggleDevToolsAction.ID, developerActions_1.ToggleDevToolsAction.LABEL), 'Developer: Toggle Developer Tools', developerCategory);\n        keybindingsRegistry_1.KeybindingsRegistry.registerKeybindingRule({\n            id: windowActions_1.ReloadWindowAction.ID,\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n            when: contextkeys_1.IsDevelopmentContext,\n            primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_R\n        });\n        keybindingsRegistry_1.KeybindingsRegistry.registerKeybindingRule({\n            id: developerActions_1.ToggleDevToolsAction.ID,\n            weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50,\n            when: contextkeys_1.IsDevelopmentContext,\n            primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_I,\n            mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.KEY_I }\n        });\n    })();\n    // Actions: help\n    (function registerHelpActions() {\n        var helpCategory = nls.localize('help', \"Help\");\n        if (helpActions_1.KeybindingsReferenceAction.AVAILABLE) {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.KeybindingsReferenceAction, helpActions_1.KeybindingsReferenceAction.ID, helpActions_1.KeybindingsReferenceAction.LABEL, { primary: keyCodes_1.KeyChord(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_K, keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_R) }), 'Help: Keyboard Shortcuts Reference', helpCategory);\n        }\n        if (helpActions_1.OpenDocumentationUrlAction.AVAILABLE) {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenDocumentationUrlAction, helpActions_1.OpenDocumentationUrlAction.ID, helpActions_1.OpenDocumentationUrlAction.LABEL), 'Help: Documentation', helpCategory);\n        }\n        if (helpActions_1.OpenIntroductoryVideosUrlAction.AVAILABLE) {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenIntroductoryVideosUrlAction, helpActions_1.OpenIntroductoryVideosUrlAction.ID, helpActions_1.OpenIntroductoryVideosUrlAction.LABEL), 'Help: Introductory Videos', helpCategory);\n        }\n        if (helpActions_1.OpenTipsAndTricksUrlAction.AVAILABLE) {\n            registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenTipsAndTricksUrlAction, helpActions_1.OpenTipsAndTricksUrlAction.ID, helpActions_1.OpenTipsAndTricksUrlAction.LABEL), 'Help: Tips and Tricks', helpCategory);\n        }\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenTwitterUrlAction, helpActions_1.OpenTwitterUrlAction.ID, helpActions_1.OpenTwitterUrlAction.LABEL), 'Help: Join Us on Twitter', helpCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenRequestFeatureUrlAction, helpActions_1.OpenRequestFeatureUrlAction.ID, helpActions_1.OpenRequestFeatureUrlAction.LABEL), 'Help: Search Feature Requests', helpCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenLicenseUrlAction, helpActions_1.OpenLicenseUrlAction.ID, helpActions_1.OpenLicenseUrlAction.LABEL), 'Help: View License', helpCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(helpActions_1.OpenPrivacyStatementUrlAction, helpActions_1.OpenPrivacyStatementUrlAction.ID, helpActions_1.OpenPrivacyStatementUrlAction.LABEL), 'Help: Privacy Statement', helpCategory);\n        registry.registerWorkbenchAction(new actions_1.SyncActionDescriptor(windowActions_1.ShowAboutDialogAction, windowActions_1.ShowAboutDialogAction.ID, windowActions_1.ShowAboutDialogAction.LABEL), 'Help: About', helpCategory);\n    })();\n})();\n// Menu\n(function registerMenu() {\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '1_new',\n        command: {\n            id: windowActions_1.NewWindowAction.ID,\n            title: nls.localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")\n        },\n        order: 2\n    });\n    if (platform_2.isNative && browser_1.isMacintosh) {\n        actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n            group: '2_open',\n            command: {\n                id: workspaceActions_1.OpenFileFolderAction.ID,\n                title: nls.localize({ key: 'miOpen', comment: ['&& denotes a mnemonic'] }, \"&&Open...\")\n            },\n            order: 1\n        });\n    }\n    else {\n        actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n            group: '2_open',\n            command: {\n                id: workspaceActions_1.OpenFileAction.ID,\n                title: nls.localize({ key: 'miOpenFile', comment: ['&& denotes a mnemonic'] }, \"&&Open File...\")\n            },\n            order: 1\n        });\n        actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n            group: '2_open',\n            command: {\n                id: workspaceActions_1.OpenFolderAction.ID,\n                title: nls.localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n            },\n            order: 2\n        });\n    }\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '2_open',\n        command: {\n            id: workspaceActions_1.OpenWorkspaceAction.ID,\n            title: nls.localize({ key: 'miOpenWorkspace', comment: ['&& denotes a mnemonic'] }, \"Open Wor&&kspace...\")\n        },\n        order: 3,\n        when: contextkeys_1.SupportsWorkspacesContext\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        title: nls.localize({ key: 'miOpenRecent', comment: ['&& denotes a mnemonic'] }, \"Open &&Recent\"),\n        submenu: actions_1.MenuId.MenubarRecentMenu,\n        group: '2_open',\n        order: 4\n    });\n    // More\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarRecentMenu, {\n        group: 'y_more',\n        command: {\n            id: windowActions_1.OpenRecentAction.ID,\n            title: nls.localize({ key: 'miMore', comment: ['&& denotes a mnemonic'] }, \"&&More...\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '3_workspace',\n        command: {\n            id: workspaceCommands_1.ADD_ROOT_FOLDER_COMMAND_ID,\n            title: nls.localize({ key: 'miAddFolderToWorkspace', comment: ['&& denotes a mnemonic'] }, \"A&&dd Folder to Workspace...\")\n        },\n        order: 1,\n        when: contextkeys_1.SupportsWorkspacesContext\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '3_workspace',\n        command: {\n            id: workspaceActions_1.SaveWorkspaceAsAction.ID,\n            title: nls.localize('miSaveWorkspaceAs', \"Save Workspace As...\")\n        },\n        order: 2,\n        when: contextkeys_1.SupportsWorkspacesContext\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        title: nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\"),\n        submenu: actions_1.MenuId.MenubarPreferencesMenu,\n        group: '5_autosave',\n        order: 2,\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '6_close',\n        command: {\n            id: workspaceActions_1.CloseWorkspaceAction.ID,\n            title: nls.localize({ key: 'miCloseFolder', comment: ['&& denotes a mnemonic'] }, \"Close &&Folder\"),\n            precondition: contextkeys_1.WorkspaceFolderCountContext.notEqualsTo('0')\n        },\n        order: 3,\n        when: contextkeys_1.WorkbenchStateContext.notEqualsTo('workspace')\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '6_close',\n        command: {\n            id: workspaceActions_1.CloseWorkspaceAction.ID,\n            title: nls.localize({ key: 'miCloseWorkspace', comment: ['&& denotes a mnemonic'] }, \"Close &&Workspace\")\n        },\n        order: 3,\n        when: contextkeys_1.WorkbenchStateContext.isEqualTo('workspace')\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: '6_close',\n        command: {\n            id: windowActions_1.CloseCurrentWindowAction.ID,\n            title: nls.localize({ key: 'miCloseWindow', comment: ['&& denotes a mnemonic'] }, \"Clos&&e Window\")\n        },\n        order: 4\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarFileMenu, {\n        group: 'z_Exit',\n        command: {\n            id: 'workbench.action.quit',\n            title: nls.localize({ key: 'miExit', comment: ['&& denotes a mnemonic'] }, \"E&&xit\")\n        },\n        order: 1,\n        when: contextkeys_1.IsMacContext.toNegated()\n    });\n    // Appereance menu\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarViewMenu, {\n        group: '2_appearance',\n        title: nls.localize({ key: 'miAppearance', comment: ['&& denotes a mnemonic'] }, \"&&Appearance\"),\n        submenu: actions_1.MenuId.MenubarAppearanceMenu,\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarAppearanceMenu, {\n        group: '1_toggle_view',\n        command: {\n            id: windowActions_1.ToggleFullScreenAction.ID,\n            title: nls.localize({ key: 'miToggleFullScreen', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Full Screen\")\n        },\n        order: 1\n    });\n    // Zoom\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarAppearanceMenu, {\n        group: '3_zoom',\n        command: {\n            id: windowActions_1.ZoomInAction.ID,\n            title: nls.localize({ key: 'miZoomIn', comment: ['&& denotes a mnemonic'] }, \"&&Zoom In\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarAppearanceMenu, {\n        group: '3_zoom',\n        command: {\n            id: windowActions_1.ZoomOutAction.ID,\n            title: nls.localize({ key: 'miZoomOut', comment: ['&& denotes a mnemonic'] }, \"&&Zoom Out\")\n        },\n        order: 2\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarAppearanceMenu, {\n        group: '3_zoom',\n        command: {\n            id: windowActions_1.ZoomResetAction.ID,\n            title: nls.localize({ key: 'miZoomReset', comment: ['&& denotes a mnemonic'] }, \"&&Reset Zoom\")\n        },\n        order: 3\n    });\n    // Help\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '1_welcome',\n        command: {\n            id: 'workbench.action.openDocumentationUrl',\n            title: nls.localize({ key: 'miDocumentation', comment: ['&& denotes a mnemonic'] }, \"&&Documentation\")\n        },\n        order: 3\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '1_welcome',\n        command: {\n            id: 'update.showCurrentReleaseNotes',\n            title: nls.localize({ key: 'miReleaseNotes', comment: ['&& denotes a mnemonic'] }, \"&&Release Notes\")\n        },\n        order: 4\n    });\n    // Reference\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '2_reference',\n        command: {\n            id: 'workbench.action.keybindingsReference',\n            title: nls.localize({ key: 'miKeyboardShortcuts', comment: ['&& denotes a mnemonic'] }, \"&&Keyboard Shortcuts Reference\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '2_reference',\n        command: {\n            id: 'workbench.action.openIntroductoryVideosUrl',\n            title: nls.localize({ key: 'miIntroductoryVideos', comment: ['&& denotes a mnemonic'] }, \"Introductory &&Videos\")\n        },\n        order: 2\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '2_reference',\n        command: {\n            id: 'workbench.action.openTipsAndTricksUrl',\n            title: nls.localize({ key: 'miTipsAndTricks', comment: ['&& denotes a mnemonic'] }, \"Tips and Tri&&cks\")\n        },\n        order: 3\n    });\n    // Feedback\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '3_feedback',\n        command: {\n            id: 'workbench.action.openTwitterUrl',\n            title: nls.localize({ key: 'miTwitter', comment: ['&& denotes a mnemonic'] }, \"&&Join Us on Twitter\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '3_feedback',\n        command: {\n            id: 'workbench.action.openRequestFeatureUrl',\n            title: nls.localize({ key: 'miUserVoice', comment: ['&& denotes a mnemonic'] }, \"&&Search Feature Requests\")\n        },\n        order: 2\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '3_feedback',\n        command: {\n            id: 'workbench.action.openIssueReporter',\n            title: nls.localize({ key: 'miReportIssue', comment: ['&& denotes a mnemonic', 'Translate this to \"Report Issue in English\" in all languages please!'] }, \"Report &&Issue\")\n        },\n        order: 3\n    });\n    // Legal\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '4_legal',\n        command: {\n            id: 'workbench.action.openLicenseUrl',\n            title: nls.localize({ key: 'miLicense', comment: ['&& denotes a mnemonic'] }, \"View &&License\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '4_legal',\n        command: {\n            id: 'workbench.action.openPrivacyStatementUrl',\n            title: nls.localize({ key: 'miPrivacyStatement', comment: ['&& denotes a mnemonic'] }, \"Privac&&y Statement\")\n        },\n        order: 2\n    });\n    // Tools\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '5_tools',\n        command: {\n            id: 'workbench.action.toggleDevTools',\n            title: nls.localize({ key: 'miToggleDevTools', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Developer Tools\")\n        },\n        order: 1\n    });\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: '5_tools',\n        command: {\n            id: 'workbench.action.openProcessExplorer',\n            title: nls.localize({ key: 'miOpenProcessExplorerer', comment: ['&& denotes a mnemonic'] }, \"Open &&Process Explorer\")\n        },\n        order: 2\n    });\n    // About\n    actions_1.MenuRegistry.appendMenuItem(actions_1.MenuId.MenubarHelpMenu, {\n        group: 'z_about',\n        command: {\n            id: 'workbench.action.showAboutDialog',\n            title: nls.localize({ key: 'miAbout', comment: ['&& denotes a mnemonic'] }, \"&&About\")\n        },\n        order: 1,\n        when: contextkeys_1.IsMacContext.toNegated()\n    });\n})();\n// Configuration\n(function registerConfiguration() {\n    var registry = platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration);\n    // Window\n    registry.registerConfiguration({\n        'id': 'window',\n        'order': 8,\n        'title': nls.localize('windowConfigurationTitle', \"Window\"),\n        'type': 'object',\n        'properties': {\n            'window.openFilesInNewWindow': {\n                'type': 'string',\n                'enum': ['on', 'off', 'default'],\n                'enumDescriptions': [\n                    nls.localize('window.openFilesInNewWindow.on', \"Files will open in a new window.\"),\n                    nls.localize('window.openFilesInNewWindow.off', \"Files will open in the window with the files' folder open or the last active window.\"),\n                    platform_2.isNative && browser_1.isMacintosh ?\n                        nls.localize('window.openFilesInNewWindow.defaultMac', \"Files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder.\") :\n                        nls.localize('window.openFilesInNewWindow.default', \"Files will open in a new window unless picked from within the application (e.g. via the File menu).\")\n                ],\n                'default': 'off',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'markdownDescription': platform_2.isNative && browser_1.isMacintosh ?\n                    nls.localize('openFilesInNewWindowMac', \"Controls whether files should open in a new window. \\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\") :\n                    nls.localize('openFilesInNewWindow', \"Controls whether files should open in a new window.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n            },\n            'window.openFoldersInNewWindow': {\n                'type': 'string',\n                'enum': ['on', 'off', 'default'],\n                'enumDescriptions': [\n                    nls.localize('window.openFoldersInNewWindow.on', \"Folders will open in a new window.\"),\n                    nls.localize('window.openFoldersInNewWindow.off', \"Folders will replace the last active window.\"),\n                    nls.localize('window.openFoldersInNewWindow.default', \"Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).\")\n                ],\n                'default': 'default',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'markdownDescription': nls.localize('openFoldersInNewWindow', \"Controls whether folders should open in a new window or replace the last active window.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n            },\n            'window.openWithoutArgumentsInNewWindow': {\n                'type': 'string',\n                'enum': ['on', 'off'],\n                'enumDescriptions': [\n                    nls.localize('window.openWithoutArgumentsInNewWindow.on', \"Open a new empty window.\"),\n                    nls.localize('window.openWithoutArgumentsInNewWindow.off', \"Focus the last active running instance.\")\n                ],\n                'default': browser_1.isMacintosh ? 'off' : 'on',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'markdownDescription': nls.localize('openWithoutArgumentsInNewWindow', \"Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n            },\n            'window.restoreWindows': {\n                'type': 'string',\n                'enum': ['all', 'folders', 'one', 'none'],\n                'enumDescriptions': [\n                    nls.localize('window.reopenFolders.all', \"Reopen all windows.\"),\n                    nls.localize('window.reopenFolders.folders', \"Reopen all folders. Empty workspaces will not be restored.\"),\n                    nls.localize('window.reopenFolders.one', \"Reopen the last active window.\"),\n                    nls.localize('window.reopenFolders.none', \"Never reopen a window. Always start with an empty one.\")\n                ],\n                'default': 'one',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('restoreWindows', \"Controls how windows are being reopened after a restart.\")\n            },\n            'window.restoreFullscreen': {\n                'type': 'boolean',\n                'default': false,\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('restoreFullscreen', \"Controls whether a window should restore to full screen mode if it was exited in full screen mode.\")\n            },\n            'window.zoomLevel': {\n                'type': 'number',\n                'default': 0,\n                'description': nls.localize('zoomLevel', \"Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.\")\n            },\n            'window.newWindowDimensions': {\n                'type': 'string',\n                'enum': ['default', 'inherit', 'maximized', 'fullscreen'],\n                'enumDescriptions': [\n                    nls.localize('window.newWindowDimensions.default', \"Open new windows in the center of the screen.\"),\n                    nls.localize('window.newWindowDimensions.inherit', \"Open new windows with same dimension as last active one.\"),\n                    nls.localize('window.newWindowDimensions.maximized', \"Open new windows maximized.\"),\n                    nls.localize('window.newWindowDimensions.fullscreen', \"Open new windows in full screen mode.\")\n                ],\n                'default': 'default',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('newWindowDimensions', \"Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.\")\n            },\n            'window.closeWhenEmpty': {\n                'type': 'boolean',\n                'default': false,\n                'description': nls.localize('closeWhenEmpty', \"Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.\")\n            },\n            'window.menuBarVisibility': {\n                'type': 'string',\n                'enum': ['default', 'visible', 'toggle', 'hidden'],\n                'enumDescriptions': [\n                    nls.localize('window.menuBarVisibility.default', \"Menu is only hidden in full screen mode.\"),\n                    nls.localize('window.menuBarVisibility.visible', \"Menu is always visible even in full screen mode.\"),\n                    nls.localize('window.menuBarVisibility.toggle', \"Menu is hidden but can be displayed via Alt key.\"),\n                    nls.localize('window.menuBarVisibility.hidden', \"Menu is always hidden.\")\n                ],\n                'default': 'default',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('menuBarVisibility', \"Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. By default, the menu bar will be visible, unless the window is full screen.\"),\n                'included': platform_2.isWeb || browser_1.isWindows || browser_1.isLinux\n            },\n            'window.enableMenuBarMnemonics': {\n                'type': 'boolean',\n                'default': true,\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('enableMenuBarMnemonics', \"If enabled, the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editor commands instead.\"),\n                'included': platform_2.isWeb || browser_1.isWindows || browser_1.isLinux\n            },\n            'window.autoDetectHighContrast': {\n                'type': 'boolean',\n                'default': true,\n                'description': nls.localize('autoDetectHighContrast', \"If enabled, will automatically change to high contrast theme if Windows is using a high contrast theme, and to dark theme when switching away from a Windows high contrast theme.\"),\n                'included': browser_1.isWindows\n            },\n            'window.doubleClickIconToClose': {\n                'type': 'boolean',\n                'default': false,\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'markdownDescription': nls.localize('window.doubleClickIconToClose', \"If enabled, double clicking the application icon in the title bar will close the window and the window cannot be dragged by the icon. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.\")\n            },\n            'window.titleBarStyle': {\n                'type': 'string',\n                'enum': ['custom'],\n                'default': platform_2.isNative && browser_1.isLinux ? 'native' : 'custom',\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('titleBarStyle', \"Adjust the appearance of the window title bar. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.\")\n            },\n            'window.nativeTabs': {\n                'type': 'boolean',\n                'default': false,\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('window.nativeTabs', \"Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.\"),\n                'included': platform_2.isNative && browser_1.isMacintosh && parseFloat(os.release()) >= 16 // Minimum: macOS Sierra (10.12.x = darwin 16.x)\n            },\n            'window.nativeFullScreen': {\n                'type': 'boolean',\n                'default': true,\n                'description': nls.localize('window.nativeFullScreen', \"Controls if native full-screen should be used on macOS. Disable this option to prevent macOS from creating a new space when going full-screen.\"),\n                'included': platform_2.isNative && browser_1.isMacintosh\n            },\n            'window.clickThroughInactive': {\n                'type': 'boolean',\n                'default': true,\n                'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n                'description': nls.localize('window.clickThroughInactive', \"If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.\"),\n                'included': browser_1.isMacintosh\n            }\n        }\n    });\n    // Telemetry\n    registry.registerConfiguration({\n        'id': 'telemetry',\n        'order': 110,\n        title: nls.localize('telemetryConfigurationTitle', \"Telemetry\"),\n        'type': 'object',\n        'properties': {\n            'telemetry.enableCrashReporter': {\n                'type': 'boolean',\n                'description': nls.localize('telemetry.enableCrashReporting', \"Enable crash reports to be sent to a Microsoft online service. \\nThis option requires restart to take effect.\"),\n                'default': true,\n                'tags': ['usesOnlineServices']\n            }\n        }\n    });\n})();\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/main.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/main.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as nls from 'vs/nls';\nimport * as os from 'os';\nimport { SyncActionDescriptor, MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IWorkbenchActionRegistry, Extensions } from 'vs/workbench/common/actions';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { isNative, isWeb } from 'vs/base/common/platform';\nimport { isMacintosh, isWindows, isLinux } from 'vs/base/browser/browser';\nimport { KeybindingsReferenceAction, OpenDocumentationUrlAction, OpenIntroductoryVideosUrlAction, OpenTipsAndTricksUrlAction, OpenTwitterUrlAction, OpenRequestFeatureUrlAction, OpenPrivacyStatementUrlAction, OpenLicenseUrlAction } from 'vs/workbench/electron-browser/actions/helpActions';\nimport { ToggleSharedProcessAction, InspectContextKeysAction, ToggleScreencastModeAction, ToggleDevToolsAction } from 'vs/workbench/electron-browser/actions/developerActions';\nimport { ShowAboutDialogAction, ZoomResetAction, ZoomOutAction, ZoomInAction, ToggleFullScreenAction, CloseCurrentWindowAction, SwitchWindow, NewWindowAction, QuickSwitchWindow, QuickOpenRecentAction, inRecentFilesPickerContextKey, OpenRecentAction, ReloadWindowWithExtensionsDisabledAction, NewWindowTabHandler, ReloadWindowAction, ShowPreviousWindowTabHandler, ShowNextWindowTabHandler, MoveWindowTabToNewWindowHandler, MergeWindowTabsHandlerHandler, ToggleWindowTabsBarHandler } from 'vs/workbench/electron-browser/actions/windowActions';\nimport { AddRootFolderAction, GlobalRemoveRootFolderAction, OpenWorkspaceAction, SaveWorkspaceAsAction, OpenWorkspaceConfigFileAction, DuplicateWorkspaceInNewWindowAction, OpenFileFolderAction, OpenFileAction, OpenFolderAction, CloseWorkspaceAction, OpenLocalFileAction, OpenLocalFolderAction, OpenLocalFileFolderAction } from 'vs/workbench/browser/actions/workspaceActions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { inQuickOpenContext, getQuickNavigateHandler } from 'vs/workbench/browser/parts/quickopen/quickopen';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ADD_ROOT_FOLDER_COMMAND_ID } from 'vs/workbench/browser/actions/workspaceCommands';\nimport { SupportsWorkspacesContext, IsMacContext, HasMacNativeTabsContext, IsDevelopmentContext, WorkbenchStateContext, WorkspaceFolderCountContext, RemoteFileDialogContext } from 'vs/workbench/common/contextkeys';\nimport { NoEditorsVisibleContext, SingleEditorGroupsContext } from 'vs/workbench/common/editor';\nimport { IWindowService, IWindowsService } from 'vs/platform/windows/common/windows';\nimport { LogStorageAction } from 'vs/platform/storage/node/storageService';\n\n// Actions\n(function registerActions(): void {\n\tconst registry = Registry.as<IWorkbenchActionRegistry>(Extensions.WorkbenchActions);\n\n\t// Actions: File\n\t(function registerFileActions(): void {\n\t\tconst fileCategory = nls.localize('file', \"File\");\n\n\t\tif (isNative && isMacintosh) {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenFileFolderAction, OpenFileFolderAction.ID, OpenFileFolderAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_O }), 'File: Open...', fileCategory);\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenLocalFileFolderAction, OpenLocalFileFolderAction.ID, OpenLocalFileFolderAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_O }, RemoteFileDialogContext), 'File: Open Local...', fileCategory, RemoteFileDialogContext);\n\t\t} else {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenFileAction, OpenFileAction.ID, OpenFileAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_O }), 'File: Open File...', fileCategory);\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenFolderAction, OpenFolderAction.ID, OpenFolderAction.LABEL, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_O) }), 'File: Open Folder...', fileCategory);\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenLocalFileAction, OpenLocalFileAction.ID, OpenLocalFileAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_O }, RemoteFileDialogContext), 'File: Open Local File...', fileCategory, RemoteFileDialogContext);\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenLocalFolderAction, OpenLocalFolderAction.ID, OpenLocalFolderAction.LABEL, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_O) }, RemoteFileDialogContext), 'File: Open Local Folder...', fileCategory, RemoteFileDialogContext);\n\t\t}\n\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickOpenRecentAction, QuickOpenRecentAction.ID, QuickOpenRecentAction.LABEL), 'File: Quick Open Recent...', fileCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenRecentAction, OpenRecentAction.ID, OpenRecentAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_R, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_R } }), 'File: Open Recent...', fileCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(CloseWorkspaceAction, CloseWorkspaceAction.ID, CloseWorkspaceAction.LABEL, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_F) }), 'File: Close Workspace', fileCategory);\n\n\t\tconst recentFilesPickerContext = ContextKeyExpr.and(inQuickOpenContext, ContextKeyExpr.has(inRecentFilesPickerContextKey));\n\n\t\tconst quickOpenNavigateNextInRecentFilesPickerId = 'workbench.action.quickOpenNavigateNextInRecentFilesPicker';\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: quickOpenNavigateNextInRecentFilesPickerId,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\thandler: getQuickNavigateHandler(quickOpenNavigateNextInRecentFilesPickerId, true),\n\t\t\twhen: recentFilesPickerContext,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_R,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_R }\n\t\t});\n\n\t\tconst quickOpenNavigatePreviousInRecentFilesPicker = 'workbench.action.quickOpenNavigatePreviousInRecentFilesPicker';\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: quickOpenNavigatePreviousInRecentFilesPicker,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\thandler: getQuickNavigateHandler(quickOpenNavigatePreviousInRecentFilesPicker, false),\n\t\t\twhen: recentFilesPickerContext,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_R,\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_R }\n\t\t});\n\t})();\n\n\t// Actions: View\n\t(function registerViewActions(): void {\n\t\tconst viewCategory = nls.localize('view', \"View\");\n\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ZoomInAction, ZoomInAction.ID, ZoomInAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.US_EQUAL, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_EQUAL, KeyMod.CtrlCmd | KeyCode.NUMPAD_ADD] }), 'View: Zoom In', viewCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ZoomOutAction, ZoomOutAction.ID, ZoomOutAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.US_MINUS, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_MINUS, KeyMod.CtrlCmd | KeyCode.NUMPAD_SUBTRACT], linux: { primary: KeyMod.CtrlCmd | KeyCode.US_MINUS, secondary: [KeyMod.CtrlCmd | KeyCode.NUMPAD_SUBTRACT] } }), 'View: Zoom Out', viewCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ZoomResetAction, ZoomResetAction.ID, ZoomResetAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.NUMPAD_0 }), 'View: Reset Zoom', viewCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ToggleFullScreenAction, ToggleFullScreenAction.ID, ToggleFullScreenAction.LABEL, { primary: KeyCode.F11, mac: { primary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KEY_F } }), 'View: Toggle Full Screen', viewCategory);\n\t})();\n\n\t// Actions: Window\n\t(function registerWindowActions(): void {\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(NewWindowAction, NewWindowAction.ID, NewWindowAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_N }), 'New Window');\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(CloseCurrentWindowAction, CloseCurrentWindowAction.ID, CloseCurrentWindowAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_W }), 'Close Window');\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(SwitchWindow, SwitchWindow.ID, SwitchWindow.LABEL, { primary: 0, mac: { primary: KeyMod.WinCtrl | KeyCode.KEY_W } }), 'Switch Window...');\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(QuickSwitchWindow, QuickSwitchWindow.ID, QuickSwitchWindow.LABEL), 'Quick Switch Window...');\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: 'workbench.action.closeWindow', // close the window when the last editor is closed by reusing the same keybinding\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\twhen: ContextKeyExpr.and(NoEditorsVisibleContext, SingleEditorGroupsContext),\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_W,\n\t\t\thandler: accessor => {\n\t\t\t\tconst windowService = accessor.get(IWindowService);\n\t\t\t\twindowService.closeWindow();\n\t\t\t}\n\t\t});\n\n\t\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t\tid: 'workbench.action.quit',\n\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\thandler(accessor: ServicesAccessor) {\n\t\t\t\tconst windowsService = accessor.get(IWindowsService);\n\t\t\t\twindowsService.quit();\n\t\t\t},\n\t\t\twhen: undefined,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KEY_Q },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyCode.KEY_Q }\n\t\t});\n\t})();\n\n\t// Actions: Workspaces\n\t(function registerWorkspaceActions(): void {\n\t\tconst workspacesCategory = nls.localize('workspaces', \"Workspaces\");\n\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(AddRootFolderAction, AddRootFolderAction.ID, AddRootFolderAction.LABEL), 'Workspaces: Add Folder to Workspace...', workspacesCategory, SupportsWorkspacesContext);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(GlobalRemoveRootFolderAction, GlobalRemoveRootFolderAction.ID, GlobalRemoveRootFolderAction.LABEL), 'Workspaces: Remove Folder from Workspace...', workspacesCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenWorkspaceAction, OpenWorkspaceAction.ID, OpenWorkspaceAction.LABEL), 'Workspaces: Open Workspace...', workspacesCategory, SupportsWorkspacesContext);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(SaveWorkspaceAsAction, SaveWorkspaceAsAction.ID, SaveWorkspaceAsAction.LABEL), 'Workspaces: Save Workspace As...', workspacesCategory, SupportsWorkspacesContext);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(DuplicateWorkspaceInNewWindowAction, DuplicateWorkspaceInNewWindowAction.ID, DuplicateWorkspaceInNewWindowAction.LABEL), 'Workspaces: Duplicate Workspace in New Window', workspacesCategory);\n\n\t\tCommandsRegistry.registerCommand(OpenWorkspaceConfigFileAction.ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService).createInstance(OpenWorkspaceConfigFileAction, OpenWorkspaceConfigFileAction.ID, OpenWorkspaceConfigFileAction.LABEL).run();\n\t\t});\n\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: OpenWorkspaceConfigFileAction.ID,\n\t\t\t\ttitle: { value: `${workspacesCategory}: ${OpenWorkspaceConfigFileAction.LABEL}`, original: 'Workspaces: Open Workspace Configuration File' },\n\t\t\t},\n\t\t\twhen: WorkbenchStateContext.isEqualTo('workspace')\n\t\t});\n\t})();\n\n\t// Actions: macOS Native Tabs\n\t(function registerMacOSNativeTabsActions(): void {\n\t\tif (isMacintosh) {\n\t\t\t[\n\t\t\t\t{ handler: NewWindowTabHandler, id: 'workbench.action.newWindowTab', title: { value: nls.localize('newTab', \"New Window Tab\"), original: 'New Window Tab' } },\n\t\t\t\t{ handler: ShowPreviousWindowTabHandler, id: 'workbench.action.showPreviousWindowTab', title: { value: nls.localize('showPreviousTab', \"Show Previous Window Tab\"), original: 'Show Previous Window Tab' } },\n\t\t\t\t{ handler: ShowNextWindowTabHandler, id: 'workbench.action.showNextWindowTab', title: { value: nls.localize('showNextWindowTab', \"Show Next Window Tab\"), original: 'Show Next Window Tab' } },\n\t\t\t\t{ handler: MoveWindowTabToNewWindowHandler, id: 'workbench.action.moveWindowTabToNewWindow', title: { value: nls.localize('moveWindowTabToNewWindow', \"Move Window Tab to New Window\"), original: 'Move Window Tab to New Window' } },\n\t\t\t\t{ handler: MergeWindowTabsHandlerHandler, id: 'workbench.action.mergeAllWindowTabs', title: { value: nls.localize('mergeAllWindowTabs', \"Merge All Windows\"), original: 'Merge All Windows' } },\n\t\t\t\t{ handler: ToggleWindowTabsBarHandler, id: 'workbench.action.toggleWindowTabsBar', title: { value: nls.localize('toggleWindowTabsBar', \"Toggle Window Tabs Bar\"), original: 'Toggle Window Tabs Bar' } }\n\t\t\t].forEach(command => {\n\t\t\t\tCommandsRegistry.registerCommand(command.id, command.handler);\n\n\t\t\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\t\t\tcommand,\n\t\t\t\t\twhen: HasMacNativeTabsContext\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t})();\n\n\t// Actions: Developer\n\t(function registerDeveloperActions(): void {\n\t\tconst developerCategory = nls.localize('developer', \"Developer\");\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ToggleSharedProcessAction, ToggleSharedProcessAction.ID, ToggleSharedProcessAction.LABEL), 'Developer: Toggle Shared Process', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(InspectContextKeysAction, InspectContextKeysAction.ID, InspectContextKeysAction.LABEL), 'Developer: Inspect Context Keys', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ToggleScreencastModeAction, ToggleScreencastModeAction.ID, ToggleScreencastModeAction.LABEL), 'Developer: Toggle Mouse Clicks', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ReloadWindowWithExtensionsDisabledAction, ReloadWindowWithExtensionsDisabledAction.ID, ReloadWindowWithExtensionsDisabledAction.LABEL), 'Developer: Reload Window Without Extensions', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(LogStorageAction, LogStorageAction.ID, LogStorageAction.LABEL), 'Developer: Log Storage', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ReloadWindowAction, ReloadWindowAction.ID, ReloadWindowAction.LABEL), 'Developer: Reload Window', developerCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ToggleDevToolsAction, ToggleDevToolsAction.ID, ToggleDevToolsAction.LABEL), 'Developer: Toggle Developer Tools', developerCategory);\n\n\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\tid: ReloadWindowAction.ID,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\twhen: IsDevelopmentContext,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_R\n\t\t});\n\n\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\tid: ToggleDevToolsAction.ID,\n\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\twhen: IsDevelopmentContext,\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_I,\n\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_I }\n\t\t});\n\t})();\n\n\t// Actions: help\n\t(function registerHelpActions(): void {\n\t\tconst helpCategory = nls.localize('help', \"Help\");\n\n\t\tif (KeybindingsReferenceAction.AVAILABLE) {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(KeybindingsReferenceAction, KeybindingsReferenceAction.ID, KeybindingsReferenceAction.LABEL, { primary: KeyChord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_R) }), 'Help: Keyboard Shortcuts Reference', helpCategory);\n\t\t}\n\n\t\tif (OpenDocumentationUrlAction.AVAILABLE) {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenDocumentationUrlAction, OpenDocumentationUrlAction.ID, OpenDocumentationUrlAction.LABEL), 'Help: Documentation', helpCategory);\n\t\t}\n\n\t\tif (OpenIntroductoryVideosUrlAction.AVAILABLE) {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenIntroductoryVideosUrlAction, OpenIntroductoryVideosUrlAction.ID, OpenIntroductoryVideosUrlAction.LABEL), 'Help: Introductory Videos', helpCategory);\n\t\t}\n\n\t\tif (OpenTipsAndTricksUrlAction.AVAILABLE) {\n\t\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenTipsAndTricksUrlAction, OpenTipsAndTricksUrlAction.ID, OpenTipsAndTricksUrlAction.LABEL), 'Help: Tips and Tricks', helpCategory);\n\t\t}\n\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenTwitterUrlAction, OpenTwitterUrlAction.ID, OpenTwitterUrlAction.LABEL), 'Help: Join Us on Twitter', helpCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenRequestFeatureUrlAction, OpenRequestFeatureUrlAction.ID, OpenRequestFeatureUrlAction.LABEL), 'Help: Search Feature Requests', helpCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenLicenseUrlAction, OpenLicenseUrlAction.ID, OpenLicenseUrlAction.LABEL), 'Help: View License', helpCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenPrivacyStatementUrlAction, OpenPrivacyStatementUrlAction.ID, OpenPrivacyStatementUrlAction.LABEL), 'Help: Privacy Statement', helpCategory);\n\t\tregistry.registerWorkbenchAction(new SyncActionDescriptor(ShowAboutDialogAction, ShowAboutDialogAction.ID, ShowAboutDialogAction.LABEL), 'Help: About', helpCategory);\n\t})();\n})();\n\n// Menu\n(function registerMenu(): void {\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '1_new',\n\t\tcommand: {\n\t\t\tid: NewWindowAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")\n\t\t},\n\t\torder: 2\n\t});\n\n\tif (isNative && isMacintosh) {\n\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\tgroup: '2_open',\n\t\t\tcommand: {\n\t\t\t\tid: OpenFileFolderAction.ID,\n\t\t\t\ttitle: nls.localize({ key: 'miOpen', comment: ['&& denotes a mnemonic'] }, \"&&Open...\")\n\t\t\t},\n\t\t\torder: 1\n\t\t});\n\t} else {\n\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\tgroup: '2_open',\n\t\t\tcommand: {\n\t\t\t\tid: OpenFileAction.ID,\n\t\t\t\ttitle: nls.localize({ key: 'miOpenFile', comment: ['&& denotes a mnemonic'] }, \"&&Open File...\")\n\t\t\t},\n\t\t\torder: 1\n\t\t});\n\n\t\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\t\tgroup: '2_open',\n\t\t\tcommand: {\n\t\t\t\tid: OpenFolderAction.ID,\n\t\t\t\ttitle: nls.localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n\t\t\t},\n\t\t\torder: 2\n\t\t});\n\t}\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '2_open',\n\t\tcommand: {\n\t\t\tid: OpenWorkspaceAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miOpenWorkspace', comment: ['&& denotes a mnemonic'] }, \"Open Wor&&kspace...\")\n\t\t},\n\t\torder: 3,\n\t\twhen: SupportsWorkspacesContext\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\ttitle: nls.localize({ key: 'miOpenRecent', comment: ['&& denotes a mnemonic'] }, \"Open &&Recent\"),\n\t\tsubmenu: MenuId.MenubarRecentMenu,\n\t\tgroup: '2_open',\n\t\torder: 4\n\t});\n\n\t// More\n\tMenuRegistry.appendMenuItem(MenuId.MenubarRecentMenu, {\n\t\tgroup: 'y_more',\n\t\tcommand: {\n\t\t\tid: OpenRecentAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miMore', comment: ['&& denotes a mnemonic'] }, \"&&More...\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '3_workspace',\n\t\tcommand: {\n\t\t\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\t\t\ttitle: nls.localize({ key: 'miAddFolderToWorkspace', comment: ['&& denotes a mnemonic'] }, \"A&&dd Folder to Workspace...\")\n\t\t},\n\t\torder: 1,\n\t\twhen: SupportsWorkspacesContext\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '3_workspace',\n\t\tcommand: {\n\t\t\tid: SaveWorkspaceAsAction.ID,\n\t\t\ttitle: nls.localize('miSaveWorkspaceAs', \"Save Workspace As...\")\n\t\t},\n\t\torder: 2,\n\t\twhen: SupportsWorkspacesContext\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\ttitle: nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\"),\n\t\tsubmenu: MenuId.MenubarPreferencesMenu,\n\t\tgroup: '5_autosave',\n\t\torder: 2,\n\t\t// when: IsMacContext.toNegated()\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '6_close',\n\t\tcommand: {\n\t\t\tid: CloseWorkspaceAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miCloseFolder', comment: ['&& denotes a mnemonic'] }, \"Close &&Folder\"),\n\t\t\tprecondition: WorkspaceFolderCountContext.notEqualsTo('0')\n\t\t},\n\t\torder: 3,\n\t\twhen: WorkbenchStateContext.notEqualsTo('workspace')\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '6_close',\n\t\tcommand: {\n\t\t\tid: CloseWorkspaceAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miCloseWorkspace', comment: ['&& denotes a mnemonic'] }, \"Close &&Workspace\")\n\t\t},\n\t\torder: 3,\n\t\twhen: WorkbenchStateContext.isEqualTo('workspace')\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: '6_close',\n\t\tcommand: {\n\t\t\tid: CloseCurrentWindowAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miCloseWindow', comment: ['&& denotes a mnemonic'] }, \"Clos&&e Window\")\n\t\t},\n\t\torder: 4\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\t\tgroup: 'z_Exit',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.quit',\n\t\t\ttitle: nls.localize({ key: 'miExit', comment: ['&& denotes a mnemonic'] }, \"E&&xit\")\n\t\t},\n\t\torder: 1,\n\t\twhen: IsMacContext.toNegated()\n\t});\n\n\t// Appereance menu\n\tMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\tgroup: '2_appearance',\n\t\ttitle: nls.localize({ key: 'miAppearance', comment: ['&& denotes a mnemonic'] }, \"&&Appearance\"),\n\t\tsubmenu: MenuId.MenubarAppearanceMenu,\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\t\tgroup: '1_toggle_view',\n\t\tcommand: {\n\t\t\tid: ToggleFullScreenAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miToggleFullScreen', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Full Screen\")\n\t\t},\n\t\torder: 1\n\t});\n\n\t// Zoom\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\t\tgroup: '3_zoom',\n\t\tcommand: {\n\t\t\tid: ZoomInAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miZoomIn', comment: ['&& denotes a mnemonic'] }, \"&&Zoom In\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\t\tgroup: '3_zoom',\n\t\tcommand: {\n\t\t\tid: ZoomOutAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miZoomOut', comment: ['&& denotes a mnemonic'] }, \"&&Zoom Out\")\n\t\t},\n\t\torder: 2\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\t\tgroup: '3_zoom',\n\t\tcommand: {\n\t\t\tid: ZoomResetAction.ID,\n\t\t\ttitle: nls.localize({ key: 'miZoomReset', comment: ['&& denotes a mnemonic'] }, \"&&Reset Zoom\")\n\t\t},\n\t\torder: 3\n\t});\n\n\t// Help\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '1_welcome',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openDocumentationUrl',\n\t\t\ttitle: nls.localize({ key: 'miDocumentation', comment: ['&& denotes a mnemonic'] }, \"&&Documentation\")\n\t\t},\n\t\torder: 3\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '1_welcome',\n\t\tcommand: {\n\t\t\tid: 'update.showCurrentReleaseNotes',\n\t\t\ttitle: nls.localize({ key: 'miReleaseNotes', comment: ['&& denotes a mnemonic'] }, \"&&Release Notes\")\n\t\t},\n\t\torder: 4\n\t});\n\n\t// Reference\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '2_reference',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.keybindingsReference',\n\t\t\ttitle: nls.localize({ key: 'miKeyboardShortcuts', comment: ['&& denotes a mnemonic'] }, \"&&Keyboard Shortcuts Reference\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '2_reference',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openIntroductoryVideosUrl',\n\t\t\ttitle: nls.localize({ key: 'miIntroductoryVideos', comment: ['&& denotes a mnemonic'] }, \"Introductory &&Videos\")\n\t\t},\n\t\torder: 2\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '2_reference',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openTipsAndTricksUrl',\n\t\t\ttitle: nls.localize({ key: 'miTipsAndTricks', comment: ['&& denotes a mnemonic'] }, \"Tips and Tri&&cks\")\n\t\t},\n\t\torder: 3\n\t});\n\n\t// Feedback\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '3_feedback',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openTwitterUrl',\n\t\t\ttitle: nls.localize({ key: 'miTwitter', comment: ['&& denotes a mnemonic'] }, \"&&Join Us on Twitter\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '3_feedback',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openRequestFeatureUrl',\n\t\t\ttitle: nls.localize({ key: 'miUserVoice', comment: ['&& denotes a mnemonic'] }, \"&&Search Feature Requests\")\n\t\t},\n\t\torder: 2\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '3_feedback',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openIssueReporter',\n\t\t\ttitle: nls.localize({ key: 'miReportIssue', comment: ['&& denotes a mnemonic', 'Translate this to \"Report Issue in English\" in all languages please!'] }, \"Report &&Issue\")\n\t\t},\n\t\torder: 3\n\t});\n\n\t// Legal\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '4_legal',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openLicenseUrl',\n\t\t\ttitle: nls.localize({ key: 'miLicense', comment: ['&& denotes a mnemonic'] }, \"View &&License\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '4_legal',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openPrivacyStatementUrl',\n\t\t\ttitle: nls.localize({ key: 'miPrivacyStatement', comment: ['&& denotes a mnemonic'] }, \"Privac&&y Statement\")\n\t\t},\n\t\torder: 2\n\t});\n\n\t// Tools\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '5_tools',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.toggleDevTools',\n\t\t\ttitle: nls.localize({ key: 'miToggleDevTools', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Developer Tools\")\n\t\t},\n\t\torder: 1\n\t});\n\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: '5_tools',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.openProcessExplorer',\n\t\t\ttitle: nls.localize({ key: 'miOpenProcessExplorerer', comment: ['&& denotes a mnemonic'] }, \"Open &&Process Explorer\")\n\t\t},\n\t\torder: 2\n\t});\n\n\t// About\n\tMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\t\tgroup: 'z_about',\n\t\tcommand: {\n\t\t\tid: 'workbench.action.showAboutDialog',\n\t\t\ttitle: nls.localize({ key: 'miAbout', comment: ['&& denotes a mnemonic'] }, \"&&About\")\n\t\t},\n\t\torder: 1,\n\t\twhen: IsMacContext.toNegated()\n\t});\n})();\n\n// Configuration\n(function registerConfiguration(): void {\n\tconst registry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\n\t// Window\n\tregistry.registerConfiguration({\n\t\t'id': 'window',\n\t\t'order': 8,\n\t\t'title': nls.localize('windowConfigurationTitle', \"Window\"),\n\t\t'type': 'object',\n\t\t'properties': {\n\t\t\t'window.openFilesInNewWindow': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['on', 'off', 'default'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.openFilesInNewWindow.on', \"Files will open in a new window.\"),\n\t\t\t\t\tnls.localize('window.openFilesInNewWindow.off', \"Files will open in the window with the files' folder open or the last active window.\"),\n\t\t\t\t\tisNative && isMacintosh ?\n\t\t\t\t\t\tnls.localize('window.openFilesInNewWindow.defaultMac', \"Files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder.\") :\n\t\t\t\t\t\tnls.localize('window.openFilesInNewWindow.default', \"Files will open in a new window unless picked from within the application (e.g. via the File menu).\")\n\t\t\t\t],\n\t\t\t\t'default': 'off',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'markdownDescription':\n\t\t\t\t\tisNative && isMacintosh ?\n\t\t\t\t\t\tnls.localize('openFilesInNewWindowMac', \"Controls whether files should open in a new window. \\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\") :\n\t\t\t\t\t\tnls.localize('openFilesInNewWindow', \"Controls whether files should open in a new window.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n\t\t\t},\n\t\t\t'window.openFoldersInNewWindow': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['on', 'off', 'default'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.openFoldersInNewWindow.on', \"Folders will open in a new window.\"),\n\t\t\t\t\tnls.localize('window.openFoldersInNewWindow.off', \"Folders will replace the last active window.\"),\n\t\t\t\t\tnls.localize('window.openFoldersInNewWindow.default', \"Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).\")\n\t\t\t\t],\n\t\t\t\t'default': 'default',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'markdownDescription': nls.localize('openFoldersInNewWindow', \"Controls whether folders should open in a new window or replace the last active window.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n\t\t\t},\n\t\t\t'window.openWithoutArgumentsInNewWindow': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['on', 'off'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.openWithoutArgumentsInNewWindow.on', \"Open a new empty window.\"),\n\t\t\t\t\tnls.localize('window.openWithoutArgumentsInNewWindow.off', \"Focus the last active running instance.\")\n\t\t\t\t],\n\t\t\t\t'default': isMacintosh ? 'off' : 'on',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'markdownDescription': nls.localize('openWithoutArgumentsInNewWindow', \"Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).\")\n\t\t\t},\n\t\t\t'window.restoreWindows': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['all', 'folders', 'one', 'none'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.reopenFolders.all', \"Reopen all windows.\"),\n\t\t\t\t\tnls.localize('window.reopenFolders.folders', \"Reopen all folders. Empty workspaces will not be restored.\"),\n\t\t\t\t\tnls.localize('window.reopenFolders.one', \"Reopen the last active window.\"),\n\t\t\t\t\tnls.localize('window.reopenFolders.none', \"Never reopen a window. Always start with an empty one.\")\n\t\t\t\t],\n\t\t\t\t'default': 'one',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('restoreWindows', \"Controls how windows are being reopened after a restart.\")\n\t\t\t},\n\t\t\t'window.restoreFullscreen': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': false,\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('restoreFullscreen', \"Controls whether a window should restore to full screen mode if it was exited in full screen mode.\")\n\t\t\t},\n\t\t\t'window.zoomLevel': {\n\t\t\t\t'type': 'number',\n\t\t\t\t'default': 0,\n\t\t\t\t'description': nls.localize('zoomLevel', \"Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.\")\n\t\t\t},\n\t\t\t'window.newWindowDimensions': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['default', 'inherit', 'maximized', 'fullscreen'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.newWindowDimensions.default', \"Open new windows in the center of the screen.\"),\n\t\t\t\t\tnls.localize('window.newWindowDimensions.inherit', \"Open new windows with same dimension as last active one.\"),\n\t\t\t\t\tnls.localize('window.newWindowDimensions.maximized', \"Open new windows maximized.\"),\n\t\t\t\t\tnls.localize('window.newWindowDimensions.fullscreen', \"Open new windows in full screen mode.\")\n\t\t\t\t],\n\t\t\t\t'default': 'default',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('newWindowDimensions', \"Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.\")\n\t\t\t},\n\t\t\t'window.closeWhenEmpty': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': false,\n\t\t\t\t'description': nls.localize('closeWhenEmpty', \"Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.\")\n\t\t\t},\n\t\t\t'window.menuBarVisibility': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['default', 'visible', 'toggle', 'hidden'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tnls.localize('window.menuBarVisibility.default', \"Menu is only hidden in full screen mode.\"),\n\t\t\t\t\tnls.localize('window.menuBarVisibility.visible', \"Menu is always visible even in full screen mode.\"),\n\t\t\t\t\tnls.localize('window.menuBarVisibility.toggle', \"Menu is hidden but can be displayed via Alt key.\"),\n\t\t\t\t\tnls.localize('window.menuBarVisibility.hidden', \"Menu is always hidden.\")\n\t\t\t\t],\n\t\t\t\t'default': 'default',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('menuBarVisibility', \"Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. By default, the menu bar will be visible, unless the window is full screen.\"),\n\t\t\t\t'included': isWeb || isWindows || isLinux\n\t\t\t},\n\t\t\t'window.enableMenuBarMnemonics': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': true,\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('enableMenuBarMnemonics', \"If enabled, the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editor commands instead.\"),\n\t\t\t\t'included': isWeb || isWindows || isLinux\n\t\t\t},\n\t\t\t'window.autoDetectHighContrast': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': true,\n\t\t\t\t'description': nls.localize('autoDetectHighContrast', \"If enabled, will automatically change to high contrast theme if Windows is using a high contrast theme, and to dark theme when switching away from a Windows high contrast theme.\"),\n\t\t\t\t'included': isWindows\n\t\t\t},\n\t\t\t'window.doubleClickIconToClose': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': false,\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'markdownDescription': nls.localize('window.doubleClickIconToClose', \"If enabled, double clicking the application icon in the title bar will close the window and the window cannot be dragged by the icon. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.\")\n\t\t\t},\n\t\t\t'window.titleBarStyle': {\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['custom'],\n\t\t\t\t'default': isNative && isLinux ? 'native' : 'custom',\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('titleBarStyle', \"Adjust the appearance of the window title bar. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.\")\n\t\t\t},\n\t\t\t'window.nativeTabs': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': false,\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('window.nativeTabs', \"Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.\"),\n\t\t\t\t'included': isNative && isMacintosh && parseFloat(os.release()) >= 16 // Minimum: macOS Sierra (10.12.x = darwin 16.x)\n\t\t\t},\n\t\t\t'window.nativeFullScreen': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': true,\n\t\t\t\t'description': nls.localize('window.nativeFullScreen', \"Controls if native full-screen should be used on macOS. Disable this option to prevent macOS from creating a new space when going full-screen.\"),\n\t\t\t\t'included': isNative && isMacintosh\n\t\t\t},\n\t\t\t'window.clickThroughInactive': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'default': true,\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t'description': nls.localize('window.clickThroughInactive', \"If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.\"),\n\t\t\t\t'included': isMacintosh\n\t\t\t}\n\t\t}\n\t});\n\n\t// Telemetry\n\tregistry.registerConfiguration({\n\t\t'id': 'telemetry',\n\t\t'order': 110,\n\t\ttitle: nls.localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t\t'type': 'object',\n\t\t'properties': {\n\t\t\t'telemetry.enableCrashReporter': {\n\t\t\t\t'type': 'boolean',\n\t\t\t\t'description': nls.localize('telemetry.enableCrashReporting', \"Enable crash reports to be sent to a Microsoft online service. \\nThis option requires restart to take effect.\"),\n\t\t\t\t'default': true,\n\t\t\t\t'tags': ['usesOnlineServices']\n\t\t\t}\n\t\t}\n\t});\n})();"]}]}