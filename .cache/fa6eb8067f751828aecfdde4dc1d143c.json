{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionQuery.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionQuery.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar Query = /** @class */ (function () {\n    function Query(value, sortBy, groupBy) {\n        this.value = value;\n        this.sortBy = sortBy;\n        this.groupBy = groupBy;\n        this.value = value.trim();\n    }\n    Query.suggestions = function (query) {\n        var commands = ['installed', 'outdated', 'enabled', 'disabled', 'builtin', 'recommended', 'sort', 'category', 'tag', 'ext'];\n        var subcommands = {\n            'sort': ['installs', 'rating', 'name'],\n            'category': ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'],\n            'tag': [''],\n            'ext': ['']\n        };\n        var queryContains = function (substr) { return query.indexOf(substr) > -1; };\n        var hasSort = subcommands.sort.some(function (subcommand) { return queryContains(\"@sort:\" + subcommand); });\n        var hasCategory = subcommands.category.some(function (subcommand) { return queryContains(\"@category:\" + subcommand); });\n        return arrays_1.flatten(commands.map(function (command) {\n            if (hasSort && command === 'sort' || hasCategory && command === 'category') {\n                return [];\n            }\n            if (subcommands[command]) {\n                return subcommands[command].map(function (subcommand) { return \"@\" + command + \":\" + subcommand + (subcommand === '' ? '' : ' '); });\n            }\n            else {\n                return [\"@\" + command + \" \"];\n            }\n        }));\n    };\n    Query.parse = function (value) {\n        var sortBy = '';\n        value = value.replace(/@sort:(\\w+)(-\\w*)?/g, function (match, by, order) {\n            sortBy = by;\n            return '';\n        });\n        var groupBy = '';\n        value = value.replace(/@group:(\\w+)(-\\w*)?/g, function (match, by, order) {\n            groupBy = by;\n            return '';\n        });\n        return new Query(value, sortBy, groupBy);\n    };\n    Query.prototype.toString = function () {\n        var result = this.value;\n        if (this.sortBy) {\n            result = \"\" + result + (result ? ' ' : '') + \"@sort:\" + this.sortBy;\n        }\n        if (this.groupBy) {\n            result = \"\" + result + (result ? ' ' : '') + \"@group:\" + this.groupBy;\n        }\n        return result;\n    };\n    Query.prototype.isValid = function () {\n        return !/@outdated/.test(this.value);\n    };\n    Query.prototype.equals = function (other) {\n        return this.value === other.value && this.sortBy === other.sortBy;\n    };\n    return Query;\n}());\nexports.Query = Query;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionQuery.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/common/extensionQuery.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\n\nexport class Query {\n\n\tconstructor(public value: string, public sortBy: string, public groupBy: string) {\n\t\tthis.value = value.trim();\n\t}\n\n\tstatic suggestions(query: string): string[] {\n\t\tconst commands = ['installed', 'outdated', 'enabled', 'disabled', 'builtin', 'recommended', 'sort', 'category', 'tag', 'ext'];\n\t\tconst subcommands = {\n\t\t\t'sort': ['installs', 'rating', 'name'],\n\t\t\t'category': ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'],\n\t\t\t'tag': [''],\n\t\t\t'ext': ['']\n\t\t};\n\n\t\tlet queryContains = (substr: string) => query.indexOf(substr) > -1;\n\t\tlet hasSort = subcommands.sort.some(subcommand => queryContains(`@sort:${subcommand}`));\n\t\tlet hasCategory = subcommands.category.some(subcommand => queryContains(`@category:${subcommand}`));\n\n\t\treturn flatten(\n\t\t\tcommands.map(command => {\n\t\t\t\tif (hasSort && command === 'sort' || hasCategory && command === 'category') {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tif (subcommands[command]) {\n\t\t\t\t\treturn subcommands[command].map((subcommand: string) => `@${command}:${subcommand}${subcommand === '' ? '' : ' '}`);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn [`@${command} `];\n\t\t\t\t}\n\t\t\t}));\n\n\t}\n\n\tstatic parse(value: string): Query {\n\t\tlet sortBy = '';\n\t\tvalue = value.replace(/@sort:(\\w+)(-\\w*)?/g, (match, by: string, order: string) => {\n\t\t\tsortBy = by;\n\n\t\t\treturn '';\n\t\t});\n\n\t\tlet groupBy = '';\n\t\tvalue = value.replace(/@group:(\\w+)(-\\w*)?/g, (match, by: string, order: string) => {\n\t\t\tgroupBy = by;\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn new Query(value, sortBy, groupBy);\n\t}\n\n\ttoString(): string {\n\t\tlet result = this.value;\n\n\t\tif (this.sortBy) {\n\t\t\tresult = `${result}${result ? ' ' : ''}@sort:${this.sortBy}`;\n\t\t}\n\t\tif (this.groupBy) {\n\t\t\tresult = `${result}${result ? ' ' : ''}@group:${this.groupBy}`;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tisValid(): boolean {\n\t\treturn !/@outdated/.test(this.value);\n\t}\n\n\tequals(other: Query): boolean {\n\t\treturn this.value === other.value && this.sortBy === other.sortBy;\n\t}\n}"]}]}