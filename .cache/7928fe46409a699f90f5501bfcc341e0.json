{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/layout/browser/layoutService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/layout/browser/layoutService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.ILayoutService = instantiation_1.createDecorator('layoutService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/layout/browser/layoutService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/layout/browser/layoutService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,gFAAiF;AAEpE,QAAA,cAAc,GAAG,+BAAe,CAAiB,eAAe,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILayoutService = createDecorator<ILayoutService>('layoutService');\n\nexport interface IDimension {\n\treadonly width: number;\n\treadonly height: number;\n}\n\nexport interface ILayoutService {\n\n\t_serviceBrand: any;\n\n\t/**\n\t * The dimensions of the container.\n\t */\n\treadonly dimension: IDimension;\n\n\t/**\n\t * Container of the application.\n\t */\n\treadonly container: HTMLElement;\n\n\t/**\n\t * An event that is emitted when the container is layed out. The\n\t * event carries the dimensions of the container as part of it.\n\t */\n\treadonly onLayout: Event<IDimension>;\n}"]}]}