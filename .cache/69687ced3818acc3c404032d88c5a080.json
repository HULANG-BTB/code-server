{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/titlebar/titlebarPart.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/titlebar/titlebarPart.ts","mtime":1555846338036},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/titlebarpart\");\nvar path_1 = require(\"vs/base/common/path\");\nvar resources = require(\"vs/base/common/resources\");\nvar part_1 = require(\"vs/workbench/browser/part\");\nvar titleService_1 = require(\"vs/workbench/services/title/common/titleService\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar nls = require(\"vs/nls\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar color_1 = require(\"vs/base/common/color\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar menubarControl_1 = require(\"vs/workbench/browser/parts/titlebar/menubarControl\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar event_1 = require(\"vs/base/common/event\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar async_1 = require(\"vs/base/common/async\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar TitlebarPart = /** @class */ (function (_super) {\n    tslib_1.__extends(TitlebarPart, _super);\n    function TitlebarPart(contextMenuService, windowService, configurationService, windowsService, editorService, environmentService, contextService, instantiationService, themeService, labelService, storageService, layoutService) {\n        var _this = _super.call(this, layoutService_1.Parts.TITLEBAR_PART, { hasTitle: false }, themeService, storageService, layoutService) || this;\n        _this.contextMenuService = contextMenuService;\n        _this.windowService = windowService;\n        _this.configurationService = configurationService;\n        _this.windowsService = windowsService;\n        _this.editorService = editorService;\n        _this.environmentService = environmentService;\n        _this.contextService = contextService;\n        _this.instantiationService = instantiationService;\n        _this.labelService = labelService;\n        //#region IView\n        _this.minimumWidth = 0;\n        _this.maximumWidth = Number.POSITIVE_INFINITY;\n        //#endregion\n        _this._onMenubarVisibilityChange = _this._register(new event_1.Emitter());\n        _this.titleUpdater = _this._register(new async_1.RunOnceScheduler(function () { return _this.doUpdateTitle(); }, 0));\n        _this.properties = { isPure: true, isAdmin: false };\n        _this.activeEditorListeners = [];\n        _this.registerListeners();\n        return _this;\n    }\n    Object.defineProperty(TitlebarPart.prototype, \"minimumHeight\", {\n        get: function () { return browser_1.isMacintosh ? 22 / browser_1.getZoomFactor() : (30 / (this.configurationService.getValue('window.menuBarVisibility') === 'hidden' ? browser_1.getZoomFactor() : 1)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TitlebarPart.prototype, \"maximumHeight\", {\n        get: function () { return browser_1.isMacintosh ? 22 / browser_1.getZoomFactor() : (30 / (this.configurationService.getValue('window.menuBarVisibility') === 'hidden' ? browser_1.getZoomFactor() : 1)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TitlebarPart.prototype, \"onMenubarVisibilityChange\", {\n        get: function () { return this._onMenubarVisibilityChange.event; },\n        enumerable: true,\n        configurable: true\n    });\n    TitlebarPart.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.windowService.onDidChangeFocus(function (focused) { return focused ? _this.onFocus() : _this.onBlur(); }));\n        this._register(this.configurationService.onDidChangeConfiguration(function (e) { return _this.onConfigurationChanged(e); }));\n        this._register(this.editorService.onDidActiveEditorChange(function () { return _this.onActiveEditorChange(); }));\n        this._register(this.contextService.onDidChangeWorkspaceFolders(function () { return _this.titleUpdater.schedule(); }));\n        this._register(this.contextService.onDidChangeWorkbenchState(function () { return _this.titleUpdater.schedule(); }));\n        this._register(this.contextService.onDidChangeWorkspaceName(function () { return _this.titleUpdater.schedule(); }));\n        this._register(this.labelService.onDidChangeFormatters(function () { return _this.titleUpdater.schedule(); }));\n    };\n    TitlebarPart.prototype.onBlur = function () {\n        this.isInactive = true;\n        this.updateStyles();\n    };\n    TitlebarPart.prototype.onFocus = function () {\n        this.isInactive = false;\n        this.updateStyles();\n    };\n    TitlebarPart.prototype.onConfigurationChanged = function (event) {\n        if (event.affectsConfiguration('window.title')) {\n            this.titleUpdater.schedule();\n        }\n        if (event.affectsConfiguration('window.doubleClickIconToClose')) {\n            if (this.appIcon) {\n                this.onUpdateAppIconDragBehavior();\n            }\n        }\n    };\n    TitlebarPart.prototype.onMenubarVisibilityChanged = function (visible) {\n        var _this = this;\n        if (browser_1.isWindows || browser_1.isLinux) {\n            // Hide title when toggling menu bar\n            if (this.configurationService.getValue('window.menuBarVisibility') === 'toggle' && visible) {\n                // Hack to fix issue #52522 with layered webkit-app-region elements appearing under cursor\n                dom_1.hide(this.dragRegion);\n                setTimeout(function () { return dom_1.show(_this.dragRegion); }, 50);\n            }\n            this.adjustTitleMarginToCenter();\n            this._onMenubarVisibilityChange.fire(visible);\n        }\n    };\n    TitlebarPart.prototype.onMenubarFocusChanged = function (focused) {\n        if (browser_1.isWindows || browser_1.isLinux) {\n            if (focused) {\n                dom_1.hide(this.dragRegion);\n            }\n            else {\n                dom_1.show(this.dragRegion);\n            }\n        }\n    };\n    TitlebarPart.prototype.onActiveEditorChange = function () {\n        var _this = this;\n        // Dispose old listeners\n        lifecycle_1.dispose(this.activeEditorListeners);\n        this.activeEditorListeners = [];\n        // Calculate New Window Title\n        this.titleUpdater.schedule();\n        // Apply listener for dirty and label changes\n        var activeEditor = this.editorService.activeEditor;\n        if (activeEditor instanceof editor_1.EditorInput) {\n            this.activeEditorListeners.push(activeEditor.onDidChangeDirty(function () { return _this.titleUpdater.schedule(); }));\n            this.activeEditorListeners.push(activeEditor.onDidChangeLabel(function () { return _this.titleUpdater.schedule(); }));\n        }\n        // Represented File Name\n        this.updateRepresentedFilename();\n    };\n    TitlebarPart.prototype.updateRepresentedFilename = function () {\n        var file = editor_1.toResource(this.editorService.activeEditor, { supportSideBySide: true, filter: 'file' });\n        var path = file ? file.fsPath : '';\n        // Apply to window\n        this.windowService.setRepresentedFilename(path);\n        // Keep for context menu\n        this.representedFileName = path;\n    };\n    TitlebarPart.prototype.doUpdateTitle = function () {\n        var title = this.getWindowTitle();\n        // Always set the native window title to identify us properly to the OS\n        var nativeTitle = title;\n        if (!strings_1.trim(nativeTitle)) {\n            nativeTitle = this.environmentService.appNameLong;\n        }\n        window.document.title = nativeTitle;\n        // Apply custom title if we can\n        if (this.title) {\n            this.title.innerText = title;\n        }\n        else {\n            this.pendingTitle = title;\n        }\n        if ((browser_1.isWindows || browser_1.isLinux) && this.title) {\n            if (this.lastLayoutDimensions) {\n                this.updateLayout(this.lastLayoutDimensions);\n            }\n        }\n    };\n    TitlebarPart.prototype.getWindowTitle = function () {\n        var title = this.doGetWindowTitle();\n        if (this.properties.isAdmin) {\n            title = (title || this.environmentService.appNameLong) + \" \" + TitlebarPart.NLS_USER_IS_ADMIN;\n        }\n        if (!this.properties.isPure) {\n            title = (title || this.environmentService.appNameLong) + \" \" + TitlebarPart.NLS_UNSUPPORTED;\n        }\n        if (this.environmentService.isExtensionDevelopment) {\n            title = TitlebarPart.NLS_EXTENSION_HOST + \" - \" + (title || this.environmentService.appNameLong);\n        }\n        return title;\n    };\n    TitlebarPart.prototype.updateProperties = function (properties) {\n        var isAdmin = typeof properties.isAdmin === 'boolean' ? properties.isAdmin : this.properties.isAdmin;\n        var isPure = typeof properties.isPure === 'boolean' ? properties.isPure : this.properties.isPure;\n        if (isAdmin !== this.properties.isAdmin || isPure !== this.properties.isPure) {\n            this.properties.isAdmin = isAdmin;\n            this.properties.isPure = isPure;\n            this.titleUpdater.schedule();\n        }\n    };\n    /**\n     * Possible template values:\n     *\n     * {activeEditorLong}: e.g. /Users/Development/myFolder/myFileFolder/myFile.txt\n     * {activeEditorMedium}: e.g. myFolder/myFileFolder/myFile.txt\n     * {activeEditorShort}: e.g. myFile.txt\n     * {activeFolderLong}: e.g. /Users/Development/myFolder/myFileFolder\n     * {activeFolderMedium}: e.g. myFolder/myFileFolder\n     * {activeFolderShort}: e.g. myFileFolder\n     * {rootName}: e.g. myFolder1, myFolder2, myFolder3\n     * {rootPath}: e.g. /Users/Development\n     * {folderName}: e.g. myFolder\n     * {folderPath}: e.g. /Users/Development/myFolder\n     * {appName}: e.g. VS Code\n     * {dirty}: indicator\n     * {separator}: conditional separator\n     */\n    TitlebarPart.prototype.doGetWindowTitle = function () {\n        var editor = this.editorService.activeEditor;\n        var workspace = this.contextService.getWorkspace();\n        // Compute root\n        var root;\n        if (workspace.configuration) {\n            root = workspace.configuration;\n        }\n        else if (workspace.folders.length) {\n            root = workspace.folders[0].uri;\n        }\n        // Compute active editor folder\n        var editorResource = editor ? editor_1.toResource(editor) : undefined;\n        var editorFolderResource = editorResource ? resources.dirname(editorResource) : undefined;\n        if (editorFolderResource && editorFolderResource.path === '.') {\n            editorFolderResource = undefined;\n        }\n        // Compute folder resource\n        // Single Root Workspace: always the root single workspace in this case\n        // Otherwise: root folder of the currently active file if any\n        var folder = this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.FOLDER ? workspace.folders[0] : this.contextService.getWorkspaceFolder(editor_1.toResource(editor, { supportSideBySide: true }));\n        // Variables\n        var activeEditorShort = editor ? editor.getTitle(editor_1.Verbosity.SHORT) : '';\n        var activeEditorMedium = editor ? editor.getTitle(editor_1.Verbosity.MEDIUM) : activeEditorShort;\n        var activeEditorLong = editor ? editor.getTitle(editor_1.Verbosity.LONG) : activeEditorMedium;\n        var activeFolderShort = editorFolderResource ? resources.basename(editorFolderResource) : '';\n        var activeFolderMedium = editorFolderResource ? this.labelService.getUriLabel(editorFolderResource, { relative: true }) : '';\n        var activeFolderLong = editorFolderResource ? this.labelService.getUriLabel(editorFolderResource) : '';\n        var rootName = this.labelService.getWorkspaceLabel(workspace);\n        var rootPath = root ? this.labelService.getUriLabel(root) : '';\n        var folderName = folder ? folder.name : '';\n        var folderPath = folder ? this.labelService.getUriLabel(folder.uri) : '';\n        var dirty = editor && editor.isDirty() ? TitlebarPart.TITLE_DIRTY : '';\n        var appName = this.environmentService.appNameLong;\n        var separator = TitlebarPart.TITLE_SEPARATOR;\n        var titleTemplate = this.configurationService.getValue('window.title');\n        return labels_1.template(titleTemplate, {\n            activeEditorShort: activeEditorShort,\n            activeEditorLong: activeEditorLong,\n            activeEditorMedium: activeEditorMedium,\n            activeFolderShort: activeFolderShort,\n            activeFolderMedium: activeFolderMedium,\n            activeFolderLong: activeFolderLong,\n            rootName: rootName,\n            rootPath: rootPath,\n            folderName: folderName,\n            folderPath: folderPath,\n            dirty: dirty,\n            appName: appName,\n            separator: { label: separator }\n        });\n    };\n    TitlebarPart.prototype.createContentArea = function (parent) {\n        var _this = this;\n        this.element = parent;\n        // Draggable region that we can manipulate for #52522\n        this.dragRegion = dom_1.append(this.element, dom_1.$('div.titlebar-drag-region'));\n        // App Icon (Windows/Linux)\n        if (!(platform_1.isNative && browser_1.isMacintosh)) {\n            this.appIcon = dom_1.append(this.element, dom_1.$('div.window-appicon'));\n            this.onUpdateAppIconDragBehavior();\n            this._register(dom_1.addDisposableListener(this.appIcon, dom_1.EventType.DBLCLICK, (function (e) {\n                _this.windowService.closeWindow();\n            })));\n        }\n        // Menubar: the menubar part which is responsible for populating both the custom and native menubars\n        this.menubarPart = this.instantiationService.createInstance(menubarControl_1.MenubarControl);\n        this.menubar = dom_1.append(this.element, dom_1.$('div.menubar'));\n        this.menubar.setAttribute('role', 'menubar');\n        this.menubarPart.create(this.menubar);\n        // if (!(isNative && isMacintosh)) {\n        this._register(this.menubarPart.onVisibilityChange(function (e) { return _this.onMenubarVisibilityChanged(e); }));\n        this._register(this.menubarPart.onFocusStateChange(function (e) { return _this.onMenubarFocusChanged(e); }));\n        // }\n        // Title\n        this.title = dom_1.append(this.element, dom_1.$('div.window-title'));\n        if (this.pendingTitle) {\n            this.title.innerText = this.pendingTitle;\n        }\n        else {\n            this.titleUpdater.schedule();\n        }\n        // Maximize/Restore on doubleclick\n        if (browser_1.isMacintosh) {\n            this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DBLCLICK, function (e) {\n                dom_1.EventHelper.stop(e);\n                _this.onTitleDoubleclick();\n            }));\n        }\n        // Context menu on title\n        [dom_1.EventType.CONTEXT_MENU, dom_1.EventType.MOUSE_DOWN].forEach(function (event) {\n            _this._register(dom_1.addDisposableListener(_this.title, event, function (e) {\n                if (e.type === dom_1.EventType.CONTEXT_MENU || e.metaKey) {\n                    dom_1.EventHelper.stop(e);\n                    _this.onContextMenu(e);\n                }\n            }));\n        });\n        // Window Controls (Windows/Linux)\n        if (!browser_1.isMacintosh) {\n            this.windowControls = dom_1.append(this.element, dom_1.$('div.window-controls-container'));\n            // Minimize\n            var minimizeIconContainer = dom_1.append(this.windowControls, dom_1.$('div.window-icon-bg'));\n            var minimizeIcon = dom_1.append(minimizeIconContainer, dom_1.$('div.window-icon'));\n            dom_1.addClass(minimizeIcon, 'window-minimize');\n            this._register(dom_1.addDisposableListener(minimizeIcon, dom_1.EventType.CLICK, function (e) {\n                _this.windowService.minimizeWindow();\n            }));\n            // Restore\n            var restoreIconContainer = dom_1.append(this.windowControls, dom_1.$('div.window-icon-bg'));\n            this.maxRestoreControl = dom_1.append(restoreIconContainer, dom_1.$('div.window-icon'));\n            dom_1.addClass(this.maxRestoreControl, 'window-max-restore');\n            this._register(dom_1.addDisposableListener(this.maxRestoreControl, dom_1.EventType.CLICK, function (e) {\n                _this.windowService.isMaximized().then(function (maximized) {\n                    if (maximized) {\n                        return _this.windowService.unmaximizeWindow();\n                    }\n                    return _this.windowService.maximizeWindow();\n                });\n            }));\n            // Close\n            var closeIconContainer = dom_1.append(this.windowControls, dom_1.$('div.window-icon-bg'));\n            dom_1.addClass(closeIconContainer, 'window-close-bg');\n            var closeIcon = dom_1.append(closeIconContainer, dom_1.$('div.window-icon'));\n            dom_1.addClass(closeIcon, 'window-close');\n            this._register(dom_1.addDisposableListener(closeIcon, dom_1.EventType.CLICK, function (e) {\n                _this.windowService.closeWindow();\n            }));\n            // Resizer\n            this.resizer = dom_1.append(this.element, dom_1.$('div.resizer'));\n            var isMaximized = this.windowService.getConfiguration().maximized ? true : false;\n            this.onDidChangeMaximized(isMaximized);\n            this.windowService.onDidChangeMaximize(this.onDidChangeMaximized, this);\n        }\n        // Since the title area is used to drag the window, we do not want to steal focus from the\n        // currently active element. So we restore focus after a timeout back to where it was.\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.MOUSE_DOWN, function (e) {\n            if (e.target && dom_1.isAncestor(e.target, _this.menubar)) {\n                return;\n            }\n            var active = document.activeElement;\n            setTimeout(function () {\n                if (active instanceof HTMLElement) {\n                    active.focus();\n                }\n            }, 0 /* need a timeout because we are in capture phase */);\n        }, true /* use capture to know the currently active element properly */));\n        this.updateStyles();\n        return this.element;\n    };\n    TitlebarPart.prototype.onDidChangeMaximized = function (maximized) {\n        if (this.maxRestoreControl) {\n            if (maximized) {\n                dom_1.removeClass(this.maxRestoreControl, 'window-maximize');\n                dom_1.addClass(this.maxRestoreControl, 'window-unmaximize');\n            }\n            else {\n                dom_1.removeClass(this.maxRestoreControl, 'window-unmaximize');\n                dom_1.addClass(this.maxRestoreControl, 'window-maximize');\n            }\n        }\n        if (this.resizer) {\n            if (maximized) {\n                dom_1.hide(this.resizer);\n            }\n            else {\n                dom_1.show(this.resizer);\n            }\n        }\n        this.adjustTitleMarginToCenter();\n    };\n    TitlebarPart.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n        // Part container\n        if (this.element) {\n            if (this.isInactive) {\n                dom_1.addClass(this.element, 'inactive');\n            }\n            else {\n                dom_1.removeClass(this.element, 'inactive');\n            }\n            var titleBackground = this.getColor(this.isInactive ? theme_1.TITLE_BAR_INACTIVE_BACKGROUND : theme_1.TITLE_BAR_ACTIVE_BACKGROUND);\n            this.element.style.backgroundColor = titleBackground;\n            if (titleBackground && color_1.Color.fromHex(titleBackground).isLighter()) {\n                dom_1.addClass(this.element, 'light');\n            }\n            else {\n                dom_1.removeClass(this.element, 'light');\n            }\n            var titleForeground = this.getColor(this.isInactive ? theme_1.TITLE_BAR_INACTIVE_FOREGROUND : theme_1.TITLE_BAR_ACTIVE_FOREGROUND);\n            this.element.style.color = titleForeground;\n            var titleBorder = this.getColor(theme_1.TITLE_BAR_BORDER);\n            this.element.style.borderBottom = titleBorder ? \"1px solid \" + titleBorder : null;\n        }\n    };\n    TitlebarPart.prototype.onTitleDoubleclick = function () {\n        this.windowService.onWindowTitleDoubleClick();\n    };\n    TitlebarPart.prototype.onUpdateAppIconDragBehavior = function () {\n        var setting = this.configurationService.getValue('window.doubleClickIconToClose');\n        if (setting) {\n            this.appIcon.style['-webkit-app-region'] = 'no-drag';\n        }\n        else {\n            this.appIcon.style['-webkit-app-region'] = 'drag';\n        }\n    };\n    TitlebarPart.prototype.onContextMenu = function (e) {\n        // Find target anchor\n        var event = new mouseEvent_1.StandardMouseEvent(e);\n        var anchor = { x: event.posx, y: event.posy };\n        // Show menu\n        var actions = this.getContextMenuActions();\n        if (actions.length) {\n            this.contextMenuService.showContextMenu({\n                getAnchor: function () { return anchor; },\n                getActions: function () { return actions; },\n                onHide: function () { return actions.forEach(function (a) { return a.dispose(); }); }\n            });\n        }\n    };\n    TitlebarPart.prototype.getContextMenuActions = function () {\n        var actions = [];\n        if (this.representedFileName) {\n            var segments = this.representedFileName.split(path_1.posix.sep);\n            for (var i = segments.length; i > 0; i--) {\n                var isFile = (i === segments.length);\n                var pathOffset = i;\n                if (!isFile) {\n                    pathOffset++; // for segments which are not the file name we want to open the folder\n                }\n                var path = segments.slice(0, pathOffset).join(path_1.posix.sep);\n                var label = void 0;\n                if (!isFile) {\n                    label = labels_1.getBaseLabel(path_1.dirname(path));\n                }\n                else {\n                    label = labels_1.getBaseLabel(path);\n                }\n                actions.push(new ShowItemInFolderAction(path, label || path_1.posix.sep, this.windowsService));\n            }\n        }\n        return actions;\n    };\n    TitlebarPart.prototype.adjustTitleMarginToCenter = function () {\n        if (!(platform_1.isNative && browser_1.isMacintosh) &&\n            (this.appIcon.clientWidth + this.menubar.clientWidth + 10 > (this.element.clientWidth - this.title.clientWidth) / 2 ||\n                this.element.clientWidth - this.windowControls.clientWidth - 10 < (this.element.clientWidth + this.title.clientWidth) / 2)) {\n            this.title.style.position = null;\n            this.title.style.left = null;\n            this.title.style.transform = null;\n        }\n        else {\n            this.title.style.position = 'absolute';\n            this.title.style.left = '50%';\n            this.title.style.transform = 'translate(-50%, 0)';\n        }\n    };\n    TitlebarPart.prototype.updateLayout = function (dimension) {\n        var _this = this;\n        this.lastLayoutDimensions = dimension;\n        if (windows_1.getTitleBarStyle(this.configurationService, this.environmentService) === 'custom') {\n            // Only prevent zooming behavior on macOS or when the menubar is not visible\n            if ((platform_1.isNative && browser_1.isMacintosh) || this.configurationService.getValue('window.menuBarVisibility') === 'hidden') {\n                this.title.style.zoom = \"\" + 1 / browser_1.getZoomFactor();\n                if (browser_1.isWindows || browser_1.isLinux) {\n                    this.appIcon.style.zoom = \"\" + 1 / browser_1.getZoomFactor();\n                    this.windowControls.style.zoom = \"\" + 1 / browser_1.getZoomFactor();\n                }\n            }\n            else {\n                this.title.style.zoom = null;\n                if (browser_1.isWindows || browser_1.isLinux) {\n                    this.appIcon.style.zoom = null;\n                    this.windowControls.style.zoom = null;\n                }\n            }\n            dom_1.runAtThisOrScheduleAtNextAnimationFrame(function () { return _this.adjustTitleMarginToCenter(); });\n            if (this.menubarPart) {\n                var menubarDimension = new dom_1.Dimension(0, dimension.height);\n                this.menubarPart.layout(menubarDimension);\n            }\n        }\n    };\n    TitlebarPart.prototype.layout = function (width, height) {\n        this.updateLayout(new dom_1.Dimension(width, height));\n        _super.prototype.layoutContents.call(this, width, height);\n    };\n    TitlebarPart.prototype.toJSON = function () {\n        return {\n            type: layoutService_1.Parts.TITLEBAR_PART\n        };\n    };\n    TitlebarPart.NLS_UNSUPPORTED = nls.localize('patchedWindowTitle', \"[Unsupported]\");\n    TitlebarPart.NLS_USER_IS_ADMIN = browser_1.isWindows ? nls.localize('userIsAdmin', \"[Administrator]\") : nls.localize('userIsSudo', \"[Superuser]\");\n    TitlebarPart.NLS_EXTENSION_HOST = nls.localize('devExtensionWindowTitlePrefix', \"[Extension Development Host]\");\n    TitlebarPart.TITLE_DIRTY = '\\u25cf ';\n    TitlebarPart.TITLE_SEPARATOR = browser_1.isMacintosh ? ' — ' : ' - '; // macOS uses special - separator\n    TitlebarPart = tslib_1.__decorate([\n        tslib_1.__param(0, contextView_1.IContextMenuService),\n        tslib_1.__param(1, windows_1.IWindowService),\n        tslib_1.__param(2, configuration_1.IConfigurationService),\n        tslib_1.__param(3, windows_1.IWindowsService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, environment_1.IEnvironmentService),\n        tslib_1.__param(6, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(7, instantiation_1.IInstantiationService),\n        tslib_1.__param(8, themeService_1.IThemeService),\n        tslib_1.__param(9, label_1.ILabelService),\n        tslib_1.__param(10, storage_1.IStorageService),\n        tslib_1.__param(11, layoutService_1.IWorkbenchLayoutService)\n    ], TitlebarPart);\n    return TitlebarPart;\n}(part_1.Part));\nexports.TitlebarPart = TitlebarPart;\nvar ShowItemInFolderAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowItemInFolderAction, _super);\n    function ShowItemInFolderAction(path, label, windowsService) {\n        var _this = _super.call(this, 'showItemInFolder.action.id', label) || this;\n        _this.path = path;\n        _this.windowsService = windowsService;\n        return _this;\n    }\n    ShowItemInFolderAction.prototype.run = function () {\n        return this.windowsService.showItemInFolder(uri_1.URI.file(this.path));\n    };\n    return ShowItemInFolderAction;\n}(actions_1.Action));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var titlebarActiveFg = theme.getColor(theme_1.TITLE_BAR_ACTIVE_FOREGROUND);\n    if (titlebarActiveFg) {\n        collector.addRule(\"\\n\\t\\t.monaco-workbench .part.titlebar > .window-controls-container .window-icon {\\n\\t\\t\\tbackground-color: \" + titlebarActiveFg + \";\\n\\t\\t}\\n\\t\\t\");\n    }\n    var titlebarInactiveFg = theme.getColor(theme_1.TITLE_BAR_INACTIVE_FOREGROUND);\n    if (titlebarInactiveFg) {\n        collector.addRule(\"\\n\\t\\t.monaco-workbench .part.titlebar.inactive > .window-controls-container .window-icon {\\n\\t\\t\\t\\tbackground-color: \" + titlebarInactiveFg + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n});\nextensions_1.registerSingleton(titleService_1.ITitleService, TitlebarPart);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/titlebar/titlebarPart.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/titlebar/titlebarPart.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/titlebarpart';\nimport { dirname, posix } from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { Part } from 'vs/workbench/browser/part';\nimport { ITitleService, ITitleProperties } from 'vs/workbench/services/title/common/titleService';\nimport { getZoomFactor, isMacintosh, isWindows, isLinux } from 'vs/base/browser/browser';\nimport { IWindowService, IWindowsService, MenuBarVisibility, getTitleBarStyle } from 'vs/platform/windows/common/windows';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { IConfigurationService, IConfigurationChangeEvent } from 'vs/platform/configuration/common/configuration';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport * as nls from 'vs/nls';\nimport { EditorInput, toResource, Verbosity } from 'vs/workbench/common/editor';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { IThemeService, registerThemingParticipant, ITheme, ICssStyleCollector } from 'vs/platform/theme/common/themeService';\nimport { TITLE_BAR_ACTIVE_BACKGROUND, TITLE_BAR_ACTIVE_FOREGROUND, TITLE_BAR_INACTIVE_FOREGROUND, TITLE_BAR_INACTIVE_BACKGROUND, TITLE_BAR_BORDER } from 'vs/workbench/common/theme';\nimport { isNative } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { Color } from 'vs/base/common/color';\nimport { trim } from 'vs/base/common/strings';\nimport { EventType, EventHelper, Dimension, isAncestor, hide, show, removeClass, addClass, append, $, addDisposableListener, runAtThisOrScheduleAtNextAnimationFrame } from 'vs/base/browser/dom';\nimport { MenubarControl } from 'vs/workbench/browser/parts/titlebar/menubarControl';\nimport { IInstantiationService, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { template, getBaseLabel } from 'vs/base/common/labels';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { Parts, IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport class TitlebarPart extends Part implements ITitleService {\n\n\tprivate static readonly NLS_UNSUPPORTED = nls.localize('patchedWindowTitle', \"[Unsupported]\");\n\tprivate static readonly NLS_USER_IS_ADMIN = isWindows ? nls.localize('userIsAdmin', \"[Administrator]\") : nls.localize('userIsSudo', \"[Superuser]\");\n\tprivate static readonly NLS_EXTENSION_HOST = nls.localize('devExtensionWindowTitlePrefix', \"[Extension Development Host]\");\n\tprivate static readonly TITLE_DIRTY = '\\u25cf ';\n\tprivate static readonly TITLE_SEPARATOR = isMacintosh ? ' — ' : ' - '; // macOS uses special - separator\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 0;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\tget minimumHeight(): number { return isMacintosh ? 22 / getZoomFactor() : (30 / (this.configurationService.getValue<MenuBarVisibility>('window.menuBarVisibility') === 'hidden' ? getZoomFactor() : 1)); }\n\tget maximumHeight(): number { return isMacintosh ? 22 / getZoomFactor() : (30 / (this.configurationService.getValue<MenuBarVisibility>('window.menuBarVisibility') === 'hidden' ? getZoomFactor() : 1)); }\n\n\t//#endregion\n\n\tprivate _onMenubarVisibilityChange = this._register(new Emitter<boolean>());\n\tget onMenubarVisibilityChange(): Event<boolean> { return this._onMenubarVisibilityChange.event; }\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate title: HTMLElement;\n\tprivate dragRegion: HTMLElement;\n\tprivate windowControls: HTMLElement;\n\tprivate maxRestoreControl: HTMLElement;\n\tprivate appIcon: HTMLElement;\n\tprivate menubarPart: MenubarControl;\n\tprivate menubar: HTMLElement;\n\tprivate resizer: HTMLElement;\n\tprivate lastLayoutDimensions: Dimension;\n\n\tprivate pendingTitle: string;\n\tprivate representedFileName: string;\n\n\tprivate isInactive: boolean;\n\n\tprivate properties: ITitleProperties;\n\tprivate activeEditorListeners: IDisposable[];\n\n\tprivate titleUpdater: RunOnceScheduler = this._register(new RunOnceScheduler(() => this.doUpdateTitle(), 0));\n\n\tconstructor(\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWindowsService private readonly windowsService: IWindowsService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(Parts.TITLEBAR_PART, { hasTitle: false }, themeService, storageService, layoutService);\n\n\t\tthis.properties = { isPure: true, isAdmin: false };\n\t\tthis.activeEditorListeners = [];\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.windowService.onDidChangeFocus(focused => focused ? this.onFocus() : this.onBlur()));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.onConfigurationChanged(e)));\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.onActiveEditorChange()));\n\t\tthis._register(this.contextService.onDidChangeWorkspaceFolders(() => this.titleUpdater.schedule()));\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.titleUpdater.schedule()));\n\t\tthis._register(this.contextService.onDidChangeWorkspaceName(() => this.titleUpdater.schedule()));\n\t\tthis._register(this.labelService.onDidChangeFormatters(() => this.titleUpdater.schedule()));\n\t}\n\n\tprivate onBlur(): void {\n\t\tthis.isInactive = true;\n\t\tthis.updateStyles();\n\t}\n\n\tprivate onFocus(): void {\n\t\tthis.isInactive = false;\n\t\tthis.updateStyles();\n\t}\n\n\tprivate onConfigurationChanged(event: IConfigurationChangeEvent): void {\n\t\tif (event.affectsConfiguration('window.title')) {\n\t\t\tthis.titleUpdater.schedule();\n\t\t}\n\n\t\tif (event.affectsConfiguration('window.doubleClickIconToClose')) {\n\t\t\tif (this.appIcon) {\n\t\t\t\tthis.onUpdateAppIconDragBehavior();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onMenubarVisibilityChanged(visible: boolean) {\n\t\tif (isWindows || isLinux) {\n\t\t\t// Hide title when toggling menu bar\n\t\t\tif (this.configurationService.getValue<MenuBarVisibility>('window.menuBarVisibility') === 'toggle' && visible) {\n\t\t\t\t// Hack to fix issue #52522 with layered webkit-app-region elements appearing under cursor\n\t\t\t\thide(this.dragRegion);\n\t\t\t\tsetTimeout(() => show(this.dragRegion), 50);\n\t\t\t}\n\n\t\t\tthis.adjustTitleMarginToCenter();\n\n\t\t\tthis._onMenubarVisibilityChange.fire(visible);\n\t\t}\n\t}\n\n\tprivate onMenubarFocusChanged(focused: boolean) {\n\t\tif (isWindows || isLinux) {\n\t\t\tif (focused) {\n\t\t\t\thide(this.dragRegion);\n\t\t\t} else {\n\t\t\t\tshow(this.dragRegion);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onActiveEditorChange(): void {\n\n\t\t// Dispose old listeners\n\t\tdispose(this.activeEditorListeners);\n\t\tthis.activeEditorListeners = [];\n\n\t\t// Calculate New Window Title\n\t\tthis.titleUpdater.schedule();\n\n\t\t// Apply listener for dirty and label changes\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tif (activeEditor instanceof EditorInput) {\n\t\t\tthis.activeEditorListeners.push(activeEditor.onDidChangeDirty(() => this.titleUpdater.schedule()));\n\t\t\tthis.activeEditorListeners.push(activeEditor.onDidChangeLabel(() => this.titleUpdater.schedule()));\n\t\t}\n\n\t\t// Represented File Name\n\t\tthis.updateRepresentedFilename();\n\t}\n\n\tprivate updateRepresentedFilename(): void {\n\t\tconst file = toResource(this.editorService.activeEditor, { supportSideBySide: true, filter: 'file' });\n\t\tconst path = file ? file.fsPath : '';\n\n\t\t// Apply to window\n\t\tthis.windowService.setRepresentedFilename(path);\n\n\t\t// Keep for context menu\n\t\tthis.representedFileName = path;\n\t}\n\n\tprivate doUpdateTitle(): void {\n\t\tconst title = this.getWindowTitle();\n\n\t\t// Always set the native window title to identify us properly to the OS\n\t\tlet nativeTitle = title;\n\t\tif (!trim(nativeTitle)) {\n\t\t\tnativeTitle = this.environmentService.appNameLong;\n\t\t}\n\t\twindow.document.title = nativeTitle;\n\n\t\t// Apply custom title if we can\n\t\tif (this.title) {\n\t\t\tthis.title.innerText = title;\n\t\t} else {\n\t\t\tthis.pendingTitle = title;\n\t\t}\n\n\t\tif ((isWindows || isLinux) && this.title) {\n\t\t\tif (this.lastLayoutDimensions) {\n\t\t\t\tthis.updateLayout(this.lastLayoutDimensions);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getWindowTitle(): string {\n\t\tlet title = this.doGetWindowTitle();\n\n\t\tif (this.properties.isAdmin) {\n\t\t\ttitle = `${title || this.environmentService.appNameLong} ${TitlebarPart.NLS_USER_IS_ADMIN}`;\n\t\t}\n\n\t\tif (!this.properties.isPure) {\n\t\t\ttitle = `${title || this.environmentService.appNameLong} ${TitlebarPart.NLS_UNSUPPORTED}`;\n\t\t}\n\n\t\tif (this.environmentService.isExtensionDevelopment) {\n\t\t\ttitle = `${TitlebarPart.NLS_EXTENSION_HOST} - ${title || this.environmentService.appNameLong}`;\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tupdateProperties(properties: ITitleProperties): void {\n\t\tconst isAdmin = typeof properties.isAdmin === 'boolean' ? properties.isAdmin : this.properties.isAdmin;\n\t\tconst isPure = typeof properties.isPure === 'boolean' ? properties.isPure : this.properties.isPure;\n\n\t\tif (isAdmin !== this.properties.isAdmin || isPure !== this.properties.isPure) {\n\t\t\tthis.properties.isAdmin = isAdmin;\n\t\t\tthis.properties.isPure = isPure;\n\n\t\t\tthis.titleUpdater.schedule();\n\t\t}\n\t}\n\n\t/**\n\t * Possible template values:\n\t *\n\t * {activeEditorLong}: e.g. /Users/Development/myFolder/myFileFolder/myFile.txt\n\t * {activeEditorMedium}: e.g. myFolder/myFileFolder/myFile.txt\n\t * {activeEditorShort}: e.g. myFile.txt\n\t * {activeFolderLong}: e.g. /Users/Development/myFolder/myFileFolder\n\t * {activeFolderMedium}: e.g. myFolder/myFileFolder\n\t * {activeFolderShort}: e.g. myFileFolder\n\t * {rootName}: e.g. myFolder1, myFolder2, myFolder3\n\t * {rootPath}: e.g. /Users/Development\n\t * {folderName}: e.g. myFolder\n\t * {folderPath}: e.g. /Users/Development/myFolder\n\t * {appName}: e.g. VS Code\n\t * {dirty}: indicator\n\t * {separator}: conditional separator\n\t */\n\tprivate doGetWindowTitle(): string {\n\t\tconst editor = this.editorService.activeEditor;\n\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\t// Compute root\n\t\tlet root: URI | undefined;\n\t\tif (workspace.configuration) {\n\t\t\troot = workspace.configuration;\n\t\t} else if (workspace.folders.length) {\n\t\t\troot = workspace.folders[0].uri;\n\t\t}\n\n\t\t// Compute active editor folder\n\t\tconst editorResource = editor ? toResource(editor) : undefined;\n\t\tlet editorFolderResource = editorResource ? resources.dirname(editorResource) : undefined;\n\t\tif (editorFolderResource && editorFolderResource.path === '.') {\n\t\t\teditorFolderResource = undefined;\n\t\t}\n\n\t\t// Compute folder resource\n\t\t// Single Root Workspace: always the root single workspace in this case\n\t\t// Otherwise: root folder of the currently active file if any\n\t\tconst folder = this.contextService.getWorkbenchState() === WorkbenchState.FOLDER ? workspace.folders[0] : this.contextService.getWorkspaceFolder(toResource(editor, { supportSideBySide: true })!);\n\n\t\t// Variables\n\t\tconst activeEditorShort = editor ? editor.getTitle(Verbosity.SHORT) : '';\n\t\tconst activeEditorMedium = editor ? editor.getTitle(Verbosity.MEDIUM) : activeEditorShort;\n\t\tconst activeEditorLong = editor ? editor.getTitle(Verbosity.LONG) : activeEditorMedium;\n\t\tconst activeFolderShort = editorFolderResource ? resources.basename(editorFolderResource) : '';\n\t\tconst activeFolderMedium = editorFolderResource ? this.labelService.getUriLabel(editorFolderResource, { relative: true }) : '';\n\t\tconst activeFolderLong = editorFolderResource ? this.labelService.getUriLabel(editorFolderResource) : '';\n\t\tconst rootName = this.labelService.getWorkspaceLabel(workspace);\n\t\tconst rootPath = root ? this.labelService.getUriLabel(root) : '';\n\t\tconst folderName = folder ? folder.name : '';\n\t\tconst folderPath = folder ? this.labelService.getUriLabel(folder.uri) : '';\n\t\tconst dirty = editor && editor.isDirty() ? TitlebarPart.TITLE_DIRTY : '';\n\t\tconst appName = this.environmentService.appNameLong;\n\t\tconst separator = TitlebarPart.TITLE_SEPARATOR;\n\t\tconst titleTemplate = this.configurationService.getValue<string>('window.title');\n\n\t\treturn template(titleTemplate, {\n\t\t\tactiveEditorShort,\n\t\t\tactiveEditorLong,\n\t\t\tactiveEditorMedium,\n\t\t\tactiveFolderShort,\n\t\t\tactiveFolderMedium,\n\t\t\tactiveFolderLong,\n\t\t\trootName,\n\t\t\trootPath,\n\t\t\tfolderName,\n\t\t\tfolderPath,\n\t\t\tdirty,\n\t\t\tappName,\n\t\t\tseparator: { label: separator }\n\t\t});\n\t}\n\n\tcreateContentArea(parent: HTMLElement): HTMLElement {\n\t\tthis.element = parent;\n\n\t\t// Draggable region that we can manipulate for #52522\n\t\tthis.dragRegion = append(this.element, $('div.titlebar-drag-region'));\n\n\t\t// App Icon (Windows/Linux)\n\t\tif (!(isNative && isMacintosh)) {\n\t\t\tthis.appIcon = append(this.element, $('div.window-appicon'));\n\t\t\tthis.onUpdateAppIconDragBehavior();\n\n\t\t\tthis._register(addDisposableListener(this.appIcon, EventType.DBLCLICK, (e => {\n\t\t\t\tthis.windowService.closeWindow();\n\t\t\t})));\n\t\t}\n\n\t\t// Menubar: the menubar part which is responsible for populating both the custom and native menubars\n\t\tthis.menubarPart = this.instantiationService.createInstance(MenubarControl);\n\t\tthis.menubar = append(this.element, $('div.menubar'));\n\t\tthis.menubar.setAttribute('role', 'menubar');\n\n\t\tthis.menubarPart.create(this.menubar);\n\n\t\t// if (!(isNative && isMacintosh)) {\n\t\t\tthis._register(this.menubarPart.onVisibilityChange(e => this.onMenubarVisibilityChanged(e)));\n\t\t\tthis._register(this.menubarPart.onFocusStateChange(e => this.onMenubarFocusChanged(e)));\n\t\t// }\n\n\t\t// Title\n\t\tthis.title = append(this.element, $('div.window-title'));\n\t\tif (this.pendingTitle) {\n\t\t\tthis.title.innerText = this.pendingTitle;\n\t\t} else {\n\t\t\tthis.titleUpdater.schedule();\n\t\t}\n\n\t\t// Maximize/Restore on doubleclick\n\t\tif (isMacintosh) {\n\t\t\tthis._register(addDisposableListener(this.element, EventType.DBLCLICK, e => {\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\tthis.onTitleDoubleclick();\n\t\t\t}));\n\t\t}\n\n\t\t// Context menu on title\n\t\t[EventType.CONTEXT_MENU, EventType.MOUSE_DOWN].forEach(event => {\n\t\t\tthis._register(addDisposableListener(this.title, event, e => {\n\t\t\t\tif (e.type === EventType.CONTEXT_MENU || e.metaKey) {\n\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\tthis.onContextMenu(e);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\t// Window Controls (Windows/Linux)\n\t\tif (!isMacintosh) {\n\t\t\tthis.windowControls = append(this.element, $('div.window-controls-container'));\n\n\n\t\t\t// Minimize\n\t\t\tconst minimizeIconContainer = append(this.windowControls, $('div.window-icon-bg'));\n\t\t\tconst minimizeIcon = append(minimizeIconContainer, $('div.window-icon'));\n\t\t\taddClass(minimizeIcon, 'window-minimize');\n\t\t\tthis._register(addDisposableListener(minimizeIcon, EventType.CLICK, e => {\n\t\t\t\tthis.windowService.minimizeWindow();\n\t\t\t}));\n\n\t\t\t// Restore\n\t\t\tconst restoreIconContainer = append(this.windowControls, $('div.window-icon-bg'));\n\t\t\tthis.maxRestoreControl = append(restoreIconContainer, $('div.window-icon'));\n\t\t\taddClass(this.maxRestoreControl, 'window-max-restore');\n\t\t\tthis._register(addDisposableListener(this.maxRestoreControl, EventType.CLICK, e => {\n\t\t\t\tthis.windowService.isMaximized().then((maximized) => {\n\t\t\t\t\tif (maximized) {\n\t\t\t\t\t\treturn this.windowService.unmaximizeWindow();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.windowService.maximizeWindow();\n\t\t\t\t});\n\t\t\t}));\n\n\t\t\t// Close\n\t\t\tconst closeIconContainer = append(this.windowControls, $('div.window-icon-bg'));\n\t\t\taddClass(closeIconContainer, 'window-close-bg');\n\t\t\tconst closeIcon = append(closeIconContainer, $('div.window-icon'));\n\t\t\taddClass(closeIcon, 'window-close');\n\t\t\tthis._register(addDisposableListener(closeIcon, EventType.CLICK, e => {\n\t\t\t\tthis.windowService.closeWindow();\n\t\t\t}));\n\n\t\t\t// Resizer\n\t\t\tthis.resizer = append(this.element, $('div.resizer'));\n\n\t\t\tconst isMaximized = this.windowService.getConfiguration().maximized ? true : false;\n\t\t\tthis.onDidChangeMaximized(isMaximized);\n\t\t\tthis.windowService.onDidChangeMaximize(this.onDidChangeMaximized, this);\n\t\t}\n\n\t\t// Since the title area is used to drag the window, we do not want to steal focus from the\n\t\t// currently active element. So we restore focus after a timeout back to where it was.\n\t\tthis._register(addDisposableListener(this.element, EventType.MOUSE_DOWN, e => {\n\t\t\tif (e.target && isAncestor(e.target as HTMLElement, this.menubar)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst active = document.activeElement;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (active instanceof HTMLElement) {\n\t\t\t\t\tactive.focus();\n\t\t\t\t}\n\t\t\t}, 0 /* need a timeout because we are in capture phase */);\n\t\t}, true /* use capture to know the currently active element properly */));\n\n\t\tthis.updateStyles();\n\n\t\treturn this.element;\n\t}\n\n\tprivate onDidChangeMaximized(maximized: boolean) {\n\t\tif (this.maxRestoreControl) {\n\t\t\tif (maximized) {\n\t\t\t\tremoveClass(this.maxRestoreControl, 'window-maximize');\n\t\t\t\taddClass(this.maxRestoreControl, 'window-unmaximize');\n\t\t\t} else {\n\t\t\t\tremoveClass(this.maxRestoreControl, 'window-unmaximize');\n\t\t\t\taddClass(this.maxRestoreControl, 'window-maximize');\n\t\t\t}\n\t\t}\n\n\t\tif (this.resizer) {\n\t\t\tif (maximized) {\n\t\t\t\thide(this.resizer);\n\t\t\t} else {\n\t\t\t\tshow(this.resizer);\n\t\t\t}\n\t\t}\n\n\t\tthis.adjustTitleMarginToCenter();\n\t}\n\n\tupdateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\t// Part container\n\t\tif (this.element) {\n\t\t\tif (this.isInactive) {\n\t\t\t\taddClass(this.element, 'inactive');\n\t\t\t} else {\n\t\t\t\tremoveClass(this.element, 'inactive');\n\t\t\t}\n\n\t\t\tconst titleBackground = this.getColor(this.isInactive ? TITLE_BAR_INACTIVE_BACKGROUND : TITLE_BAR_ACTIVE_BACKGROUND);\n\t\t\tthis.element.style.backgroundColor = titleBackground;\n\t\t\tif (titleBackground && Color.fromHex(titleBackground).isLighter()) {\n\t\t\t\taddClass(this.element, 'light');\n\t\t\t} else {\n\t\t\t\tremoveClass(this.element, 'light');\n\t\t\t}\n\n\t\t\tconst titleForeground = this.getColor(this.isInactive ? TITLE_BAR_INACTIVE_FOREGROUND : TITLE_BAR_ACTIVE_FOREGROUND);\n\t\t\tthis.element.style.color = titleForeground;\n\n\t\t\tconst titleBorder = this.getColor(TITLE_BAR_BORDER);\n\t\t\tthis.element.style.borderBottom = titleBorder ? `1px solid ${titleBorder}` : null;\n\t\t}\n\t}\n\n\tprivate onTitleDoubleclick(): void {\n\t\tthis.windowService.onWindowTitleDoubleClick();\n\t}\n\n\tprivate onUpdateAppIconDragBehavior() {\n\t\tconst setting = this.configurationService.getValue('window.doubleClickIconToClose');\n\t\tif (setting) {\n\t\t\tthis.appIcon.style['-webkit-app-region'] = 'no-drag';\n\t\t} else {\n\t\t\tthis.appIcon.style['-webkit-app-region'] = 'drag';\n\t\t}\n\t}\n\n\tprivate onContextMenu(e: MouseEvent): void {\n\n\t\t// Find target anchor\n\t\tconst event = new StandardMouseEvent(e);\n\t\tconst anchor = { x: event.posx, y: event.posy };\n\n\t\t// Show menu\n\t\tconst actions = this.getContextMenuActions();\n\t\tif (actions.length) {\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tonHide: () => actions.forEach(a => a.dispose())\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getContextMenuActions(): IAction[] {\n\t\tconst actions: IAction[] = [];\n\n\t\tif (this.representedFileName) {\n\t\t\tconst segments = this.representedFileName.split(posix.sep);\n\t\t\tfor (let i = segments.length; i > 0; i--) {\n\t\t\t\tconst isFile = (i === segments.length);\n\n\t\t\t\tlet pathOffset = i;\n\t\t\t\tif (!isFile) {\n\t\t\t\t\tpathOffset++; // for segments which are not the file name we want to open the folder\n\t\t\t\t}\n\n\t\t\t\tconst path = segments.slice(0, pathOffset).join(posix.sep);\n\n\t\t\t\tlet label: string;\n\t\t\t\tif (!isFile) {\n\t\t\t\t\tlabel = getBaseLabel(dirname(path));\n\t\t\t\t} else {\n\t\t\t\t\tlabel = getBaseLabel(path);\n\t\t\t\t}\n\n\t\t\t\tactions.push(new ShowItemInFolderAction(path, label || posix.sep, this.windowsService));\n\t\t\t}\n\t\t}\n\n\t\treturn actions;\n\t}\n\n\tprivate adjustTitleMarginToCenter(): void {\n\t\tif (!(isNative && isMacintosh) &&\n\t\t\t(this.appIcon.clientWidth + this.menubar.clientWidth + 10 > (this.element.clientWidth - this.title.clientWidth) / 2 ||\n\t\t\t\tthis.element.clientWidth - this.windowControls.clientWidth - 10 < (this.element.clientWidth + this.title.clientWidth) / 2)) {\n\t\t\tthis.title.style.position = null;\n\t\t\tthis.title.style.left = null;\n\t\t\tthis.title.style.transform = null;\n\t\t} else {\n\t\t\tthis.title.style.position = 'absolute';\n\t\t\tthis.title.style.left = '50%';\n\t\t\tthis.title.style.transform = 'translate(-50%, 0)';\n\t\t}\n\t}\n\n\tupdateLayout(dimension: Dimension): void {\n\t\tthis.lastLayoutDimensions = dimension;\n\n\t\tif (getTitleBarStyle(this.configurationService, this.environmentService) === 'custom') {\n\t\t\t// Only prevent zooming behavior on macOS or when the menubar is not visible\n\t\t\tif ((isNative && isMacintosh) || this.configurationService.getValue<MenuBarVisibility>('window.menuBarVisibility') === 'hidden') {\n\t\t\t\tthis.title.style.zoom = `${1 / getZoomFactor()}`;\n\t\t\t\tif (isWindows || isLinux) {\n\t\t\t\t\tthis.appIcon.style.zoom = `${1 / getZoomFactor()}`;\n\t\t\t\t\tthis.windowControls.style.zoom = `${1 / getZoomFactor()}`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.title.style.zoom = null;\n\t\t\t\tif (isWindows || isLinux) {\n\t\t\t\t\tthis.appIcon.style.zoom = null;\n\t\t\t\t\tthis.windowControls.style.zoom = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trunAtThisOrScheduleAtNextAnimationFrame(() => this.adjustTitleMarginToCenter());\n\n\t\t\tif (this.menubarPart) {\n\t\t\t\tconst menubarDimension = new Dimension(0, dimension.height);\n\t\t\t\tthis.menubarPart.layout(menubarDimension);\n\t\t\t}\n\t\t}\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tthis.updateLayout(new Dimension(width, height));\n\n\t\tsuper.layoutContents(width, height);\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.TITLEBAR_PART\n\t\t};\n\t}\n}\n\nclass ShowItemInFolderAction extends Action {\n\n\tconstructor(private path: string, label: string, private windowsService: IWindowsService) {\n\t\tsuper('showItemInFolder.action.id', label);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.windowsService.showItemInFolder(URI.file(this.path));\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst titlebarActiveFg = theme.getColor(TITLE_BAR_ACTIVE_FOREGROUND);\n\tif (titlebarActiveFg) {\n\t\tcollector.addRule(`\n\t\t.monaco-workbench .part.titlebar > .window-controls-container .window-icon {\n\t\t\tbackground-color: ${titlebarActiveFg};\n\t\t}\n\t\t`);\n\t}\n\n\tconst titlebarInactiveFg = theme.getColor(TITLE_BAR_INACTIVE_FOREGROUND);\n\tif (titlebarInactiveFg) {\n\t\tcollector.addRule(`\n\t\t.monaco-workbench .part.titlebar.inactive > .window-controls-container .window-icon {\n\t\t\t\tbackground-color: ${titlebarInactiveFg};\n\t\t\t}\n\t\t`);\n\t}\n});\n\nregisterSingleton(ITitleService, TitlebarPart);"]}]}