{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/sidebar/sidebarPart.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/sidebar/sidebarPart.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/sidebarpart\");\nvar nls = require(\"vs/nls\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar compositePart_1 = require(\"vs/workbench/browser/parts/compositePart\");\nvar viewlet_1 = require(\"vs/workbench/browser/viewlet\");\nvar actions_2 = require(\"vs/workbench/common/actions\");\nvar actions_3 = require(\"vs/platform/actions/common/actions\");\nvar viewlet_2 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar viewlet_3 = require(\"vs/workbench/common/viewlet\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar event_1 = require(\"vs/base/common/event\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextview_1 = require(\"vs/base/browser/ui/contextview/contextview\");\nvar extensions_1 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar gridview_1 = require(\"vs/base/browser/ui/grid/gridview\");\nvar extensions_2 = require(\"vs/platform/instantiation/common/extensions\");\nvar SidebarPart = /** @class */ (function (_super) {\n    tslib_1.__extends(SidebarPart, _super);\n    function SidebarPart(notificationService, storageService, telemetryService, contextMenuService, layoutService, keybindingService, instantiationService, themeService, contextKeyService, extensionService) {\n        var _this = _super.call(this, notificationService, storageService, telemetryService, contextMenuService, layoutService, keybindingService, instantiationService, themeService, platform_1.Registry.as(viewlet_1.Extensions.Viewlets), SidebarPart.activeViewletSettingsKey, platform_1.Registry.as(viewlet_1.Extensions.Viewlets).getDefaultViewletId(), 'sideBar', 'viewlet', theme_1.SIDE_BAR_TITLE_FOREGROUND, layoutService_1.Parts.SIDEBAR_PART, { hasTitle: true, borderWidth: function () { return (_this.getColor(theme_1.SIDE_BAR_BORDER) || _this.getColor(colorRegistry_1.contrastBorder)) ? 1 : 0; } }) || this;\n        _this.extensionService = extensionService;\n        //#region IView\n        _this.minimumWidth = 170;\n        _this.maximumWidth = Number.POSITIVE_INFINITY;\n        _this.minimumHeight = 0;\n        _this.maximumHeight = Number.POSITIVE_INFINITY;\n        _this.snapSize = 50;\n        _this.priority = gridview_1.LayoutPriority.Low;\n        _this._onDidViewletDeregister = _this._register(new event_1.Emitter());\n        _this.viewletRegistry = platform_1.Registry.as(viewlet_1.Extensions.Viewlets);\n        _this.sideBarFocusContextKey = viewlet_3.SidebarFocusContext.bindTo(contextKeyService);\n        _this.activeViewletContextKey = viewlet_3.ActiveViewletContext.bindTo(contextKeyService);\n        _this.registerListeners();\n        return _this;\n    }\n    Object.defineProperty(SidebarPart.prototype, \"onDidViewletRegister\", {\n        //#endregion\n        get: function () { return this.viewletRegistry.onDidRegister; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SidebarPart.prototype, \"onDidViewletDeregister\", {\n        get: function () { return this._onDidViewletDeregister.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SidebarPart.prototype, \"onDidViewletOpen\", {\n        get: function () { return event_1.Event.map(this.onDidCompositeOpen.event, function (compositeEvent) { return compositeEvent.composite; }); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SidebarPart.prototype, \"onDidViewletClose\", {\n        get: function () { return this.onDidCompositeClose.event; },\n        enumerable: true,\n        configurable: true\n    });\n    SidebarPart.prototype.registerListeners = function () {\n        var _this = this;\n        // Viewlet open\n        this._register(this.onDidViewletOpen(function (viewlet) {\n            _this.activeViewletContextKey.set(viewlet.getId());\n        }));\n        // Viewlet close\n        this._register(this.onDidViewletClose(function (viewlet) {\n            if (_this.activeViewletContextKey.get() === viewlet.getId()) {\n                _this.activeViewletContextKey.reset();\n            }\n        }));\n        // Viewlet deregister\n        this._register(this.registry.onDidDeregister(function (viewletDescriptor) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.getActiveViewlet().getId() === viewletDescriptor.id)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.openViewlet(this.getDefaultViewletId())];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        this.removeComposite(viewletDescriptor.id);\n                        this._onDidViewletDeregister.fire(viewletDescriptor);\n                        return [2 /*return*/];\n                }\n            });\n        }); }));\n    };\n    SidebarPart.prototype.create = function (parent) {\n        var _this = this;\n        this.element = parent;\n        _super.prototype.create.call(this, parent);\n        var focusTracker = this._register(dom_1.trackFocus(parent));\n        this._register(focusTracker.onDidFocus(function () { return _this.sideBarFocusContextKey.set(true); }));\n        this._register(focusTracker.onDidBlur(function () { return _this.sideBarFocusContextKey.set(false); }));\n    };\n    SidebarPart.prototype.createTitleArea = function (parent) {\n        var _this = this;\n        var titleArea = _super.prototype.createTitleArea.call(this, parent);\n        this._register(dom_1.addDisposableListener(titleArea, dom_1.EventType.CONTEXT_MENU, function (e) {\n            _this.onTitleAreaContextMenu(new mouseEvent_1.StandardMouseEvent(e));\n        }));\n        return titleArea;\n    };\n    SidebarPart.prototype.updateStyles = function () {\n        _super.prototype.updateStyles.call(this);\n        // Part container\n        var container = this.getContainer();\n        container.style.backgroundColor = this.getColor(theme_1.SIDE_BAR_BACKGROUND);\n        container.style.color = this.getColor(theme_1.SIDE_BAR_FOREGROUND);\n        var borderColor = this.getColor(theme_1.SIDE_BAR_BORDER) || this.getColor(colorRegistry_1.contrastBorder);\n        var isPositionLeft = this.layoutService.getSideBarPosition() === layoutService_1.Position.LEFT;\n        container.style.borderRightWidth = borderColor && isPositionLeft ? '1px' : null;\n        container.style.borderRightStyle = borderColor && isPositionLeft ? 'solid' : null;\n        container.style.borderRightColor = isPositionLeft ? borderColor : null;\n        container.style.borderLeftWidth = borderColor && !isPositionLeft ? '1px' : null;\n        container.style.borderLeftStyle = borderColor && !isPositionLeft ? 'solid' : null;\n        container.style.borderLeftColor = !isPositionLeft ? borderColor : null;\n    };\n    SidebarPart.prototype.layout = function (width, height) {\n        if (!this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n            return;\n        }\n        _super.prototype.layout.call(this, width, height);\n    };\n    // Viewlet service\n    SidebarPart.prototype.getActiveViewlet = function () {\n        return this.getActiveComposite();\n    };\n    SidebarPart.prototype.getLastActiveViewletId = function () {\n        return this.getLastActiveCompositetId();\n    };\n    SidebarPart.prototype.hideActiveViewlet = function () {\n        this.hideActiveComposite();\n    };\n    SidebarPart.prototype.openViewlet = function (id, focus) {\n        var _this = this;\n        if (typeof id === 'string' && this.getViewlet(id)) {\n            return Promise.resolve(this.doOpenViewlet(id, focus));\n        }\n        return this.extensionService.whenInstalledExtensionsRegistered()\n            .then(function () {\n            if (typeof id === 'string' && _this.getViewlet(id)) {\n                return _this.doOpenViewlet(id, focus);\n            }\n            return null;\n        });\n    };\n    SidebarPart.prototype.getViewlets = function () {\n        return this.viewletRegistry.getViewlets()\n            .sort(function (v1, v2) { return v1.order - v2.order; });\n    };\n    SidebarPart.prototype.getDefaultViewletId = function () {\n        return this.viewletRegistry.getDefaultViewletId();\n    };\n    SidebarPart.prototype.getViewlet = function (id) {\n        return this.getViewlets().filter(function (viewlet) { return viewlet.id === id; })[0];\n    };\n    SidebarPart.prototype.doOpenViewlet = function (id, focus) {\n        if (this.blockOpeningViewlet) {\n            return null; // Workaround against a potential race condition\n        }\n        // First check if sidebar is hidden and show if so\n        if (!this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n            try {\n                this.blockOpeningViewlet = true;\n                this.layoutService.setSideBarHidden(false);\n            }\n            finally {\n                this.blockOpeningViewlet = false;\n            }\n        }\n        return this.openComposite(id, focus);\n    };\n    SidebarPart.prototype.getTitleAreaDropDownAnchorAlignment = function () {\n        return this.layoutService.getSideBarPosition() === layoutService_1.Position.LEFT ? contextview_1.AnchorAlignment.LEFT : contextview_1.AnchorAlignment.RIGHT;\n    };\n    SidebarPart.prototype.onTitleAreaContextMenu = function (event) {\n        var _this = this;\n        var activeViewlet = this.getActiveViewlet();\n        if (activeViewlet) {\n            var contextMenuActions_1 = activeViewlet ? activeViewlet.getContextMenuActions() : [];\n            if (contextMenuActions_1.length) {\n                var anchor_1 = { x: event.posx, y: event.posy };\n                this.contextMenuService.showContextMenu({\n                    getAnchor: function () { return anchor_1; },\n                    getActions: function () { return contextMenuActions_1; },\n                    getActionItem: function (action) { return _this.actionItemProvider(action); },\n                    actionRunner: activeViewlet.getActionRunner()\n                });\n            }\n        }\n    };\n    SidebarPart.prototype.toJSON = function () {\n        return {\n            type: layoutService_1.Parts.SIDEBAR_PART\n        };\n    };\n    SidebarPart.activeViewletSettingsKey = 'workbench.sidebar.activeviewletid';\n    SidebarPart = tslib_1.__decorate([\n        tslib_1.__param(0, notification_1.INotificationService),\n        tslib_1.__param(1, storage_1.IStorageService),\n        tslib_1.__param(2, telemetry_1.ITelemetryService),\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(5, keybinding_1.IKeybindingService),\n        tslib_1.__param(6, instantiation_1.IInstantiationService),\n        tslib_1.__param(7, themeService_1.IThemeService),\n        tslib_1.__param(8, contextkey_1.IContextKeyService),\n        tslib_1.__param(9, extensions_1.IExtensionService)\n    ], SidebarPart);\n    return SidebarPart;\n}(compositePart_1.CompositePart));\nexports.SidebarPart = SidebarPart;\nvar FocusSideBarAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusSideBarAction, _super);\n    function FocusSideBarAction(id, label, viewletService, layoutService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.layoutService = layoutService;\n        return _this;\n    }\n    FocusSideBarAction.prototype.run = function () {\n        // Show side bar\n        if (!this.layoutService.isVisible(layoutService_1.Parts.SIDEBAR_PART)) {\n            return Promise.resolve(this.layoutService.setSideBarHidden(false));\n        }\n        // Focus into active viewlet\n        var viewlet = this.viewletService.getActiveViewlet();\n        if (viewlet) {\n            viewlet.focus();\n        }\n        return Promise.resolve(true);\n    };\n    FocusSideBarAction.ID = 'workbench.action.focusSideBar';\n    FocusSideBarAction.LABEL = nls.localize('focusSideBar', \"Focus into Side Bar\");\n    FocusSideBarAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService),\n        tslib_1.__param(3, layoutService_1.IWorkbenchLayoutService)\n    ], FocusSideBarAction);\n    return FocusSideBarAction;\n}(actions_1.Action));\nvar registry = platform_1.Registry.as(actions_2.Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new actions_3.SyncActionDescriptor(FocusSideBarAction, FocusSideBarAction.ID, FocusSideBarAction.LABEL, {\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_0\n}), 'View: Focus into Side Bar', nls.localize('viewCategory', \"View\"));\nextensions_2.registerSingleton(viewlet_2.IViewletService, SidebarPart);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/sidebar/sidebarPart.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/sidebar/sidebarPart.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,sCAAoC;AACpC,4BAA8B;AAC9B,iEAAgE;AAChE,kDAAgD;AAChD,0EAAyE;AACzE,wDAA4H;AAC5H,uDAAuG;AACvG,8DAA0E;AAC1E,yEAAgF;AAChF,oFAAiI;AACjI,uDAAkG;AAClG,8DAAqE;AACrE,2EAAkF;AAClF,oEAA2E;AAC3E,uEAA8E;AAC9E,oDAA0D;AAC1D,gFAA0G;AAC1G,8CAAsD;AACtD,sEAAsE;AACtE,wEAAwE;AACxE,mDAAiI;AACjI,6EAAoF;AACpF,2CAAmF;AACnF,yDAAgE;AAChE,uEAA2F;AAC3F,0EAA6E;AAC7E,iFAAuF;AACvF,6DAAkE;AAClE,0EAAgF;AAEhF;IAAiC,uCAAsB;IA+BtD,qBACuB,mBAAyC,EAC9C,cAA+B,EAC7B,gBAAmC,EACjC,kBAAuC,EACnC,aAAsC,EAC3C,iBAAqC,EAClC,oBAA2C,EACnD,YAA2B,EACtB,iBAAqC,EACrB,gBAAmC;QAVxE,YAYC,kBACC,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,kBAAkB,EAClB,aAAa,EACb,iBAAiB,EACjB,oBAAoB,EACpB,YAAY,EACZ,mBAAQ,CAAC,EAAE,CAAkB,oBAAiB,CAAC,QAAQ,CAAC,EACxD,WAAW,CAAC,wBAAwB,EACpC,mBAAQ,CAAC,EAAE,CAAkB,oBAAiB,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,EAC9E,SAAS,EACT,SAAS,EACT,iCAAyB,EACzB,qBAAK,CAAC,YAAY,EAClB,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,cAAM,OAAA,CAAC,KAAI,CAAC,QAAQ,CAAC,uBAAe,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,8BAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAzE,CAAyE,EAAE,CAChH,SAQD;QA3BoC,sBAAgB,GAAhB,gBAAgB,CAAmB;QAnCxE,eAAe;QAEN,kBAAY,GAAW,GAAG,CAAC;QAC3B,kBAAY,GAAW,MAAM,CAAC,iBAAiB,CAAC;QAChD,mBAAa,GAAW,CAAC,CAAC;QAC1B,mBAAa,GAAW,MAAM,CAAC,iBAAiB,CAAC;QAEjD,cAAQ,GAAW,EAAE,CAAC;QACtB,cAAQ,GAAmB,yBAAc,CAAC,GAAG,CAAC;QAM/C,6BAAuB,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAqB,CAAC,CAAC;QA0ClF,KAAI,CAAC,eAAe,GAAG,mBAAQ,CAAC,EAAE,CAAkB,oBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEhF,KAAI,CAAC,sBAAsB,GAAG,6BAAmB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC5E,KAAI,CAAC,uBAAuB,GAAG,8BAAoB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAE9E,KAAI,CAAC,iBAAiB,EAAE,CAAC;;IAC1B,CAAC;IAlDD,sBAAI,6CAAoB;QAFxB,YAAY;aAEZ,cAAuD,OAAiC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;;;OAAA;IAG7H,sBAAI,+CAAsB;aAA1B,cAAyD,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAErG,sBAAI,yCAAgB;aAApB,cAA0C,OAAO,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,UAAA,cAAc,IAAI,OAAU,cAAc,CAAC,SAAS,EAAlC,CAAkC,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAClJ,sBAAI,0CAAiB;aAArB,cAA2C,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAwB,CAAC,CAAC,CAAC;;;OAAA;IA8C9F,uCAAiB,GAAzB;QAAA,iBAuBC;QArBA,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAA,OAAO;YAC3C,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC;QAEJ,gBAAgB;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAA,OAAO;YAC5C,IAAI,KAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,KAAK,OAAO,CAAC,KAAK,EAAE,EAAE;gBAC3D,KAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,CAAC;aACrC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,qBAAqB;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAO,iBAAoC;;;;6BACnF,CAAA,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,iBAAiB,CAAC,EAAE,CAAA,EAAxD,wBAAwD;wBAC3D,qBAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAA;;wBAAlD,SAAkD,CAAC;;;wBAGpD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;wBAC3C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;;;;aACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAM,GAAN,UAAO,MAAmB;QAA1B,iBAQC;QAPA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,iBAAM,MAAM,YAAC,MAAM,CAAC,CAAC;QAErB,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAtC,CAAsC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,qCAAe,GAAf,UAAgB,MAAmB;QAAnC,iBAQC;QAPA,IAAM,SAAS,GAAG,iBAAM,eAAe,YAAC,MAAM,CAAC,CAAC;QAEhD,IAAI,CAAC,SAAS,CAAC,2BAAqB,CAAC,SAAS,EAAE,eAAS,CAAC,YAAY,EAAE,UAAA,CAAC;YACxE,KAAI,CAAC,sBAAsB,CAAC,IAAI,+BAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,kCAAY,GAAZ;QACC,iBAAM,YAAY,WAAE,CAAC;QAErB,iBAAiB;QACjB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtC,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,2BAAmB,CAAC,CAAC;QACrE,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,2BAAmB,CAAC,CAAC;QAE3D,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAe,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,8BAAc,CAAC,CAAC;QACpF,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,KAAK,wBAAe,CAAC,IAAI,CAAC;QACxF,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,WAAW,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAChF,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,WAAW,IAAI,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QAClF,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;QACvE,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAChF,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,WAAW,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;QAClF,SAAS,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;IACxE,CAAC;IAED,4BAAM,GAAN,UAAO,KAAa,EAAE,MAAc;QACnC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAK,CAAC,YAAY,CAAC,EAAE;YACtD,OAAO;SACP;QAED,iBAAM,MAAM,YAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7B,CAAC;IAED,kBAAkB;IAElB,sCAAgB,GAAhB;QACC,OAAiB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5C,CAAC;IAED,4CAAsB,GAAtB;QACC,OAAO,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACzC,CAAC;IAED,uCAAiB,GAAjB;QACC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC5B,CAAC;IAED,iCAAW,GAAX,UAAY,EAAsB,EAAE,KAAe;QAAnD,iBAaC;QAZA,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YAClD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,EAAE;aAC9D,IAAI,CAAC;YACL,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;gBAClD,OAAO,KAAI,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;aACrC;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAW,GAAX;QACC,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;aACvC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE,IAAK,OAAA,EAAE,CAAC,KAAM,GAAG,EAAE,CAAC,KAAM,EAArB,CAAqB,CAAC,CAAC;IAC3C,CAAC;IAED,yCAAmB,GAAnB;QACC,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;IACnD,CAAC;IAED,gCAAU,GAAV,UAAW,EAAU;QACpB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,EAAE,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAEO,mCAAa,GAArB,UAAsB,EAAU,EAAE,KAAe;QAChD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC7B,OAAO,IAAI,CAAC,CAAC,gDAAgD;SAC7D;QAED,kDAAkD;QAClD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAK,CAAC,YAAY,CAAC,EAAE;YACtD,IAAI;gBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAC3C;oBAAS;gBACT,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;aACjC;SACD;QAED,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,KAAK,CAAY,CAAC;IACjD,CAAC;IAES,yDAAmC,GAA7C;QACC,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,KAAK,wBAAe,CAAC,IAAI,CAAC,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,CAAC,CAAC,6BAAe,CAAC,KAAK,CAAC;IACxH,CAAC;IAEO,4CAAsB,GAA9B,UAA+B,KAAyB;QAAxD,iBAcC;QAbA,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAa,CAAC;QACzD,IAAI,aAAa,EAAE;YAClB,IAAM,oBAAkB,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACtF,IAAI,oBAAkB,CAAC,MAAM,EAAE;gBAC9B,IAAM,QAAM,GAA6B,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;gBAC1E,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC;oBACvC,SAAS,EAAE,cAAM,OAAA,QAAM,EAAN,CAAM;oBACvB,UAAU,EAAE,cAAM,OAAA,oBAAkB,EAAlB,CAAkB;oBACpC,aAAa,EAAE,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,MAAgB,CAAC,EAAzC,CAAyC;oBAClE,YAAY,EAAE,aAAa,CAAC,eAAe,EAAE;iBAC7C,CAAC,CAAC;aACH;SACD;IACF,CAAC;IAED,4BAAM,GAAN;QACC,OAAO;YACN,IAAI,EAAE,qBAAK,CAAC,YAAY;SACxB,CAAC;IACH,CAAC;IA9Ne,oCAAwB,GAAG,mCAAmC,CAAC;IAJnE,WAAW;QAgCrB,mBAAA,mCAAoB,CAAA;QACpB,mBAAA,yBAAe,CAAA;QACf,mBAAA,6BAAiB,CAAA;QACjB,mBAAA,iCAAmB,CAAA;QACnB,mBAAA,uCAAuB,CAAA;QACvB,mBAAA,+BAAkB,CAAA;QAClB,mBAAA,qCAAqB,CAAA;QACrB,mBAAA,4BAAa,CAAA;QACb,mBAAA,+BAAkB,CAAA;QAClB,mBAAA,8BAAiB,CAAA;OAzCP,WAAW,CAmOvB;IAAD,kBAAC;CAAA,AAnOD,CAAiC,6BAAa,GAmO7C;AAnOY,kCAAW;AAqOxB;IAAiC,8CAAM;IAKtC,4BACC,EAAU,EACV,KAAa,EACqB,cAA+B,EACvB,aAAsC;QAJjF,YAMC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAJkC,oBAAc,GAAd,cAAc,CAAiB;QACvB,mBAAa,GAAb,aAAa,CAAyB;;IAGjF,CAAC;IAED,gCAAG,GAAH;QAEC,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,qBAAK,CAAC,YAAY,CAAC,EAAE;YACtD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;SACnE;QAED,4BAA4B;QAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACrD,IAAI,OAAO,EAAE;YACZ,OAAO,CAAC,KAAK,EAAE,CAAC;SAChB;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IA1Be,qBAAE,GAAG,+BAA+B,CAAC;IACrC,wBAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;IAHvE,kBAAkB;QAQrB,mBAAA,yBAAe,CAAA;QACf,mBAAA,uCAAuB,CAAA;OATpB,kBAAkB,CA6BvB;IAAD,yBAAC;CAAA,AA7BD,CAAiC,gBAAM,GA6BtC;AAED,IAAM,QAAQ,GAAG,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC,CAAC;AAC1F,QAAQ,CAAC,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,EAAE,EAAE,kBAAkB,CAAC,KAAK,EAAE;IAC9H,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,kBAAO,CAAC,KAAK;CACvC,CAAC,EAAE,2BAA2B,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;AAEvE,8BAAiB,CAAC,yBAAe,EAAE,WAAW,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/sidebarpart';\nimport * as nls from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Action } from 'vs/base/common/actions';\nimport { CompositePart } from 'vs/workbench/browser/parts/compositePart';\nimport { Viewlet, ViewletRegistry, Extensions as ViewletExtensions, ViewletDescriptor } from 'vs/workbench/browser/viewlet';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IWorkbenchLayoutService, Parts, Position as SideBarPosition } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IViewlet, SidebarFocusContext, ActiveViewletContext } from 'vs/workbench/common/viewlet';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { IInstantiationService, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { SIDE_BAR_TITLE_FOREGROUND, SIDE_BAR_BACKGROUND, SIDE_BAR_FOREGROUND, SIDE_BAR_BORDER } from 'vs/workbench/common/theme';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { EventType, addDisposableListener, trackFocus } from 'vs/base/browser/dom';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { LayoutPriority } from 'vs/base/browser/ui/grid/gridview';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport class SidebarPart extends CompositePart<Viewlet> implements IViewletService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tstatic readonly activeViewletSettingsKey = 'workbench.sidebar.activeviewletid';\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 170;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 0;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\treadonly snapSize: number = 50;\n\treadonly priority: LayoutPriority = LayoutPriority.Low;\n\n\t//#endregion\n\n\tget onDidViewletRegister(): Event<ViewletDescriptor> { return <Event<ViewletDescriptor>>this.viewletRegistry.onDidRegister; }\n\n\tprivate _onDidViewletDeregister = this._register(new Emitter<ViewletDescriptor>());\n\tget onDidViewletDeregister(): Event<ViewletDescriptor> { return this._onDidViewletDeregister.event; }\n\n\tget onDidViewletOpen(): Event<IViewlet> { return Event.map(this.onDidCompositeOpen.event, compositeEvent => <IViewlet>compositeEvent.composite); }\n\tget onDidViewletClose(): Event<IViewlet> { return this.onDidCompositeClose.event as Event<IViewlet>; }\n\n\tprivate viewletRegistry: ViewletRegistry;\n\tprivate sideBarFocusContextKey: IContextKey<boolean>;\n\tprivate activeViewletContextKey: IContextKey<string>;\n\tprivate blockOpeningViewlet: boolean;\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\ttelemetryService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tRegistry.as<ViewletRegistry>(ViewletExtensions.Viewlets),\n\t\t\tSidebarPart.activeViewletSettingsKey,\n\t\t\tRegistry.as<ViewletRegistry>(ViewletExtensions.Viewlets).getDefaultViewletId(),\n\t\t\t'sideBar',\n\t\t\t'viewlet',\n\t\t\tSIDE_BAR_TITLE_FOREGROUND,\n\t\t\tParts.SIDEBAR_PART,\n\t\t\t{ hasTitle: true, borderWidth: () => (this.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder)) ? 1 : 0 }\n\t\t);\n\n\t\tthis.viewletRegistry = Registry.as<ViewletRegistry>(ViewletExtensions.Viewlets);\n\n\t\tthis.sideBarFocusContextKey = SidebarFocusContext.bindTo(contextKeyService);\n\t\tthis.activeViewletContextKey = ActiveViewletContext.bindTo(contextKeyService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Viewlet open\n\t\tthis._register(this.onDidViewletOpen(viewlet => {\n\t\t\tthis.activeViewletContextKey.set(viewlet.getId());\n\t\t}));\n\n\t\t// Viewlet close\n\t\tthis._register(this.onDidViewletClose(viewlet => {\n\t\t\tif (this.activeViewletContextKey.get() === viewlet.getId()) {\n\t\t\t\tthis.activeViewletContextKey.reset();\n\t\t\t}\n\t\t}));\n\n\t\t// Viewlet deregister\n\t\tthis._register(this.registry.onDidDeregister(async (viewletDescriptor: ViewletDescriptor) => {\n\t\t\tif (this.getActiveViewlet().getId() === viewletDescriptor.id) {\n\t\t\t\tawait this.openViewlet(this.getDefaultViewletId());\n\t\t\t}\n\n\t\t\tthis.removeComposite(viewletDescriptor.id);\n\t\t\tthis._onDidViewletDeregister.fire(viewletDescriptor);\n\t\t}));\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tthis.element = parent;\n\n\t\tsuper.create(parent);\n\n\t\tconst focusTracker = this._register(trackFocus(parent));\n\t\tthis._register(focusTracker.onDidFocus(() => this.sideBarFocusContextKey.set(true)));\n\t\tthis._register(focusTracker.onDidBlur(() => this.sideBarFocusContextKey.set(false)));\n\t}\n\n\tcreateTitleArea(parent: HTMLElement): HTMLElement {\n\t\tconst titleArea = super.createTitleArea(parent);\n\n\t\tthis._register(addDisposableListener(titleArea, EventType.CONTEXT_MENU, e => {\n\t\t\tthis.onTitleAreaContextMenu(new StandardMouseEvent(e));\n\t\t}));\n\n\t\treturn titleArea;\n\t}\n\n\tupdateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\t// Part container\n\t\tconst container = this.getContainer();\n\n\t\tcontainer.style.backgroundColor = this.getColor(SIDE_BAR_BACKGROUND);\n\t\tcontainer.style.color = this.getColor(SIDE_BAR_FOREGROUND);\n\n\t\tconst borderColor = this.getColor(SIDE_BAR_BORDER) || this.getColor(contrastBorder);\n\t\tconst isPositionLeft = this.layoutService.getSideBarPosition() === SideBarPosition.LEFT;\n\t\tcontainer.style.borderRightWidth = borderColor && isPositionLeft ? '1px' : null;\n\t\tcontainer.style.borderRightStyle = borderColor && isPositionLeft ? 'solid' : null;\n\t\tcontainer.style.borderRightColor = isPositionLeft ? borderColor : null;\n\t\tcontainer.style.borderLeftWidth = borderColor && !isPositionLeft ? '1px' : null;\n\t\tcontainer.style.borderLeftStyle = borderColor && !isPositionLeft ? 'solid' : null;\n\t\tcontainer.style.borderLeftColor = !isPositionLeft ? borderColor : null;\n\t}\n\n\tlayout(width: number, height: number): void {\n\t\tif (!this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.layout(width, height);\n\t}\n\n\t// Viewlet service\n\n\tgetActiveViewlet(): IViewlet {\n\t\treturn <IViewlet>this.getActiveComposite();\n\t}\n\n\tgetLastActiveViewletId(): string {\n\t\treturn this.getLastActiveCompositetId();\n\t}\n\n\thideActiveViewlet(): void {\n\t\tthis.hideActiveComposite();\n\t}\n\n\topenViewlet(id: string | undefined, focus?: boolean): Promise<IViewlet | null> {\n\t\tif (typeof id === 'string' && this.getViewlet(id)) {\n\t\t\treturn Promise.resolve(this.doOpenViewlet(id, focus));\n\t\t}\n\n\t\treturn this.extensionService.whenInstalledExtensionsRegistered()\n\t\t\t.then(() => {\n\t\t\t\tif (typeof id === 'string' && this.getViewlet(id)) {\n\t\t\t\t\treturn this.doOpenViewlet(id, focus);\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tgetViewlets(): ViewletDescriptor[] {\n\t\treturn this.viewletRegistry.getViewlets()\n\t\t\t.sort((v1, v2) => v1.order! - v2.order!);\n\t}\n\n\tgetDefaultViewletId(): string {\n\t\treturn this.viewletRegistry.getDefaultViewletId();\n\t}\n\n\tgetViewlet(id: string): ViewletDescriptor {\n\t\treturn this.getViewlets().filter(viewlet => viewlet.id === id)[0];\n\t}\n\n\tprivate doOpenViewlet(id: string, focus?: boolean): Viewlet | null {\n\t\tif (this.blockOpeningViewlet) {\n\t\t\treturn null; // Workaround against a potential race condition\n\t\t}\n\n\t\t// First check if sidebar is hidden and show if so\n\t\tif (!this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\ttry {\n\t\t\t\tthis.blockOpeningViewlet = true;\n\t\t\t\tthis.layoutService.setSideBarHidden(false);\n\t\t\t} finally {\n\t\t\t\tthis.blockOpeningViewlet = false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.openComposite(id, focus) as Viewlet;\n\t}\n\n\tprotected getTitleAreaDropDownAnchorAlignment(): AnchorAlignment {\n\t\treturn this.layoutService.getSideBarPosition() === SideBarPosition.LEFT ? AnchorAlignment.LEFT : AnchorAlignment.RIGHT;\n\t}\n\n\tprivate onTitleAreaContextMenu(event: StandardMouseEvent): void {\n\t\tconst activeViewlet = this.getActiveViewlet() as Viewlet;\n\t\tif (activeViewlet) {\n\t\t\tconst contextMenuActions = activeViewlet ? activeViewlet.getContextMenuActions() : [];\n\t\t\tif (contextMenuActions.length) {\n\t\t\t\tconst anchor: { x: number, y: number } = { x: event.posx, y: event.posy };\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\t\tgetActions: () => contextMenuActions,\n\t\t\t\t\tgetActionItem: action => this.actionItemProvider(action as Action),\n\t\t\t\t\tactionRunner: activeViewlet.getActionRunner()\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.SIDEBAR_PART\n\t\t};\n\t}\n}\n\nclass FocusSideBarAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.focusSideBar';\n\tstatic readonly LABEL = nls.localize('focusSideBar', \"Focus into Side Bar\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\n\t\t// Show side bar\n\t\tif (!this.layoutService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\treturn Promise.resolve(this.layoutService.setSideBarHidden(false));\n\t\t}\n\n\t\t// Focus into active viewlet\n\t\tlet viewlet = this.viewletService.getActiveViewlet();\n\t\tif (viewlet) {\n\t\t\tviewlet.focus();\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(FocusSideBarAction, FocusSideBarAction.ID, FocusSideBarAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_0\n}), 'View: Focus into Side Bar', nls.localize('viewCategory', \"View\"));\n\nregisterSingleton(IViewletService, SidebarPart);"]}]}