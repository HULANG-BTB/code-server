{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"./json\"], function (require, exports, nls_1, json_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getParseErrorMessage(errorCode) {\n        switch (errorCode) {\n            case json_1.ParseErrorCode.InvalidSymbol: return nls_1.localize('error.invalidSymbol', 'Invalid symbol');\n            case json_1.ParseErrorCode.InvalidNumberFormat: return nls_1.localize('error.invalidNumberFormat', 'Invalid number format');\n            case json_1.ParseErrorCode.PropertyNameExpected: return nls_1.localize('error.propertyNameExpected', 'Property name expected');\n            case json_1.ParseErrorCode.ValueExpected: return nls_1.localize('error.valueExpected', 'Value expected');\n            case json_1.ParseErrorCode.ColonExpected: return nls_1.localize('error.colonExpected', 'Colon expected');\n            case json_1.ParseErrorCode.CommaExpected: return nls_1.localize('error.commaExpected', 'Comma expected');\n            case json_1.ParseErrorCode.CloseBraceExpected: return nls_1.localize('error.closeBraceExpected', 'Closing brace expected');\n            case json_1.ParseErrorCode.CloseBracketExpected: return nls_1.localize('error.closeBracketExpected', 'Closing bracket expected');\n            case json_1.ParseErrorCode.EndOfFileExpected: return nls_1.localize('error.endOfFileExpected', 'End of file expected');\n            default:\n                return '';\n        }\n    }\n    exports.getParseErrorMessage = getParseErrorMessage;\n});\n",null]}