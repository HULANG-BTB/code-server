{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewFindWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewFindWidget.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar simpleFindWidget_1 = require(\"vs/editor/contrib/find/simpleFindWidget\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar WebviewFindWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewFindWidget, _super);\n    function WebviewFindWidget(_webview, contextViewService, contextKeyService) {\n        var _this = _super.call(this, contextViewService, contextKeyService) || this;\n        _this._webview = _webview;\n        return _this;\n    }\n    WebviewFindWidget.prototype.dispose = function () {\n        this._webview = undefined;\n        _super.prototype.dispose.call(this);\n    };\n    WebviewFindWidget.prototype.find = function (previous) {\n        if (!this._webview) {\n            return;\n        }\n        var val = this.inputValue;\n        if (val) {\n            this._webview.find(val, { findNext: true, forward: !previous });\n        }\n    };\n    WebviewFindWidget.prototype.hide = function () {\n        _super.prototype.hide.call(this);\n        if (this._webview) {\n            this._webview.stopFind(true);\n            this._webview.focus();\n        }\n    };\n    WebviewFindWidget.prototype.onInputChanged = function () {\n        if (!this._webview) {\n            return;\n        }\n        var val = this.inputValue;\n        if (val) {\n            this._webview.startFind(val);\n        }\n        else {\n            this._webview.stopFind(false);\n        }\n    };\n    WebviewFindWidget.prototype.onFocusTrackerFocus = function () { };\n    WebviewFindWidget.prototype.onFocusTrackerBlur = function () { };\n    WebviewFindWidget.prototype.onFindInputFocusTrackerFocus = function () { };\n    WebviewFindWidget.prototype.onFindInputFocusTrackerBlur = function () { };\n    WebviewFindWidget = tslib_1.__decorate([\n        tslib_1.__param(1, contextView_1.IContextViewService),\n        tslib_1.__param(2, contextkey_1.IContextKeyService)\n    ], WebviewFindWidget);\n    return WebviewFindWidget;\n}(simpleFindWidget_1.SimpleFindWidget));\nexports.WebviewFindWidget = WebviewFindWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewFindWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewFindWidget.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,4EAA2E;AAC3E,2EAAkF;AAElF,uEAA8E;AAE9E;IAAuC,6CAAgB;IAEtD,2BACS,QAAoC,EACvB,kBAAuC,EACxC,iBAAqC;QAH1D,YAKC,kBAAM,kBAAkB,EAAE,iBAAiB,CAAC,SAC5C;QALQ,cAAQ,GAAR,QAAQ,CAA4B;;IAK7C,CAAC;IAED,mCAAO,GAAP;QACC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,iBAAM,OAAO,WAAE,CAAC;IACjB,CAAC;IAEM,gCAAI,GAAX,UAAY,QAAiB;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,OAAO;SACP;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,GAAG,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChE;IACF,CAAC;IAEM,gCAAI,GAAX;QACC,iBAAM,IAAI,WAAE,CAAC;QACb,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;SACtB;IACF,CAAC;IAEM,0CAAc,GAArB;QACC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,OAAO;SACP;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,GAAG,EAAE;YACR,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC7B;aAAM;YACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC9B;IACF,CAAC;IAES,+CAAmB,GAA7B,cAAkC,CAAC;IAEzB,8CAAkB,GAA5B,cAAiC,CAAC;IAExB,wDAA4B,GAAtC,cAA2C,CAAC;IAElC,uDAA2B,GAArC,cAA0C,CAAC;IAnD/B,iBAAiB;QAI3B,mBAAA,iCAAmB,CAAA;QACnB,mBAAA,+BAAkB,CAAA;OALR,iBAAiB,CAoD7B;IAAD,wBAAC;CAAA,AApDD,CAAuC,mCAAgB,GAoDtD;AApDY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SimpleFindWidget } from 'vs/editor/contrib/find/simpleFindWidget';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { WebviewElement } from './webviewElement';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\n\nexport class WebviewFindWidget extends SimpleFindWidget {\n\n\tconstructor(\n\t\tprivate _webview: WebviewElement | undefined,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(contextViewService, contextKeyService);\n\t}\n\n\tdispose() {\n\t\tthis._webview = undefined;\n\t\tsuper.dispose();\n\t}\n\n\tpublic find(previous: boolean) {\n\t\tif (!this._webview) {\n\t\t\treturn;\n\t\t}\n\t\tconst val = this.inputValue;\n\t\tif (val) {\n\t\t\tthis._webview.find(val, { findNext: true, forward: !previous });\n\t\t}\n\t}\n\n\tpublic hide() {\n\t\tsuper.hide();\n\t\tif (this._webview) {\n\t\t\tthis._webview.stopFind(true);\n\t\t\tthis._webview.focus();\n\t\t}\n\t}\n\n\tpublic onInputChanged() {\n\t\tif (!this._webview) {\n\t\t\treturn;\n\t\t}\n\t\tconst val = this.inputValue;\n\t\tif (val) {\n\t\t\tthis._webview.startFind(val);\n\t\t} else {\n\t\t\tthis._webview.stopFind(false);\n\t\t}\n\t}\n\n\tprotected onFocusTrackerFocus() { }\n\n\tprotected onFocusTrackerBlur() { }\n\n\tprotected onFindInputFocusTrackerFocus() { }\n\n\tprotected onFindInputFocusTrackerBlur() { }\n}"]}]}