{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensController.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensController.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorState_1 = require(\"vs/editor/browser/core/editorState\");\nvar editorBrowser = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar codelens_1 = require(\"vs/editor/contrib/codelens/codelens\");\nvar codelensWidget_1 = require(\"vs/editor/contrib/codelens/codelensWidget\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar CodeLensContribution = /** @class */ (function () {\n    function CodeLensContribution(_editor, _commandService, _notificationService) {\n        var _this = this;\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._isEnabled = this._editor.getConfiguration().contribInfo.codeLens;\n        this._globalToDispose = [];\n        this._localToDispose = [];\n        this._lenses = [];\n        this._currentFindCodeLensSymbolsPromise = null;\n        this._modelChangeCounter = 0;\n        this._globalToDispose.push(this._editor.onDidChangeModel(function () { return _this._onModelChange(); }));\n        this._globalToDispose.push(this._editor.onDidChangeModelLanguage(function () { return _this._onModelChange(); }));\n        this._globalToDispose.push(this._editor.onDidChangeConfiguration(function (e) {\n            var prevIsEnabled = _this._isEnabled;\n            _this._isEnabled = _this._editor.getConfiguration().contribInfo.codeLens;\n            if (prevIsEnabled !== _this._isEnabled) {\n                _this._onModelChange();\n            }\n        }));\n        this._globalToDispose.push(modes_1.CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\n        this._onModelChange();\n    }\n    CodeLensContribution.prototype.dispose = function () {\n        this._localDispose();\n        this._globalToDispose = lifecycle_1.dispose(this._globalToDispose);\n    };\n    CodeLensContribution.prototype._localDispose = function () {\n        if (this._currentFindCodeLensSymbolsPromise) {\n            this._currentFindCodeLensSymbolsPromise.cancel();\n            this._currentFindCodeLensSymbolsPromise = null;\n            this._modelChangeCounter++;\n        }\n        if (this._currentResolveCodeLensSymbolsPromise) {\n            this._currentResolveCodeLensSymbolsPromise.cancel();\n            this._currentResolveCodeLensSymbolsPromise = null;\n        }\n        this._localToDispose = lifecycle_1.dispose(this._localToDispose);\n    };\n    CodeLensContribution.prototype.getId = function () {\n        return CodeLensContribution.ID;\n    };\n    CodeLensContribution.prototype._onModelChange = function () {\n        var _this = this;\n        this._localDispose();\n        var model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!this._isEnabled) {\n            return;\n        }\n        if (!modes_1.CodeLensProviderRegistry.has(model)) {\n            return;\n        }\n        for (var _i = 0, _a = modes_1.CodeLensProviderRegistry.all(model); _i < _a.length; _i++) {\n            var provider = _a[_i];\n            if (typeof provider.onDidChange === 'function') {\n                var registration = provider.onDidChange(function () { return scheduler.schedule(); });\n                this._localToDispose.push(registration);\n            }\n        }\n        this._detectVisibleLenses = new async_1.RunOnceScheduler(function () {\n            _this._onViewportChanged();\n        }, 500);\n        var scheduler = new async_1.RunOnceScheduler(function () {\n            var counterValue = ++_this._modelChangeCounter;\n            if (_this._currentFindCodeLensSymbolsPromise) {\n                _this._currentFindCodeLensSymbolsPromise.cancel();\n            }\n            _this._currentFindCodeLensSymbolsPromise = async_1.createCancelablePromise(function (token) { return codelens_1.getCodeLensData(model, token); });\n            _this._currentFindCodeLensSymbolsPromise.then(function (result) {\n                if (counterValue === _this._modelChangeCounter) { // only the last one wins\n                    _this._renderCodeLensSymbols(result);\n                    _this._detectVisibleLenses.schedule();\n                }\n            }, errors_1.onUnexpectedError);\n        }, 250);\n        this._localToDispose.push(scheduler);\n        this._localToDispose.push(this._detectVisibleLenses);\n        this._localToDispose.push(this._editor.onDidChangeModelContent(function (e) {\n            _this._editor.changeDecorations(function (changeAccessor) {\n                _this._editor.changeViewZones(function (viewAccessor) {\n                    var toDispose = [];\n                    var lastLensLineNumber = -1;\n                    _this._lenses.forEach(function (lens) {\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\n                            // line_number -> lenses should never be on the same line\n                            toDispose.push(lens);\n                        }\n                        else {\n                            lens.update(viewAccessor);\n                            lastLensLineNumber = lens.getLineNumber();\n                        }\n                    });\n                    var helper = new codelensWidget_1.CodeLensHelper();\n                    toDispose.forEach(function (l) {\n                        l.dispose(helper, viewAccessor);\n                        _this._lenses.splice(_this._lenses.indexOf(l), 1);\n                    });\n                    helper.commit(changeAccessor);\n                });\n            });\n            // Compute new `visible` code lenses\n            _this._detectVisibleLenses.schedule();\n            // Ask for all references again\n            scheduler.schedule();\n        }));\n        this._localToDispose.push(this._editor.onDidScrollChange(function (e) {\n            if (e.scrollTopChanged && _this._lenses.length > 0) {\n                _this._detectVisibleLenses.schedule();\n            }\n        }));\n        this._localToDispose.push(this._editor.onDidLayoutChange(function (e) {\n            _this._detectVisibleLenses.schedule();\n        }));\n        this._localToDispose.push(lifecycle_1.toDisposable(function () {\n            if (_this._editor.getModel()) {\n                var scrollState = editorState_1.StableEditorScrollState.capture(_this._editor);\n                _this._editor.changeDecorations(function (changeAccessor) {\n                    _this._editor.changeViewZones(function (accessor) {\n                        _this._disposeAllLenses(changeAccessor, accessor);\n                    });\n                });\n                scrollState.restore(_this._editor);\n            }\n            else {\n                // No accessors available\n                _this._disposeAllLenses(undefined, undefined);\n            }\n        }));\n        this._localToDispose.push(this._editor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo) {\n                for (var _i = 0, _a = _this._lenses; _i < _a.length; _i++) {\n                    var lens = _a[_i];\n                    lens.updateHeight();\n                }\n            }\n        }));\n        this._localToDispose.push(this._editor.onMouseUp(function (e) {\n            var _a;\n            if (e.target.type === editorBrowser.MouseTargetType.CONTENT_WIDGET && e.target.element && e.target.element.tagName === 'A') {\n                for (var _i = 0, _b = _this._lenses; _i < _b.length; _i++) {\n                    var lens = _b[_i];\n                    var command = lens.getCommand(e.target.element);\n                    if (command) {\n                        (_a = _this._commandService).executeCommand.apply(_a, [command.id].concat((command.arguments || []))).catch(function (err) { return _this._notificationService.error(err); });\n                        break;\n                    }\n                }\n            }\n        }));\n        scheduler.schedule();\n    };\n    CodeLensContribution.prototype._disposeAllLenses = function (decChangeAccessor, viewZoneChangeAccessor) {\n        var helper = new codelensWidget_1.CodeLensHelper();\n        this._lenses.forEach(function (lens) { return lens.dispose(helper, viewZoneChangeAccessor); });\n        if (decChangeAccessor) {\n            helper.commit(decChangeAccessor);\n        }\n        this._lenses = [];\n    };\n    CodeLensContribution.prototype._renderCodeLensSymbols = function (symbols) {\n        var _this = this;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        var maxLineNumber = this._editor.getModel().getLineCount();\n        var groups = [];\n        var lastGroup;\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var line = symbol.symbol.range.startLineNumber;\n            if (line < 1 || line > maxLineNumber) {\n                // invalid code lens\n                continue;\n            }\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n                // on same line as previous\n                lastGroup.push(symbol);\n            }\n            else {\n                // on later line as previous\n                lastGroup = [symbol];\n                groups.push(lastGroup);\n            }\n        }\n        var scrollState = editorState_1.StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(function (changeAccessor) {\n            _this._editor.changeViewZones(function (accessor) {\n                var codeLensIndex = 0, groupsIndex = 0, helper = new codelensWidget_1.CodeLensHelper();\n                while (groupsIndex < groups.length && codeLensIndex < _this._lenses.length) {\n                    var symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n                    var codeLensLineNumber = _this._lenses[codeLensIndex].getLineNumber();\n                    if (codeLensLineNumber < symbolsLineNumber) {\n                        _this._lenses[codeLensIndex].dispose(helper, accessor);\n                        _this._lenses.splice(codeLensIndex, 1);\n                    }\n                    else if (codeLensLineNumber === symbolsLineNumber) {\n                        _this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n                        groupsIndex++;\n                        codeLensIndex++;\n                    }\n                    else {\n                        _this._lenses.splice(codeLensIndex, 0, new codelensWidget_1.CodeLens(groups[groupsIndex], _this._editor, helper, accessor, function () { return _this._detectVisibleLenses.schedule(); }));\n                        codeLensIndex++;\n                        groupsIndex++;\n                    }\n                }\n                // Delete extra code lenses\n                while (codeLensIndex < _this._lenses.length) {\n                    _this._lenses[codeLensIndex].dispose(helper, accessor);\n                    _this._lenses.splice(codeLensIndex, 1);\n                }\n                // Create extra symbols\n                while (groupsIndex < groups.length) {\n                    _this._lenses.push(new codelensWidget_1.CodeLens(groups[groupsIndex], _this._editor, helper, accessor, function () { return _this._detectVisibleLenses.schedule(); }));\n                    groupsIndex++;\n                }\n                helper.commit(changeAccessor);\n            });\n        });\n        scrollState.restore(this._editor);\n    };\n    CodeLensContribution.prototype._onViewportChanged = function () {\n        var _this = this;\n        if (this._currentResolveCodeLensSymbolsPromise) {\n            this._currentResolveCodeLensSymbolsPromise.cancel();\n            this._currentResolveCodeLensSymbolsPromise = null;\n        }\n        var model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        var toResolve = [];\n        var lenses = [];\n        this._lenses.forEach(function (lens) {\n            var request = lens.computeIfNecessary(model);\n            if (request) {\n                toResolve.push(request);\n                lenses.push(lens);\n            }\n        });\n        if (toResolve.length === 0) {\n            return;\n        }\n        this._currentResolveCodeLensSymbolsPromise = async_1.createCancelablePromise(function (token) {\n            var promises = toResolve.map(function (request, i) {\n                var resolvedSymbols = new Array(request.length);\n                var promises = request.map(function (request, i) {\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(function (symbol) {\n                            resolvedSymbols[i] = symbol;\n                        });\n                    }\n                    else {\n                        resolvedSymbols[i] = request.symbol;\n                        return Promise.resolve(undefined);\n                    }\n                });\n                return Promise.all(promises).then(function () {\n                    lenses[i].updateCommands(resolvedSymbols);\n                });\n            });\n            return Promise.all(promises);\n        });\n        this._currentResolveCodeLensSymbolsPromise.then(function () {\n            _this._currentResolveCodeLensSymbolsPromise = null;\n        }).catch(function (err) {\n            _this._currentResolveCodeLensSymbolsPromise = null;\n            errors_1.onUnexpectedError(err);\n        });\n    };\n    CodeLensContribution.ID = 'css.editor.codeLens';\n    CodeLensContribution = tslib_1.__decorate([\n        tslib_1.__param(1, commands_1.ICommandService),\n        tslib_1.__param(2, notification_1.INotificationService)\n    ], CodeLensContribution);\n    return CodeLensContribution;\n}());\nexports.CodeLensContribution = CodeLensContribution;\neditorExtensions_1.registerEditorContribution(CodeLensContribution);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensController.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codelens/codelensController.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,8CAAoG;AACpG,gDAA0D;AAC1D,sDAA8E;AAC9E,kEAA6E;AAC7E,+DAAiE;AACjE,uEAAgF;AAIhF,gDAAmF;AACnF,gEAAqF;AACrF,4EAAqF;AACrF,iEAAuE;AACvE,6EAAoF;AAEpF;IAcC,8BACkB,OAAkC,EACjB,eAAgC,EAC3B,oBAA0C;QAHlF,iBAwBC;QAvBiB,YAAO,GAAP,OAAO,CAA2B;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAC3B,yBAAoB,GAApB,oBAAoB,CAAsB;QAEjF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC;QAEvE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC;QAC/C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,UAAC,CAA6B;YAC9F,IAAI,aAAa,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC;YACvE,IAAI,aAAa,KAAK,KAAI,CAAC,UAAU,EAAE;gBACtC,KAAI,CAAC,cAAc,EAAE,CAAC;aACtB;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gCAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,sCAAO,GAAP;QACC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,mBAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACxD,CAAC;IAEO,4CAAa,GAArB;QACC,IAAI,IAAI,CAAC,kCAAkC,EAAE;YAC5C,IAAI,CAAC,kCAAkC,CAAC,MAAM,EAAE,CAAC;YACjD,IAAI,CAAC,kCAAkC,GAAG,IAAI,CAAC;YAC/C,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,qCAAqC,EAAE;YAC/C,IAAI,CAAC,qCAAqC,CAAC,MAAM,EAAE,CAAC;YACpD,IAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC;SAClD;QACD,IAAI,CAAC,eAAe,GAAG,mBAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACtD,CAAC;IAED,oCAAK,GAAL;QACC,OAAO,oBAAoB,CAAC,EAAE,CAAC;IAChC,CAAC;IAEO,6CAAc,GAAtB;QAAA,iBAsHC;QApHA,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,EAAE;YACX,OAAO;SACP;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,OAAO;SACP;QAED,IAAI,CAAC,gCAAwB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO;SACP;QAED,KAAuB,UAAmC,EAAnC,KAAA,gCAAwB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAnC,cAAmC,EAAnC,IAAmC,EAAE;YAAvD,IAAM,QAAQ,SAAA;YAClB,IAAI,OAAO,QAAQ,CAAC,WAAW,KAAK,UAAU,EAAE;gBAC/C,IAAI,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,cAAM,OAAA,SAAS,CAAC,QAAQ,EAAE,EAApB,CAAoB,CAAC,CAAC;gBACpE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACxC;SACD;QAED,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAgB,CAAC;YAChD,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;QAER,IAAM,SAAS,GAAG,IAAI,wBAAgB,CAAC;YACtC,IAAM,YAAY,GAAG,EAAE,KAAI,CAAC,mBAAmB,CAAC;YAChD,IAAI,KAAI,CAAC,kCAAkC,EAAE;gBAC5C,KAAI,CAAC,kCAAkC,CAAC,MAAM,EAAE,CAAC;aACjD;YAED,KAAI,CAAC,kCAAkC,GAAG,+BAAuB,CAAC,UAAA,KAAK,IAAI,OAAA,0BAAe,CAAC,KAAK,EAAE,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;YAE1G,KAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACnD,IAAI,YAAY,KAAK,KAAI,CAAC,mBAAmB,EAAE,EAAE,yBAAyB;oBACzE,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;oBACpC,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;iBACrC;YACF,CAAC,EAAE,0BAAiB,CAAC,CAAC;QACvB,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,UAAC,CAAC;YAChE,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAC,cAAc;gBAC7C,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,UAAC,YAAY;oBACzC,IAAI,SAAS,GAAe,EAAE,CAAC;oBAC/B,IAAI,kBAAkB,GAAW,CAAC,CAAC,CAAC;oBAEpC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI;wBACzB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,kBAAkB,KAAK,IAAI,CAAC,aAAa,EAAE,EAAE;4BACnE,gEAAgE;4BAChE,yDAAyD;4BACzD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAErB;6BAAM;4BACN,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;4BAC1B,kBAAkB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;yBAC1C;oBACF,CAAC,CAAC,CAAC;oBAEH,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;oBAClC,SAAS,CAAC,OAAO,CAAC,UAAC,CAAC;wBACnB,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;wBAChC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,oCAAoC;YACpC,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;YACrC,+BAA+B;YAC/B,SAAS,CAAC,QAAQ,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAA,CAAC;YACzD,IAAI,CAAC,CAAC,gBAAgB,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClD,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;aACrC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAA,CAAC;YACzD,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAY,CAAC;YACtC,IAAI,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;gBAC5B,IAAM,WAAW,GAAG,qCAAuB,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAClE,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAC,cAAc;oBAC7C,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,UAAC,QAAQ;wBACrC,KAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;oBAClD,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,WAAW,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;aAClC;iBAAM;gBACN,yBAAyB;gBACzB,KAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7C;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,UAAA,CAAC;YAChE,IAAI,CAAC,CAAC,QAAQ,EAAE;gBACf,KAAmB,UAAY,EAAZ,KAAA,KAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,EAAE;oBAA5B,IAAM,IAAI,SAAA;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;iBACpB;aACD;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,CAAC;;YACjD,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,aAAa,CAAC,eAAe,CAAC,cAAc,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,KAAK,GAAG,EAAE;gBAC3H,KAAmB,UAAY,EAAZ,KAAA,KAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,EAAE;oBAA5B,IAAM,IAAI,SAAA;oBACd,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,OAA0B,CAAC,CAAC;oBACnE,IAAI,OAAO,EAAE;wBACZ,CAAA,KAAA,KAAI,CAAC,eAAe,CAAA,CAAC,cAAc,YAAC,OAAO,CAAC,EAAE,SAAK,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC,GAAE,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,EAApC,CAAoC,CAAC,CAAC;wBACjI,MAAM;qBACN;iBACD;aACD;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,SAAS,CAAC,QAAQ,EAAE,CAAC;IACtB,CAAC;IAEO,gDAAiB,GAAzB,UAA0B,iBAA8D,EAAE,sBAAyE;QAClK,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,sBAAsB,CAAC,EAA5C,CAA4C,CAAC,CAAC;QAC7E,IAAI,iBAAiB,EAAE;YACtB,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACnB,CAAC;IAEO,qDAAsB,GAA9B,UAA+B,OAAwB;QAAvD,iBAmEC;QAlEA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;YAC7B,OAAO;SACP;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;QAC3D,IAAI,MAAM,GAAsB,EAAE,CAAC;QACnC,IAAI,SAAsC,CAAC;QAE3C,KAAmB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;YAAvB,IAAI,MAAM,gBAAA;YACd,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC;YAC/C,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,aAAa,EAAE;gBACrC,oBAAoB;gBACpB,SAAS;aACT;iBAAM,IAAI,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,KAAK,IAAI,EAAE;gBAC9F,2BAA2B;gBAC3B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvB;iBAAM;gBACN,4BAA4B;gBAC5B,SAAS,GAAG,CAAC,MAAM,CAAC,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvB;SACD;QAED,IAAM,WAAW,GAAG,qCAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAC,cAAc;YAC7C,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,UAAC,QAAQ;gBAErC,IAAI,aAAa,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;gBAEtE,OAAO,WAAW,GAAG,MAAM,CAAC,MAAM,IAAI,aAAa,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBAE1E,IAAI,iBAAiB,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC;oBAC5E,IAAI,kBAAkB,GAAG,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;oBAErE,IAAI,kBAAkB,GAAG,iBAAiB,EAAE;wBAC3C,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;wBACtD,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;qBACtC;yBAAM,IAAI,kBAAkB,KAAK,iBAAiB,EAAE;wBACpD,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;wBAC/E,WAAW,EAAE,CAAC;wBACd,aAAa,EAAE,CAAC;qBAChB;yBAAM;wBACN,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,yBAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,KAAI,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,EAApC,CAAoC,CAAC,CAAC,CAAC;wBACrJ,aAAa,EAAE,CAAC;wBAChB,WAAW,EAAE,CAAC;qBACd;iBACD;gBAED,2BAA2B;gBAC3B,OAAO,aAAa,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBAC3C,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;oBACtD,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;iBACtC;gBAED,uBAAuB;gBACvB,OAAO,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE;oBACnC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,yBAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,KAAI,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,EAApC,CAAoC,CAAC,CAAC,CAAC;oBACjI,WAAW,EAAE,CAAC;iBACd;gBAED,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEO,iDAAkB,GAA1B;QAAA,iBAuDC;QAtDA,IAAI,IAAI,CAAC,qCAAqC,EAAE;YAC/C,IAAI,CAAC,qCAAqC,CAAC,MAAM,EAAE,CAAC;YACpD,IAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC;SAClD;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,EAAE;YACX,OAAO;SACP;QAED,IAAM,SAAS,GAAsB,EAAE,CAAC;QACxC,IAAM,MAAM,GAAe,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC/C,IAAI,OAAO,EAAE;gBACZ,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO;SACP;QAED,IAAI,CAAC,qCAAqC,GAAG,+BAAuB,CAAC,UAAA,KAAK;YAEzE,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,CAAC;gBAEzC,IAAM,eAAe,GAAG,IAAI,KAAK,CAAqC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACtF,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,CAAC;oBACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,eAAe,KAAK,UAAU,EAAE;wBACtF,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;4BACjG,eAAe,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;wBAC7B,CAAC,CAAC,CAAC;qBACH;yBAAM;wBACN,eAAe,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;wBACpC,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;qBAClC;gBACF,CAAC,CAAC,CAAC;gBAEH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;oBACjC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,CAAC,IAAI,CAAC;YAC/C,KAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC;QACnD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;YACX,KAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC;YAClD,0BAAiB,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC;IAzTuB,uBAAE,GAAW,qBAAqB,CAAC;IAF/C,oBAAoB;QAgB9B,mBAAA,0BAAe,CAAA;QACf,mBAAA,mCAAoB,CAAA;OAjBV,oBAAoB,CA4ThC;IAAD,2BAAC;CAAA,AA5TD,IA4TC;AA5TY,oDAAoB;AA8TjC,6CAA0B,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, RunOnceScheduler, createCancelablePromise } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { StableEditorScrollState } from 'vs/editor/browser/core/editorState';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IConfigurationChangedEvent } from 'vs/editor/common/config/editorOptions';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDecorationsChangeAccessor } from 'vs/editor/common/model';\nimport { CodeLensProviderRegistry, ICodeLensSymbol } from 'vs/editor/common/modes';\nimport { ICodeLensData, getCodeLensData } from 'vs/editor/contrib/codelens/codelens';\nimport { CodeLens, CodeLensHelper } from 'vs/editor/contrib/codelens/codelensWidget';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\nexport class CodeLensContribution implements editorCommon.IEditorContribution {\n\n\tprivate static readonly ID: string = 'css.editor.codeLens';\n\n\tprivate _isEnabled: boolean;\n\n\tprivate _globalToDispose: IDisposable[];\n\tprivate _localToDispose: IDisposable[];\n\tprivate _lenses: CodeLens[];\n\tprivate _currentFindCodeLensSymbolsPromise: CancelablePromise<ICodeLensData[]> | null;\n\tprivate _modelChangeCounter: number;\n\tprivate _currentResolveCodeLensSymbolsPromise: CancelablePromise<any> | null;\n\tprivate _detectVisibleLenses: RunOnceScheduler;\n\n\tconstructor(\n\t\tprivate readonly _editor: editorBrowser.ICodeEditor,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@INotificationService private readonly _notificationService: INotificationService\n\t) {\n\t\tthis._isEnabled = this._editor.getConfiguration().contribInfo.codeLens;\n\n\t\tthis._globalToDispose = [];\n\t\tthis._localToDispose = [];\n\t\tthis._lenses = [];\n\t\tthis._currentFindCodeLensSymbolsPromise = null;\n\t\tthis._modelChangeCounter = 0;\n\n\t\tthis._globalToDispose.push(this._editor.onDidChangeModel(() => this._onModelChange()));\n\t\tthis._globalToDispose.push(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n\t\tthis._globalToDispose.push(this._editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {\n\t\t\tlet prevIsEnabled = this._isEnabled;\n\t\t\tthis._isEnabled = this._editor.getConfiguration().contribInfo.codeLens;\n\t\t\tif (prevIsEnabled !== this._isEnabled) {\n\t\t\t\tthis._onModelChange();\n\t\t\t}\n\t\t}));\n\t\tthis._globalToDispose.push(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\n\t\tthis._onModelChange();\n\t}\n\n\tdispose(): void {\n\t\tthis._localDispose();\n\t\tthis._globalToDispose = dispose(this._globalToDispose);\n\t}\n\n\tprivate _localDispose(): void {\n\t\tif (this._currentFindCodeLensSymbolsPromise) {\n\t\t\tthis._currentFindCodeLensSymbolsPromise.cancel();\n\t\t\tthis._currentFindCodeLensSymbolsPromise = null;\n\t\t\tthis._modelChangeCounter++;\n\t\t}\n\t\tif (this._currentResolveCodeLensSymbolsPromise) {\n\t\t\tthis._currentResolveCodeLensSymbolsPromise.cancel();\n\t\t\tthis._currentResolveCodeLensSymbolsPromise = null;\n\t\t}\n\t\tthis._localToDispose = dispose(this._localToDispose);\n\t}\n\n\tgetId(): string {\n\t\treturn CodeLensContribution.ID;\n\t}\n\n\tprivate _onModelChange(): void {\n\n\t\tthis._localDispose();\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!CodeLensProviderRegistry.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const provider of CodeLensProviderRegistry.all(model)) {\n\t\t\tif (typeof provider.onDidChange === 'function') {\n\t\t\t\tlet registration = provider.onDidChange(() => scheduler.schedule());\n\t\t\t\tthis._localToDispose.push(registration);\n\t\t\t}\n\t\t}\n\n\t\tthis._detectVisibleLenses = new RunOnceScheduler(() => {\n\t\t\tthis._onViewportChanged();\n\t\t}, 500);\n\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tconst counterValue = ++this._modelChangeCounter;\n\t\t\tif (this._currentFindCodeLensSymbolsPromise) {\n\t\t\t\tthis._currentFindCodeLensSymbolsPromise.cancel();\n\t\t\t}\n\n\t\t\tthis._currentFindCodeLensSymbolsPromise = createCancelablePromise(token => getCodeLensData(model, token));\n\n\t\t\tthis._currentFindCodeLensSymbolsPromise.then((result) => {\n\t\t\t\tif (counterValue === this._modelChangeCounter) { // only the last one wins\n\t\t\t\t\tthis._renderCodeLensSymbols(result);\n\t\t\t\t\tthis._detectVisibleLenses.schedule();\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t}, 250);\n\t\tthis._localToDispose.push(scheduler);\n\t\tthis._localToDispose.push(this._detectVisibleLenses);\n\t\tthis._localToDispose.push(this._editor.onDidChangeModelContent((e) => {\n\t\t\tthis._editor.changeDecorations((changeAccessor) => {\n\t\t\t\tthis._editor.changeViewZones((viewAccessor) => {\n\t\t\t\t\tlet toDispose: CodeLens[] = [];\n\t\t\t\t\tlet lastLensLineNumber: number = -1;\n\n\t\t\t\t\tthis._lenses.forEach((lens) => {\n\t\t\t\t\t\tif (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n\t\t\t\t\t\t\t// invalid -> lens collapsed, attach range doesn't exist anymore\n\t\t\t\t\t\t\t// line_number -> lenses should never be on the same line\n\t\t\t\t\t\t\ttoDispose.push(lens);\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlens.update(viewAccessor);\n\t\t\t\t\t\t\tlastLensLineNumber = lens.getLineNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tlet helper = new CodeLensHelper();\n\t\t\t\t\ttoDispose.forEach((l) => {\n\t\t\t\t\t\tl.dispose(helper, viewAccessor);\n\t\t\t\t\t\tthis._lenses.splice(this._lenses.indexOf(l), 1);\n\t\t\t\t\t});\n\t\t\t\t\thelper.commit(changeAccessor);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Compute new `visible` code lenses\n\t\t\tthis._detectVisibleLenses.schedule();\n\t\t\t// Ask for all references again\n\t\t\tscheduler.schedule();\n\t\t}));\n\t\tthis._localToDispose.push(this._editor.onDidScrollChange(e => {\n\t\t\tif (e.scrollTopChanged && this._lenses.length > 0) {\n\t\t\t\tthis._detectVisibleLenses.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._localToDispose.push(this._editor.onDidLayoutChange(e => {\n\t\t\tthis._detectVisibleLenses.schedule();\n\t\t}));\n\t\tthis._localToDispose.push(toDisposable(() => {\n\t\t\tif (this._editor.getModel()) {\n\t\t\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\t\t\t\tthis._editor.changeDecorations((changeAccessor) => {\n\t\t\t\t\tthis._editor.changeViewZones((accessor) => {\n\t\t\t\t\t\tthis._disposeAllLenses(changeAccessor, accessor);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tscrollState.restore(this._editor);\n\t\t\t} else {\n\t\t\t\t// No accessors available\n\t\t\t\tthis._disposeAllLenses(undefined, undefined);\n\t\t\t}\n\t\t}));\n\t\tthis._localToDispose.push(this._editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.fontInfo) {\n\t\t\t\tfor (const lens of this._lenses) {\n\t\t\t\t\tlens.updateHeight();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._localToDispose.push(this._editor.onMouseUp(e => {\n\t\t\tif (e.target.type === editorBrowser.MouseTargetType.CONTENT_WIDGET && e.target.element && e.target.element.tagName === 'A') {\n\t\t\t\tfor (const lens of this._lenses) {\n\t\t\t\t\tlet command = lens.getCommand(e.target.element as HTMLLinkElement);\n\t\t\t\t\tif (command) {\n\t\t\t\t\t\tthis._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate _disposeAllLenses(decChangeAccessor: IModelDecorationsChangeAccessor | undefined, viewZoneChangeAccessor: editorBrowser.IViewZoneChangeAccessor | undefined): void {\n\t\tlet helper = new CodeLensHelper();\n\t\tthis._lenses.forEach((lens) => lens.dispose(helper, viewZoneChangeAccessor));\n\t\tif (decChangeAccessor) {\n\t\t\thelper.commit(decChangeAccessor);\n\t\t}\n\t\tthis._lenses = [];\n\t}\n\n\tprivate _renderCodeLensSymbols(symbols: ICodeLensData[]): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet maxLineNumber = this._editor.getModel().getLineCount();\n\t\tlet groups: ICodeLensData[][] = [];\n\t\tlet lastGroup: ICodeLensData[] | undefined;\n\n\t\tfor (let symbol of symbols) {\n\t\t\tlet line = symbol.symbol.range.startLineNumber;\n\t\t\tif (line < 1 || line > maxLineNumber) {\n\t\t\t\t// invalid code lens\n\t\t\t\tcontinue;\n\t\t\t} else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n\t\t\t\t// on same line as previous\n\t\t\t\tlastGroup.push(symbol);\n\t\t\t} else {\n\t\t\t\t// on later line as previous\n\t\t\t\tlastGroup = [symbol];\n\t\t\t\tgroups.push(lastGroup);\n\t\t\t}\n\t\t}\n\n\t\tconst scrollState = StableEditorScrollState.capture(this._editor);\n\n\t\tthis._editor.changeDecorations((changeAccessor) => {\n\t\t\tthis._editor.changeViewZones((accessor) => {\n\n\t\t\t\tlet codeLensIndex = 0, groupsIndex = 0, helper = new CodeLensHelper();\n\n\t\t\t\twhile (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n\n\t\t\t\t\tlet symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n\t\t\t\t\tlet codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n\n\t\t\t\t\tif (codeLensLineNumber < symbolsLineNumber) {\n\t\t\t\t\t\tthis._lenses[codeLensIndex].dispose(helper, accessor);\n\t\t\t\t\t\tthis._lenses.splice(codeLensIndex, 1);\n\t\t\t\t\t} else if (codeLensLineNumber === symbolsLineNumber) {\n\t\t\t\t\t\tthis._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n\t\t\t\t\t\tgroupsIndex++;\n\t\t\t\t\t\tcodeLensIndex++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._lenses.splice(codeLensIndex, 0, new CodeLens(groups[groupsIndex], this._editor, helper, accessor, () => this._detectVisibleLenses.schedule()));\n\t\t\t\t\t\tcodeLensIndex++;\n\t\t\t\t\t\tgroupsIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delete extra code lenses\n\t\t\t\twhile (codeLensIndex < this._lenses.length) {\n\t\t\t\t\tthis._lenses[codeLensIndex].dispose(helper, accessor);\n\t\t\t\t\tthis._lenses.splice(codeLensIndex, 1);\n\t\t\t\t}\n\n\t\t\t\t// Create extra symbols\n\t\t\t\twhile (groupsIndex < groups.length) {\n\t\t\t\t\tthis._lenses.push(new CodeLens(groups[groupsIndex], this._editor, helper, accessor, () => this._detectVisibleLenses.schedule()));\n\t\t\t\t\tgroupsIndex++;\n\t\t\t\t}\n\n\t\t\t\thelper.commit(changeAccessor);\n\t\t\t});\n\t\t});\n\n\t\tscrollState.restore(this._editor);\n\t}\n\n\tprivate _onViewportChanged(): void {\n\t\tif (this._currentResolveCodeLensSymbolsPromise) {\n\t\t\tthis._currentResolveCodeLensSymbolsPromise.cancel();\n\t\t\tthis._currentResolveCodeLensSymbolsPromise = null;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst toResolve: ICodeLensData[][] = [];\n\t\tconst lenses: CodeLens[] = [];\n\t\tthis._lenses.forEach((lens) => {\n\t\t\tconst request = lens.computeIfNecessary(model);\n\t\t\tif (request) {\n\t\t\t\ttoResolve.push(request);\n\t\t\t\tlenses.push(lens);\n\t\t\t}\n\t\t});\n\n\t\tif (toResolve.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currentResolveCodeLensSymbolsPromise = createCancelablePromise(token => {\n\n\t\t\tconst promises = toResolve.map((request, i) => {\n\n\t\t\t\tconst resolvedSymbols = new Array<ICodeLensSymbol | undefined | null>(request.length);\n\t\t\t\tconst promises = request.map((request, i) => {\n\t\t\t\t\tif (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n\t\t\t\t\t\treturn Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n\t\t\t\t\t\t\tresolvedSymbols[i] = symbol;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolvedSymbols[i] = request.symbol;\n\t\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(promises).then(() => {\n\t\t\t\t\tlenses[i].updateCommands(resolvedSymbols);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn Promise.all(promises);\n\t\t});\n\n\t\tthis._currentResolveCodeLensSymbolsPromise.then(() => {\n\t\t\tthis._currentResolveCodeLensSymbolsPromise = null;\n\t\t}).catch(err => {\n\t\t\tthis._currentResolveCodeLensSymbolsPromise = null;\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t}\n}\n\nregisterEditorContribution(CodeLensContribution);\n"]}]}