{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/keyboardEvent.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/keyboardEvent.ts","mtime":1555846338024},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browser = require(\"vs/base/browser/browser\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar KEY_CODE_MAP = new Array(230);\nvar INVERSE_KEY_CODE_MAP = new Array(keyCodes_1.KeyCode.MAX_VALUE);\n(function () {\n    for (var i = 0; i < INVERSE_KEY_CODE_MAP.length; i++) {\n        INVERSE_KEY_CODE_MAP[i] = -1;\n    }\n    function define(code, keyCode) {\n        KEY_CODE_MAP[code] = keyCode;\n        INVERSE_KEY_CODE_MAP[keyCode] = code;\n    }\n    define(3, keyCodes_1.KeyCode.PauseBreak); // VK_CANCEL 0x03 Control-break processing\n    define(8, keyCodes_1.KeyCode.Backspace);\n    define(9, keyCodes_1.KeyCode.Tab);\n    define(13, keyCodes_1.KeyCode.Enter);\n    define(16, keyCodes_1.KeyCode.Shift);\n    define(17, keyCodes_1.KeyCode.Ctrl);\n    define(18, keyCodes_1.KeyCode.Alt);\n    define(19, keyCodes_1.KeyCode.PauseBreak);\n    define(20, keyCodes_1.KeyCode.CapsLock);\n    define(27, keyCodes_1.KeyCode.Escape);\n    define(32, keyCodes_1.KeyCode.Space);\n    define(33, keyCodes_1.KeyCode.PageUp);\n    define(34, keyCodes_1.KeyCode.PageDown);\n    define(35, keyCodes_1.KeyCode.End);\n    define(36, keyCodes_1.KeyCode.Home);\n    define(37, keyCodes_1.KeyCode.LeftArrow);\n    define(38, keyCodes_1.KeyCode.UpArrow);\n    define(39, keyCodes_1.KeyCode.RightArrow);\n    define(40, keyCodes_1.KeyCode.DownArrow);\n    define(45, keyCodes_1.KeyCode.Insert);\n    define(46, keyCodes_1.KeyCode.Delete);\n    define(48, keyCodes_1.KeyCode.KEY_0);\n    define(49, keyCodes_1.KeyCode.KEY_1);\n    define(50, keyCodes_1.KeyCode.KEY_2);\n    define(51, keyCodes_1.KeyCode.KEY_3);\n    define(52, keyCodes_1.KeyCode.KEY_4);\n    define(53, keyCodes_1.KeyCode.KEY_5);\n    define(54, keyCodes_1.KeyCode.KEY_6);\n    define(55, keyCodes_1.KeyCode.KEY_7);\n    define(56, keyCodes_1.KeyCode.KEY_8);\n    define(57, keyCodes_1.KeyCode.KEY_9);\n    define(65, keyCodes_1.KeyCode.KEY_A);\n    define(66, keyCodes_1.KeyCode.KEY_B);\n    define(67, keyCodes_1.KeyCode.KEY_C);\n    define(68, keyCodes_1.KeyCode.KEY_D);\n    define(69, keyCodes_1.KeyCode.KEY_E);\n    define(70, keyCodes_1.KeyCode.KEY_F);\n    define(71, keyCodes_1.KeyCode.KEY_G);\n    define(72, keyCodes_1.KeyCode.KEY_H);\n    define(73, keyCodes_1.KeyCode.KEY_I);\n    define(74, keyCodes_1.KeyCode.KEY_J);\n    define(75, keyCodes_1.KeyCode.KEY_K);\n    define(76, keyCodes_1.KeyCode.KEY_L);\n    define(77, keyCodes_1.KeyCode.KEY_M);\n    define(78, keyCodes_1.KeyCode.KEY_N);\n    define(79, keyCodes_1.KeyCode.KEY_O);\n    define(80, keyCodes_1.KeyCode.KEY_P);\n    define(81, keyCodes_1.KeyCode.KEY_Q);\n    define(82, keyCodes_1.KeyCode.KEY_R);\n    define(83, keyCodes_1.KeyCode.KEY_S);\n    define(84, keyCodes_1.KeyCode.KEY_T);\n    define(85, keyCodes_1.KeyCode.KEY_U);\n    define(86, keyCodes_1.KeyCode.KEY_V);\n    define(87, keyCodes_1.KeyCode.KEY_W);\n    define(88, keyCodes_1.KeyCode.KEY_X);\n    define(89, keyCodes_1.KeyCode.KEY_Y);\n    define(90, keyCodes_1.KeyCode.KEY_Z);\n    define(93, keyCodes_1.KeyCode.ContextMenu);\n    define(96, keyCodes_1.KeyCode.NUMPAD_0);\n    define(97, keyCodes_1.KeyCode.NUMPAD_1);\n    define(98, keyCodes_1.KeyCode.NUMPAD_2);\n    define(99, keyCodes_1.KeyCode.NUMPAD_3);\n    define(100, keyCodes_1.KeyCode.NUMPAD_4);\n    define(101, keyCodes_1.KeyCode.NUMPAD_5);\n    define(102, keyCodes_1.KeyCode.NUMPAD_6);\n    define(103, keyCodes_1.KeyCode.NUMPAD_7);\n    define(104, keyCodes_1.KeyCode.NUMPAD_8);\n    define(105, keyCodes_1.KeyCode.NUMPAD_9);\n    define(106, keyCodes_1.KeyCode.NUMPAD_MULTIPLY);\n    define(107, keyCodes_1.KeyCode.NUMPAD_ADD);\n    define(108, keyCodes_1.KeyCode.NUMPAD_SEPARATOR);\n    define(109, keyCodes_1.KeyCode.NUMPAD_SUBTRACT);\n    define(110, keyCodes_1.KeyCode.NUMPAD_DECIMAL);\n    define(111, keyCodes_1.KeyCode.NUMPAD_DIVIDE);\n    define(112, keyCodes_1.KeyCode.F1);\n    define(113, keyCodes_1.KeyCode.F2);\n    define(114, keyCodes_1.KeyCode.F3);\n    define(115, keyCodes_1.KeyCode.F4);\n    define(116, keyCodes_1.KeyCode.F5);\n    define(117, keyCodes_1.KeyCode.F6);\n    define(118, keyCodes_1.KeyCode.F7);\n    define(119, keyCodes_1.KeyCode.F8);\n    define(120, keyCodes_1.KeyCode.F9);\n    define(121, keyCodes_1.KeyCode.F10);\n    define(122, keyCodes_1.KeyCode.F11);\n    define(123, keyCodes_1.KeyCode.F12);\n    define(124, keyCodes_1.KeyCode.F13);\n    define(125, keyCodes_1.KeyCode.F14);\n    define(126, keyCodes_1.KeyCode.F15);\n    define(127, keyCodes_1.KeyCode.F16);\n    define(128, keyCodes_1.KeyCode.F17);\n    define(129, keyCodes_1.KeyCode.F18);\n    define(130, keyCodes_1.KeyCode.F19);\n    define(144, keyCodes_1.KeyCode.NumLock);\n    define(145, keyCodes_1.KeyCode.ScrollLock);\n    define(186, keyCodes_1.KeyCode.US_SEMICOLON);\n    define(187, keyCodes_1.KeyCode.US_EQUAL);\n    define(188, keyCodes_1.KeyCode.US_COMMA);\n    define(189, keyCodes_1.KeyCode.US_MINUS);\n    define(190, keyCodes_1.KeyCode.US_DOT);\n    define(191, keyCodes_1.KeyCode.US_SLASH);\n    define(192, keyCodes_1.KeyCode.US_BACKTICK);\n    define(193, keyCodes_1.KeyCode.ABNT_C1);\n    define(194, keyCodes_1.KeyCode.ABNT_C2);\n    define(219, keyCodes_1.KeyCode.US_OPEN_SQUARE_BRACKET);\n    define(220, keyCodes_1.KeyCode.US_BACKSLASH);\n    define(221, keyCodes_1.KeyCode.US_CLOSE_SQUARE_BRACKET);\n    define(222, keyCodes_1.KeyCode.US_QUOTE);\n    define(223, keyCodes_1.KeyCode.OEM_8);\n    define(226, keyCodes_1.KeyCode.OEM_102);\n    /**\n     * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n     * If an Input Method Editor is processing key input and the event is keydown, return 229.\n     */\n    define(229, keyCodes_1.KeyCode.KEY_IN_COMPOSITION);\n    if (browser.isIE) {\n        define(91, keyCodes_1.KeyCode.Meta);\n    }\n    else if (browser.isFirefox) {\n        define(59, keyCodes_1.KeyCode.US_SEMICOLON);\n        define(107, keyCodes_1.KeyCode.US_EQUAL);\n        define(109, keyCodes_1.KeyCode.US_MINUS);\n        if (browser.isMacintosh) {\n            define(224, keyCodes_1.KeyCode.Meta);\n        }\n    }\n    else if (browser.isWebKit) {\n        define(91, keyCodes_1.KeyCode.Meta);\n        if (browser.isMacintosh) {\n            // the two meta keys in the Mac have different key codes (91 and 93)\n            define(93, keyCodes_1.KeyCode.Meta);\n        }\n        else {\n            define(92, keyCodes_1.KeyCode.Meta);\n        }\n    }\n})();\nfunction extractKeyCode(e) {\n    if (e.charCode) {\n        // \"keypress\" events mostly\n        var char = String.fromCharCode(e.charCode).toUpperCase();\n        return keyCodes_1.KeyCodeUtils.fromString(char);\n    }\n    return KEY_CODE_MAP[e.keyCode] || keyCodes_1.KeyCode.Unknown;\n}\nfunction getCodeForKeyCode(keyCode) {\n    return INVERSE_KEY_CODE_MAP[keyCode];\n}\nexports.getCodeForKeyCode = getCodeForKeyCode;\nvar ctrlKeyMod = (browser.isMacintosh ? keyCodes_1.KeyMod.WinCtrl : keyCodes_1.KeyMod.CtrlCmd);\nvar altKeyMod = keyCodes_1.KeyMod.Alt;\nvar shiftKeyMod = keyCodes_1.KeyMod.Shift;\nvar metaKeyMod = (browser.isMacintosh ? keyCodes_1.KeyMod.CtrlCmd : keyCodes_1.KeyMod.WinCtrl);\nvar StandardKeyboardEvent = /** @class */ (function () {\n    function StandardKeyboardEvent(source) {\n        this._standardKeyboardEventBrand = true;\n        var e = source;\n        this.browserEvent = e;\n        this.target = e.target;\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        this.keyCode = extractKeyCode(e);\n        this.code = e.code;\n        // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n        this.ctrlKey = this.ctrlKey || this.keyCode === keyCodes_1.KeyCode.Ctrl;\n        this.altKey = this.altKey || this.keyCode === keyCodes_1.KeyCode.Alt;\n        this.shiftKey = this.shiftKey || this.keyCode === keyCodes_1.KeyCode.Shift;\n        this.metaKey = this.metaKey || this.keyCode === keyCodes_1.KeyCode.Meta;\n        this._asKeybinding = this._computeKeybinding();\n        this._asRuntimeKeybinding = this._computeRuntimeKeybinding();\n        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n    }\n    StandardKeyboardEvent.prototype.preventDefault = function () {\n        if (this.browserEvent && this.browserEvent.preventDefault) {\n            this.browserEvent.preventDefault();\n        }\n    };\n    StandardKeyboardEvent.prototype.stopPropagation = function () {\n        if (this.browserEvent && this.browserEvent.stopPropagation) {\n            this.browserEvent.stopPropagation();\n        }\n    };\n    StandardKeyboardEvent.prototype.toKeybinding = function () {\n        return this._asRuntimeKeybinding;\n    };\n    StandardKeyboardEvent.prototype.equals = function (other) {\n        return this._asKeybinding === other;\n    };\n    StandardKeyboardEvent.prototype._computeKeybinding = function () {\n        var key = keyCodes_1.KeyCode.Unknown;\n        if (this.keyCode !== keyCodes_1.KeyCode.Ctrl && this.keyCode !== keyCodes_1.KeyCode.Shift && this.keyCode !== keyCodes_1.KeyCode.Alt && this.keyCode !== keyCodes_1.KeyCode.Meta) {\n            key = this.keyCode;\n        }\n        var result = 0;\n        if (this.ctrlKey) {\n            result |= ctrlKeyMod;\n        }\n        if (this.altKey) {\n            result |= altKeyMod;\n        }\n        if (this.shiftKey) {\n            result |= shiftKeyMod;\n        }\n        if (this.metaKey) {\n            result |= metaKeyMod;\n        }\n        result |= key;\n        return result;\n    };\n    StandardKeyboardEvent.prototype._computeRuntimeKeybinding = function () {\n        var key = keyCodes_1.KeyCode.Unknown;\n        if (this.keyCode !== keyCodes_1.KeyCode.Ctrl && this.keyCode !== keyCodes_1.KeyCode.Shift && this.keyCode !== keyCodes_1.KeyCode.Alt && this.keyCode !== keyCodes_1.KeyCode.Meta) {\n            key = this.keyCode;\n        }\n        return new keyCodes_1.SimpleKeybinding(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n    };\n    return StandardKeyboardEvent;\n}());\nexports.StandardKeyboardEvent = StandardKeyboardEvent;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/keyboardEvent.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/keyboardEvent.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from 'vs/base/browser/browser';\nimport { KeyCode, KeyCodeUtils, KeyMod, SimpleKeybinding } from 'vs/base/common/keyCodes';\nimport * as platform from 'vs/base/common/platform';\n\nlet KEY_CODE_MAP: { [keyCode: number]: KeyCode } = new Array(230);\nlet INVERSE_KEY_CODE_MAP: KeyCode[] = new Array(KeyCode.MAX_VALUE);\n\n(function () {\n\tfor (let i = 0; i < INVERSE_KEY_CODE_MAP.length; i++) {\n\t\tINVERSE_KEY_CODE_MAP[i] = -1;\n\t}\n\n\tfunction define(code: number, keyCode: KeyCode): void {\n\t\tKEY_CODE_MAP[code] = keyCode;\n\t\tINVERSE_KEY_CODE_MAP[keyCode] = code;\n\t}\n\n\tdefine(3, KeyCode.PauseBreak); // VK_CANCEL 0x03 Control-break processing\n\tdefine(8, KeyCode.Backspace);\n\tdefine(9, KeyCode.Tab);\n\tdefine(13, KeyCode.Enter);\n\tdefine(16, KeyCode.Shift);\n\tdefine(17, KeyCode.Ctrl);\n\tdefine(18, KeyCode.Alt);\n\tdefine(19, KeyCode.PauseBreak);\n\tdefine(20, KeyCode.CapsLock);\n\tdefine(27, KeyCode.Escape);\n\tdefine(32, KeyCode.Space);\n\tdefine(33, KeyCode.PageUp);\n\tdefine(34, KeyCode.PageDown);\n\tdefine(35, KeyCode.End);\n\tdefine(36, KeyCode.Home);\n\tdefine(37, KeyCode.LeftArrow);\n\tdefine(38, KeyCode.UpArrow);\n\tdefine(39, KeyCode.RightArrow);\n\tdefine(40, KeyCode.DownArrow);\n\tdefine(45, KeyCode.Insert);\n\tdefine(46, KeyCode.Delete);\n\n\tdefine(48, KeyCode.KEY_0);\n\tdefine(49, KeyCode.KEY_1);\n\tdefine(50, KeyCode.KEY_2);\n\tdefine(51, KeyCode.KEY_3);\n\tdefine(52, KeyCode.KEY_4);\n\tdefine(53, KeyCode.KEY_5);\n\tdefine(54, KeyCode.KEY_6);\n\tdefine(55, KeyCode.KEY_7);\n\tdefine(56, KeyCode.KEY_8);\n\tdefine(57, KeyCode.KEY_9);\n\n\tdefine(65, KeyCode.KEY_A);\n\tdefine(66, KeyCode.KEY_B);\n\tdefine(67, KeyCode.KEY_C);\n\tdefine(68, KeyCode.KEY_D);\n\tdefine(69, KeyCode.KEY_E);\n\tdefine(70, KeyCode.KEY_F);\n\tdefine(71, KeyCode.KEY_G);\n\tdefine(72, KeyCode.KEY_H);\n\tdefine(73, KeyCode.KEY_I);\n\tdefine(74, KeyCode.KEY_J);\n\tdefine(75, KeyCode.KEY_K);\n\tdefine(76, KeyCode.KEY_L);\n\tdefine(77, KeyCode.KEY_M);\n\tdefine(78, KeyCode.KEY_N);\n\tdefine(79, KeyCode.KEY_O);\n\tdefine(80, KeyCode.KEY_P);\n\tdefine(81, KeyCode.KEY_Q);\n\tdefine(82, KeyCode.KEY_R);\n\tdefine(83, KeyCode.KEY_S);\n\tdefine(84, KeyCode.KEY_T);\n\tdefine(85, KeyCode.KEY_U);\n\tdefine(86, KeyCode.KEY_V);\n\tdefine(87, KeyCode.KEY_W);\n\tdefine(88, KeyCode.KEY_X);\n\tdefine(89, KeyCode.KEY_Y);\n\tdefine(90, KeyCode.KEY_Z);\n\n\tdefine(93, KeyCode.ContextMenu);\n\n\tdefine(96, KeyCode.NUMPAD_0);\n\tdefine(97, KeyCode.NUMPAD_1);\n\tdefine(98, KeyCode.NUMPAD_2);\n\tdefine(99, KeyCode.NUMPAD_3);\n\tdefine(100, KeyCode.NUMPAD_4);\n\tdefine(101, KeyCode.NUMPAD_5);\n\tdefine(102, KeyCode.NUMPAD_6);\n\tdefine(103, KeyCode.NUMPAD_7);\n\tdefine(104, KeyCode.NUMPAD_8);\n\tdefine(105, KeyCode.NUMPAD_9);\n\tdefine(106, KeyCode.NUMPAD_MULTIPLY);\n\tdefine(107, KeyCode.NUMPAD_ADD);\n\tdefine(108, KeyCode.NUMPAD_SEPARATOR);\n\tdefine(109, KeyCode.NUMPAD_SUBTRACT);\n\tdefine(110, KeyCode.NUMPAD_DECIMAL);\n\tdefine(111, KeyCode.NUMPAD_DIVIDE);\n\n\tdefine(112, KeyCode.F1);\n\tdefine(113, KeyCode.F2);\n\tdefine(114, KeyCode.F3);\n\tdefine(115, KeyCode.F4);\n\tdefine(116, KeyCode.F5);\n\tdefine(117, KeyCode.F6);\n\tdefine(118, KeyCode.F7);\n\tdefine(119, KeyCode.F8);\n\tdefine(120, KeyCode.F9);\n\tdefine(121, KeyCode.F10);\n\tdefine(122, KeyCode.F11);\n\tdefine(123, KeyCode.F12);\n\tdefine(124, KeyCode.F13);\n\tdefine(125, KeyCode.F14);\n\tdefine(126, KeyCode.F15);\n\tdefine(127, KeyCode.F16);\n\tdefine(128, KeyCode.F17);\n\tdefine(129, KeyCode.F18);\n\tdefine(130, KeyCode.F19);\n\n\tdefine(144, KeyCode.NumLock);\n\tdefine(145, KeyCode.ScrollLock);\n\n\tdefine(186, KeyCode.US_SEMICOLON);\n\tdefine(187, KeyCode.US_EQUAL);\n\tdefine(188, KeyCode.US_COMMA);\n\tdefine(189, KeyCode.US_MINUS);\n\tdefine(190, KeyCode.US_DOT);\n\tdefine(191, KeyCode.US_SLASH);\n\tdefine(192, KeyCode.US_BACKTICK);\n\tdefine(193, KeyCode.ABNT_C1);\n\tdefine(194, KeyCode.ABNT_C2);\n\tdefine(219, KeyCode.US_OPEN_SQUARE_BRACKET);\n\tdefine(220, KeyCode.US_BACKSLASH);\n\tdefine(221, KeyCode.US_CLOSE_SQUARE_BRACKET);\n\tdefine(222, KeyCode.US_QUOTE);\n\tdefine(223, KeyCode.OEM_8);\n\n\tdefine(226, KeyCode.OEM_102);\n\n\t/**\n\t * https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n\t * If an Input Method Editor is processing key input and the event is keydown, return 229.\n\t */\n\tdefine(229, KeyCode.KEY_IN_COMPOSITION);\n\n\tif (browser.isIE) {\n\t\tdefine(91, KeyCode.Meta);\n\t} else if (browser.isFirefox) {\n\t\tdefine(59, KeyCode.US_SEMICOLON);\n\t\tdefine(107, KeyCode.US_EQUAL);\n\t\tdefine(109, KeyCode.US_MINUS);\n\t\tif (browser.isMacintosh) {\n\t\t\tdefine(224, KeyCode.Meta);\n\t\t}\n\t} else if (browser.isWebKit) {\n\t\tdefine(91, KeyCode.Meta);\n\t\tif (browser.isMacintosh) {\n\t\t\t// the two meta keys in the Mac have different key codes (91 and 93)\n\t\t\tdefine(93, KeyCode.Meta);\n\t\t} else {\n\t\t\tdefine(92, KeyCode.Meta);\n\t\t}\n\t}\n})();\n\nfunction extractKeyCode(e: KeyboardEvent): KeyCode {\n\tif (e.charCode) {\n\t\t// \"keypress\" events mostly\n\t\tlet char = String.fromCharCode(e.charCode).toUpperCase();\n\t\treturn KeyCodeUtils.fromString(char);\n\t}\n\treturn KEY_CODE_MAP[e.keyCode] || KeyCode.Unknown;\n}\n\nexport function getCodeForKeyCode(keyCode: KeyCode): number {\n\treturn INVERSE_KEY_CODE_MAP[keyCode];\n}\n\nexport interface IKeyboardEvent {\n\n\treadonly _standardKeyboardEventBrand: true;\n\n\treadonly browserEvent: KeyboardEvent;\n\treadonly target: HTMLElement;\n\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\treadonly keyCode: KeyCode;\n\treadonly code: string;\n\n\t/**\n\t * @internal\n\t */\n\ttoKeybinding(): SimpleKeybinding;\n\tequals(keybinding: number): boolean;\n\n\tpreventDefault(): void;\n\tstopPropagation(): void;\n}\n\nconst ctrlKeyMod = (browser.isMacintosh ? KeyMod.WinCtrl : KeyMod.CtrlCmd);\nconst altKeyMod = KeyMod.Alt;\nconst shiftKeyMod = KeyMod.Shift;\nconst metaKeyMod = (browser.isMacintosh ? KeyMod.CtrlCmd : KeyMod.WinCtrl);\n\nexport class StandardKeyboardEvent implements IKeyboardEvent {\n\n\treadonly _standardKeyboardEventBrand = true;\n\n\tpublic readonly browserEvent: KeyboardEvent;\n\tpublic readonly target: HTMLElement;\n\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\tpublic readonly code: string;\n\n\tprivate _asKeybinding: number;\n\tprivate _asRuntimeKeybinding: SimpleKeybinding;\n\n\tconstructor(source: KeyboardEvent) {\n\t\tlet e = source;\n\n\t\tthis.browserEvent = e;\n\t\tthis.target = <HTMLElement>e.target;\n\n\t\tthis.ctrlKey = e.ctrlKey;\n\t\tthis.shiftKey = e.shiftKey;\n\t\tthis.altKey = e.altKey;\n\t\tthis.metaKey = e.metaKey;\n\t\tthis.keyCode = extractKeyCode(e);\n\t\tthis.code = e.code;\n\n\t\t// console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n\n\t\tthis.ctrlKey = this.ctrlKey || this.keyCode === KeyCode.Ctrl;\n\t\tthis.altKey = this.altKey || this.keyCode === KeyCode.Alt;\n\t\tthis.shiftKey = this.shiftKey || this.keyCode === KeyCode.Shift;\n\t\tthis.metaKey = this.metaKey || this.keyCode === KeyCode.Meta;\n\n\t\tthis._asKeybinding = this._computeKeybinding();\n\t\tthis._asRuntimeKeybinding = this._computeRuntimeKeybinding();\n\n\t\t// console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n\t}\n\n\tpublic preventDefault(): void {\n\t\tif (this.browserEvent && this.browserEvent.preventDefault) {\n\t\t\tthis.browserEvent.preventDefault();\n\t\t}\n\t}\n\n\tpublic stopPropagation(): void {\n\t\tif (this.browserEvent && this.browserEvent.stopPropagation) {\n\t\t\tthis.browserEvent.stopPropagation();\n\t\t}\n\t}\n\n\tpublic toKeybinding(): SimpleKeybinding {\n\t\treturn this._asRuntimeKeybinding;\n\t}\n\n\tpublic equals(other: number): boolean {\n\t\treturn this._asKeybinding === other;\n\t}\n\n\tprivate _computeKeybinding(): number {\n\t\tlet key = KeyCode.Unknown;\n\t\tif (this.keyCode !== KeyCode.Ctrl && this.keyCode !== KeyCode.Shift && this.keyCode !== KeyCode.Alt && this.keyCode !== KeyCode.Meta) {\n\t\t\tkey = this.keyCode;\n\t\t}\n\n\t\tlet result = 0;\n\t\tif (this.ctrlKey) {\n\t\t\tresult |= ctrlKeyMod;\n\t\t}\n\t\tif (this.altKey) {\n\t\t\tresult |= altKeyMod;\n\t\t}\n\t\tif (this.shiftKey) {\n\t\t\tresult |= shiftKeyMod;\n\t\t}\n\t\tif (this.metaKey) {\n\t\t\tresult |= metaKeyMod;\n\t\t}\n\t\tresult |= key;\n\n\t\treturn result;\n\t}\n\n\tprivate _computeRuntimeKeybinding(): SimpleKeybinding {\n\t\tlet key = KeyCode.Unknown;\n\t\tif (this.keyCode !== KeyCode.Ctrl && this.keyCode !== KeyCode.Shift && this.keyCode !== KeyCode.Alt && this.keyCode !== KeyCode.Meta) {\n\t\t\tkey = this.keyCode;\n\t\t}\n\t\treturn new SimpleKeybinding(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n\t}\n}\n"]}]}