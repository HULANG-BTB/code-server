{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadEditors.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadEditors.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar bulkEditService_1 = require(\"vs/editor/browser/services/bulkEditService\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar editor_1 = require(\"vs/workbench/api/common/shared/editor\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar MainThreadTextEditors = /** @class */ (function () {\n    function MainThreadTextEditors(documentsAndEditors, extHostContext, _codeEditorService, _bulkEditService, _editorService, _editorGroupService) {\n        var _this = this;\n        this._codeEditorService = _codeEditorService;\n        this._bulkEditService = _bulkEditService;\n        this._editorService = _editorService;\n        this._editorGroupService = _editorGroupService;\n        this._instanceId = String(++MainThreadTextEditors.INSTANCE_COUNT);\n        this._proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostEditors);\n        this._documentsAndEditors = documentsAndEditors;\n        this._toDispose = [];\n        this._textEditorsListenersMap = Object.create(null);\n        this._editorPositionData = null;\n        this._toDispose.push(documentsAndEditors.onTextEditorAdd(function (editors) { return editors.forEach(_this._onTextEditorAdd, _this); }));\n        this._toDispose.push(documentsAndEditors.onTextEditorRemove(function (editors) { return editors.forEach(_this._onTextEditorRemove, _this); }));\n        this._toDispose.push(this._editorService.onDidVisibleEditorsChange(function () { return _this._updateActiveAndVisibleTextEditors(); }));\n        this._toDispose.push(this._editorGroupService.onDidRemoveGroup(function () { return _this._updateActiveAndVisibleTextEditors(); }));\n        this._toDispose.push(this._editorGroupService.onDidMoveGroup(function () { return _this._updateActiveAndVisibleTextEditors(); }));\n        this._registeredDecorationTypes = Object.create(null);\n    }\n    MainThreadTextEditors.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this._textEditorsListenersMap).forEach(function (editorId) {\n            lifecycle_1.dispose(_this._textEditorsListenersMap[editorId]);\n        });\n        this._textEditorsListenersMap = Object.create(null);\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n        for (var decorationType in this._registeredDecorationTypes) {\n            this._codeEditorService.removeDecorationType(decorationType);\n        }\n        this._registeredDecorationTypes = Object.create(null);\n    };\n    MainThreadTextEditors.prototype._onTextEditorAdd = function (textEditor) {\n        var _this = this;\n        var id = textEditor.getId();\n        var toDispose = [];\n        toDispose.push(textEditor.onPropertiesChanged(function (data) {\n            _this._proxy.$acceptEditorPropertiesChanged(id, data);\n        }));\n        this._textEditorsListenersMap[id] = toDispose;\n    };\n    MainThreadTextEditors.prototype._onTextEditorRemove = function (id) {\n        lifecycle_1.dispose(this._textEditorsListenersMap[id]);\n        delete this._textEditorsListenersMap[id];\n    };\n    MainThreadTextEditors.prototype._updateActiveAndVisibleTextEditors = function () {\n        // editor columns\n        var editorPositionData = this._getTextEditorPositionData();\n        if (!objects_1.equals(this._editorPositionData, editorPositionData)) {\n            this._editorPositionData = editorPositionData;\n            this._proxy.$acceptEditorPositionData(this._editorPositionData);\n        }\n    };\n    MainThreadTextEditors.prototype._getTextEditorPositionData = function () {\n        var result = Object.create(null);\n        for (var _i = 0, _a = this._editorService.visibleControls; _i < _a.length; _i++) {\n            var workbenchEditor = _a[_i];\n            var id = this._documentsAndEditors.findTextEditorIdFor(workbenchEditor);\n            if (id) {\n                result[id] = editor_1.editorGroupToViewColumn(this._editorGroupService, workbenchEditor.group);\n            }\n        }\n        return result;\n    };\n    // --- from extension host process\n    MainThreadTextEditors.prototype.$tryShowTextDocument = function (resource, options) {\n        var _this = this;\n        var uri = uri_1.URI.revive(resource);\n        var editorOptions = {\n            preserveFocus: options.preserveFocus,\n            pinned: options.pinned,\n            selection: options.selection\n        };\n        var input = {\n            resource: uri,\n            options: editorOptions\n        };\n        return this._editorService.openEditor(input, editor_1.viewColumnToEditorGroup(this._editorGroupService, options.position)).then(function (editor) {\n            if (!editor) {\n                return undefined;\n            }\n            return _this._documentsAndEditors.findTextEditorIdFor(editor);\n        });\n    };\n    MainThreadTextEditors.prototype.$tryShowEditor = function (id, position) {\n        var mainThreadEditor = this._documentsAndEditors.getEditor(id);\n        if (mainThreadEditor) {\n            var model = mainThreadEditor.getModel();\n            return this._editorService.openEditor({\n                resource: model.uri,\n                options: { preserveFocus: false }\n            }, editor_1.viewColumnToEditorGroup(this._editorGroupService, position)).then(function () { return; });\n        }\n        return Promise.resolve();\n    };\n    MainThreadTextEditors.prototype.$tryHideEditor = function (id) {\n        var mainThreadEditor = this._documentsAndEditors.getEditor(id);\n        if (mainThreadEditor) {\n            var editors = this._editorService.visibleControls;\n            for (var _i = 0, editors_1 = editors; _i < editors_1.length; _i++) {\n                var editor = editors_1[_i];\n                if (mainThreadEditor.matches(editor)) {\n                    return editor.group.closeEditor(editor.input).then(function () { return; });\n                }\n            }\n        }\n        return Promise.resolve();\n    };\n    MainThreadTextEditors.prototype.$trySetSelections = function (id, selections) {\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        this._documentsAndEditors.getEditor(id).setSelections(selections);\n        return Promise.resolve(undefined);\n    };\n    MainThreadTextEditors.prototype.$trySetDecorations = function (id, key, ranges) {\n        key = this._instanceId + \"-\" + key;\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        this._documentsAndEditors.getEditor(id).setDecorations(key, ranges);\n        return Promise.resolve(undefined);\n    };\n    MainThreadTextEditors.prototype.$trySetDecorationsFast = function (id, key, ranges) {\n        key = this._instanceId + \"-\" + key;\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        this._documentsAndEditors.getEditor(id).setDecorationsFast(key, ranges);\n        return Promise.resolve(undefined);\n    };\n    MainThreadTextEditors.prototype.$tryRevealRange = function (id, range, revealType) {\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        this._documentsAndEditors.getEditor(id).revealRange(range, revealType);\n        return Promise.resolve();\n    };\n    MainThreadTextEditors.prototype.$trySetOptions = function (id, options) {\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        this._documentsAndEditors.getEditor(id).setConfiguration(options);\n        return Promise.resolve(undefined);\n    };\n    MainThreadTextEditors.prototype.$tryApplyEdits = function (id, modelVersionId, edits, opts) {\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        return Promise.resolve(this._documentsAndEditors.getEditor(id).applyEdits(modelVersionId, edits, opts));\n    };\n    MainThreadTextEditors.prototype.$tryApplyWorkspaceEdit = function (dto) {\n        var edits = extHost_protocol_1.reviveWorkspaceEditDto(dto).edits;\n        return this._bulkEditService.apply({ edits: edits }, undefined).then(function () { return true; }, function (err) { return false; });\n    };\n    MainThreadTextEditors.prototype.$tryInsertSnippet = function (id, template, ranges, opts) {\n        if (!this._documentsAndEditors.getEditor(id)) {\n            return Promise.reject(errors_1.disposed(\"TextEditor(\" + id + \")\"));\n        }\n        return Promise.resolve(this._documentsAndEditors.getEditor(id).insertSnippet(template, ranges, opts));\n    };\n    MainThreadTextEditors.prototype.$registerTextEditorDecorationType = function (key, options) {\n        key = this._instanceId + \"-\" + key;\n        this._registeredDecorationTypes[key] = true;\n        this._codeEditorService.registerDecorationType(key, options);\n    };\n    MainThreadTextEditors.prototype.$removeTextEditorDecorationType = function (key) {\n        key = this._instanceId + \"-\" + key;\n        delete this._registeredDecorationTypes[key];\n        this._codeEditorService.removeDecorationType(key);\n    };\n    MainThreadTextEditors.prototype.$getDiffInformation = function (id) {\n        var editor = this._documentsAndEditors.getEditor(id);\n        if (!editor) {\n            return Promise.reject(new Error('No such TextEditor'));\n        }\n        var codeEditor = editor.getCodeEditor();\n        if (!codeEditor) {\n            return Promise.reject(new Error('No such CodeEditor'));\n        }\n        var codeEditorId = codeEditor.getId();\n        var diffEditors = this._codeEditorService.listDiffEditors();\n        var diffEditor = diffEditors.filter(function (d) { return d.getOriginalEditor().getId() === codeEditorId || d.getModifiedEditor().getId() === codeEditorId; })[0];\n        if (diffEditor) {\n            return Promise.resolve(diffEditor.getLineChanges() || []);\n        }\n        var dirtyDiffContribution = codeEditor.getContribution('editor.contrib.dirtydiff');\n        if (dirtyDiffContribution) {\n            return Promise.resolve(dirtyDiffContribution.getChanges());\n        }\n        return Promise.resolve([]);\n    };\n    MainThreadTextEditors.INSTANCE_COUNT = 0;\n    MainThreadTextEditors = tslib_1.__decorate([\n        tslib_1.__param(2, codeEditorService_1.ICodeEditorService),\n        tslib_1.__param(3, bulkEditService_1.IBulkEditService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, editorGroupsService_1.IEditorGroupsService)\n    ], MainThreadTextEditors);\n    return MainThreadTextEditors;\n}());\nexports.MainThreadTextEditors = MainThreadTextEditors;\n// --- commands\ncommands_1.CommandsRegistry.registerCommand('_workbench.open', function (accessor, args) {\n    var editorService = accessor.get(editorService_1.IEditorService);\n    var editorGroupService = accessor.get(editorGroupsService_1.IEditorGroupsService);\n    var openerService = accessor.get(opener_1.IOpenerService);\n    var resource = args[0], options = args[1], position = args[2], label = args[3];\n    if (options || typeof position === 'number') {\n        // use editor options or editor view column as a hint to use the editor service for opening\n        return editorService.openEditor({ resource: resource, options: options, label: label }, editor_1.viewColumnToEditorGroup(editorGroupService, position)).then(function (_) { return undefined; });\n    }\n    if (resource && resource.scheme === 'command') {\n        // do not allow to execute commands from here\n        return Promise.resolve(undefined);\n    }\n    // finally, delegate to opener service\n    return openerService.open(resource).then(function (_) { return undefined; });\n});\ncommands_1.CommandsRegistry.registerCommand('_workbench.diff', function (accessor, args) {\n    var editorService = accessor.get(editorService_1.IEditorService);\n    var editorGroupService = accessor.get(editorGroupsService_1.IEditorGroupsService);\n    var leftResource = args[0], rightResource = args[1], label = args[2], description = args[3], options = args[4], position = args[5];\n    if (!options || typeof options !== 'object') {\n        options = {\n            preserveFocus: false\n        };\n    }\n    if (!label) {\n        label = nls_1.localize('diffLeftRightLabel', \"{0} ⟷ {1}\", leftResource.toString(true), rightResource.toString(true));\n    }\n    return editorService.openEditor({ leftResource: leftResource, rightResource: rightResource, label: label, description: description, options: options }, editor_1.viewColumnToEditorGroup(editorGroupService, position)).then(function () { return undefined; });\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadEditors.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadEditors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { disposed } from 'vs/base/common/errors';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { equals as objectEquals } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IBulkEditService } from 'vs/editor/browser/services/bulkEditService';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ISelection } from 'vs/editor/common/core/selection';\nimport { IDecorationOptions, IDecorationRenderOptions, ILineChange } from 'vs/editor/common/editorCommon';\nimport { ISingleEditOperation } from 'vs/editor/common/model';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IEditorOptions, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { MainThreadDocumentsAndEditors } from 'vs/workbench/api/browser/mainThreadDocumentsAndEditors';\nimport { MainThreadTextEditor } from 'vs/workbench/api/browser/mainThreadEditor';\nimport { ExtHostContext, ExtHostEditorsShape, IApplyEditsOptions, IExtHostContext, ITextDocumentShowOptions, ITextEditorConfigurationUpdate, ITextEditorPositionData, IUndoStopOptions, MainThreadTextEditorsShape, TextEditorRevealType, WorkspaceEditDto, reviveWorkspaceEditDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { EditorViewColumn, editorGroupToViewColumn, viewColumnToEditorGroup } from 'vs/workbench/api/common/shared/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\n\nexport class MainThreadTextEditors implements MainThreadTextEditorsShape {\n\n\tprivate static INSTANCE_COUNT: number = 0;\n\n\tprivate readonly _instanceId: string;\n\tprivate readonly _proxy: ExtHostEditorsShape;\n\tprivate readonly _documentsAndEditors: MainThreadDocumentsAndEditors;\n\tprivate _toDispose: IDisposable[];\n\tprivate _textEditorsListenersMap: { [editorId: string]: IDisposable[]; };\n\tprivate _editorPositionData: ITextEditorPositionData | null;\n\tprivate _registeredDecorationTypes: { [decorationType: string]: boolean; };\n\n\tconstructor(\n\t\tdocumentsAndEditors: MainThreadDocumentsAndEditors,\n\t\textHostContext: IExtHostContext,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService\n\t) {\n\t\tthis._instanceId = String(++MainThreadTextEditors.INSTANCE_COUNT);\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostEditors);\n\t\tthis._documentsAndEditors = documentsAndEditors;\n\t\tthis._toDispose = [];\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._editorPositionData = null;\n\n\t\tthis._toDispose.push(documentsAndEditors.onTextEditorAdd(editors => editors.forEach(this._onTextEditorAdd, this)));\n\t\tthis._toDispose.push(documentsAndEditors.onTextEditorRemove(editors => editors.forEach(this._onTextEditorRemove, this)));\n\n\t\tthis._toDispose.push(this._editorService.onDidVisibleEditorsChange(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(this._editorGroupService.onDidRemoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(this._editorGroupService.onDidMoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdispose(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose = dispose(this._toDispose);\n\t\tfor (let decorationType in this._registeredDecorationTypes) {\n\t\t\tthis._codeEditorService.removeDecorationType(decorationType);\n\t\t}\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\tprivate _onTextEditorAdd(textEditor: MainThreadTextEditor): void {\n\t\tconst id = textEditor.getId();\n\t\tconst toDispose: IDisposable[] = [];\n\t\ttoDispose.push(textEditor.onPropertiesChanged((data) => {\n\t\t\tthis._proxy.$acceptEditorPropertiesChanged(id, data);\n\t\t}));\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t}\n\n\tprivate _onTextEditorRemove(id: string): void {\n\t\tdispose(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\n\t\t// editor columns\n\t\tconst editorPositionData = this._getTextEditorPositionData();\n\t\tif (!objectEquals(this._editorPositionData, editorPositionData)) {\n\t\t\tthis._editorPositionData = editorPositionData;\n\t\t\tthis._proxy.$acceptEditorPositionData(this._editorPositionData);\n\t\t}\n\t}\n\n\tprivate _getTextEditorPositionData(): ITextEditorPositionData {\n\t\tconst result: ITextEditorPositionData = Object.create(null);\n\t\tfor (let workbenchEditor of this._editorService.visibleControls) {\n\t\t\tconst id = this._documentsAndEditors.findTextEditorIdFor(workbenchEditor);\n\t\t\tif (id) {\n\t\t\t\tresult[id] = editorGroupToViewColumn(this._editorGroupService, workbenchEditor.group);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- from extension host process\n\n\t$tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined> {\n\t\tconst uri = URI.revive(resource);\n\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\tselection: options.selection\n\t\t};\n\n\t\tconst input = {\n\t\t\tresource: uri,\n\t\t\toptions: editorOptions\n\t\t};\n\n\t\treturn this._editorService.openEditor(input, viewColumnToEditorGroup(this._editorGroupService, options.position)).then(editor => {\n\t\t\tif (!editor) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn this._documentsAndEditors.findTextEditorIdFor(editor);\n\t\t});\n\t}\n\n\t$tryShowEditor(id: string, position?: EditorViewColumn): Promise<void> {\n\t\tconst mainThreadEditor = this._documentsAndEditors.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst model = mainThreadEditor.getModel();\n\t\t\treturn this._editorService.openEditor({\n\t\t\t\tresource: model.uri,\n\t\t\t\toptions: { preserveFocus: false }\n\t\t\t}, viewColumnToEditorGroup(this._editorGroupService, position)).then(() => { return; });\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t$tryHideEditor(id: string): Promise<void> {\n\t\tconst mainThreadEditor = this._documentsAndEditors.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst editors = this._editorService.visibleControls;\n\t\t\tfor (let editor of editors) {\n\t\t\t\tif (mainThreadEditor.matches(editor)) {\n\t\t\t\t\treturn editor.group.closeEditor(editor.input).then(() => { return; });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void> {\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\tthis._documentsAndEditors.getEditor(id).setSelections(selections);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorations(id: string, key: string, ranges: IDecorationOptions[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\tthis._documentsAndEditors.getEditor(id).setDecorations(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\tthis._documentsAndEditors.getEditor(id).setDecorationsFast(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void> {\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\tthis._documentsAndEditors.getEditor(id).revealRange(range, revealType);\n\t\treturn Promise.resolve();\n\t}\n\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void> {\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\tthis._documentsAndEditors.getEditor(id).setConfiguration(options);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean> {\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(this._documentsAndEditors.getEditor(id).applyEdits(modelVersionId, edits, opts));\n\t}\n\n\t$tryApplyWorkspaceEdit(dto: WorkspaceEditDto): Promise<boolean> {\n\t\tconst { edits } = reviveWorkspaceEditDto(dto);\n\t\treturn this._bulkEditService.apply({ edits }, undefined).then(() => true, err => false);\n\t}\n\n\t$tryInsertSnippet(id: string, template: string, ranges: IRange[], opts: IUndoStopOptions): Promise<boolean> {\n\t\tif (!this._documentsAndEditors.getEditor(id)) {\n\t\t\treturn Promise.reject(disposed(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(this._documentsAndEditors.getEditor(id).insertSnippet(template, ranges, opts));\n\t}\n\n\t$registerTextEditorDecorationType(key: string, options: IDecorationRenderOptions): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tthis._registeredDecorationTypes[key] = true;\n\t\tthis._codeEditorService.registerDecorationType(key, options);\n\t}\n\n\t$removeTextEditorDecorationType(key: string): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tdelete this._registeredDecorationTypes[key];\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n\n\t$getDiffInformation(id: string): Promise<ILineChange[]> {\n\t\tconst editor = this._documentsAndEditors.getEditor(id);\n\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(new Error('No such TextEditor'));\n\t\t}\n\n\t\tconst codeEditor = editor.getCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\treturn Promise.reject(new Error('No such CodeEditor'));\n\t\t}\n\n\t\tconst codeEditorId = codeEditor.getId();\n\t\tconst diffEditors = this._codeEditorService.listDiffEditors();\n\t\tconst [diffEditor] = diffEditors.filter(d => d.getOriginalEditor().getId() === codeEditorId || d.getModifiedEditor().getId() === codeEditorId);\n\n\t\tif (diffEditor) {\n\t\t\treturn Promise.resolve(diffEditor.getLineChanges() || []);\n\t\t}\n\n\t\tconst dirtyDiffContribution = codeEditor.getContribution('editor.contrib.dirtydiff');\n\n\t\tif (dirtyDiffContribution) {\n\t\t\treturn Promise.resolve((dirtyDiffContribution as any).getChanges());\n\t\t}\n\n\t\treturn Promise.resolve([]);\n\t}\n}\n\n// --- commands\n\nCommandsRegistry.registerCommand('_workbench.open', function (accessor: ServicesAccessor, args: [URI, IEditorOptions, EditorViewColumn, string?]) {\n\tconst editorService = accessor.get(IEditorService);\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\tconst openerService = accessor.get(IOpenerService);\n\n\tconst [resource, options, position, label] = args;\n\n\tif (options || typeof position === 'number') {\n\t\t// use editor options or editor view column as a hint to use the editor service for opening\n\t\treturn editorService.openEditor({ resource, options, label }, viewColumnToEditorGroup(editorGroupService, position)).then(_ => undefined);\n\t}\n\n\tif (resource && resource.scheme === 'command') {\n\t\t// do not allow to execute commands from here\n\t\treturn Promise.resolve(undefined);\n\n\t}\n\t// finally, delegate to opener service\n\treturn openerService.open(resource).then(_ => undefined);\n});\n\n\nCommandsRegistry.registerCommand('_workbench.diff', function (accessor: ServicesAccessor, args: [URI, URI, string, string, IEditorOptions, EditorViewColumn]) {\n\tconst editorService = accessor.get(IEditorService);\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\tlet [leftResource, rightResource, label, description, options, position] = args;\n\n\tif (!options || typeof options !== 'object') {\n\t\toptions = {\n\t\t\tpreserveFocus: false\n\t\t};\n\t}\n\n\tif (!label) {\n\t\tlabel = localize('diffLeftRightLabel', \"{0} ⟷ {1}\", leftResource.toString(true), rightResource.toString(true));\n\t}\n\n\treturn editorService.openEditor({ leftResource, rightResource, label, description, options }, viewColumnToEditorGroup(editorGroupService, position)).then(() => undefined);\n});\n"]}]}