{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/gotoSymbolHandler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/gotoSymbolHandler.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar _a;\nrequire(\"vs/css!vs/editor/contrib/documentSymbols/media/symbol-icons\");\nvar nls = require(\"vs/nls\");\nvar types = require(\"vs/base/common/types\");\nvar strings = require(\"vs/base/common/strings\");\nvar quickOpen_1 = require(\"vs/base/parts/quickopen/common/quickOpen\");\nvar quickOpenModel_1 = require(\"vs/base/parts/quickopen/browser/quickOpenModel\");\nvar quickopen_1 = require(\"vs/workbench/browser/quickopen\");\nvar filters = require(\"vs/base/common/filters\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar quickOpen_2 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar quickOpen_3 = require(\"vs/editor/contrib/quickOpen/quickOpen\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar editorColorRegistry_1 = require(\"vs/editor/common/view/editorColorRegistry\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar async_1 = require(\"vs/base/common/async\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nexports.GOTO_SYMBOL_PREFIX = '@';\nexports.SCOPE_PREFIX = ':';\nvar FALLBACK_NLS_SYMBOL_KIND = nls.localize('property', \"properties ({0})\");\nvar NLS_SYMBOL_KIND_CACHE = (_a = {},\n    _a[modes_1.SymbolKind.Method] = nls.localize('method', \"methods ({0})\"),\n    _a[modes_1.SymbolKind.Function] = nls.localize('function', \"functions ({0})\"),\n    _a[modes_1.SymbolKind.Constructor] = nls.localize('_constructor', \"constructors ({0})\"),\n    _a[modes_1.SymbolKind.Variable] = nls.localize('variable', \"variables ({0})\"),\n    _a[modes_1.SymbolKind.Class] = nls.localize('class', \"classes ({0})\"),\n    _a[modes_1.SymbolKind.Struct] = nls.localize('struct', \"structs ({0})\"),\n    _a[modes_1.SymbolKind.Event] = nls.localize('event', \"events ({0})\"),\n    _a[modes_1.SymbolKind.Operator] = nls.localize('operator', \"operators ({0})\"),\n    _a[modes_1.SymbolKind.Interface] = nls.localize('interface', \"interfaces ({0})\"),\n    _a[modes_1.SymbolKind.Namespace] = nls.localize('namespace', \"namespaces ({0})\"),\n    _a[modes_1.SymbolKind.Package] = nls.localize('package', \"packages ({0})\"),\n    _a[modes_1.SymbolKind.TypeParameter] = nls.localize('typeParameter', \"type parameters ({0})\"),\n    _a[modes_1.SymbolKind.Module] = nls.localize('modules', \"modules ({0})\"),\n    _a[modes_1.SymbolKind.Property] = nls.localize('property', \"properties ({0})\"),\n    _a[modes_1.SymbolKind.Enum] = nls.localize('enum', \"enumerations ({0})\"),\n    _a[modes_1.SymbolKind.EnumMember] = nls.localize('enumMember', \"enumeration members ({0})\"),\n    _a[modes_1.SymbolKind.String] = nls.localize('string', \"strings ({0})\"),\n    _a[modes_1.SymbolKind.File] = nls.localize('file', \"files ({0})\"),\n    _a[modes_1.SymbolKind.Array] = nls.localize('array', \"arrays ({0})\"),\n    _a[modes_1.SymbolKind.Number] = nls.localize('number', \"numbers ({0})\"),\n    _a[modes_1.SymbolKind.Boolean] = nls.localize('boolean', \"booleans ({0})\"),\n    _a[modes_1.SymbolKind.Object] = nls.localize('object', \"objects ({0})\"),\n    _a[modes_1.SymbolKind.Key] = nls.localize('key', \"keys ({0})\"),\n    _a[modes_1.SymbolKind.Field] = nls.localize('field', \"fields ({0})\"),\n    _a[modes_1.SymbolKind.Constant] = nls.localize('constant', \"constants ({0})\"),\n    _a);\nvar GotoSymbolAction = /** @class */ (function (_super) {\n    tslib_1.__extends(GotoSymbolAction, _super);\n    function GotoSymbolAction(actionId, actionLabel, quickOpenService) {\n        return _super.call(this, actionId, actionLabel, exports.GOTO_SYMBOL_PREFIX, quickOpenService) || this;\n    }\n    GotoSymbolAction.ID = 'workbench.action.gotoSymbol';\n    GotoSymbolAction.LABEL = nls.localize('gotoSymbol', \"Go to Symbol in File...\");\n    GotoSymbolAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_2.IQuickOpenService)\n    ], GotoSymbolAction);\n    return GotoSymbolAction;\n}(quickopen_1.QuickOpenAction));\nexports.GotoSymbolAction = GotoSymbolAction;\nvar OutlineModel = /** @class */ (function (_super) {\n    tslib_1.__extends(OutlineModel, _super);\n    function OutlineModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OutlineModel.prototype.applyFilter = function (searchValue) {\n        // Normalize search\n        var normalizedSearchValue = searchValue;\n        if (searchValue.indexOf(exports.SCOPE_PREFIX) === 0) {\n            normalizedSearchValue = normalizedSearchValue.substr(exports.SCOPE_PREFIX.length);\n        }\n        // Check for match and update visibility and group label\n        this.entries.forEach(function (entry) {\n            // Clear all state first\n            entry.setGroupLabel(undefined);\n            entry.setShowBorder(false);\n            entry.setHighlights([]);\n            entry.setHidden(false);\n            // Filter by search\n            if (normalizedSearchValue) {\n                var highlights = filters.matchesFuzzy2(normalizedSearchValue, entry.getLabel());\n                if (highlights) {\n                    entry.setHighlights(highlights);\n                    entry.setHidden(false);\n                }\n                else if (!entry.isHidden()) {\n                    entry.setHidden(true);\n                }\n            }\n        });\n        // Sort properly if actually searching\n        if (searchValue) {\n            if (searchValue.indexOf(exports.SCOPE_PREFIX) === 0) {\n                this.entries.sort(this.sortScoped.bind(this, searchValue.toLowerCase()));\n            }\n            else {\n                this.entries.sort(this.sortNormal.bind(this, searchValue.toLowerCase()));\n            }\n        }\n        // Otherwise restore order as appearing in outline\n        else {\n            this.entries.sort(function (a, b) { return a.getIndex() - b.getIndex(); });\n        }\n        // Mark all type groups\n        var visibleResults = this.getEntries(true);\n        if (visibleResults.length > 0 && searchValue.indexOf(exports.SCOPE_PREFIX) === 0) {\n            var currentType = null;\n            var currentResult = null;\n            var typeCounter = 0;\n            for (var i = 0; i < visibleResults.length; i++) {\n                var result = visibleResults[i];\n                // Found new type\n                if (currentType !== result.getKind()) {\n                    // Update previous result with count\n                    if (currentResult) {\n                        currentResult.setGroupLabel(typeof currentType === 'number' ? this.renderGroupLabel(currentType, typeCounter) : undefined);\n                    }\n                    currentType = result.getKind();\n                    currentResult = result;\n                    typeCounter = 1;\n                    result.setShowBorder(i > 0);\n                }\n                // Existing type, keep counting\n                else {\n                    typeCounter++;\n                }\n            }\n            // Update previous result with count\n            if (currentResult) {\n                currentResult.setGroupLabel(typeof currentType === 'number' ? this.renderGroupLabel(currentType, typeCounter) : undefined);\n            }\n        }\n        // Mark first entry as outline\n        else if (visibleResults.length > 0) {\n            visibleResults[0].setGroupLabel(nls.localize('symbols', \"symbols ({0})\", visibleResults.length));\n        }\n    };\n    OutlineModel.prototype.sortNormal = function (searchValue, elementA, elementB) {\n        // Handle hidden elements\n        if (elementA.isHidden() && elementB.isHidden()) {\n            return 0;\n        }\n        else if (elementA.isHidden()) {\n            return 1;\n        }\n        else if (elementB.isHidden()) {\n            return -1;\n        }\n        var elementAName = elementA.getLabel().toLowerCase();\n        var elementBName = elementB.getLabel().toLowerCase();\n        // Compare by name\n        var r = elementAName.localeCompare(elementBName);\n        if (r !== 0) {\n            return r;\n        }\n        // If name identical sort by range instead\n        var elementARange = elementA.getRange();\n        var elementBRange = elementB.getRange();\n        return elementARange.startLineNumber - elementBRange.startLineNumber;\n    };\n    OutlineModel.prototype.sortScoped = function (searchValue, elementA, elementB) {\n        // Handle hidden elements\n        if (elementA.isHidden() && elementB.isHidden()) {\n            return 0;\n        }\n        else if (elementA.isHidden()) {\n            return 1;\n        }\n        else if (elementB.isHidden()) {\n            return -1;\n        }\n        // Remove scope char\n        searchValue = searchValue.substr(exports.SCOPE_PREFIX.length);\n        // Sort by type first if scoped search\n        var elementATypeLabel = NLS_SYMBOL_KIND_CACHE[elementA.getKind()] || FALLBACK_NLS_SYMBOL_KIND;\n        var elementBTypeLabel = NLS_SYMBOL_KIND_CACHE[elementB.getKind()] || FALLBACK_NLS_SYMBOL_KIND;\n        var r = elementATypeLabel.localeCompare(elementBTypeLabel);\n        if (r !== 0) {\n            return r;\n        }\n        // Special sort when searching in scoped mode\n        if (searchValue) {\n            var elementAName = elementA.getLabel().toLowerCase();\n            var elementBName = elementB.getLabel().toLowerCase();\n            // Compare by name\n            r = elementAName.localeCompare(elementBName);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        // Default to sort by range\n        var elementARange = elementA.getRange();\n        var elementBRange = elementB.getRange();\n        return elementARange.startLineNumber - elementBRange.startLineNumber;\n    };\n    OutlineModel.prototype.renderGroupLabel = function (type, count) {\n        var pattern = NLS_SYMBOL_KIND_CACHE[type];\n        if (!pattern) {\n            pattern = FALLBACK_NLS_SYMBOL_KIND;\n        }\n        return strings.format(pattern, count);\n    };\n    return OutlineModel;\n}(quickOpenModel_1.QuickOpenModel));\nvar SymbolEntry = /** @class */ (function (_super) {\n    tslib_1.__extends(SymbolEntry, _super);\n    function SymbolEntry(index, name, kind, description, icon, range, revealRange, highlights, editorService, handler) {\n        var _this = _super.call(this) || this;\n        _this.index = index;\n        _this.name = name;\n        _this.kind = kind;\n        _this.icon = icon;\n        _this.description = description;\n        _this.range = range;\n        _this.revealRange = revealRange || range;\n        _this.setHighlights(highlights);\n        _this.editorService = editorService;\n        _this.handler = handler;\n        return _this;\n    }\n    SymbolEntry.prototype.getIndex = function () {\n        return this.index;\n    };\n    SymbolEntry.prototype.getLabel = function () {\n        return this.name;\n    };\n    SymbolEntry.prototype.getAriaLabel = function () {\n        return nls.localize('entryAriaLabel', \"{0}, symbols\", this.getLabel());\n    };\n    SymbolEntry.prototype.getIcon = function () {\n        return this.icon;\n    };\n    SymbolEntry.prototype.getDescription = function () {\n        return this.description;\n    };\n    SymbolEntry.prototype.getKind = function () {\n        return this.kind;\n    };\n    SymbolEntry.prototype.getRange = function () {\n        return this.range;\n    };\n    SymbolEntry.prototype.getInput = function () {\n        return types.withUndefinedAsNull(this.editorService.activeEditor);\n    };\n    SymbolEntry.prototype.getOptions = function (pinned) {\n        return {\n            selection: this.toSelection(),\n            pinned: pinned\n        };\n    };\n    SymbolEntry.prototype.run = function (mode, context) {\n        if (mode === quickOpen_1.Mode.OPEN) {\n            return this.runOpen(context);\n        }\n        return this.runPreview();\n    };\n    SymbolEntry.prototype.runOpen = function (context) {\n        // Check for sideBySide use\n        var sideBySide = context.keymods.ctrlCmd;\n        if (sideBySide) {\n            this.editorService.openEditor(this.getInput(), this.getOptions(context.keymods.alt), editorService_1.SIDE_GROUP);\n        }\n        // Apply selection and focus\n        else {\n            var range = this.toSelection();\n            var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n            if (activeTextEditorWidget) {\n                activeTextEditorWidget.setSelection(range);\n                activeTextEditorWidget.revealRangeInCenter(range, editorCommon_1.ScrollType.Smooth);\n            }\n        }\n        return true;\n    };\n    SymbolEntry.prototype.runPreview = function () {\n        // Select Outline Position\n        var range = this.toSelection();\n        var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n        if (activeTextEditorWidget) {\n            activeTextEditorWidget.revealRangeInCenter(range, editorCommon_1.ScrollType.Smooth);\n            // Decorate if possible\n            if (this.editorService.activeControl && types.isFunction(activeTextEditorWidget.changeDecorations)) {\n                this.handler.decorateOutline(this.range, range, activeTextEditorWidget, this.editorService.activeControl.group);\n            }\n        }\n        return false;\n    };\n    SymbolEntry.prototype.toSelection = function () {\n        return {\n            startLineNumber: this.revealRange.startLineNumber,\n            startColumn: this.revealRange.startColumn || 1,\n            endLineNumber: this.revealRange.startLineNumber,\n            endColumn: this.revealRange.startColumn || 1\n        };\n    };\n    return SymbolEntry;\n}(quickopen_1.EditorQuickOpenEntryGroup));\nvar GotoSymbolHandler = /** @class */ (function (_super) {\n    tslib_1.__extends(GotoSymbolHandler, _super);\n    function GotoSymbolHandler(editorService) {\n        var _this = _super.call(this) || this;\n        _this.editorService = editorService;\n        _this.registerListeners();\n        return _this;\n    }\n    GotoSymbolHandler.prototype.registerListeners = function () {\n        var _this = this;\n        this.editorService.onDidActiveEditorChange(function () { return _this.onDidActiveEditorChange(); });\n    };\n    GotoSymbolHandler.prototype.onDidActiveEditorChange = function () {\n        this.clearOutlineRequest();\n        this.lastKnownEditorViewState = null;\n        this.rangeHighlightDecorationId = undefined;\n    };\n    GotoSymbolHandler.prototype.getResults = function (searchValue, token) {\n        searchValue = searchValue.trim();\n        // Support to cancel pending outline requests\n        if (!this.pendingOutlineRequest) {\n            this.pendingOutlineRequest = new cancellation_1.CancellationTokenSource();\n        }\n        // Remember view state to be able to restore on cancel\n        if (!this.lastKnownEditorViewState) {\n            var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n            if (activeTextEditorWidget) {\n                this.lastKnownEditorViewState = activeTextEditorWidget.saveViewState();\n            }\n        }\n        // Resolve Outline Model\n        return this.getOutline().then(function (outline) {\n            if (!outline) {\n                return outline;\n            }\n            if (token.isCancellationRequested) {\n                return outline;\n            }\n            // Filter by search\n            outline.applyFilter(searchValue);\n            return outline;\n        });\n    };\n    GotoSymbolHandler.prototype.getEmptyLabel = function (searchString) {\n        if (searchString.length > 0) {\n            return nls.localize('noSymbolsMatching', \"No symbols matching\");\n        }\n        return nls.localize('noSymbolsFound', \"No symbols found\");\n    };\n    GotoSymbolHandler.prototype.getAriaLabel = function () {\n        return nls.localize('gotoSymbolHandlerAriaLabel', \"Type to narrow down symbols of the currently active editor.\");\n    };\n    GotoSymbolHandler.prototype.canRun = function () {\n        var canRun = false;\n        var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n        if (activeTextEditorWidget) {\n            var model = activeTextEditorWidget.getModel();\n            if (model && model.modified && model.original) {\n                model = model.modified; // Support for diff editor models\n            }\n            if (model && types.isFunction(model.getLanguageIdentifier)) {\n                canRun = modes_1.DocumentSymbolProviderRegistry.has(model);\n            }\n        }\n        return canRun ? true : activeTextEditorWidget !== null ? nls.localize('cannotRunGotoSymbolInFile', \"No symbol information for the file\") : nls.localize('cannotRunGotoSymbol', \"Open a text file first to go to a symbol\");\n    };\n    GotoSymbolHandler.prototype.getAutoFocus = function (searchValue) {\n        searchValue = searchValue.trim();\n        // Remove any type pattern (:) from search value as needed\n        if (searchValue.indexOf(exports.SCOPE_PREFIX) === 0) {\n            searchValue = searchValue.substr(exports.SCOPE_PREFIX.length);\n        }\n        return {\n            autoFocusPrefixMatch: searchValue,\n            autoFocusFirstEntry: !!searchValue\n        };\n    };\n    GotoSymbolHandler.prototype.toQuickOpenEntries = function (flattened) {\n        var results = [];\n        for (var i = 0; i < flattened.length; i++) {\n            var element = flattened[i];\n            var label = strings.trim(element.name);\n            // Show parent scope as description\n            var description = element.containerName || '';\n            var icon = modes_1.symbolKindToCssClass(element.kind);\n            // Add\n            results.push(new SymbolEntry(i, label, element.kind, description, \"symbol-icon \" + icon, element.range, element.selectionRange, [], this.editorService, this));\n        }\n        return results;\n    };\n    GotoSymbolHandler.prototype.getOutline = function () {\n        if (!this.cachedOutlineRequest) {\n            this.cachedOutlineRequest = this.doGetActiveOutline();\n        }\n        return this.cachedOutlineRequest;\n    };\n    GotoSymbolHandler.prototype.doGetActiveOutline = function () {\n        var _this = this;\n        var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n        if (activeTextEditorWidget) {\n            var model_2 = activeTextEditorWidget.getModel();\n            if (model_2 && model_2.modified && model_2.original) {\n                model_2 = model_2.modified; // Support for diff editor models\n            }\n            if (model_2 && types.isFunction(model_2.getLanguageIdentifier)) {\n                return Promise.resolve(async_1.asPromise(function () { return quickOpen_3.getDocumentSymbols(model_2, true, _this.pendingOutlineRequest.token); }).then(function (entries) {\n                    return new OutlineModel(_this.toQuickOpenEntries(entries));\n                }));\n            }\n        }\n        return Promise.resolve(null);\n    };\n    GotoSymbolHandler.prototype.decorateOutline = function (fullRange, startRange, editor, group) {\n        var _this = this;\n        editor.changeDecorations(function (changeAccessor) {\n            var deleteDecorations = [];\n            if (_this.rangeHighlightDecorationId) {\n                deleteDecorations.push(_this.rangeHighlightDecorationId.lineDecorationId);\n                deleteDecorations.push(_this.rangeHighlightDecorationId.rangeHighlightId);\n                _this.rangeHighlightDecorationId = undefined;\n            }\n            var newDecorations = [\n                // rangeHighlight at index 0\n                {\n                    range: fullRange,\n                    options: {\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                // lineDecoration at index 1\n                {\n                    range: startRange,\n                    options: {\n                        overviewRuler: {\n                            color: themeService_1.themeColorFromId(editorColorRegistry_1.overviewRulerRangeHighlight),\n                            position: model_1.OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ];\n            var decorations = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\n            var rangeHighlightId = decorations[0];\n            var lineDecorationId = decorations[1];\n            _this.rangeHighlightDecorationId = {\n                groupId: group.id,\n                rangeHighlightId: rangeHighlightId,\n                lineDecorationId: lineDecorationId,\n            };\n        });\n    };\n    GotoSymbolHandler.prototype.clearDecorations = function () {\n        var rangeHighlightDecorationId = this.rangeHighlightDecorationId;\n        if (rangeHighlightDecorationId) {\n            this.editorService.visibleControls.forEach(function (editor) {\n                if (editor.group && editor.group.id === rangeHighlightDecorationId.groupId) {\n                    var editorControl = editor.getControl();\n                    editorControl.changeDecorations(function (changeAccessor) {\n                        changeAccessor.deltaDecorations([\n                            rangeHighlightDecorationId.lineDecorationId,\n                            rangeHighlightDecorationId.rangeHighlightId\n                        ], []);\n                    });\n                }\n            });\n            this.rangeHighlightDecorationId = undefined;\n        }\n    };\n    GotoSymbolHandler.prototype.onClose = function (canceled) {\n        // Cancel any pending/cached outline request now\n        this.clearOutlineRequest();\n        // Clear Highlight Decorations if present\n        this.clearDecorations();\n        // Restore selection if canceled\n        if (canceled && this.lastKnownEditorViewState) {\n            var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n            if (activeTextEditorWidget) {\n                activeTextEditorWidget.restoreViewState(this.lastKnownEditorViewState);\n            }\n            this.lastKnownEditorViewState = null;\n        }\n    };\n    GotoSymbolHandler.prototype.clearOutlineRequest = function () {\n        if (this.pendingOutlineRequest) {\n            this.pendingOutlineRequest.cancel();\n            this.pendingOutlineRequest.dispose();\n            this.pendingOutlineRequest = undefined;\n        }\n        this.cachedOutlineRequest = undefined;\n    };\n    GotoSymbolHandler.ID = 'workbench.picker.filesymbols';\n    GotoSymbolHandler = tslib_1.__decorate([\n        tslib_1.__param(0, editorService_1.IEditorService)\n    ], GotoSymbolHandler);\n    return GotoSymbolHandler;\n}(quickopen_1.QuickOpenHandler));\nexports.GotoSymbolHandler = GotoSymbolHandler;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/gotoSymbolHandler.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/quickopen/browser/gotoSymbolHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!vs/editor/contrib/documentSymbols/media/symbol-icons';\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\nimport { IEntryRunContext, Mode, IAutoFocus } from 'vs/base/parts/quickopen/common/quickOpen';\nimport { QuickOpenModel, IHighlight } from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport { QuickOpenHandler, EditorQuickOpenEntryGroup, QuickOpenAction } from 'vs/workbench/browser/quickopen';\nimport * as filters from 'vs/base/common/filters';\nimport { IEditor, IDiffEditorModel, IEditorViewState, ScrollType } from 'vs/editor/common/editorCommon';\nimport { IModelDecorationsChangeAccessor, OverviewRulerLane, IModelDeltaDecoration, ITextModel } from 'vs/editor/common/model';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { getDocumentSymbols } from 'vs/editor/contrib/quickOpen/quickOpen';\nimport { DocumentSymbolProviderRegistry, DocumentSymbol, symbolKindToCssClass, SymbolKind } from 'vs/editor/common/modes';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { themeColorFromId } from 'vs/platform/theme/common/themeService';\nimport { overviewRulerRangeHighlight } from 'vs/editor/common/view/editorColorRegistry';\nimport { GroupIdentifier, IEditorInput } from 'vs/workbench/common/editor';\nimport { IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { asPromise } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\n\nexport const GOTO_SYMBOL_PREFIX = '@';\nexport const SCOPE_PREFIX = ':';\n\nconst FALLBACK_NLS_SYMBOL_KIND = nls.localize('property', \"properties ({0})\");\nconst NLS_SYMBOL_KIND_CACHE: { [type: number]: string } = {\n\t[SymbolKind.Method]: nls.localize('method', \"methods ({0})\"),\n\t[SymbolKind.Function]: nls.localize('function', \"functions ({0})\"),\n\t[SymbolKind.Constructor]: nls.localize('_constructor', \"constructors ({0})\"),\n\t[SymbolKind.Variable]: nls.localize('variable', \"variables ({0})\"),\n\t[SymbolKind.Class]: nls.localize('class', \"classes ({0})\"),\n\t[SymbolKind.Struct]: nls.localize('struct', \"structs ({0})\"),\n\t[SymbolKind.Event]: nls.localize('event', \"events ({0})\"),\n\t[SymbolKind.Operator]: nls.localize('operator', \"operators ({0})\"),\n\t[SymbolKind.Interface]: nls.localize('interface', \"interfaces ({0})\"),\n\t[SymbolKind.Namespace]: nls.localize('namespace', \"namespaces ({0})\"),\n\t[SymbolKind.Package]: nls.localize('package', \"packages ({0})\"),\n\t[SymbolKind.TypeParameter]: nls.localize('typeParameter', \"type parameters ({0})\"),\n\t[SymbolKind.Module]: nls.localize('modules', \"modules ({0})\"),\n\t[SymbolKind.Property]: nls.localize('property', \"properties ({0})\"),\n\t[SymbolKind.Enum]: nls.localize('enum', \"enumerations ({0})\"),\n\t[SymbolKind.EnumMember]: nls.localize('enumMember', \"enumeration members ({0})\"),\n\t[SymbolKind.String]: nls.localize('string', \"strings ({0})\"),\n\t[SymbolKind.File]: nls.localize('file', \"files ({0})\"),\n\t[SymbolKind.Array]: nls.localize('array', \"arrays ({0})\"),\n\t[SymbolKind.Number]: nls.localize('number', \"numbers ({0})\"),\n\t[SymbolKind.Boolean]: nls.localize('boolean', \"booleans ({0})\"),\n\t[SymbolKind.Object]: nls.localize('object', \"objects ({0})\"),\n\t[SymbolKind.Key]: nls.localize('key', \"keys ({0})\"),\n\t[SymbolKind.Field]: nls.localize('field', \"fields ({0})\"),\n\t[SymbolKind.Constant]: nls.localize('constant', \"constants ({0})\")\n};\n\nexport class GotoSymbolAction extends QuickOpenAction {\n\n\tstatic readonly ID = 'workbench.action.gotoSymbol';\n\tstatic readonly LABEL = nls.localize('gotoSymbol', \"Go to Symbol in File...\");\n\n\tconstructor(actionId: string, actionLabel: string, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tsuper(actionId, actionLabel, GOTO_SYMBOL_PREFIX, quickOpenService);\n\t}\n}\n\nclass OutlineModel extends QuickOpenModel {\n\n\tapplyFilter(searchValue: string): void {\n\n\t\t// Normalize search\n\t\tlet normalizedSearchValue = searchValue;\n\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tnormalizedSearchValue = normalizedSearchValue.substr(SCOPE_PREFIX.length);\n\t\t}\n\n\t\t// Check for match and update visibility and group label\n\t\tthis.entries.forEach((entry: SymbolEntry) => {\n\n\t\t\t// Clear all state first\n\t\t\tentry.setGroupLabel(undefined);\n\t\t\tentry.setShowBorder(false);\n\t\t\tentry.setHighlights([]);\n\t\t\tentry.setHidden(false);\n\n\t\t\t// Filter by search\n\t\t\tif (normalizedSearchValue) {\n\t\t\t\tconst highlights = filters.matchesFuzzy2(normalizedSearchValue, entry.getLabel());\n\t\t\t\tif (highlights) {\n\t\t\t\t\tentry.setHighlights(highlights);\n\t\t\t\t\tentry.setHidden(false);\n\t\t\t\t} else if (!entry.isHidden()) {\n\t\t\t\t\tentry.setHidden(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Sort properly if actually searching\n\t\tif (searchValue) {\n\t\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\t\tthis.entries.sort(this.sortScoped.bind(this, searchValue.toLowerCase()));\n\t\t\t} else {\n\t\t\t\tthis.entries.sort(this.sortNormal.bind(this, searchValue.toLowerCase()));\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise restore order as appearing in outline\n\t\telse {\n\t\t\tthis.entries.sort((a: SymbolEntry, b: SymbolEntry) => a.getIndex() - b.getIndex());\n\t\t}\n\n\t\t// Mark all type groups\n\t\tconst visibleResults = <SymbolEntry[]>this.getEntries(true);\n\t\tif (visibleResults.length > 0 && searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tlet currentType: SymbolKind | null = null;\n\t\t\tlet currentResult: SymbolEntry | null = null;\n\t\t\tlet typeCounter = 0;\n\n\t\t\tfor (let i = 0; i < visibleResults.length; i++) {\n\t\t\t\tconst result = visibleResults[i];\n\n\t\t\t\t// Found new type\n\t\t\t\tif (currentType !== result.getKind()) {\n\n\t\t\t\t\t// Update previous result with count\n\t\t\t\t\tif (currentResult) {\n\t\t\t\t\t\tcurrentResult.setGroupLabel(typeof currentType === 'number' ? this.renderGroupLabel(currentType, typeCounter) : undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentType = result.getKind();\n\t\t\t\t\tcurrentResult = result;\n\t\t\t\t\ttypeCounter = 1;\n\n\t\t\t\t\tresult.setShowBorder(i > 0);\n\t\t\t\t}\n\n\t\t\t\t// Existing type, keep counting\n\t\t\t\telse {\n\t\t\t\t\ttypeCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update previous result with count\n\t\t\tif (currentResult) {\n\t\t\t\tcurrentResult.setGroupLabel(typeof currentType === 'number' ? this.renderGroupLabel(currentType, typeCounter) : undefined);\n\t\t\t}\n\t\t}\n\n\t\t// Mark first entry as outline\n\t\telse if (visibleResults.length > 0) {\n\t\t\tvisibleResults[0].setGroupLabel(nls.localize('symbols', \"symbols ({0})\", visibleResults.length));\n\t\t}\n\t}\n\n\tprivate sortNormal(searchValue: string, elementA: SymbolEntry, elementB: SymbolEntry): number {\n\n\t\t// Handle hidden elements\n\t\tif (elementA.isHidden() && elementB.isHidden()) {\n\t\t\treturn 0;\n\t\t} else if (elementA.isHidden()) {\n\t\t\treturn 1;\n\t\t} else if (elementB.isHidden()) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst elementAName = elementA.getLabel().toLowerCase();\n\t\tconst elementBName = elementB.getLabel().toLowerCase();\n\n\t\t// Compare by name\n\t\tconst r = elementAName.localeCompare(elementBName);\n\t\tif (r !== 0) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// If name identical sort by range instead\n\t\tconst elementARange = elementA.getRange();\n\t\tconst elementBRange = elementB.getRange();\n\n\t\treturn elementARange.startLineNumber - elementBRange.startLineNumber;\n\t}\n\n\tprivate sortScoped(searchValue: string, elementA: SymbolEntry, elementB: SymbolEntry): number {\n\n\t\t// Handle hidden elements\n\t\tif (elementA.isHidden() && elementB.isHidden()) {\n\t\t\treturn 0;\n\t\t} else if (elementA.isHidden()) {\n\t\t\treturn 1;\n\t\t} else if (elementB.isHidden()) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// Remove scope char\n\t\tsearchValue = searchValue.substr(SCOPE_PREFIX.length);\n\n\t\t// Sort by type first if scoped search\n\t\tconst elementATypeLabel = NLS_SYMBOL_KIND_CACHE[elementA.getKind()] || FALLBACK_NLS_SYMBOL_KIND;\n\t\tconst elementBTypeLabel = NLS_SYMBOL_KIND_CACHE[elementB.getKind()] || FALLBACK_NLS_SYMBOL_KIND;\n\t\tlet r = elementATypeLabel.localeCompare(elementBTypeLabel);\n\t\tif (r !== 0) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// Special sort when searching in scoped mode\n\t\tif (searchValue) {\n\t\t\tconst elementAName = elementA.getLabel().toLowerCase();\n\t\t\tconst elementBName = elementB.getLabel().toLowerCase();\n\n\t\t\t// Compare by name\n\t\t\tr = elementAName.localeCompare(elementBName);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// Default to sort by range\n\t\tconst elementARange = elementA.getRange();\n\t\tconst elementBRange = elementB.getRange();\n\n\t\treturn elementARange.startLineNumber - elementBRange.startLineNumber;\n\t}\n\n\tprivate renderGroupLabel(type: SymbolKind, count: number): string {\n\t\tlet pattern = NLS_SYMBOL_KIND_CACHE[type];\n\t\tif (!pattern) {\n\t\t\tpattern = FALLBACK_NLS_SYMBOL_KIND;\n\t\t}\n\n\t\treturn strings.format(pattern, count);\n\t}\n}\n\nclass SymbolEntry extends EditorQuickOpenEntryGroup {\n\tprivate editorService: IEditorService;\n\tprivate index: number;\n\tprivate name: string;\n\tprivate kind: SymbolKind;\n\tprivate icon: string;\n\tprivate description: string;\n\tprivate range: IRange;\n\tprivate revealRange: IRange;\n\tprivate handler: GotoSymbolHandler;\n\n\tconstructor(index: number, name: string, kind: SymbolKind, description: string, icon: string, range: IRange, revealRange: IRange, highlights: IHighlight[], editorService: IEditorService, handler: GotoSymbolHandler) {\n\t\tsuper();\n\n\t\tthis.index = index;\n\t\tthis.name = name;\n\t\tthis.kind = kind;\n\t\tthis.icon = icon;\n\t\tthis.description = description;\n\t\tthis.range = range;\n\t\tthis.revealRange = revealRange || range;\n\t\tthis.setHighlights(highlights);\n\t\tthis.editorService = editorService;\n\t\tthis.handler = handler;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetLabel(): string {\n\t\treturn this.name;\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, symbols\", this.getLabel());\n\t}\n\n\tgetIcon(): string {\n\t\treturn this.icon;\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tgetKind(): SymbolKind {\n\t\treturn this.kind;\n\t}\n\n\tgetRange(): IRange {\n\t\treturn this.range;\n\t}\n\n\tgetInput(): IEditorInput | null {\n\t\treturn types.withUndefinedAsNull(this.editorService.activeEditor);\n\t}\n\n\tgetOptions(pinned?: boolean): ITextEditorOptions {\n\t\treturn {\n\t\t\tselection: this.toSelection(),\n\t\t\tpinned\n\t\t};\n\t}\n\n\trun(mode: Mode, context: IEntryRunContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\treturn this.runOpen(context);\n\t\t}\n\n\t\treturn this.runPreview();\n\t}\n\n\tprivate runOpen(context: IEntryRunContext): boolean {\n\n\t\t// Check for sideBySide use\n\t\tconst sideBySide = context.keymods.ctrlCmd;\n\t\tif (sideBySide) {\n\t\t\tthis.editorService.openEditor(this.getInput()!, this.getOptions(context.keymods.alt), SIDE_GROUP);\n\t\t}\n\n\t\t// Apply selection and focus\n\t\telse {\n\t\t\tconst range = this.toSelection();\n\t\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\t\tif (activeTextEditorWidget) {\n\t\t\t\tactiveTextEditorWidget.setSelection(range);\n\t\t\t\tactiveTextEditorWidget.revealRangeInCenter(range, ScrollType.Smooth);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate runPreview(): boolean {\n\n\t\t// Select Outline Position\n\t\tconst range = this.toSelection();\n\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\tif (activeTextEditorWidget) {\n\t\t\tactiveTextEditorWidget.revealRangeInCenter(range, ScrollType.Smooth);\n\n\t\t\t// Decorate if possible\n\t\t\tif (this.editorService.activeControl && types.isFunction(activeTextEditorWidget.changeDecorations)) {\n\t\t\t\tthis.handler.decorateOutline(this.range, range, activeTextEditorWidget, this.editorService.activeControl.group);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate toSelection(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this.revealRange.startLineNumber,\n\t\t\tstartColumn: this.revealRange.startColumn || 1,\n\t\t\tendLineNumber: this.revealRange.startLineNumber,\n\t\t\tendColumn: this.revealRange.startColumn || 1\n\t\t};\n\t}\n}\n\ninterface IEditorLineDecoration {\n\tgroupId: GroupIdentifier;\n\trangeHighlightId: string;\n\tlineDecorationId: string;\n}\n\nexport class GotoSymbolHandler extends QuickOpenHandler {\n\n\tstatic readonly ID = 'workbench.picker.filesymbols';\n\n\tprivate rangeHighlightDecorationId?: IEditorLineDecoration;\n\tprivate lastKnownEditorViewState: IEditorViewState | null;\n\n\tprivate cachedOutlineRequest?: Promise<OutlineModel | null>;\n\tprivate pendingOutlineRequest?: CancellationTokenSource;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.editorService.onDidActiveEditorChange(() => this.onDidActiveEditorChange());\n\t}\n\n\tprivate onDidActiveEditorChange(): void {\n\t\tthis.clearOutlineRequest();\n\n\t\tthis.lastKnownEditorViewState = null;\n\t\tthis.rangeHighlightDecorationId = undefined;\n\t}\n\n\tgetResults(searchValue: string, token: CancellationToken): Promise<QuickOpenModel | null> {\n\t\tsearchValue = searchValue.trim();\n\n\t\t// Support to cancel pending outline requests\n\t\tif (!this.pendingOutlineRequest) {\n\t\t\tthis.pendingOutlineRequest = new CancellationTokenSource();\n\t\t}\n\n\t\t// Remember view state to be able to restore on cancel\n\t\tif (!this.lastKnownEditorViewState) {\n\t\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\t\tif (activeTextEditorWidget) {\n\t\t\t\tthis.lastKnownEditorViewState = activeTextEditorWidget.saveViewState();\n\t\t\t}\n\t\t}\n\n\t\t// Resolve Outline Model\n\t\treturn this.getOutline().then(outline => {\n\t\t\tif (!outline) {\n\t\t\t\treturn outline;\n\t\t\t}\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn outline;\n\t\t\t}\n\n\t\t\t// Filter by search\n\t\t\toutline.applyFilter(searchValue);\n\n\t\t\treturn outline;\n\t\t});\n\t}\n\n\tgetEmptyLabel(searchString: string): string {\n\t\tif (searchString.length > 0) {\n\t\t\treturn nls.localize('noSymbolsMatching', \"No symbols matching\");\n\t\t}\n\n\t\treturn nls.localize('noSymbolsFound', \"No symbols found\");\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn nls.localize('gotoSymbolHandlerAriaLabel', \"Type to narrow down symbols of the currently active editor.\");\n\t}\n\n\tcanRun(): boolean | string {\n\t\tlet canRun = false;\n\n\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\tif (activeTextEditorWidget) {\n\t\t\tlet model = activeTextEditorWidget.getModel();\n\t\t\tif (model && (<IDiffEditorModel>model).modified && (<IDiffEditorModel>model).original) {\n\t\t\t\tmodel = (<IDiffEditorModel>model).modified; // Support for diff editor models\n\t\t\t}\n\n\t\t\tif (model && types.isFunction((<ITextModel>model).getLanguageIdentifier)) {\n\t\t\t\tcanRun = DocumentSymbolProviderRegistry.has(<ITextModel>model);\n\t\t\t}\n\t\t}\n\n\t\treturn canRun ? true : activeTextEditorWidget !== null ? nls.localize('cannotRunGotoSymbolInFile', \"No symbol information for the file\") : nls.localize('cannotRunGotoSymbol', \"Open a text file first to go to a symbol\");\n\t}\n\n\tgetAutoFocus(searchValue: string): IAutoFocus {\n\t\tsearchValue = searchValue.trim();\n\n\t\t// Remove any type pattern (:) from search value as needed\n\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tsearchValue = searchValue.substr(SCOPE_PREFIX.length);\n\t\t}\n\n\t\treturn {\n\t\t\tautoFocusPrefixMatch: searchValue,\n\t\t\tautoFocusFirstEntry: !!searchValue\n\t\t};\n\t}\n\n\tprivate toQuickOpenEntries(flattened: DocumentSymbol[]): SymbolEntry[] {\n\t\tconst results: SymbolEntry[] = [];\n\n\t\tfor (let i = 0; i < flattened.length; i++) {\n\t\t\tconst element = flattened[i];\n\t\t\tconst label = strings.trim(element.name);\n\n\t\t\t// Show parent scope as description\n\t\t\tconst description = element.containerName || '';\n\t\t\tconst icon = symbolKindToCssClass(element.kind);\n\n\t\t\t// Add\n\t\t\tresults.push(new SymbolEntry(i,\n\t\t\t\tlabel, element.kind, description, `symbol-icon ${icon}`,\n\t\t\t\telement.range, element.selectionRange, [], this.editorService, this\n\t\t\t));\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tprivate getOutline(): Promise<OutlineModel | null> {\n\t\tif (!this.cachedOutlineRequest) {\n\t\t\tthis.cachedOutlineRequest = this.doGetActiveOutline();\n\t\t}\n\n\t\treturn this.cachedOutlineRequest;\n\t}\n\n\tprivate doGetActiveOutline(): Promise<OutlineModel | null> {\n\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\tif (activeTextEditorWidget) {\n\t\t\tlet model = activeTextEditorWidget.getModel();\n\t\t\tif (model && (<IDiffEditorModel>model).modified && (<IDiffEditorModel>model).original) {\n\t\t\t\tmodel = (<IDiffEditorModel>model).modified; // Support for diff editor models\n\t\t\t}\n\n\t\t\tif (model && types.isFunction((<ITextModel>model).getLanguageIdentifier)) {\n\t\t\t\treturn Promise.resolve(asPromise(() => getDocumentSymbols(<ITextModel>model, true, this.pendingOutlineRequest!.token)).then(entries => {\n\t\t\t\t\treturn new OutlineModel(this.toQuickOpenEntries(entries));\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tdecorateOutline(fullRange: IRange, startRange: IRange, editor: IEditor, group: IEditorGroup): void {\n\t\teditor.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\tconst deleteDecorations: string[] = [];\n\n\t\t\tif (this.rangeHighlightDecorationId) {\n\t\t\t\tdeleteDecorations.push(this.rangeHighlightDecorationId.lineDecorationId);\n\t\t\t\tdeleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\n\t\t\t\tthis.rangeHighlightDecorationId = undefined;\n\t\t\t}\n\n\t\t\tconst newDecorations: IModelDeltaDecoration[] = [\n\n\t\t\t\t// rangeHighlight at index 0\n\t\t\t\t{\n\t\t\t\t\trange: fullRange,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tclassName: 'rangeHighlight',\n\t\t\t\t\t\tisWholeLine: true\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// lineDecoration at index 1\n\t\t\t\t{\n\t\t\t\t\trange: startRange,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\t\tcolor: themeColorFromId(overviewRulerRangeHighlight),\n\t\t\t\t\t\t\tposition: OverviewRulerLane.Full\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t];\n\n\t\t\tconst decorations = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\n\t\t\tconst rangeHighlightId = decorations[0];\n\t\t\tconst lineDecorationId = decorations[1];\n\n\t\t\tthis.rangeHighlightDecorationId = {\n\t\t\t\tgroupId: group.id,\n\t\t\t\trangeHighlightId: rangeHighlightId,\n\t\t\t\tlineDecorationId: lineDecorationId,\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate clearDecorations(): void {\n\t\tconst rangeHighlightDecorationId = this.rangeHighlightDecorationId;\n\t\tif (rangeHighlightDecorationId) {\n\t\t\tthis.editorService.visibleControls.forEach(editor => {\n\t\t\t\tif (editor.group && editor.group.id === rangeHighlightDecorationId.groupId) {\n\t\t\t\t\tconst editorControl = <IEditor>editor.getControl();\n\t\t\t\t\teditorControl.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\t\t\tchangeAccessor.deltaDecorations([\n\t\t\t\t\t\t\trangeHighlightDecorationId.lineDecorationId,\n\t\t\t\t\t\t\trangeHighlightDecorationId.rangeHighlightId\n\t\t\t\t\t\t], []);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.rangeHighlightDecorationId = undefined;\n\t\t}\n\t}\n\n\tonClose(canceled: boolean): void {\n\n\t\t// Cancel any pending/cached outline request now\n\t\tthis.clearOutlineRequest();\n\n\t\t// Clear Highlight Decorations if present\n\t\tthis.clearDecorations();\n\n\t\t// Restore selection if canceled\n\t\tif (canceled && this.lastKnownEditorViewState) {\n\t\t\tconst activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\t\tif (activeTextEditorWidget) {\n\t\t\t\tactiveTextEditorWidget.restoreViewState(this.lastKnownEditorViewState);\n\t\t\t}\n\n\t\t\tthis.lastKnownEditorViewState = null;\n\t\t}\n\t}\n\n\tprivate clearOutlineRequest(): void {\n\t\tif (this.pendingOutlineRequest) {\n\t\t\tthis.pendingOutlineRequest.cancel();\n\t\t\tthis.pendingOutlineRequest.dispose();\n\t\t\tthis.pendingOutlineRequest = undefined;\n\t\t}\n\n\t\tthis.cachedOutlineRequest = undefined;\n\t}\n}\n"]}]}