{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/documentSymbols/outlineTree.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/documentSymbols/outlineTree.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/browser/dom\", \"vs/base/browser/ui/highlightedlabel/highlightedLabel\", \"vs/base/common/collections\", \"vs/base/common/filters\", \"vs/editor/common/core/range\", \"vs/editor/common/modes\", \"vs/editor/contrib/documentSymbols/outlineModel\", \"vs/nls\", \"vs/platform/keybinding/common/keybinding\", \"vs/base/browser/ui/iconLabel/iconLabel\", \"vs/platform/configuration/common/configuration\", \"vs/editor/contrib/documentSymbols/outline\", \"vs/platform/markers/common/markers\", \"vs/platform/theme/common/themeService\", \"vs/platform/theme/common/colorRegistry\", \"vs/css!./media/outlineTree\", \"vs/css!./media/symbol-icons\"], function (require, exports, dom, highlightedLabel_1, collections_1, filters_1, range_1, modes_1, outlineModel_1, nls_1, keybinding_1, iconLabel_1, configuration_1, outline_1, markers_1, themeService_1, colorRegistry_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let OutlineNavigationLabelProvider = class OutlineNavigationLabelProvider {\n        constructor(_keybindingService) {\n            this._keybindingService = _keybindingService;\n        }\n        getKeyboardNavigationLabel(element) {\n            if (element instanceof outlineModel_1.OutlineGroup) {\n                return element.provider.displayName || element.id;\n            }\n            else {\n                return element.symbol.name;\n            }\n        }\n        mightProducePrintableCharacter(event) {\n            return this._keybindingService.mightProducePrintableCharacter(event);\n        }\n    };\n    OutlineNavigationLabelProvider = __decorate([\n        __param(0, keybinding_1.IKeybindingService)\n    ], OutlineNavigationLabelProvider);\n    exports.OutlineNavigationLabelProvider = OutlineNavigationLabelProvider;\n    class OutlineIdentityProvider {\n        getId(element) {\n            return element.id;\n        }\n    }\n    exports.OutlineIdentityProvider = OutlineIdentityProvider;\n    class OutlineGroupTemplate {\n    }\n    OutlineGroupTemplate.id = 'OutlineGroupTemplate';\n    exports.OutlineGroupTemplate = OutlineGroupTemplate;\n    class OutlineElementTemplate {\n    }\n    OutlineElementTemplate.id = 'OutlineElementTemplate';\n    exports.OutlineElementTemplate = OutlineElementTemplate;\n    class OutlineVirtualDelegate {\n        getHeight(_element) {\n            return 22;\n        }\n        getTemplateId(element) {\n            if (element instanceof outlineModel_1.OutlineGroup) {\n                return OutlineGroupTemplate.id;\n            }\n            else {\n                return OutlineElementTemplate.id;\n            }\n        }\n    }\n    exports.OutlineVirtualDelegate = OutlineVirtualDelegate;\n    class OutlineGroupRenderer {\n        constructor() {\n            this.templateId = OutlineGroupTemplate.id;\n        }\n        renderTemplate(container) {\n            const labelContainer = dom.$('.outline-element-label');\n            dom.addClass(container, 'outline-element');\n            dom.append(container, labelContainer);\n            return { labelContainer, label: new highlightedLabel_1.HighlightedLabel(labelContainer, true) };\n        }\n        renderElement(node, index, template) {\n            template.label.set(node.element.provider.displayName || nls_1.localize('provider', \"Outline Provider\"), filters_1.createMatches(node.filterData));\n        }\n        disposeTemplate(_template) {\n            // nothing\n        }\n    }\n    exports.OutlineGroupRenderer = OutlineGroupRenderer;\n    let OutlineElementRenderer = class OutlineElementRenderer {\n        constructor(_configurationService, _themeService) {\n            this._configurationService = _configurationService;\n            this._themeService = _themeService;\n            this.templateId = OutlineElementTemplate.id;\n        }\n        renderTemplate(container) {\n            dom.addClass(container, 'outline-element');\n            const iconLabel = new iconLabel_1.IconLabel(container, { supportHighlights: true });\n            const decoration = dom.$('.outline-element-decoration');\n            container.appendChild(decoration);\n            return { container, iconLabel, decoration };\n        }\n        renderElement(node, index, template) {\n            const { element } = node;\n            const options = {\n                matches: filters_1.createMatches(node.filterData),\n                labelEscapeNewLines: true,\n                extraClasses: [],\n                title: nls_1.localize('title.template', \"{0} ({1})\", element.symbol.name, OutlineElementRenderer._symbolKindNames[element.symbol.kind])\n            };\n            if (this._configurationService.getValue(outline_1.OutlineConfigKeys.icons)) {\n                // add styles for the icons\n                options.extraClasses.push(`outline-element-icon ${modes_1.symbolKindToCssClass(element.symbol.kind, true)}`);\n            }\n            template.iconLabel.setLabel(element.symbol.name, element.symbol.detail, options);\n            this._renderMarkerInfo(element, template);\n        }\n        _renderMarkerInfo(element, template) {\n            if (!element.marker) {\n                dom.hide(template.decoration);\n                template.container.style.removeProperty('--outline-element-color');\n                return;\n            }\n            const { count, topSev } = element.marker;\n            const color = this._themeService.getTheme().getColor(topSev === markers_1.MarkerSeverity.Error ? colorRegistry_1.listErrorForeground : colorRegistry_1.listWarningForeground);\n            const cssColor = color ? color.toString() : 'inherit';\n            // color of the label\n            if (this._configurationService.getValue(outline_1.OutlineConfigKeys.problemsColors)) {\n                template.container.style.setProperty('--outline-element-color', cssColor);\n            }\n            else {\n                template.container.style.removeProperty('--outline-element-color');\n            }\n            // badge with color/rollup\n            if (!this._configurationService.getValue(outline_1.OutlineConfigKeys.problemsBadges)) {\n                dom.hide(template.decoration);\n            }\n            else if (count > 0) {\n                dom.show(template.decoration);\n                dom.removeClass(template.decoration, 'bubble');\n                template.decoration.innerText = count < 10 ? count.toString() : '+9';\n                template.decoration.title = count === 1 ? nls_1.localize('1.problem', \"1 problem in this element\") : nls_1.localize('N.problem', \"{0} problems in this element\", count);\n                template.decoration.style.setProperty('--outline-element-color', cssColor);\n            }\n            else {\n                dom.show(template.decoration);\n                dom.addClass(template.decoration, 'bubble');\n                template.decoration.innerText = '\\uf052';\n                template.decoration.title = nls_1.localize('deep.problem', \"Contains elements with problems\");\n                template.decoration.style.setProperty('--outline-element-color', cssColor);\n            }\n        }\n        disposeTemplate(_template) {\n            _template.iconLabel.dispose();\n        }\n    };\n    OutlineElementRenderer._symbolKindNames = {\n        [modes_1.SymbolKind.Array]: nls_1.localize('Array', \"array\"),\n        [modes_1.SymbolKind.Boolean]: nls_1.localize('Boolean', \"boolean\"),\n        [modes_1.SymbolKind.Class]: nls_1.localize('Class', \"class\"),\n        [modes_1.SymbolKind.Constant]: nls_1.localize('Constant', \"constant\"),\n        [modes_1.SymbolKind.Constructor]: nls_1.localize('Constructor', \"constructor\"),\n        [modes_1.SymbolKind.Enum]: nls_1.localize('Enum', \"enumeration\"),\n        [modes_1.SymbolKind.EnumMember]: nls_1.localize('EnumMember', \"enumeration member\"),\n        [modes_1.SymbolKind.Event]: nls_1.localize('Event', \"event\"),\n        [modes_1.SymbolKind.Field]: nls_1.localize('Field', \"field\"),\n        [modes_1.SymbolKind.File]: nls_1.localize('File', \"file\"),\n        [modes_1.SymbolKind.Function]: nls_1.localize('Function', \"function\"),\n        [modes_1.SymbolKind.Interface]: nls_1.localize('Interface', \"interface\"),\n        [modes_1.SymbolKind.Key]: nls_1.localize('Key', \"key\"),\n        [modes_1.SymbolKind.Method]: nls_1.localize('Method', \"method\"),\n        [modes_1.SymbolKind.Module]: nls_1.localize('Module', \"module\"),\n        [modes_1.SymbolKind.Namespace]: nls_1.localize('Namespace', \"namespace\"),\n        [modes_1.SymbolKind.Null]: nls_1.localize('Null', \"null\"),\n        [modes_1.SymbolKind.Number]: nls_1.localize('Number', \"number\"),\n        [modes_1.SymbolKind.Object]: nls_1.localize('Object', \"object\"),\n        [modes_1.SymbolKind.Operator]: nls_1.localize('Operator', \"operator\"),\n        [modes_1.SymbolKind.Package]: nls_1.localize('Package', \"package\"),\n        [modes_1.SymbolKind.Property]: nls_1.localize('Property', \"property\"),\n        [modes_1.SymbolKind.String]: nls_1.localize('String', \"string\"),\n        [modes_1.SymbolKind.Struct]: nls_1.localize('Struct', \"struct\"),\n        [modes_1.SymbolKind.TypeParameter]: nls_1.localize('TypeParameter', \"type parameter\"),\n        [modes_1.SymbolKind.Variable]: nls_1.localize('Variable', \"variable\"),\n    };\n    OutlineElementRenderer = __decorate([\n        __param(0, configuration_1.IConfigurationService),\n        __param(1, themeService_1.IThemeService)\n    ], OutlineElementRenderer);\n    exports.OutlineElementRenderer = OutlineElementRenderer;\n    var OutlineSortOrder;\n    (function (OutlineSortOrder) {\n        OutlineSortOrder[OutlineSortOrder[\"ByPosition\"] = 0] = \"ByPosition\";\n        OutlineSortOrder[OutlineSortOrder[\"ByName\"] = 1] = \"ByName\";\n        OutlineSortOrder[OutlineSortOrder[\"ByKind\"] = 2] = \"ByKind\";\n    })(OutlineSortOrder = exports.OutlineSortOrder || (exports.OutlineSortOrder = {}));\n    class OutlineItemComparator {\n        constructor(type = OutlineSortOrder.ByPosition) {\n            this.type = type;\n        }\n        compare(a, b) {\n            if (a instanceof outlineModel_1.OutlineGroup && b instanceof outlineModel_1.OutlineGroup) {\n                return a.providerIndex - b.providerIndex;\n            }\n            else if (a instanceof outlineModel_1.OutlineElement && b instanceof outlineModel_1.OutlineElement) {\n                if (this.type === OutlineSortOrder.ByKind) {\n                    return a.symbol.kind - b.symbol.kind || a.symbol.name.localeCompare(b.symbol.name);\n                }\n                else if (this.type === OutlineSortOrder.ByName) {\n                    return a.symbol.name.localeCompare(b.symbol.name) || range_1.Range.compareRangesUsingStarts(a.symbol.range, b.symbol.range);\n                }\n                else if (this.type === OutlineSortOrder.ByPosition) {\n                    return range_1.Range.compareRangesUsingStarts(a.symbol.range, b.symbol.range) || a.symbol.name.localeCompare(b.symbol.name);\n                }\n            }\n            return 0;\n        }\n    }\n    exports.OutlineItemComparator = OutlineItemComparator;\n    class OutlineDataSource {\n        getChildren(element) {\n            if (!element) {\n                return [];\n            }\n            return collections_1.values(element.children);\n        }\n    }\n    exports.OutlineDataSource = OutlineDataSource;\n});\n",null]}