{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordDistance.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordDistance.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar bracketSelections_1 = require(\"vs/editor/contrib/smartSelect/bracketSelections\");\nvar WordDistance = /** @class */ (function () {\n    function WordDistance() {\n    }\n    WordDistance.create = function (service, editor) {\n        if (!editor.getConfiguration().contribInfo.suggest.localityBonus) {\n            return Promise.resolve(WordDistance.None);\n        }\n        if (!editor.hasModel()) {\n            return Promise.resolve(WordDistance.None);\n        }\n        var model = editor.getModel();\n        var position = editor.getPosition();\n        if (!service.canComputeWordRanges(model.uri)) {\n            return Promise.resolve(WordDistance.None);\n        }\n        return new bracketSelections_1.BracketSelectionRangeProvider().provideSelectionRanges(model, [position]).then(function (ranges) {\n            if (!ranges || ranges.length === 0 || ranges[0].length === 0) {\n                return WordDistance.None;\n            }\n            return service.computeWordRanges(model.uri, ranges[0][0].range).then(function (wordRanges) {\n                return new /** @class */ (function (_super) {\n                    tslib_1.__extends(class_1, _super);\n                    function class_1() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    class_1.prototype.distance = function (anchor, suggestion) {\n                        if (!wordRanges || !position.equals(editor.getPosition())) {\n                            return 0;\n                        }\n                        if (suggestion.kind === modes_1.CompletionItemKind.Keyword) {\n                            return 2 << 20;\n                        }\n                        var word = suggestion.label;\n                        var wordLines = wordRanges[word];\n                        if (arrays_1.isFalsyOrEmpty(wordLines)) {\n                            return 2 << 20;\n                        }\n                        var idx = arrays_1.binarySearch(wordLines, range_1.Range.fromPositions(anchor), range_1.Range.compareRangesUsingStarts);\n                        var bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                        var blockDistance = ranges.length;\n                        for (var _i = 0, _a = ranges[0]; _i < _a.length; _i++) {\n                            var range = _a[_i];\n                            if (!range_1.Range.containsRange(range.range, bestWordRange)) {\n                                break;\n                            }\n                            blockDistance -= 1;\n                        }\n                        return blockDistance;\n                    };\n                    return class_1;\n                }(WordDistance));\n            });\n        });\n    };\n    WordDistance.None = new /** @class */ (function (_super) {\n        tslib_1.__extends(class_2, _super);\n        function class_2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_2.prototype.distance = function () { return 0; };\n        return class_2;\n    }(WordDistance));\n    return WordDistance;\n}());\nexports.WordDistance = WordDistance;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordDistance.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/suggest/wordDistance.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch, isFalsyOrEmpty } from 'vs/base/common/arrays';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IPosition } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { CompletionItem, CompletionItemKind } from 'vs/editor/common/modes';\nimport { BracketSelectionRangeProvider } from 'vs/editor/contrib/smartSelect/bracketSelections';\n\nexport abstract class WordDistance {\n\n\tstatic readonly None = new class extends WordDistance {\n\t\tdistance() { return 0; }\n\t};\n\n\tstatic create(service: IEditorWorkerService, editor: ICodeEditor): Promise<WordDistance> {\n\n\t\tif (!editor.getConfiguration().contribInfo.suggest.localityBonus) {\n\t\t\treturn Promise.resolve(WordDistance.None);\n\t\t}\n\n\t\tif (!editor.hasModel()) {\n\t\t\treturn Promise.resolve(WordDistance.None);\n\t\t}\n\n\t\tconst model = editor.getModel();\n\t\tconst position = editor.getPosition();\n\n\t\tif (!service.canComputeWordRanges(model.uri)) {\n\t\t\treturn Promise.resolve(WordDistance.None);\n\t\t}\n\n\t\treturn new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]).then(ranges => {\n\t\t\tif (!ranges || ranges.length === 0 || ranges[0].length === 0) {\n\t\t\t\treturn WordDistance.None;\n\t\t\t}\n\t\t\treturn service.computeWordRanges(model.uri, ranges[0][0].range).then(wordRanges => {\n\t\t\t\treturn new class extends WordDistance {\n\t\t\t\t\tdistance(anchor: IPosition, suggestion: CompletionItem) {\n\t\t\t\t\t\tif (!wordRanges || !position.equals(editor.getPosition())) {\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (suggestion.kind === CompletionItemKind.Keyword) {\n\t\t\t\t\t\t\treturn 2 << 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet word = suggestion.label;\n\t\t\t\t\t\tlet wordLines = wordRanges[word];\n\t\t\t\t\t\tif (isFalsyOrEmpty(wordLines)) {\n\t\t\t\t\t\t\treturn 2 << 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n\t\t\t\t\t\tlet bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n\t\t\t\t\t\tlet blockDistance = ranges.length;\n\t\t\t\t\t\tfor (const range of ranges[0]) {\n\t\t\t\t\t\t\tif (!Range.containsRange(range.range, bestWordRange)) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tblockDistance -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn blockDistance;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tabstract distance(anchor: IPosition, suggestion: CompletionItem): number;\n}\n\n\n"]}]}