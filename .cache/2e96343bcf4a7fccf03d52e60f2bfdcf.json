{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/extensions/node/extensionsUtil.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/extensions/node/extensionsUtil.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extensionManagementUtil_1 = require(\"vs/platform/extensionManagement/common/extensionManagementUtil\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nfunction isUIExtension(manifest, uiContributions, configurationService) {\n    var extensionId = extensionManagementUtil_1.getGalleryExtensionId(manifest.publisher, manifest.name);\n    var configuredUIExtensions = configurationService.getValue('_workbench.uiExtensions') || [];\n    if (configuredUIExtensions.length) {\n        if (configuredUIExtensions.indexOf(extensionId) !== -1) {\n            return true;\n        }\n        if (configuredUIExtensions.indexOf(\"-\" + extensionId) !== -1) {\n            return false;\n        }\n    }\n    switch (manifest.extensionKind) {\n        case 'ui': return true;\n        case 'workspace': return false;\n        default: {\n            if (arrays_1.isNonEmptyArray(product_1.default.uiExtensions) && product_1.default.uiExtensions.some(function (id) { return extensionManagementUtil_1.areSameExtensions({ id: id }, { id: extensionId }); })) {\n                return true;\n            }\n            if (manifest.main) {\n                return false;\n            }\n            if (manifest.contributes) {\n                if (!uiContributions.length || Object.keys(manifest.contributes).some(function (contribution) { return uiContributions.indexOf(contribution) === -1; })) {\n                    return false;\n                }\n            }\n            // Default is UI Extension\n            return true;\n        }\n    }\n}\nexports.isUIExtension = isUIExtension;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/extensions/node/extensionsUtil.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/extensions/node/extensionsUtil.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAIhG,0GAA0H;AAC1H,gDAAwD;AACxD,4DAAuD;AAEvD,SAAgB,aAAa,CAAC,QAA4B,EAAE,eAAyB,EAAE,oBAA2C;IACjI,IAAM,WAAW,GAAG,+CAAqB,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7E,IAAM,sBAAsB,GAAG,oBAAoB,CAAC,QAAQ,CAAW,yBAAyB,CAAC,IAAI,EAAE,CAAC;IACxG,IAAI,sBAAsB,CAAC,MAAM,EAAE;QAClC,IAAI,sBAAsB,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,sBAAsB,CAAC,OAAO,CAAC,MAAI,WAAa,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7D,OAAO,KAAK,CAAC;SACb;KACD;IACD,QAAQ,QAAQ,CAAC,aAAa,EAAE;QAC/B,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC;QACvB,KAAK,WAAW,CAAC,CAAC,OAAO,KAAK,CAAC;QAC/B,OAAO,CAAC,CAAC;YACR,IAAI,wBAAe,CAAC,iBAAO,CAAC,YAAY,CAAC,IAAI,iBAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,2CAAiB,CAAC,EAAE,EAAE,IAAA,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAA9C,CAA8C,CAAC,EAAE;gBAC7H,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,QAAQ,CAAC,IAAI,EAAE;gBAClB,OAAO,KAAK,CAAC;aACb;YACD,IAAI,QAAQ,CAAC,WAAW,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAA,YAAY,IAAI,OAAA,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAA5C,CAA4C,CAAC,EAAE;oBACpI,OAAO,KAAK,CAAC;iBACb;aACD;YACD,0BAA0B;YAC1B,OAAO,IAAI,CAAC;SACZ;KACD;AACF,CAAC;AA9BD,sCA8BC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { getGalleryExtensionId, areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport product from 'vs/platform/product/node/product';\n\nexport function isUIExtension(manifest: IExtensionManifest, uiContributions: string[], configurationService: IConfigurationService): boolean {\n\tconst extensionId = getGalleryExtensionId(manifest.publisher, manifest.name);\n\tconst configuredUIExtensions = configurationService.getValue<string[]>('_workbench.uiExtensions') || [];\n\tif (configuredUIExtensions.length) {\n\t\tif (configuredUIExtensions.indexOf(extensionId) !== -1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (configuredUIExtensions.indexOf(`-${extensionId}`) !== -1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tswitch (manifest.extensionKind) {\n\t\tcase 'ui': return true;\n\t\tcase 'workspace': return false;\n\t\tdefault: {\n\t\t\tif (isNonEmptyArray(product.uiExtensions) && product.uiExtensions.some(id => areSameExtensions({ id }, { id: extensionId }))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (manifest.main) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (manifest.contributes) {\n\t\t\t\tif (!uiContributions.length || Object.keys(manifest.contributes).some(contribution => uiContributions.indexOf(contribution) === -1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Default is UI Extension\n\t\t\treturn true;\n\t\t}\n\t}\n}\n"]}]}