{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/extensionActions\");\nvar nls_1 = require(\"vs/nls\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar async_1 = require(\"vs/base/common/async\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar event_1 = require(\"vs/base/common/event\");\nvar json = require(\"vs/base/common/json\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar extensions_1 = require(\"vs/workbench/contrib/extensions/common/extensions\");\nvar extensionsFileTemplate_1 = require(\"vs/workbench/contrib/extensions/common/extensionsFileTemplate\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nvar extensionManagementUtil_1 = require(\"vs/platform/extensionManagement/common/extensionManagementUtil\");\nvar extensions_2 = require(\"vs/platform/extensions/common/extensions\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar viewlet_1 = require(\"vs/workbench/browser/viewlet\");\nvar viewlet_2 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar extensionQuery_1 = require(\"vs/workbench/contrib/extensions/common/extensionQuery\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar extensions_3 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar color_1 = require(\"vs/base/common/color\");\nvar jsonEditing_1 = require(\"vs/workbench/services/configuration/common/jsonEditing\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar paging_1 = require(\"vs/base/common/paging\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar workspaceCommands_1 = require(\"vs/workbench/browser/actions/workspaceCommands\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar extensionsInput_1 = require(\"vs/workbench/contrib/extensions/common/extensionsInput\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar electron_1 = require(\"electron\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar workbenchThemeService_1 = require(\"vs/workbench/services/themes/common/workbenchThemeService\");\nfunction toExtensionDescription(local) {\n    return tslib_1.__assign({ identifier: new extensions_2.ExtensionIdentifier(local.identifier.id), isBuiltin: local.type === extensions_2.ExtensionType.System, isUnderDevelopment: false, extensionLocation: local.location }, local.manifest);\n}\nvar promptDownloadManually = function (extension, message, error, instantiationService, notificationService, openerService) {\n    if (!extension || error.name === extensionManagement_1.INSTALL_ERROR_INCOMPATIBLE || error.name === extensionManagement_1.INSTALL_ERROR_MALICIOUS) {\n        return Promise.reject(error);\n    }\n    else {\n        var downloadUrl_1 = product_1.default.extensionsGallery.serviceUrl + \"/publishers/\" + extension.publisher + \"/vsextensions/\" + extension.name + \"/\" + extension.version + \"/vspackage\";\n        notificationService.prompt(notification_1.Severity.Error, message, [{\n                label: nls_1.localize('download', \"Download Manually\"),\n                run: function () { return openerService.open(uri_1.URI.parse(downloadUrl_1)).then(function () {\n                    notificationService.prompt(notification_1.Severity.Info, nls_1.localize('install vsix', 'Once downloaded, please manually install the downloaded VSIX of \\'{0}\\'.', extension.identifier.id), [{\n                            label: InstallVSIXAction.LABEL,\n                            run: function () {\n                                var action = instantiationService.createInstance(InstallVSIXAction, InstallVSIXAction.ID, InstallVSIXAction.LABEL);\n                                action.run();\n                                action.dispose();\n                            }\n                        }]);\n                }); }\n            }]);\n        return Promise.resolve();\n    }\n};\nfunction getRelativeDateLabel(date) {\n    var delta = new Date().getTime() - date.getTime();\n    var year = 365 * 24 * 60 * 60 * 1000;\n    if (delta > year) {\n        var noOfYears = Math.floor(delta / year);\n        return noOfYears > 1 ? nls_1.localize('noOfYearsAgo', \"{0} years ago\", noOfYears) : nls_1.localize('one year ago', \"1 year ago\");\n    }\n    var month = 30 * 24 * 60 * 60 * 1000;\n    if (delta > month) {\n        var noOfMonths = Math.floor(delta / month);\n        return noOfMonths > 1 ? nls_1.localize('noOfMonthsAgo', \"{0} months ago\", noOfMonths) : nls_1.localize('one month ago', \"1 month ago\");\n    }\n    var day = 24 * 60 * 60 * 1000;\n    if (delta > day) {\n        var noOfDays = Math.floor(delta / day);\n        return noOfDays > 1 ? nls_1.localize('noOfDaysAgo', \"{0} days ago\", noOfDays) : nls_1.localize('one day ago', \"1 day ago\");\n    }\n    var hour = 60 * 60 * 1000;\n    if (delta > hour) {\n        var noOfHours = Math.floor(delta / day);\n        return noOfHours > 1 ? nls_1.localize('noOfHoursAgo', \"{0} hours ago\", noOfHours) : nls_1.localize('one hour ago', \"1 hour ago\");\n    }\n    if (delta > 0) {\n        return nls_1.localize('just now', \"Just now\");\n    }\n    return '';\n}\nvar ExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionAction, _super);\n    function ExtensionAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ExtensionAction.prototype, \"extension\", {\n        get: function () { return this._extension; },\n        set: function (extension) { this._extension = extension; this.update(); },\n        enumerable: true,\n        configurable: true\n    });\n    return ExtensionAction;\n}(actions_1.Action));\nexports.ExtensionAction = ExtensionAction;\nvar InstallAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallAction, _super);\n    function InstallAction(extensionsWorkbenchService, instantiationService, notificationService, openerService, runtimeExtensionService, workbenchThemeService) {\n        var _this = _super.call(this, \"extensions.install\", InstallAction.INSTALL_LABEL, InstallAction.Class, false) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.instantiationService = instantiationService;\n        _this.notificationService = notificationService;\n        _this.openerService = openerService;\n        _this.runtimeExtensionService = runtimeExtensionService;\n        _this.workbenchThemeService = workbenchThemeService;\n        _this.update();\n        return _this;\n    }\n    InstallAction.prototype.update = function () {\n        if (!this.extension || this.extension.type === extensions_2.ExtensionType.System) {\n            this.enabled = false;\n            this.class = InstallAction.Class;\n            this.label = InstallAction.INSTALL_LABEL;\n            return;\n        }\n        this.enabled = this.extensionsWorkbenchService.canInstall(this.extension) && this.extension.state === extensions_1.ExtensionState.Uninstalled;\n        if (this.extension.state === extensions_1.ExtensionState.Installing) {\n            this.label = InstallAction.INSTALLING_LABEL;\n            this.class = InstallAction.InstallingClass;\n            this.tooltip = InstallAction.INSTALLING_LABEL;\n        }\n        else {\n            this.label = InstallAction.INSTALL_LABEL;\n            this.class = InstallAction.Class;\n            this.tooltip = InstallAction.INSTALL_LABEL;\n        }\n    };\n    InstallAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var extension, runningExtension, colorThemes, fileIconThemes, action, action;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.extensionsWorkbenchService.open(this.extension);\n                        aria_1.alert(nls_1.localize('installExtensionStart', \"Installing extension {0} started. An editor is now open with more details on this extension\", this.extension.displayName));\n                        return [4 /*yield*/, this.install(this.extension)];\n                    case 1:\n                        extension = _a.sent();\n                        if (!extension.local) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.getRunningExtension(extension.local)];\n                    case 2:\n                        runningExtension = _a.sent();\n                        if (!runningExtension) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.workbenchThemeService.getColorThemes()];\n                    case 3:\n                        colorThemes = _a.sent();\n                        return [4 /*yield*/, this.workbenchThemeService.getFileIconThemes()];\n                    case 4:\n                        fileIconThemes = _a.sent();\n                        if (SetColorThemeAction.getColorThemes(colorThemes, this.extension).length) {\n                            action = this.instantiationService.createInstance(SetColorThemeAction, colorThemes);\n                            action.extension = extension;\n                            return [2 /*return*/, action.run({ showCurrentTheme: true, ignoreFocusLost: true })];\n                        }\n                        if (SetFileIconThemeAction.getFileIconThemes(fileIconThemes, this.extension).length) {\n                            action = this.instantiationService.createInstance(SetFileIconThemeAction, fileIconThemes);\n                            action.extension = extension;\n                            return [2 /*return*/, action.run({ showCurrentTheme: true, ignoreFocusLost: true })];\n                        }\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    InstallAction.prototype.install = function (extension) {\n        var _this = this;\n        return this.extensionsWorkbenchService.install(extension)\n            .then(null, function (err) {\n            if (!extension.gallery) {\n                return _this.notificationService.error(err);\n            }\n            console.error(err);\n            return promptDownloadManually(extension.gallery, nls_1.localize('failedToInstall', \"Failed to install \\'{0}\\'.\", extension.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n        });\n    };\n    InstallAction.prototype.getRunningExtension = function (extension) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var runningExtension;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.runtimeExtensionService.getExtension(extension.identifier.id)];\n                    case 1:\n                        runningExtension = _a.sent();\n                        if (runningExtension) {\n                            return [2 /*return*/, runningExtension];\n                        }\n                        if (this.runtimeExtensionService.canAddExtension(toExtensionDescription(extension))) {\n                            return [2 /*return*/, new Promise(function (c, e) {\n                                    var disposable = _this.runtimeExtensionService.onDidChangeExtensions(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                        var runningExtension;\n                                        return tslib_1.__generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0: return [4 /*yield*/, this.runtimeExtensionService.getExtension(extension.identifier.id)];\n                                                case 1:\n                                                    runningExtension = _a.sent();\n                                                    if (runningExtension) {\n                                                        disposable.dispose();\n                                                        c(runningExtension);\n                                                    }\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); });\n                                })];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    InstallAction.INSTALL_LABEL = nls_1.localize('install', \"Install\");\n    InstallAction.INSTALLING_LABEL = nls_1.localize('installing', \"Installing\");\n    InstallAction.Class = 'extension-action prominent install';\n    InstallAction.InstallingClass = 'extension-action install installing';\n    InstallAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, notification_1.INotificationService),\n        tslib_1.__param(3, opener_1.IOpenerService),\n        tslib_1.__param(4, extensions_3.IExtensionService),\n        tslib_1.__param(5, workbenchThemeService_1.IWorkbenchThemeService)\n    ], InstallAction);\n    return InstallAction;\n}(ExtensionAction));\nexports.InstallAction = InstallAction;\nvar UninstallAction = /** @class */ (function (_super) {\n    tslib_1.__extends(UninstallAction, _super);\n    function UninstallAction(extensionsWorkbenchService) {\n        var _this = _super.call(this, 'extensions.uninstall', UninstallAction.UninstallLabel, UninstallAction.UninstallClass, false) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.update();\n        return _this;\n    }\n    UninstallAction.prototype.update = function () {\n        var _this = this;\n        if (!this.extension) {\n            this.enabled = false;\n            return;\n        }\n        var state = this.extension.state;\n        if (state === extensions_1.ExtensionState.Uninstalling) {\n            this.label = UninstallAction.UninstallingLabel;\n            this.class = UninstallAction.UnInstallingClass;\n            this.enabled = false;\n            return;\n        }\n        this.label = UninstallAction.UninstallLabel;\n        this.class = UninstallAction.UninstallClass;\n        var installedExtensions = this.extensionsWorkbenchService.local.filter(function (e) { return extensionManagementUtil_1.areSameExtensions(e.identifier, _this.extension.identifier); });\n        if (!installedExtensions.length) {\n            this.enabled = false;\n            return;\n        }\n        if (state !== extensions_1.ExtensionState.Installed) {\n            this.enabled = false;\n            return;\n        }\n        if (installedExtensions[0].type !== extensions_2.ExtensionType.User) {\n            this.enabled = false;\n            return;\n        }\n        this.enabled = true;\n    };\n    UninstallAction.prototype.run = function () {\n        var _this = this;\n        aria_1.alert(nls_1.localize('uninstallExtensionStart', \"Uninstalling extension {0} started.\", this.extension.displayName));\n        return this.extensionsWorkbenchService.uninstall(this.extension).then(function () {\n            aria_1.alert(nls_1.localize('uninstallExtensionComplete', \"Please reload Visual Studio Code to complete the uninstallation of the extension {0}.\", _this.extension.displayName));\n        });\n    };\n    UninstallAction.UninstallLabel = nls_1.localize('uninstallAction', \"Uninstall\");\n    UninstallAction.UninstallingLabel = nls_1.localize('Uninstalling', \"Uninstalling\");\n    UninstallAction.UninstallClass = 'extension-action uninstall';\n    UninstallAction.UnInstallingClass = 'extension-action uninstall uninstalling';\n    UninstallAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService)\n    ], UninstallAction);\n    return UninstallAction;\n}(ExtensionAction));\nexports.UninstallAction = UninstallAction;\nvar CombinedInstallAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CombinedInstallAction, _super);\n    function CombinedInstallAction(instantiationService) {\n        var _this = _super.call(this, 'extensions.combinedInstall', '', '', false) || this;\n        _this.disposables = [];\n        _this.installAction = instantiationService.createInstance(InstallAction);\n        _this.uninstallAction = instantiationService.createInstance(UninstallAction);\n        _this.disposables.push(_this.installAction, _this.uninstallAction);\n        _this.update();\n        return _this;\n    }\n    CombinedInstallAction.prototype.update = function () {\n        this.installAction.extension = this.extension;\n        this.uninstallAction.extension = this.extension;\n        this.installAction.update();\n        this.uninstallAction.update();\n        if (!this.extension || this.extension.type === extensions_2.ExtensionType.System) {\n            this.enabled = false;\n            this.class = CombinedInstallAction.NoExtensionClass;\n        }\n        else if (this.extension.state === extensions_1.ExtensionState.Installing) {\n            this.enabled = false;\n            this.label = this.installAction.label;\n            this.class = this.installAction.class;\n            this.tooltip = this.installAction.tooltip;\n        }\n        else if (this.extension.state === extensions_1.ExtensionState.Uninstalling) {\n            this.enabled = false;\n            this.label = this.uninstallAction.label;\n            this.class = this.uninstallAction.class;\n            this.tooltip = this.uninstallAction.tooltip;\n        }\n        else if (this.installAction.enabled) {\n            this.enabled = true;\n            this.label = this.installAction.label;\n            this.class = this.installAction.class;\n            this.tooltip = this.installAction.tooltip;\n        }\n        else if (this.uninstallAction.enabled) {\n            this.enabled = true;\n            this.label = this.uninstallAction.label;\n            this.class = this.uninstallAction.class;\n            this.tooltip = this.uninstallAction.tooltip;\n        }\n        else {\n            this.enabled = false;\n            this.label = this.installAction.label;\n            this.class = this.installAction.class;\n            this.tooltip = this.installAction.tooltip;\n        }\n    };\n    CombinedInstallAction.prototype.run = function () {\n        if (this.installAction.enabled) {\n            return this.installAction.run();\n        }\n        else if (this.uninstallAction.enabled) {\n            return this.uninstallAction.run();\n        }\n        return Promise.resolve();\n    };\n    CombinedInstallAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    CombinedInstallAction.NoExtensionClass = 'extension-action prominent install no-extension';\n    CombinedInstallAction = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService)\n    ], CombinedInstallAction);\n    return CombinedInstallAction;\n}(ExtensionAction));\nexports.CombinedInstallAction = CombinedInstallAction;\nvar UpdateAction = /** @class */ (function (_super) {\n    tslib_1.__extends(UpdateAction, _super);\n    function UpdateAction(extensionsWorkbenchService, instantiationService, notificationService, openerService) {\n        var _this = _super.call(this, \"extensions.update\", '', UpdateAction.DisabledClass, false) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.instantiationService = instantiationService;\n        _this.notificationService = notificationService;\n        _this.openerService = openerService;\n        _this.update();\n        return _this;\n    }\n    UpdateAction.prototype.update = function () {\n        if (!this.extension) {\n            this.enabled = false;\n            this.class = UpdateAction.DisabledClass;\n            this.label = this.getUpdateLabel();\n            return;\n        }\n        if (this.extension.type !== extensions_2.ExtensionType.User) {\n            this.enabled = false;\n            this.class = UpdateAction.DisabledClass;\n            this.label = this.getUpdateLabel();\n            return;\n        }\n        var canInstall = this.extensionsWorkbenchService.canInstall(this.extension);\n        var isInstalled = this.extension.state === extensions_1.ExtensionState.Installed;\n        this.enabled = canInstall && isInstalled && this.extension.outdated;\n        this.class = this.enabled ? UpdateAction.EnabledClass : UpdateAction.DisabledClass;\n        this.label = this.extension.outdated ? this.getUpdateLabel(this.extension.latestVersion) : this.getUpdateLabel();\n    };\n    UpdateAction.prototype.run = function () {\n        aria_1.alert(nls_1.localize('updateExtensionStart', \"Updating extension {0} to version {1} started.\", this.extension.displayName, this.extension.latestVersion));\n        return this.install(this.extension);\n    };\n    UpdateAction.prototype.install = function (extension) {\n        var _this = this;\n        return this.extensionsWorkbenchService.install(extension).then(function () {\n            aria_1.alert(nls_1.localize('updateExtensionComplete', \"Updating extension {0} to version {1} completed.\", _this.extension.displayName, _this.extension.latestVersion));\n        }, function (err) {\n            if (!extension.gallery) {\n                return _this.notificationService.error(err);\n            }\n            console.error(err);\n            return promptDownloadManually(extension.gallery, nls_1.localize('failedToUpdate', \"Failed to update \\'{0}\\'.\", extension.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n        });\n    };\n    UpdateAction.prototype.getUpdateLabel = function (version) {\n        return version ? nls_1.localize('updateTo', \"Update to {0}\", version) : nls_1.localize('updateAction', \"Update\");\n    };\n    UpdateAction.EnabledClass = 'extension-action prominent update';\n    UpdateAction.DisabledClass = UpdateAction.EnabledClass + \" disabled\";\n    UpdateAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, notification_1.INotificationService),\n        tslib_1.__param(3, opener_1.IOpenerService)\n    ], UpdateAction);\n    return UpdateAction;\n}(ExtensionAction));\nexports.UpdateAction = UpdateAction;\nvar ExtensionActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionActionItem, _super);\n    function ExtensionActionItem(context, action, options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, context, action, options) || this;\n    }\n    ExtensionActionItem.prototype.updateEnabled = function () {\n        _super.prototype.updateEnabled.call(this);\n        if (this.options.tabOnlyOnFocus && this.getAction().enabled && !this._hasFocus) {\n            DOM.removeTabIndexAndUpdateFocus(this.label);\n        }\n    };\n    ExtensionActionItem.prototype.setFocus = function (value) {\n        if (!this.options.tabOnlyOnFocus || this._hasFocus === value) {\n            return;\n        }\n        this._hasFocus = value;\n        if (this.getAction().enabled) {\n            if (this._hasFocus) {\n                this.label.tabIndex = 0;\n            }\n            else {\n                DOM.removeTabIndexAndUpdateFocus(this.label);\n            }\n        }\n    };\n    return ExtensionActionItem;\n}(actionbar_1.ActionItem));\nexports.ExtensionActionItem = ExtensionActionItem;\nvar ExtensionDropDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionDropDownAction, _super);\n    function ExtensionDropDownAction(id, label, cssClass, enabled, tabOnlyOnFocus, instantiationService) {\n        var _this = _super.call(this, id, label, cssClass, enabled) || this;\n        _this.tabOnlyOnFocus = tabOnlyOnFocus;\n        _this.instantiationService = instantiationService;\n        _this.disposables = [];\n        return _this;\n    }\n    ExtensionDropDownAction.prototype.createActionItem = function () {\n        this._actionItem = this.instantiationService.createInstance(DropDownMenuActionItem, this, this.tabOnlyOnFocus);\n        return this._actionItem;\n    };\n    ExtensionDropDownAction.prototype.run = function (_a) {\n        var actionGroups = _a.actionGroups, disposeActionsOnHide = _a.disposeActionsOnHide;\n        if (this._actionItem) {\n            this._actionItem.showMenu(actionGroups, disposeActionsOnHide);\n        }\n        return Promise.resolve();\n    };\n    ExtensionDropDownAction.prototype.dispose = function () {\n        lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    ExtensionDropDownAction = tslib_1.__decorate([\n        tslib_1.__param(5, instantiation_1.IInstantiationService)\n    ], ExtensionDropDownAction);\n    return ExtensionDropDownAction;\n}(ExtensionAction));\nexports.ExtensionDropDownAction = ExtensionDropDownAction;\nvar DropDownMenuActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(DropDownMenuActionItem, _super);\n    function DropDownMenuActionItem(action, tabOnlyOnFocus, contextMenuService) {\n        var _this = _super.call(this, null, action, { icon: true, label: true, tabOnlyOnFocus: tabOnlyOnFocus }) || this;\n        _this.contextMenuService = contextMenuService;\n        _this.disposables = [];\n        return _this;\n    }\n    DropDownMenuActionItem.prototype.showMenu = function (menuActionGroups, disposeActionsOnHide) {\n        if (this.element) {\n            var actions_3 = this.getActions(menuActionGroups);\n            var elementPosition = DOM.getDomNodePagePosition(this.element);\n            var anchor_1 = { x: elementPosition.left, y: elementPosition.top + elementPosition.height + 10 };\n            this.contextMenuService.showContextMenu({\n                getAnchor: function () { return anchor_1; },\n                getActions: function () { return actions_3; },\n                actionRunner: this.actionRunner,\n                onHide: function () { if (disposeActionsOnHide) {\n                    lifecycle_1.dispose(actions_3);\n                } }\n            });\n        }\n    };\n    DropDownMenuActionItem.prototype.getActions = function (menuActionGroups) {\n        var actions = [];\n        for (var _i = 0, menuActionGroups_1 = menuActionGroups; _i < menuActionGroups_1.length; _i++) {\n            var menuActions = menuActionGroups_1[_i];\n            actions = actions.concat(menuActions, [new actionbar_1.Separator()]);\n        }\n        return actions.length ? actions.slice(0, actions.length - 1) : actions;\n    };\n    DropDownMenuActionItem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    DropDownMenuActionItem = tslib_1.__decorate([\n        tslib_1.__param(2, contextView_1.IContextMenuService)\n    ], DropDownMenuActionItem);\n    return DropDownMenuActionItem;\n}(ExtensionActionItem));\nexports.DropDownMenuActionItem = DropDownMenuActionItem;\nvar ManageExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ManageExtensionAction, _super);\n    function ManageExtensionAction(instantiationService, extensionService, workbenchThemeService) {\n        var _this = _super.call(this, ManageExtensionAction.ID, '', '', true, true, instantiationService) || this;\n        _this.extensionService = extensionService;\n        _this.workbenchThemeService = workbenchThemeService;\n        _this.tooltip = nls_1.localize('manage', \"Manage\");\n        _this.update();\n        return _this;\n    }\n    ManageExtensionAction.prototype.getActionGroups = function (runningExtensions, colorThemes, fileIconThemes) {\n        var _this = this;\n        var groups = [];\n        if (this.extension) {\n            var extensionColorThemes = SetColorThemeAction.getColorThemes(colorThemes, this.extension);\n            var extensionFileIconThemes = SetFileIconThemeAction.getFileIconThemes(fileIconThemes, this.extension);\n            if (extensionColorThemes.length || extensionFileIconThemes.length) {\n                var themesGroup = [];\n                if (extensionColorThemes.length) {\n                    themesGroup.push(this.instantiationService.createInstance(SetColorThemeAction, colorThemes));\n                }\n                if (extensionFileIconThemes.length) {\n                    themesGroup.push(this.instantiationService.createInstance(SetFileIconThemeAction, fileIconThemes));\n                }\n                groups.push(themesGroup);\n            }\n        }\n        groups.push([\n            this.instantiationService.createInstance(EnableGloballyAction),\n            this.instantiationService.createInstance(EnableForWorkspaceAction)\n        ]);\n        groups.push([\n            this.instantiationService.createInstance(DisableGloballyAction, runningExtensions),\n            this.instantiationService.createInstance(DisableForWorkspaceAction, runningExtensions)\n        ]);\n        groups.push([this.instantiationService.createInstance(UninstallAction)]);\n        groups.push([this.instantiationService.createInstance(InstallAnotherVersionAction)]);\n        groups.push([this.instantiationService.createInstance(ExtensionInfoAction)]);\n        groups.forEach(function (group) { return group.forEach(function (extensionAction) { return extensionAction.extension = _this.extension; }); });\n        return groups;\n    };\n    ManageExtensionAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var runtimeExtensions, colorThemes, fileIconThemes;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 1:\n                        runtimeExtensions = _a.sent();\n                        return [4 /*yield*/, this.workbenchThemeService.getColorThemes()];\n                    case 2:\n                        colorThemes = _a.sent();\n                        return [4 /*yield*/, this.workbenchThemeService.getFileIconThemes()];\n                    case 3:\n                        fileIconThemes = _a.sent();\n                        return [2 /*return*/, _super.prototype.run.call(this, { actionGroups: this.getActionGroups(runtimeExtensions, colorThemes, fileIconThemes), disposeActionsOnHide: true })];\n                }\n            });\n        });\n    };\n    ManageExtensionAction.prototype.update = function () {\n        this.class = ManageExtensionAction.HideManageExtensionClass;\n        this.enabled = false;\n        if (this.extension) {\n            var state = this.extension.state;\n            this.enabled = state === extensions_1.ExtensionState.Installed;\n            this.class = this.enabled || state === extensions_1.ExtensionState.Uninstalling ? ManageExtensionAction.Class : ManageExtensionAction.HideManageExtensionClass;\n            this.tooltip = state === extensions_1.ExtensionState.Uninstalling ? nls_1.localize('ManageExtensionAction.uninstallingTooltip', \"Uninstalling\") : '';\n        }\n    };\n    ManageExtensionAction.ID = 'extensions.manage';\n    ManageExtensionAction.Class = 'extension-action manage';\n    ManageExtensionAction.HideManageExtensionClass = ManageExtensionAction.Class + \" hide\";\n    ManageExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService),\n        tslib_1.__param(1, extensions_3.IExtensionService),\n        tslib_1.__param(2, workbenchThemeService_1.IWorkbenchThemeService)\n    ], ManageExtensionAction);\n    return ManageExtensionAction;\n}(ExtensionDropDownAction));\nexports.ManageExtensionAction = ManageExtensionAction;\nvar InstallAnotherVersionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallAnotherVersionAction, _super);\n    function InstallAnotherVersionAction(extensionsWorkbenchService, extensionGalleryService, quickInputService, instantiationService, notificationService, openerService) {\n        var _this = _super.call(this, InstallAnotherVersionAction.ID, InstallAnotherVersionAction.LABEL) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionGalleryService = extensionGalleryService;\n        _this.quickInputService = quickInputService;\n        _this.instantiationService = instantiationService;\n        _this.notificationService = notificationService;\n        _this.openerService = openerService;\n        _this.update();\n        return _this;\n    }\n    InstallAnotherVersionAction.prototype.update = function () {\n        this.enabled = this.extension && !!this.extension.gallery;\n    };\n    InstallAnotherVersionAction.prototype.run = function () {\n        var _this = this;\n        if (!this.enabled) {\n            return Promise.resolve();\n        }\n        return this.quickInputService.pick(this.getVersionEntries(), { placeHolder: nls_1.localize('selectVersion', \"Select Version to Install\"), matchOnDetail: true })\n            .then(function (pick) {\n            if (pick) {\n                if (_this.extension.version === pick.id) {\n                    return Promise.resolve();\n                }\n                var promise = pick.latest ? _this.extensionsWorkbenchService.install(_this.extension) : _this.extensionsWorkbenchService.installVersion(_this.extension, pick.id);\n                return promise\n                    .then(null, function (err) {\n                    if (!_this.extension.gallery) {\n                        return _this.notificationService.error(err);\n                    }\n                    console.error(err);\n                    return promptDownloadManually(_this.extension.gallery, nls_1.localize('failedToInstall', \"Failed to install \\'{0}\\'.\", _this.extension.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n                });\n            }\n            return null;\n        });\n    };\n    InstallAnotherVersionAction.prototype.getVersionEntries = function () {\n        var _this = this;\n        return this.extensionGalleryService.getAllVersions(this.extension.gallery, true)\n            .then(function (allVersions) { return allVersions.map(function (v, i) { return ({ id: v.version, label: v.version, description: \"\" + getRelativeDateLabel(new Date(Date.parse(v.date))) + (v.version === _this.extension.version ? \" (\" + nls_1.localize('current', \"Current\") + \")\" : ''), latest: i === 0 }); }); });\n    };\n    InstallAnotherVersionAction.ID = 'workbench.extensions.action.install.anotherVersion';\n    InstallAnotherVersionAction.LABEL = nls_1.localize('install another version', \"Install Another Version...\");\n    InstallAnotherVersionAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, extensionManagement_1.IExtensionGalleryService),\n        tslib_1.__param(2, quickInput_1.IQuickInputService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, notification_1.INotificationService),\n        tslib_1.__param(5, opener_1.IOpenerService)\n    ], InstallAnotherVersionAction);\n    return InstallAnotherVersionAction;\n}(ExtensionAction));\nexports.InstallAnotherVersionAction = InstallAnotherVersionAction;\nvar ExtensionInfoAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionInfoAction, _super);\n    function ExtensionInfoAction() {\n        var _this = _super.call(this, ExtensionInfoAction.ID, ExtensionInfoAction.LABEL) || this;\n        _this.update();\n        return _this;\n    }\n    ExtensionInfoAction.prototype.update = function () {\n        this.enabled = !!this.extension;\n    };\n    ExtensionInfoAction.prototype.run = function () {\n        var name = nls_1.localize('extensionInfoName', 'Name: {0}', this.extension.displayName);\n        var id = nls_1.localize('extensionInfoId', 'Id: {0}', this.extension.identifier.id);\n        var description = nls_1.localize('extensionInfoDescription', 'Description: {0}', this.extension.description);\n        var verision = nls_1.localize('extensionInfoVersion', 'Version: {0}', this.extension.version);\n        var publisher = nls_1.localize('extensionInfoPublisher', 'Publisher: {0}', this.extension.publisherDisplayName);\n        var link = this.extension.url ? nls_1.localize('extensionInfoVSMarketplaceLink', 'VS Marketplace Link: {0}', this.extension.url.toString()) : null;\n        var clipboardStr = name + \"\\n\" + id + \"\\n\" + description + \"\\n\" + verision + \"\\n\" + publisher + (link ? '\\n' + link : '');\n        electron_1.clipboard.writeText(clipboardStr);\n        return Promise.resolve();\n    };\n    ExtensionInfoAction.ID = 'extensions.extensionInfo';\n    ExtensionInfoAction.LABEL = nls_1.localize('extensionInfoAction', \"Copy Extension Information\");\n    return ExtensionInfoAction;\n}(ExtensionAction));\nexports.ExtensionInfoAction = ExtensionInfoAction;\nvar EnableForWorkspaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableForWorkspaceAction, _super);\n    function EnableForWorkspaceAction(extensionsWorkbenchService, extensionEnablementService) {\n        var _this = _super.call(this, EnableForWorkspaceAction.ID, EnableForWorkspaceAction.LABEL) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.update();\n        return _this;\n    }\n    EnableForWorkspaceAction.prototype.update = function () {\n        this.enabled = false;\n        if (this.extension) {\n            this.enabled = this.extension.state === extensions_1.ExtensionState.Installed && (this.extension.enablementState === extensionManagement_1.EnablementState.Disabled || this.extension.enablementState === extensionManagement_1.EnablementState.WorkspaceDisabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n        }\n    };\n    EnableForWorkspaceAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extension, extensionManagement_1.EnablementState.WorkspaceEnabled);\n    };\n    EnableForWorkspaceAction.ID = 'extensions.enableForWorkspace';\n    EnableForWorkspaceAction.LABEL = nls_1.localize('enableForWorkspaceAction', \"Enable (Workspace)\");\n    EnableForWorkspaceAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, extensionManagement_1.IExtensionEnablementService)\n    ], EnableForWorkspaceAction);\n    return EnableForWorkspaceAction;\n}(ExtensionAction));\nexports.EnableForWorkspaceAction = EnableForWorkspaceAction;\nvar EnableGloballyAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableGloballyAction, _super);\n    function EnableGloballyAction(extensionsWorkbenchService, extensionEnablementService) {\n        var _this = _super.call(this, EnableGloballyAction.ID, EnableGloballyAction.LABEL) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.update();\n        return _this;\n    }\n    EnableGloballyAction.prototype.update = function () {\n        this.enabled = false;\n        if (this.extension && this.extension.local) {\n            this.enabled = this.extension.state === extensions_1.ExtensionState.Installed && this.extension.enablementState === extensionManagement_1.EnablementState.Disabled && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n        }\n    };\n    EnableGloballyAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extension, extensionManagement_1.EnablementState.Enabled);\n    };\n    EnableGloballyAction.ID = 'extensions.enableGlobally';\n    EnableGloballyAction.LABEL = nls_1.localize('enableGloballyAction', \"Enable\");\n    EnableGloballyAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, extensionManagement_1.IExtensionEnablementService)\n    ], EnableGloballyAction);\n    return EnableGloballyAction;\n}(ExtensionAction));\nexports.EnableGloballyAction = EnableGloballyAction;\nvar DisableForWorkspaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableForWorkspaceAction, _super);\n    function DisableForWorkspaceAction(runningExtensions, workspaceContextService, extensionsWorkbenchService, extensionEnablementService) {\n        var _this = _super.call(this, DisableForWorkspaceAction.ID, DisableForWorkspaceAction.LABEL) || this;\n        _this.runningExtensions = runningExtensions;\n        _this.workspaceContextService = workspaceContextService;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.update();\n        return _this;\n    }\n    DisableForWorkspaceAction.prototype.update = function () {\n        var _this = this;\n        this.enabled = false;\n        if (this.extension && this.runningExtensions.some(function (e) { return extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, _this.extension.identifier) && _this.workspaceContextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY; })) {\n            this.enabled = this.extension.state === extensions_1.ExtensionState.Installed && (this.extension.enablementState === extensionManagement_1.EnablementState.Enabled || this.extension.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n        }\n    };\n    DisableForWorkspaceAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extension, extensionManagement_1.EnablementState.WorkspaceDisabled);\n    };\n    DisableForWorkspaceAction.ID = 'extensions.disableForWorkspace';\n    DisableForWorkspaceAction.LABEL = nls_1.localize('disableForWorkspaceAction', \"Disable (Workspace)\");\n    DisableForWorkspaceAction = tslib_1.__decorate([\n        tslib_1.__param(1, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, extensionManagement_1.IExtensionEnablementService)\n    ], DisableForWorkspaceAction);\n    return DisableForWorkspaceAction;\n}(ExtensionAction));\nexports.DisableForWorkspaceAction = DisableForWorkspaceAction;\nvar DisableGloballyAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableGloballyAction, _super);\n    function DisableGloballyAction(runningExtensions, extensionsWorkbenchService, extensionEnablementService) {\n        var _this = _super.call(this, DisableGloballyAction.ID, DisableGloballyAction.LABEL) || this;\n        _this.runningExtensions = runningExtensions;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.update();\n        return _this;\n    }\n    DisableGloballyAction.prototype.update = function () {\n        var _this = this;\n        this.enabled = false;\n        if (this.extension && this.runningExtensions.some(function (e) { return extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, _this.extension.identifier); })) {\n            this.enabled = this.extension.state === extensions_1.ExtensionState.Installed && (this.extension.enablementState === extensionManagement_1.EnablementState.Enabled || this.extension.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n        }\n    };\n    DisableGloballyAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extension, extensionManagement_1.EnablementState.Disabled);\n    };\n    DisableGloballyAction.ID = 'extensions.disableGlobally';\n    DisableGloballyAction.LABEL = nls_1.localize('disableGloballyAction', \"Disable\");\n    DisableGloballyAction = tslib_1.__decorate([\n        tslib_1.__param(1, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(2, extensionManagement_1.IExtensionEnablementService)\n    ], DisableGloballyAction);\n    return DisableGloballyAction;\n}(ExtensionAction));\nexports.DisableGloballyAction = DisableGloballyAction;\nvar ExtensionEditorDropDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionEditorDropDownAction, _super);\n    function ExtensionEditorDropDownAction(id, initialLabel, actions, instantiationService) {\n        var _this = _super.call(this, id, initialLabel, ExtensionEditorDropDownAction.DisabledClass, false, false, instantiationService) || this;\n        _this.initialLabel = initialLabel;\n        _this.actions = actions;\n        _this.update();\n        return _this;\n    }\n    ExtensionEditorDropDownAction.prototype.update = function () {\n        var _this = this;\n        this.actions.forEach(function (a) { return a.extension = _this.extension; });\n        this.actions.forEach(function (a) { return a.update(); });\n        var enabledActions = this.actions.filter(function (a) { return a.enabled; });\n        this.enabled = enabledActions.length > 0;\n        if (this.enabled) {\n            if (enabledActions.length === 1) {\n                this.label = enabledActions[0].label;\n                this.class = ExtensionEditorDropDownAction.EnabledClass;\n            }\n            else {\n                this.label = this.initialLabel;\n                this.class = ExtensionEditorDropDownAction.EnabledDropDownClass;\n            }\n        }\n        else {\n            this.class = ExtensionEditorDropDownAction.DisabledClass;\n        }\n    };\n    ExtensionEditorDropDownAction.prototype.run = function () {\n        var enabledActions = this.actions.filter(function (a) { return a.enabled; });\n        if (enabledActions.length === 1) {\n            enabledActions[0].run();\n        }\n        else {\n            return _super.prototype.run.call(this, { actionGroups: [this.actions], disposeActionsOnHide: false });\n        }\n        return Promise.resolve();\n    };\n    ExtensionEditorDropDownAction.EnabledClass = 'extension-action extension-editor-dropdown-action';\n    ExtensionEditorDropDownAction.EnabledDropDownClass = 'extension-action extension-editor-dropdown-action dropdown enable';\n    ExtensionEditorDropDownAction.DisabledClass = ExtensionEditorDropDownAction.EnabledClass + \" disabled\";\n    ExtensionEditorDropDownAction = tslib_1.__decorate([\n        tslib_1.__param(3, instantiation_1.IInstantiationService)\n    ], ExtensionEditorDropDownAction);\n    return ExtensionEditorDropDownAction;\n}(ExtensionDropDownAction));\nexports.ExtensionEditorDropDownAction = ExtensionEditorDropDownAction;\nvar EnableDropDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableDropDownAction, _super);\n    function EnableDropDownAction(instantiationService) {\n        return _super.call(this, 'extensions.enable', nls_1.localize('enableAction', \"Enable\"), [\n            instantiationService.createInstance(EnableGloballyAction),\n            instantiationService.createInstance(EnableForWorkspaceAction)\n        ], instantiationService) || this;\n    }\n    EnableDropDownAction = tslib_1.__decorate([\n        tslib_1.__param(0, instantiation_1.IInstantiationService)\n    ], EnableDropDownAction);\n    return EnableDropDownAction;\n}(ExtensionEditorDropDownAction));\nexports.EnableDropDownAction = EnableDropDownAction;\nvar DisableDropDownAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableDropDownAction, _super);\n    function DisableDropDownAction(runningExtensions, instantiationService) {\n        return _super.call(this, 'extensions.disable', nls_1.localize('disableAction', \"Disable\"), [\n            instantiationService.createInstance(DisableGloballyAction, runningExtensions),\n            instantiationService.createInstance(DisableForWorkspaceAction, runningExtensions)\n        ], instantiationService) || this;\n    }\n    DisableDropDownAction = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService)\n    ], DisableDropDownAction);\n    return DisableDropDownAction;\n}(ExtensionEditorDropDownAction));\nexports.DisableDropDownAction = DisableDropDownAction;\nvar CheckForUpdatesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CheckForUpdatesAction, _super);\n    function CheckForUpdatesAction(id, label, extensionsWorkbenchService, viewletService, notificationService) {\n        if (id === void 0) { id = CheckForUpdatesAction.ID; }\n        if (label === void 0) { label = CheckForUpdatesAction.LABEL; }\n        var _this = _super.call(this, id, label, '', true) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.viewletService = viewletService;\n        _this.notificationService = notificationService;\n        return _this;\n    }\n    CheckForUpdatesAction.prototype.checkUpdatesAndNotify = function () {\n        var _this = this;\n        this.extensionsWorkbenchService.queryLocal().then(function (extensions) {\n            var outdatedExtensions = extensions.filter(function (ext) { return ext.outdated === true; });\n            if (!outdatedExtensions.length) {\n                _this.notificationService.info(nls_1.localize('noUpdatesAvailable', \"All Extensions are up to date.\"));\n                return;\n            }\n            var msgAvailableExtensions = outdatedExtensions.length === 1 ? nls_1.localize('singleUpdateAvailable', \"An extension update is available.\") : nls_1.localize('updatesAvailable', \"{0} extension updates are available.\", outdatedExtensions.length);\n            var disabledExtensionsCount = outdatedExtensions.filter(function (ext) { return ext.enablementState === extensionManagement_1.EnablementState.Disabled || ext.enablementState === extensionManagement_1.EnablementState.WorkspaceDisabled; }).length;\n            if (disabledExtensionsCount) {\n                if (outdatedExtensions.length === 1) {\n                    msgAvailableExtensions = nls_1.localize('singleDisabledUpdateAvailable', \"An update to an extension which is disabled is available.\");\n                }\n                else if (disabledExtensionsCount === 1) {\n                    msgAvailableExtensions = nls_1.localize('updatesAvailableOneDisabled', \"{0} extension updates are available. One of them is for a disabled extension.\", outdatedExtensions.length);\n                }\n                else if (disabledExtensionsCount === outdatedExtensions.length) {\n                    msgAvailableExtensions = nls_1.localize('updatesAvailableAllDisabled', \"{0} extension updates are available. All of them are for disabled extensions.\", outdatedExtensions.length);\n                }\n                else {\n                    msgAvailableExtensions = nls_1.localize('updatesAvailableIncludingDisabled', \"{0} extension updates are available. {1} of them are for disabled extensions.\", outdatedExtensions.length, disabledExtensionsCount);\n                }\n            }\n            _this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n                .then(function (viewlet) { return viewlet; })\n                .then(function (viewlet) { return viewlet.search(''); });\n            _this.notificationService.info(msgAvailableExtensions);\n        });\n    };\n    CheckForUpdatesAction.prototype.run = function () {\n        var _this = this;\n        return this.extensionsWorkbenchService.checkForUpdates().then(function () { return _this.checkUpdatesAndNotify(); });\n    };\n    CheckForUpdatesAction.ID = 'workbench.extensions.action.checkForUpdates';\n    CheckForUpdatesAction.LABEL = nls_1.localize('checkForUpdates', \"Check for Extension Updates\");\n    CheckForUpdatesAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, viewlet_2.IViewletService),\n        tslib_1.__param(4, notification_1.INotificationService)\n    ], CheckForUpdatesAction);\n    return CheckForUpdatesAction;\n}(actions_1.Action));\nexports.CheckForUpdatesAction = CheckForUpdatesAction;\nvar ToggleAutoUpdateAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleAutoUpdateAction, _super);\n    function ToggleAutoUpdateAction(id, label, autoUpdateValue, configurationService) {\n        var _this = _super.call(this, id, label, '', true) || this;\n        _this.autoUpdateValue = autoUpdateValue;\n        _this.configurationService = configurationService;\n        _this.updateEnablement();\n        configurationService.onDidChangeConfiguration(function () { return _this.updateEnablement(); });\n        return _this;\n    }\n    ToggleAutoUpdateAction.prototype.updateEnablement = function () {\n        this.enabled = this.configurationService.getValue(extensions_1.AutoUpdateConfigurationKey) !== this.autoUpdateValue;\n    };\n    ToggleAutoUpdateAction.prototype.run = function () {\n        return this.configurationService.updateValue(extensions_1.AutoUpdateConfigurationKey, this.autoUpdateValue);\n    };\n    ToggleAutoUpdateAction = tslib_1.__decorate([\n        tslib_1.__param(3, configuration_1.IConfigurationService)\n    ], ToggleAutoUpdateAction);\n    return ToggleAutoUpdateAction;\n}(actions_1.Action));\nexports.ToggleAutoUpdateAction = ToggleAutoUpdateAction;\nvar EnableAutoUpdateAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableAutoUpdateAction, _super);\n    function EnableAutoUpdateAction(id, label, configurationService) {\n        if (id === void 0) { id = EnableAutoUpdateAction.ID; }\n        if (label === void 0) { label = EnableAutoUpdateAction.LABEL; }\n        return _super.call(this, id, label, true, configurationService) || this;\n    }\n    EnableAutoUpdateAction.ID = 'workbench.extensions.action.enableAutoUpdate';\n    EnableAutoUpdateAction.LABEL = nls_1.localize('enableAutoUpdate', \"Enable Auto Updating Extensions\");\n    EnableAutoUpdateAction = tslib_1.__decorate([\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], EnableAutoUpdateAction);\n    return EnableAutoUpdateAction;\n}(ToggleAutoUpdateAction));\nexports.EnableAutoUpdateAction = EnableAutoUpdateAction;\nvar DisableAutoUpdateAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableAutoUpdateAction, _super);\n    function DisableAutoUpdateAction(id, label, configurationService) {\n        if (id === void 0) { id = EnableAutoUpdateAction.ID; }\n        if (label === void 0) { label = EnableAutoUpdateAction.LABEL; }\n        return _super.call(this, id, label, false, configurationService) || this;\n    }\n    DisableAutoUpdateAction.ID = 'workbench.extensions.action.disableAutoUpdate';\n    DisableAutoUpdateAction.LABEL = nls_1.localize('disableAutoUpdate', \"Disable Auto Updating Extensions\");\n    DisableAutoUpdateAction = tslib_1.__decorate([\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], DisableAutoUpdateAction);\n    return DisableAutoUpdateAction;\n}(ToggleAutoUpdateAction));\nexports.DisableAutoUpdateAction = DisableAutoUpdateAction;\nvar UpdateAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(UpdateAllAction, _super);\n    function UpdateAllAction(id, label, extensionsWorkbenchService, notificationService, instantiationService, openerService) {\n        if (id === void 0) { id = UpdateAllAction.ID; }\n        if (label === void 0) { label = UpdateAllAction.LABEL; }\n        var _this = _super.call(this, id, label, '', false) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.notificationService = notificationService;\n        _this.instantiationService = instantiationService;\n        _this.openerService = openerService;\n        _this.disposables = [];\n        _this.disposables.push(_this.extensionsWorkbenchService.onChange(function () { return _this.update(); }));\n        _this.update();\n        return _this;\n    }\n    Object.defineProperty(UpdateAllAction.prototype, \"outdated\", {\n        get: function () {\n            return this.extensionsWorkbenchService.local.filter(function (e) { return e.outdated && e.state !== extensions_1.ExtensionState.Installing; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UpdateAllAction.prototype.update = function () {\n        this.enabled = this.outdated.length > 0;\n    };\n    UpdateAllAction.prototype.run = function () {\n        var _this = this;\n        return Promise.all(this.outdated.map(function (e) { return _this.install(e); }));\n    };\n    UpdateAllAction.prototype.install = function (extension) {\n        var _this = this;\n        return this.extensionsWorkbenchService.install(extension).then(undefined, function (err) {\n            if (!extension.gallery) {\n                return _this.notificationService.error(err);\n            }\n            console.error(err);\n            return promptDownloadManually(extension.gallery, nls_1.localize('failedToUpdate', \"Failed to update \\'{0}\\'.\", extension.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n        });\n    };\n    UpdateAllAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    UpdateAllAction.ID = 'workbench.extensions.action.updateAllExtensions';\n    UpdateAllAction.LABEL = nls_1.localize('updateAll', \"Update All Extensions\");\n    UpdateAllAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, opener_1.IOpenerService)\n    ], UpdateAllAction);\n    return UpdateAllAction;\n}(actions_1.Action));\nexports.UpdateAllAction = UpdateAllAction;\nvar ReloadAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReloadAction, _super);\n    function ReloadAction(extensionsWorkbenchService, windowService, extensionService, extensionEnablementService) {\n        var _this = _super.call(this, 'extensions.reload', nls_1.localize('reloadAction', \"Reload\"), ReloadAction.DisabledClass, false) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.windowService = windowService;\n        _this.extensionService = extensionService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.disposables = [];\n        _this.throttler = new async_1.Throttler();\n        _this.extensionService.onDidChangeExtensions(_this.update, _this, _this.disposables);\n        _this.update();\n        return _this;\n    }\n    ReloadAction.prototype.update = function () {\n        var _this = this;\n        return this.throttler.queue(function () {\n            _this.enabled = false;\n            _this.tooltip = '';\n            if (!_this.extension) {\n                return Promise.resolve(undefined);\n            }\n            var state = _this.extension.state;\n            if (state === extensions_1.ExtensionState.Installing || state === extensions_1.ExtensionState.Uninstalling) {\n                return Promise.resolve(undefined);\n            }\n            var installed = _this.extensionsWorkbenchService.local.filter(function (e) { return extensionManagementUtil_1.areSameExtensions(e.identifier, _this.extension.identifier); })[0];\n            var local = _this.extension.local || (installed && installed.local);\n            if (local && local.manifest && local.manifest.contributes && local.manifest.contributes.localizations && local.manifest.contributes.localizations.length > 0) {\n                return Promise.resolve(undefined);\n            }\n            return _this.extensionService.getExtensions()\n                .then(function (runningExtensions) { return _this.computeReloadState(runningExtensions, installed); });\n        }).then(function () {\n            _this.class = _this.enabled ? ReloadAction.EnabledClass : ReloadAction.DisabledClass;\n        });\n    };\n    ReloadAction.prototype.computeReloadState = function (runningExtensions, installed) {\n        var _this = this;\n        var isUninstalled = this.extension.state === extensions_1.ExtensionState.Uninstalled;\n        var isDisabled = this.extension.local ? !this.extensionEnablementService.isEnabled(this.extension.local) : false;\n        var isEnabled = this.extension.local ? this.extensionEnablementService.isEnabled(this.extension.local) : false;\n        var runningExtension = runningExtensions.filter(function (e) { return extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, _this.extension.identifier); })[0];\n        if (installed && installed.local) {\n            if (runningExtension) {\n                var isDifferentVersionRunning = this.extension.version !== runningExtension.version;\n                if (isDifferentVersionRunning && !isDisabled) {\n                    if (!(this.extension.local && this.extensionService.canAddExtension(toExtensionDescription(this.extension.local)))) {\n                        // Requires reload to run the updated extension\n                        this.enabled = true;\n                        this.label = nls_1.localize('reloadRequired', \"Reload Required\");\n                        this.tooltip = nls_1.localize('postUpdateTooltip', \"Please reload Visual Studio Code to complete the updating of this extension.\");\n                    }\n                    return;\n                }\n                if (isDisabled) {\n                    // Requires reload to disable the extension\n                    this.enabled = true;\n                    this.label = nls_1.localize('reloadRequired', \"Reload Required\");\n                    this.tooltip = nls_1.localize('postDisableTooltip', \"Please reload Visual Studio Code to complete the disabling of this extension.\");\n                    return;\n                }\n            }\n            else {\n                if (!isDisabled && !(this.extension.local && this.extensionService.canAddExtension(toExtensionDescription(this.extension.local)))) {\n                    this.enabled = true;\n                    if (isEnabled) {\n                        this.label = nls_1.localize('reloadRequired', \"Reload Required\");\n                        this.tooltip = nls_1.localize('postEnableTooltip', \"Please reload Visual Studio Code to complete the enabling of this extension.\");\n                    }\n                    else {\n                        this.label = nls_1.localize('reloadRequired', \"Reload Required\");\n                        this.tooltip = nls_1.localize('postInstallTooltip', \"Please reload Visual Studio Code to complete the installation of this extension.\");\n                        aria_1.alert(nls_1.localize('installExtensionComplete', \"Installing extension {0} is completed. Please reload Visual Studio Code to enable it.\", this.extension.displayName));\n                    }\n                }\n            }\n            return;\n        }\n        if (isUninstalled && runningExtension) {\n            // Requires reload to deactivate the extension\n            this.enabled = true;\n            this.label = nls_1.localize('reloadRequired', \"Reload Required\");\n            this.tooltip = nls_1.localize('postUninstallTooltip', \"Please reload Visual Studio Code to complete the uninstallation of this extension.\");\n            aria_1.alert(nls_1.localize('uninstallExtensionComplete', \"Please reload Visual Studio Code to complete the uninstallation of the extension {0}.\", this.extension.displayName));\n            return;\n        }\n    };\n    ReloadAction.prototype.run = function () {\n        return Promise.resolve(this.windowService.reloadWindow());\n    };\n    ReloadAction.prototype.dispose = function () {\n        lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    ReloadAction.EnabledClass = 'extension-action reload';\n    ReloadAction.DisabledClass = ReloadAction.EnabledClass + \" disabled\";\n    ReloadAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(1, windows_1.IWindowService),\n        tslib_1.__param(2, extensions_3.IExtensionService),\n        tslib_1.__param(3, extensionManagement_1.IExtensionEnablementService)\n    ], ReloadAction);\n    return ReloadAction;\n}(ExtensionAction));\nexports.ReloadAction = ReloadAction;\nvar SetColorThemeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SetColorThemeAction, _super);\n    function SetColorThemeAction(colorThemes, extensionService, workbenchThemeService, quickInputService, configurationService) {\n        var _this = _super.call(this, \"extensions.colorTheme\", nls_1.localize('color theme', \"Set Color Theme\"), SetColorThemeAction.DisabledClass, false) || this;\n        _this.colorThemes = colorThemes;\n        _this.workbenchThemeService = workbenchThemeService;\n        _this.quickInputService = quickInputService;\n        _this.configurationService = configurationService;\n        _this.disposables = [];\n        event_1.Event.any(extensionService.onDidChangeExtensions, workbenchThemeService.onDidColorThemeChange)(function () { return _this.update(); }, _this, _this.disposables);\n        _this.update();\n        return _this;\n    }\n    SetColorThemeAction.getColorThemes = function (colorThemes, extension) {\n        return colorThemes.filter(function (c) { return c.extensionData && extensions_2.ExtensionIdentifier.equals(c.extensionData.extensionId, extension.identifier.id); });\n    };\n    SetColorThemeAction.prototype.update = function () {\n        this.enabled = false;\n        if (this.extension) {\n            var isInstalled = this.extension.state === extensions_1.ExtensionState.Installed;\n            if (isInstalled) {\n                var extensionThemes = SetColorThemeAction.getColorThemes(this.colorThemes, this.extension);\n                this.enabled = extensionThemes.length > 0;\n            }\n        }\n        this.class = this.enabled ? SetColorThemeAction.EnabledClass : SetColorThemeAction.DisabledClass;\n    };\n    SetColorThemeAction.prototype.run = function (_a) {\n        var _b = _a === void 0 ? { showCurrentTheme: false, ignoreFocusLost: false } : _a, showCurrentTheme = _b.showCurrentTheme, ignoreFocusLost = _b.ignoreFocusLost;\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var extensionThemes, currentTheme, delayer, picks, pickedTheme, confValue, target;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.update();\n                        if (!this.enabled) {\n                            return [2 /*return*/];\n                        }\n                        extensionThemes = SetColorThemeAction.getColorThemes(this.colorThemes, this.extension);\n                        currentTheme = this.colorThemes.filter(function (t) { return t.settingsId === _this.configurationService.getValue(workbenchThemeService_1.COLOR_THEME_SETTING); })[0];\n                        showCurrentTheme = showCurrentTheme || extensionThemes.some(function (t) { return t.id === currentTheme.id; });\n                        if (showCurrentTheme) {\n                            extensionThemes = extensionThemes.filter(function (t) { return t.id !== currentTheme.id; });\n                        }\n                        delayer = new async_1.Delayer(100);\n                        picks = [];\n                        picks.push.apply(picks, extensionThemes.map(function (theme) { return ({ label: theme.label, id: theme.id }); }));\n                        if (showCurrentTheme) {\n                            picks.push({ type: 'separator', label: nls_1.localize('current', \"Current\") });\n                            picks.push({ label: currentTheme.label, id: currentTheme.id });\n                        }\n                        return [4 /*yield*/, this.quickInputService.pick(picks, {\n                                placeHolder: nls_1.localize('select color theme', \"Select Color Theme\"),\n                                onDidFocus: function (item) { return delayer.trigger(function () { return _this.workbenchThemeService.setColorTheme(item.id, undefined); }); },\n                                ignoreFocusLost: ignoreFocusLost\n                            })];\n                    case 1:\n                        pickedTheme = _c.sent();\n                        confValue = this.configurationService.inspect(workbenchThemeService_1.COLOR_THEME_SETTING);\n                        target = typeof confValue.workspace !== 'undefined' ? configuration_1.ConfigurationTarget.WORKSPACE : configuration_1.ConfigurationTarget.USER;\n                        return [2 /*return*/, this.workbenchThemeService.setColorTheme(pickedTheme ? pickedTheme.id : currentTheme.id, target)];\n                }\n            });\n        });\n    };\n    SetColorThemeAction.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    SetColorThemeAction.EnabledClass = 'extension-action theme';\n    SetColorThemeAction.DisabledClass = SetColorThemeAction.EnabledClass + \" disabled\";\n    SetColorThemeAction = tslib_1.__decorate([\n        tslib_1.__param(1, extensions_3.IExtensionService),\n        tslib_1.__param(2, workbenchThemeService_1.IWorkbenchThemeService),\n        tslib_1.__param(3, quickInput_1.IQuickInputService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], SetColorThemeAction);\n    return SetColorThemeAction;\n}(ExtensionAction));\nexports.SetColorThemeAction = SetColorThemeAction;\nvar SetFileIconThemeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SetFileIconThemeAction, _super);\n    function SetFileIconThemeAction(fileIconThemes, extensionService, workbenchThemeService, quickInputService, configurationService) {\n        var _this = _super.call(this, \"extensions.fileIconTheme\", nls_1.localize('file icon theme', \"Set File Icon Theme\"), SetFileIconThemeAction.DisabledClass, false) || this;\n        _this.fileIconThemes = fileIconThemes;\n        _this.workbenchThemeService = workbenchThemeService;\n        _this.quickInputService = quickInputService;\n        _this.configurationService = configurationService;\n        _this.disposables = [];\n        event_1.Event.any(extensionService.onDidChangeExtensions, workbenchThemeService.onDidFileIconThemeChange)(function () { return _this.update(); }, _this, _this.disposables);\n        _this.update();\n        return _this;\n    }\n    SetFileIconThemeAction.getFileIconThemes = function (fileIconThemes, extension) {\n        return fileIconThemes.filter(function (c) { return c.extensionData && extensions_2.ExtensionIdentifier.equals(c.extensionData.extensionId, extension.identifier.id); });\n    };\n    SetFileIconThemeAction.prototype.update = function () {\n        this.enabled = false;\n        if (this.extension) {\n            var isInstalled = this.extension.state === extensions_1.ExtensionState.Installed;\n            if (isInstalled) {\n                var extensionThemes = SetFileIconThemeAction.getFileIconThemes(this.fileIconThemes, this.extension);\n                this.enabled = extensionThemes.length > 0;\n            }\n        }\n        this.class = this.enabled ? SetFileIconThemeAction.EnabledClass : SetFileIconThemeAction.DisabledClass;\n    };\n    SetFileIconThemeAction.prototype.run = function (_a) {\n        var _b = _a === void 0 ? { showCurrentTheme: false, ignoreFocusLost: false } : _a, showCurrentTheme = _b.showCurrentTheme, ignoreFocusLost = _b.ignoreFocusLost;\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var extensionThemes, currentTheme, delayer, picks, pickedTheme, confValue, target;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.update()];\n                    case 1:\n                        _c.sent();\n                        if (!this.enabled) {\n                            return [2 /*return*/];\n                        }\n                        extensionThemes = SetFileIconThemeAction.getFileIconThemes(this.fileIconThemes, this.extension);\n                        currentTheme = this.fileIconThemes.filter(function (t) { return t.settingsId === _this.configurationService.getValue(workbenchThemeService_1.ICON_THEME_SETTING); })[0] || this.workbenchThemeService.getFileIconTheme();\n                        showCurrentTheme = showCurrentTheme || extensionThemes.some(function (t) { return t.id === currentTheme.id; });\n                        if (showCurrentTheme) {\n                            extensionThemes = extensionThemes.filter(function (t) { return t.id !== currentTheme.id; });\n                        }\n                        delayer = new async_1.Delayer(100);\n                        picks = [];\n                        picks.push.apply(picks, extensionThemes.map(function (theme) { return ({ label: theme.label, id: theme.id }); }));\n                        if (showCurrentTheme && currentTheme.label) {\n                            picks.push({ type: 'separator', label: nls_1.localize('current', \"Current\") });\n                            picks.push({ label: currentTheme.label, id: currentTheme.id });\n                        }\n                        return [4 /*yield*/, this.quickInputService.pick(picks, {\n                                placeHolder: nls_1.localize('select file icon theme', \"Select File Icon Theme\"),\n                                onDidFocus: function (item) { return delayer.trigger(function () { return _this.workbenchThemeService.setFileIconTheme(item.id, undefined); }); },\n                                ignoreFocusLost: ignoreFocusLost\n                            })];\n                    case 2:\n                        pickedTheme = _c.sent();\n                        confValue = this.configurationService.inspect(workbenchThemeService_1.ICON_THEME_SETTING);\n                        target = typeof confValue.workspace !== 'undefined' ? configuration_1.ConfigurationTarget.WORKSPACE : configuration_1.ConfigurationTarget.USER;\n                        return [2 /*return*/, this.workbenchThemeService.setFileIconTheme(pickedTheme ? pickedTheme.id : currentTheme.id, target)];\n                }\n            });\n        });\n    };\n    SetFileIconThemeAction.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    SetFileIconThemeAction.EnabledClass = 'extension-action theme';\n    SetFileIconThemeAction.DisabledClass = SetFileIconThemeAction.EnabledClass + \" disabled\";\n    SetFileIconThemeAction = tslib_1.__decorate([\n        tslib_1.__param(1, extensions_3.IExtensionService),\n        tslib_1.__param(2, workbenchThemeService_1.IWorkbenchThemeService),\n        tslib_1.__param(3, quickInput_1.IQuickInputService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], SetFileIconThemeAction);\n    return SetFileIconThemeAction;\n}(ExtensionAction));\nexports.SetFileIconThemeAction = SetFileIconThemeAction;\nvar OpenExtensionsViewletAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenExtensionsViewletAction, _super);\n    function OpenExtensionsViewletAction(id, label, viewletService, editorGroupService, layoutService) {\n        return _super.call(this, id, label, extensions_1.VIEWLET_ID, viewletService, editorGroupService, layoutService) || this;\n    }\n    OpenExtensionsViewletAction.ID = extensions_1.VIEWLET_ID;\n    OpenExtensionsViewletAction.LABEL = nls_1.localize('toggleExtensionsViewlet', \"Show Extensions\");\n    OpenExtensionsViewletAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService),\n        tslib_1.__param(3, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(4, layoutService_1.IWorkbenchLayoutService)\n    ], OpenExtensionsViewletAction);\n    return OpenExtensionsViewletAction;\n}(viewlet_1.ShowViewletAction));\nexports.OpenExtensionsViewletAction = OpenExtensionsViewletAction;\nvar InstallExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallExtensionsAction, _super);\n    function InstallExtensionsAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InstallExtensionsAction.ID = 'workbench.extensions.action.installExtensions';\n    InstallExtensionsAction.LABEL = nls_1.localize('installExtensions', \"Install Extensions\");\n    return InstallExtensionsAction;\n}(OpenExtensionsViewletAction));\nexports.InstallExtensionsAction = InstallExtensionsAction;\nvar ShowEnabledExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowEnabledExtensionsAction, _super);\n    function ShowEnabledExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowEnabledExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@enabled ');\n            viewlet.focus();\n        });\n    };\n    ShowEnabledExtensionsAction.ID = 'workbench.extensions.action.showEnabledExtensions';\n    ShowEnabledExtensionsAction.LABEL = nls_1.localize('showEnabledExtensions', 'Show Enabled Extensions');\n    ShowEnabledExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowEnabledExtensionsAction);\n    return ShowEnabledExtensionsAction;\n}(actions_1.Action));\nexports.ShowEnabledExtensionsAction = ShowEnabledExtensionsAction;\nvar ShowInstalledExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowInstalledExtensionsAction, _super);\n    function ShowInstalledExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowInstalledExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@installed ');\n            viewlet.focus();\n        });\n    };\n    ShowInstalledExtensionsAction.ID = 'workbench.extensions.action.showInstalledExtensions';\n    ShowInstalledExtensionsAction.LABEL = nls_1.localize('showInstalledExtensions', \"Show Installed Extensions\");\n    ShowInstalledExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowInstalledExtensionsAction);\n    return ShowInstalledExtensionsAction;\n}(actions_1.Action));\nexports.ShowInstalledExtensionsAction = ShowInstalledExtensionsAction;\nvar ShowDisabledExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowDisabledExtensionsAction, _super);\n    function ShowDisabledExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, 'null', true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowDisabledExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@disabled ');\n            viewlet.focus();\n        });\n    };\n    ShowDisabledExtensionsAction.ID = 'workbench.extensions.action.showDisabledExtensions';\n    ShowDisabledExtensionsAction.LABEL = nls_1.localize('showDisabledExtensions', \"Show Disabled Extensions\");\n    ShowDisabledExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowDisabledExtensionsAction);\n    return ShowDisabledExtensionsAction;\n}(actions_1.Action));\nexports.ShowDisabledExtensionsAction = ShowDisabledExtensionsAction;\nvar ClearExtensionsInputAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ClearExtensionsInputAction, _super);\n    function ClearExtensionsInputAction(id, label, onSearchChange, viewletService) {\n        var _this = _super.call(this, id, label, 'clear-extensions', true) || this;\n        _this.viewletService = viewletService;\n        _this.disposables = [];\n        _this.enabled = false;\n        onSearchChange(_this.onSearchChange, _this, _this.disposables);\n        return _this;\n    }\n    ClearExtensionsInputAction.prototype.onSearchChange = function (value) {\n        this.enabled = !!value;\n    };\n    ClearExtensionsInputAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('');\n            viewlet.focus();\n        });\n    };\n    ClearExtensionsInputAction.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    ClearExtensionsInputAction.ID = 'workbench.extensions.action.clearExtensionsInput';\n    ClearExtensionsInputAction.LABEL = nls_1.localize('clearExtensionsInput', \"Clear Extensions Input\");\n    ClearExtensionsInputAction = tslib_1.__decorate([\n        tslib_1.__param(3, viewlet_2.IViewletService)\n    ], ClearExtensionsInputAction);\n    return ClearExtensionsInputAction;\n}(actions_1.Action));\nexports.ClearExtensionsInputAction = ClearExtensionsInputAction;\nvar ShowBuiltInExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowBuiltInExtensionsAction, _super);\n    function ShowBuiltInExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowBuiltInExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@builtin ');\n            viewlet.focus();\n        });\n    };\n    ShowBuiltInExtensionsAction.ID = 'workbench.extensions.action.listBuiltInExtensions';\n    ShowBuiltInExtensionsAction.LABEL = nls_1.localize('showBuiltInExtensions', \"Show Built-in Extensions\");\n    ShowBuiltInExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowBuiltInExtensionsAction);\n    return ShowBuiltInExtensionsAction;\n}(actions_1.Action));\nexports.ShowBuiltInExtensionsAction = ShowBuiltInExtensionsAction;\nvar ShowOutdatedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowOutdatedExtensionsAction, _super);\n    function ShowOutdatedExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowOutdatedExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@outdated ');\n            viewlet.focus();\n        });\n    };\n    ShowOutdatedExtensionsAction.ID = 'workbench.extensions.action.listOutdatedExtensions';\n    ShowOutdatedExtensionsAction.LABEL = nls_1.localize('showOutdatedExtensions', \"Show Outdated Extensions\");\n    ShowOutdatedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowOutdatedExtensionsAction);\n    return ShowOutdatedExtensionsAction;\n}(actions_1.Action));\nexports.ShowOutdatedExtensionsAction = ShowOutdatedExtensionsAction;\nvar ShowPopularExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowPopularExtensionsAction, _super);\n    function ShowPopularExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowPopularExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@sort:installs ');\n            viewlet.focus();\n        });\n    };\n    ShowPopularExtensionsAction.ID = 'workbench.extensions.action.showPopularExtensions';\n    ShowPopularExtensionsAction.LABEL = nls_1.localize('showPopularExtensions', \"Show Popular Extensions\");\n    ShowPopularExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowPopularExtensionsAction);\n    return ShowPopularExtensionsAction;\n}(actions_1.Action));\nexports.ShowPopularExtensionsAction = ShowPopularExtensionsAction;\nvar ShowRecommendedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowRecommendedExtensionsAction, _super);\n    function ShowRecommendedExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowRecommendedExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@recommended ');\n            viewlet.focus();\n        });\n    };\n    ShowRecommendedExtensionsAction.ID = 'workbench.extensions.action.showRecommendedExtensions';\n    ShowRecommendedExtensionsAction.LABEL = nls_1.localize('showRecommendedExtensions', \"Show Recommended Extensions\");\n    ShowRecommendedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowRecommendedExtensionsAction);\n    return ShowRecommendedExtensionsAction;\n}(actions_1.Action));\nexports.ShowRecommendedExtensionsAction = ShowRecommendedExtensionsAction;\nvar InstallWorkspaceRecommendedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallWorkspaceRecommendedExtensionsAction, _super);\n    function InstallWorkspaceRecommendedExtensionsAction(id, label, recommendations, viewletService, notificationService, instantiationService, openerService, extensionWorkbenchService) {\n        if (id === void 0) { id = InstallWorkspaceRecommendedExtensionsAction.ID; }\n        if (label === void 0) { label = InstallWorkspaceRecommendedExtensionsAction.LABEL; }\n        var _this = _super.call(this, id, label, 'extension-action') || this;\n        _this.viewletService = viewletService;\n        _this.notificationService = notificationService;\n        _this.instantiationService = instantiationService;\n        _this.openerService = openerService;\n        _this.extensionWorkbenchService = extensionWorkbenchService;\n        _this._recommendations = [];\n        _this.recommendations = recommendations;\n        return _this;\n    }\n    Object.defineProperty(InstallWorkspaceRecommendedExtensionsAction.prototype, \"recommendations\", {\n        get: function () { return this._recommendations; },\n        set: function (recommendations) { this._recommendations = recommendations; this.enabled = this._recommendations.length > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    InstallWorkspaceRecommendedExtensionsAction.prototype.run = function () {\n        var _this = this;\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@recommended ');\n            viewlet.focus();\n            var names = _this.recommendations.map(function (_a) {\n                var extensionId = _a.extensionId;\n                return extensionId;\n            });\n            return _this.extensionWorkbenchService.queryGallery({ names: names, source: 'install-all-workspace-recommendations' }, cancellation_1.CancellationToken.None).then(function (pager) {\n                var installPromises = [];\n                var model = new paging_1.PagedModel(pager);\n                for (var i = 0; i < pager.total; i++) {\n                    installPromises.push(model.resolve(i, cancellation_1.CancellationToken.None).then(function (e) {\n                        return _this.extensionWorkbenchService.install(e).then(undefined, function (err) {\n                            console.error(err);\n                            return promptDownloadManually(e.gallery, nls_1.localize('failedToInstall', \"Failed to install \\'{0}\\'.\", e.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n                        });\n                    }));\n                }\n                return Promise.all(installPromises);\n            });\n        });\n    };\n    InstallWorkspaceRecommendedExtensionsAction.ID = 'workbench.extensions.action.installWorkspaceRecommendedExtensions';\n    InstallWorkspaceRecommendedExtensionsAction.LABEL = nls_1.localize('installWorkspaceRecommendedExtensions', \"Install All Workspace Recommended Extensions\");\n    InstallWorkspaceRecommendedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(3, viewlet_2.IViewletService),\n        tslib_1.__param(4, notification_1.INotificationService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService),\n        tslib_1.__param(6, opener_1.IOpenerService),\n        tslib_1.__param(7, extensions_1.IExtensionsWorkbenchService)\n    ], InstallWorkspaceRecommendedExtensionsAction);\n    return InstallWorkspaceRecommendedExtensionsAction;\n}(actions_1.Action));\nexports.InstallWorkspaceRecommendedExtensionsAction = InstallWorkspaceRecommendedExtensionsAction;\nvar InstallRecommendedExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallRecommendedExtensionAction, _super);\n    function InstallRecommendedExtensionAction(extensionId, viewletService, notificationService, instantiationService, openerService, extensionWorkbenchService) {\n        var _this = _super.call(this, InstallRecommendedExtensionAction.ID, InstallRecommendedExtensionAction.LABEL, undefined, false) || this;\n        _this.viewletService = viewletService;\n        _this.notificationService = notificationService;\n        _this.instantiationService = instantiationService;\n        _this.openerService = openerService;\n        _this.extensionWorkbenchService = extensionWorkbenchService;\n        _this.extensionId = extensionId;\n        return _this;\n    }\n    InstallRecommendedExtensionAction.prototype.run = function () {\n        var _this = this;\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@recommended ');\n            viewlet.focus();\n            return _this.extensionWorkbenchService.queryGallery({ names: [_this.extensionId], source: 'install-recommendation', pageSize: 1 }, cancellation_1.CancellationToken.None)\n                .then(function (pager) {\n                if (pager && pager.firstPage && pager.firstPage.length) {\n                    var extension_1 = pager.firstPage[0];\n                    return _this.extensionWorkbenchService.install(extension_1)\n                        .then(function () { return null; }, function (err) {\n                        console.error(err);\n                        return promptDownloadManually(extension_1.gallery, nls_1.localize('failedToInstall', \"Failed to install \\'{0}\\'.\", extension_1.identifier.id), err, _this.instantiationService, _this.notificationService, _this.openerService);\n                    });\n                }\n                return null;\n            });\n        });\n    };\n    InstallRecommendedExtensionAction.ID = 'workbench.extensions.action.installRecommendedExtension';\n    InstallRecommendedExtensionAction.LABEL = nls_1.localize('installRecommendedExtension', \"Install Recommended Extension\");\n    InstallRecommendedExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(1, viewlet_2.IViewletService),\n        tslib_1.__param(2, notification_1.INotificationService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, opener_1.IOpenerService),\n        tslib_1.__param(5, extensions_1.IExtensionsWorkbenchService)\n    ], InstallRecommendedExtensionAction);\n    return InstallRecommendedExtensionAction;\n}(actions_1.Action));\nexports.InstallRecommendedExtensionAction = InstallRecommendedExtensionAction;\nvar IgnoreExtensionRecommendationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(IgnoreExtensionRecommendationAction, _super);\n    function IgnoreExtensionRecommendationAction(extensionsTipsService) {\n        var _this = _super.call(this, IgnoreExtensionRecommendationAction.ID, 'Ignore Recommendation') || this;\n        _this.extensionsTipsService = extensionsTipsService;\n        _this.disposables = [];\n        _this.class = IgnoreExtensionRecommendationAction.Class;\n        _this.tooltip = nls_1.localize('ignoreExtensionRecommendation', \"Do not recommend this extension again\");\n        _this.enabled = true;\n        return _this;\n    }\n    IgnoreExtensionRecommendationAction.prototype.run = function () {\n        this.extensionsTipsService.toggleIgnoredRecommendation(this.extension.identifier.id, true);\n        return Promise.resolve();\n    };\n    IgnoreExtensionRecommendationAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    IgnoreExtensionRecommendationAction.ID = 'extensions.ignore';\n    IgnoreExtensionRecommendationAction.Class = 'extension-action ignore';\n    IgnoreExtensionRecommendationAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensionManagement_1.IExtensionTipsService)\n    ], IgnoreExtensionRecommendationAction);\n    return IgnoreExtensionRecommendationAction;\n}(actions_1.Action));\nexports.IgnoreExtensionRecommendationAction = IgnoreExtensionRecommendationAction;\nvar UndoIgnoreExtensionRecommendationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(UndoIgnoreExtensionRecommendationAction, _super);\n    function UndoIgnoreExtensionRecommendationAction(extensionsTipsService) {\n        var _this = _super.call(this, UndoIgnoreExtensionRecommendationAction.ID, 'Undo') || this;\n        _this.extensionsTipsService = extensionsTipsService;\n        _this.disposables = [];\n        _this.class = UndoIgnoreExtensionRecommendationAction.Class;\n        _this.tooltip = nls_1.localize('undo', \"Undo\");\n        _this.enabled = true;\n        return _this;\n    }\n    UndoIgnoreExtensionRecommendationAction.prototype.run = function () {\n        this.extensionsTipsService.toggleIgnoredRecommendation(this.extension.identifier.id, false);\n        return Promise.resolve();\n    };\n    UndoIgnoreExtensionRecommendationAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    UndoIgnoreExtensionRecommendationAction.ID = 'extensions.ignore';\n    UndoIgnoreExtensionRecommendationAction.Class = 'extension-action undo-ignore';\n    UndoIgnoreExtensionRecommendationAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensionManagement_1.IExtensionTipsService)\n    ], UndoIgnoreExtensionRecommendationAction);\n    return UndoIgnoreExtensionRecommendationAction;\n}(actions_1.Action));\nexports.UndoIgnoreExtensionRecommendationAction = UndoIgnoreExtensionRecommendationAction;\nvar ShowRecommendedKeymapExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowRecommendedKeymapExtensionsAction, _super);\n    function ShowRecommendedKeymapExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowRecommendedKeymapExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@recommended:keymaps ');\n            viewlet.focus();\n        });\n    };\n    ShowRecommendedKeymapExtensionsAction.ID = 'workbench.extensions.action.showRecommendedKeymapExtensions';\n    ShowRecommendedKeymapExtensionsAction.SHORT_LABEL = nls_1.localize('showRecommendedKeymapExtensionsShort', \"Keymaps\");\n    ShowRecommendedKeymapExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowRecommendedKeymapExtensionsAction);\n    return ShowRecommendedKeymapExtensionsAction;\n}(actions_1.Action));\nexports.ShowRecommendedKeymapExtensionsAction = ShowRecommendedKeymapExtensionsAction;\nvar ShowLanguageExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowLanguageExtensionsAction, _super);\n    function ShowLanguageExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowLanguageExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@category:\"programming languages\" @sort:installs ');\n            viewlet.focus();\n        });\n    };\n    ShowLanguageExtensionsAction.ID = 'workbench.extensions.action.showLanguageExtensions';\n    ShowLanguageExtensionsAction.SHORT_LABEL = nls_1.localize('showLanguageExtensionsShort', \"Language Extensions\");\n    ShowLanguageExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowLanguageExtensionsAction);\n    return ShowLanguageExtensionsAction;\n}(actions_1.Action));\nexports.ShowLanguageExtensionsAction = ShowLanguageExtensionsAction;\nvar ShowAzureExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowAzureExtensionsAction, _super);\n    function ShowAzureExtensionsAction(id, label, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    ShowAzureExtensionsAction.prototype.run = function () {\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search('@sort:installs azure ');\n            viewlet.focus();\n        });\n    };\n    ShowAzureExtensionsAction.ID = 'workbench.extensions.action.showAzureExtensions';\n    ShowAzureExtensionsAction.SHORT_LABEL = nls_1.localize('showAzureExtensionsShort', \"Azure Extensions\");\n    ShowAzureExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_2.IViewletService)\n    ], ShowAzureExtensionsAction);\n    return ShowAzureExtensionsAction;\n}(actions_1.Action));\nexports.ShowAzureExtensionsAction = ShowAzureExtensionsAction;\nvar ChangeSortAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ChangeSortAction, _super);\n    function ChangeSortAction(id, label, onSearchChange, sortBy, viewletService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.sortBy = sortBy;\n        _this.viewletService = viewletService;\n        _this.disposables = [];\n        if (sortBy === undefined) {\n            throw new Error('bad arguments');\n        }\n        _this.query = extensionQuery_1.Query.parse('');\n        _this.enabled = false;\n        onSearchChange(_this.onSearchChange, _this, _this.disposables);\n        return _this;\n    }\n    ChangeSortAction.prototype.onSearchChange = function (value) {\n        var query = extensionQuery_1.Query.parse(value);\n        this.query = new extensionQuery_1.Query(query.value, this.sortBy || query.sortBy, query.groupBy);\n        this.enabled = !!value && this.query.isValid() && !this.query.equals(query);\n    };\n    ChangeSortAction.prototype.run = function () {\n        var _this = this;\n        return this.viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n            .then(function (viewlet) { return viewlet; })\n            .then(function (viewlet) {\n            viewlet.search(_this.query.toString());\n            viewlet.focus();\n        });\n    };\n    ChangeSortAction = tslib_1.__decorate([\n        tslib_1.__param(4, viewlet_2.IViewletService)\n    ], ChangeSortAction);\n    return ChangeSortAction;\n}(actions_1.Action));\nexports.ChangeSortAction = ChangeSortAction;\nvar ConfigureRecommendedExtensionsCommandsContributor = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigureRecommendedExtensionsCommandsContributor, _super);\n    function ConfigureRecommendedExtensionsCommandsContributor(contextKeyService, workspaceContextService, editorService) {\n        var _this = _super.call(this) || this;\n        _this.workspaceContextKey = new contextkey_1.RawContextKey('workspaceRecommendations', true);\n        _this.workspaceFolderContextKey = new contextkey_1.RawContextKey('workspaceFolderRecommendations', true);\n        _this.addToWorkspaceRecommendationsContextKey = new contextkey_1.RawContextKey('addToWorkspaceRecommendations', false);\n        _this.addToWorkspaceFolderRecommendationsContextKey = new contextkey_1.RawContextKey('addToWorkspaceFolderRecommendations', false);\n        var boundWorkspaceContextKey = _this.workspaceContextKey.bindTo(contextKeyService);\n        boundWorkspaceContextKey.set(workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE);\n        _this._register(workspaceContextService.onDidChangeWorkbenchState(function () { return boundWorkspaceContextKey.set(workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE); }));\n        var boundWorkspaceFolderContextKey = _this.workspaceFolderContextKey.bindTo(contextKeyService);\n        boundWorkspaceFolderContextKey.set(workspaceContextService.getWorkspace().folders.length > 0);\n        _this._register(workspaceContextService.onDidChangeWorkspaceFolders(function () { return boundWorkspaceFolderContextKey.set(workspaceContextService.getWorkspace().folders.length > 0); }));\n        var boundAddToWorkspaceRecommendationsContextKey = _this.addToWorkspaceRecommendationsContextKey.bindTo(contextKeyService);\n        boundAddToWorkspaceRecommendationsContextKey.set(editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput && workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE);\n        _this._register(editorService.onDidActiveEditorChange(function () { return boundAddToWorkspaceRecommendationsContextKey.set(editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput && workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE); }));\n        _this._register(workspaceContextService.onDidChangeWorkbenchState(function () { return boundAddToWorkspaceRecommendationsContextKey.set(editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput && workspaceContextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE); }));\n        var boundAddToWorkspaceFolderRecommendationsContextKey = _this.addToWorkspaceFolderRecommendationsContextKey.bindTo(contextKeyService);\n        boundAddToWorkspaceFolderRecommendationsContextKey.set(editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput);\n        _this._register(editorService.onDidActiveEditorChange(function () { return boundAddToWorkspaceFolderRecommendationsContextKey.set(editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput); }));\n        _this.registerCommands();\n        return _this;\n    }\n    ConfigureRecommendedExtensionsCommandsContributor.prototype.registerCommands = function () {\n        commands_1.CommandsRegistry.registerCommand(ConfigureWorkspaceRecommendedExtensionsAction.ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService).createInstance(ConfigureWorkspaceRecommendedExtensionsAction, ConfigureWorkspaceRecommendedExtensionsAction.ID, ConfigureWorkspaceRecommendedExtensionsAction.LABEL).run();\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: ConfigureWorkspaceRecommendedExtensionsAction.ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + ConfigureWorkspaceRecommendedExtensionsAction.LABEL, original: 'Extensions: Configure Recommended Extensions (Workspace)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.workspaceContextKey\n        });\n        commands_1.CommandsRegistry.registerCommand(ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService).createInstance(ConfigureWorkspaceFolderRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL).run();\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: ConfigureWorkspaceFolderRecommendedExtensionsAction.ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL, original: 'Extensions: Configure Recommended Extensions (Workspace Folder)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.workspaceFolderContextKey\n        });\n        commands_1.CommandsRegistry.registerCommand(AddToWorkspaceRecommendationsAction.ADD_ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService)\n                .createInstance(AddToWorkspaceRecommendationsAction, AddToWorkspaceRecommendationsAction.ADD_ID, AddToWorkspaceRecommendationsAction.ADD_LABEL)\n                .run(AddToWorkspaceRecommendationsAction.ADD);\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: AddToWorkspaceRecommendationsAction.ADD_ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + AddToWorkspaceRecommendationsAction.ADD_LABEL, original: 'Extensions: Add to Recommended Extensions (Workspace)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.addToWorkspaceRecommendationsContextKey\n        });\n        commands_1.CommandsRegistry.registerCommand(AddToWorkspaceFolderRecommendationsAction.ADD_ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService)\n                .createInstance(AddToWorkspaceFolderRecommendationsAction, AddToWorkspaceFolderRecommendationsAction.ADD_ID, AddToWorkspaceFolderRecommendationsAction.ADD_LABEL)\n                .run(AddToWorkspaceRecommendationsAction.ADD);\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: AddToWorkspaceFolderRecommendationsAction.ADD_ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + AddToWorkspaceFolderRecommendationsAction.ADD_LABEL, original: 'Extensions: Add to Recommended Extensions (Workspace Folder)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.addToWorkspaceFolderRecommendationsContextKey\n        });\n        commands_1.CommandsRegistry.registerCommand(AddToWorkspaceRecommendationsAction.IGNORE_ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService)\n                .createInstance(AddToWorkspaceRecommendationsAction, AddToWorkspaceRecommendationsAction.IGNORE_ID, AddToWorkspaceRecommendationsAction.IGNORE_LABEL)\n                .run(AddToWorkspaceRecommendationsAction.IGNORE);\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: AddToWorkspaceRecommendationsAction.IGNORE_ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + AddToWorkspaceRecommendationsAction.IGNORE_LABEL, original: 'Extensions: Ignore Recommended Extension (Workspace)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.addToWorkspaceRecommendationsContextKey\n        });\n        commands_1.CommandsRegistry.registerCommand(AddToWorkspaceFolderRecommendationsAction.IGNORE_ID, function (serviceAccessor) {\n            serviceAccessor.get(instantiation_1.IInstantiationService)\n                .createInstance(AddToWorkspaceFolderRecommendationsAction, AddToWorkspaceFolderRecommendationsAction.IGNORE_ID, AddToWorkspaceFolderRecommendationsAction.IGNORE_LABEL)\n                .run(AddToWorkspaceRecommendationsAction.IGNORE);\n        });\n        actions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.CommandPalette, {\n            command: {\n                id: AddToWorkspaceFolderRecommendationsAction.IGNORE_ID,\n                title: { value: extensionManagement_1.ExtensionsLabel + \": \" + AddToWorkspaceFolderRecommendationsAction.IGNORE_LABEL, original: 'Extensions: Ignore Recommended Extension (Workspace Folder)' },\n                category: nls_1.localize('extensions', \"Extensions\")\n            },\n            when: this.addToWorkspaceFolderRecommendationsContextKey\n        });\n    };\n    ConfigureRecommendedExtensionsCommandsContributor = tslib_1.__decorate([\n        tslib_1.__param(0, contextkey_1.IContextKeyService),\n        tslib_1.__param(1, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(2, editorService_1.IEditorService)\n    ], ConfigureRecommendedExtensionsCommandsContributor);\n    return ConfigureRecommendedExtensionsCommandsContributor;\n}(lifecycle_1.Disposable));\nexports.ConfigureRecommendedExtensionsCommandsContributor = ConfigureRecommendedExtensionsCommandsContributor;\nvar AbstractConfigureRecommendedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractConfigureRecommendedExtensionsAction, _super);\n    function AbstractConfigureRecommendedExtensionsAction(id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.contextService = contextService;\n        _this.fileService = fileService;\n        _this.editorService = editorService;\n        _this.jsonEditingService = jsonEditingService;\n        _this.textModelResolverService = textModelResolverService;\n        return _this;\n    }\n    AbstractConfigureRecommendedExtensionsAction.prototype.openExtensionsFile = function (extensionsFileResource) {\n        var _this = this;\n        return this.getOrCreateExtensionsFile(extensionsFileResource)\n            .then(function (_a) {\n            var created = _a.created, content = _a.content;\n            return _this.getSelectionPosition(content, extensionsFileResource, ['recommendations'])\n                .then(function (selection) { return _this.editorService.openEditor({\n                resource: extensionsFileResource,\n                options: {\n                    pinned: created,\n                    selection: selection\n                }\n            }); });\n        }, function (error) { return Promise.reject(new Error(nls_1.localize('OpenExtensionsFile.failed', \"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).\", error))); });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.openWorkspaceConfigurationFile = function (workspaceConfigurationFile) {\n        var _this = this;\n        return this.getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile)\n            .then(function (content) { return _this.getSelectionPosition(content.value, content.resource, ['extensions', 'recommendations']); })\n            .then(function (selection) { return _this.editorService.openEditor({\n            resource: workspaceConfigurationFile,\n            options: {\n                selection: selection,\n                forceReload: true // because content has changed\n            }\n        }); });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.addExtensionToWorkspaceConfig = function (workspaceConfigurationFile, extensionId, shouldRecommend) {\n        var _this = this;\n        return this.getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile)\n            .then(function (content) {\n            var extensionIdLowerCase = extensionId.toLowerCase();\n            var workspaceExtensionsConfigContent = (json.parse(content.value) || {})['extensions'] || {};\n            var insertInto = shouldRecommend ? workspaceExtensionsConfigContent.recommendations || [] : workspaceExtensionsConfigContent.unwantedRecommendations || [];\n            var removeFrom = shouldRecommend ? workspaceExtensionsConfigContent.unwantedRecommendations || [] : workspaceExtensionsConfigContent.recommendations || [];\n            if (insertInto.some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                return Promise.resolve(null);\n            }\n            insertInto.push(extensionId);\n            removeFrom = removeFrom.filter(function (x) { return x.toLowerCase() !== extensionIdLowerCase; });\n            return _this.jsonEditingService.write(workspaceConfigurationFile, {\n                key: 'extensions',\n                value: {\n                    recommendations: shouldRecommend ? insertInto : removeFrom,\n                    unwantedRecommendations: shouldRecommend ? removeFrom : insertInto\n                }\n            }, true);\n        });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.addExtensionToWorkspaceFolderConfig = function (extensionsFileResource, extensionId, shouldRecommend) {\n        var _this = this;\n        return this.getOrCreateExtensionsFile(extensionsFileResource)\n            .then(function (_a) {\n            var content = _a.content;\n            var extensionIdLowerCase = extensionId.toLowerCase();\n            var extensionsConfigContent = json.parse(content) || {};\n            var insertInto = shouldRecommend ? extensionsConfigContent.recommendations || [] : extensionsConfigContent.unwantedRecommendations || [];\n            var removeFrom = shouldRecommend ? extensionsConfigContent.unwantedRecommendations || [] : extensionsConfigContent.recommendations || [];\n            if (insertInto.some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                return Promise.resolve(null);\n            }\n            insertInto.push(extensionId);\n            var removeFromPromise = Promise.resolve();\n            if (removeFrom.some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                removeFrom = removeFrom.filter(function (x) { return x.toLowerCase() !== extensionIdLowerCase; });\n                removeFromPromise = _this.jsonEditingService.write(extensionsFileResource, {\n                    key: shouldRecommend ? 'unwantedRecommendations' : 'recommendations',\n                    value: removeFrom\n                }, true);\n            }\n            return removeFromPromise.then(function () {\n                return _this.jsonEditingService.write(extensionsFileResource, {\n                    key: shouldRecommend ? 'recommendations' : 'unwantedRecommendations',\n                    value: insertInto\n                }, true);\n            });\n        });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.getWorkspaceExtensionsConfigContent = function (extensionsFileResource) {\n        return Promise.resolve(this.fileService.resolveContent(extensionsFileResource))\n            .then(function (content) {\n            return (json.parse(content.value) || {})['extensions'] || {};\n        }, function (err) { return ({ recommendations: [], unwantedRecommendations: [] }); });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.getWorkspaceFolderExtensionsConfigContent = function (extensionsFileResource) {\n        return Promise.resolve(this.fileService.resolveContent(extensionsFileResource))\n            .then(function (content) {\n            return json.parse(content.value);\n        }, function (err) { return ({ recommendations: [], unwantedRecommendations: [] }); });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.getOrUpdateWorkspaceConfigurationFile = function (workspaceConfigurationFile) {\n        var _this = this;\n        return Promise.resolve(this.fileService.resolveContent(workspaceConfigurationFile))\n            .then(function (content) {\n            var workspaceRecommendations = json.parse(content.value)['extensions'];\n            if (!workspaceRecommendations || !workspaceRecommendations.recommendations) {\n                return _this.jsonEditingService.write(workspaceConfigurationFile, { key: 'extensions', value: { recommendations: [] } }, true)\n                    .then(function () { return _this.fileService.resolveContent(workspaceConfigurationFile); });\n            }\n            return content;\n        });\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.getSelectionPosition = function (content, resource, path) {\n        var tree = json.parseTree(content);\n        var node = json.findNodeAtLocation(tree, path);\n        if (node && node.parent && node.parent.children) {\n            var recommendationsValueNode = node.parent.children[1];\n            var lastExtensionNode = recommendationsValueNode.children && recommendationsValueNode.children.length ? recommendationsValueNode.children[recommendationsValueNode.children.length - 1] : null;\n            var offset_1 = lastExtensionNode ? lastExtensionNode.offset + lastExtensionNode.length : recommendationsValueNode.offset + 1;\n            return Promise.resolve(this.textModelResolverService.createModelReference(resource))\n                .then(function (reference) {\n                var position = reference.object.textEditorModel.getPositionAt(offset_1);\n                reference.dispose();\n                return {\n                    startLineNumber: position.lineNumber,\n                    startColumn: position.column,\n                    endLineNumber: position.lineNumber,\n                    endColumn: position.column,\n                };\n            });\n        }\n        return Promise.resolve(undefined);\n    };\n    AbstractConfigureRecommendedExtensionsAction.prototype.getOrCreateExtensionsFile = function (extensionsFileResource) {\n        var _this = this;\n        return Promise.resolve(this.fileService.resolveContent(extensionsFileResource)).then(function (content) {\n            return { created: false, extensionsFileResource: extensionsFileResource, content: content.value };\n        }, function (err) {\n            return _this.fileService.updateContent(extensionsFileResource, extensionsFileTemplate_1.ExtensionsConfigurationInitialContent).then(function () {\n                return { created: true, extensionsFileResource: extensionsFileResource, content: extensionsFileTemplate_1.ExtensionsConfigurationInitialContent };\n            });\n        });\n    };\n    AbstractConfigureRecommendedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(3, files_1.IFileService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, jsonEditing_1.IJSONEditingService),\n        tslib_1.__param(6, resolverService_1.ITextModelService)\n    ], AbstractConfigureRecommendedExtensionsAction);\n    return AbstractConfigureRecommendedExtensionsAction;\n}(actions_1.Action));\nexports.AbstractConfigureRecommendedExtensionsAction = AbstractConfigureRecommendedExtensionsAction;\nvar ConfigureWorkspaceRecommendedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigureWorkspaceRecommendedExtensionsAction, _super);\n    function ConfigureWorkspaceRecommendedExtensionsAction(id, label, fileService, contextService, editorService, jsonEditingService, textModelResolverService) {\n        var _this = _super.call(this, id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService) || this;\n        _this.disposables = [];\n        _this.contextService.onDidChangeWorkbenchState(function () { return _this.update(); }, _this, _this.disposables);\n        _this.update();\n        return _this;\n    }\n    ConfigureWorkspaceRecommendedExtensionsAction.prototype.update = function () {\n        this.enabled = this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY;\n    };\n    ConfigureWorkspaceRecommendedExtensionsAction.prototype.run = function () {\n        switch (this.contextService.getWorkbenchState()) {\n            case workspace_1.WorkbenchState.FOLDER:\n                return this.openExtensionsFile(this.contextService.getWorkspace().folders[0].toResource(extensions_1.EXTENSIONS_CONFIG));\n            case workspace_1.WorkbenchState.WORKSPACE:\n                return this.openWorkspaceConfigurationFile(this.contextService.getWorkspace().configuration);\n        }\n        return Promise.resolve();\n    };\n    ConfigureWorkspaceRecommendedExtensionsAction.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    ConfigureWorkspaceRecommendedExtensionsAction.ID = 'workbench.extensions.action.configureWorkspaceRecommendedExtensions';\n    ConfigureWorkspaceRecommendedExtensionsAction.LABEL = nls_1.localize('configureWorkspaceRecommendedExtensions', \"Configure Recommended Extensions (Workspace)\");\n    ConfigureWorkspaceRecommendedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, files_1.IFileService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, jsonEditing_1.IJSONEditingService),\n        tslib_1.__param(6, resolverService_1.ITextModelService)\n    ], ConfigureWorkspaceRecommendedExtensionsAction);\n    return ConfigureWorkspaceRecommendedExtensionsAction;\n}(AbstractConfigureRecommendedExtensionsAction));\nexports.ConfigureWorkspaceRecommendedExtensionsAction = ConfigureWorkspaceRecommendedExtensionsAction;\nvar ConfigureWorkspaceFolderRecommendedExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigureWorkspaceFolderRecommendedExtensionsAction, _super);\n    function ConfigureWorkspaceFolderRecommendedExtensionsAction(id, label, fileService, contextService, editorService, jsonEditingService, textModelResolverService, commandService) {\n        var _this = _super.call(this, id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService) || this;\n        _this.commandService = commandService;\n        _this.disposables = [];\n        _this.contextService.onDidChangeWorkspaceFolders(function () { return _this.update(); }, _this, _this.disposables);\n        _this.update();\n        return _this;\n    }\n    ConfigureWorkspaceFolderRecommendedExtensionsAction.prototype.update = function () {\n        this.enabled = this.contextService.getWorkspace().folders.length > 0;\n    };\n    ConfigureWorkspaceFolderRecommendedExtensionsAction.prototype.run = function () {\n        var _this = this;\n        var folderCount = this.contextService.getWorkspace().folders.length;\n        var pickFolderPromise = folderCount === 1 ? Promise.resolve(this.contextService.getWorkspace().folders[0]) : this.commandService.executeCommand(workspaceCommands_1.PICK_WORKSPACE_FOLDER_COMMAND_ID);\n        return Promise.resolve(pickFolderPromise)\n            .then(function (workspaceFolder) {\n            if (workspaceFolder) {\n                return _this.openExtensionsFile(workspaceFolder.toResource(extensions_1.EXTENSIONS_CONFIG));\n            }\n            return null;\n        });\n    };\n    ConfigureWorkspaceFolderRecommendedExtensionsAction.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        _super.prototype.dispose.call(this);\n    };\n    ConfigureWorkspaceFolderRecommendedExtensionsAction.ID = 'workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions';\n    ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL = nls_1.localize('configureWorkspaceFolderRecommendedExtensions', \"Configure Recommended Extensions (Workspace Folder)\");\n    ConfigureWorkspaceFolderRecommendedExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, files_1.IFileService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, jsonEditing_1.IJSONEditingService),\n        tslib_1.__param(6, resolverService_1.ITextModelService),\n        tslib_1.__param(7, commands_1.ICommandService)\n    ], ConfigureWorkspaceFolderRecommendedExtensionsAction);\n    return ConfigureWorkspaceFolderRecommendedExtensionsAction;\n}(AbstractConfigureRecommendedExtensionsAction));\nexports.ConfigureWorkspaceFolderRecommendedExtensionsAction = ConfigureWorkspaceFolderRecommendedExtensionsAction;\nvar AddToWorkspaceFolderRecommendationsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(AddToWorkspaceFolderRecommendationsAction, _super);\n    function AddToWorkspaceFolderRecommendationsAction(id, label, fileService, contextService, editorService, jsonEditingService, textModelResolverService, commandService, notificationService) {\n        var _this = _super.call(this, id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService) || this;\n        _this.commandService = commandService;\n        _this.notificationService = notificationService;\n        return _this;\n    }\n    AddToWorkspaceFolderRecommendationsAction.prototype.run = function (shouldRecommend) {\n        var _this = this;\n        if (!(this.editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput) || !this.editorService.activeEditor.extension) {\n            return Promise.resolve();\n        }\n        var folders = this.contextService.getWorkspace().folders;\n        if (!folders || !folders.length) {\n            this.notificationService.info(nls_1.localize('AddToWorkspaceFolderRecommendations.noWorkspace', 'There are no workspace folders open to add recommendations.'));\n            return Promise.resolve();\n        }\n        var extensionId = this.editorService.activeEditor.extension.identifier;\n        var pickFolderPromise = folders.length === 1\n            ? Promise.resolve(folders[0])\n            : this.commandService.executeCommand(workspaceCommands_1.PICK_WORKSPACE_FOLDER_COMMAND_ID);\n        return Promise.resolve(pickFolderPromise)\n            .then(function (workspaceFolder) {\n            if (!workspaceFolder) {\n                return Promise.resolve();\n            }\n            var configurationFile = workspaceFolder.toResource(extensions_1.EXTENSIONS_CONFIG);\n            return _this.getWorkspaceFolderExtensionsConfigContent(configurationFile).then(function (content) {\n                var extensionIdLowerCase = extensionId.id.toLowerCase();\n                if (shouldRecommend) {\n                    if ((content.recommendations || []).some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                        _this.notificationService.info(nls_1.localize('AddToWorkspaceFolderRecommendations.alreadyExists', 'This extension is already present in this workspace folder\\'s recommendations.'));\n                        return Promise.resolve();\n                    }\n                    return _this.addExtensionToWorkspaceFolderConfig(configurationFile, extensionId.id, shouldRecommend).then(function () {\n                        _this.notificationService.prompt(notification_1.Severity.Info, nls_1.localize('AddToWorkspaceFolderRecommendations.success', 'The extension was successfully added to this workspace folder\\'s recommendations.'), [{\n                                label: nls_1.localize('viewChanges', \"View Changes\"),\n                                run: function () { return _this.openExtensionsFile(configurationFile); }\n                            }]);\n                    }, function (err) {\n                        _this.notificationService.error(nls_1.localize('AddToWorkspaceFolderRecommendations.failure', 'Failed to write to extensions.json. {0}', err));\n                    });\n                }\n                else {\n                    if ((content.unwantedRecommendations || []).some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                        _this.notificationService.info(nls_1.localize('AddToWorkspaceFolderIgnoredRecommendations.alreadyExists', 'This extension is already present in this workspace folder\\'s unwanted recommendations.'));\n                        return Promise.resolve();\n                    }\n                    return _this.addExtensionToWorkspaceFolderConfig(configurationFile, extensionId.id, shouldRecommend).then(function () {\n                        _this.notificationService.prompt(notification_1.Severity.Info, nls_1.localize('AddToWorkspaceFolderIgnoredRecommendations.success', 'The extension was successfully added to this workspace folder\\'s unwanted recommendations.'), [{\n                                label: nls_1.localize('viewChanges', \"View Changes\"),\n                                run: function () { return _this.openExtensionsFile(configurationFile); }\n                            }]);\n                    }, function (err) {\n                        _this.notificationService.error(nls_1.localize('AddToWorkspaceFolderRecommendations.failure', 'Failed to write to extensions.json. {0}', err));\n                    });\n                }\n            });\n        });\n    };\n    AddToWorkspaceFolderRecommendationsAction.ADD = true;\n    AddToWorkspaceFolderRecommendationsAction.IGNORE = false;\n    AddToWorkspaceFolderRecommendationsAction.ADD_ID = 'workbench.extensions.action.addToWorkspaceFolderRecommendations';\n    AddToWorkspaceFolderRecommendationsAction.ADD_LABEL = nls_1.localize('addToWorkspaceFolderRecommendations', \"Add to Recommended Extensions (Workspace Folder)\");\n    AddToWorkspaceFolderRecommendationsAction.IGNORE_ID = 'workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations';\n    AddToWorkspaceFolderRecommendationsAction.IGNORE_LABEL = nls_1.localize('addToWorkspaceFolderIgnoredRecommendations', \"Ignore Recommended Extension (Workspace Folder)\");\n    AddToWorkspaceFolderRecommendationsAction = tslib_1.__decorate([\n        tslib_1.__param(2, files_1.IFileService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, jsonEditing_1.IJSONEditingService),\n        tslib_1.__param(6, resolverService_1.ITextModelService),\n        tslib_1.__param(7, commands_1.ICommandService),\n        tslib_1.__param(8, notification_1.INotificationService)\n    ], AddToWorkspaceFolderRecommendationsAction);\n    return AddToWorkspaceFolderRecommendationsAction;\n}(AbstractConfigureRecommendedExtensionsAction));\nexports.AddToWorkspaceFolderRecommendationsAction = AddToWorkspaceFolderRecommendationsAction;\nvar AddToWorkspaceRecommendationsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(AddToWorkspaceRecommendationsAction, _super);\n    function AddToWorkspaceRecommendationsAction(id, label, fileService, contextService, editorService, jsonEditingService, textModelResolverService, notificationService) {\n        var _this = _super.call(this, id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService) || this;\n        _this.notificationService = notificationService;\n        return _this;\n    }\n    AddToWorkspaceRecommendationsAction.prototype.run = function (shouldRecommend) {\n        var _this = this;\n        var workspaceConfig = this.contextService.getWorkspace().configuration;\n        if (!(this.editorService.activeEditor instanceof extensionsInput_1.ExtensionsInput) || !this.editorService.activeEditor.extension || !workspaceConfig) {\n            return Promise.resolve();\n        }\n        var extensionId = this.editorService.activeEditor.extension.identifier;\n        return this.getWorkspaceExtensionsConfigContent(workspaceConfig).then(function (content) {\n            var extensionIdLowerCase = extensionId.id.toLowerCase();\n            if (shouldRecommend) {\n                if ((content.recommendations || []).some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                    _this.notificationService.info(nls_1.localize('AddToWorkspaceRecommendations.alreadyExists', 'This extension is already present in workspace recommendations.'));\n                    return Promise.resolve();\n                }\n                return _this.addExtensionToWorkspaceConfig(workspaceConfig, extensionId.id, shouldRecommend).then(function () {\n                    _this.notificationService.prompt(notification_1.Severity.Info, nls_1.localize('AddToWorkspaceRecommendations.success', 'The extension was successfully added to this workspace\\'s recommendations.'), [{\n                            label: nls_1.localize('viewChanges', \"View Changes\"),\n                            run: function () { return _this.openWorkspaceConfigurationFile(workspaceConfig); }\n                        }]);\n                }, function (err) {\n                    _this.notificationService.error(nls_1.localize('AddToWorkspaceRecommendations.failure', 'Failed to write. {0}', err));\n                });\n            }\n            else {\n                if ((content.unwantedRecommendations || []).some(function (e) { return e.toLowerCase() === extensionIdLowerCase; })) {\n                    _this.notificationService.info(nls_1.localize('AddToWorkspaceUnwantedRecommendations.alreadyExists', 'This extension is already present in workspace unwanted recommendations.'));\n                    return Promise.resolve();\n                }\n                return _this.addExtensionToWorkspaceConfig(workspaceConfig, extensionId.id, shouldRecommend).then(function () {\n                    _this.notificationService.prompt(notification_1.Severity.Info, nls_1.localize('AddToWorkspaceUnwantedRecommendations.success', 'The extension was successfully added to this workspace\\'s unwanted recommendations.'), [{\n                            label: nls_1.localize('viewChanges', \"View Changes\"),\n                            run: function () { return _this.openWorkspaceConfigurationFile(workspaceConfig); }\n                        }]);\n                }, function (err) {\n                    _this.notificationService.error(nls_1.localize('AddToWorkspaceRecommendations.failure', 'Failed to write. {0}', err));\n                });\n            }\n        });\n    };\n    AddToWorkspaceRecommendationsAction.ADD = true;\n    AddToWorkspaceRecommendationsAction.IGNORE = false;\n    AddToWorkspaceRecommendationsAction.ADD_ID = 'workbench.extensions.action.addToWorkspaceRecommendations';\n    AddToWorkspaceRecommendationsAction.ADD_LABEL = nls_1.localize('addToWorkspaceRecommendations', \"Add to Recommended Extensions (Workspace)\");\n    AddToWorkspaceRecommendationsAction.IGNORE_ID = 'workbench.extensions.action.addToWorkspaceIgnoredRecommendations';\n    AddToWorkspaceRecommendationsAction.IGNORE_LABEL = nls_1.localize('addToWorkspaceIgnoredRecommendations', \"Ignore Recommended Extension (Workspace)\");\n    AddToWorkspaceRecommendationsAction = tslib_1.__decorate([\n        tslib_1.__param(2, files_1.IFileService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, jsonEditing_1.IJSONEditingService),\n        tslib_1.__param(6, resolverService_1.ITextModelService),\n        tslib_1.__param(7, notification_1.INotificationService)\n    ], AddToWorkspaceRecommendationsAction);\n    return AddToWorkspaceRecommendationsAction;\n}(AbstractConfigureRecommendedExtensionsAction));\nexports.AddToWorkspaceRecommendationsAction = AddToWorkspaceRecommendationsAction;\nvar StatusLabelAction = /** @class */ (function (_super) {\n    tslib_1.__extends(StatusLabelAction, _super);\n    function StatusLabelAction(extensionService) {\n        var _this = _super.call(this, 'extensions.action.statusLabel', '', StatusLabelAction.DISABLED_CLASS, false) || this;\n        _this.extensionService = extensionService;\n        _this.initialStatus = null;\n        _this.status = null;\n        _this.enablementState = null;\n        return _this;\n    }\n    Object.defineProperty(StatusLabelAction.prototype, \"extension\", {\n        get: function () { return this._extension; },\n        set: function (extension) {\n            if (!(this._extension && extension && extensionManagementUtil_1.areSameExtensions(this._extension.identifier, extension.identifier))) {\n                // Different extension. Reset\n                this.initialStatus = null;\n                this.status = null;\n                this.enablementState = null;\n            }\n            this._extension = extension;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StatusLabelAction.prototype.update = function () {\n        var _this = this;\n        this.computeLabel()\n            .then(function (label) {\n            _this.label = label || '';\n            _this.class = label ? StatusLabelAction.ENABLED_CLASS : StatusLabelAction.DISABLED_CLASS;\n        });\n    };\n    StatusLabelAction.prototype.computeLabel = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var currentStatus, currentEnablementState, runningExtensions, canAddExtension, canRemoveExtension, currentlyEnabled, enabled;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.extension) {\n                            return [2 /*return*/, null];\n                        }\n                        currentStatus = this.status;\n                        currentEnablementState = this.enablementState;\n                        this.status = this.extension.state;\n                        if (this.initialStatus === null) {\n                            this.initialStatus = this.status;\n                        }\n                        this.enablementState = this.extension.enablementState;\n                        return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 1:\n                        runningExtensions = _a.sent();\n                        canAddExtension = function () {\n                            var runningExtension = runningExtensions.filter(function (e) { return extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, _this.extension.identifier); })[0];\n                            if (_this.extension.local) {\n                                if (runningExtension && _this.extension.version === runningExtension.version) {\n                                    return true;\n                                }\n                                return _this.extensionService.canAddExtension(toExtensionDescription(_this.extension.local));\n                            }\n                            return false;\n                        };\n                        canRemoveExtension = function () {\n                            if (_this.extension.local) {\n                                if (runningExtensions.every(function (e) { return !extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, _this.extension.identifier); })) {\n                                    return true;\n                                }\n                                return _this.extensionService.canRemoveExtension(toExtensionDescription(_this.extension.local));\n                            }\n                            return false;\n                        };\n                        if (currentStatus !== null) {\n                            if (currentStatus === extensions_1.ExtensionState.Installing && this.status === extensions_1.ExtensionState.Installed) {\n                                return [2 /*return*/, canAddExtension() ? this.initialStatus === extensions_1.ExtensionState.Installed ? nls_1.localize('updated', \"Updated\") : nls_1.localize('installed', \"Installed\") : null];\n                            }\n                            if (currentStatus === extensions_1.ExtensionState.Uninstalling && this.status === extensions_1.ExtensionState.Uninstalled) {\n                                return [2 /*return*/, canRemoveExtension() ? nls_1.localize('uninstalled', \"Uninstalled\") : null];\n                            }\n                        }\n                        if (currentEnablementState !== null) {\n                            currentlyEnabled = currentEnablementState === extensionManagement_1.EnablementState.Enabled || currentEnablementState === extensionManagement_1.EnablementState.WorkspaceEnabled;\n                            enabled = this.enablementState === extensionManagement_1.EnablementState.Enabled || this.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled;\n                            if (!currentlyEnabled && enabled) {\n                                return [2 /*return*/, canAddExtension() ? nls_1.localize('enabled', \"Enabled\") : null];\n                            }\n                            if (currentlyEnabled && !enabled) {\n                                return [2 /*return*/, canRemoveExtension() ? nls_1.localize('disabled', \"Disabled\") : null];\n                            }\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    StatusLabelAction.prototype.run = function () {\n        return Promise.resolve();\n    };\n    StatusLabelAction.ENABLED_CLASS = 'extension-status-label';\n    StatusLabelAction.DISABLED_CLASS = StatusLabelAction.ENABLED_CLASS + \" hide\";\n    StatusLabelAction = tslib_1.__decorate([\n        tslib_1.__param(0, extensions_3.IExtensionService)\n    ], StatusLabelAction);\n    return StatusLabelAction;\n}(actions_1.Action));\nexports.StatusLabelAction = StatusLabelAction;\nvar MaliciousStatusLabelAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MaliciousStatusLabelAction, _super);\n    function MaliciousStatusLabelAction(long) {\n        var _this = this;\n        var tooltip = nls_1.localize('malicious tooltip', \"This extension was reported to be problematic.\");\n        var label = long ? tooltip : nls_1.localize('malicious', \"Malicious\");\n        _this = _super.call(this, 'extensions.install', label, '', false) || this;\n        _this.tooltip = nls_1.localize('malicious tooltip', \"This extension was reported to be problematic.\");\n        return _this;\n    }\n    MaliciousStatusLabelAction.prototype.update = function () {\n        if (this.extension && this.extension.isMalicious) {\n            this.class = MaliciousStatusLabelAction.Class + \" malicious\";\n        }\n        else {\n            this.class = MaliciousStatusLabelAction.Class + \" not-malicious\";\n        }\n    };\n    MaliciousStatusLabelAction.prototype.run = function () {\n        return Promise.resolve();\n    };\n    MaliciousStatusLabelAction.Class = 'malicious-status';\n    return MaliciousStatusLabelAction;\n}(ExtensionAction));\nexports.MaliciousStatusLabelAction = MaliciousStatusLabelAction;\nvar DisableAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableAllAction, _super);\n    function DisableAllAction(id, label, extensionsWorkbenchService, extensionEnablementService) {\n        if (id === void 0) { id = DisableAllAction.ID; }\n        if (label === void 0) { label = DisableAllAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.disposables = [];\n        _this.update();\n        _this.disposables.push(_this.extensionsWorkbenchService.onChange(function () { return _this.update(); }));\n        return _this;\n    }\n    DisableAllAction.prototype.update = function () {\n        var _this = this;\n        this.enabled = this.extensionsWorkbenchService.local.some(function (e) { return e.type === extensions_2.ExtensionType.User && (e.enablementState === extensionManagement_1.EnablementState.Enabled || e.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled) && !!e.local && _this.extensionEnablementService.canChangeEnablement(e.local); });\n    };\n    DisableAllAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local.filter(function (e) { return e.type === extensions_2.ExtensionType.User; }), extensionManagement_1.EnablementState.Disabled);\n    };\n    DisableAllAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    DisableAllAction.ID = 'workbench.extensions.action.disableAll';\n    DisableAllAction.LABEL = nls_1.localize('disableAll', \"Disable All Installed Extensions\");\n    DisableAllAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, extensionManagement_1.IExtensionEnablementService)\n    ], DisableAllAction);\n    return DisableAllAction;\n}(actions_1.Action));\nexports.DisableAllAction = DisableAllAction;\nvar DisableAllWorkpsaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DisableAllWorkpsaceAction, _super);\n    function DisableAllWorkpsaceAction(id, label, workspaceContextService, extensionsWorkbenchService) {\n        if (id === void 0) { id = DisableAllWorkpsaceAction.ID; }\n        if (label === void 0) { label = DisableAllWorkpsaceAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.workspaceContextService = workspaceContextService;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.disposables = [];\n        _this.update();\n        _this.workspaceContextService.onDidChangeWorkbenchState(function () { return _this.update(); }, _this, _this.disposables);\n        _this.extensionsWorkbenchService.onChange(function () { return _this.update(); }, _this, _this.disposables);\n        return _this;\n    }\n    DisableAllWorkpsaceAction.prototype.update = function () {\n        this.enabled = this.workspaceContextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY && this.extensionsWorkbenchService.local.some(function (e) { return e.type === extensions_2.ExtensionType.User && (e.enablementState === extensionManagement_1.EnablementState.Enabled || e.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled); });\n    };\n    DisableAllWorkpsaceAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local.filter(function (e) { return e.type === extensions_2.ExtensionType.User; }), extensionManagement_1.EnablementState.WorkspaceDisabled);\n    };\n    DisableAllWorkpsaceAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    DisableAllWorkpsaceAction.ID = 'workbench.extensions.action.disableAllWorkspace';\n    DisableAllWorkpsaceAction.LABEL = nls_1.localize('disableAllWorkspace', \"Disable All Installed Extensions for this Workspace\");\n    DisableAllWorkpsaceAction = tslib_1.__decorate([\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(3, extensions_1.IExtensionsWorkbenchService)\n    ], DisableAllWorkpsaceAction);\n    return DisableAllWorkpsaceAction;\n}(actions_1.Action));\nexports.DisableAllWorkpsaceAction = DisableAllWorkpsaceAction;\nvar EnableAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableAllAction, _super);\n    function EnableAllAction(id, label, extensionsWorkbenchService, extensionEnablementService) {\n        if (id === void 0) { id = EnableAllAction.ID; }\n        if (label === void 0) { label = EnableAllAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.disposables = [];\n        _this.update();\n        _this.disposables.push(_this.extensionsWorkbenchService.onChange(function () { return _this.update(); }));\n        return _this;\n    }\n    EnableAllAction.prototype.update = function () {\n        var _this = this;\n        this.enabled = this.extensionsWorkbenchService.local.some(function (e) { return !!e.local && _this.extensionEnablementService.canChangeEnablement(e.local) && (e.enablementState === extensionManagement_1.EnablementState.Disabled || e.enablementState === extensionManagement_1.EnablementState.WorkspaceDisabled); });\n    };\n    EnableAllAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local, extensionManagement_1.EnablementState.Enabled);\n    };\n    EnableAllAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    EnableAllAction.ID = 'workbench.extensions.action.enableAll';\n    EnableAllAction.LABEL = nls_1.localize('enableAll', \"Enable All Extensions\");\n    EnableAllAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, extensionManagement_1.IExtensionEnablementService)\n    ], EnableAllAction);\n    return EnableAllAction;\n}(actions_1.Action));\nexports.EnableAllAction = EnableAllAction;\nvar EnableAllWorkpsaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(EnableAllWorkpsaceAction, _super);\n    function EnableAllWorkpsaceAction(id, label, workspaceContextService, extensionsWorkbenchService, extensionEnablementService) {\n        if (id === void 0) { id = EnableAllWorkpsaceAction.ID; }\n        if (label === void 0) { label = EnableAllWorkpsaceAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.workspaceContextService = workspaceContextService;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionEnablementService = extensionEnablementService;\n        _this.disposables = [];\n        _this.update();\n        _this.extensionsWorkbenchService.onChange(function () { return _this.update(); }, _this, _this.disposables);\n        _this.workspaceContextService.onDidChangeWorkbenchState(function () { return _this.update(); }, _this, _this.disposables);\n        return _this;\n    }\n    EnableAllWorkpsaceAction.prototype.update = function () {\n        var _this = this;\n        this.enabled = this.workspaceContextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY && this.extensionsWorkbenchService.local.some(function (e) { return !!e.local && _this.extensionEnablementService.canChangeEnablement(e.local) && (e.enablementState === extensionManagement_1.EnablementState.Disabled || e.enablementState === extensionManagement_1.EnablementState.WorkspaceDisabled); });\n    };\n    EnableAllWorkpsaceAction.prototype.run = function () {\n        return this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local, extensionManagement_1.EnablementState.WorkspaceEnabled);\n    };\n    EnableAllWorkpsaceAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    EnableAllWorkpsaceAction.ID = 'workbench.extensions.action.enableAllWorkspace';\n    EnableAllWorkpsaceAction.LABEL = nls_1.localize('enableAllWorkspace', \"Enable All Extensions for this Workspace\");\n    EnableAllWorkpsaceAction = tslib_1.__decorate([\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(3, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(4, extensionManagement_1.IExtensionEnablementService)\n    ], EnableAllWorkpsaceAction);\n    return EnableAllWorkpsaceAction;\n}(actions_1.Action));\nexports.EnableAllWorkpsaceAction = EnableAllWorkpsaceAction;\nvar OpenExtensionsFolderAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenExtensionsFolderAction, _super);\n    function OpenExtensionsFolderAction(id, label, windowsService, fileService, environmentService) {\n        var _this = _super.call(this, id, label, undefined, true) || this;\n        _this.windowsService = windowsService;\n        _this.fileService = fileService;\n        _this.environmentService = environmentService;\n        return _this;\n    }\n    OpenExtensionsFolderAction.prototype.run = function () {\n        var _this = this;\n        var extensionsHome = uri_1.URI.file(this.environmentService.extensionsPath);\n        return Promise.resolve(this.fileService.resolveFile(extensionsHome)).then(function (file) {\n            var itemToShow;\n            if (file.children && file.children.length > 0) {\n                itemToShow = file.children[0].resource;\n            }\n            else {\n                itemToShow = extensionsHome;\n            }\n            return _this.windowsService.showItemInFolder(itemToShow);\n        });\n    };\n    OpenExtensionsFolderAction.ID = 'workbench.extensions.action.openExtensionsFolder';\n    OpenExtensionsFolderAction.LABEL = nls_1.localize('openExtensionsFolder', \"Open Extensions Folder\");\n    OpenExtensionsFolderAction = tslib_1.__decorate([\n        tslib_1.__param(2, windows_1.IWindowsService),\n        tslib_1.__param(3, files_1.IFileService),\n        tslib_1.__param(4, environment_1.IEnvironmentService)\n    ], OpenExtensionsFolderAction);\n    return OpenExtensionsFolderAction;\n}(actions_1.Action));\nexports.OpenExtensionsFolderAction = OpenExtensionsFolderAction;\nvar InstallVSIXAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallVSIXAction, _super);\n    function InstallVSIXAction(id, label, extensionsWorkbenchService, notificationService, windowService, extensionService, instantiationService) {\n        if (id === void 0) { id = InstallVSIXAction.ID; }\n        if (label === void 0) { label = InstallVSIXAction.LABEL; }\n        var _this = _super.call(this, id, label, 'extension-action install-vsix', true) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.notificationService = notificationService;\n        _this.windowService = windowService;\n        _this.extensionService = extensionService;\n        _this.instantiationService = instantiationService;\n        return _this;\n    }\n    InstallVSIXAction.prototype.run = function () {\n        var _this = this;\n        return Promise.resolve(this.windowService.showOpenDialog({\n            title: nls_1.localize('installFromVSIX', \"Install from VSIX\"),\n            filters: [{ name: 'VSIX Extensions', extensions: ['vsix'] }],\n            properties: ['openFile'],\n            buttonLabel: labels_1.mnemonicButtonLabel(nls_1.localize({ key: 'installButton', comment: ['&& denotes a mnemonic'] }, \"&&Install\"))\n        })).then(function (result) {\n            if (!result) {\n                return Promise.resolve();\n            }\n            return Promise.all(result.map(function (vsix) { return _this.extensionsWorkbenchService.install(vsix); }))\n                .then(function (extensions) {\n                for (var _i = 0, extensions_4 = extensions; _i < extensions_4.length; _i++) {\n                    var extension = extensions_4[_i];\n                    var requireReload = !(extension.local && _this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n                    var message = requireReload ? nls_1.localize('InstallVSIXAction.successReload', \"Please reload Visual Studio Code to complete installing the extension {0}.\", extension.identifier.id)\n                        : nls_1.localize('InstallVSIXAction.success', \"Installing the extension {0} is completed.\", extension.identifier.id);\n                    var actions = requireReload ? [{\n                            label: nls_1.localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n                            run: function () { return _this.windowService.reloadWindow(); }\n                        }] : [];\n                    _this.notificationService.prompt(notification_1.Severity.Info, message, actions, { sticky: true });\n                }\n                return _this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run();\n            });\n        });\n    };\n    InstallVSIXAction.ID = 'workbench.extensions.action.installVSIX';\n    InstallVSIXAction.LABEL = nls_1.localize('installVSIX', \"Install from VSIX...\");\n    InstallVSIXAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, windows_1.IWindowService),\n        tslib_1.__param(5, extensions_3.IExtensionService),\n        tslib_1.__param(6, instantiation_1.IInstantiationService)\n    ], InstallVSIXAction);\n    return InstallVSIXAction;\n}(actions_1.Action));\nexports.InstallVSIXAction = InstallVSIXAction;\nvar ReinstallAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReinstallAction, _super);\n    function ReinstallAction(id, label, extensionsWorkbenchService, quickInputService, notificationService, windowService, instantiationService, extensionService) {\n        if (id === void 0) { id = ReinstallAction.ID; }\n        if (label === void 0) { label = ReinstallAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.quickInputService = quickInputService;\n        _this.notificationService = notificationService;\n        _this.windowService = windowService;\n        _this.instantiationService = instantiationService;\n        _this.extensionService = extensionService;\n        return _this;\n    }\n    Object.defineProperty(ReinstallAction.prototype, \"enabled\", {\n        get: function () {\n            return this.extensionsWorkbenchService.local.filter(function (l) { return l.type === extensions_2.ExtensionType.User && l.local; }).length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReinstallAction.prototype.run = function () {\n        var _this = this;\n        return this.quickInputService.pick(this.getEntries(), { placeHolder: nls_1.localize('selectExtensionToReinstall', \"Select Extension to Reinstall\") })\n            .then(function (pick) { return pick && _this.reinstallExtension(pick.extension); });\n    };\n    ReinstallAction.prototype.getEntries = function () {\n        return this.extensionsWorkbenchService.queryLocal()\n            .then(function (local) {\n            var entries = local\n                .filter(function (extension) { return extension.type === extensions_2.ExtensionType.User; })\n                .map(function (extension) {\n                return {\n                    id: extension.identifier.id,\n                    label: extension.displayName,\n                    description: extension.identifier.id,\n                    extension: extension,\n                };\n            });\n            return entries;\n        });\n    };\n    ReinstallAction.prototype.reinstallExtension = function (extension) {\n        var _this = this;\n        return this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run()\n            .then(function () {\n            return _this.extensionsWorkbenchService.reinstall(extension)\n                .then(function (extension) {\n                var requireReload = !(extension.local && _this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n                var message = requireReload ? nls_1.localize('ReinstallAction.successReload', \"Please reload Visual Studio Code to complete reinstalling the extension {0}.\", extension.identifier.id)\n                    : nls_1.localize('ReinstallAction.success', \"Reinstalling the extension {0} is completed.\", extension.identifier.id);\n                var actions = requireReload ? [{\n                        label: nls_1.localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n                        run: function () { return _this.windowService.reloadWindow(); }\n                    }] : [];\n                _this.notificationService.prompt(notification_1.Severity.Info, message, actions, { sticky: true });\n            }, function (error) { return _this.notificationService.error(error); });\n        });\n    };\n    ReinstallAction.ID = 'workbench.extensions.action.reinstall';\n    ReinstallAction.LABEL = nls_1.localize('reinstall', \"Reinstall Extension...\");\n    ReinstallAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, quickInput_1.IQuickInputService),\n        tslib_1.__param(4, notification_1.INotificationService),\n        tslib_1.__param(5, windows_1.IWindowService),\n        tslib_1.__param(6, instantiation_1.IInstantiationService),\n        tslib_1.__param(7, extensions_3.IExtensionService)\n    ], ReinstallAction);\n    return ReinstallAction;\n}(actions_1.Action));\nexports.ReinstallAction = ReinstallAction;\nvar InstallSpecificVersionOfExtensionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InstallSpecificVersionOfExtensionAction, _super);\n    function InstallSpecificVersionOfExtensionAction(id, label, extensionsWorkbenchService, extensionGalleryService, quickInputService, notificationService, windowService, instantiationService, extensionService) {\n        if (id === void 0) { id = InstallSpecificVersionOfExtensionAction.ID; }\n        if (label === void 0) { label = InstallSpecificVersionOfExtensionAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.extensionGalleryService = extensionGalleryService;\n        _this.quickInputService = quickInputService;\n        _this.notificationService = notificationService;\n        _this.windowService = windowService;\n        _this.instantiationService = instantiationService;\n        _this.extensionService = extensionService;\n        return _this;\n    }\n    Object.defineProperty(InstallSpecificVersionOfExtensionAction.prototype, \"enabled\", {\n        get: function () {\n            var _this = this;\n            return this.extensionsWorkbenchService.local.some(function (l) { return _this.isEnabled(l); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InstallSpecificVersionOfExtensionAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var extensionPick, versionPick;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.quickInputService.pick(this.getExtensionEntries(), { placeHolder: nls_1.localize('selectExtension', \"Select Extension\"), matchOnDetail: true })];\n                    case 1:\n                        extensionPick = _a.sent();\n                        if (!(extensionPick && extensionPick.extension)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.quickInputService.pick(extensionPick.versions.map(function (v) { return ({ id: v.version, label: v.version, description: \"\" + getRelativeDateLabel(new Date(Date.parse(v.date))) + (v.version === extensionPick.extension.version ? \" (\" + nls_1.localize('current', \"Current\") + \")\" : '') }); }), { placeHolder: nls_1.localize('selectVersion', \"Select Version to Install\"), matchOnDetail: true })];\n                    case 2:\n                        versionPick = _a.sent();\n                        if (!versionPick) return [3 /*break*/, 4];\n                        if (!(extensionPick.extension.version !== versionPick.id)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.install(extensionPick.extension, versionPick.id)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    InstallSpecificVersionOfExtensionAction.prototype.isEnabled = function (extension) {\n        return !!extension.gallery && (extension.enablementState === extensionManagement_1.EnablementState.Enabled || extension.enablementState === extensionManagement_1.EnablementState.WorkspaceEnabled);\n    };\n    InstallSpecificVersionOfExtensionAction.prototype.getExtensionEntries = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var installed, versionsPromises, _loop_1, this_1, _i, installed_1, extension, extensions;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 1:\n                        installed = _a.sent();\n                        versionsPromises = [];\n                        _loop_1 = function (extension) {\n                            if (this_1.isEnabled(extension)) {\n                                versionsPromises.push(this_1.extensionGalleryService.getAllVersions(extension.gallery, true)\n                                    .then(function (versions) { return (versions.length ? { extension: extension, versions: versions } : null); }));\n                            }\n                        };\n                        this_1 = this;\n                        for (_i = 0, installed_1 = installed; _i < installed_1.length; _i++) {\n                            extension = installed_1[_i];\n                            _loop_1(extension);\n                        }\n                        return [4 /*yield*/, Promise.all(versionsPromises)];\n                    case 2:\n                        extensions = _a.sent();\n                        return [2 /*return*/, arrays_1.coalesce(extensions)\n                                .sort(function (e1, e2) { return e1.extension.displayName.localeCompare(e2.extension.displayName); })\n                                .map(function (_a) {\n                                var extension = _a.extension, versions = _a.versions;\n                                return {\n                                    id: extension.identifier.id,\n                                    label: extension.displayName || extension.identifier.id,\n                                    description: extension.identifier.id,\n                                    extension: extension,\n                                    versions: versions\n                                };\n                            })];\n                }\n            });\n        });\n    };\n    InstallSpecificVersionOfExtensionAction.prototype.install = function (extension, version) {\n        var _this = this;\n        return this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run()\n            .then(function () {\n            return _this.extensionsWorkbenchService.installVersion(extension, version)\n                .then(function (extension) {\n                var requireReload = !(extension.local && _this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n                var message = requireReload ? nls_1.localize('InstallAnotherVersionExtensionAction.successReload', \"Please reload Visual Studio Code to complete installing the extension {0}.\", extension.identifier.id)\n                    : nls_1.localize('InstallAnotherVersionExtensionAction.success', \"Installing the extension {0} is completed.\", extension.identifier.id);\n                var actions = requireReload ? [{\n                        label: nls_1.localize('InstallAnotherVersionExtensionAction.reloadNow', \"Reload Now\"),\n                        run: function () { return _this.windowService.reloadWindow(); }\n                    }] : [];\n                _this.notificationService.prompt(notification_1.Severity.Info, message, actions, { sticky: true });\n            }, function (error) { return _this.notificationService.error(error); });\n        });\n    };\n    InstallSpecificVersionOfExtensionAction.ID = 'workbench.extensions.action.install.specificVersion';\n    InstallSpecificVersionOfExtensionAction.LABEL = nls_1.localize('install previous version', \"Install Specific Version of Extension...\");\n    InstallSpecificVersionOfExtensionAction = tslib_1.__decorate([\n        tslib_1.__param(2, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(3, extensionManagement_1.IExtensionGalleryService),\n        tslib_1.__param(4, quickInput_1.IQuickInputService),\n        tslib_1.__param(5, notification_1.INotificationService),\n        tslib_1.__param(6, windows_1.IWindowService),\n        tslib_1.__param(7, instantiation_1.IInstantiationService),\n        tslib_1.__param(8, extensions_3.IExtensionService)\n    ], InstallSpecificVersionOfExtensionAction);\n    return InstallSpecificVersionOfExtensionAction;\n}(actions_1.Action));\nexports.InstallSpecificVersionOfExtensionAction = InstallSpecificVersionOfExtensionAction;\ncommands_1.CommandsRegistry.registerCommand('workbench.extensions.action.showExtensionsForLanguage', function (accessor, fileExtension) {\n    var viewletService = accessor.get(viewlet_2.IViewletService);\n    return viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n        .then(function (viewlet) { return viewlet; })\n        .then(function (viewlet) {\n        viewlet.search(\"ext:\" + fileExtension.replace(/^\\./, ''));\n        viewlet.focus();\n    });\n});\ncommands_1.CommandsRegistry.registerCommand('workbench.extensions.action.showExtensionsWithIds', function (accessor, extensionIds) {\n    var viewletService = accessor.get(viewlet_2.IViewletService);\n    return viewletService.openViewlet(extensions_1.VIEWLET_ID, true)\n        .then(function (viewlet) { return viewlet; })\n        .then(function (viewlet) {\n        var query = extensionIds\n            .map(function (id) { return \"@id:\" + id; })\n            .join(' ');\n        viewlet.search(query);\n        viewlet.focus();\n    });\n});\nexports.extensionButtonProminentBackground = colorRegistry_1.registerColor('extensionButton.prominentBackground', {\n    dark: '#327e36',\n    light: '#327e36',\n    hc: null\n}, nls_1.localize('extensionButtonProminentBackground', \"Button background color for actions extension that stand out (e.g. install button).\"));\nexports.extensionButtonProminentForeground = colorRegistry_1.registerColor('extensionButton.prominentForeground', {\n    dark: color_1.Color.white,\n    light: color_1.Color.white,\n    hc: null\n}, nls_1.localize('extensionButtonProminentForeground', \"Button foreground color for actions extension that stand out (e.g. install button).\"));\nexports.extensionButtonProminentHoverBackground = colorRegistry_1.registerColor('extensionButton.prominentHoverBackground', {\n    dark: '#28632b',\n    light: '#28632b',\n    hc: null\n}, nls_1.localize('extensionButtonProminentHoverBackground', \"Button background hover color for actions extension that stand out (e.g. install button).\"));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var foregroundColor = theme.getColor(colorRegistry_1.foreground);\n    if (foregroundColor) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action.built-in-status { border-color: \" + foregroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action.built-in-status { border-color: \" + foregroundColor + \"; }\");\n    }\n    var buttonBackgroundColor = theme.getColor(colorRegistry_1.buttonBackground);\n    if (buttonBackgroundColor) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action { background-color: \" + buttonBackgroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action { background-color: \" + buttonBackgroundColor + \"; }\");\n    }\n    var buttonForegroundColor = theme.getColor(colorRegistry_1.buttonForeground);\n    if (buttonForegroundColor) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action { color: \" + buttonForegroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action { color: \" + buttonForegroundColor + \"; }\");\n    }\n    var buttonHoverBackgroundColor = theme.getColor(colorRegistry_1.buttonHoverBackground);\n    if (buttonHoverBackgroundColor) {\n        collector.addRule(\".extension .monaco-action-bar .action-item:hover .action-label.extension-action { background-color: \" + buttonHoverBackgroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item:hover .action-label.extension-action { background-color: \" + buttonHoverBackgroundColor + \"; }\");\n    }\n    var contrastBorderColor = theme.getColor(colorRegistry_1.contrastBorder);\n    if (contrastBorderColor) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action { border: 1px solid \" + contrastBorderColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action { border: 1px solid \" + contrastBorderColor + \"; }\");\n    }\n    var extensionButtonProminentBackgroundColor = theme.getColor(exports.extensionButtonProminentBackground);\n    if (exports.extensionButtonProminentBackground) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action.prominent { background-color: \" + extensionButtonProminentBackgroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action.prominent { background-color: \" + extensionButtonProminentBackgroundColor + \"; }\");\n    }\n    var extensionButtonProminentForegroundColor = theme.getColor(exports.extensionButtonProminentForeground);\n    if (exports.extensionButtonProminentForeground) {\n        collector.addRule(\".extension .monaco-action-bar .action-item .action-label.extension-action.prominent { color: \" + extensionButtonProminentForegroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item .action-label.extension-action.prominent { color: \" + extensionButtonProminentForegroundColor + \"; }\");\n    }\n    var extensionButtonProminentHoverBackgroundColor = theme.getColor(exports.extensionButtonProminentHoverBackground);\n    if (exports.extensionButtonProminentHoverBackground) {\n        collector.addRule(\".extension .monaco-action-bar .action-item:hover .action-label.extension-action.prominent { background-color: \" + extensionButtonProminentHoverBackgroundColor + \"; }\");\n        collector.addRule(\".extension-editor .monaco-action-bar .action-item:hover .action-label.extension-action.prominent { background-color: \" + extensionButtonProminentHoverBackgroundColor + \"; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/extensionActions';\nimport { localize } from 'vs/nls';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { Throttler, Delayer } from 'vs/base/common/async';\nimport * as DOM from 'vs/base/browser/dom';\nimport { Event } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { ActionItem, Separator, IActionItemOptions } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IDisposable, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { IExtension, ExtensionState, IExtensionsWorkbenchService, VIEWLET_ID, IExtensionsViewlet, AutoUpdateConfigurationKey, IExtensionContainer, EXTENSIONS_CONFIG } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { ExtensionsConfigurationInitialContent } from 'vs/workbench/contrib/extensions/common/extensionsFileTemplate';\nimport { IExtensionEnablementService, IExtensionTipsService, EnablementState, ExtensionsLabel, IExtensionRecommendation, IGalleryExtension, IExtensionsConfigContent, IExtensionGalleryService, INSTALL_ERROR_MALICIOUS, INSTALL_ERROR_INCOMPATIBLE, IGalleryExtensionVersion, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ShowViewletAction } from 'vs/workbench/browser/viewlet';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { Query } from 'vs/workbench/contrib/extensions/common/extensionQuery';\nimport { IFileService, IContent } from 'vs/platform/files/common/files';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IWindowService, IWindowsService } from 'vs/platform/windows/common/windows';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\nimport { CommandsRegistry, ICommandService } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { registerThemingParticipant, ITheme, ICssStyleCollector } from 'vs/platform/theme/common/themeService';\nimport { buttonBackground, buttonForeground, buttonHoverBackground, contrastBorder, registerColor, foreground } from 'vs/platform/theme/common/colorRegistry';\nimport { Color } from 'vs/base/common/color';\nimport { IJSONEditingService } from 'vs/workbench/services/configuration/common/jsonEditing';\nimport { ITextEditorSelection } from 'vs/platform/editor/common/editor';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { PagedModel } from 'vs/base/common/paging';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { PICK_WORKSPACE_FOLDER_COMMAND_ID } from 'vs/workbench/browser/actions/workspaceCommands';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ExtensionsInput } from 'vs/workbench/contrib/extensions/common/extensionsInput';\nimport product from 'vs/platform/product/node/product';\nimport { IQuickPickItem, IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { clipboard } from 'electron';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { IWorkbenchThemeService, COLOR_THEME_SETTING, ICON_THEME_SETTING, IFileIconTheme, IColorTheme } from 'vs/workbench/services/themes/common/workbenchThemeService';\n\nfunction toExtensionDescription(local: ILocalExtension): IExtensionDescription {\n\treturn {\n\t\tidentifier: new ExtensionIdentifier(local.identifier.id),\n\t\tisBuiltin: local.type === ExtensionType.System,\n\t\tisUnderDevelopment: false,\n\t\textensionLocation: local.location,\n\t\t...local.manifest\n\t};\n}\n\nconst promptDownloadManually = (extension: IGalleryExtension | undefined, message: string, error: Error, instantiationService: IInstantiationService, notificationService: INotificationService, openerService: IOpenerService) => {\n\tif (!extension || error.name === INSTALL_ERROR_INCOMPATIBLE || error.name === INSTALL_ERROR_MALICIOUS) {\n\t\treturn Promise.reject(error);\n\t} else {\n\t\tconst downloadUrl = `${product.extensionsGallery.serviceUrl}/publishers/${extension.publisher}/vsextensions/${extension.name}/${extension.version}/vspackage`;\n\t\tnotificationService.prompt(Severity.Error, message, [{\n\t\t\tlabel: localize('download', \"Download Manually\"),\n\t\t\trun: () => openerService.open(URI.parse(downloadUrl)).then(() => {\n\t\t\t\tnotificationService.prompt(\n\t\t\t\t\tSeverity.Info,\n\t\t\t\t\tlocalize('install vsix', 'Once downloaded, please manually install the downloaded VSIX of \\'{0}\\'.', extension.identifier.id),\n\t\t\t\t\t[{\n\t\t\t\t\t\tlabel: InstallVSIXAction.LABEL,\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\tconst action = instantiationService.createInstance(InstallVSIXAction, InstallVSIXAction.ID, InstallVSIXAction.LABEL);\n\t\t\t\t\t\t\taction.run();\n\t\t\t\t\t\t\taction.dispose();\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t);\n\t\t\t})\n\t\t}]);\n\t\treturn Promise.resolve();\n\t}\n};\n\nfunction getRelativeDateLabel(date: Date): string {\n\tconst delta = new Date().getTime() - date.getTime();\n\n\tconst year = 365 * 24 * 60 * 60 * 1000;\n\tif (delta > year) {\n\t\tconst noOfYears = Math.floor(delta / year);\n\t\treturn noOfYears > 1 ? localize('noOfYearsAgo', \"{0} years ago\", noOfYears) : localize('one year ago', \"1 year ago\");\n\t}\n\n\tconst month = 30 * 24 * 60 * 60 * 1000;\n\tif (delta > month) {\n\t\tconst noOfMonths = Math.floor(delta / month);\n\t\treturn noOfMonths > 1 ? localize('noOfMonthsAgo', \"{0} months ago\", noOfMonths) : localize('one month ago', \"1 month ago\");\n\t}\n\n\tconst day = 24 * 60 * 60 * 1000;\n\tif (delta > day) {\n\t\tconst noOfDays = Math.floor(delta / day);\n\t\treturn noOfDays > 1 ? localize('noOfDaysAgo', \"{0} days ago\", noOfDays) : localize('one day ago', \"1 day ago\");\n\t}\n\n\tconst hour = 60 * 60 * 1000;\n\tif (delta > hour) {\n\t\tconst noOfHours = Math.floor(delta / day);\n\t\treturn noOfHours > 1 ? localize('noOfHoursAgo', \"{0} hours ago\", noOfHours) : localize('one hour ago', \"1 hour ago\");\n\t}\n\n\tif (delta > 0) {\n\t\treturn localize('just now', \"Just now\");\n\t}\n\n\treturn '';\n}\n\nexport abstract class ExtensionAction extends Action implements IExtensionContainer {\n\tprivate _extension: IExtension;\n\tget extension(): IExtension { return this._extension; }\n\tset extension(extension: IExtension) { this._extension = extension; this.update(); }\n\tabstract update(): void;\n}\n\nexport class InstallAction extends ExtensionAction {\n\n\tprivate static INSTALL_LABEL = localize('install', \"Install\");\n\tprivate static INSTALLING_LABEL = localize('installing', \"Installing\");\n\n\tprivate static readonly Class = 'extension-action prominent install';\n\tprivate static readonly InstallingClass = 'extension-action install installing';\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IExtensionService private readonly runtimeExtensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService\n\t) {\n\t\tsuper(`extensions.install`, InstallAction.INSTALL_LABEL, InstallAction.Class, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (!this.extension || this.extension.type === ExtensionType.System) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.class = InstallAction.Class;\n\t\t\tthis.label = InstallAction.INSTALL_LABEL;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = this.extensionsWorkbenchService.canInstall(this.extension) && this.extension.state === ExtensionState.Uninstalled;\n\n\t\tif (this.extension.state === ExtensionState.Installing) {\n\t\t\tthis.label = InstallAction.INSTALLING_LABEL;\n\t\t\tthis.class = InstallAction.InstallingClass;\n\t\t\tthis.tooltip = InstallAction.INSTALLING_LABEL;\n\t\t} else {\n\t\t\tthis.label = InstallAction.INSTALL_LABEL;\n\t\t\tthis.class = InstallAction.Class;\n\t\t\tthis.tooltip = InstallAction.INSTALL_LABEL;\n\t\t}\n\t}\n\n\tasync run(): Promise<any> {\n\t\tthis.extensionsWorkbenchService.open(this.extension);\n\n\t\talert(localize('installExtensionStart', \"Installing extension {0} started. An editor is now open with more details on this extension\", this.extension.displayName));\n\n\t\tconst extension = await this.install(this.extension);\n\n\t\tif (extension.local) {\n\t\t\tconst runningExtension = await this.getRunningExtension(extension.local);\n\t\t\tif (runningExtension) {\n\t\t\t\tconst colorThemes = await this.workbenchThemeService.getColorThemes();\n\t\t\t\tconst fileIconThemes = await this.workbenchThemeService.getFileIconThemes();\n\t\t\t\tif (SetColorThemeAction.getColorThemes(colorThemes, this.extension).length) {\n\t\t\t\t\tconst action = this.instantiationService.createInstance(SetColorThemeAction, colorThemes);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run({ showCurrentTheme: true, ignoreFocusLost: true });\n\t\t\t\t}\n\t\t\t\tif (SetFileIconThemeAction.getFileIconThemes(fileIconThemes, this.extension).length) {\n\t\t\t\t\tconst action = this.instantiationService.createInstance(SetFileIconThemeAction, fileIconThemes);\n\t\t\t\t\taction.extension = extension;\n\t\t\t\t\treturn action.run({ showCurrentTheme: true, ignoreFocusLost: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate install(extension: IExtension): Promise<IExtension> {\n\t\treturn this.extensionsWorkbenchService.install(extension)\n\t\t\t.then(null, err => {\n\t\t\t\tif (!extension.gallery) {\n\t\t\t\t\treturn this.notificationService.error(err);\n\t\t\t\t}\n\n\t\t\t\tconsole.error(err);\n\n\t\t\t\treturn promptDownloadManually(extension.gallery, localize('failedToInstall', \"Failed to install \\'{0}\\'.\", extension.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t\t});\n\t}\n\n\tprivate async getRunningExtension(extension: ILocalExtension): Promise<IExtensionDescription | null> {\n\t\tconst runningExtension = await this.runtimeExtensionService.getExtension(extension.identifier.id);\n\t\tif (runningExtension) {\n\t\t\treturn runningExtension;\n\t\t}\n\t\tif (this.runtimeExtensionService.canAddExtension(toExtensionDescription(extension))) {\n\t\t\treturn new Promise<IExtensionDescription | null>((c, e) => {\n\t\t\t\tconst disposable = this.runtimeExtensionService.onDidChangeExtensions(async () => {\n\t\t\t\t\tconst runningExtension = await this.runtimeExtensionService.getExtension(extension.identifier.id);\n\t\t\t\t\tif (runningExtension) {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\tc(runningExtension);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class UninstallAction extends ExtensionAction {\n\n\tprivate static readonly UninstallLabel = localize('uninstallAction', \"Uninstall\");\n\tprivate static readonly UninstallingLabel = localize('Uninstalling', \"Uninstalling\");\n\n\tprivate static readonly UninstallClass = 'extension-action uninstall';\n\tprivate static readonly UnInstallingClass = 'extension-action uninstall uninstalling';\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private extensionsWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper('extensions.uninstall', UninstallAction.UninstallLabel, UninstallAction.UninstallClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (!this.extension) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tconst state = this.extension.state;\n\n\t\tif (state === ExtensionState.Uninstalling) {\n\t\t\tthis.label = UninstallAction.UninstallingLabel;\n\t\t\tthis.class = UninstallAction.UnInstallingClass;\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.label = UninstallAction.UninstallLabel;\n\t\tthis.class = UninstallAction.UninstallClass;\n\n\t\tconst installedExtensions = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, this.extension.identifier));\n\n\t\tif (!installedExtensions.length) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (state !== ExtensionState.Installed) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (installedExtensions[0].type !== ExtensionType.User) {\n\t\t\tthis.enabled = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = true;\n\t}\n\n\trun(): Promise<any> {\n\t\talert(localize('uninstallExtensionStart', \"Uninstalling extension {0} started.\", this.extension.displayName));\n\n\t\treturn this.extensionsWorkbenchService.uninstall(this.extension).then(() => {\n\t\t\talert(localize('uninstallExtensionComplete', \"Please reload Visual Studio Code to complete the uninstallation of the extension {0}.\", this.extension.displayName));\n\t\t});\n\t}\n}\n\nexport class CombinedInstallAction extends ExtensionAction {\n\n\tprivate static readonly NoExtensionClass = 'extension-action prominent install no-extension';\n\tprivate installAction: InstallAction;\n\tprivate uninstallAction: UninstallAction;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensions.combinedInstall', '', '', false);\n\n\t\tthis.installAction = instantiationService.createInstance(InstallAction);\n\t\tthis.uninstallAction = instantiationService.createInstance(UninstallAction);\n\t\tthis.disposables.push(this.installAction, this.uninstallAction);\n\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.installAction.extension = this.extension;\n\t\tthis.uninstallAction.extension = this.extension;\n\t\tthis.installAction.update();\n\t\tthis.uninstallAction.update();\n\n\t\tif (!this.extension || this.extension.type === ExtensionType.System) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.class = CombinedInstallAction.NoExtensionClass;\n\t\t} else if (this.extension.state === ExtensionState.Installing) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.label = this.installAction.label;\n\t\t\tthis.class = this.installAction.class;\n\t\t\tthis.tooltip = this.installAction.tooltip;\n\t\t} else if (this.extension.state === ExtensionState.Uninstalling) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.label = this.uninstallAction.label;\n\t\t\tthis.class = this.uninstallAction.class;\n\t\t\tthis.tooltip = this.uninstallAction.tooltip;\n\t\t} else if (this.installAction.enabled) {\n\t\t\tthis.enabled = true;\n\t\t\tthis.label = this.installAction.label;\n\t\t\tthis.class = this.installAction.class;\n\t\t\tthis.tooltip = this.installAction.tooltip;\n\t\t} else if (this.uninstallAction.enabled) {\n\t\t\tthis.enabled = true;\n\t\t\tthis.label = this.uninstallAction.label;\n\t\t\tthis.class = this.uninstallAction.class;\n\t\t\tthis.tooltip = this.uninstallAction.tooltip;\n\t\t} else {\n\t\t\tthis.enabled = false;\n\t\t\tthis.label = this.installAction.label;\n\t\t\tthis.class = this.installAction.class;\n\t\t\tthis.tooltip = this.installAction.tooltip;\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\tif (this.installAction.enabled) {\n\t\t\treturn this.installAction.run();\n\t\t} else if (this.uninstallAction.enabled) {\n\t\t\treturn this.uninstallAction.run();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class UpdateAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = 'extension-action prominent update';\n\tprivate static readonly DisabledClass = `${UpdateAction.EnabledClass} disabled`;\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper(`extensions.update`, '', UpdateAction.DisabledClass, false);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tif (!this.extension) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.class = UpdateAction.DisabledClass;\n\t\t\tthis.label = this.getUpdateLabel();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.extension.type !== ExtensionType.User) {\n\t\t\tthis.enabled = false;\n\t\t\tthis.class = UpdateAction.DisabledClass;\n\t\t\tthis.label = this.getUpdateLabel();\n\t\t\treturn;\n\t\t}\n\n\t\tconst canInstall = this.extensionsWorkbenchService.canInstall(this.extension);\n\t\tconst isInstalled = this.extension.state === ExtensionState.Installed;\n\n\t\tthis.enabled = canInstall && isInstalled && this.extension.outdated;\n\t\tthis.class = this.enabled ? UpdateAction.EnabledClass : UpdateAction.DisabledClass;\n\t\tthis.label = this.extension.outdated ? this.getUpdateLabel(this.extension.latestVersion) : this.getUpdateLabel();\n\t}\n\n\trun(): Promise<any> {\n\t\talert(localize('updateExtensionStart', \"Updating extension {0} to version {1} started.\", this.extension.displayName, this.extension.latestVersion));\n\t\treturn this.install(this.extension);\n\t}\n\n\tprivate install(extension: IExtension): Promise<void> {\n\t\treturn this.extensionsWorkbenchService.install(extension).then(() => {\n\t\t\talert(localize('updateExtensionComplete', \"Updating extension {0} to version {1} completed.\", this.extension.displayName, this.extension.latestVersion));\n\t\t}, err => {\n\t\t\tif (!extension.gallery) {\n\t\t\t\treturn this.notificationService.error(err);\n\t\t\t}\n\n\t\t\tconsole.error(err);\n\n\t\t\treturn promptDownloadManually(extension.gallery, localize('failedToUpdate', \"Failed to update \\'{0}\\'.\", extension.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t});\n\t}\n\n\tprivate getUpdateLabel(version?: string): string {\n\t\treturn version ? localize('updateTo', \"Update to {0}\", version) : localize('updateAction', \"Update\");\n\t}\n}\n\ninterface IExtensionActionItemOptions extends IActionItemOptions {\n\ttabOnlyOnFocus?: boolean;\n}\n\nexport class ExtensionActionItem extends ActionItem {\n\n\tprotected options: IExtensionActionItemOptions;\n\n\tconstructor(context: any, action: IAction, options: IExtensionActionItemOptions = {}) {\n\t\tsuper(context, action, options);\n\t}\n\n\tupdateEnabled(): void {\n\t\tsuper.updateEnabled();\n\n\t\tif (this.options.tabOnlyOnFocus && this.getAction().enabled && !this._hasFocus) {\n\t\t\tDOM.removeTabIndexAndUpdateFocus(this.label);\n\t\t}\n\t}\n\n\tprivate _hasFocus: boolean;\n\tsetFocus(value: boolean): void {\n\t\tif (!this.options.tabOnlyOnFocus || this._hasFocus === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._hasFocus = value;\n\t\tif (this.getAction().enabled) {\n\t\t\tif (this._hasFocus) {\n\t\t\t\tthis.label.tabIndex = 0;\n\t\t\t} else {\n\t\t\t\tDOM.removeTabIndexAndUpdateFocus(this.label);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport abstract class ExtensionDropDownAction extends ExtensionAction {\n\n\tprotected disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tcssClass: string,\n\t\tenabled: boolean,\n\t\tprivate readonly tabOnlyOnFocus: boolean,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, label, cssClass, enabled);\n\t}\n\n\tprivate _actionItem: DropDownMenuActionItem;\n\tcreateActionItem(): DropDownMenuActionItem {\n\t\tthis._actionItem = this.instantiationService.createInstance(DropDownMenuActionItem, this, this.tabOnlyOnFocus);\n\t\treturn this._actionItem;\n\t}\n\n\tpublic run({ actionGroups, disposeActionsOnHide }: { actionGroups: IAction[][], disposeActionsOnHide: boolean }): Promise<any> {\n\t\tif (this._actionItem) {\n\t\t\tthis._actionItem.showMenu(actionGroups, disposeActionsOnHide);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class DropDownMenuActionItem extends ExtensionActionItem {\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(action: ExtensionDropDownAction,\n\t\ttabOnlyOnFocus: boolean,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper(null, action, { icon: true, label: true, tabOnlyOnFocus });\n\t}\n\n\tpublic showMenu(menuActionGroups: IAction[][], disposeActionsOnHide: boolean): void {\n\t\tif (this.element) {\n\t\t\tconst actions = this.getActions(menuActionGroups);\n\t\t\tlet elementPosition = DOM.getDomNodePagePosition(this.element);\n\t\t\tconst anchor = { x: elementPosition.left, y: elementPosition.top + elementPosition.height + 10 };\n\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\tgetActions: () => actions,\n\t\t\t\tactionRunner: this.actionRunner,\n\t\t\t\tonHide: () => { if (disposeActionsOnHide) { dispose(actions); } }\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getActions(menuActionGroups: IAction[][]): IAction[] {\n\t\tlet actions: IAction[] = [];\n\t\tfor (const menuActions of menuActionGroups) {\n\t\t\tactions = [...actions, ...menuActions, new Separator()];\n\t\t}\n\t\treturn actions.length ? actions.slice(0, actions.length - 1) : actions;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class ManageExtensionAction extends ExtensionDropDownAction {\n\n\tstatic readonly ID = 'extensions.manage';\n\tprivate static readonly Class = 'extension-action manage';\n\tprivate static readonly HideManageExtensionClass = `${ManageExtensionAction.Class} hide`;\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService\n\t) {\n\n\t\tsuper(ManageExtensionAction.ID, '', '', true, true, instantiationService);\n\n\t\tthis.tooltip = localize('manage', \"Manage\");\n\n\t\tthis.update();\n\t}\n\n\tgetActionGroups(runningExtensions: IExtensionDescription[], colorThemes: IColorTheme[], fileIconThemes: IFileIconTheme[]): IAction[][] {\n\t\tconst groups: ExtensionAction[][] = [];\n\t\tif (this.extension) {\n\t\t\tconst extensionColorThemes = SetColorThemeAction.getColorThemes(colorThemes, this.extension);\n\t\t\tconst extensionFileIconThemes = SetFileIconThemeAction.getFileIconThemes(fileIconThemes, this.extension);\n\t\t\tif (extensionColorThemes.length || extensionFileIconThemes.length) {\n\t\t\t\tconst themesGroup: ExtensionAction[] = [];\n\t\t\t\tif (extensionColorThemes.length) {\n\t\t\t\t\tthemesGroup.push(this.instantiationService.createInstance(SetColorThemeAction, colorThemes));\n\t\t\t\t}\n\t\t\t\tif (extensionFileIconThemes.length) {\n\t\t\t\t\tthemesGroup.push(this.instantiationService.createInstance(SetFileIconThemeAction, fileIconThemes));\n\t\t\t\t}\n\t\t\t\tgroups.push(themesGroup);\n\t\t\t}\n\t\t}\n\t\tgroups.push([\n\t\t\tthis.instantiationService.createInstance(EnableGloballyAction),\n\t\t\tthis.instantiationService.createInstance(EnableForWorkspaceAction)\n\t\t]);\n\t\tgroups.push([\n\t\t\tthis.instantiationService.createInstance(DisableGloballyAction, runningExtensions),\n\t\t\tthis.instantiationService.createInstance(DisableForWorkspaceAction, runningExtensions)\n\t\t]);\n\t\tgroups.push([this.instantiationService.createInstance(UninstallAction)]);\n\t\tgroups.push([this.instantiationService.createInstance(InstallAnotherVersionAction)]);\n\t\tgroups.push([this.instantiationService.createInstance(ExtensionInfoAction)]);\n\n\t\tgroups.forEach(group => group.forEach(extensionAction => extensionAction.extension = this.extension));\n\n\t\treturn groups;\n\t}\n\n\tasync run(): Promise<any> {\n\t\tconst runtimeExtensions = await this.extensionService.getExtensions();\n\t\tconst colorThemes = await this.workbenchThemeService.getColorThemes();\n\t\tconst fileIconThemes = await this.workbenchThemeService.getFileIconThemes();\n\t\treturn super.run({ actionGroups: this.getActionGroups(runtimeExtensions, colorThemes, fileIconThemes), disposeActionsOnHide: true });\n\t}\n\n\tupdate(): void {\n\t\tthis.class = ManageExtensionAction.HideManageExtensionClass;\n\t\tthis.enabled = false;\n\t\tif (this.extension) {\n\t\t\tconst state = this.extension.state;\n\t\t\tthis.enabled = state === ExtensionState.Installed;\n\t\t\tthis.class = this.enabled || state === ExtensionState.Uninstalling ? ManageExtensionAction.Class : ManageExtensionAction.HideManageExtensionClass;\n\t\t\tthis.tooltip = state === ExtensionState.Uninstalling ? localize('ManageExtensionAction.uninstallingTooltip', \"Uninstalling\") : '';\n\t\t}\n\t}\n}\n\nexport class InstallAnotherVersionAction extends ExtensionAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.install.anotherVersion';\n\tstatic LABEL = localize('install another version', \"Install Another Version...\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper(InstallAnotherVersionAction.ID, InstallAnotherVersionAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = this.extension && !!this.extension.gallery;\n\t}\n\n\trun(): Promise<any> {\n\t\tif (!this.enabled) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn this.quickInputService.pick(this.getVersionEntries(), { placeHolder: localize('selectVersion', \"Select Version to Install\"), matchOnDetail: true })\n\t\t\t.then(pick => {\n\t\t\t\tif (pick) {\n\t\t\t\t\tif (this.extension.version === pick.id) {\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t\tconst promise: Promise<any> = pick.latest ? this.extensionsWorkbenchService.install(this.extension) : this.extensionsWorkbenchService.installVersion(this.extension, pick.id);\n\t\t\t\t\treturn promise\n\t\t\t\t\t\t.then(null, err => {\n\t\t\t\t\t\t\tif (!this.extension.gallery) {\n\t\t\t\t\t\t\t\treturn this.notificationService.error(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.error(err);\n\n\t\t\t\t\t\t\treturn promptDownloadManually(this.extension.gallery, localize('failedToInstall', \"Failed to install \\'{0}\\'.\", this.extension.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate getVersionEntries(): Promise<(IQuickPickItem & { latest: boolean, id: string })[]> {\n\t\treturn this.extensionGalleryService.getAllVersions(this.extension.gallery!, true)\n\t\t\t.then(allVersions => allVersions.map((v, i) => ({ id: v.version, label: v.version, description: `${getRelativeDateLabel(new Date(Date.parse(v.date)))}${v.version === this.extension.version ? ` (${localize('current', \"Current\")})` : ''}`, latest: i === 0 })));\n\t}\n}\n\nexport class ExtensionInfoAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.extensionInfo';\n\tstatic readonly LABEL = localize('extensionInfoAction', \"Copy Extension Information\");\n\n\tconstructor() {\n\t\tsuper(ExtensionInfoAction.ID, ExtensionInfoAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = !!this.extension;\n\t}\n\n\trun(): Promise<any> {\n\n\t\tconst name = localize('extensionInfoName', 'Name: {0}', this.extension.displayName);\n\t\tconst id = localize('extensionInfoId', 'Id: {0}', this.extension.identifier.id);\n\t\tconst description = localize('extensionInfoDescription', 'Description: {0}', this.extension.description);\n\t\tconst verision = localize('extensionInfoVersion', 'Version: {0}', this.extension.version);\n\t\tconst publisher = localize('extensionInfoPublisher', 'Publisher: {0}', this.extension.publisherDisplayName);\n\t\tconst link = this.extension.url ? localize('extensionInfoVSMarketplaceLink', 'VS Marketplace Link: {0}', this.extension.url.toString()) : null;\n\n\t\tconst clipboardStr = `${name}\\n${id}\\n${description}\\n${verision}\\n${publisher}${link ? '\\n' + link : ''}`;\n\n\t\tclipboard.writeText(clipboardStr);\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class EnableForWorkspaceAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.enableForWorkspace';\n\tstatic LABEL = localize('enableForWorkspaceAction', \"Enable (Workspace)\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(EnableForWorkspaceAction.ID, EnableForWorkspaceAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed && (this.extension.enablementState === EnablementState.Disabled || this.extension.enablementState === EnablementState.WorkspaceDisabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.WorkspaceEnabled);\n\t}\n}\n\nexport class EnableGloballyAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.enableGlobally';\n\tstatic LABEL = localize('enableGloballyAction', \"Enable\");\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(EnableGloballyAction.ID, EnableGloballyAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.extension.local) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed && this.extension.enablementState === EnablementState.Disabled && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.Enabled);\n\t}\n}\n\nexport class DisableForWorkspaceAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.disableForWorkspace';\n\tstatic LABEL = localize('disableForWorkspaceAction', \"Disable (Workspace)\");\n\n\tconstructor(readonly runningExtensions: IExtensionDescription[],\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(DisableForWorkspaceAction.ID, DisableForWorkspaceAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.runningExtensions.some(e => areSameExtensions({ id: e.identifier.value }, this.extension.identifier) && this.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY)) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed && (this.extension.enablementState === EnablementState.Enabled || this.extension.enablementState === EnablementState.WorkspaceEnabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.WorkspaceDisabled);\n\t}\n}\n\nexport class DisableGloballyAction extends ExtensionAction {\n\n\tstatic readonly ID = 'extensions.disableGlobally';\n\tstatic LABEL = localize('disableGloballyAction', \"Disable\");\n\n\tconstructor(readonly runningExtensions: IExtensionDescription[],\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(DisableGloballyAction.ID, DisableGloballyAction.LABEL);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension && this.runningExtensions.some(e => areSameExtensions({ id: e.identifier.value }, this.extension.identifier))) {\n\t\t\tthis.enabled = this.extension.state === ExtensionState.Installed && (this.extension.enablementState === EnablementState.Enabled || this.extension.enablementState === EnablementState.WorkspaceEnabled) && !!this.extension.local && this.extensionEnablementService.canChangeEnablement(this.extension.local);\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extension, EnablementState.Disabled);\n\t}\n}\n\nexport abstract class ExtensionEditorDropDownAction extends ExtensionDropDownAction {\n\n\tprivate static readonly EnabledClass = 'extension-action extension-editor-dropdown-action';\n\tprivate static readonly EnabledDropDownClass = 'extension-action extension-editor-dropdown-action dropdown enable';\n\tprivate static readonly DisabledClass = `${ExtensionEditorDropDownAction.EnabledClass} disabled`;\n\n\tconstructor(\n\t\tid: string, private readonly initialLabel: string,\n\t\treadonly actions: ExtensionAction[],\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, initialLabel, ExtensionEditorDropDownAction.DisabledClass, false, false, instantiationService);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.actions.forEach(a => a.extension = this.extension);\n\t\tthis.actions.forEach(a => a.update());\n\t\tconst enabledActions = this.actions.filter(a => a.enabled);\n\t\tthis.enabled = enabledActions.length > 0;\n\t\tif (this.enabled) {\n\t\t\tif (enabledActions.length === 1) {\n\t\t\t\tthis.label = enabledActions[0].label;\n\t\t\t\tthis.class = ExtensionEditorDropDownAction.EnabledClass;\n\t\t\t} else {\n\t\t\t\tthis.label = this.initialLabel;\n\t\t\t\tthis.class = ExtensionEditorDropDownAction.EnabledDropDownClass;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.class = ExtensionEditorDropDownAction.DisabledClass;\n\t\t}\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst enabledActions = this.actions.filter(a => a.enabled);\n\t\tif (enabledActions.length === 1) {\n\t\t\tenabledActions[0].run();\n\t\t} else {\n\t\t\treturn super.run({ actionGroups: [this.actions], disposeActionsOnHide: false });\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class EnableDropDownAction extends ExtensionEditorDropDownAction {\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensions.enable', localize('enableAction', \"Enable\"), [\n\t\t\tinstantiationService.createInstance(EnableGloballyAction),\n\t\t\tinstantiationService.createInstance(EnableForWorkspaceAction)\n\t\t], instantiationService);\n\t}\n}\n\nexport class DisableDropDownAction extends ExtensionEditorDropDownAction {\n\n\tconstructor(\n\t\trunningExtensions: IExtensionDescription[],\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper('extensions.disable', localize('disableAction', \"Disable\"), [\n\t\t\tinstantiationService.createInstance(DisableGloballyAction, runningExtensions),\n\t\t\tinstantiationService.createInstance(DisableForWorkspaceAction, runningExtensions)\n\t\t], instantiationService);\n\t}\n}\n\nexport class CheckForUpdatesAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.checkForUpdates';\n\tstatic LABEL = localize('checkForUpdates', \"Check for Extension Updates\");\n\n\tconstructor(\n\t\tid = CheckForUpdatesAction.ID,\n\t\tlabel = CheckForUpdatesAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tsuper(id, label, '', true);\n\t}\n\n\tprivate checkUpdatesAndNotify(): void {\n\t\tthis.extensionsWorkbenchService.queryLocal().then(\n\t\t\textensions => {\n\t\t\t\tconst outdatedExtensions = extensions.filter(ext => ext.outdated === true);\n\t\t\t\tif (!outdatedExtensions.length) {\n\t\t\t\t\tthis.notificationService.info(localize('noUpdatesAvailable', \"All Extensions are up to date.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet msgAvailableExtensions = outdatedExtensions.length === 1 ? localize('singleUpdateAvailable', \"An extension update is available.\") : localize('updatesAvailable', \"{0} extension updates are available.\", outdatedExtensions.length);\n\n\t\t\t\tconst disabledExtensionsCount = outdatedExtensions.filter(ext => ext.enablementState === EnablementState.Disabled || ext.enablementState === EnablementState.WorkspaceDisabled).length;\n\t\t\t\tif (disabledExtensionsCount) {\n\t\t\t\t\tif (outdatedExtensions.length === 1) {\n\t\t\t\t\t\tmsgAvailableExtensions = localize('singleDisabledUpdateAvailable', \"An update to an extension which is disabled is available.\");\n\t\t\t\t\t} else if (disabledExtensionsCount === 1) {\n\t\t\t\t\t\tmsgAvailableExtensions = localize('updatesAvailableOneDisabled', \"{0} extension updates are available. One of them is for a disabled extension.\", outdatedExtensions.length);\n\t\t\t\t\t} else if (disabledExtensionsCount === outdatedExtensions.length) {\n\t\t\t\t\t\tmsgAvailableExtensions = localize('updatesAvailableAllDisabled', \"{0} extension updates are available. All of them are for disabled extensions.\", outdatedExtensions.length);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgAvailableExtensions = localize('updatesAvailableIncludingDisabled', \"{0} extension updates are available. {1} of them are for disabled extensions.\", outdatedExtensions.length, disabledExtensionsCount);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t\t\t.then(viewlet => viewlet.search(''));\n\n\t\t\t\tthis.notificationService.info(msgAvailableExtensions);\n\t\t\t}\n\t\t);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.checkForUpdates().then(() => this.checkUpdatesAndNotify());\n\t}\n}\n\nexport class ToggleAutoUpdateAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate autoUpdateValue: boolean,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, '', true);\n\t\tthis.updateEnablement();\n\t\tconfigurationService.onDidChangeConfiguration(() => this.updateEnablement());\n\t}\n\n\tprivate updateEnablement(): void {\n\t\tthis.enabled = this.configurationService.getValue(AutoUpdateConfigurationKey) !== this.autoUpdateValue;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.configurationService.updateValue(AutoUpdateConfigurationKey, this.autoUpdateValue);\n\t}\n}\n\nexport class EnableAutoUpdateAction extends ToggleAutoUpdateAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.enableAutoUpdate';\n\tstatic LABEL = localize('enableAutoUpdate', \"Enable Auto Updating Extensions\");\n\n\tconstructor(\n\t\tid = EnableAutoUpdateAction.ID,\n\t\tlabel = EnableAutoUpdateAction.LABEL,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, true, configurationService);\n\t}\n}\n\nexport class DisableAutoUpdateAction extends ToggleAutoUpdateAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.disableAutoUpdate';\n\tstatic LABEL = localize('disableAutoUpdate', \"Disable Auto Updating Extensions\");\n\n\tconstructor(\n\t\tid = EnableAutoUpdateAction.ID,\n\t\tlabel = EnableAutoUpdateAction.LABEL,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, false, configurationService);\n\t}\n}\n\nexport class UpdateAllAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.updateAllExtensions';\n\tstatic LABEL = localize('updateAll', \"Update All Extensions\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid = UpdateAllAction.ID,\n\t\tlabel = UpdateAllAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService\n\t) {\n\t\tsuper(id, label, '', false);\n\n\t\tthis.disposables.push(this.extensionsWorkbenchService.onChange(() => this.update()));\n\t\tthis.update();\n\t}\n\n\tprivate get outdated(): IExtension[] {\n\t\treturn this.extensionsWorkbenchService.local.filter(e => e.outdated && e.state !== ExtensionState.Installing);\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.outdated.length > 0;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.all(this.outdated.map(e => this.install(e)));\n\t}\n\n\tprivate install(extension: IExtension): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.install(extension).then(undefined, err => {\n\t\t\tif (!extension.gallery) {\n\t\t\t\treturn this.notificationService.error(err);\n\t\t\t}\n\n\t\t\tconsole.error(err);\n\n\t\t\treturn promptDownloadManually(extension.gallery, localize('failedToUpdate', \"Failed to update \\'{0}\\'.\", extension.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class ReloadAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = 'extension-action reload';\n\tprivate static readonly DisabledClass = `${ReloadAction.EnabledClass} disabled`;\n\n\t// Use delayer to wait for more updates\n\tprivate throttler: Throttler;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper('extensions.reload', localize('reloadAction', \"Reload\"), ReloadAction.DisabledClass, false);\n\t\tthis.throttler = new Throttler();\n\t\tthis.extensionService.onDidChangeExtensions(this.update, this, this.disposables);\n\t\tthis.update();\n\t}\n\n\tupdate(): Promise<void> {\n\t\treturn this.throttler.queue(() => {\n\t\t\tthis.enabled = false;\n\t\t\tthis.tooltip = '';\n\t\t\tif (!this.extension) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t\tconst state = this.extension.state;\n\t\t\tif (state === ExtensionState.Installing || state === ExtensionState.Uninstalling) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t\tconst installed = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, this.extension.identifier))[0];\n\t\t\tconst local = this.extension.local || (installed && installed.local);\n\t\t\tif (local && local.manifest && local.manifest.contributes && local.manifest.contributes.localizations && local.manifest.contributes.localizations.length > 0) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t\treturn this.extensionService.getExtensions()\n\t\t\t\t.then(runningExtensions => this.computeReloadState(runningExtensions, installed));\n\t\t}).then(() => {\n\t\t\tthis.class = this.enabled ? ReloadAction.EnabledClass : ReloadAction.DisabledClass;\n\t\t});\n\t}\n\n\tprivate computeReloadState(runningExtensions: IExtensionDescription[], installed: IExtension): void {\n\t\tconst isUninstalled = this.extension.state === ExtensionState.Uninstalled;\n\t\tconst isDisabled = this.extension.local ? !this.extensionEnablementService.isEnabled(this.extension.local) : false;\n\t\tconst isEnabled = this.extension.local ? this.extensionEnablementService.isEnabled(this.extension.local) : false;\n\t\tconst runningExtension = runningExtensions.filter(e => areSameExtensions({ id: e.identifier.value }, this.extension.identifier))[0];\n\n\t\tif (installed && installed.local) {\n\t\t\tif (runningExtension) {\n\t\t\t\tconst isDifferentVersionRunning = this.extension.version !== runningExtension.version;\n\t\t\t\tif (isDifferentVersionRunning && !isDisabled) {\n\t\t\t\t\tif (!(this.extension.local && this.extensionService.canAddExtension(toExtensionDescription(this.extension.local)))) {\n\t\t\t\t\t\t// Requires reload to run the updated extension\n\t\t\t\t\t\tthis.enabled = true;\n\t\t\t\t\t\tthis.label = localize('reloadRequired', \"Reload Required\");\n\t\t\t\t\t\tthis.tooltip = localize('postUpdateTooltip', \"Please reload Visual Studio Code to complete the updating of this extension.\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isDisabled) {\n\t\t\t\t\t// Requires reload to disable the extension\n\t\t\t\t\tthis.enabled = true;\n\t\t\t\t\tthis.label = localize('reloadRequired', \"Reload Required\");\n\t\t\t\t\tthis.tooltip = localize('postDisableTooltip', \"Please reload Visual Studio Code to complete the disabling of this extension.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!isDisabled && !(this.extension.local && this.extensionService.canAddExtension(toExtensionDescription(this.extension.local)))) {\n\t\t\t\t\tthis.enabled = true;\n\t\t\t\t\tif (isEnabled) {\n\t\t\t\t\t\tthis.label = localize('reloadRequired', \"Reload Required\");\n\t\t\t\t\t\tthis.tooltip = localize('postEnableTooltip', \"Please reload Visual Studio Code to complete the enabling of this extension.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.label = localize('reloadRequired', \"Reload Required\");\n\t\t\t\t\t\tthis.tooltip = localize('postInstallTooltip', \"Please reload Visual Studio Code to complete the installation of this extension.\");\n\t\t\t\t\t\talert(localize('installExtensionComplete', \"Installing extension {0} is completed. Please reload Visual Studio Code to enable it.\", this.extension.displayName));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (isUninstalled && runningExtension) {\n\t\t\t// Requires reload to deactivate the extension\n\t\t\tthis.enabled = true;\n\t\t\tthis.label = localize('reloadRequired', \"Reload Required\");\n\t\t\tthis.tooltip = localize('postUninstallTooltip', \"Please reload Visual Studio Code to complete the uninstallation of this extension.\");\n\t\t\talert(localize('uninstallExtensionComplete', \"Please reload Visual Studio Code to complete the uninstallation of the extension {0}.\", this.extension.displayName));\n\t\t\treturn;\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve(this.windowService.reloadWindow());\n\t}\n\n\tdispose(): void {\n\t\tdispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class SetColorThemeAction extends ExtensionAction {\n\n\tstatic getColorThemes(colorThemes: IColorTheme[], extension: IExtension): IColorTheme[] {\n\t\treturn colorThemes.filter(c => c.extensionData && ExtensionIdentifier.equals(c.extensionData.extensionId, extension.identifier.id));\n\t}\n\n\tprivate static readonly EnabledClass = 'extension-action theme';\n\tprivate static readonly DisabledClass = `${SetColorThemeAction.EnabledClass} disabled`;\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate readonly colorThemes: IColorTheme[],\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(`extensions.colorTheme`, localize('color theme', \"Set Color Theme\"), SetColorThemeAction.DisabledClass, false);\n\t\tEvent.any<any>(extensionService.onDidChangeExtensions, workbenchThemeService.onDidColorThemeChange)(() => this.update(), this, this.disposables);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension) {\n\t\t\tconst isInstalled = this.extension.state === ExtensionState.Installed;\n\t\t\tif (isInstalled) {\n\t\t\t\tconst extensionThemes = SetColorThemeAction.getColorThemes(this.colorThemes, this.extension);\n\t\t\t\tthis.enabled = extensionThemes.length > 0;\n\t\t\t}\n\t\t}\n\t\tthis.class = this.enabled ? SetColorThemeAction.EnabledClass : SetColorThemeAction.DisabledClass;\n\t}\n\n\tasync run({ showCurrentTheme, ignoreFocusLost }: { showCurrentTheme: boolean, ignoreFocusLost: boolean } = { showCurrentTheme: false, ignoreFocusLost: false }): Promise<any> {\n\t\tthis.update();\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tlet extensionThemes = SetColorThemeAction.getColorThemes(this.colorThemes, this.extension);\n\t\tconst currentTheme = this.colorThemes.filter(t => t.settingsId === this.configurationService.getValue(COLOR_THEME_SETTING))[0];\n\t\tshowCurrentTheme = showCurrentTheme || extensionThemes.some(t => t.id === currentTheme.id);\n\t\tif (showCurrentTheme) {\n\t\t\textensionThemes = extensionThemes.filter(t => t.id !== currentTheme.id);\n\t\t}\n\n\t\tconst delayer = new Delayer<any>(100);\n\t\tconst picks: (IQuickPickItem | IQuickPickSeparator)[] = [];\n\t\tpicks.push(...extensionThemes.map(theme => (<IQuickPickItem>{ label: theme.label, id: theme.id })));\n\t\tif (showCurrentTheme) {\n\t\t\tpicks.push(<IQuickPickSeparator>{ type: 'separator', label: localize('current', \"Current\") });\n\t\t\tpicks.push(<IQuickPickItem>{ label: currentTheme.label, id: currentTheme.id });\n\t\t}\n\t\tconst pickedTheme = await this.quickInputService.pick(\n\t\t\tpicks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('select color theme', \"Select Color Theme\"),\n\t\t\t\tonDidFocus: item => delayer.trigger(() => this.workbenchThemeService.setColorTheme(item.id, undefined)),\n\t\t\t\tignoreFocusLost\n\t\t\t});\n\t\tlet confValue = this.configurationService.inspect(COLOR_THEME_SETTING);\n\t\tconst target = typeof confValue.workspace !== 'undefined' ? ConfigurationTarget.WORKSPACE : ConfigurationTarget.USER;\n\t\treturn this.workbenchThemeService.setColorTheme(pickedTheme ? pickedTheme.id : currentTheme.id, target);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class SetFileIconThemeAction extends ExtensionAction {\n\n\tprivate static readonly EnabledClass = 'extension-action theme';\n\tprivate static readonly DisabledClass = `${SetFileIconThemeAction.EnabledClass} disabled`;\n\n\tprivate disposables: IDisposable[] = [];\n\n\tstatic getFileIconThemes(fileIconThemes: IFileIconTheme[], extension: IExtension): IFileIconTheme[] {\n\t\treturn fileIconThemes.filter(c => c.extensionData && ExtensionIdentifier.equals(c.extensionData.extensionId, extension.identifier.id));\n\t}\n\n\tconstructor(\n\t\tprivate readonly fileIconThemes: IFileIconTheme[],\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(`extensions.fileIconTheme`, localize('file icon theme', \"Set File Icon Theme\"), SetFileIconThemeAction.DisabledClass, false);\n\t\tEvent.any<any>(extensionService.onDidChangeExtensions, workbenchThemeService.onDidFileIconThemeChange)(() => this.update(), this, this.disposables);\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tthis.enabled = false;\n\t\tif (this.extension) {\n\t\t\tconst isInstalled = this.extension.state === ExtensionState.Installed;\n\t\t\tif (isInstalled) {\n\t\t\t\tconst extensionThemes = SetFileIconThemeAction.getFileIconThemes(this.fileIconThemes, this.extension);\n\t\t\t\tthis.enabled = extensionThemes.length > 0;\n\t\t\t}\n\t\t}\n\t\tthis.class = this.enabled ? SetFileIconThemeAction.EnabledClass : SetFileIconThemeAction.DisabledClass;\n\t}\n\n\tasync run({ showCurrentTheme, ignoreFocusLost }: { showCurrentTheme: boolean, ignoreFocusLost: boolean } = { showCurrentTheme: false, ignoreFocusLost: false }): Promise<any> {\n\t\tawait this.update();\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\t\tlet extensionThemes = SetFileIconThemeAction.getFileIconThemes(this.fileIconThemes, this.extension);\n\t\tconst currentTheme = this.fileIconThemes.filter(t => t.settingsId === this.configurationService.getValue(ICON_THEME_SETTING))[0] || this.workbenchThemeService.getFileIconTheme();\n\t\tshowCurrentTheme = showCurrentTheme || extensionThemes.some(t => t.id === currentTheme.id);\n\t\tif (showCurrentTheme) {\n\t\t\textensionThemes = extensionThemes.filter(t => t.id !== currentTheme.id);\n\t\t}\n\n\t\tconst delayer = new Delayer<any>(100);\n\t\tconst picks: (IQuickPickItem | IQuickPickSeparator)[] = [];\n\t\tpicks.push(...extensionThemes.map(theme => (<IQuickPickItem>{ label: theme.label, id: theme.id })));\n\t\tif (showCurrentTheme && currentTheme.label) {\n\t\t\tpicks.push(<IQuickPickSeparator>{ type: 'separator', label: localize('current', \"Current\") });\n\t\t\tpicks.push(<IQuickPickItem>{ label: currentTheme.label, id: currentTheme.id });\n\t\t}\n\t\tconst pickedTheme = await this.quickInputService.pick(\n\t\t\tpicks,\n\t\t\t{\n\t\t\t\tplaceHolder: localize('select file icon theme', \"Select File Icon Theme\"),\n\t\t\t\tonDidFocus: item => delayer.trigger(() => this.workbenchThemeService.setFileIconTheme(item.id, undefined)),\n\t\t\t\tignoreFocusLost\n\t\t\t});\n\t\tlet confValue = this.configurationService.inspect(ICON_THEME_SETTING);\n\t\tconst target = typeof confValue.workspace !== 'undefined' ? ConfigurationTarget.WORKSPACE : ConfigurationTarget.USER;\n\t\treturn this.workbenchThemeService.setFileIconTheme(pickedTheme ? pickedTheme.id : currentTheme.id, target);\n\t}\n\n\tdispose() {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class OpenExtensionsViewletAction extends ShowViewletAction {\n\n\tstatic ID = VIEWLET_ID;\n\tstatic LABEL = localize('toggleExtensionsViewlet', \"Show Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label, VIEWLET_ID, viewletService, editorGroupService, layoutService);\n\t}\n}\n\nexport class InstallExtensionsAction extends OpenExtensionsViewletAction {\n\tstatic ID = 'workbench.extensions.action.installExtensions';\n\tstatic LABEL = localize('installExtensions', \"Install Extensions\");\n}\n\nexport class ShowEnabledExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showEnabledExtensions';\n\tstatic LABEL = localize('showEnabledExtensions', 'Show Enabled Extensions');\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@enabled ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowInstalledExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showInstalledExtensions';\n\tstatic LABEL = localize('showInstalledExtensions', \"Show Installed Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@installed ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowDisabledExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showDisabledExtensions';\n\tstatic LABEL = localize('showDisabledExtensions', \"Show Disabled Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, 'null', true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@disabled ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ClearExtensionsInputAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.clearExtensionsInput';\n\tstatic LABEL = localize('clearExtensionsInput', \"Clear Extensions Input\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tonSearchChange: Event<string>,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, 'clear-extensions', true);\n\t\tthis.enabled = false;\n\t\tonSearchChange(this.onSearchChange, this, this.disposables);\n\t}\n\n\tprivate onSearchChange(value: string): void {\n\t\tthis.enabled = !!value;\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class ShowBuiltInExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.listBuiltInExtensions';\n\tstatic LABEL = localize('showBuiltInExtensions', \"Show Built-in Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@builtin ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowOutdatedExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.listOutdatedExtensions';\n\tstatic LABEL = localize('showOutdatedExtensions', \"Show Outdated Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@outdated ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowPopularExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showPopularExtensions';\n\tstatic LABEL = localize('showPopularExtensions', \"Show Popular Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@sort:installs ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowRecommendedExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showRecommendedExtensions';\n\tstatic LABEL = localize('showRecommendedExtensions', \"Show Recommended Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@recommended ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class InstallWorkspaceRecommendedExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.installWorkspaceRecommendedExtensions';\n\tstatic LABEL = localize('installWorkspaceRecommendedExtensions', \"Install All Workspace Recommended Extensions\");\n\n\tprivate _recommendations: IExtensionRecommendation[] = [];\n\tget recommendations(): IExtensionRecommendation[] { return this._recommendations; }\n\tset recommendations(recommendations: IExtensionRecommendation[]) { this._recommendations = recommendations; this.enabled = this._recommendations.length > 0; }\n\n\tconstructor(\n\t\tid: string = InstallWorkspaceRecommendedExtensionsAction.ID,\n\t\tlabel: string = InstallWorkspaceRecommendedExtensionsAction.LABEL,\n\t\trecommendations: IExtensionRecommendation[],\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IExtensionsWorkbenchService private readonly extensionWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper(id, label, 'extension-action');\n\t\tthis.recommendations = recommendations;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@recommended ');\n\t\t\t\tviewlet.focus();\n\t\t\t\tconst names = this.recommendations.map(({ extensionId }) => extensionId);\n\t\t\t\treturn this.extensionWorkbenchService.queryGallery({ names, source: 'install-all-workspace-recommendations' }, CancellationToken.None).then(pager => {\n\t\t\t\t\tlet installPromises: Promise<any>[] = [];\n\t\t\t\t\tlet model = new PagedModel(pager);\n\t\t\t\t\tfor (let i = 0; i < pager.total; i++) {\n\t\t\t\t\t\tinstallPromises.push(model.resolve(i, CancellationToken.None).then(e => {\n\t\t\t\t\t\t\treturn this.extensionWorkbenchService.install(e).then(undefined, err => {\n\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\treturn promptDownloadManually(e.gallery, localize('failedToInstall', \"Failed to install \\'{0}\\'.\", e.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.all(installPromises);\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nexport class InstallRecommendedExtensionAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.installRecommendedExtension';\n\tstatic LABEL = localize('installRecommendedExtension', \"Install Recommended Extension\");\n\n\tprivate extensionId: string;\n\n\tconstructor(\n\t\textensionId: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IExtensionsWorkbenchService private readonly extensionWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper(InstallRecommendedExtensionAction.ID, InstallRecommendedExtensionAction.LABEL, undefined, false);\n\t\tthis.extensionId = extensionId;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@recommended ');\n\t\t\t\tviewlet.focus();\n\t\t\t\treturn this.extensionWorkbenchService.queryGallery({ names: [this.extensionId], source: 'install-recommendation', pageSize: 1 }, CancellationToken.None)\n\t\t\t\t\t.then(pager => {\n\t\t\t\t\t\tif (pager && pager.firstPage && pager.firstPage.length) {\n\t\t\t\t\t\t\tconst extension = pager.firstPage[0];\n\t\t\t\t\t\t\treturn this.extensionWorkbenchService.install(extension)\n\t\t\t\t\t\t\t\t.then(() => null, err => {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t\treturn promptDownloadManually(extension.gallery, localize('failedToInstall', \"Failed to install \\'{0}\\'.\", extension.identifier.id), err, this.instantiationService, this.notificationService, this.openerService);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nexport class IgnoreExtensionRecommendationAction extends Action {\n\n\tstatic readonly ID = 'extensions.ignore';\n\n\tprivate static readonly Class = 'extension-action ignore';\n\n\tprivate disposables: IDisposable[] = [];\n\textension: IExtension;\n\n\tconstructor(\n\t\t@IExtensionTipsService private readonly extensionsTipsService: IExtensionTipsService,\n\t) {\n\t\tsuper(IgnoreExtensionRecommendationAction.ID, 'Ignore Recommendation');\n\n\t\tthis.class = IgnoreExtensionRecommendationAction.Class;\n\t\tthis.tooltip = localize('ignoreExtensionRecommendation', \"Do not recommend this extension again\");\n\t\tthis.enabled = true;\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tthis.extensionsTipsService.toggleIgnoredRecommendation(this.extension.identifier.id, true);\n\t\treturn Promise.resolve();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class UndoIgnoreExtensionRecommendationAction extends Action {\n\n\tstatic readonly ID = 'extensions.ignore';\n\n\tprivate static readonly Class = 'extension-action undo-ignore';\n\n\tprivate disposables: IDisposable[] = [];\n\textension: IExtension;\n\n\tconstructor(\n\t\t@IExtensionTipsService private readonly extensionsTipsService: IExtensionTipsService,\n\t) {\n\t\tsuper(UndoIgnoreExtensionRecommendationAction.ID, 'Undo');\n\n\t\tthis.class = UndoIgnoreExtensionRecommendationAction.Class;\n\t\tthis.tooltip = localize('undo', \"Undo\");\n\t\tthis.enabled = true;\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tthis.extensionsTipsService.toggleIgnoredRecommendation(this.extension.identifier.id, false);\n\t\treturn Promise.resolve();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\n\nexport class ShowRecommendedKeymapExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showRecommendedKeymapExtensions';\n\tstatic SHORT_LABEL = localize('showRecommendedKeymapExtensionsShort', \"Keymaps\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@recommended:keymaps ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowLanguageExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showLanguageExtensions';\n\tstatic SHORT_LABEL = localize('showLanguageExtensionsShort', \"Language Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@category:\"programming languages\" @sort:installs ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ShowAzureExtensionsAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.showAzureExtensions';\n\tstatic SHORT_LABEL = localize('showAzureExtensionsShort', \"Azure Extensions\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search('@sort:installs azure ');\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ChangeSortAction extends Action {\n\n\tprivate query: Query;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tonSearchChange: Event<string>,\n\t\tprivate sortBy: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\n\t\tif (sortBy === undefined) {\n\t\t\tthrow new Error('bad arguments');\n\t\t}\n\n\t\tthis.query = Query.parse('');\n\t\tthis.enabled = false;\n\t\tonSearchChange(this.onSearchChange, this, this.disposables);\n\t}\n\n\tprivate onSearchChange(value: string): void {\n\t\tconst query = Query.parse(value);\n\t\tthis.query = new Query(query.value, this.sortBy || query.sortBy, query.groupBy);\n\t\tthis.enabled = !!value && this.query.isValid() && !this.query.equals(query);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t\t.then(viewlet => {\n\t\t\t\tviewlet.search(this.query.toString());\n\t\t\t\tviewlet.focus();\n\t\t\t});\n\t}\n}\n\nexport class ConfigureRecommendedExtensionsCommandsContributor extends Disposable implements IWorkbenchContribution {\n\n\tprivate workspaceContextKey = new RawContextKey<boolean>('workspaceRecommendations', true);\n\tprivate workspaceFolderContextKey = new RawContextKey<boolean>('workspaceFolderRecommendations', true);\n\tprivate addToWorkspaceRecommendationsContextKey = new RawContextKey<boolean>('addToWorkspaceRecommendations', false);\n\tprivate addToWorkspaceFolderRecommendationsContextKey = new RawContextKey<boolean>('addToWorkspaceFolderRecommendations', false);\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService\n\t) {\n\t\tsuper();\n\t\tconst boundWorkspaceContextKey = this.workspaceContextKey.bindTo(contextKeyService);\n\t\tboundWorkspaceContextKey.set(workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE);\n\t\tthis._register(workspaceContextService.onDidChangeWorkbenchState(() => boundWorkspaceContextKey.set(workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE)));\n\n\t\tconst boundWorkspaceFolderContextKey = this.workspaceFolderContextKey.bindTo(contextKeyService);\n\t\tboundWorkspaceFolderContextKey.set(workspaceContextService.getWorkspace().folders.length > 0);\n\t\tthis._register(workspaceContextService.onDidChangeWorkspaceFolders(() => boundWorkspaceFolderContextKey.set(workspaceContextService.getWorkspace().folders.length > 0)));\n\n\t\tconst boundAddToWorkspaceRecommendationsContextKey = this.addToWorkspaceRecommendationsContextKey.bindTo(contextKeyService);\n\t\tboundAddToWorkspaceRecommendationsContextKey.set(editorService.activeEditor instanceof ExtensionsInput && workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE);\n\t\tthis._register(editorService.onDidActiveEditorChange(() => boundAddToWorkspaceRecommendationsContextKey.set(\n\t\t\teditorService.activeEditor instanceof ExtensionsInput && workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE)));\n\t\tthis._register(workspaceContextService.onDidChangeWorkbenchState(() => boundAddToWorkspaceRecommendationsContextKey.set(\n\t\t\teditorService.activeEditor instanceof ExtensionsInput && workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE)));\n\n\t\tconst boundAddToWorkspaceFolderRecommendationsContextKey = this.addToWorkspaceFolderRecommendationsContextKey.bindTo(contextKeyService);\n\t\tboundAddToWorkspaceFolderRecommendationsContextKey.set(editorService.activeEditor instanceof ExtensionsInput);\n\t\tthis._register(editorService.onDidActiveEditorChange(() => boundAddToWorkspaceFolderRecommendationsContextKey.set(editorService.activeEditor instanceof ExtensionsInput)));\n\n\t\tthis.registerCommands();\n\t}\n\n\tprivate registerCommands(): void {\n\t\tCommandsRegistry.registerCommand(ConfigureWorkspaceRecommendedExtensionsAction.ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService).createInstance(ConfigureWorkspaceRecommendedExtensionsAction, ConfigureWorkspaceRecommendedExtensionsAction.ID, ConfigureWorkspaceRecommendedExtensionsAction.LABEL).run();\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: ConfigureWorkspaceRecommendedExtensionsAction.ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${ConfigureWorkspaceRecommendedExtensionsAction.LABEL}`, original: 'Extensions: Configure Recommended Extensions (Workspace)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.workspaceContextKey\n\t\t});\n\n\t\tCommandsRegistry.registerCommand(ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService).createInstance(ConfigureWorkspaceFolderRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL).run();\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: ConfigureWorkspaceFolderRecommendedExtensionsAction.ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL}`, original: 'Extensions: Configure Recommended Extensions (Workspace Folder)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.workspaceFolderContextKey\n\t\t});\n\n\t\tCommandsRegistry.registerCommand(AddToWorkspaceRecommendationsAction.ADD_ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService)\n\t\t\t\t.createInstance(AddToWorkspaceRecommendationsAction, AddToWorkspaceRecommendationsAction.ADD_ID, AddToWorkspaceRecommendationsAction.ADD_LABEL)\n\t\t\t\t.run(AddToWorkspaceRecommendationsAction.ADD);\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: AddToWorkspaceRecommendationsAction.ADD_ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${AddToWorkspaceRecommendationsAction.ADD_LABEL}`, original: 'Extensions: Add to Recommended Extensions (Workspace)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.addToWorkspaceRecommendationsContextKey\n\t\t});\n\n\t\tCommandsRegistry.registerCommand(AddToWorkspaceFolderRecommendationsAction.ADD_ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService)\n\t\t\t\t.createInstance(AddToWorkspaceFolderRecommendationsAction, AddToWorkspaceFolderRecommendationsAction.ADD_ID, AddToWorkspaceFolderRecommendationsAction.ADD_LABEL)\n\t\t\t\t.run(AddToWorkspaceRecommendationsAction.ADD);\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: AddToWorkspaceFolderRecommendationsAction.ADD_ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${AddToWorkspaceFolderRecommendationsAction.ADD_LABEL}`, original: 'Extensions: Add to Recommended Extensions (Workspace Folder)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.addToWorkspaceFolderRecommendationsContextKey\n\t\t});\n\n\t\tCommandsRegistry.registerCommand(AddToWorkspaceRecommendationsAction.IGNORE_ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService)\n\t\t\t\t.createInstance(AddToWorkspaceRecommendationsAction, AddToWorkspaceRecommendationsAction.IGNORE_ID, AddToWorkspaceRecommendationsAction.IGNORE_LABEL)\n\t\t\t\t.run(AddToWorkspaceRecommendationsAction.IGNORE);\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: AddToWorkspaceRecommendationsAction.IGNORE_ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${AddToWorkspaceRecommendationsAction.IGNORE_LABEL}`, original: 'Extensions: Ignore Recommended Extension (Workspace)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.addToWorkspaceRecommendationsContextKey\n\t\t});\n\n\t\tCommandsRegistry.registerCommand(AddToWorkspaceFolderRecommendationsAction.IGNORE_ID, serviceAccessor => {\n\t\t\tserviceAccessor.get(IInstantiationService)\n\t\t\t\t.createInstance(AddToWorkspaceFolderRecommendationsAction, AddToWorkspaceFolderRecommendationsAction.IGNORE_ID, AddToWorkspaceFolderRecommendationsAction.IGNORE_LABEL)\n\t\t\t\t.run(AddToWorkspaceRecommendationsAction.IGNORE);\n\t\t});\n\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\tcommand: {\n\t\t\t\tid: AddToWorkspaceFolderRecommendationsAction.IGNORE_ID,\n\t\t\t\ttitle: { value: `${ExtensionsLabel}: ${AddToWorkspaceFolderRecommendationsAction.IGNORE_LABEL}`, original: 'Extensions: Ignore Recommended Extension (Workspace Folder)' },\n\t\t\t\tcategory: localize('extensions', \"Extensions\")\n\t\t\t},\n\t\t\twhen: this.addToWorkspaceFolderRecommendationsContextKey\n\t\t});\n\t}\n}\n\nexport abstract class AbstractConfigureRecommendedExtensionsAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IEditorService protected editorService: IEditorService,\n\t\t@IJSONEditingService private readonly jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprotected openExtensionsFile(extensionsFileResource: URI): Promise<any> {\n\t\treturn this.getOrCreateExtensionsFile(extensionsFileResource)\n\t\t\t.then(({ created, content }) =>\n\t\t\t\tthis.getSelectionPosition(content, extensionsFileResource, ['recommendations'])\n\t\t\t\t\t.then(selection => this.editorService.openEditor({\n\t\t\t\t\t\tresource: extensionsFileResource,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tpinned: created,\n\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t}\n\t\t\t\t\t})),\n\t\t\t\terror => Promise.reject(new Error(localize('OpenExtensionsFile.failed', \"Unable to create 'extensions.json' file inside the '.vscode' folder ({0}).\", error))));\n\t}\n\n\tprotected openWorkspaceConfigurationFile(workspaceConfigurationFile: URI): Promise<any> {\n\t\treturn this.getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile)\n\t\t\t.then(content => this.getSelectionPosition(content.value, content.resource, ['extensions', 'recommendations']))\n\t\t\t.then(selection => this.editorService.openEditor({\n\t\t\t\tresource: workspaceConfigurationFile,\n\t\t\t\toptions: {\n\t\t\t\t\tselection,\n\t\t\t\t\tforceReload: true // because content has changed\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tprotected addExtensionToWorkspaceConfig(workspaceConfigurationFile: URI, extensionId: string, shouldRecommend: boolean) {\n\t\treturn this.getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile)\n\t\t\t.then(content => {\n\t\t\t\tconst extensionIdLowerCase = extensionId.toLowerCase();\n\t\t\t\tconst workspaceExtensionsConfigContent: IExtensionsConfigContent = (json.parse(content.value) || {})['extensions'] || {};\n\t\t\t\tlet insertInto = shouldRecommend ? workspaceExtensionsConfigContent.recommendations || [] : workspaceExtensionsConfigContent.unwantedRecommendations || [];\n\t\t\t\tlet removeFrom = shouldRecommend ? workspaceExtensionsConfigContent.unwantedRecommendations || [] : workspaceExtensionsConfigContent.recommendations || [];\n\n\t\t\t\tif (insertInto.some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tinsertInto.push(extensionId);\n\t\t\t\tremoveFrom = removeFrom.filter(x => x.toLowerCase() !== extensionIdLowerCase);\n\n\t\t\t\treturn this.jsonEditingService.write(workspaceConfigurationFile,\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'extensions',\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\trecommendations: shouldRecommend ? insertInto : removeFrom,\n\t\t\t\t\t\t\tunwantedRecommendations: shouldRecommend ? removeFrom : insertInto\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttrue);\n\t\t\t});\n\t}\n\n\tprotected addExtensionToWorkspaceFolderConfig(extensionsFileResource: URI, extensionId: string, shouldRecommend: boolean): Promise<any> {\n\t\treturn this.getOrCreateExtensionsFile(extensionsFileResource)\n\t\t\t.then(({ content }) => {\n\t\t\t\tconst extensionIdLowerCase = extensionId.toLowerCase();\n\t\t\t\tconst extensionsConfigContent: IExtensionsConfigContent = json.parse(content) || {};\n\t\t\t\tlet insertInto = shouldRecommend ? extensionsConfigContent.recommendations || [] : extensionsConfigContent.unwantedRecommendations || [];\n\t\t\t\tlet removeFrom = shouldRecommend ? extensionsConfigContent.unwantedRecommendations || [] : extensionsConfigContent.recommendations || [];\n\n\t\t\t\tif (insertInto.some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tinsertInto.push(extensionId);\n\n\t\t\t\tlet removeFromPromise: Promise<void> = Promise.resolve();\n\t\t\t\tif (removeFrom.some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\tremoveFrom = removeFrom.filter(x => x.toLowerCase() !== extensionIdLowerCase);\n\t\t\t\t\tremoveFromPromise = this.jsonEditingService.write(extensionsFileResource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: shouldRecommend ? 'unwantedRecommendations' : 'recommendations',\n\t\t\t\t\t\t\tvalue: removeFrom\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\treturn removeFromPromise.then(() =>\n\t\t\t\t\tthis.jsonEditingService.write(extensionsFileResource,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: shouldRecommend ? 'recommendations' : 'unwantedRecommendations',\n\t\t\t\t\t\t\tvalue: insertInto\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue)\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tprotected getWorkspaceExtensionsConfigContent(extensionsFileResource: URI): Promise<IExtensionsConfigContent> {\n\t\treturn Promise.resolve(this.fileService.resolveContent(extensionsFileResource))\n\t\t\t.then(content => {\n\t\t\t\treturn (json.parse(content.value) || {})['extensions'] || {};\n\t\t\t}, err => ({ recommendations: [], unwantedRecommendations: [] }));\n\t}\n\n\tprotected getWorkspaceFolderExtensionsConfigContent(extensionsFileResource: URI): Promise<IExtensionsConfigContent> {\n\t\treturn Promise.resolve(this.fileService.resolveContent(extensionsFileResource))\n\t\t\t.then(content => {\n\t\t\t\treturn (<IExtensionsConfigContent>json.parse(content.value));\n\t\t\t}, err => ({ recommendations: [], unwantedRecommendations: [] }));\n\t}\n\n\tprivate getOrUpdateWorkspaceConfigurationFile(workspaceConfigurationFile: URI): Promise<IContent> {\n\t\treturn Promise.resolve(this.fileService.resolveContent(workspaceConfigurationFile))\n\t\t\t.then(content => {\n\t\t\t\tconst workspaceRecommendations = <IExtensionsConfigContent>json.parse(content.value)['extensions'];\n\t\t\t\tif (!workspaceRecommendations || !workspaceRecommendations.recommendations) {\n\t\t\t\t\treturn this.jsonEditingService.write(workspaceConfigurationFile, { key: 'extensions', value: { recommendations: [] } }, true)\n\t\t\t\t\t\t.then(() => this.fileService.resolveContent(workspaceConfigurationFile));\n\t\t\t\t}\n\t\t\t\treturn content;\n\t\t\t});\n\t}\n\n\tprivate getSelectionPosition(content: string, resource: URI, path: json.JSONPath): Promise<ITextEditorSelection | undefined> {\n\t\tconst tree = json.parseTree(content);\n\t\tconst node = json.findNodeAtLocation(tree, path);\n\t\tif (node && node.parent && node.parent.children) {\n\t\t\tconst recommendationsValueNode = node.parent.children[1];\n\t\t\tconst lastExtensionNode = recommendationsValueNode.children && recommendationsValueNode.children.length ? recommendationsValueNode.children[recommendationsValueNode.children.length - 1] : null;\n\t\t\tconst offset = lastExtensionNode ? lastExtensionNode.offset + lastExtensionNode.length : recommendationsValueNode.offset + 1;\n\t\t\treturn Promise.resolve(this.textModelResolverService.createModelReference(resource))\n\t\t\t\t.then(reference => {\n\t\t\t\t\tconst position = reference.object.textEditorModel.getPositionAt(offset);\n\t\t\t\t\treference.dispose();\n\t\t\t\t\treturn <ITextEditorSelection>{\n\t\t\t\t\t\tstartLineNumber: position.lineNumber,\n\t\t\t\t\t\tstartColumn: position.column,\n\t\t\t\t\t\tendLineNumber: position.lineNumber,\n\t\t\t\t\t\tendColumn: position.column,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate getOrCreateExtensionsFile(extensionsFileResource: URI): Promise<{ created: boolean, extensionsFileResource: URI, content: string }> {\n\t\treturn Promise.resolve(this.fileService.resolveContent(extensionsFileResource)).then(content => {\n\t\t\treturn { created: false, extensionsFileResource, content: content.value };\n\t\t}, err => {\n\t\t\treturn this.fileService.updateContent(extensionsFileResource, ExtensionsConfigurationInitialContent).then(() => {\n\t\t\t\treturn { created: true, extensionsFileResource, content: ExtensionsConfigurationInitialContent };\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class ConfigureWorkspaceRecommendedExtensionsAction extends AbstractConfigureRecommendedExtensionsAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.configureWorkspaceRecommendedExtensions';\n\tstatic LABEL = localize('configureWorkspaceRecommendedExtensions', \"Configure Recommended Extensions (Workspace)\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService\n\t) {\n\t\tsuper(id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService);\n\t\tthis.contextService.onDidChangeWorkbenchState(() => this.update(), this, this.disposables);\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY;\n\t}\n\n\tpublic run(): Promise<void> {\n\t\tswitch (this.contextService.getWorkbenchState()) {\n\t\t\tcase WorkbenchState.FOLDER:\n\t\t\t\treturn this.openExtensionsFile(this.contextService.getWorkspace().folders[0].toResource(EXTENSIONS_CONFIG));\n\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\treturn this.openWorkspaceConfigurationFile(this.contextService.getWorkspace().configuration!);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class ConfigureWorkspaceFolderRecommendedExtensionsAction extends AbstractConfigureRecommendedExtensionsAction {\n\n\tstatic readonly ID = 'workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions';\n\tstatic LABEL = localize('configureWorkspaceFolderRecommendedExtensions', \"Configure Recommended Extensions (Workspace Folder)\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService);\n\t\tthis.contextService.onDidChangeWorkspaceFolders(() => this.update(), this, this.disposables);\n\t\tthis.update();\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.contextService.getWorkspace().folders.length > 0;\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst folderCount = this.contextService.getWorkspace().folders.length;\n\t\tconst pickFolderPromise = folderCount === 1 ? Promise.resolve(this.contextService.getWorkspace().folders[0]) : this.commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\treturn Promise.resolve(pickFolderPromise)\n\t\t\t.then(workspaceFolder => {\n\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\treturn this.openExtensionsFile(workspaceFolder.toResource(EXTENSIONS_CONFIG));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tsuper.dispose();\n\t}\n}\n\nexport class AddToWorkspaceFolderRecommendationsAction extends AbstractConfigureRecommendedExtensionsAction {\n\tstatic readonly ADD = true;\n\tstatic readonly IGNORE = false;\n\tstatic readonly ADD_ID = 'workbench.extensions.action.addToWorkspaceFolderRecommendations';\n\tstatic readonly ADD_LABEL = localize('addToWorkspaceFolderRecommendations', \"Add to Recommended Extensions (Workspace Folder)\");\n\tstatic readonly IGNORE_ID = 'workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations';\n\tstatic readonly IGNORE_LABEL = localize('addToWorkspaceFolderIgnoredRecommendations', \"Ignore Recommended Extension (Workspace Folder)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tsuper(id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService);\n\t}\n\n\trun(shouldRecommend: boolean): Promise<void> {\n\t\tif (!(this.editorService.activeEditor instanceof ExtensionsInput) || !this.editorService.activeEditor.extension) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst folders = this.contextService.getWorkspace().folders;\n\t\tif (!folders || !folders.length) {\n\t\t\tthis.notificationService.info(localize('AddToWorkspaceFolderRecommendations.noWorkspace', 'There are no workspace folders open to add recommendations.'));\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst extensionId = this.editorService.activeEditor.extension.identifier;\n\t\tconst pickFolderPromise = folders.length === 1\n\t\t\t? Promise.resolve(folders[0])\n\t\t\t: this.commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\treturn Promise.resolve(pickFolderPromise)\n\t\t\t.then(workspaceFolder => {\n\t\t\t\tif (!workspaceFolder) {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\tconst configurationFile = workspaceFolder.toResource(EXTENSIONS_CONFIG);\n\t\t\t\treturn this.getWorkspaceFolderExtensionsConfigContent(configurationFile).then(content => {\n\t\t\t\t\tconst extensionIdLowerCase = extensionId.id.toLowerCase();\n\t\t\t\t\tif (shouldRecommend) {\n\t\t\t\t\t\tif ((content.recommendations || []).some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\t\t\tthis.notificationService.info(localize('AddToWorkspaceFolderRecommendations.alreadyExists', 'This extension is already present in this workspace folder\\'s recommendations.'));\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.addExtensionToWorkspaceFolderConfig(configurationFile, extensionId.id, shouldRecommend).then(() => {\n\t\t\t\t\t\t\tthis.notificationService.prompt(Severity.Info,\n\t\t\t\t\t\t\t\tlocalize('AddToWorkspaceFolderRecommendations.success', 'The extension was successfully added to this workspace folder\\'s recommendations.'),\n\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\tlabel: localize('viewChanges', \"View Changes\"),\n\t\t\t\t\t\t\t\t\trun: () => this.openExtensionsFile(configurationFile)\n\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t}, err => {\n\t\t\t\t\t\t\tthis.notificationService.error(localize('AddToWorkspaceFolderRecommendations.failure', 'Failed to write to extensions.json. {0}', err));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((content.unwantedRecommendations || []).some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\t\t\tthis.notificationService.info(localize('AddToWorkspaceFolderIgnoredRecommendations.alreadyExists', 'This extension is already present in this workspace folder\\'s unwanted recommendations.'));\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.addExtensionToWorkspaceFolderConfig(configurationFile, extensionId.id, shouldRecommend).then(() => {\n\t\t\t\t\t\t\tthis.notificationService.prompt(Severity.Info,\n\t\t\t\t\t\t\t\tlocalize('AddToWorkspaceFolderIgnoredRecommendations.success', 'The extension was successfully added to this workspace folder\\'s unwanted recommendations.'),\n\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\tlabel: localize('viewChanges', \"View Changes\"),\n\t\t\t\t\t\t\t\t\trun: () => this.openExtensionsFile(configurationFile)\n\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t}, err => {\n\t\t\t\t\t\t\tthis.notificationService.error(localize('AddToWorkspaceFolderRecommendations.failure', 'Failed to write to extensions.json. {0}', err));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n\nexport class AddToWorkspaceRecommendationsAction extends AbstractConfigureRecommendedExtensionsAction {\n\tstatic readonly ADD = true;\n\tstatic readonly IGNORE = false;\n\tstatic readonly ADD_ID = 'workbench.extensions.action.addToWorkspaceRecommendations';\n\tstatic readonly ADD_LABEL = localize('addToWorkspaceRecommendations', \"Add to Recommended Extensions (Workspace)\");\n\tstatic readonly IGNORE_ID = 'workbench.extensions.action.addToWorkspaceIgnoredRecommendations';\n\tstatic readonly IGNORE_LABEL = localize('addToWorkspaceIgnoredRecommendations', \"Ignore Recommended Extension (Workspace)\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@INotificationService private readonly notificationService: INotificationService\n\t) {\n\t\tsuper(id, label, contextService, fileService, editorService, jsonEditingService, textModelResolverService);\n\t}\n\n\trun(shouldRecommend: boolean): Promise<void> {\n\t\tconst workspaceConfig = this.contextService.getWorkspace().configuration;\n\n\t\tif (!(this.editorService.activeEditor instanceof ExtensionsInput) || !this.editorService.activeEditor.extension || !workspaceConfig) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst extensionId = this.editorService.activeEditor.extension.identifier;\n\n\t\treturn this.getWorkspaceExtensionsConfigContent(workspaceConfig).then(content => {\n\t\t\tconst extensionIdLowerCase = extensionId.id.toLowerCase();\n\t\t\tif (shouldRecommend) {\n\t\t\t\tif ((content.recommendations || []).some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\tthis.notificationService.info(localize('AddToWorkspaceRecommendations.alreadyExists', 'This extension is already present in workspace recommendations.'));\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\n\t\t\t\treturn this.addExtensionToWorkspaceConfig(workspaceConfig, extensionId.id, shouldRecommend).then(() => {\n\t\t\t\t\tthis.notificationService.prompt(Severity.Info,\n\t\t\t\t\t\tlocalize('AddToWorkspaceRecommendations.success', 'The extension was successfully added to this workspace\\'s recommendations.'),\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: localize('viewChanges', \"View Changes\"),\n\t\t\t\t\t\t\trun: () => this.openWorkspaceConfigurationFile(workspaceConfig)\n\t\t\t\t\t\t}]);\n\n\t\t\t\t}, err => {\n\t\t\t\t\tthis.notificationService.error(localize('AddToWorkspaceRecommendations.failure', 'Failed to write. {0}', err));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif ((content.unwantedRecommendations || []).some(e => e.toLowerCase() === extensionIdLowerCase)) {\n\t\t\t\t\tthis.notificationService.info(localize('AddToWorkspaceUnwantedRecommendations.alreadyExists', 'This extension is already present in workspace unwanted recommendations.'));\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\n\t\t\t\treturn this.addExtensionToWorkspaceConfig(workspaceConfig, extensionId.id, shouldRecommend).then(() => {\n\t\t\t\t\tthis.notificationService.prompt(Severity.Info,\n\t\t\t\t\t\tlocalize('AddToWorkspaceUnwantedRecommendations.success', 'The extension was successfully added to this workspace\\'s unwanted recommendations.'),\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tlabel: localize('viewChanges', \"View Changes\"),\n\t\t\t\t\t\t\trun: () => this.openWorkspaceConfigurationFile(workspaceConfig)\n\t\t\t\t\t\t}]);\n\t\t\t\t}, err => {\n\t\t\t\t\tthis.notificationService.error(localize('AddToWorkspaceRecommendations.failure', 'Failed to write. {0}', err));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class StatusLabelAction extends Action implements IExtensionContainer {\n\n\tprivate static readonly ENABLED_CLASS = 'extension-status-label';\n\tprivate static readonly DISABLED_CLASS = `${StatusLabelAction.ENABLED_CLASS} hide`;\n\n\tprivate initialStatus: ExtensionState | null = null;\n\tprivate status: ExtensionState | null = null;\n\tprivate enablementState: EnablementState | null = null;\n\n\tprivate _extension: IExtension;\n\tget extension(): IExtension { return this._extension; }\n\tset extension(extension: IExtension) {\n\t\tif (!(this._extension && extension && areSameExtensions(this._extension.identifier, extension.identifier))) {\n\t\t\t// Different extension. Reset\n\t\t\tthis.initialStatus = null;\n\t\t\tthis.status = null;\n\t\t\tthis.enablementState = null;\n\t\t}\n\t\tthis._extension = extension;\n\t\tthis.update();\n\t}\n\n\tconstructor(\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper('extensions.action.statusLabel', '', StatusLabelAction.DISABLED_CLASS, false);\n\t}\n\n\tupdate(): void {\n\t\tthis.computeLabel()\n\t\t\t.then(label => {\n\t\t\t\tthis.label = label || '';\n\t\t\t\tthis.class = label ? StatusLabelAction.ENABLED_CLASS : StatusLabelAction.DISABLED_CLASS;\n\t\t\t});\n\t}\n\n\tprivate async computeLabel(): Promise<string | null> {\n\t\tif (!this.extension) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst currentStatus = this.status;\n\t\tconst currentEnablementState = this.enablementState;\n\t\tthis.status = this.extension.state;\n\t\tif (this.initialStatus === null) {\n\t\t\tthis.initialStatus = this.status;\n\t\t}\n\t\tthis.enablementState = this.extension.enablementState;\n\n\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\t\tconst canAddExtension = () => {\n\t\t\tconst runningExtension = runningExtensions.filter(e => areSameExtensions({ id: e.identifier.value }, this.extension.identifier))[0];\n\t\t\tif (this.extension.local) {\n\t\t\t\tif (runningExtension && this.extension.version === runningExtension.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn this.extensionService.canAddExtension(toExtensionDescription(this.extension.local));\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst canRemoveExtension = () => {\n\t\t\tif (this.extension.local) {\n\t\t\t\tif (runningExtensions.every(e => !areSameExtensions({ id: e.identifier.value }, this.extension.identifier))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn this.extensionService.canRemoveExtension(toExtensionDescription(this.extension.local));\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tif (currentStatus !== null) {\n\t\t\tif (currentStatus === ExtensionState.Installing && this.status === ExtensionState.Installed) {\n\t\t\t\treturn canAddExtension() ? this.initialStatus === ExtensionState.Installed ? localize('updated', \"Updated\") : localize('installed', \"Installed\") : null;\n\t\t\t}\n\t\t\tif (currentStatus === ExtensionState.Uninstalling && this.status === ExtensionState.Uninstalled) {\n\t\t\t\treturn canRemoveExtension() ? localize('uninstalled', \"Uninstalled\") : null;\n\t\t\t}\n\t\t}\n\n\t\tif (currentEnablementState !== null) {\n\t\t\tconst currentlyEnabled = currentEnablementState === EnablementState.Enabled || currentEnablementState === EnablementState.WorkspaceEnabled;\n\t\t\tconst enabled = this.enablementState === EnablementState.Enabled || this.enablementState === EnablementState.WorkspaceEnabled;\n\t\t\tif (!currentlyEnabled && enabled) {\n\t\t\t\treturn canAddExtension() ? localize('enabled', \"Enabled\") : null;\n\t\t\t}\n\t\t\tif (currentlyEnabled && !enabled) {\n\t\t\t\treturn canRemoveExtension() ? localize('disabled', \"Disabled\") : null;\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n\n}\n\nexport class MaliciousStatusLabelAction extends ExtensionAction {\n\n\tprivate static readonly Class = 'malicious-status';\n\n\tconstructor(long: boolean) {\n\t\tconst tooltip = localize('malicious tooltip', \"This extension was reported to be problematic.\");\n\t\tconst label = long ? tooltip : localize('malicious', \"Malicious\");\n\t\tsuper('extensions.install', label, '', false);\n\t\tthis.tooltip = localize('malicious tooltip', \"This extension was reported to be problematic.\");\n\t}\n\n\tupdate(): void {\n\t\tif (this.extension && this.extension.isMalicious) {\n\t\t\tthis.class = `${MaliciousStatusLabelAction.Class} malicious`;\n\t\t} else {\n\t\t\tthis.class = `${MaliciousStatusLabelAction.Class} not-malicious`;\n\t\t}\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class DisableAllAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.disableAll';\n\tstatic LABEL = localize('disableAll', \"Disable All Installed Extensions\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string = DisableAllAction.ID, label: string = DisableAllAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(id, label);\n\t\tthis.update();\n\t\tthis.disposables.push(this.extensionsWorkbenchService.onChange(() => this.update()));\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.extensionsWorkbenchService.local.some(e => e.type === ExtensionType.User && (e.enablementState === EnablementState.Enabled || e.enablementState === EnablementState.WorkspaceEnabled) && !!e.local && this.extensionEnablementService.canChangeEnablement(e.local));\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local.filter(e => e.type === ExtensionType.User), EnablementState.Disabled);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class DisableAllWorkpsaceAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.disableAllWorkspace';\n\tstatic LABEL = localize('disableAllWorkspace', \"Disable All Installed Extensions for this Workspace\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string = DisableAllWorkpsaceAction.ID, label: string = DisableAllWorkpsaceAction.LABEL,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService\n\t) {\n\t\tsuper(id, label);\n\t\tthis.update();\n\t\tthis.workspaceContextService.onDidChangeWorkbenchState(() => this.update(), this, this.disposables);\n\t\tthis.extensionsWorkbenchService.onChange(() => this.update(), this, this.disposables);\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY && this.extensionsWorkbenchService.local.some(e => e.type === ExtensionType.User && (e.enablementState === EnablementState.Enabled || e.enablementState === EnablementState.WorkspaceEnabled));\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local.filter(e => e.type === ExtensionType.User), EnablementState.WorkspaceDisabled);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class EnableAllAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.enableAll';\n\tstatic LABEL = localize('enableAll', \"Enable All Extensions\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string = EnableAllAction.ID, label: string = EnableAllAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(id, label);\n\t\tthis.update();\n\t\tthis.disposables.push(this.extensionsWorkbenchService.onChange(() => this.update()));\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.extensionsWorkbenchService.local.some(e => !!e.local && this.extensionEnablementService.canChangeEnablement(e.local) && (e.enablementState === EnablementState.Disabled || e.enablementState === EnablementState.WorkspaceDisabled));\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local, EnablementState.Enabled);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class EnableAllWorkpsaceAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.enableAllWorkspace';\n\tstatic LABEL = localize('enableAllWorkspace', \"Enable All Extensions for this Workspace\");\n\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tid: string = EnableAllWorkpsaceAction.ID, label: string = EnableAllWorkpsaceAction.LABEL,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionEnablementService private readonly extensionEnablementService: IExtensionEnablementService\n\t) {\n\t\tsuper(id, label);\n\t\tthis.update();\n\t\tthis.extensionsWorkbenchService.onChange(() => this.update(), this, this.disposables);\n\t\tthis.workspaceContextService.onDidChangeWorkbenchState(() => this.update(), this, this.disposables);\n\t}\n\n\tprivate update(): void {\n\t\tthis.enabled = this.workspaceContextService.getWorkbenchState() !== WorkbenchState.EMPTY && this.extensionsWorkbenchService.local.some(e => !!e.local && this.extensionEnablementService.canChangeEnablement(e.local) && (e.enablementState === EnablementState.Disabled || e.enablementState === EnablementState.WorkspaceDisabled));\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.extensionsWorkbenchService.setEnablement(this.extensionsWorkbenchService.local, EnablementState.WorkspaceEnabled);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport class OpenExtensionsFolderAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.openExtensionsFolder';\n\tstatic LABEL = localize('openExtensionsFolder', \"Open Extensions Folder\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWindowsService private readonly windowsService: IWindowsService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper(id, label, undefined, true);\n\t}\n\n\trun(): Promise<void> {\n\t\tconst extensionsHome = URI.file(this.environmentService.extensionsPath);\n\n\t\treturn Promise.resolve(this.fileService.resolveFile(extensionsHome)).then(file => {\n\t\t\tlet itemToShow: URI;\n\t\t\tif (file.children && file.children.length > 0) {\n\t\t\t\titemToShow = file.children[0].resource;\n\t\t\t} else {\n\t\t\t\titemToShow = extensionsHome;\n\t\t\t}\n\n\t\t\treturn this.windowsService.showItemInFolder(itemToShow);\n\t\t});\n\t}\n}\n\nexport class InstallVSIXAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.installVSIX';\n\tstatic LABEL = localize('installVSIX', \"Install from VSIX...\");\n\n\tconstructor(\n\t\tid = InstallVSIXAction.ID,\n\t\tlabel = InstallVSIXAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, label, 'extension-action install-vsix', true);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve(this.windowService.showOpenDialog({\n\t\t\ttitle: localize('installFromVSIX', \"Install from VSIX\"),\n\t\t\tfilters: [{ name: 'VSIX Extensions', extensions: ['vsix'] }],\n\t\t\tproperties: ['openFile'],\n\t\t\tbuttonLabel: mnemonicButtonLabel(localize({ key: 'installButton', comment: ['&& denotes a mnemonic'] }, \"&&Install\"))\n\t\t})).then(result => {\n\t\t\tif (!result) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn Promise.all(result.map(vsix => this.extensionsWorkbenchService.install(vsix)))\n\t\t\t\t.then(extensions => {\n\t\t\t\t\tfor (const extension of extensions) {\n\t\t\t\t\t\tconst requireReload = !(extension.local && this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n\t\t\t\t\t\tconst message = requireReload ? localize('InstallVSIXAction.successReload', \"Please reload Visual Studio Code to complete installing the extension {0}.\", extension.identifier.id)\n\t\t\t\t\t\t\t: localize('InstallVSIXAction.success', \"Installing the extension {0} is completed.\", extension.identifier.id);\n\t\t\t\t\t\tconst actions = requireReload ? [{\n\t\t\t\t\t\t\tlabel: localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n\t\t\t\t\t\t\trun: () => this.windowService.reloadWindow()\n\t\t\t\t\t\t}] : [];\n\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t{ sticky: true }\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run();\n\t\t\t\t});\n\t\t});\n\t}\n}\n\nexport class ReinstallAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.reinstall';\n\tstatic LABEL = localize('reinstall', \"Reinstall Extension...\");\n\n\tconstructor(\n\t\tid: string = ReinstallAction.ID, label: string = ReinstallAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this.extensionsWorkbenchService.local.filter(l => l.type === ExtensionType.User && l.local).length > 0;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn this.quickInputService.pick(this.getEntries(), { placeHolder: localize('selectExtensionToReinstall', \"Select Extension to Reinstall\") })\n\t\t\t.then(pick => pick && this.reinstallExtension(pick.extension));\n\t}\n\n\tprivate getEntries(): Promise<(IQuickPickItem & { extension: IExtension })[]> {\n\t\treturn this.extensionsWorkbenchService.queryLocal()\n\t\t\t.then(local => {\n\t\t\t\tconst entries = local\n\t\t\t\t\t.filter(extension => extension.type === ExtensionType.User)\n\t\t\t\t\t.map(extension => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\t\t\tlabel: extension.displayName,\n\t\t\t\t\t\t\tdescription: extension.identifier.id,\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t} as (IQuickPickItem & { extension: IExtension });\n\t\t\t\t\t});\n\t\t\t\treturn entries;\n\t\t\t});\n\t}\n\n\tprivate reinstallExtension(extension: IExtension): Promise<void> {\n\t\treturn this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run()\n\t\t\t.then(() => {\n\t\t\t\treturn this.extensionsWorkbenchService.reinstall(extension)\n\t\t\t\t\t.then(extension => {\n\t\t\t\t\t\tconst requireReload = !(extension.local && this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n\t\t\t\t\t\tconst message = requireReload ? localize('ReinstallAction.successReload', \"Please reload Visual Studio Code to complete reinstalling the extension {0}.\", extension.identifier.id)\n\t\t\t\t\t\t\t: localize('ReinstallAction.success', \"Reinstalling the extension {0} is completed.\", extension.identifier.id);\n\t\t\t\t\t\tconst actions = requireReload ? [{\n\t\t\t\t\t\t\tlabel: localize('InstallVSIXAction.reloadNow', \"Reload Now\"),\n\t\t\t\t\t\t\trun: () => this.windowService.reloadWindow()\n\t\t\t\t\t\t}] : [];\n\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t{ sticky: true }\n\t\t\t\t\t\t);\n\t\t\t\t\t}, error => this.notificationService.error(error));\n\t\t\t});\n\t}\n}\n\nexport class InstallSpecificVersionOfExtensionAction extends Action {\n\n\tstatic readonly ID = 'workbench.extensions.action.install.specificVersion';\n\tstatic LABEL = localize('install previous version', \"Install Specific Version of Extension...\");\n\n\tconstructor(\n\t\tid: string = InstallSpecificVersionOfExtensionAction.ID, label: string = InstallSpecificVersionOfExtensionAction.LABEL,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this.extensionsWorkbenchService.local.some(l => this.isEnabled(l));\n\t}\n\n\tasync run(): Promise<any> {\n\t\tconst extensionPick = await this.quickInputService.pick(this.getExtensionEntries(), { placeHolder: localize('selectExtension', \"Select Extension\"), matchOnDetail: true });\n\t\tif (extensionPick && extensionPick.extension) {\n\t\t\tconst versionPick = await this.quickInputService.pick(extensionPick.versions.map(v => ({ id: v.version, label: v.version, description: `${getRelativeDateLabel(new Date(Date.parse(v.date)))}${v.version === extensionPick.extension.version ? ` (${localize('current', \"Current\")})` : ''}` })), { placeHolder: localize('selectVersion', \"Select Version to Install\"), matchOnDetail: true });\n\t\t\tif (versionPick) {\n\t\t\t\tif (extensionPick.extension.version !== versionPick.id) {\n\t\t\t\t\tawait this.install(extensionPick.extension, versionPick.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isEnabled(extension: IExtension): boolean {\n\t\treturn !!extension.gallery && (extension.enablementState === EnablementState.Enabled || extension.enablementState === EnablementState.WorkspaceEnabled);\n\t}\n\n\tprivate async getExtensionEntries(): Promise<(IQuickPickItem & { extension: IExtension, versions: IGalleryExtensionVersion[] })[]> {\n\t\tconst installed = await this.extensionsWorkbenchService.queryLocal();\n\t\tconst versionsPromises: Promise<{ extension: IExtension, versions: IGalleryExtensionVersion[] } | null>[] = [];\n\t\tfor (const extension of installed) {\n\t\t\tif (this.isEnabled(extension)) {\n\t\t\t\tversionsPromises.push(this.extensionGalleryService.getAllVersions(extension.gallery!, true)\n\t\t\t\t\t.then(versions => (versions.length ? { extension, versions } : null)));\n\t\t\t}\n\t\t}\n\n\t\tconst extensions = await Promise.all(versionsPromises);\n\t\treturn coalesce(extensions)\n\t\t\t.sort((e1, e2) => e1.extension.displayName.localeCompare(e2.extension.displayName))\n\t\t\t.map(({ extension, versions }) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\tlabel: extension.displayName || extension.identifier.id,\n\t\t\t\t\tdescription: extension.identifier.id,\n\t\t\t\t\textension,\n\t\t\t\t\tversions\n\t\t\t\t} as (IQuickPickItem & { extension: IExtension, versions: IGalleryExtensionVersion[] });\n\t\t\t});\n\t}\n\n\tprivate install(extension: IExtension, version: string): Promise<void> {\n\t\treturn this.instantiationService.createInstance(ShowInstalledExtensionsAction, ShowInstalledExtensionsAction.ID, ShowInstalledExtensionsAction.LABEL).run()\n\t\t\t.then(() => {\n\t\t\t\treturn this.extensionsWorkbenchService.installVersion(extension, version)\n\t\t\t\t\t.then(extension => {\n\t\t\t\t\t\tconst requireReload = !(extension.local && this.extensionService.canAddExtension(toExtensionDescription(extension.local)));\n\t\t\t\t\t\tconst message = requireReload ? localize('InstallAnotherVersionExtensionAction.successReload', \"Please reload Visual Studio Code to complete installing the extension {0}.\", extension.identifier.id)\n\t\t\t\t\t\t\t: localize('InstallAnotherVersionExtensionAction.success', \"Installing the extension {0} is completed.\", extension.identifier.id);\n\t\t\t\t\t\tconst actions = requireReload ? [{\n\t\t\t\t\t\t\tlabel: localize('InstallAnotherVersionExtensionAction.reloadNow', \"Reload Now\"),\n\t\t\t\t\t\t\trun: () => this.windowService.reloadWindow()\n\t\t\t\t\t\t}] : [];\n\t\t\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\t\t\tSeverity.Info,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tactions,\n\t\t\t\t\t\t\t{ sticky: true }\n\t\t\t\t\t\t);\n\t\t\t\t\t}, error => this.notificationService.error(error));\n\t\t\t});\n\t}\n}\n\nCommandsRegistry.registerCommand('workbench.extensions.action.showExtensionsForLanguage', function (accessor: ServicesAccessor, fileExtension: string) {\n\tconst viewletService = accessor.get(IViewletService);\n\n\treturn viewletService.openViewlet(VIEWLET_ID, true)\n\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t.then(viewlet => {\n\t\t\tviewlet.search(`ext:${fileExtension.replace(/^\\./, '')}`);\n\t\t\tviewlet.focus();\n\t\t});\n});\n\nCommandsRegistry.registerCommand('workbench.extensions.action.showExtensionsWithIds', function (accessor: ServicesAccessor, extensionIds: string[]) {\n\tconst viewletService = accessor.get(IViewletService);\n\n\treturn viewletService.openViewlet(VIEWLET_ID, true)\n\t\t.then(viewlet => viewlet as IExtensionsViewlet)\n\t\t.then(viewlet => {\n\t\t\tconst query = extensionIds\n\t\t\t\t.map(id => `@id:${id}`)\n\t\t\t\t.join(' ');\n\t\t\tviewlet.search(query);\n\t\t\tviewlet.focus();\n\t\t});\n});\n\nexport const extensionButtonProminentBackground = registerColor('extensionButton.prominentBackground', {\n\tdark: '#327e36',\n\tlight: '#327e36',\n\thc: null\n}, localize('extensionButtonProminentBackground', \"Button background color for actions extension that stand out (e.g. install button).\"));\n\nexport const extensionButtonProminentForeground = registerColor('extensionButton.prominentForeground', {\n\tdark: Color.white,\n\tlight: Color.white,\n\thc: null\n}, localize('extensionButtonProminentForeground', \"Button foreground color for actions extension that stand out (e.g. install button).\"));\n\nexport const extensionButtonProminentHoverBackground = registerColor('extensionButton.prominentHoverBackground', {\n\tdark: '#28632b',\n\tlight: '#28632b',\n\thc: null\n}, localize('extensionButtonProminentHoverBackground', \"Button background hover color for actions extension that stand out (e.g. install button).\"));\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst foregroundColor = theme.getColor(foreground);\n\tif (foregroundColor) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action.built-in-status { border-color: ${foregroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action.built-in-status { border-color: ${foregroundColor}; }`);\n\t}\n\n\tconst buttonBackgroundColor = theme.getColor(buttonBackground);\n\tif (buttonBackgroundColor) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action { background-color: ${buttonBackgroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action { background-color: ${buttonBackgroundColor}; }`);\n\t}\n\n\tconst buttonForegroundColor = theme.getColor(buttonForeground);\n\tif (buttonForegroundColor) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action { color: ${buttonForegroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action { color: ${buttonForegroundColor}; }`);\n\t}\n\n\tconst buttonHoverBackgroundColor = theme.getColor(buttonHoverBackground);\n\tif (buttonHoverBackgroundColor) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item:hover .action-label.extension-action { background-color: ${buttonHoverBackgroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item:hover .action-label.extension-action { background-color: ${buttonHoverBackgroundColor}; }`);\n\t}\n\n\tconst contrastBorderColor = theme.getColor(contrastBorder);\n\tif (contrastBorderColor) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action { border: 1px solid ${contrastBorderColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action { border: 1px solid ${contrastBorderColor}; }`);\n\t}\n\n\tconst extensionButtonProminentBackgroundColor = theme.getColor(extensionButtonProminentBackground);\n\tif (extensionButtonProminentBackground) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action.prominent { background-color: ${extensionButtonProminentBackgroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action.prominent { background-color: ${extensionButtonProminentBackgroundColor}; }`);\n\t}\n\n\tconst extensionButtonProminentForegroundColor = theme.getColor(extensionButtonProminentForeground);\n\tif (extensionButtonProminentForeground) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item .action-label.extension-action.prominent { color: ${extensionButtonProminentForegroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item .action-label.extension-action.prominent { color: ${extensionButtonProminentForegroundColor}; }`);\n\t}\n\n\tconst extensionButtonProminentHoverBackgroundColor = theme.getColor(extensionButtonProminentHoverBackground);\n\tif (extensionButtonProminentHoverBackground) {\n\t\tcollector.addRule(`.extension .monaco-action-bar .action-item:hover .action-label.extension-action.prominent { background-color: ${extensionButtonProminentHoverBackgroundColor}; }`);\n\t\tcollector.addRule(`.extension-editor .monaco-action-bar .action-item:hover .action-label.extension-action.prominent { background-color: ${extensionButtonProminentHoverBackgroundColor}; }`);\n\t}\n});\n"]}]}