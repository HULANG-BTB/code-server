{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersModel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar markers_1 = require(\"vs/platform/markers/common/markers\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar map_1 = require(\"vs/base/common/map\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar event_1 = require(\"vs/base/common/event\");\nvar hash_1 = require(\"vs/base/common/hash\");\nvar types_1 = require(\"vs/base/common/types\");\nfunction compareUris(a, b) {\n    var astr = a.toString();\n    var bstr = b.toString();\n    return astr === bstr ? 0 : (astr < bstr ? -1 : 1);\n}\nfunction compareMarkersByUri(a, b) {\n    return compareUris(a.resource, b.resource);\n}\nexports.compareMarkersByUri = compareMarkersByUri;\nfunction compareResourceMarkers(a, b) {\n    var firstMarkerOfA = a.markers[0];\n    var firstMarkerOfB = b.markers[0];\n    var res = 0;\n    if (firstMarkerOfA && firstMarkerOfB) {\n        res = markers_1.MarkerSeverity.compare(firstMarkerOfA.marker.severity, firstMarkerOfB.marker.severity);\n    }\n    if (res === 0) {\n        res = a.path.localeCompare(b.path) || a.name.localeCompare(b.name);\n    }\n    return res;\n}\nfunction compareMarkers(a, b) {\n    return markers_1.MarkerSeverity.compare(a.marker.severity, b.marker.severity)\n        || range_1.Range.compareRangesUsingStarts(a.marker, b.marker);\n}\nvar ResourceMarkers = /** @class */ (function () {\n    function ResourceMarkers(resource, markers) {\n        this.resource = resource;\n        this.markers = markers;\n    }\n    Object.defineProperty(ResourceMarkers.prototype, \"path\", {\n        get: function () { return this.resource.fsPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceMarkers.prototype, \"name\", {\n        get: function () { return resources_1.basename(this.resource); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResourceMarkers.prototype, \"hash\", {\n        get: function () {\n            var hasher = new hash_1.Hasher();\n            hasher.hash(this.resource.toString());\n            return \"\" + hasher.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], ResourceMarkers.prototype, \"path\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], ResourceMarkers.prototype, \"name\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], ResourceMarkers.prototype, \"hash\", null);\n    return ResourceMarkers;\n}());\nexports.ResourceMarkers = ResourceMarkers;\nvar Marker = /** @class */ (function () {\n    function Marker(marker, relatedInformation) {\n        if (relatedInformation === void 0) { relatedInformation = []; }\n        this.marker = marker;\n        this.relatedInformation = relatedInformation;\n    }\n    Object.defineProperty(Marker.prototype, \"resource\", {\n        get: function () { return this.marker.resource; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Marker.prototype, \"range\", {\n        get: function () { return this.marker; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Marker.prototype, \"lines\", {\n        get: function () {\n            if (!this._lines) {\n                this._lines = this.marker.message.split(/\\r\\n|\\r|\\n/g);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Marker.prototype, \"hash\", {\n        get: function () {\n            return markers_1.IMarkerData.makeKey(this.marker);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Marker.prototype.toString = function () {\n        return JSON.stringify(tslib_1.__assign({}, this.marker, { resource: this.marker.resource.path, relatedInformation: this.relatedInformation.length ? this.relatedInformation.map(function (r) { return (tslib_1.__assign({}, r.raw, { resource: r.raw.resource.path })); }) : undefined }), null, '\\t');\n    };\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], Marker.prototype, \"hash\", null);\n    return Marker;\n}());\nexports.Marker = Marker;\nvar RelatedInformation = /** @class */ (function () {\n    function RelatedInformation(resource, marker, raw) {\n        this.resource = resource;\n        this.marker = marker;\n        this.raw = raw;\n    }\n    Object.defineProperty(RelatedInformation.prototype, \"hash\", {\n        get: function () {\n            var hasher = new hash_1.Hasher();\n            hasher.hash(this.resource.toString());\n            hasher.hash(this.marker.startLineNumber);\n            hasher.hash(this.marker.startColumn);\n            hasher.hash(this.marker.endLineNumber);\n            hasher.hash(this.marker.endColumn);\n            hasher.hash(this.raw.resource.toString());\n            hasher.hash(this.raw.startLineNumber);\n            hasher.hash(this.raw.startColumn);\n            hasher.hash(this.raw.endLineNumber);\n            hasher.hash(this.raw.endColumn);\n            return \"\" + hasher.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], RelatedInformation.prototype, \"hash\", null);\n    return RelatedInformation;\n}());\nexports.RelatedInformation = RelatedInformation;\nvar MarkersModel = /** @class */ (function () {\n    function MarkersModel() {\n        this.cachedSortedResources = undefined;\n        this._onDidChange = new event_1.Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.resourcesByUri = new Map();\n    }\n    Object.defineProperty(MarkersModel.prototype, \"resourceMarkers\", {\n        get: function () {\n            if (!this.cachedSortedResources) {\n                this.cachedSortedResources = map_1.values(this.resourcesByUri).sort(compareResourceMarkers);\n            }\n            return this.cachedSortedResources;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MarkersModel.prototype.getResourceMarkers = function (resource) {\n        return types_1.withUndefinedAsNull(this.resourcesByUri.get(resource.toString()));\n    };\n    MarkersModel.prototype.setResourceMarkers = function (resource, rawMarkers) {\n        if (arrays_1.isFalsyOrEmpty(rawMarkers)) {\n            this.resourcesByUri.delete(resource.toString());\n        }\n        else {\n            var markers = rawMarkers.map(function (rawMarker) {\n                var relatedInformation = undefined;\n                if (rawMarker.relatedInformation) {\n                    relatedInformation = rawMarker.relatedInformation.map(function (r) { return new RelatedInformation(resource, rawMarker, r); });\n                }\n                return new Marker(rawMarker, relatedInformation);\n            });\n            markers.sort(compareMarkers);\n            this.resourcesByUri.set(resource.toString(), new ResourceMarkers(resource, markers));\n        }\n        this.cachedSortedResources = undefined;\n        this._onDidChange.fire(resource);\n    };\n    MarkersModel.prototype.dispose = function () {\n        this._onDidChange.dispose();\n        this.resourcesByUri.clear();\n    };\n    return MarkersModel;\n}());\nexports.MarkersModel = MarkersModel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { IMarker, MarkerSeverity, IRelatedInformation, IMarkerData } from 'vs/platform/markers/common/markers';\nimport { isFalsyOrEmpty } from 'vs/base/common/arrays';\nimport { values } from 'vs/base/common/map';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Hasher } from 'vs/base/common/hash';\nimport { withUndefinedAsNull } from 'vs/base/common/types';\n\nfunction compareUris(a: URI, b: URI) {\n\tconst astr = a.toString();\n\tconst bstr = b.toString();\n\treturn astr === bstr ? 0 : (astr < bstr ? -1 : 1);\n}\n\nexport function compareMarkersByUri(a: IMarker, b: IMarker) {\n\treturn compareUris(a.resource, b.resource);\n}\n\nfunction compareResourceMarkers(a: ResourceMarkers, b: ResourceMarkers): number {\n\tlet [firstMarkerOfA] = a.markers;\n\tlet [firstMarkerOfB] = b.markers;\n\tlet res = 0;\n\tif (firstMarkerOfA && firstMarkerOfB) {\n\t\tres = MarkerSeverity.compare(firstMarkerOfA.marker.severity, firstMarkerOfB.marker.severity);\n\t}\n\tif (res === 0) {\n\t\tres = a.path.localeCompare(b.path) || a.name.localeCompare(b.name);\n\t}\n\treturn res;\n}\n\nfunction compareMarkers(a: Marker, b: Marker): number {\n\treturn MarkerSeverity.compare(a.marker.severity, b.marker.severity)\n\t\t|| Range.compareRangesUsingStarts(a.marker, b.marker);\n}\n\nexport class ResourceMarkers {\n\n\t@memoize\n\tget path(): string { return this.resource.fsPath; }\n\n\t@memoize\n\tget name(): string { return basename(this.resource); }\n\n\t@memoize\n\tget hash(): string {\n\t\tconst hasher = new Hasher();\n\t\thasher.hash(this.resource.toString());\n\t\treturn `${hasher.value}`;\n\t}\n\n\tconstructor(readonly resource: URI, readonly markers: Marker[]) { }\n}\n\nexport class Marker {\n\n\tget resource(): URI { return this.marker.resource; }\n\tget range(): IRange { return this.marker; }\n\n\tprivate _lines: string[];\n\tget lines(): string[] {\n\t\tif (!this._lines) {\n\t\t\tthis._lines = this.marker.message.split(/\\r\\n|\\r|\\n/g);\n\t\t}\n\t\treturn this._lines;\n\t}\n\n\t@memoize\n\tget hash(): string {\n\t\treturn IMarkerData.makeKey(this.marker);\n\t}\n\n\tconstructor(\n\t\treadonly marker: IMarker,\n\t\treadonly relatedInformation: RelatedInformation[] = []\n\t) { }\n\n\ttoString(): string {\n\t\treturn JSON.stringify({\n\t\t\t...this.marker,\n\t\t\tresource: this.marker.resource.path,\n\t\t\trelatedInformation: this.relatedInformation.length ? this.relatedInformation.map(r => ({ ...r.raw, resource: r.raw.resource.path })) : undefined\n\t\t}, null, '\\t');\n\t}\n}\n\nexport class RelatedInformation {\n\n\t@memoize\n\tget hash(): string {\n\t\tconst hasher = new Hasher();\n\t\thasher.hash(this.resource.toString());\n\t\thasher.hash(this.marker.startLineNumber);\n\t\thasher.hash(this.marker.startColumn);\n\t\thasher.hash(this.marker.endLineNumber);\n\t\thasher.hash(this.marker.endColumn);\n\t\thasher.hash(this.raw.resource.toString());\n\t\thasher.hash(this.raw.startLineNumber);\n\t\thasher.hash(this.raw.startColumn);\n\t\thasher.hash(this.raw.endLineNumber);\n\t\thasher.hash(this.raw.endColumn);\n\t\treturn `${hasher.value}`;\n\t}\n\n\tconstructor(\n\t\tprivate resource: URI,\n\t\treadonly marker: IMarker,\n\t\treadonly raw: IRelatedInformation\n\t) { }\n}\n\nexport class MarkersModel {\n\n\tprivate cachedSortedResources: ResourceMarkers[] | undefined = undefined;\n\n\tprivate readonly _onDidChange = new Emitter<URI>();\n\treadonly onDidChange: Event<URI> = this._onDidChange.event;\n\n\tget resourceMarkers(): ResourceMarkers[] {\n\t\tif (!this.cachedSortedResources) {\n\t\t\tthis.cachedSortedResources = values(this.resourcesByUri).sort(compareResourceMarkers);\n\t\t}\n\n\t\treturn this.cachedSortedResources;\n\t}\n\n\tprivate resourcesByUri: Map<string, ResourceMarkers>;\n\n\tconstructor() {\n\t\tthis.resourcesByUri = new Map<string, ResourceMarkers>();\n\t}\n\n\tgetResourceMarkers(resource: URI): ResourceMarkers | null {\n\t\treturn withUndefinedAsNull(this.resourcesByUri.get(resource.toString()));\n\t}\n\n\tsetResourceMarkers(resource: URI, rawMarkers: IMarker[]): void {\n\t\tif (isFalsyOrEmpty(rawMarkers)) {\n\t\t\tthis.resourcesByUri.delete(resource.toString());\n\t\t} else {\n\t\t\tconst markers = rawMarkers.map(rawMarker => {\n\t\t\t\tlet relatedInformation: RelatedInformation[] | undefined = undefined;\n\n\t\t\t\tif (rawMarker.relatedInformation) {\n\t\t\t\t\trelatedInformation = rawMarker.relatedInformation.map(r => new RelatedInformation(resource, rawMarker, r));\n\t\t\t\t}\n\n\t\t\t\treturn new Marker(rawMarker, relatedInformation);\n\t\t\t});\n\n\t\t\tmarkers.sort(compareMarkers);\n\n\t\t\tthis.resourcesByUri.set(resource.toString(), new ResourceMarkers(resource, markers));\n\t\t}\n\n\t\tthis.cachedSortedResources = undefined;\n\t\tthis._onDidChange.fire(resource);\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis.resourcesByUri.clear();\n\t}\n}\n"]}]}