{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/runtimeExtensionsEditor\");\nvar nls = require(\"vs/nls\");\nvar os = require(\"os\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar package_1 = require(\"vs/platform/product/node/package\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar baseEditor_1 = require(\"vs/workbench/browser/parts/editor/baseEditor\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar extensions_1 = require(\"vs/workbench/contrib/extensions/common/extensions\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar extensions_2 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar async_1 = require(\"vs/base/common/async\");\nvar electron_1 = require(\"electron\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar pfs_1 = require(\"vs/base/node/pfs\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar runtimeExtensionsInput_1 = require(\"vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsInput\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar ports_1 = require(\"vs/base/node/ports\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar octiconLabel_1 = require(\"vs/base/browser/ui/octiconLabel/octiconLabel\");\nvar path_1 = require(\"vs/base/common/path\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar extensions_3 = require(\"vs/platform/extensions/common/extensions\");\nvar remoteHosts_1 = require(\"vs/platform/remote/common/remoteHosts\");\nexports.IExtensionHostProfileService = instantiation_1.createDecorator('extensionHostProfileService');\nexports.CONTEXT_PROFILE_SESSION_STATE = new contextkey_1.RawContextKey('profileSessionState', 'none');\nexports.CONTEXT_EXTENSION_HOST_PROFILE_RECORDED = new contextkey_1.RawContextKey('extensionHostProfileRecorded', false);\nvar ProfileSessionState;\n(function (ProfileSessionState) {\n    ProfileSessionState[ProfileSessionState[\"None\"] = 0] = \"None\";\n    ProfileSessionState[ProfileSessionState[\"Starting\"] = 1] = \"Starting\";\n    ProfileSessionState[ProfileSessionState[\"Running\"] = 2] = \"Running\";\n    ProfileSessionState[ProfileSessionState[\"Stopping\"] = 3] = \"Stopping\";\n})(ProfileSessionState = exports.ProfileSessionState || (exports.ProfileSessionState = {}));\nvar RuntimeExtensionsEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(RuntimeExtensionsEditor, _super);\n    function RuntimeExtensionsEditor(telemetryService, themeService, contextKeyService, _extensionsWorkbenchService, _extensionService, _notificationService, _contextMenuService, _instantiationService, _extensionHostProfileService, storageService, _labelService, _windowService) {\n        var _this = _super.call(this, RuntimeExtensionsEditor.ID, telemetryService, themeService, storageService) || this;\n        _this._extensionsWorkbenchService = _extensionsWorkbenchService;\n        _this._extensionService = _extensionService;\n        _this._notificationService = _notificationService;\n        _this._contextMenuService = _contextMenuService;\n        _this._instantiationService = _instantiationService;\n        _this._extensionHostProfileService = _extensionHostProfileService;\n        _this._labelService = _labelService;\n        _this._windowService = _windowService;\n        _this._list = null;\n        _this._profileInfo = _this._extensionHostProfileService.lastProfile;\n        _this._register(_this._extensionHostProfileService.onDidChangeLastProfile(function () {\n            _this._profileInfo = _this._extensionHostProfileService.lastProfile;\n            _this._extensionsHostRecorded.set(!!_this._profileInfo);\n            _this._updateExtensions();\n        }));\n        _this._register(_this._extensionHostProfileService.onDidChangeState(function () {\n            var state = _this._extensionHostProfileService.state;\n            _this._profileSessionState.set(ProfileSessionState[state].toLowerCase());\n        }));\n        _this._elements = null;\n        _this._extensionsDescriptions = [];\n        _this._updateExtensions();\n        _this._profileSessionState = exports.CONTEXT_PROFILE_SESSION_STATE.bindTo(contextKeyService);\n        _this._extensionsHostRecorded = exports.CONTEXT_EXTENSION_HOST_PROFILE_RECORDED.bindTo(contextKeyService);\n        _this._updateSoon = _this._register(new async_1.RunOnceScheduler(function () { return _this._updateExtensions(); }, 200));\n        _this._extensionService.getExtensions().then(function (extensions) {\n            // We only deal with extensions with source code!\n            _this._extensionsDescriptions = extensions.filter(function (extension) {\n                return !!extension.main;\n            });\n            _this._updateExtensions();\n        });\n        _this._register(_this._extensionService.onDidChangeExtensionsStatus(function () { return _this._updateSoon.schedule(); }));\n        return _this;\n    }\n    RuntimeExtensionsEditor.prototype._updateExtensions = function () {\n        this._elements = this._resolveExtensions();\n        if (this._list) {\n            this._list.splice(0, this._list.length, this._elements);\n        }\n    };\n    RuntimeExtensionsEditor.prototype._resolveExtensions = function () {\n        var _this = this;\n        var marketplaceMap = Object.create(null);\n        for (var _i = 0, _a = this._extensionsWorkbenchService.local; _i < _a.length; _i++) {\n            var extension = _a[_i];\n            marketplaceMap[extensions_3.ExtensionIdentifier.toKey(extension.identifier.id)] = extension;\n        }\n        var statusMap = this._extensionService.getExtensionsStatus();\n        // group profile segments by extension\n        var segments = Object.create(null);\n        if (this._profileInfo) {\n            var currentStartTime = this._profileInfo.startTime;\n            for (var i = 0, len = this._profileInfo.deltas.length; i < len; i++) {\n                var id = this._profileInfo.ids[i];\n                var delta = this._profileInfo.deltas[i];\n                var extensionSegments = segments[extensions_3.ExtensionIdentifier.toKey(id)];\n                if (!extensionSegments) {\n                    extensionSegments = [];\n                    segments[extensions_3.ExtensionIdentifier.toKey(id)] = extensionSegments;\n                }\n                extensionSegments.push(currentStartTime);\n                currentStartTime = currentStartTime + delta;\n                extensionSegments.push(currentStartTime);\n            }\n        }\n        var result = [];\n        for (var i = 0, len = this._extensionsDescriptions.length; i < len; i++) {\n            var extensionDescription = this._extensionsDescriptions[i];\n            var profileInfo = null;\n            if (this._profileInfo) {\n                var extensionSegments = segments[extensions_3.ExtensionIdentifier.toKey(extensionDescription.identifier)] || [];\n                var extensionTotalTime = 0;\n                for (var j = 0, lenJ = extensionSegments.length / 2; j < lenJ; j++) {\n                    var startTime = extensionSegments[2 * j];\n                    var endTime = extensionSegments[2 * j + 1];\n                    extensionTotalTime += (endTime - startTime);\n                }\n                profileInfo = {\n                    segments: extensionSegments,\n                    totalTime: extensionTotalTime\n                };\n            }\n            result[i] = {\n                originalIndex: i,\n                description: extensionDescription,\n                marketplaceInfo: marketplaceMap[extensions_3.ExtensionIdentifier.toKey(extensionDescription.identifier)],\n                status: statusMap[extensionDescription.identifier.value],\n                profileInfo: profileInfo || undefined,\n                unresponsiveProfile: this._extensionHostProfileService.getUnresponsiveProfile(extensionDescription.identifier)\n            };\n        }\n        result = result.filter(function (element) { return element.status.activationTimes; });\n        // bubble up extensions that have caused slowness\n        result = result.sort(function (a, b) {\n            if (a.unresponsiveProfile === _this._profileInfo && !b.unresponsiveProfile) {\n                return -1;\n            }\n            else if (!a.unresponsiveProfile && b.unresponsiveProfile === _this._profileInfo) {\n                return 1;\n            }\n            return a.originalIndex - b.originalIndex;\n        });\n        return result;\n    };\n    RuntimeExtensionsEditor.prototype.createEditor = function (parent) {\n        var _this = this;\n        dom_1.addClass(parent, 'runtime-extensions-editor');\n        var TEMPLATE_ID = 'runtimeExtensionElementTemplate';\n        var delegate = new /** @class */ (function () {\n            function class_1() {\n            }\n            class_1.prototype.getHeight = function (element) {\n                return 62;\n            };\n            class_1.prototype.getTemplateId = function (element) {\n                return TEMPLATE_ID;\n            };\n            return class_1;\n        }());\n        var renderer = {\n            templateId: TEMPLATE_ID,\n            renderTemplate: function (root) {\n                var element = dom_1.append(root, dom_1.$('.extension'));\n                var desc = dom_1.append(element, dom_1.$('div.desc'));\n                var name = dom_1.append(desc, dom_1.$('div.name'));\n                var msgContainer = dom_1.append(desc, dom_1.$('div.msg'));\n                var actionbar = new actionbar_1.ActionBar(desc, { animated: false });\n                actionbar.onDidRun(function (_a) {\n                    var error = _a.error;\n                    return error && _this._notificationService.error(error);\n                });\n                var timeContainer = dom_1.append(element, dom_1.$('.time'));\n                var activationTime = dom_1.append(timeContainer, dom_1.$('div.activation-time'));\n                var profileTime = dom_1.append(timeContainer, dom_1.$('div.profile-time'));\n                var disposables = [actionbar];\n                return {\n                    root: root,\n                    element: element,\n                    name: name,\n                    actionbar: actionbar,\n                    activationTime: activationTime,\n                    profileTime: profileTime,\n                    msgContainer: msgContainer,\n                    disposables: disposables,\n                    elementDisposables: []\n                };\n            },\n            renderElement: function (element, index, data) {\n                data.elementDisposables = lifecycle_1.dispose(data.elementDisposables);\n                dom_1.toggleClass(data.root, 'odd', index % 2 === 1);\n                data.name.textContent = element.marketplaceInfo ? element.marketplaceInfo.displayName : element.description.displayName || '';\n                var activationTimes = element.status.activationTimes;\n                var syncTime = activationTimes.codeLoadingTime + activationTimes.activateCallTime;\n                data.activationTime.textContent = activationTimes.startup ? \"Startup Activation: \" + syncTime + \"ms\" : \"Activation: \" + syncTime + \"ms\";\n                data.actionbar.clear();\n                if (element.unresponsiveProfile || arrays_1.isNonEmptyArray(element.status.runtimeErrors)) {\n                    data.actionbar.push(new ReportExtensionIssueAction(element), { icon: true, label: true });\n                }\n                var title;\n                if (activationTimes.activationEvent === '*') {\n                    title = nls.localize('starActivation', \"Activated on start-up\");\n                }\n                else if (/^workspaceContains:/.test(activationTimes.activationEvent)) {\n                    var fileNameOrGlob = activationTimes.activationEvent.substr('workspaceContains:'.length);\n                    if (fileNameOrGlob.indexOf('*') >= 0 || fileNameOrGlob.indexOf('?') >= 0) {\n                        title = nls.localize({\n                            key: 'workspaceContainsGlobActivation',\n                            comment: [\n                                '{0} will be a glob pattern'\n                            ]\n                        }, \"Activated because a file matching {0} exists in your workspace\", fileNameOrGlob);\n                    }\n                    else {\n                        title = nls.localize({\n                            key: 'workspaceContainsFileActivation',\n                            comment: [\n                                '{0} will be a file name'\n                            ]\n                        }, \"Activated because file {0} exists in your workspace\", fileNameOrGlob);\n                    }\n                }\n                else if (/^workspaceContainsTimeout:/.test(activationTimes.activationEvent)) {\n                    var glob = activationTimes.activationEvent.substr('workspaceContainsTimeout:'.length);\n                    title = nls.localize({\n                        key: 'workspaceContainsTimeout',\n                        comment: [\n                            '{0} will be a glob pattern'\n                        ]\n                    }, \"Activated because searching for {0} took too long\", glob);\n                }\n                else if (/^onLanguage:/.test(activationTimes.activationEvent)) {\n                    var language = activationTimes.activationEvent.substr('onLanguage:'.length);\n                    title = nls.localize('languageActivation', \"Activated because you opened a {0} file\", language);\n                }\n                else {\n                    title = nls.localize({\n                        key: 'workspaceGenericActivation',\n                        comment: [\n                            'The {0} placeholder will be an activation event, like e.g. \\'language:typescript\\', \\'debug\\', etc.'\n                        ]\n                    }, \"Activated on {0}\", activationTimes.activationEvent);\n                }\n                data.activationTime.title = title;\n                dom_1.clearNode(data.msgContainer);\n                if (_this._extensionHostProfileService.getUnresponsiveProfile(element.description.identifier)) {\n                    var el = dom_1.$('span');\n                    el.innerHTML = octiconLabel_1.renderOcticons(\" $(alert) Unresponsive\");\n                    el.title = nls.localize('unresponsive.title', \"Extension has caused the extension host to freeze.\");\n                    data.msgContainer.appendChild(el);\n                }\n                if (arrays_1.isNonEmptyArray(element.status.runtimeErrors)) {\n                    var el = dom_1.$('span');\n                    el.innerHTML = octiconLabel_1.renderOcticons(\"$(bug) \" + nls.localize('errors', \"{0} uncaught errors\", element.status.runtimeErrors.length));\n                    data.msgContainer.appendChild(el);\n                }\n                if (element.status.messages && element.status.messages.length > 0) {\n                    var el = dom_1.$('span');\n                    el.innerHTML = octiconLabel_1.renderOcticons(\"$(alert) \" + element.status.messages[0].message);\n                    data.msgContainer.appendChild(el);\n                }\n                if (element.description.extensionLocation.scheme !== 'file') {\n                    var el = dom_1.$('span');\n                    el.innerHTML = octiconLabel_1.renderOcticons(\"$(rss) \" + element.description.extensionLocation.authority);\n                    data.msgContainer.appendChild(el);\n                    var hostLabel = _this._labelService.getHostLabel(remoteHosts_1.REMOTE_HOST_SCHEME, _this._windowService.getConfiguration().remoteAuthority);\n                    if (hostLabel) {\n                        el.innerHTML = octiconLabel_1.renderOcticons(\"$(rss) \" + hostLabel);\n                    }\n                }\n                if (_this._profileInfo && element.profileInfo) {\n                    data.profileTime.textContent = \"Profile: \" + (element.profileInfo.totalTime / 1000).toFixed(2) + \"ms\";\n                }\n                else {\n                    data.profileTime.textContent = '';\n                }\n            },\n            disposeTemplate: function (data) {\n                data.disposables = lifecycle_1.dispose(data.disposables);\n            }\n        };\n        this._list = this._instantiationService.createInstance(listService_1.WorkbenchList, parent, delegate, [renderer], {\n            multipleSelectionSupport: false,\n            setRowLineHeight: false,\n            horizontalScrolling: false\n        });\n        this._list.splice(0, this._list.length, this._elements || undefined);\n        this._list.onContextMenu(function (e) {\n            if (!e.element) {\n                return;\n            }\n            var actions = [];\n            actions.push(new ReportExtensionIssueAction(e.element));\n            actions.push(new actionbar_1.Separator());\n            if (e.element.marketplaceInfo) {\n                actions.push(new actions_1.Action('runtimeExtensionsEditor.action.disableWorkspace', nls.localize('disable workspace', \"Disable (Workspace)\"), undefined, true, function () { return _this._extensionsWorkbenchService.setEnablement(e.element.marketplaceInfo, extensionManagement_1.EnablementState.WorkspaceDisabled); }));\n                actions.push(new actions_1.Action('runtimeExtensionsEditor.action.disable', nls.localize('disable', \"Disable\"), undefined, true, function () { return _this._extensionsWorkbenchService.setEnablement(e.element.marketplaceInfo, extensionManagement_1.EnablementState.Disabled); }));\n                actions.push(new actionbar_1.Separator());\n            }\n            var state = _this._extensionHostProfileService.state;\n            if (state === ProfileSessionState.Running) {\n                actions.push(_this._instantiationService.createInstance(StopExtensionHostProfileAction, StopExtensionHostProfileAction.ID, StopExtensionHostProfileAction.LABEL));\n            }\n            else {\n                actions.push(_this._instantiationService.createInstance(StartExtensionHostProfileAction, StartExtensionHostProfileAction.ID, StartExtensionHostProfileAction.LABEL));\n            }\n            actions.push(_this.saveExtensionHostProfileAction);\n            _this._contextMenuService.showContextMenu({\n                getAnchor: function () { return e.anchor; },\n                getActions: function () { return actions; }\n            });\n        });\n    };\n    Object.defineProperty(RuntimeExtensionsEditor.prototype, \"saveExtensionHostProfileAction\", {\n        get: function () {\n            return this._instantiationService.createInstance(SaveExtensionHostProfileAction, SaveExtensionHostProfileAction.ID, SaveExtensionHostProfileAction.LABEL);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RuntimeExtensionsEditor.prototype.layout = function (dimension) {\n        if (this._list) {\n            this._list.layout(dimension.height);\n        }\n    };\n    RuntimeExtensionsEditor.ID = 'workbench.editor.runtimeExtensions';\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], RuntimeExtensionsEditor.prototype, \"saveExtensionHostProfileAction\", null);\n    RuntimeExtensionsEditor = tslib_1.__decorate([\n        tslib_1.__param(0, telemetry_1.ITelemetryService),\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, contextkey_1.IContextKeyService),\n        tslib_1.__param(3, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(4, extensions_2.IExtensionService),\n        tslib_1.__param(5, notification_1.INotificationService),\n        tslib_1.__param(6, contextView_1.IContextMenuService),\n        tslib_1.__param(7, instantiation_1.IInstantiationService),\n        tslib_1.__param(8, exports.IExtensionHostProfileService),\n        tslib_1.__param(9, storage_1.IStorageService),\n        tslib_1.__param(10, label_1.ILabelService),\n        tslib_1.__param(11, windows_1.IWindowService)\n    ], RuntimeExtensionsEditor);\n    return RuntimeExtensionsEditor;\n}(baseEditor_1.BaseEditor));\nexports.RuntimeExtensionsEditor = RuntimeExtensionsEditor;\nvar ShowRuntimeExtensionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowRuntimeExtensionsAction, _super);\n    function ShowRuntimeExtensionsAction(id, label, _editorService, _instantiationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this._editorService = _editorService;\n        _this._instantiationService = _instantiationService;\n        return _this;\n    }\n    ShowRuntimeExtensionsAction.prototype.run = function (e) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._editorService.openEditor(this._instantiationService.createInstance(runtimeExtensionsInput_1.RuntimeExtensionsInput), { revealIfOpened: true })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ShowRuntimeExtensionsAction.ID = 'workbench.action.showRuntimeExtensions';\n    ShowRuntimeExtensionsAction.LABEL = nls.localize('showRuntimeExtensions', \"Show Running Extensions\");\n    ShowRuntimeExtensionsAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService)\n    ], ShowRuntimeExtensionsAction);\n    return ShowRuntimeExtensionsAction;\n}(actions_1.Action));\nexports.ShowRuntimeExtensionsAction = ShowRuntimeExtensionsAction;\nvar ReportExtensionIssueAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReportExtensionIssueAction, _super);\n    function ReportExtensionIssueAction(extension) {\n        var _this = _super.call(this, ReportExtensionIssueAction._id, ReportExtensionIssueAction._label, 'extension-action report-issue') || this;\n        _this.enabled = extension.marketplaceInfo\n            && extension.marketplaceInfo.type === extensions_3.ExtensionType.User\n            && !!extension.description.repository && !!extension.description.repository.url;\n        var _a = ReportExtensionIssueAction._generateNewIssueUrl(extension), url = _a.url, task = _a.task;\n        _this._url = url;\n        _this._task = task;\n        return _this;\n    }\n    ReportExtensionIssueAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._task) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._task()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        window.open(this._url);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ReportExtensionIssueAction._generateNewIssueUrl = function (extension) {\n        var _this = this;\n        var task;\n        var baseUrl = extension.marketplaceInfo && extension.marketplaceInfo.type === extensions_3.ExtensionType.User && extension.description.repository ? extension.description.repository.url : undefined;\n        if (!!baseUrl) {\n            baseUrl = (baseUrl.indexOf('.git') !== -1 ? baseUrl.substr(0, baseUrl.length - 4) : baseUrl) + \"/issues/new/\";\n        }\n        else {\n            baseUrl = product_1.default.reportIssueUrl;\n        }\n        var title;\n        var message;\n        var reason;\n        if (extension.unresponsiveProfile) {\n            // unresponsive extension host caused\n            reason = 'Performance';\n            title = 'Extension causes high cpu load';\n            var path_2 = path_1.join(os.homedir(), extension.description.identifier.value + \"-unresponsive.cpuprofile.txt\");\n            task = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var profiler, data;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, Promise.resolve().then(function () { return require('v8-inspect-profiler'); })];\n                        case 1:\n                            profiler = _a.sent();\n                            data = profiler.rewriteAbsolutePaths({ profile: extension.unresponsiveProfile.data }, 'pii_removed');\n                            profiler.writeProfile(data, path_2).then(undefined, errors_1.onUnexpectedError);\n                            return [2 /*return*/];\n                    }\n                });\n            }); };\n            message = \":warning: Make sure to **attach** this file from your *home*-directory:\\n:warning:`\" + path_2 + \"`\\n\\nFind more details here: https://github.com/Microsoft/vscode/wiki/Explain:-extension-causes-high-cpu-load\";\n        }\n        else {\n            // generic\n            reason = 'Bug';\n            title = 'Extension issue';\n            message = ':warning: We have written the needed data into your clipboard. Please paste! :warning:';\n            electron_1.clipboard.writeText('```json \\n' + JSON.stringify(extension.status, null, '\\t') + '\\n```');\n        }\n        var osVersion = os.type() + \" \" + os.arch() + \" \" + os.release();\n        var queryStringPrefix = baseUrl.indexOf('?') === -1 ? '?' : '&';\n        var body = encodeURIComponent(\"- Issue Type: `\" + reason + \"`\\n- Extension Name: `\" + extension.description.name + \"`\\n- Extension Version: `\" + extension.description.version + \"`\\n- OS Version: `\" + osVersion + \"`\\n- VSCode version: `\" + package_1.default.version + \"`\\n\\n\" + message);\n        return {\n            url: \"\" + baseUrl + queryStringPrefix + \"body=\" + body + \"&title=\" + encodeURIComponent(title),\n            task: task\n        };\n    };\n    ReportExtensionIssueAction._id = 'workbench.extensions.action.reportExtensionIssue';\n    ReportExtensionIssueAction._label = nls.localize('reportExtensionIssue', \"Report Issue\");\n    return ReportExtensionIssueAction;\n}(actions_1.Action));\nexports.ReportExtensionIssueAction = ReportExtensionIssueAction;\nvar DebugExtensionHostAction = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugExtensionHostAction, _super);\n    function DebugExtensionHostAction(_debugService, _windowsService, _dialogService, _extensionService) {\n        var _this = _super.call(this, DebugExtensionHostAction.ID, DebugExtensionHostAction.LABEL, DebugExtensionHostAction.CSS_CLASS) || this;\n        _this._debugService = _debugService;\n        _this._windowsService = _windowsService;\n        _this._dialogService = _dialogService;\n        _this._extensionService = _extensionService;\n        return _this;\n    }\n    DebugExtensionHostAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var inspectPort, res;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        inspectPort = this._extensionService.getInspectPort();\n                        if (!!inspectPort) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._dialogService.confirm({\n                                type: 'info',\n                                message: nls.localize('restart1', \"Profile Extensions\"),\n                                detail: nls.localize('restart2', \"In order to profile extensions a restart is required. Do you want to restart '{0}' now?\", product_1.default.nameLong),\n                                primaryButton: nls.localize('restart3', \"Restart\"),\n                                secondaryButton: nls.localize('cancel', \"Cancel\")\n                            })];\n                    case 1:\n                        res = _a.sent();\n                        if (res.confirmed) {\n                            this._windowsService.relaunch({ addArgs: [\"--inspect-extensions=\" + ports_1.randomPort()] });\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this._debugService.startDebugging(undefined, {\n                            type: 'node',\n                            name: nls.localize('debugExtensionHost.launch.name', \"Attach Extension Host\"),\n                            request: 'attach',\n                            port: inspectPort\n                        })];\n                }\n            });\n        });\n    };\n    DebugExtensionHostAction.ID = 'workbench.extensions.action.debugExtensionHost';\n    DebugExtensionHostAction.LABEL = nls.localize('debugExtensionHost', \"Start Debugging Extension Host\");\n    DebugExtensionHostAction.CSS_CLASS = 'debug-extension-host';\n    DebugExtensionHostAction = tslib_1.__decorate([\n        tslib_1.__param(0, debug_1.IDebugService),\n        tslib_1.__param(1, windows_1.IWindowsService),\n        tslib_1.__param(2, dialogs_1.IDialogService),\n        tslib_1.__param(3, extensions_2.IExtensionService)\n    ], DebugExtensionHostAction);\n    return DebugExtensionHostAction;\n}(actions_1.Action));\nexports.DebugExtensionHostAction = DebugExtensionHostAction;\nvar StartExtensionHostProfileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(StartExtensionHostProfileAction, _super);\n    function StartExtensionHostProfileAction(id, label, _extensionHostProfileService) {\n        if (id === void 0) { id = StartExtensionHostProfileAction.ID; }\n        if (label === void 0) { label = StartExtensionHostProfileAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this._extensionHostProfileService = _extensionHostProfileService;\n        return _this;\n    }\n    StartExtensionHostProfileAction.prototype.run = function () {\n        this._extensionHostProfileService.startProfiling();\n        return Promise.resolve();\n    };\n    StartExtensionHostProfileAction.ID = 'workbench.extensions.action.extensionHostProfile';\n    StartExtensionHostProfileAction.LABEL = nls.localize('extensionHostProfileStart', \"Start Extension Host Profile\");\n    StartExtensionHostProfileAction = tslib_1.__decorate([\n        tslib_1.__param(2, exports.IExtensionHostProfileService)\n    ], StartExtensionHostProfileAction);\n    return StartExtensionHostProfileAction;\n}(actions_1.Action));\nexports.StartExtensionHostProfileAction = StartExtensionHostProfileAction;\nvar StopExtensionHostProfileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(StopExtensionHostProfileAction, _super);\n    function StopExtensionHostProfileAction(id, label, _extensionHostProfileService) {\n        if (id === void 0) { id = StartExtensionHostProfileAction.ID; }\n        if (label === void 0) { label = StartExtensionHostProfileAction.LABEL; }\n        var _this = _super.call(this, id, label) || this;\n        _this._extensionHostProfileService = _extensionHostProfileService;\n        return _this;\n    }\n    StopExtensionHostProfileAction.prototype.run = function () {\n        this._extensionHostProfileService.stopProfiling();\n        return Promise.resolve();\n    };\n    StopExtensionHostProfileAction.ID = 'workbench.extensions.action.stopExtensionHostProfile';\n    StopExtensionHostProfileAction.LABEL = nls.localize('stopExtensionHostProfileStart', \"Stop Extension Host Profile\");\n    StopExtensionHostProfileAction = tslib_1.__decorate([\n        tslib_1.__param(2, exports.IExtensionHostProfileService)\n    ], StopExtensionHostProfileAction);\n    return StopExtensionHostProfileAction;\n}(actions_1.Action));\nexports.StopExtensionHostProfileAction = StopExtensionHostProfileAction;\nvar SaveExtensionHostProfileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SaveExtensionHostProfileAction, _super);\n    function SaveExtensionHostProfileAction(id, label, _windowService, _environmentService, _extensionHostProfileService) {\n        if (id === void 0) { id = SaveExtensionHostProfileAction.ID; }\n        if (label === void 0) { label = SaveExtensionHostProfileAction.LABEL; }\n        var _this = _super.call(this, id, label, undefined, false) || this;\n        _this._windowService = _windowService;\n        _this._environmentService = _environmentService;\n        _this._extensionHostProfileService = _extensionHostProfileService;\n        _this._extensionHostProfileService.onDidChangeLastProfile(function () {\n            _this.enabled = (_this._extensionHostProfileService.lastProfile !== null);\n        });\n        return _this;\n    }\n    SaveExtensionHostProfileAction.prototype.run = function () {\n        return Promise.resolve(this._asyncRun());\n    };\n    SaveExtensionHostProfileAction.prototype._asyncRun = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var picked, profileInfo, dataToWrite, profiler, tmp;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._windowService.showSaveDialog({\n                            title: 'Save Extension Host Profile',\n                            buttonLabel: 'Save',\n                            defaultPath: \"CPU-\" + new Date().toISOString().replace(/[\\-:]/g, '') + \".cpuprofile\",\n                            filters: [{\n                                    name: 'CPU Profiles',\n                                    extensions: ['cpuprofile', 'txt']\n                                }]\n                        })];\n                    case 1:\n                        picked = _a.sent();\n                        if (!picked) {\n                            return [2 /*return*/];\n                        }\n                        profileInfo = this._extensionHostProfileService.lastProfile;\n                        dataToWrite = profileInfo ? profileInfo.data : {};\n                        if (!this._environmentService.isBuilt) return [3 /*break*/, 3];\n                        return [4 /*yield*/, Promise.resolve().then(function () { return require('v8-inspect-profiler'); })];\n                    case 2:\n                        profiler = _a.sent();\n                        tmp = profiler.rewriteAbsolutePaths({ profile: dataToWrite }, 'piiRemoved');\n                        dataToWrite = tmp.profile;\n                        picked = picked + '.txt';\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, pfs_1.writeFile(picked, JSON.stringify(profileInfo ? profileInfo.data : {}, null, '\\t'))];\n                }\n            });\n        });\n    };\n    SaveExtensionHostProfileAction.LABEL = nls.localize('saveExtensionHostProfile', \"Save Extension Host Profile\");\n    SaveExtensionHostProfileAction.ID = 'workbench.extensions.action.saveExtensionHostProfile';\n    SaveExtensionHostProfileAction = tslib_1.__decorate([\n        tslib_1.__param(2, windows_1.IWindowService),\n        tslib_1.__param(3, environment_1.IEnvironmentService),\n        tslib_1.__param(4, exports.IExtensionHostProfileService)\n    ], SaveExtensionHostProfileAction);\n    return SaveExtensionHostProfileAction;\n}(actions_1.Action));\nexports.SaveExtensionHostProfileAction = SaveExtensionHostProfileAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/runtimeExtensionsEditor';\nimport * as nls from 'vs/nls';\nimport * as os from 'os';\nimport product from 'vs/platform/product/node/product';\nimport pkg from 'vs/platform/product/node/package';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IInstantiationService, createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtensionsWorkbenchService, IExtension } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IExtensionService, IExtensionsStatus, IExtensionHostProfile } from 'vs/workbench/services/extensions/common/extensions';\nimport { IListVirtualDelegate, IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { WorkbenchList } from 'vs/platform/list/browser/listService';\nimport { append, $, addClass, toggleClass, Dimension, clearNode } from 'vs/base/browser/dom';\nimport { ActionBar, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { clipboard } from 'electron';\nimport { EnablementState } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IWindowService, IWindowsService } from 'vs/platform/windows/common/windows';\nimport { writeFile } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { memoize } from 'vs/base/common/decorators';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Event } from 'vs/base/common/event';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { RuntimeExtensionsInput } from 'vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsInput';\nimport { IDebugService } from 'vs/workbench/contrib/debug/common/debug';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { randomPort } from 'vs/base/node/ports';\nimport { IContextKeyService, RawContextKey, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { renderOcticons } from 'vs/base/browser/ui/octiconLabel/octiconLabel';\nimport { join } from 'vs/base/common/path';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ExtensionIdentifier, ExtensionType, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { REMOTE_HOST_SCHEME } from 'vs/platform/remote/common/remoteHosts';\n\nexport const IExtensionHostProfileService = createDecorator<IExtensionHostProfileService>('extensionHostProfileService');\nexport const CONTEXT_PROFILE_SESSION_STATE = new RawContextKey<string>('profileSessionState', 'none');\nexport const CONTEXT_EXTENSION_HOST_PROFILE_RECORDED = new RawContextKey<boolean>('extensionHostProfileRecorded', false);\n\nexport enum ProfileSessionState {\n\tNone = 0,\n\tStarting = 1,\n\tRunning = 2,\n\tStopping = 3\n}\n\nexport interface IExtensionHostProfileService {\n\t_serviceBrand: any;\n\n\treadonly onDidChangeState: Event<void>;\n\treadonly onDidChangeLastProfile: Event<void>;\n\n\treadonly state: ProfileSessionState;\n\treadonly lastProfile: IExtensionHostProfile | null;\n\n\tstartProfiling(): void;\n\tstopProfiling(): void;\n\n\tgetUnresponsiveProfile(extensionId: ExtensionIdentifier): IExtensionHostProfile | undefined;\n\tsetUnresponsiveProfile(extensionId: ExtensionIdentifier, profile: IExtensionHostProfile): void;\n}\n\ninterface IExtensionProfileInformation {\n\t/**\n\t * segment when the extension was running.\n\t * 2*i = segment start time\n\t * 2*i+1 = segment end time\n\t */\n\tsegments: number[];\n\t/**\n\t * total time when the extension was running.\n\t * (sum of all segment lengths).\n\t */\n\ttotalTime: number;\n}\n\ninterface IRuntimeExtension {\n\toriginalIndex: number;\n\tdescription: IExtensionDescription;\n\tmarketplaceInfo: IExtension;\n\tstatus: IExtensionsStatus;\n\tprofileInfo?: IExtensionProfileInformation;\n\tunresponsiveProfile?: IExtensionHostProfile;\n}\n\nexport class RuntimeExtensionsEditor extends BaseEditor {\n\n\tpublic static readonly ID: string = 'workbench.editor.runtimeExtensions';\n\n\tprivate _list: WorkbenchList<IRuntimeExtension> | null;\n\tprivate _profileInfo: IExtensionHostProfile | null;\n\n\tprivate _elements: IRuntimeExtension[] | null;\n\tprivate _extensionsDescriptions: IExtensionDescription[];\n\tprivate _updateSoon: RunOnceScheduler;\n\tprivate _profileSessionState: IContextKey<string>;\n\tprivate _extensionsHostRecorded: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IWindowService private readonly _windowService: IWindowService\n\t) {\n\t\tsuper(RuntimeExtensionsEditor.ID, telemetryService, themeService, storageService);\n\n\t\tthis._list = null;\n\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\tthis._register(this._extensionHostProfileService.onDidChangeLastProfile(() => {\n\t\t\tthis._profileInfo = this._extensionHostProfileService.lastProfile;\n\t\t\tthis._extensionsHostRecorded.set(!!this._profileInfo);\n\t\t\tthis._updateExtensions();\n\t\t}));\n\t\tthis._register(this._extensionHostProfileService.onDidChangeState(() => {\n\t\t\tconst state = this._extensionHostProfileService.state;\n\t\t\tthis._profileSessionState.set(ProfileSessionState[state].toLowerCase());\n\t\t}));\n\n\t\tthis._elements = null;\n\n\t\tthis._extensionsDescriptions = [];\n\t\tthis._updateExtensions();\n\n\t\tthis._profileSessionState = CONTEXT_PROFILE_SESSION_STATE.bindTo(contextKeyService);\n\t\tthis._extensionsHostRecorded = CONTEXT_EXTENSION_HOST_PROFILE_RECORDED.bindTo(contextKeyService);\n\n\t\tthis._updateSoon = this._register(new RunOnceScheduler(() => this._updateExtensions(), 200));\n\n\t\tthis._extensionService.getExtensions().then((extensions) => {\n\t\t\t// We only deal with extensions with source code!\n\t\t\tthis._extensionsDescriptions = extensions.filter((extension) => {\n\t\t\t\treturn !!extension.main;\n\t\t\t});\n\t\t\tthis._updateExtensions();\n\t\t});\n\t\tthis._register(this._extensionService.onDidChangeExtensionsStatus(() => this._updateSoon.schedule()));\n\t}\n\n\tprivate _updateExtensions(): void {\n\t\tthis._elements = this._resolveExtensions();\n\t\tif (this._list) {\n\t\t\tthis._list.splice(0, this._list.length, this._elements);\n\t\t}\n\t}\n\n\tprivate _resolveExtensions(): IRuntimeExtension[] {\n\t\tlet marketplaceMap: { [id: string]: IExtension; } = Object.create(null);\n\t\tfor (let extension of this._extensionsWorkbenchService.local) {\n\t\t\tmarketplaceMap[ExtensionIdentifier.toKey(extension.identifier.id)] = extension;\n\t\t}\n\n\t\tlet statusMap = this._extensionService.getExtensionsStatus();\n\n\t\t// group profile segments by extension\n\t\tlet segments: { [id: string]: number[]; } = Object.create(null);\n\n\t\tif (this._profileInfo) {\n\t\t\tlet currentStartTime = this._profileInfo.startTime;\n\t\t\tfor (let i = 0, len = this._profileInfo.deltas.length; i < len; i++) {\n\t\t\t\tconst id = this._profileInfo.ids[i];\n\t\t\t\tconst delta = this._profileInfo.deltas[i];\n\n\t\t\t\tlet extensionSegments = segments[ExtensionIdentifier.toKey(id)];\n\t\t\t\tif (!extensionSegments) {\n\t\t\t\t\textensionSegments = [];\n\t\t\t\t\tsegments[ExtensionIdentifier.toKey(id)] = extensionSegments;\n\t\t\t\t}\n\n\t\t\t\textensionSegments.push(currentStartTime);\n\t\t\t\tcurrentStartTime = currentStartTime + delta;\n\t\t\t\textensionSegments.push(currentStartTime);\n\t\t\t}\n\t\t}\n\n\t\tlet result: IRuntimeExtension[] = [];\n\t\tfor (let i = 0, len = this._extensionsDescriptions.length; i < len; i++) {\n\t\t\tconst extensionDescription = this._extensionsDescriptions[i];\n\n\t\t\tlet profileInfo: IExtensionProfileInformation | null = null;\n\t\t\tif (this._profileInfo) {\n\t\t\t\tlet extensionSegments = segments[ExtensionIdentifier.toKey(extensionDescription.identifier)] || [];\n\t\t\t\tlet extensionTotalTime = 0;\n\t\t\t\tfor (let j = 0, lenJ = extensionSegments.length / 2; j < lenJ; j++) {\n\t\t\t\t\tconst startTime = extensionSegments[2 * j];\n\t\t\t\t\tconst endTime = extensionSegments[2 * j + 1];\n\t\t\t\t\textensionTotalTime += (endTime - startTime);\n\t\t\t\t}\n\t\t\t\tprofileInfo = {\n\t\t\t\t\tsegments: extensionSegments,\n\t\t\t\t\ttotalTime: extensionTotalTime\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tresult[i] = {\n\t\t\t\toriginalIndex: i,\n\t\t\t\tdescription: extensionDescription,\n\t\t\t\tmarketplaceInfo: marketplaceMap[ExtensionIdentifier.toKey(extensionDescription.identifier)],\n\t\t\t\tstatus: statusMap[extensionDescription.identifier.value],\n\t\t\t\tprofileInfo: profileInfo || undefined,\n\t\t\t\tunresponsiveProfile: this._extensionHostProfileService.getUnresponsiveProfile(extensionDescription.identifier)\n\t\t\t};\n\t\t}\n\n\t\tresult = result.filter(element => element.status.activationTimes);\n\n\t\t// bubble up extensions that have caused slowness\n\t\tresult = result.sort((a, b) => {\n\t\t\tif (a.unresponsiveProfile === this._profileInfo && !b.unresponsiveProfile) {\n\t\t\t\treturn -1;\n\t\t\t} else if (!a.unresponsiveProfile && b.unresponsiveProfile === this._profileInfo) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn a.originalIndex - b.originalIndex;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\taddClass(parent, 'runtime-extensions-editor');\n\n\t\tconst TEMPLATE_ID = 'runtimeExtensionElementTemplate';\n\n\t\tconst delegate = new class implements IListVirtualDelegate<IRuntimeExtension>{\n\t\t\tgetHeight(element: IRuntimeExtension): number {\n\t\t\t\treturn 62;\n\t\t\t}\n\t\t\tgetTemplateId(element: IRuntimeExtension): string {\n\t\t\t\treturn TEMPLATE_ID;\n\t\t\t}\n\t\t};\n\n\t\tinterface IRuntimeExtensionTemplateData {\n\t\t\troot: HTMLElement;\n\t\t\telement: HTMLElement;\n\t\t\tname: HTMLElement;\n\t\t\tmsgContainer: HTMLElement;\n\t\t\tactionbar: ActionBar;\n\t\t\tactivationTime: HTMLElement;\n\t\t\tprofileTime: HTMLElement;\n\t\t\tdisposables: IDisposable[];\n\t\t\telementDisposables: IDisposable[];\n\t\t}\n\n\t\tconst renderer: IListRenderer<IRuntimeExtension, IRuntimeExtensionTemplateData> = {\n\t\t\ttemplateId: TEMPLATE_ID,\n\t\t\trenderTemplate: (root: HTMLElement): IRuntimeExtensionTemplateData => {\n\t\t\t\tconst element = append(root, $('.extension'));\n\n\t\t\t\tconst desc = append(element, $('div.desc'));\n\t\t\t\tconst name = append(desc, $('div.name'));\n\n\t\t\t\tconst msgContainer = append(desc, $('div.msg'));\n\n\t\t\t\tconst actionbar = new ActionBar(desc, { animated: false });\n\t\t\t\tactionbar.onDidRun(({ error }) => error && this._notificationService.error(error));\n\n\n\t\t\t\tconst timeContainer = append(element, $('.time'));\n\t\t\t\tconst activationTime = append(timeContainer, $('div.activation-time'));\n\t\t\t\tconst profileTime = append(timeContainer, $('div.profile-time'));\n\n\t\t\t\tconst disposables = [actionbar];\n\n\t\t\t\treturn {\n\t\t\t\t\troot,\n\t\t\t\t\telement,\n\t\t\t\t\tname,\n\t\t\t\t\tactionbar,\n\t\t\t\t\tactivationTime,\n\t\t\t\t\tprofileTime,\n\t\t\t\t\tmsgContainer,\n\t\t\t\t\tdisposables,\n\t\t\t\t\telementDisposables: []\n\t\t\t\t};\n\t\t\t},\n\n\t\t\trenderElement: (element: IRuntimeExtension, index: number, data: IRuntimeExtensionTemplateData): void => {\n\n\t\t\t\tdata.elementDisposables = dispose(data.elementDisposables);\n\n\t\t\t\ttoggleClass(data.root, 'odd', index % 2 === 1);\n\n\t\t\t\tdata.name.textContent = element.marketplaceInfo ? element.marketplaceInfo.displayName : element.description.displayName || '';\n\n\t\t\t\tconst activationTimes = element.status.activationTimes!;\n\t\t\t\tlet syncTime = activationTimes.codeLoadingTime + activationTimes.activateCallTime;\n\t\t\t\tdata.activationTime.textContent = activationTimes.startup ? `Startup Activation: ${syncTime}ms` : `Activation: ${syncTime}ms`;\n\n\t\t\t\tdata.actionbar.clear();\n\t\t\t\tif (element.unresponsiveProfile || isNonEmptyArray(element.status.runtimeErrors)) {\n\t\t\t\t\tdata.actionbar.push(new ReportExtensionIssueAction(element), { icon: true, label: true });\n\t\t\t\t}\n\n\t\t\t\tlet title: string;\n\t\t\t\tif (activationTimes.activationEvent === '*') {\n\t\t\t\t\ttitle = nls.localize('starActivation', \"Activated on start-up\");\n\t\t\t\t} else if (/^workspaceContains:/.test(activationTimes.activationEvent)) {\n\t\t\t\t\tlet fileNameOrGlob = activationTimes.activationEvent.substr('workspaceContains:'.length);\n\t\t\t\t\tif (fileNameOrGlob.indexOf('*') >= 0 || fileNameOrGlob.indexOf('?') >= 0) {\n\t\t\t\t\t\ttitle = nls.localize({\n\t\t\t\t\t\t\tkey: 'workspaceContainsGlobActivation',\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t'{0} will be a glob pattern'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, \"Activated because a file matching {0} exists in your workspace\", fileNameOrGlob);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttitle = nls.localize({\n\t\t\t\t\t\t\tkey: 'workspaceContainsFileActivation',\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t'{0} will be a file name'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, \"Activated because file {0} exists in your workspace\", fileNameOrGlob);\n\t\t\t\t\t}\n\t\t\t\t} else if (/^workspaceContainsTimeout:/.test(activationTimes.activationEvent)) {\n\t\t\t\t\tconst glob = activationTimes.activationEvent.substr('workspaceContainsTimeout:'.length);\n\t\t\t\t\ttitle = nls.localize({\n\t\t\t\t\t\tkey: 'workspaceContainsTimeout',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'{0} will be a glob pattern'\n\t\t\t\t\t\t]\n\t\t\t\t\t}, \"Activated because searching for {0} took too long\", glob);\n\t\t\t\t} else if (/^onLanguage:/.test(activationTimes.activationEvent)) {\n\t\t\t\t\tlet language = activationTimes.activationEvent.substr('onLanguage:'.length);\n\t\t\t\t\ttitle = nls.localize('languageActivation', \"Activated because you opened a {0} file\", language);\n\t\t\t\t} else {\n\t\t\t\t\ttitle = nls.localize({\n\t\t\t\t\t\tkey: 'workspaceGenericActivation',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'The {0} placeholder will be an activation event, like e.g. \\'language:typescript\\', \\'debug\\', etc.'\n\t\t\t\t\t\t]\n\t\t\t\t\t}, \"Activated on {0}\", activationTimes.activationEvent);\n\t\t\t\t}\n\t\t\t\tdata.activationTime.title = title;\n\n\t\t\t\tclearNode(data.msgContainer);\n\n\t\t\t\tif (this._extensionHostProfileService.getUnresponsiveProfile(element.description.identifier)) {\n\t\t\t\t\tconst el = $('span');\n\t\t\t\t\tel.innerHTML = renderOcticons(` $(alert) Unresponsive`);\n\t\t\t\t\tel.title = nls.localize('unresponsive.title', \"Extension has caused the extension host to freeze.\");\n\t\t\t\t\tdata.msgContainer.appendChild(el);\n\t\t\t\t}\n\n\t\t\t\tif (isNonEmptyArray(element.status.runtimeErrors)) {\n\t\t\t\t\tconst el = $('span');\n\t\t\t\t\tel.innerHTML = renderOcticons(`$(bug) ${nls.localize('errors', \"{0} uncaught errors\", element.status.runtimeErrors.length)}`);\n\t\t\t\t\tdata.msgContainer.appendChild(el);\n\t\t\t\t}\n\n\t\t\t\tif (element.status.messages && element.status.messages.length > 0) {\n\t\t\t\t\tconst el = $('span');\n\t\t\t\t\tel.innerHTML = renderOcticons(`$(alert) ${element.status.messages[0].message}`);\n\t\t\t\t\tdata.msgContainer.appendChild(el);\n\t\t\t\t}\n\n\t\t\t\tif (element.description.extensionLocation.scheme !== 'file') {\n\t\t\t\t\tconst el = $('span');\n\t\t\t\t\tel.innerHTML = renderOcticons(`$(rss) ${element.description.extensionLocation.authority}`);\n\t\t\t\t\tdata.msgContainer.appendChild(el);\n\n\t\t\t\t\tconst hostLabel = this._labelService.getHostLabel(REMOTE_HOST_SCHEME, this._windowService.getConfiguration().remoteAuthority);\n\t\t\t\t\tif (hostLabel) {\n\t\t\t\t\t\tel.innerHTML = renderOcticons(`$(rss) ${hostLabel}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._profileInfo && element.profileInfo) {\n\t\t\t\t\tdata.profileTime.textContent = `Profile: ${(element.profileInfo.totalTime / 1000).toFixed(2)}ms`;\n\t\t\t\t} else {\n\t\t\t\t\tdata.profileTime.textContent = '';\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tdisposeTemplate: (data: IRuntimeExtensionTemplateData): void => {\n\t\t\t\tdata.disposables = dispose(data.disposables);\n\t\t\t}\n\t\t};\n\n\t\tthis._list = this._instantiationService.createInstance(WorkbenchList, parent, delegate, [renderer], {\n\t\t\tmultipleSelectionSupport: false,\n\t\t\tsetRowLineHeight: false,\n\t\t\thorizontalScrolling: false\n\t\t}) as WorkbenchList<IRuntimeExtension>;\n\n\t\tthis._list.splice(0, this._list.length, this._elements || undefined);\n\n\t\tthis._list.onContextMenu((e) => {\n\t\t\tif (!e.element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst actions: IAction[] = [];\n\n\t\t\tactions.push(new ReportExtensionIssueAction(e.element));\n\t\t\tactions.push(new Separator());\n\n\t\t\tif (e.element.marketplaceInfo) {\n\t\t\t\tactions.push(new Action('runtimeExtensionsEditor.action.disableWorkspace', nls.localize('disable workspace', \"Disable (Workspace)\"), undefined, true, () => this._extensionsWorkbenchService.setEnablement(e.element!.marketplaceInfo, EnablementState.WorkspaceDisabled)));\n\t\t\t\tactions.push(new Action('runtimeExtensionsEditor.action.disable', nls.localize('disable', \"Disable\"), undefined, true, () => this._extensionsWorkbenchService.setEnablement(e.element!.marketplaceInfo, EnablementState.Disabled)));\n\t\t\t\tactions.push(new Separator());\n\t\t\t}\n\t\t\tconst state = this._extensionHostProfileService.state;\n\t\t\tif (state === ProfileSessionState.Running) {\n\t\t\t\tactions.push(this._instantiationService.createInstance(StopExtensionHostProfileAction, StopExtensionHostProfileAction.ID, StopExtensionHostProfileAction.LABEL));\n\t\t\t} else {\n\t\t\t\tactions.push(this._instantiationService.createInstance(StartExtensionHostProfileAction, StartExtensionHostProfileAction.ID, StartExtensionHostProfileAction.LABEL));\n\t\t\t}\n\t\t\tactions.push(this.saveExtensionHostProfileAction);\n\n\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\tgetActions: () => actions\n\t\t\t});\n\t\t});\n\t}\n\n\t@memoize\n\tprivate get saveExtensionHostProfileAction(): IAction {\n\t\treturn this._instantiationService.createInstance(SaveExtensionHostProfileAction, SaveExtensionHostProfileAction.ID, SaveExtensionHostProfileAction.LABEL);\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tif (this._list) {\n\t\t\tthis._list.layout(dimension.height);\n\t\t}\n\t}\n}\n\nexport class ShowRuntimeExtensionsAction extends Action {\n\tstatic readonly ID = 'workbench.action.showRuntimeExtensions';\n\tstatic LABEL = nls.localize('showRuntimeExtensions', \"Show Running Extensions\");\n\n\tconstructor(\n\t\tid: string, label: string,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic async run(e?: any): Promise<any> {\n\t\tawait this._editorService.openEditor(this._instantiationService.createInstance(RuntimeExtensionsInput), { revealIfOpened: true });\n\t}\n}\n\nexport class ReportExtensionIssueAction extends Action {\n\n\tprivate static readonly _id = 'workbench.extensions.action.reportExtensionIssue';\n\tprivate static _label = nls.localize('reportExtensionIssue', \"Report Issue\");\n\n\tprivate readonly _url: string;\n\tprivate readonly _task?: () => Promise<any>;\n\n\tconstructor(extension: {\n\t\tdescription: IExtensionDescription;\n\t\tmarketplaceInfo: IExtension;\n\t\tstatus?: IExtensionsStatus;\n\t\tunresponsiveProfile?: IExtensionHostProfile\n\t}) {\n\t\tsuper(ReportExtensionIssueAction._id, ReportExtensionIssueAction._label, 'extension-action report-issue');\n\t\tthis.enabled = extension.marketplaceInfo\n\t\t\t&& extension.marketplaceInfo.type === ExtensionType.User\n\t\t\t&& !!extension.description.repository && !!extension.description.repository.url;\n\n\t\tconst { url, task } = ReportExtensionIssueAction._generateNewIssueUrl(extension);\n\t\tthis._url = url;\n\t\tthis._task = task;\n\t}\n\n\tasync run(): Promise<void> {\n\t\tif (this._task) {\n\t\t\tawait this._task();\n\t\t}\n\t\twindow.open(this._url);\n\t}\n\n\tprivate static _generateNewIssueUrl(extension: {\n\t\tdescription: IExtensionDescription;\n\t\tmarketplaceInfo: IExtension;\n\t\tstatus?: IExtensionsStatus;\n\t\tunresponsiveProfile?: IExtensionHostProfile\n\t}): { url: string, task?: () => Promise<any> } {\n\n\t\tlet task: (() => Promise<any>) | undefined;\n\t\tlet baseUrl = extension.marketplaceInfo && extension.marketplaceInfo.type === ExtensionType.User && extension.description.repository ? extension.description.repository.url : undefined;\n\t\tif (!!baseUrl) {\n\t\t\tbaseUrl = `${baseUrl.indexOf('.git') !== -1 ? baseUrl.substr(0, baseUrl.length - 4) : baseUrl}/issues/new/`;\n\t\t} else {\n\t\t\tbaseUrl = product.reportIssueUrl;\n\t\t}\n\n\t\tlet title: string;\n\t\tlet message: string;\n\t\tlet reason: string;\n\t\tif (extension.unresponsiveProfile) {\n\t\t\t// unresponsive extension host caused\n\t\t\treason = 'Performance';\n\t\t\ttitle = 'Extension causes high cpu load';\n\t\t\tlet path = join(os.homedir(), `${extension.description.identifier.value}-unresponsive.cpuprofile.txt`);\n\t\t\ttask = async () => {\n\t\t\t\tconst profiler = await import('v8-inspect-profiler');\n\t\t\t\tconst data = profiler.rewriteAbsolutePaths({ profile: <any>extension.unresponsiveProfile!.data }, 'pii_removed');\n\t\t\t\tprofiler.writeProfile(data, path).then(undefined, onUnexpectedError);\n\t\t\t};\n\t\t\tmessage = `:warning: Make sure to **attach** this file from your *home*-directory:\\n:warning:\\`${path}\\`\\n\\nFind more details here: https://github.com/Microsoft/vscode/wiki/Explain:-extension-causes-high-cpu-load`;\n\n\t\t} else {\n\t\t\t// generic\n\t\t\treason = 'Bug';\n\t\t\ttitle = 'Extension issue';\n\t\t\tmessage = ':warning: We have written the needed data into your clipboard. Please paste! :warning:';\n\t\t\tclipboard.writeText('```json \\n' + JSON.stringify(extension.status, null, '\\t') + '\\n```');\n\t\t}\n\n\t\tconst osVersion = `${os.type()} ${os.arch()} ${os.release()}`;\n\t\tconst queryStringPrefix = baseUrl.indexOf('?') === -1 ? '?' : '&';\n\t\tconst body = encodeURIComponent(\n\t\t\t`- Issue Type: \\`${reason}\\`\n- Extension Name: \\`${extension.description.name}\\`\n- Extension Version: \\`${extension.description.version}\\`\n- OS Version: \\`${osVersion}\\`\n- VSCode version: \\`${pkg.version}\\`\\n\\n${message}`\n\t\t);\n\n\t\treturn {\n\t\t\turl: `${baseUrl}${queryStringPrefix}body=${body}&title=${encodeURIComponent(title)}`,\n\t\t\ttask\n\t\t};\n\t}\n}\n\nexport class DebugExtensionHostAction extends Action {\n\tstatic readonly ID = 'workbench.extensions.action.debugExtensionHost';\n\tstatic LABEL = nls.localize('debugExtensionHost', \"Start Debugging Extension Host\");\n\tstatic CSS_CLASS = 'debug-extension-host';\n\n\tconstructor(\n\t\t@IDebugService private readonly _debugService: IDebugService,\n\t\t@IWindowsService private readonly _windowsService: IWindowsService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t) {\n\t\tsuper(DebugExtensionHostAction.ID, DebugExtensionHostAction.LABEL, DebugExtensionHostAction.CSS_CLASS);\n\t}\n\n\tasync run(): Promise<any> {\n\n\t\tconst inspectPort = this._extensionService.getInspectPort();\n\t\tif (!inspectPort) {\n\t\t\tconst res = await this._dialogService.confirm({\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: nls.localize('restart1', \"Profile Extensions\"),\n\t\t\t\tdetail: nls.localize('restart2', \"In order to profile extensions a restart is required. Do you want to restart '{0}' now?\", product.nameLong),\n\t\t\t\tprimaryButton: nls.localize('restart3', \"Restart\"),\n\t\t\t\tsecondaryButton: nls.localize('cancel', \"Cancel\")\n\t\t\t});\n\t\t\tif (res.confirmed) {\n\t\t\t\tthis._windowsService.relaunch({ addArgs: [`--inspect-extensions=${randomPort()}`] });\n\t\t\t}\n\t\t}\n\n\t\treturn this._debugService.startDebugging(undefined, {\n\t\t\ttype: 'node',\n\t\t\tname: nls.localize('debugExtensionHost.launch.name', \"Attach Extension Host\"),\n\t\t\trequest: 'attach',\n\t\t\tport: inspectPort\n\t\t});\n\t}\n}\n\nexport class StartExtensionHostProfileAction extends Action {\n\tstatic readonly ID = 'workbench.extensions.action.extensionHostProfile';\n\tstatic LABEL = nls.localize('extensionHostProfileStart', \"Start Extension Host Profile\");\n\n\tconstructor(\n\t\tid: string = StartExtensionHostProfileAction.ID, label: string = StartExtensionHostProfileAction.LABEL,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis._extensionHostProfileService.startProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class StopExtensionHostProfileAction extends Action {\n\tstatic readonly ID = 'workbench.extensions.action.stopExtensionHostProfile';\n\tstatic LABEL = nls.localize('stopExtensionHostProfileStart', \"Stop Extension Host Profile\");\n\n\tconstructor(\n\t\tid: string = StartExtensionHostProfileAction.ID, label: string = StartExtensionHostProfileAction.LABEL,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tthis._extensionHostProfileService.stopProfiling();\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class SaveExtensionHostProfileAction extends Action {\n\n\tstatic LABEL = nls.localize('saveExtensionHostProfile', \"Save Extension Host Profile\");\n\tstatic readonly ID = 'workbench.extensions.action.saveExtensionHostProfile';\n\n\tconstructor(\n\t\tid: string = SaveExtensionHostProfileAction.ID, label: string = SaveExtensionHostProfileAction.LABEL,\n\t\t@IWindowService private readonly _windowService: IWindowService,\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IExtensionHostProfileService private readonly _extensionHostProfileService: IExtensionHostProfileService,\n\t) {\n\t\tsuper(id, label, undefined, false);\n\t\tthis._extensionHostProfileService.onDidChangeLastProfile(() => {\n\t\t\tthis.enabled = (this._extensionHostProfileService.lastProfile !== null);\n\t\t});\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve(this._asyncRun());\n\t}\n\n\tprivate async _asyncRun(): Promise<any> {\n\t\tlet picked = await this._windowService.showSaveDialog({\n\t\t\ttitle: 'Save Extension Host Profile',\n\t\t\tbuttonLabel: 'Save',\n\t\t\tdefaultPath: `CPU-${new Date().toISOString().replace(/[\\-:]/g, '')}.cpuprofile`,\n\t\t\tfilters: [{\n\t\t\t\tname: 'CPU Profiles',\n\t\t\t\textensions: ['cpuprofile', 'txt']\n\t\t\t}]\n\t\t});\n\n\t\tif (!picked) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst profileInfo = this._extensionHostProfileService.lastProfile;\n\t\tlet dataToWrite: object = profileInfo ? profileInfo.data : {};\n\n\t\tif (this._environmentService.isBuilt) {\n\t\t\tconst profiler = await import('v8-inspect-profiler');\n\t\t\t// when running from a not-development-build we remove\n\t\t\t// absolute filenames because we don't want to reveal anything\n\t\t\t// about users. We also append the `.txt` suffix to make it\n\t\t\t// easier to attach these files to GH issues\n\n\t\t\tlet tmp = profiler.rewriteAbsolutePaths({ profile: dataToWrite as any }, 'piiRemoved');\n\t\t\tdataToWrite = tmp.profile;\n\n\t\t\tpicked = picked + '.txt';\n\t\t}\n\n\t\treturn writeFile(picked, JSON.stringify(profileInfo ? profileInfo.data : {}, null, '\\t'));\n\t}\n}\n"]}]}