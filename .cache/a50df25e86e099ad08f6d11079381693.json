{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/parameterHintsModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/parameterHintsModel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar characterClassifier_1 = require(\"vs/editor/common/core/characterClassifier\");\nvar modes = require(\"vs/editor/common/modes\");\nvar provideSignatureHelp_1 = require(\"vs/editor/contrib/parameterHints/provideSignatureHelp\");\nvar ParameterHintState;\n(function (ParameterHintState) {\n    var Type;\n    (function (Type) {\n        Type[Type[\"Default\"] = 0] = \"Default\";\n        Type[Type[\"Active\"] = 1] = \"Active\";\n        Type[Type[\"Pending\"] = 2] = \"Pending\";\n    })(Type = ParameterHintState.Type || (ParameterHintState.Type = {}));\n    ParameterHintState.Default = new /** @class */ (function () {\n        function class_1() {\n            this.type = Type.Default;\n        }\n        return class_1;\n    }());\n    var Pending = /** @class */ (function () {\n        function Pending(request) {\n            this.request = request;\n            this.type = Type.Pending;\n        }\n        return Pending;\n    }());\n    ParameterHintState.Pending = Pending;\n    var Active = /** @class */ (function () {\n        function Active(hints) {\n            this.hints = hints;\n            this.type = Type.Active;\n        }\n        return Active;\n    }());\n    ParameterHintState.Active = Active;\n})(ParameterHintState || (ParameterHintState = {}));\nvar ParameterHintsModel = /** @class */ (function (_super) {\n    tslib_1.__extends(ParameterHintsModel, _super);\n    function ParameterHintsModel(editor, delay) {\n        if (delay === void 0) { delay = ParameterHintsModel.DEFAULT_DELAY; }\n        var _this = _super.call(this) || this;\n        _this._onChangedHints = _this._register(new event_1.Emitter());\n        _this.onChangedHints = _this._onChangedHints.event;\n        _this._state = ParameterHintState.Default;\n        _this.triggerChars = new characterClassifier_1.CharacterSet();\n        _this.retriggerChars = new characterClassifier_1.CharacterSet();\n        _this.triggerId = 0;\n        _this.editor = editor;\n        _this.enabled = false;\n        _this.throttledDelayer = new async_1.Delayer(delay);\n        _this._register(_this.editor.onDidChangeConfiguration(function () { return _this.onEditorConfigurationChange(); }));\n        _this._register(_this.editor.onDidChangeModel(function (e) { return _this.onModelChanged(); }));\n        _this._register(_this.editor.onDidChangeModelLanguage(function (_) { return _this.onModelChanged(); }));\n        _this._register(_this.editor.onDidChangeCursorSelection(function (e) { return _this.onCursorChange(e); }));\n        _this._register(_this.editor.onDidChangeModelContent(function (e) { return _this.onModelContentChange(); }));\n        _this._register(modes.SignatureHelpProviderRegistry.onDidChange(_this.onModelChanged, _this));\n        _this._register(_this.editor.onDidType(function (text) { return _this.onDidType(text); }));\n        _this.onEditorConfigurationChange();\n        _this.onModelChanged();\n        return _this;\n    }\n    Object.defineProperty(ParameterHintsModel.prototype, \"state\", {\n        get: function () { return this._state; },\n        set: function (value) {\n            if (this._state.type === ParameterHintState.Type.Pending) {\n                this._state.request.cancel();\n            }\n            this._state = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParameterHintsModel.prototype.cancel = function (silent) {\n        if (silent === void 0) { silent = false; }\n        this.state = ParameterHintState.Default;\n        this.throttledDelayer.cancel();\n        if (!silent) {\n            this._onChangedHints.fire(undefined);\n        }\n    };\n    ParameterHintsModel.prototype.trigger = function (context, delay) {\n        var _this = this;\n        var model = this.editor.getModel();\n        if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\n            return;\n        }\n        var triggerId = ++this.triggerId;\n        this.throttledDelayer.trigger(function () { return _this.doTrigger({\n            triggerKind: context.triggerKind,\n            triggerCharacter: context.triggerCharacter,\n            isRetrigger: _this.state.type === ParameterHintState.Type.Active || _this.state.type === ParameterHintState.Type.Pending,\n            activeSignatureHelp: _this.state.type === ParameterHintState.Type.Active ? _this.state.hints : undefined\n        }, triggerId); }, delay).then(undefined, errors_1.onUnexpectedError);\n    };\n    ParameterHintsModel.prototype.next = function () {\n        if (this.state.type !== ParameterHintState.Type.Active) {\n            return;\n        }\n        var length = this.state.hints.signatures.length;\n        var activeSignature = this.state.hints.activeSignature;\n        var last = (activeSignature % length) === (length - 1);\n        var cycle = this.editor.getConfiguration().contribInfo.parameterHints.cycle;\n        // If there is only one signature, or we're on last signature of list\n        if ((length < 2 || last) && !cycle) {\n            this.cancel();\n            return;\n        }\n        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\n    };\n    ParameterHintsModel.prototype.previous = function () {\n        if (this.state.type !== ParameterHintState.Type.Active) {\n            return;\n        }\n        var length = this.state.hints.signatures.length;\n        var activeSignature = this.state.hints.activeSignature;\n        var first = activeSignature === 0;\n        var cycle = this.editor.getConfiguration().contribInfo.parameterHints.cycle;\n        // If there is only one signature, or we're on first signature of list\n        if ((length < 2 || first) && !cycle) {\n            this.cancel();\n            return;\n        }\n        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\n    };\n    ParameterHintsModel.prototype.updateActiveSignature = function (activeSignature) {\n        if (this.state.type !== ParameterHintState.Type.Active) {\n            return;\n        }\n        this.state = new ParameterHintState.Active(tslib_1.__assign({}, this.state.hints, { activeSignature: activeSignature }));\n        this._onChangedHints.fire(this.state.hints);\n    };\n    ParameterHintsModel.prototype.doTrigger = function (triggerContext, triggerId) {\n        var _this = this;\n        this.cancel(true);\n        if (!this.editor.hasModel()) {\n            return Promise.resolve(false);\n        }\n        var model = this.editor.getModel();\n        var position = this.editor.getPosition();\n        this.state = new ParameterHintState.Pending(async_1.createCancelablePromise(function (token) {\n            return provideSignatureHelp_1.provideSignatureHelp(model, position, triggerContext, token);\n        }));\n        return this.state.request.then(function (result) {\n            // Check that we are still resolving the correct signature help\n            if (triggerId !== _this.triggerId) {\n                return false;\n            }\n            if (!result || !result.signatures || result.signatures.length === 0) {\n                _this.cancel();\n                return false;\n            }\n            else {\n                _this.state = new ParameterHintState.Active(result);\n                _this._onChangedHints.fire(_this.state.hints);\n                return true;\n            }\n        }).catch(function (error) {\n            if (triggerId === _this.triggerId) {\n                _this.state = ParameterHintState.Default;\n            }\n            errors_1.onUnexpectedError(error);\n            return false;\n        });\n    };\n    Object.defineProperty(ParameterHintsModel.prototype, \"isTriggered\", {\n        get: function () {\n            return this.state.type === ParameterHintState.Type.Active\n                || this.state.type === ParameterHintState.Type.Pending\n                || this.throttledDelayer.isTriggered();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ParameterHintsModel.prototype.onModelChanged = function () {\n        this.cancel();\n        // Update trigger characters\n        this.triggerChars = new characterClassifier_1.CharacterSet();\n        this.retriggerChars = new characterClassifier_1.CharacterSet();\n        var model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        for (var _i = 0, _a = modes.SignatureHelpProviderRegistry.ordered(model); _i < _a.length; _i++) {\n            var support = _a[_i];\n            for (var _b = 0, _c = support.signatureHelpTriggerCharacters || []; _b < _c.length; _b++) {\n                var ch = _c[_b];\n                this.triggerChars.add(ch.charCodeAt(0));\n                // All trigger characters are also considered retrigger characters\n                this.retriggerChars.add(ch.charCodeAt(0));\n            }\n            for (var _d = 0, _e = support.signatureHelpRetriggerCharacters || []; _d < _e.length; _d++) {\n                var ch = _e[_d];\n                this.retriggerChars.add(ch.charCodeAt(0));\n            }\n        }\n    };\n    ParameterHintsModel.prototype.onDidType = function (text) {\n        if (!this.enabled) {\n            return;\n        }\n        var lastCharIndex = text.length - 1;\n        var triggerCharCode = text.charCodeAt(lastCharIndex);\n        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\n            this.trigger({\n                triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\n                triggerCharacter: text.charAt(lastCharIndex),\n            });\n        }\n    };\n    ParameterHintsModel.prototype.onCursorChange = function (e) {\n        if (e.source === 'mouse') {\n            this.cancel();\n        }\n        else if (this.isTriggered) {\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\n        }\n    };\n    ParameterHintsModel.prototype.onModelContentChange = function () {\n        if (this.isTriggered) {\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\n        }\n    };\n    ParameterHintsModel.prototype.onEditorConfigurationChange = function () {\n        this.enabled = this.editor.getConfiguration().contribInfo.parameterHints.enabled;\n        if (!this.enabled) {\n            this.cancel();\n        }\n    };\n    ParameterHintsModel.prototype.dispose = function () {\n        this.cancel(true);\n        _super.prototype.dispose.call(this);\n    };\n    ParameterHintsModel.DEFAULT_DELAY = 120; // ms\n    return ParameterHintsModel;\n}(lifecycle_1.Disposable));\nexports.ParameterHintsModel = ParameterHintsModel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/parameterHintsModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/parameterHintsModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { ICursorSelectionChangedEvent } from 'vs/editor/common/controller/cursorEvents';\nimport { CharacterSet } from 'vs/editor/common/core/characterClassifier';\nimport * as modes from 'vs/editor/common/modes';\nimport { provideSignatureHelp } from 'vs/editor/contrib/parameterHints/provideSignatureHelp';\n\nexport interface TriggerContext {\n\treadonly triggerKind: modes.SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n}\n\nnamespace ParameterHintState {\n\texport const enum Type {\n\t\tDefault,\n\t\tActive,\n\t\tPending,\n\t}\n\n\texport const Default = new class { readonly type = Type.Default; };\n\n\texport class Pending {\n\t\treadonly type = Type.Pending;\n\t\tconstructor(\n\t\t\treadonly request: CancelablePromise<any>\n\t\t) { }\n\t}\n\n\texport class Active {\n\t\treadonly type = Type.Active;\n\t\tconstructor(\n\t\t\treadonly hints: modes.SignatureHelp\n\t\t) { }\n\t}\n\n\texport type State = typeof Default | Pending | Active;\n}\n\nexport class ParameterHintsModel extends Disposable {\n\n\tprivate static readonly DEFAULT_DELAY = 120; // ms\n\n\tprivate readonly _onChangedHints = this._register(new Emitter<modes.SignatureHelp | undefined>());\n\tpublic readonly onChangedHints = this._onChangedHints.event;\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate enabled: boolean;\n\tprivate _state: ParameterHintState.State = ParameterHintState.Default;\n\tprivate triggerChars = new CharacterSet();\n\tprivate retriggerChars = new CharacterSet();\n\n\tprivate readonly throttledDelayer: Delayer<boolean>;\n\tprivate triggerId = 0;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tdelay: number = ParameterHintsModel.DEFAULT_DELAY\n\t) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\t\tthis.enabled = false;\n\n\t\tthis.throttledDelayer = new Delayer(delay);\n\n\t\tthis._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\n\t\tthis._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\n\t\tthis._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\n\t\tthis._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\n\t\tthis._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\n\t\tthis._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\n\t\tthis._register(this.editor.onDidType(text => this.onDidType(text)));\n\n\t\tthis.onEditorConfigurationChange();\n\t\tthis.onModelChanged();\n\t}\n\n\tprivate get state() { return this._state; }\n\tprivate set state(value: ParameterHintState.State) {\n\t\tif (this._state.type === ParameterHintState.Type.Pending) {\n\t\t\tthis._state.request.cancel();\n\t\t}\n\t\tthis._state = value;\n\t}\n\n\tcancel(silent: boolean = false): void {\n\n\t\tthis.state = ParameterHintState.Default;\n\n\t\tthis.throttledDelayer.cancel();\n\n\t\tif (!silent) {\n\t\t\tthis._onChangedHints.fire(undefined);\n\t\t}\n\t}\n\n\ttrigger(context: TriggerContext, delay?: number): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst triggerId = ++this.triggerId;\n\t\tthis.throttledDelayer.trigger(\n\t\t\t() => this.doTrigger({\n\t\t\t\ttriggerKind: context.triggerKind,\n\t\t\t\ttriggerCharacter: context.triggerCharacter,\n\t\t\t\tisRetrigger: this.state.type === ParameterHintState.Type.Active || this.state.type === ParameterHintState.Type.Pending,\n\t\t\t\tactiveSignatureHelp: this.state.type === ParameterHintState.Type.Active ? this.state.hints : undefined\n\t\t\t}, triggerId), delay).then(undefined, onUnexpectedError);\n\t}\n\n\tpublic next(): void {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst length = this.state.hints.signatures.length;\n\t\tconst activeSignature = this.state.hints.activeSignature;\n\t\tconst last = (activeSignature % length) === (length - 1);\n\t\tconst cycle = this.editor.getConfiguration().contribInfo.parameterHints.cycle;\n\n\t\t// If there is only one signature, or we're on last signature of list\n\t\tif ((length < 2 || last) && !cycle) {\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\n\t}\n\n\tpublic previous(): void {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst length = this.state.hints.signatures.length;\n\t\tconst activeSignature = this.state.hints.activeSignature;\n\t\tconst first = activeSignature === 0;\n\t\tconst cycle = this.editor.getConfiguration().contribInfo.parameterHints.cycle;\n\n\t\t// If there is only one signature, or we're on first signature of list\n\t\tif ((length < 2 || first) && !cycle) {\n\t\t\tthis.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\n\t}\n\n\tprivate updateActiveSignature(activeSignature: number) {\n\t\tif (this.state.type !== ParameterHintState.Type.Active) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = new ParameterHintState.Active({ ...this.state.hints, activeSignature });\n\t\tthis._onChangedHints.fire(this.state.hints);\n\t}\n\n\tprivate doTrigger(triggerContext: modes.SignatureHelpContext, triggerId: number): Promise<boolean> {\n\t\tthis.cancel(true);\n\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tconst model = this.editor.getModel();\n\t\tconst position = this.editor.getPosition();\n\n\t\tthis.state = new ParameterHintState.Pending(createCancelablePromise(token =>\n\t\t\tprovideSignatureHelp(model, position, triggerContext, token)));\n\n\t\treturn this.state.request.then(result => {\n\t\t\t// Check that we are still resolving the correct signature help\n\t\t\tif (triggerId !== this.triggerId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!result || !result.signatures || result.signatures.length === 0) {\n\t\t\t\tthis.cancel();\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tthis.state = new ParameterHintState.Active(result);\n\t\t\t\tthis._onChangedHints.fire(this.state.hints);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\tif (triggerId === this.triggerId) {\n\t\t\t\tthis.state = ParameterHintState.Default;\n\t\t\t}\n\t\t\tonUnexpectedError(error);\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate get isTriggered(): boolean {\n\t\treturn this.state.type === ParameterHintState.Type.Active\n\t\t\t|| this.state.type === ParameterHintState.Type.Pending\n\t\t\t|| this.throttledDelayer.isTriggered();\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tthis.cancel();\n\n\t\t// Update trigger characters\n\t\tthis.triggerChars = new CharacterSet();\n\t\tthis.retriggerChars = new CharacterSet();\n\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\n\t\t\tfor (const ch of support.signatureHelpTriggerCharacters || []) {\n\t\t\t\tthis.triggerChars.add(ch.charCodeAt(0));\n\n\t\t\t\t// All trigger characters are also considered retrigger characters\n\t\t\t\tthis.retriggerChars.add(ch.charCodeAt(0));\n\t\t\t}\n\n\t\t\tfor (const ch of support.signatureHelpRetriggerCharacters || []) {\n\t\t\t\tthis.retriggerChars.add(ch.charCodeAt(0));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidType(text: string) {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastCharIndex = text.length - 1;\n\t\tconst triggerCharCode = text.charCodeAt(lastCharIndex);\n\n\t\tif (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\n\t\t\tthis.trigger({\n\t\t\t\ttriggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\n\t\t\t\ttriggerCharacter: text.charAt(lastCharIndex),\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onCursorChange(e: ICursorSelectionChangedEvent): void {\n\t\tif (e.source === 'mouse') {\n\t\t\tthis.cancel();\n\t\t} else if (this.isTriggered) {\n\t\t\tthis.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\n\t\t}\n\t}\n\n\tprivate onModelContentChange(): void {\n\t\tif (this.isTriggered) {\n\t\t\tthis.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\n\t\t}\n\t}\n\n\tprivate onEditorConfigurationChange(): void {\n\t\tthis.enabled = this.editor.getConfiguration().contribInfo.parameterHints.enabled;\n\n\t\tif (!this.enabled) {\n\t\t\tthis.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel(true);\n\t\tsuper.dispose();\n\t}\n}"]}]}