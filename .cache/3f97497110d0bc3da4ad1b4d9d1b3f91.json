{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/goToDefinitionMouse.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/goToDefinitionMouse.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./goToDefinitionMouse\");\nvar nls = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar htmlContent_1 = require(\"vs/base/common/htmlContent\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar goToDefinition_1 = require(\"./goToDefinition\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar editorState_1 = require(\"vs/editor/browser/core/editorState\");\nvar goToDefinitionCommands_1 = require(\"./goToDefinitionCommands\");\nvar clickLinkGesture_1 = require(\"vs/editor/contrib/goToDefinition/clickLinkGesture\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar types_1 = require(\"vs/base/common/types\");\nvar GotoDefinitionWithMouseEditorContribution = /** @class */ (function () {\n    function GotoDefinitionWithMouseEditorContribution(editor, textModelResolverService, modeService) {\n        var _this = this;\n        this.textModelResolverService = textModelResolverService;\n        this.modeService = modeService;\n        this.toUnhook = [];\n        this.decorations = [];\n        this.editor = editor;\n        this.previousPromise = null;\n        var linkGesture = new clickLinkGesture_1.ClickLinkGesture(editor);\n        this.toUnhook.push(linkGesture);\n        this.toUnhook.push(linkGesture.onMouseMoveOrRelevantKeyDown(function (_a) {\n            var mouseEvent = _a[0], keyboardEvent = _a[1];\n            _this.startFindDefinition(mouseEvent, types_1.withNullAsUndefined(keyboardEvent));\n        }));\n        this.toUnhook.push(linkGesture.onExecute(function (mouseEvent) {\n            if (_this.isEnabled(mouseEvent)) {\n                _this.gotoDefinition(mouseEvent.target, mouseEvent.hasSideBySideModifier).then(function () {\n                    _this.removeDecorations();\n                }, function (error) {\n                    _this.removeDecorations();\n                    errors_1.onUnexpectedError(error);\n                });\n            }\n        }));\n        this.toUnhook.push(linkGesture.onCancel(function () {\n            _this.removeDecorations();\n            _this.currentWordUnderMouse = null;\n        }));\n    }\n    GotoDefinitionWithMouseEditorContribution.prototype.startFindDefinition = function (mouseEvent, withKey) {\n        var _this = this;\n        // check if we are active and on a content widget\n        if (mouseEvent.target.type === editorBrowser_1.MouseTargetType.CONTENT_WIDGET && this.decorations.length > 0) {\n            return;\n        }\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n            this.currentWordUnderMouse = null;\n            this.removeDecorations();\n            return;\n        }\n        // Find word at mouse position\n        var word = mouseEvent.target.position ? this.editor.getModel().getWordAtPosition(mouseEvent.target.position) : null;\n        if (!word) {\n            this.currentWordUnderMouse = null;\n            this.removeDecorations();\n            return;\n        }\n        var position = mouseEvent.target.position;\n        // Return early if word at position is still the same\n        if (this.currentWordUnderMouse && this.currentWordUnderMouse.startColumn === word.startColumn && this.currentWordUnderMouse.endColumn === word.endColumn && this.currentWordUnderMouse.word === word.word) {\n            return;\n        }\n        this.currentWordUnderMouse = word;\n        // Find definition and decorate word if found\n        var state = new editorState_1.EditorState(this.editor, editorState_1.CodeEditorStateFlag.Position | editorState_1.CodeEditorStateFlag.Value | editorState_1.CodeEditorStateFlag.Selection | editorState_1.CodeEditorStateFlag.Scroll);\n        if (this.previousPromise) {\n            this.previousPromise.cancel();\n            this.previousPromise = null;\n        }\n        this.previousPromise = async_1.createCancelablePromise(function (token) { return _this.findDefinition(mouseEvent.target, token); });\n        this.previousPromise.then(function (results) {\n            if (!results || !results.length || !state.validate(_this.editor)) {\n                _this.removeDecorations();\n                return;\n            }\n            // Multiple results\n            if (results.length > 1) {\n                _this.addDecoration(new range_1.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new htmlContent_1.MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\n            }\n            // Single result\n            else {\n                var result_1 = results[0];\n                if (!result_1.uri) {\n                    return;\n                }\n                _this.textModelResolverService.createModelReference(result_1.uri).then(function (ref) {\n                    if (!ref.object || !ref.object.textEditorModel) {\n                        ref.dispose();\n                        return;\n                    }\n                    var textEditorModel = ref.object.textEditorModel;\n                    var startLineNumber = result_1.range.startLineNumber;\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n                        // invalid range\n                        ref.dispose();\n                        return;\n                    }\n                    var previewValue = _this.getPreviewValue(textEditorModel, startLineNumber);\n                    var wordRange;\n                    if (result_1.originSelectionRange) {\n                        wordRange = range_1.Range.lift(result_1.originSelectionRange);\n                    }\n                    else {\n                        wordRange = new range_1.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n                    }\n                    var modeId = _this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri.fsPath);\n                    _this.addDecoration(wordRange, new htmlContent_1.MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\n                    ref.dispose();\n                });\n            }\n        }).then(undefined, errors_1.onUnexpectedError);\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.getPreviewValue = function (textEditorModel, startLineNumber) {\n        var rangeToUse = this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\n        var numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n        if (numberOfLinesInRange >= GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n        }\n        var previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n        return previewValue;\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.stripIndentationFromPreviewRange = function (textEditorModel, startLineNumber, previewRange) {\n        var startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n        var minIndent = startIndent;\n        for (var endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n            var endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n            minIndent = Math.min(minIndent, endIndent);\n        }\n        var previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(\"^\\\\s{\" + (minIndent - 1) + \"}\", 'gm'), '').trim();\n        return previewValue;\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.getPreviewRangeBasedOnIndentation = function (textEditorModel, startLineNumber) {\n        var startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n        var maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n        var endLineNumber = startLineNumber + 1;\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\n            var endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n            if (startIndent === endIndent) {\n                break;\n            }\n        }\n        return new range_1.Range(startLineNumber, 1, endLineNumber + 1, 1);\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.getPreviewRangeBasedOnBrackets = function (textEditorModel, startLineNumber) {\n        var maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n        var brackets = [];\n        var ignoreFirstEmpty = true;\n        var currentBracket = textEditorModel.findNextBracket(new position_1.Position(startLineNumber, 1));\n        while (currentBracket !== null) {\n            if (brackets.length === 0) {\n                brackets.push(currentBracket);\n            }\n            else {\n                var lastBracket = brackets[brackets.length - 1];\n                if (lastBracket.open === currentBracket.open && lastBracket.isOpen && !currentBracket.isOpen) {\n                    brackets.pop();\n                }\n                else {\n                    brackets.push(currentBracket);\n                }\n                if (brackets.length === 0) {\n                    if (ignoreFirstEmpty) {\n                        ignoreFirstEmpty = false;\n                    }\n                    else {\n                        return new range_1.Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\n                    }\n                }\n            }\n            var maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\n            var nextLineNumber = currentBracket.range.endLineNumber;\n            var nextColumn = currentBracket.range.endColumn;\n            if (maxColumn === currentBracket.range.endColumn) {\n                nextLineNumber++;\n                nextColumn = 1;\n            }\n            if (nextLineNumber > maxLineNumber) {\n                return new range_1.Range(startLineNumber, 1, maxLineNumber + 1, 1);\n            }\n            currentBracket = textEditorModel.findNextBracket(new position_1.Position(nextLineNumber, nextColumn));\n        }\n        return new range_1.Range(startLineNumber, 1, maxLineNumber + 1, 1);\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.addDecoration = function (range, hoverMessage) {\n        var newDecorations = {\n            range: range,\n            options: {\n                inlineClassName: 'goto-definition-link',\n                hoverMessage: hoverMessage\n            }\n        };\n        this.decorations = this.editor.deltaDecorations(this.decorations, [newDecorations]);\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.removeDecorations = function () {\n        if (this.decorations.length > 0) {\n            this.decorations = this.editor.deltaDecorations(this.decorations, []);\n        }\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.isEnabled = function (mouseEvent, withKey) {\n        return this.editor.hasModel() &&\n            mouseEvent.isNoneOrSingleMouseDown &&\n            (mouseEvent.target.type === editorBrowser_1.MouseTargetType.CONTENT_TEXT) &&\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\n            modes_1.DefinitionProviderRegistry.has(this.editor.getModel());\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.findDefinition = function (target, token) {\n        var model = this.editor.getModel();\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return goToDefinition_1.getDefinitionsAtPosition(model, target.position, token);\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.gotoDefinition = function (target, sideBySide) {\n        var _this = this;\n        this.editor.setPosition(target.position);\n        var action = new goToDefinitionCommands_1.DefinitionAction(new goToDefinitionCommands_1.DefinitionActionConfig(sideBySide, false, true, false), { alias: '', label: '', id: '', precondition: null });\n        return this.editor.invokeWithinContext(function (accessor) { return action.run(accessor, _this.editor); });\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.getId = function () {\n        return GotoDefinitionWithMouseEditorContribution.ID;\n    };\n    GotoDefinitionWithMouseEditorContribution.prototype.dispose = function () {\n        this.toUnhook = lifecycle_1.dispose(this.toUnhook);\n    };\n    GotoDefinitionWithMouseEditorContribution.ID = 'editor.contrib.gotodefinitionwithmouse';\n    GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\n    GotoDefinitionWithMouseEditorContribution = tslib_1.__decorate([\n        tslib_1.__param(1, resolverService_1.ITextModelService),\n        tslib_1.__param(2, modeService_1.IModeService)\n    ], GotoDefinitionWithMouseEditorContribution);\n    return GotoDefinitionWithMouseEditorContribution;\n}());\neditorExtensions_1.registerEditorContribution(GotoDefinitionWithMouseEditorContribution);\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var activeLinkForeground = theme.getColor(colorRegistry_1.editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(\".monaco-editor .goto-definition-link { color: \" + activeLinkForeground + \" !important; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/goToDefinitionMouse.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/goToDefinition/goToDefinitionMouse.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./goToDefinitionMouse';\nimport * as nls from 'vs/nls';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { DefinitionProviderRegistry, LocationLink } from 'vs/editor/common/modes';\nimport { ICodeEditor, IMouseTarget, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { getDefinitionsAtPosition } from './goToDefinition';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { editorActiveLinkForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { EditorState, CodeEditorStateFlag } from 'vs/editor/browser/core/editorState';\nimport { DefinitionAction, DefinitionActionConfig } from './goToDefinitionCommands';\nimport { ClickLinkGesture, ClickLinkMouseEvent, ClickLinkKeyboardEvent } from 'vs/editor/contrib/goToDefinition/clickLinkGesture';\nimport { IWordAtPosition, IModelDeltaDecoration, ITextModel, IFoundBracket } from 'vs/editor/common/model';\nimport { Position } from 'vs/editor/common/core/position';\nimport { withNullAsUndefined } from 'vs/base/common/types';\n\nclass GotoDefinitionWithMouseEditorContribution implements editorCommon.IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.gotodefinitionwithmouse';\n\tstatic MAX_SOURCE_PREVIEW_LINES = 8;\n\n\tprivate readonly editor: ICodeEditor;\n\tprivate toUnhook: IDisposable[];\n\tprivate decorations: string[];\n\tprivate currentWordUnderMouse: IWordAtPosition | null;\n\tprivate previousPromise: CancelablePromise<LocationLink[] | null> | null;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@IModeService private readonly modeService: IModeService\n\t) {\n\t\tthis.toUnhook = [];\n\t\tthis.decorations = [];\n\t\tthis.editor = editor;\n\t\tthis.previousPromise = null;\n\n\t\tlet linkGesture = new ClickLinkGesture(editor);\n\t\tthis.toUnhook.push(linkGesture);\n\n\t\tthis.toUnhook.push(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n\t\t\tthis.startFindDefinition(mouseEvent, withNullAsUndefined(keyboardEvent));\n\t\t}));\n\n\t\tthis.toUnhook.push(linkGesture.onExecute((mouseEvent: ClickLinkMouseEvent) => {\n\t\t\tif (this.isEnabled(mouseEvent)) {\n\t\t\t\tthis.gotoDefinition(mouseEvent.target, mouseEvent.hasSideBySideModifier).then(() => {\n\t\t\t\t\tthis.removeDecorations();\n\t\t\t\t}, (error: Error) => {\n\t\t\t\t\tthis.removeDecorations();\n\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis.toUnhook.push(linkGesture.onCancel(() => {\n\t\t\tthis.removeDecorations();\n\t\t\tthis.currentWordUnderMouse = null;\n\t\t}));\n\n\t}\n\n\tprivate startFindDefinition(mouseEvent: ClickLinkMouseEvent, withKey?: ClickLinkKeyboardEvent): void {\n\n\t\t// check if we are active and on a content widget\n\t\tif (mouseEvent.target.type === MouseTargetType.CONTENT_WIDGET && this.decorations.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\n\t\t\tthis.currentWordUnderMouse = null;\n\t\t\tthis.removeDecorations();\n\t\t\treturn;\n\t\t}\n\n\t\t// Find word at mouse position\n\t\tconst word = mouseEvent.target.position ? this.editor.getModel().getWordAtPosition(mouseEvent.target.position) : null;\n\t\tif (!word) {\n\t\t\tthis.currentWordUnderMouse = null;\n\t\t\tthis.removeDecorations();\n\t\t\treturn;\n\t\t}\n\t\tconst position = mouseEvent.target.position!;\n\n\t\t// Return early if word at position is still the same\n\t\tif (this.currentWordUnderMouse && this.currentWordUnderMouse.startColumn === word.startColumn && this.currentWordUnderMouse.endColumn === word.endColumn && this.currentWordUnderMouse.word === word.word) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentWordUnderMouse = word;\n\n\t\t// Find definition and decorate word if found\n\t\tlet state = new EditorState(this.editor, CodeEditorStateFlag.Position | CodeEditorStateFlag.Value | CodeEditorStateFlag.Selection | CodeEditorStateFlag.Scroll);\n\n\t\tif (this.previousPromise) {\n\t\t\tthis.previousPromise.cancel();\n\t\t\tthis.previousPromise = null;\n\t\t}\n\n\t\tthis.previousPromise = createCancelablePromise(token => this.findDefinition(mouseEvent.target, token));\n\n\t\tthis.previousPromise.then(results => {\n\t\t\tif (!results || !results.length || !state.validate(this.editor)) {\n\t\t\t\tthis.removeDecorations();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Multiple results\n\t\t\tif (results.length > 1) {\n\t\t\t\tthis.addDecoration(\n\t\t\t\t\tnew Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn),\n\t\t\t\t\tnew MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Single result\n\t\t\telse {\n\t\t\t\tlet result = results[0];\n\n\t\t\t\tif (!result.uri) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.textModelResolverService.createModelReference(result.uri).then(ref => {\n\n\t\t\t\t\tif (!ref.object || !ref.object.textEditorModel) {\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { object: { textEditorModel } } = ref;\n\t\t\t\t\tconst { startLineNumber } = result.range;\n\n\t\t\t\t\tif (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\n\t\t\t\t\t\t// invalid range\n\t\t\t\t\t\tref.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst previewValue = this.getPreviewValue(textEditorModel, startLineNumber);\n\n\t\t\t\t\tlet wordRange: Range;\n\t\t\t\t\tif (result.originSelectionRange) {\n\t\t\t\t\t\twordRange = Range.lift(result.originSelectionRange);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri.fsPath);\n\t\t\t\t\tthis.addDecoration(\n\t\t\t\t\t\twordRange,\n\t\t\t\t\t\tnew MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue)\n\t\t\t\t\t);\n\t\t\t\t\tref.dispose();\n\t\t\t\t});\n\t\t\t}\n\t\t}).then(undefined, onUnexpectedError);\n\t}\n\n\tprivate getPreviewValue(textEditorModel: ITextModel, startLineNumber: number) {\n\t\tlet rangeToUse = this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\n\t\tconst numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\n\t\tif (numberOfLinesInRange >= GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\n\t\t\trangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\n\t\t}\n\n\t\tconst previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\n\t\treturn previewValue;\n\t}\n\n\tprivate stripIndentationFromPreviewRange(textEditorModel: ITextModel, startLineNumber: number, previewRange: Range) {\n\t\tconst startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\t\tlet minIndent = startIndent;\n\n\t\tfor (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\n\t\t\tconst endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n\t\t\tminIndent = Math.min(minIndent, endIndent);\n\t\t}\n\n\t\tconst previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\n\t\treturn previewValue;\n\t}\n\n\tprivate getPreviewRangeBasedOnIndentation(textEditorModel: ITextModel, startLineNumber: number) {\n\t\tconst startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n\t\tconst maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n\t\tlet endLineNumber = startLineNumber + 1;\n\n\t\tfor (; endLineNumber < maxLineNumber; endLineNumber++) {\n\t\t\tlet endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\n\n\t\t\tif (startIndent === endIndent) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new Range(startLineNumber, 1, endLineNumber + 1, 1);\n\t}\n\n\tprivate getPreviewRangeBasedOnBrackets(textEditorModel: ITextModel, startLineNumber: number) {\n\t\tconst maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionWithMouseEditorContribution.MAX_SOURCE_PREVIEW_LINES);\n\n\t\tconst brackets: IFoundBracket[] = [];\n\n\t\tlet ignoreFirstEmpty = true;\n\t\tlet currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\n\t\twhile (currentBracket !== null) {\n\n\t\t\tif (brackets.length === 0) {\n\t\t\t\tbrackets.push(currentBracket);\n\t\t\t} else {\n\t\t\t\tconst lastBracket = brackets[brackets.length - 1];\n\t\t\t\tif (lastBracket.open === currentBracket.open && lastBracket.isOpen && !currentBracket.isOpen) {\n\t\t\t\t\tbrackets.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbrackets.push(currentBracket);\n\t\t\t\t}\n\n\t\t\t\tif (brackets.length === 0) {\n\t\t\t\t\tif (ignoreFirstEmpty) {\n\t\t\t\t\t\tignoreFirstEmpty = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\n\t\t\tlet nextLineNumber = currentBracket.range.endLineNumber;\n\t\t\tlet nextColumn = currentBracket.range.endColumn;\n\t\t\tif (maxColumn === currentBracket.range.endColumn) {\n\t\t\t\tnextLineNumber++;\n\t\t\t\tnextColumn = 1;\n\t\t\t}\n\n\t\t\tif (nextLineNumber > maxLineNumber) {\n\t\t\t\treturn new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n\t\t\t}\n\n\t\t\tcurrentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\n\t\t}\n\n\t\treturn new Range(startLineNumber, 1, maxLineNumber + 1, 1);\n\t}\n\n\tprivate addDecoration(range: Range, hoverMessage: MarkdownString): void {\n\n\t\tconst newDecorations: IModelDeltaDecoration = {\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tinlineClassName: 'goto-definition-link',\n\t\t\t\thoverMessage\n\t\t\t}\n\t\t};\n\n\t\tthis.decorations = this.editor.deltaDecorations(this.decorations, [newDecorations]);\n\t}\n\n\tprivate removeDecorations(): void {\n\t\tif (this.decorations.length > 0) {\n\t\t\tthis.decorations = this.editor.deltaDecorations(this.decorations, []);\n\t\t}\n\t}\n\n\tprivate isEnabled(mouseEvent: ClickLinkMouseEvent, withKey?: ClickLinkKeyboardEvent): boolean {\n\t\treturn this.editor.hasModel() &&\n\t\t\tmouseEvent.isNoneOrSingleMouseDown &&\n\t\t\t(mouseEvent.target.type === MouseTargetType.CONTENT_TEXT) &&\n\t\t\t(mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\n\t\t\tDefinitionProviderRegistry.has(this.editor.getModel());\n\t}\n\n\tprivate findDefinition(target: IMouseTarget, token: CancellationToken): Promise<LocationLink[] | null> {\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn getDefinitionsAtPosition(model, target.position!, token);\n\t}\n\n\tprivate gotoDefinition(target: IMouseTarget, sideBySide: boolean): Promise<any> {\n\t\tthis.editor.setPosition(target.position!);\n\t\tconst action = new DefinitionAction(new DefinitionActionConfig(sideBySide, false, true, false), { alias: '', label: '', id: '', precondition: null });\n\t\treturn this.editor.invokeWithinContext(accessor => action.run(accessor, this.editor));\n\t}\n\n\tpublic getId(): string {\n\t\treturn GotoDefinitionWithMouseEditorContribution.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toUnhook = dispose(this.toUnhook);\n\t}\n}\n\nregisterEditorContribution(GotoDefinitionWithMouseEditorContribution);\n\nregisterThemingParticipant((theme, collector) => {\n\tconst activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n\tif (activeLinkForeground) {\n\t\tcollector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\n\t}\n});\n"]}]}