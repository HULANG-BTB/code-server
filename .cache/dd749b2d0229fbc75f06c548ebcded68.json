{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar crypto = require(\"crypto\");\nvar paths = require(\"vs/base/node/paths\");\nvar os = require(\"os\");\nvar path = require(\"vs/base/common/path\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar package_1 = require(\"vs/platform/product/node/package\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar date_1 = require(\"vs/base/common/date\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar amd_1 = require(\"vs/base/common/amd\");\nvar uri_1 = require(\"vs/base/common/uri\");\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nvar xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\nfunction getNixIPCHandle(userDataPath, type) {\n    if (xdgRuntimeDir) {\n        var scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n        return path.join(xdgRuntimeDir, \"vscode-\" + scope + \"-\" + package_1.default.version + \"-\" + type + \".sock\");\n    }\n    return path.join(userDataPath, package_1.default.version + \"-\" + type + \".sock\");\n}\nfunction getWin32IPCHandle(userDataPath, type) {\n    var scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n    return \"\\\\\\\\.\\\\pipe\\\\\" + scope + \"-\" + package_1.default.version + \"-\" + type + \"-sock\";\n}\nfunction getIPCHandle(userDataPath, type) {\n    if (platform_1.isWindows) {\n        return getWin32IPCHandle(userDataPath, type);\n    }\n    return getNixIPCHandle(userDataPath, type);\n}\nfunction getCLIPath(execPath, appRoot, isBuilt) {\n    // Windows\n    if (platform_1.isWindows) {\n        if (isBuilt) {\n            return path.join(path.dirname(execPath), 'bin', product_1.default.applicationName + \".cmd\");\n        }\n        return path.join(appRoot, 'scripts', 'code-cli.bat');\n    }\n    // Linux\n    if (platform_1.isLinux) {\n        if (isBuilt) {\n            return path.join(path.dirname(execPath), 'bin', \"\" + product_1.default.applicationName);\n        }\n        return path.join(appRoot, 'scripts', 'code-cli.sh');\n    }\n    // macOS\n    if (isBuilt) {\n        return path.join(appRoot, 'bin', 'code');\n    }\n    return path.join(appRoot, 'scripts', 'code-cli.sh');\n}\nvar EnvironmentService = /** @class */ (function () {\n    function EnvironmentService(_args, _execPath) {\n        this._args = _args;\n        this._execPath = _execPath;\n        if (!process.env['VSCODE_LOGS']) {\n            var key = date_1.toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n            process.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n        }\n        this.logsPath = process.env['VSCODE_LOGS'];\n    }\n    Object.defineProperty(EnvironmentService.prototype, \"args\", {\n        get: function () { return this._args; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appRoot\", {\n        get: function () { return path.dirname(amd_1.getPathFromAmdModule(require, '')); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"execPath\", {\n        get: function () { return this._execPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"cliPath\", {\n        get: function () { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"userHome\", {\n        get: function () { return os.homedir(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"userDataPath\", {\n        get: function () {\n            var vscodePortable = process.env['VSCODE_PORTABLE'];\n            if (vscodePortable) {\n                return path.join(vscodePortable, 'user-data');\n            }\n            return parseUserDataDir(this._args, process);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appNameLong\", {\n        get: function () { return product_1.default.nameLong; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appQuality\", {\n        get: function () { return product_1.default.quality; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appSettingsHome\", {\n        get: function () { return path.join(this.userDataPath, 'User'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appSettingsPath\", {\n        get: function () { return path.join(this.appSettingsHome, 'settings.json'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"globalStorageHome\", {\n        get: function () { return path.join(this.appSettingsHome, 'globalStorage'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"workspaceStorageHome\", {\n        get: function () { return path.join(this.appSettingsHome, 'workspaceStorage'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"settingsSearchBuildId\", {\n        get: function () { return product_1.default.settingsSearchBuildId; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"settingsSearchUrl\", {\n        get: function () { return product_1.default.settingsSearchUrl; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"appKeybindingsPath\", {\n        get: function () { return path.join(this.appSettingsHome, 'keybindings.json'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"isExtensionDevelopment\", {\n        get: function () { return !!this._args.extensionDevelopmentPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"backupHome\", {\n        get: function () { return path.join(this.userDataPath, 'Backups'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"backupWorkspacesPath\", {\n        get: function () { return path.join(this.backupHome, 'workspaces.json'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"untitledWorkspacesHome\", {\n        get: function () { return uri_1.URI.file(path.join(this.userDataPath, 'Workspaces')); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"installSourcePath\", {\n        get: function () { return path.join(this.userDataPath, 'installSource'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"builtinExtensionsPath\", {\n        get: function () {\n            var fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n            if (fromArgs) {\n                return fromArgs;\n            }\n            else {\n                return path.normalize(path.join(amd_1.getPathFromAmdModule(require, ''), '..', 'extensions'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"extensionsPath\", {\n        get: function () {\n            var fromArgs = parsePathArg(this._args['extensions-dir'], process);\n            if (fromArgs) {\n                return fromArgs;\n            }\n            var vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n            if (vscodeExtensions) {\n                return vscodeExtensions;\n            }\n            var vscodePortable = process.env['VSCODE_PORTABLE'];\n            if (vscodePortable) {\n                return path.join(vscodePortable, 'extensions');\n            }\n            return path.join(this.userHome, product_1.default.dataFolderName, 'extensions');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"extensionDevelopmentLocationURI\", {\n        get: function () {\n            var s = this._args.extensionDevelopmentPath;\n            if (s) {\n                if (/^[^:/?#]+?:\\/\\//.test(s)) {\n                    return uri_1.URI.parse(s);\n                }\n                return uri_1.URI.file(path.normalize(s));\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"extensionTestsLocationURI\", {\n        get: function () {\n            var s = this._args.extensionTestsPath;\n            if (s) {\n                if (/^[^:/?#]+?:\\/\\//.test(s)) {\n                    return uri_1.URI.parse(s);\n                }\n                return uri_1.URI.file(path.normalize(s));\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"disableExtensions\", {\n        get: function () {\n            if (this._args['disable-extensions']) {\n                return true;\n            }\n            var disableExtensions = this._args['disable-extension'];\n            if (disableExtensions) {\n                if (typeof disableExtensions === 'string') {\n                    return [disableExtensions];\n                }\n                if (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n                    return disableExtensions;\n                }\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"skipGettingStarted\", {\n        get: function () { return !!this._args['skip-getting-started']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"skipReleaseNotes\", {\n        get: function () { return !!this._args['skip-release-notes']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"skipAddToRecentlyOpened\", {\n        get: function () { return !!this._args['skip-add-to-recently-opened']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"debugExtensionHost\", {\n        get: function () { return parseExtensionHostPort(this._args, this.isBuilt); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"debugSearch\", {\n        get: function () { return parseSearchPort(this._args, this.isBuilt); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"isBuilt\", {\n        get: function () { return !process.env['VSCODE_DEV']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"verbose\", {\n        get: function () { return !!this._args.verbose; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"log\", {\n        get: function () { return this._args.log; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"wait\", {\n        get: function () { return !!this._args.wait; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"logExtensionHostCommunication\", {\n        get: function () { return !!this._args.logExtensionHostCommunication; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"status\", {\n        get: function () { return !!this._args.status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"mainIPCHandle\", {\n        get: function () { return getIPCHandle(this.userDataPath, 'main'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"sharedIPCHandle\", {\n        get: function () { return getIPCHandle(this.userDataPath, 'shared'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"nodeCachedDataDir\", {\n        get: function () { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"disableUpdates\", {\n        get: function () { return !!this._args['disable-updates']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"disableCrashReporter\", {\n        get: function () { return !!this._args['disable-crash-reporter']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"driverHandle\", {\n        get: function () { return this._args['driver']; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"driverVerbose\", {\n        get: function () { return !!this._args['driver-verbose']; },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"appRoot\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"cliPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"userHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"userDataPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"appSettingsHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"appSettingsPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"globalStorageHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"workspaceStorageHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"settingsSearchBuildId\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"settingsSearchUrl\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"appKeybindingsPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"isExtensionDevelopment\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"backupHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"backupWorkspacesPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"untitledWorkspacesHome\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"installSourcePath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"builtinExtensionsPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"extensionsPath\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"extensionDevelopmentLocationURI\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"extensionTestsLocationURI\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"debugExtensionHost\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"debugSearch\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"mainIPCHandle\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"sharedIPCHandle\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], EnvironmentService.prototype, \"nodeCachedDataDir\", null);\n    return EnvironmentService;\n}());\nexports.EnvironmentService = EnvironmentService;\nfunction parseExtensionHostPort(args, isBuild) {\n    return parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\nexports.parseExtensionHostPort = parseExtensionHostPort;\nfunction parseSearchPort(args, isBuild) {\n    return parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\nexports.parseSearchPort = parseSearchPort;\nfunction parseDebugPort(debugArg, debugBrkArg, defaultBuildPort, isBuild, debugId) {\n    var portStr = debugBrkArg || debugArg;\n    var port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n    var brk = port ? Boolean(!!debugBrkArg) : false;\n    return { port: port, break: brk, debugId: debugId };\n}\nexports.parseDebugPort = parseDebugPort;\nfunction parsePathArg(arg, process) {\n    if (!arg) {\n        return undefined;\n    }\n    // Determine if the arg is relative or absolute, if relative use the original CWD\n    // (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n    var resolved = path.resolve(arg);\n    if (path.normalize(arg) === resolved) {\n        return resolved;\n    }\n    else {\n        return path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n    }\n}\nfunction parseUserDataDir(args, process) {\n    return parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\nexports.parseUserDataDir = parseUserDataDir;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport { memoize } from 'vs/base/common/decorators';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nconst xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tif (xdgRuntimeDir) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${pkg.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${pkg.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${pkg.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: any;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\tget appNameLong(): string { return product.nameLong; }\n\n\tget appQuality(): string | undefined { return product.quality; }\n\n\t@memoize\n\tget appSettingsHome(): string { return path.join(this.userDataPath, 'User'); }\n\n\t@memoize\n\tget appSettingsPath(): string { return path.join(this.appSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget settingsSearchBuildId(): number | undefined { return product.settingsSearchBuildId; }\n\n\t@memoize\n\tget settingsSearchUrl(): string | undefined { return product.settingsSearchUrl; }\n\n\t@memoize\n\tget appKeybindingsPath(): string { return path.join(this.appSettingsHome, 'keybindings.json'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): string { return path.join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget skipGettingStarted(): boolean { return !!this._args['skip-getting-started']; }\n\n\tget skipReleaseNotes(): boolean { return !!this._args['skip-release-notes']; }\n\n\tget skipAddToRecentlyOpened(): boolean { return !!this._args['skip-add-to-recently-opened']; }\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\n\t@memoize\n\tget debugSearch(): IDebugParams { return parseSearchPort(this._args, this.isBuilt); }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget logExtensionHostCommunication(): boolean { return !!this._args.logExtensionHostCommunication; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nexport function parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\treturn { port, break: brk, debugId };\n}\n\nfunction parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t} else {\n\t\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n\t}\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n"]}]}