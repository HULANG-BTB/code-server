{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/windows/electron-main/windows.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/windows/electron-main/windows.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/instantiation/common/instantiation\"], function (require, exports, instantiation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var WindowMode;\n    (function (WindowMode) {\n        WindowMode[WindowMode[\"Maximized\"] = 0] = \"Maximized\";\n        WindowMode[WindowMode[\"Normal\"] = 1] = \"Normal\";\n        WindowMode[WindowMode[\"Minimized\"] = 2] = \"Minimized\";\n        WindowMode[WindowMode[\"Fullscreen\"] = 3] = \"Fullscreen\";\n    })(WindowMode = exports.WindowMode || (exports.WindowMode = {}));\n    exports.IWindowsMainService = instantiation_1.createDecorator('windowsMainService');\n});\n",null]}