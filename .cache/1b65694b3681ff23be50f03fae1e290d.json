{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsViews.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsViews.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls_1 = require(\"vs/nls\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar event_1 = require(\"vs/base/common/event\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar paging_1 = require(\"vs/base/common/paging\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nvar extensionManagementUtil_1 = require(\"vs/platform/extensionManagement/common/extensionManagementUtil\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar extensionsList_1 = require(\"vs/workbench/contrib/extensions/electron-browser/extensionsList\");\nvar extensions_1 = require(\"../common/extensions\");\nvar extensionQuery_1 = require(\"../common/extensionQuery\");\nvar extensions_2 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar preferencesActions_1 = require(\"vs/workbench/contrib/preferences/browser/preferencesActions\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar countBadge_1 = require(\"vs/base/browser/ui/countBadge/countBadge\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar extensionsActions_1 = require(\"vs/workbench/contrib/extensions/electron-browser/extensionsActions\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar experimentService_1 = require(\"vs/workbench/contrib/experiments/node/experimentService\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar errorsWithActions_1 = require(\"vs/base/common/errorsWithActions\");\nvar extensions_3 = require(\"vs/platform/extensions/common/extensions\");\nvar workbenchThemeService_1 = require(\"vs/workbench/services/themes/common/workbenchThemeService\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar async_1 = require(\"vs/base/common/async\");\nvar ExtensionsViewState = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionsViewState, _super);\n    function ExtensionsViewState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._onFocus = _this._register(new event_1.Emitter());\n        _this.onFocus = _this._onFocus.event;\n        _this._onBlur = _this._register(new event_1.Emitter());\n        _this.onBlur = _this._onBlur.event;\n        _this.currentlyFocusedItems = [];\n        return _this;\n    }\n    ExtensionsViewState.prototype.onFocusChange = function (extensions) {\n        var _this = this;\n        this.currentlyFocusedItems.forEach(function (extension) { return _this._onBlur.fire(extension); });\n        this.currentlyFocusedItems = extensions;\n        this.currentlyFocusedItems.forEach(function (extension) { return _this._onFocus.fire(extension); });\n    };\n    return ExtensionsViewState;\n}(lifecycle_1.Disposable));\nvar ExtensionsListView = /** @class */ (function (_super) {\n    tslib_1.__extends(ExtensionsListView, _super);\n    function ExtensionsListView(options, notificationService, keybindingService, contextMenuService, instantiationService, themeService, extensionService, extensionsWorkbenchService, editorService, tipsService, modeService, telemetryService, configurationService, contextService, experimentService, workbenchThemeService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { ariaHeaderLabel: options.title }), keybindingService, contextMenuService, configurationService) || this;\n        _this.options = options;\n        _this.notificationService = notificationService;\n        _this.instantiationService = instantiationService;\n        _this.themeService = themeService;\n        _this.extensionService = extensionService;\n        _this.extensionsWorkbenchService = extensionsWorkbenchService;\n        _this.editorService = editorService;\n        _this.tipsService = tipsService;\n        _this.modeService = modeService;\n        _this.telemetryService = telemetryService;\n        _this.contextService = contextService;\n        _this.experimentService = experimentService;\n        _this.workbenchThemeService = workbenchThemeService;\n        return _this;\n    }\n    ExtensionsListView.prototype.renderHeader = function (container) {\n        this.renderHeaderTitle(container);\n    };\n    ExtensionsListView.prototype.renderHeaderTitle = function (container) {\n        _super.prototype.renderHeaderTitle.call(this, container, this.options.title);\n        this.badgeContainer = dom_1.append(container, dom_1.$('.count-badge-wrapper'));\n        this.badge = new countBadge_1.CountBadge(this.badgeContainer);\n        this.disposables.push(styler_1.attachBadgeStyler(this.badge, this.themeService));\n    };\n    ExtensionsListView.prototype.renderBody = function (container) {\n        var _this = this;\n        this.extensionsList = dom_1.append(container, dom_1.$('.extensions-list'));\n        this.messageBox = dom_1.append(container, dom_1.$('.message'));\n        var delegate = new extensionsList_1.Delegate();\n        var extensionsViewState = new ExtensionsViewState();\n        var renderer = this.instantiationService.createInstance(extensionsList_1.Renderer, extensionsViewState);\n        this.list = this.instantiationService.createInstance(listService_1.WorkbenchPagedList, this.extensionsList, delegate, [renderer], {\n            ariaLabel: nls_1.localize('extensions', \"Extensions\"),\n            multipleSelectionSupport: false,\n            setRowLineHeight: false,\n            horizontalScrolling: false\n        });\n        this.list.onContextMenu(function (e) { return _this.onContextMenu(e); }, this, this.disposables);\n        this.list.onFocusChange(function (e) { return extensionsViewState.onFocusChange(arrays_1.coalesce(e.elements)); }, this, this.disposables);\n        this.disposables.push(this.list);\n        this.disposables.push(extensionsViewState);\n        event_1.Event.chain(this.list.onOpen)\n            .map(function (e) { return e.elements[0]; })\n            .filter(function (e) { return !!e; })\n            .on(this.openExtension, this, this.disposables);\n        event_1.Event.chain(this.list.onPin)\n            .map(function (e) { return e.elements[0]; })\n            .filter(function (e) { return !!e; })\n            .on(this.pin, this, this.disposables);\n    };\n    ExtensionsListView.prototype.layoutBody = function (height, width) {\n        this.extensionsList.style.height = height + 'px';\n        if (this.list) {\n            this.list.layout(height, width);\n        }\n    };\n    ExtensionsListView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var parsedQuery, options, successCallback, errorCallback, request;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                if (this.queryRequest) {\n                    if (this.queryRequest.query === query) {\n                        return [2 /*return*/, this.queryRequest.request];\n                    }\n                    this.queryRequest.request.cancel();\n                    this.queryRequest = null;\n                }\n                parsedQuery = extensionQuery_1.Query.parse(query);\n                options = {\n                    sortOrder: extensionManagement_1.SortOrder.Default\n                };\n                switch (parsedQuery.sortBy) {\n                    case 'installs':\n                        options = objects_1.assign(options, { sortBy: extensionManagement_1.SortBy.InstallCount });\n                        break;\n                    case 'rating':\n                        options = objects_1.assign(options, { sortBy: extensionManagement_1.SortBy.WeightedRating });\n                        break;\n                    case 'name':\n                        options = objects_1.assign(options, { sortBy: extensionManagement_1.SortBy.Title });\n                        break;\n                }\n                successCallback = function (model) {\n                    _this.queryRequest = null;\n                    _this.setModel(model);\n                    return model;\n                };\n                errorCallback = function (e) {\n                    var model = new paging_1.PagedModel([]);\n                    if (!errors_1.isPromiseCanceledError(e)) {\n                        _this.queryRequest = null;\n                        console.warn('Error querying extensions gallery', e);\n                        _this.setModel(model, true);\n                    }\n                    return _this.list ? _this.list.model : model;\n                };\n                request = async_1.createCancelablePromise(function (token) { return _this.query(parsedQuery, options, token).then(successCallback).catch(errorCallback); });\n                this.queryRequest = { query: query, request: request };\n                return [2 /*return*/, request];\n            });\n        });\n    };\n    ExtensionsListView.prototype.count = function () {\n        return this.list ? this.list.length : 0;\n    };\n    ExtensionsListView.prototype.showEmptyModel = function () {\n        var emptyModel = new paging_1.PagedModel([]);\n        this.setModel(emptyModel);\n        return Promise.resolve(emptyModel);\n    };\n    ExtensionsListView.prototype.onContextMenu = function (e) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var runningExtensions, colorThemes, fileIconThemes, manageExtensionAction, groups, actions_1, _i, groups_1, menuActions;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!e.element) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 1:\n                        runningExtensions = _a.sent();\n                        return [4 /*yield*/, this.workbenchThemeService.getColorThemes()];\n                    case 2:\n                        colorThemes = _a.sent();\n                        return [4 /*yield*/, this.workbenchThemeService.getFileIconThemes()];\n                    case 3:\n                        fileIconThemes = _a.sent();\n                        manageExtensionAction = this.instantiationService.createInstance(extensionsActions_1.ManageExtensionAction);\n                        manageExtensionAction.extension = e.element;\n                        groups = manageExtensionAction.getActionGroups(runningExtensions, colorThemes, fileIconThemes);\n                        actions_1 = [];\n                        for (_i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\n                            menuActions = groups_1[_i];\n                            actions_1 = actions_1.concat(menuActions, [new actionbar_1.Separator()]);\n                        }\n                        if (manageExtensionAction.enabled) {\n                            this.contextMenuService.showContextMenu({\n                                getAnchor: function () { return e.anchor; },\n                                getActions: function () { return actions_1.slice(0, actions_1.length - 1); }\n                            });\n                        }\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExtensionsListView.prototype.query = function (query, options, token) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var idRegex, ids, idMatch, name;\n            return tslib_1.__generator(this, function (_a) {\n                idRegex = /@id:(([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*))/g;\n                ids = [];\n                while ((idMatch = idRegex.exec(query.value)) !== null) {\n                    name = idMatch[1];\n                    ids.push(name);\n                }\n                if (ids.length) {\n                    return [2 /*return*/, this.queryByIds(ids, options, token)];\n                }\n                if (ExtensionsListView.isInstalledExtensionsQuery(query.value) || /@builtin/.test(query.value)) {\n                    return [2 /*return*/, this.queryLocal(query, options)];\n                }\n                return [2 /*return*/, this.queryGallery(query, options, token)];\n            });\n        });\n    };\n    ExtensionsListView.prototype.queryByIds = function (ids, options, token) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var idsSet, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        idsSet = ids.reduce(function (result, id) { result.add(id.toLowerCase()); return result; }, new Set());\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 1:\n                        result = (_a.sent())\n                            .filter(function (e) { return idsSet.has(e.identifier.id.toLowerCase()); });\n                        if (result.length) {\n                            return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                        }\n                        return [2 /*return*/, this.extensionsWorkbenchService.queryGallery({ names: ids, source: 'queryById' }, token)\n                                .then(function (pager) { return _this.getPagedModel(pager); })];\n                }\n            });\n        });\n    };\n    ExtensionsListView.prototype.queryLocal = function (query, options) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var value, showThemesOnly, showBasicsOnly, showFeaturesOnly, result, themesExtensions, basics, others, categories, result, local, result, local, runningExtensions_1, result, local, runningExtensions_2, result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        value = query.value;\n                        if (!/@builtin/i.test(value)) return [3 /*break*/, 2];\n                        showThemesOnly = /@builtin:themes/i.test(value);\n                        if (showThemesOnly) {\n                            value = value.replace(/@builtin:themes/g, '');\n                        }\n                        showBasicsOnly = /@builtin:basics/i.test(value);\n                        if (showBasicsOnly) {\n                            value = value.replace(/@builtin:basics/g, '');\n                        }\n                        showFeaturesOnly = /@builtin:features/i.test(value);\n                        if (showFeaturesOnly) {\n                            value = value.replace(/@builtin:features/g, '');\n                        }\n                        value = value.replace(/@builtin/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 1:\n                        result = _a.sent();\n                        result = result\n                            .filter(function (e) { return e.type === extensions_3.ExtensionType.System && (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1); });\n                        if (showThemesOnly) {\n                            themesExtensions = result.filter(function (e) {\n                                return e.local\n                                    && e.local.manifest\n                                    && e.local.manifest.contributes\n                                    && Array.isArray(e.local.manifest.contributes.themes)\n                                    && e.local.manifest.contributes.themes.length;\n                            });\n                            return [2 /*return*/, this.getPagedModel(this.sortExtensions(themesExtensions, options))];\n                        }\n                        if (showBasicsOnly) {\n                            basics = result.filter(function (e) {\n                                return e.local && e.local.manifest\n                                    && e.local.manifest.contributes\n                                    && Array.isArray(e.local.manifest.contributes.grammars)\n                                    && e.local.manifest.contributes.grammars.length\n                                    && e.local.identifier.id !== 'vscode.git';\n                            });\n                            return [2 /*return*/, this.getPagedModel(this.sortExtensions(basics, options))];\n                        }\n                        if (showFeaturesOnly) {\n                            others = result.filter(function (e) {\n                                return e.local\n                                    && e.local.manifest\n                                    && e.local.manifest.contributes\n                                    && (!Array.isArray(e.local.manifest.contributes.grammars) || e.local.identifier.id === 'vscode.git')\n                                    && !Array.isArray(e.local.manifest.contributes.themes);\n                            });\n                            return [2 /*return*/, this.getPagedModel(this.sortExtensions(others, options))];\n                        }\n                        return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                    case 2:\n                        categories = [];\n                        value = value.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, function (_, quotedCategory, category) {\n                            var entry = (category || quotedCategory || '').toLowerCase();\n                            if (categories.indexOf(entry) === -1) {\n                                categories.push(entry);\n                            }\n                            return '';\n                        });\n                        if (!/@installed/i.test(value)) return [3 /*break*/, 4];\n                        // Show installed extensions\n                        value = value.replace(/@installed/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 3:\n                        result = _a.sent();\n                        result = result\n                            .filter(function (e) { return e.type === extensions_3.ExtensionType.User\n                            && (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n                            && (!categories.length || categories.some(function (category) { return (e.local && e.local.manifest.categories || []).some(function (c) { return c.toLowerCase() === category; }); })); });\n                        return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                    case 4:\n                        if (!/@outdated/i.test(value)) return [3 /*break*/, 6];\n                        value = value.replace(/@outdated/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 5:\n                        local = _a.sent();\n                        result = local\n                            .sort(function (e1, e2) { return e1.displayName.localeCompare(e2.displayName); })\n                            .filter(function (extension) { return extension.outdated\n                            && (extension.name.toLowerCase().indexOf(value) > -1 || extension.displayName.toLowerCase().indexOf(value) > -1)\n                            && (!categories.length || categories.some(function (category) { return !!extension.local && extension.local.manifest.categories.some(function (c) { return c.toLowerCase() === category; }); })); });\n                        return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                    case 6:\n                        if (!/@disabled/i.test(value)) return [3 /*break*/, 9];\n                        value = value.replace(/@disabled/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 7:\n                        local = _a.sent();\n                        return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 8:\n                        runningExtensions_1 = _a.sent();\n                        result = local\n                            .sort(function (e1, e2) { return e1.displayName.localeCompare(e2.displayName); })\n                            .filter(function (e) { return runningExtensions_1.every(function (r) { return !extensionManagementUtil_1.areSameExtensions({ id: r.identifier.value }, e.identifier); })\n                            && (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n                            && (!categories.length || categories.some(function (category) { return (e.local && e.local.manifest.categories || []).some(function (c) { return c.toLowerCase() === category; }); })); });\n                        return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                    case 9:\n                        if (!/@enabled/i.test(value)) return [3 /*break*/, 12];\n                        value = value ? value.replace(/@enabled/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase() : '';\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryLocal()];\n                    case 10:\n                        local = (_a.sent()).filter(function (e) { return e.type === extensions_3.ExtensionType.User; });\n                        return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 11:\n                        runningExtensions_2 = _a.sent();\n                        result = local\n                            .sort(function (e1, e2) { return e1.displayName.localeCompare(e2.displayName); })\n                            .filter(function (e) { return runningExtensions_2.some(function (r) { return extensionManagementUtil_1.areSameExtensions({ id: r.identifier.value }, e.identifier); })\n                            && (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n                            && (!categories.length || categories.some(function (category) { return (e.local && e.local.manifest.categories || []).some(function (c) { return c.toLowerCase() === category; }); })); });\n                        return [2 /*return*/, this.getPagedModel(this.sortExtensions(result, options))];\n                    case 12: return [2 /*return*/, new paging_1.PagedModel([])];\n                }\n            });\n        });\n    };\n    ExtensionsListView.prototype.queryGallery = function (query, options, token) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var hasUserDefinedSortOrder, text, extensionRegex, preferredResults, searchExperiments, _i, searchExperiments_1, experiment, pager, positionToUpdate, _a, preferredResults_1, preferredResult, j, preferredExtension;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        hasUserDefinedSortOrder = options.sortBy !== undefined;\n                        if (!hasUserDefinedSortOrder && !query.value.trim()) {\n                            options.sortBy = extensionManagement_1.SortBy.InstallCount;\n                        }\n                        if (ExtensionsListView.isWorkspaceRecommendedExtensionsQuery(query.value)) {\n                            return [2 /*return*/, this.getWorkspaceRecommendationsModel(query, options, token)];\n                        }\n                        else if (ExtensionsListView.isKeymapsRecommendedExtensionsQuery(query.value)) {\n                            return [2 /*return*/, this.getKeymapRecommendationsModel(query, options, token)];\n                        }\n                        else if (/@recommended:all/i.test(query.value) || ExtensionsListView.isSearchRecommendedExtensionsQuery(query.value)) {\n                            return [2 /*return*/, this.getAllRecommendationsModel(query, options, token)];\n                        }\n                        else if (ExtensionsListView.isRecommendedExtensionsQuery(query.value)) {\n                            return [2 /*return*/, this.getRecommendationsModel(query, options, token)];\n                        }\n                        if (/\\bcurated:([^\\s]+)\\b/.test(query.value)) {\n                            return [2 /*return*/, this.getCuratedModel(query, options, token)];\n                        }\n                        text = query.value;\n                        extensionRegex = /\\bext:([^\\s]+)\\b/g;\n                        if (extensionRegex.test(query.value)) {\n                            text = query.value.replace(extensionRegex, function (m, ext) {\n                                // Get curated keywords\n                                var lookup = product_1.default.extensionKeywords || {};\n                                var keywords = lookup[ext] || [];\n                                // Get mode name\n                                var modeId = _this.modeService.getModeIdByFilepathOrFirstLine(\".\" + ext);\n                                var languageName = modeId && _this.modeService.getLanguageName(modeId);\n                                var languageTag = languageName ? \" tag:\\\"\" + languageName + \"\\\"\" : '';\n                                // Construct a rich query\n                                return \"tag:\\\"__ext_\" + ext + \"\\\" tag:\\\"__ext_.\" + ext + \"\\\" \" + keywords.map(function (tag) { return \"tag:\\\"\" + tag + \"\\\"\"; }).join(' ') + languageTag + \" tag:\\\"\" + ext + \"\\\"\";\n                            });\n                            if (text !== query.value) {\n                                options = objects_1.assign(options, { text: text.substr(0, 350), source: 'file-extension-tags' });\n                                return [2 /*return*/, this.extensionsWorkbenchService.queryGallery(options, token).then(function (pager) { return _this.getPagedModel(pager); })];\n                            }\n                        }\n                        preferredResults = [];\n                        if (!text) return [3 /*break*/, 3];\n                        options = objects_1.assign(options, { text: text.substr(0, 350), source: 'searchText' });\n                        if (!!hasUserDefinedSortOrder) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getSearchExperiments()];\n                    case 1:\n                        searchExperiments = _b.sent();\n                        for (_i = 0, searchExperiments_1 = searchExperiments; _i < searchExperiments_1.length; _i++) {\n                            experiment = searchExperiments_1[_i];\n                            if (experiment.action && text.toLowerCase() === experiment.action.properties['searchText'] && Array.isArray(experiment.action.properties['preferredResults'])) {\n                                preferredResults = experiment.action.properties['preferredResults'];\n                                options.source += \"-experiment-\" + experiment.id;\n                                break;\n                            }\n                        }\n                        _b.label = 2;\n                    case 2: return [3 /*break*/, 4];\n                    case 3:\n                        options.source = 'viewlet';\n                        _b.label = 4;\n                    case 4: return [4 /*yield*/, this.extensionsWorkbenchService.queryGallery(options, token)];\n                    case 5:\n                        pager = _b.sent();\n                        positionToUpdate = 0;\n                        for (_a = 0, preferredResults_1 = preferredResults; _a < preferredResults_1.length; _a++) {\n                            preferredResult = preferredResults_1[_a];\n                            for (j = positionToUpdate; j < pager.firstPage.length; j++) {\n                                if (extensionManagementUtil_1.areSameExtensions(pager.firstPage[j].identifier, { id: preferredResult })) {\n                                    if (positionToUpdate !== j) {\n                                        preferredExtension = pager.firstPage.splice(j, 1)[0];\n                                        pager.firstPage.splice(positionToUpdate, 0, preferredExtension);\n                                        positionToUpdate++;\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                        return [2 /*return*/, this.getPagedModel(pager)];\n                }\n            });\n        });\n    };\n    ExtensionsListView.prototype.getSearchExperiments = function () {\n        if (!this._searchExperiments) {\n            this._searchExperiments = this.experimentService.getExperimentsByType(experimentService_1.ExperimentActionType.ExtensionSearchResults);\n        }\n        return this._searchExperiments;\n    };\n    ExtensionsListView.prototype.sortExtensions = function (extensions, options) {\n        switch (options.sortBy) {\n            case extensionManagement_1.SortBy.InstallCount:\n                extensions = extensions.sort(function (e1, e2) { return typeof e2.installCount === 'number' && typeof e1.installCount === 'number' ? e2.installCount - e1.installCount : NaN; });\n                break;\n            case extensionManagement_1.SortBy.AverageRating:\n            case extensionManagement_1.SortBy.WeightedRating:\n                extensions = extensions.sort(function (e1, e2) { return typeof e2.rating === 'number' && typeof e1.rating === 'number' ? e2.rating - e1.rating : NaN; });\n                break;\n            default:\n                extensions = extensions.sort(function (e1, e2) { return e1.displayName.localeCompare(e2.displayName); });\n                break;\n        }\n        if (options.sortOrder === extensionManagement_1.SortOrder.Descending) {\n            extensions = extensions.reverse();\n        }\n        return extensions;\n    };\n    // Get All types of recommendations, trimmed to show a max of 8 at any given time\n    ExtensionsListView.prototype.getAllRecommendationsModel = function (query, options, token) {\n        var _this = this;\n        var value = query.value.replace(/@recommended:all/g, '').replace(/@recommended/g, '').trim().toLowerCase();\n        return this.extensionsWorkbenchService.queryLocal()\n            .then(function (result) { return result.filter(function (e) { return e.type === extensions_3.ExtensionType.User; }); })\n            .then(function (local) {\n            var fileBasedRecommendations = _this.tipsService.getFileBasedRecommendations();\n            var othersPromise = _this.tipsService.getOtherRecommendations();\n            var workspacePromise = _this.tipsService.getWorkspaceRecommendations();\n            return Promise.all([othersPromise, workspacePromise])\n                .then(function (_a) {\n                var others = _a[0], workspaceRecommendations = _a[1];\n                var names = _this.getTrimmedRecommendations(local, value, fileBasedRecommendations, others, workspaceRecommendations);\n                var recommendationsWithReason = _this.tipsService.getAllRecommendationsWithReason();\n                /* __GDPR__\n                    \"extensionAllRecommendations:open\" : {\n                        \"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n                        \"recommendations\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('extensionAllRecommendations:open', {\n                    count: names.length,\n                    recommendations: names.map(function (id) {\n                        return {\n                            id: id,\n                            recommendationReason: recommendationsWithReason[id.toLowerCase()].reasonId\n                        };\n                    })\n                });\n                if (!names.length) {\n                    return Promise.resolve(new paging_1.PagedModel([]));\n                }\n                options.source = 'recommendations-all';\n                return _this.extensionsWorkbenchService.queryGallery(objects_1.assign(options, { names: names, pageSize: names.length }), token)\n                    .then(function (pager) {\n                    _this.sortFirstPage(pager, names);\n                    return _this.getPagedModel(pager || []);\n                });\n            });\n        });\n    };\n    ExtensionsListView.prototype.getCuratedModel = function (query, options, token) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var value, names, pager;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        value = query.value.replace(/curated:/g, '').trim();\n                        return [4 /*yield*/, this.experimentService.getCuratedExtensionsList(value)];\n                    case 1:\n                        names = _a.sent();\n                        if (!(Array.isArray(names) && names.length)) return [3 /*break*/, 3];\n                        options.source = \"curated:\" + value;\n                        return [4 /*yield*/, this.extensionsWorkbenchService.queryGallery(objects_1.assign(options, { names: names, pageSize: names.length }), token)];\n                    case 2:\n                        pager = _a.sent();\n                        this.sortFirstPage(pager, names);\n                        return [2 /*return*/, this.getPagedModel(pager || [])];\n                    case 3: return [2 /*return*/, new paging_1.PagedModel([])];\n                }\n            });\n        });\n    };\n    // Get All types of recommendations other than Workspace recommendations, trimmed to show a max of 8 at any given time\n    ExtensionsListView.prototype.getRecommendationsModel = function (query, options, token) {\n        var _this = this;\n        var value = query.value.replace(/@recommended/g, '').trim().toLowerCase();\n        return this.extensionsWorkbenchService.queryLocal()\n            .then(function (result) { return result.filter(function (e) { return e.type === extensions_3.ExtensionType.User; }); })\n            .then(function (local) {\n            var fileBasedRecommendations = _this.tipsService.getFileBasedRecommendations();\n            var othersPromise = _this.tipsService.getOtherRecommendations();\n            var workspacePromise = _this.tipsService.getWorkspaceRecommendations();\n            return Promise.all([othersPromise, workspacePromise])\n                .then(function (_a) {\n                var others = _a[0], workspaceRecommendations = _a[1];\n                fileBasedRecommendations = fileBasedRecommendations.filter(function (x) { return workspaceRecommendations.every(function (_a) {\n                    var extensionId = _a.extensionId;\n                    return x.extensionId !== extensionId;\n                }); });\n                others = others.filter(function (x) { return workspaceRecommendations.every(function (_a) {\n                    var extensionId = _a.extensionId;\n                    return x.extensionId !== extensionId;\n                }); });\n                var names = _this.getTrimmedRecommendations(local, value, fileBasedRecommendations, others, []);\n                var recommendationsWithReason = _this.tipsService.getAllRecommendationsWithReason();\n                /* __GDPR__\n                    \"extensionRecommendations:open\" : {\n                        \"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n                        \"recommendations\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('extensionRecommendations:open', {\n                    count: names.length,\n                    recommendations: names.map(function (id) {\n                        return {\n                            id: id,\n                            recommendationReason: recommendationsWithReason[id.toLowerCase()].reasonId\n                        };\n                    })\n                });\n                if (!names.length) {\n                    return Promise.resolve(new paging_1.PagedModel([]));\n                }\n                options.source = 'recommendations';\n                return _this.extensionsWorkbenchService.queryGallery(objects_1.assign(options, { names: names, pageSize: names.length }), token)\n                    .then(function (pager) {\n                    _this.sortFirstPage(pager, names);\n                    return _this.getPagedModel(pager || []);\n                });\n            });\n        });\n    };\n    // Given all recommendations, trims and returns recommendations in the relevant order after filtering out installed extensions\n    ExtensionsListView.prototype.getTrimmedRecommendations = function (installedExtensions, value, fileBasedRecommendations, otherRecommendations, workpsaceRecommendations) {\n        var _this = this;\n        var totalCount = 8;\n        workpsaceRecommendations = workpsaceRecommendations\n            .filter(function (recommendation) {\n            return !_this.isRecommendationInstalled(recommendation, installedExtensions)\n                && recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n        });\n        fileBasedRecommendations = fileBasedRecommendations.filter(function (recommendation) {\n            return !_this.isRecommendationInstalled(recommendation, installedExtensions)\n                && workpsaceRecommendations.every(function (workspaceRecommendation) { return workspaceRecommendation.extensionId !== recommendation.extensionId; })\n                && recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n        });\n        otherRecommendations = otherRecommendations.filter(function (recommendation) {\n            return !_this.isRecommendationInstalled(recommendation, installedExtensions)\n                && fileBasedRecommendations.every(function (fileBasedRecommendation) { return fileBasedRecommendation.extensionId !== recommendation.extensionId; })\n                && workpsaceRecommendations.every(function (workspaceRecommendation) { return workspaceRecommendation.extensionId !== recommendation.extensionId; })\n                && recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n        });\n        var otherCount = Math.min(2, otherRecommendations.length);\n        var fileBasedCount = Math.min(fileBasedRecommendations.length, totalCount - workpsaceRecommendations.length - otherCount);\n        var recommendations = workpsaceRecommendations;\n        recommendations.push.apply(recommendations, fileBasedRecommendations.splice(0, fileBasedCount));\n        recommendations.push.apply(recommendations, otherRecommendations.splice(0, otherCount));\n        return arrays_1.distinct(recommendations.map(function (_a) {\n            var extensionId = _a.extensionId;\n            return extensionId;\n        }));\n    };\n    ExtensionsListView.prototype.isRecommendationInstalled = function (recommendation, installed) {\n        return installed.some(function (i) { return extensionManagementUtil_1.areSameExtensions(i.identifier, { id: recommendation.extensionId }); });\n    };\n    ExtensionsListView.prototype.getWorkspaceRecommendationsModel = function (query, options, token) {\n        var _this = this;\n        var value = query.value.replace(/@recommended:workspace/g, '').trim().toLowerCase();\n        return this.tipsService.getWorkspaceRecommendations()\n            .then(function (recommendations) {\n            var names = recommendations.map(function (_a) {\n                var extensionId = _a.extensionId;\n                return extensionId;\n            }).filter(function (name) { return name.toLowerCase().indexOf(value) > -1; });\n            /* __GDPR__\n                \"extensionWorkspaceRecommendations:open\" : {\n                    \"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n                }\n            */\n            _this.telemetryService.publicLog('extensionWorkspaceRecommendations:open', { count: names.length });\n            if (!names.length) {\n                return Promise.resolve(new paging_1.PagedModel([]));\n            }\n            options.source = 'recommendations-workspace';\n            return _this.extensionsWorkbenchService.queryGallery(objects_1.assign(options, { names: names, pageSize: names.length }), token)\n                .then(function (pager) { return _this.getPagedModel(pager || []); });\n        });\n    };\n    ExtensionsListView.prototype.getKeymapRecommendationsModel = function (query, options, token) {\n        var _this = this;\n        var value = query.value.replace(/@recommended:keymaps/g, '').trim().toLowerCase();\n        var names = this.tipsService.getKeymapRecommendations().map(function (_a) {\n            var extensionId = _a.extensionId;\n            return extensionId;\n        })\n            .filter(function (extensionId) { return extensionId.toLowerCase().indexOf(value) > -1; });\n        if (!names.length) {\n            return Promise.resolve(new paging_1.PagedModel([]));\n        }\n        options.source = 'recommendations-keymaps';\n        return this.extensionsWorkbenchService.queryGallery(objects_1.assign(options, { names: names, pageSize: names.length }), token)\n            .then(function (result) { return _this.getPagedModel(result); });\n    };\n    // Sorts the firstPage of the pager in the same order as given array of extension ids\n    ExtensionsListView.prototype.sortFirstPage = function (pager, ids) {\n        ids = ids.map(function (x) { return x.toLowerCase(); });\n        pager.firstPage.sort(function (a, b) {\n            return ids.indexOf(a.identifier.id.toLowerCase()) < ids.indexOf(b.identifier.id.toLowerCase()) ? -1 : 1;\n        });\n    };\n    ExtensionsListView.prototype.setModel = function (model, isGalleryError) {\n        if (this.list) {\n            this.list.model = new paging_1.DelayedPagedModel(model);\n            this.list.scrollTop = 0;\n            var count = this.count();\n            dom_1.toggleClass(this.extensionsList, 'hidden', count === 0);\n            dom_1.toggleClass(this.messageBox, 'hidden', count > 0);\n            this.badge.setCount(count);\n            if (count === 0 && this.isBodyVisible()) {\n                this.messageBox.textContent = isGalleryError ? nls_1.localize('galleryError', \"We cannot connect to the Extensions Marketplace at this time, please try again later.\") : nls_1.localize('no extensions found', \"No extensions found.\");\n                if (isGalleryError) {\n                    aria_1.alert(this.messageBox.textContent);\n                }\n            }\n            else {\n                this.messageBox.textContent = '';\n            }\n        }\n    };\n    ExtensionsListView.prototype.openExtension = function (extension) {\n        var _this = this;\n        this.extensionsWorkbenchService.open(extension).then(undefined, function (err) { return _this.onError(err); });\n    };\n    ExtensionsListView.prototype.pin = function () {\n        var activeControl = this.editorService.activeControl;\n        if (activeControl) {\n            activeControl.group.pinEditor(activeControl.input);\n            activeControl.focus();\n        }\n    };\n    ExtensionsListView.prototype.onError = function (err) {\n        if (errors_1.isPromiseCanceledError(err)) {\n            return;\n        }\n        var message = err && err.message || '';\n        if (/ECONNREFUSED/.test(message)) {\n            var error = errorsWithActions_1.createErrorWithActions(nls_1.localize('suggestProxyError', \"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting.\"), {\n                actions: [\n                    this.instantiationService.createInstance(preferencesActions_1.OpenGlobalSettingsAction, preferencesActions_1.OpenGlobalSettingsAction.ID, preferencesActions_1.OpenGlobalSettingsAction.LABEL)\n                ]\n            });\n            this.notificationService.error(error);\n            return;\n        }\n        this.notificationService.error(err);\n    };\n    ExtensionsListView.prototype.getPagedModel = function (arg) {\n        if (Array.isArray(arg)) {\n            return new paging_1.PagedModel(arg);\n        }\n        var pager = {\n            total: arg.total,\n            pageSize: arg.pageSize,\n            firstPage: arg.firstPage,\n            getPage: function (pageIndex, cancellationToken) { return arg.getPage(pageIndex, cancellationToken); }\n        };\n        return new paging_1.PagedModel(pager);\n    };\n    ExtensionsListView.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.queryRequest) {\n            this.queryRequest.request.cancel();\n            this.queryRequest = null;\n        }\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        this.list = null;\n    };\n    ExtensionsListView.isBuiltInExtensionsQuery = function (query) {\n        return /^\\s*@builtin\\s*$/i.test(query);\n    };\n    ExtensionsListView.isInstalledExtensionsQuery = function (query) {\n        return /@installed|@outdated|@enabled|@disabled/i.test(query);\n    };\n    ExtensionsListView.isGroupByServersExtensionsQuery = function (query) {\n        return !!extensionQuery_1.Query.parse(query).groupBy;\n    };\n    ExtensionsListView.isRecommendedExtensionsQuery = function (query) {\n        return /^@recommended$/i.test(query.trim());\n    };\n    ExtensionsListView.isSearchRecommendedExtensionsQuery = function (query) {\n        return /@recommended/i.test(query) && !ExtensionsListView.isRecommendedExtensionsQuery(query);\n    };\n    ExtensionsListView.isWorkspaceRecommendedExtensionsQuery = function (query) {\n        return /@recommended:workspace/i.test(query);\n    };\n    ExtensionsListView.isKeymapsRecommendedExtensionsQuery = function (query) {\n        return /@recommended:keymaps/i.test(query);\n    };\n    ExtensionsListView.prototype.focus = function () {\n        _super.prototype.focus.call(this);\n        if (!this.list) {\n            return;\n        }\n        if (!(this.list.getFocus().length || this.list.getSelection().length)) {\n            this.list.focusNext();\n        }\n        this.list.domFocus();\n    };\n    ExtensionsListView = tslib_1.__decorate([\n        tslib_1.__param(1, notification_1.INotificationService),\n        tslib_1.__param(2, keybinding_1.IKeybindingService),\n        tslib_1.__param(3, contextView_1.IContextMenuService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, themeService_1.IThemeService),\n        tslib_1.__param(6, extensions_2.IExtensionService),\n        tslib_1.__param(7, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(8, editorService_1.IEditorService),\n        tslib_1.__param(9, extensionManagement_1.IExtensionTipsService),\n        tslib_1.__param(10, modeService_1.IModeService),\n        tslib_1.__param(11, telemetry_1.ITelemetryService),\n        tslib_1.__param(12, configuration_1.IConfigurationService),\n        tslib_1.__param(13, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(14, experimentService_1.IExperimentService),\n        tslib_1.__param(15, workbenchThemeService_1.IWorkbenchThemeService)\n    ], ExtensionsListView);\n    return ExtensionsListView;\n}(panelViewlet_1.ViewletPanel));\nexports.ExtensionsListView = ExtensionsListView;\nvar GroupByServerExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(GroupByServerExtensionsView, _super);\n    function GroupByServerExtensionsView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GroupByServerExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                query = query.replace(/@group:server/g, '').trim();\n                query = query ? query : '@installed';\n                if (!ExtensionsListView.isInstalledExtensionsQuery(query) && !ExtensionsListView.isBuiltInExtensionsQuery(query)) {\n                    query = query += ' @installed';\n                }\n                return [2 /*return*/, _super.prototype.show.call(this, query.trim())];\n            });\n        });\n    };\n    return GroupByServerExtensionsView;\n}(ExtensionsListView));\nexports.GroupByServerExtensionsView = GroupByServerExtensionsView;\nvar EnabledExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(EnabledExtensionsView, _super);\n    function EnabledExtensionsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.enabledExtensionsQuery = '@enabled';\n        return _this;\n    }\n    EnabledExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== this.enabledExtensionsQuery) ? this.showEmptyModel() : _super.prototype.show.call(this, this.enabledExtensionsQuery)];\n            });\n        });\n    };\n    return EnabledExtensionsView;\n}(ExtensionsListView));\nexports.EnabledExtensionsView = EnabledExtensionsView;\nvar DisabledExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(DisabledExtensionsView, _super);\n    function DisabledExtensionsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disabledExtensionsQuery = '@disabled';\n        return _this;\n    }\n    DisabledExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== this.disabledExtensionsQuery) ? this.showEmptyModel() : _super.prototype.show.call(this, this.disabledExtensionsQuery)];\n            });\n        });\n    };\n    return DisabledExtensionsView;\n}(ExtensionsListView));\nexports.DisabledExtensionsView = DisabledExtensionsView;\nvar BuiltInExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltInExtensionsView, _super);\n    function BuiltInExtensionsView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BuiltInExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== '@builtin') ? this.showEmptyModel() : _super.prototype.show.call(this, '@builtin:features')];\n            });\n        });\n    };\n    return BuiltInExtensionsView;\n}(ExtensionsListView));\nexports.BuiltInExtensionsView = BuiltInExtensionsView;\nvar BuiltInThemesExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltInThemesExtensionsView, _super);\n    function BuiltInThemesExtensionsView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BuiltInThemesExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== '@builtin') ? this.showEmptyModel() : _super.prototype.show.call(this, '@builtin:themes')];\n            });\n        });\n    };\n    return BuiltInThemesExtensionsView;\n}(ExtensionsListView));\nexports.BuiltInThemesExtensionsView = BuiltInThemesExtensionsView;\nvar BuiltInBasicsExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltInBasicsExtensionsView, _super);\n    function BuiltInBasicsExtensionsView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BuiltInBasicsExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== '@builtin') ? this.showEmptyModel() : _super.prototype.show.call(this, '@builtin:basics')];\n            });\n        });\n    };\n    return BuiltInBasicsExtensionsView;\n}(ExtensionsListView));\nexports.BuiltInBasicsExtensionsView = BuiltInBasicsExtensionsView;\nvar DefaultRecommendedExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(DefaultRecommendedExtensionsView, _super);\n    function DefaultRecommendedExtensionsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.recommendedExtensionsQuery = '@recommended:all';\n        return _this;\n    }\n    DefaultRecommendedExtensionsView.prototype.renderBody = function (container) {\n        var _this = this;\n        _super.prototype.renderBody.call(this, container);\n        this.disposables.push(this.tipsService.onRecommendationChange(function () {\n            _this.show('');\n        }));\n    };\n    DefaultRecommendedExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var model;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (query && query.trim() !== this.recommendedExtensionsQuery) {\n                            return [2 /*return*/, this.showEmptyModel()];\n                        }\n                        return [4 /*yield*/, _super.prototype.show.call(this, this.recommendedExtensionsQuery)];\n                    case 1:\n                        model = _a.sent();\n                        if (!this.extensionsWorkbenchService.local.some(function (e) { return e.type === extensions_3.ExtensionType.User; })) {\n                            // This is part of popular extensions view. Collapse if no installed extensions.\n                            this.setExpanded(model.length > 0);\n                        }\n                        return [2 /*return*/, model];\n                }\n            });\n        });\n    };\n    return DefaultRecommendedExtensionsView;\n}(ExtensionsListView));\nexports.DefaultRecommendedExtensionsView = DefaultRecommendedExtensionsView;\nvar RecommendedExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(RecommendedExtensionsView, _super);\n    function RecommendedExtensionsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.recommendedExtensionsQuery = '@recommended';\n        return _this;\n    }\n    RecommendedExtensionsView.prototype.renderBody = function (container) {\n        var _this = this;\n        _super.prototype.renderBody.call(this, container);\n        this.disposables.push(this.tipsService.onRecommendationChange(function () {\n            _this.show('');\n        }));\n    };\n    RecommendedExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (query && query.trim() !== this.recommendedExtensionsQuery) ? this.showEmptyModel() : _super.prototype.show.call(this, this.recommendedExtensionsQuery)];\n            });\n        });\n    };\n    return RecommendedExtensionsView;\n}(ExtensionsListView));\nexports.RecommendedExtensionsView = RecommendedExtensionsView;\nvar WorkspaceRecommendedExtensionsView = /** @class */ (function (_super) {\n    tslib_1.__extends(WorkspaceRecommendedExtensionsView, _super);\n    function WorkspaceRecommendedExtensionsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.recommendedExtensionsQuery = '@recommended:workspace';\n        return _this;\n    }\n    WorkspaceRecommendedExtensionsView.prototype.renderBody = function (container) {\n        var _this = this;\n        _super.prototype.renderBody.call(this, container);\n        this.disposables.push(this.tipsService.onRecommendationChange(function () { return _this.update(); }));\n        this.disposables.push(this.extensionsWorkbenchService.onChange(function () { return _this.setRecommendationsToInstall(); }));\n        this.disposables.push(this.contextService.onDidChangeWorkbenchState(function () { return _this.update(); }));\n    };\n    WorkspaceRecommendedExtensionsView.prototype.renderHeader = function (container) {\n        var _this = this;\n        var _a;\n        _super.prototype.renderHeader.call(this, container);\n        var listActionBar = dom_1.$('.list-actionbar-container');\n        container.insertBefore(listActionBar, this.badgeContainer);\n        var actionbar = new actionbar_1.ActionBar(listActionBar, {\n            animated: false\n        });\n        actionbar.onDidRun(function (_a) {\n            var error = _a.error;\n            return error && _this.notificationService.error(error);\n        });\n        this.installAllAction = this.instantiationService.createInstance(extensionsActions_1.InstallWorkspaceRecommendedExtensionsAction, extensionsActions_1.InstallWorkspaceRecommendedExtensionsAction.ID, extensionsActions_1.InstallWorkspaceRecommendedExtensionsAction.LABEL, []);\n        var configureWorkspaceFolderAction = this.instantiationService.createInstance(extensionsActions_1.ConfigureWorkspaceFolderRecommendedExtensionsAction, extensionsActions_1.ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, extensionsActions_1.ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL);\n        this.installAllAction.class = 'octicon octicon-cloud-download';\n        configureWorkspaceFolderAction.class = 'octicon octicon-pencil';\n        actionbar.push([this.installAllAction], { icon: true, label: false });\n        actionbar.push([configureWorkspaceFolderAction], { icon: true, label: false });\n        (_a = this.disposables).push.apply(_a, [this.installAllAction, configureWorkspaceFolderAction, actionbar]);\n    };\n    WorkspaceRecommendedExtensionsView.prototype.show = function (query) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var shouldShowEmptyView, model;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        shouldShowEmptyView = query && query.trim() !== '@recommended' && query.trim() !== '@recommended:workspace';\n                        return [4 /*yield*/, (shouldShowEmptyView ? this.showEmptyModel() : _super.prototype.show.call(this, this.recommendedExtensionsQuery))];\n                    case 1:\n                        model = _a.sent();\n                        this.setExpanded(model.length > 0);\n                        return [2 /*return*/, model];\n                }\n            });\n        });\n    };\n    WorkspaceRecommendedExtensionsView.prototype.update = function () {\n        this.show(this.recommendedExtensionsQuery);\n        this.setRecommendationsToInstall();\n    };\n    WorkspaceRecommendedExtensionsView.prototype.setRecommendationsToInstall = function () {\n        var _this = this;\n        return this.getRecommendationsToInstall()\n            .then(function (recommendations) { _this.installAllAction.recommendations = recommendations; });\n    };\n    WorkspaceRecommendedExtensionsView.prototype.getRecommendationsToInstall = function () {\n        var _this = this;\n        return this.tipsService.getWorkspaceRecommendations()\n            .then(function (recommendations) { return recommendations.filter(function (_a) {\n            var extensionId = _a.extensionId;\n            return !_this.extensionsWorkbenchService.local.some(function (i) { return extensionManagementUtil_1.areSameExtensions({ id: extensionId }, i.identifier); });\n        }); });\n    };\n    return WorkspaceRecommendedExtensionsView;\n}(ExtensionsListView));\nexports.WorkspaceRecommendedExtensionsView = WorkspaceRecommendedExtensionsView;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsViews.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsViews.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { PagedModel, IPagedModel, IPager, DelayedPagedModel } from 'vs/base/common/paging';\nimport { SortBy, SortOrder, IQueryOptions, IExtensionTipsService, IExtensionRecommendation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { append, $, toggleClass } from 'vs/base/browser/dom';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Delegate, Renderer, IExtensionsViewState } from 'vs/workbench/contrib/extensions/electron-browser/extensionsList';\nimport { IExtension, IExtensionsWorkbenchService } from '../common/extensions';\nimport { Query } from '../common/extensionQuery';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachBadgeStyler } from 'vs/platform/theme/common/styler';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { OpenGlobalSettingsAction } from 'vs/workbench/contrib/preferences/browser/preferencesActions';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { CountBadge } from 'vs/base/browser/ui/countBadge/countBadge';\nimport { ActionBar, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { InstallWorkspaceRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction, ManageExtensionAction } from 'vs/workbench/contrib/extensions/electron-browser/extensionsActions';\nimport { WorkbenchPagedList } from 'vs/platform/list/browser/listService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { distinct, coalesce } from 'vs/base/common/arrays';\nimport { IExperimentService, IExperiment, ExperimentActionType } from 'vs/workbench/contrib/experiments/node/experimentService';\nimport { alert } from 'vs/base/browser/ui/aria/aria';\nimport { IListContextMenuEvent } from 'vs/base/browser/ui/list/list';\nimport { createErrorWithActions } from 'vs/base/common/errorsWithActions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IAction } from 'vs/base/common/actions';\nimport { ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport product from 'vs/platform/product/node/product';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\n\nclass ExtensionsViewState extends Disposable implements IExtensionsViewState {\n\n\tprivate readonly _onFocus: Emitter<IExtension> = this._register(new Emitter<IExtension>());\n\treadonly onFocus: Event<IExtension> = this._onFocus.event;\n\n\tprivate readonly _onBlur: Emitter<IExtension> = this._register(new Emitter<IExtension>());\n\treadonly onBlur: Event<IExtension> = this._onBlur.event;\n\n\tprivate currentlyFocusedItems: IExtension[] = [];\n\n\tonFocusChange(extensions: IExtension[]): void {\n\t\tthis.currentlyFocusedItems.forEach(extension => this._onBlur.fire(extension));\n\t\tthis.currentlyFocusedItems = extensions;\n\t\tthis.currentlyFocusedItems.forEach(extension => this._onFocus.fire(extension));\n\t}\n}\n\nexport class ExtensionsListView extends ViewletPanel {\n\n\tprivate messageBox: HTMLElement;\n\tprivate extensionsList: HTMLElement;\n\tprivate badge: CountBadge;\n\tprotected badgeContainer: HTMLElement;\n\tprivate list: WorkbenchPagedList<IExtension> | null;\n\tprivate queryRequest: { query: string, request: CancelablePromise<IPagedModel<IExtension>> } | null;\n\n\tconstructor(\n\t\tprivate options: IViewletViewOptions,\n\t\t@INotificationService protected notificationService: INotificationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionsWorkbenchService protected extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IExtensionTipsService protected tipsService: IExtensionTipsService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IExperimentService private readonly experimentService: IExperimentService,\n\t\t@IWorkbenchThemeService private readonly workbenchThemeService: IWorkbenchThemeService\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), ariaHeaderLabel: options.title }, keybindingService, contextMenuService, configurationService);\n\t}\n\n\tprotected renderHeader(container: HTMLElement): void {\n\t\tthis.renderHeaderTitle(container);\n\t}\n\n\trenderHeaderTitle(container: HTMLElement): void {\n\t\tsuper.renderHeaderTitle(container, this.options.title);\n\n\t\tthis.badgeContainer = append(container, $('.count-badge-wrapper'));\n\t\tthis.badge = new CountBadge(this.badgeContainer);\n\t\tthis.disposables.push(attachBadgeStyler(this.badge, this.themeService));\n\t}\n\n\trenderBody(container: HTMLElement): void {\n\t\tthis.extensionsList = append(container, $('.extensions-list'));\n\t\tthis.messageBox = append(container, $('.message'));\n\t\tconst delegate = new Delegate();\n\t\tconst extensionsViewState = new ExtensionsViewState();\n\t\tconst renderer = this.instantiationService.createInstance(Renderer, extensionsViewState);\n\t\tthis.list = this.instantiationService.createInstance(WorkbenchPagedList, this.extensionsList, delegate, [renderer], {\n\t\t\tariaLabel: localize('extensions', \"Extensions\"),\n\t\t\tmultipleSelectionSupport: false,\n\t\t\tsetRowLineHeight: false,\n\t\t\thorizontalScrolling: false\n\t\t}) as WorkbenchPagedList<IExtension>;\n\t\tthis.list.onContextMenu(e => this.onContextMenu(e), this, this.disposables);\n\t\tthis.list.onFocusChange(e => extensionsViewState.onFocusChange(coalesce(e.elements)), this, this.disposables);\n\t\tthis.disposables.push(this.list);\n\t\tthis.disposables.push(extensionsViewState);\n\n\t\tEvent.chain(this.list.onOpen)\n\t\t\t.map(e => e.elements[0])\n\t\t\t.filter(e => !!e)\n\t\t\t.on(this.openExtension, this, this.disposables);\n\n\t\tEvent.chain(this.list.onPin)\n\t\t\t.map(e => e.elements[0])\n\t\t\t.filter(e => !!e)\n\t\t\t.on(this.pin, this, this.disposables);\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis.extensionsList.style.height = height + 'px';\n\t\tif (this.list) {\n\t\t\tthis.list.layout(height, width);\n\t\t}\n\t}\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\tif (this.queryRequest) {\n\t\t\tif (this.queryRequest.query === query) {\n\t\t\t\treturn this.queryRequest.request;\n\t\t\t}\n\t\t\tthis.queryRequest.request.cancel();\n\t\t\tthis.queryRequest = null;\n\t\t}\n\n\t\tconst parsedQuery = Query.parse(query);\n\n\t\tlet options: IQueryOptions = {\n\t\t\tsortOrder: SortOrder.Default\n\t\t};\n\n\t\tswitch (parsedQuery.sortBy) {\n\t\t\tcase 'installs': options = assign(options, { sortBy: SortBy.InstallCount }); break;\n\t\t\tcase 'rating': options = assign(options, { sortBy: SortBy.WeightedRating }); break;\n\t\t\tcase 'name': options = assign(options, { sortBy: SortBy.Title }); break;\n\t\t}\n\n\t\tconst successCallback = (model: IPagedModel<IExtension>) => {\n\t\t\tthis.queryRequest = null;\n\t\t\tthis.setModel(model);\n\t\t\treturn model;\n\t\t};\n\n\n\t\tconst errorCallback = (e: Error) => {\n\t\t\tconst model = new PagedModel([]);\n\t\t\tif (!isPromiseCanceledError(e)) {\n\t\t\t\tthis.queryRequest = null;\n\t\t\t\tconsole.warn('Error querying extensions gallery', e);\n\t\t\t\tthis.setModel(model, true);\n\t\t\t}\n\t\t\treturn this.list ? this.list.model : model;\n\t\t};\n\n\t\tconst request = createCancelablePromise(token => this.query(parsedQuery, options, token).then(successCallback).catch(errorCallback));\n\t\tthis.queryRequest = { query, request };\n\t\treturn request;\n\t}\n\n\tcount(): number {\n\t\treturn this.list ? this.list.length : 0;\n\t}\n\n\tprotected showEmptyModel(): Promise<IPagedModel<IExtension>> {\n\t\tconst emptyModel = new PagedModel([]);\n\t\tthis.setModel(emptyModel);\n\t\treturn Promise.resolve(emptyModel);\n\t}\n\n\tprivate async onContextMenu(e: IListContextMenuEvent<IExtension>): Promise<void> {\n\t\tif (e.element) {\n\t\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\t\t\tconst colorThemes = await this.workbenchThemeService.getColorThemes();\n\t\t\tconst fileIconThemes = await this.workbenchThemeService.getFileIconThemes();\n\t\t\tconst manageExtensionAction = this.instantiationService.createInstance(ManageExtensionAction);\n\t\t\tmanageExtensionAction.extension = e.element;\n\t\t\tconst groups = manageExtensionAction.getActionGroups(runningExtensions, colorThemes, fileIconThemes);\n\t\t\tlet actions: IAction[] = [];\n\t\t\tfor (const menuActions of groups) {\n\t\t\t\tactions = [...actions, ...menuActions, new Separator()];\n\t\t\t}\n\t\t\tif (manageExtensionAction.enabled) {\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => e.anchor,\n\t\t\t\t\tgetActions: () => actions.slice(0, actions.length - 1)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async query(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst idRegex = /@id:(([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*))/g;\n\t\tconst ids: string[] = [];\n\t\tlet idMatch;\n\t\twhile ((idMatch = idRegex.exec(query.value)) !== null) {\n\t\t\tconst name = idMatch[1];\n\t\t\tids.push(name);\n\t\t}\n\t\tif (ids.length) {\n\t\t\treturn this.queryByIds(ids, options, token);\n\t\t}\n\t\tif (ExtensionsListView.isInstalledExtensionsQuery(query.value) || /@builtin/.test(query.value)) {\n\t\t\treturn this.queryLocal(query, options);\n\t\t}\n\t\treturn this.queryGallery(query, options, token);\n\t}\n\n\tprivate async queryByIds(ids: string[], options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst idsSet: Set<string> = ids.reduce((result, id) => { result.add(id.toLowerCase()); return result; }, new Set<string>());\n\t\tconst result = (await this.extensionsWorkbenchService.queryLocal())\n\t\t\t.filter(e => idsSet.has(e.identifier.id.toLowerCase()));\n\n\t\tif (result.length) {\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\t\treturn this.extensionsWorkbenchService.queryGallery({ names: ids, source: 'queryById' }, token)\n\t\t\t.then(pager => this.getPagedModel(pager));\n\t}\n\n\tprivate async queryLocal(query: Query, options: IQueryOptions): Promise<IPagedModel<IExtension>> {\n\t\tlet value = query.value;\n\t\tif (/@builtin/i.test(value)) {\n\t\t\tconst showThemesOnly = /@builtin:themes/i.test(value);\n\t\t\tif (showThemesOnly) {\n\t\t\t\tvalue = value.replace(/@builtin:themes/g, '');\n\t\t\t}\n\t\t\tconst showBasicsOnly = /@builtin:basics/i.test(value);\n\t\t\tif (showBasicsOnly) {\n\t\t\t\tvalue = value.replace(/@builtin:basics/g, '');\n\t\t\t}\n\t\t\tconst showFeaturesOnly = /@builtin:features/i.test(value);\n\t\t\tif (showFeaturesOnly) {\n\t\t\t\tvalue = value.replace(/@builtin:features/g, '');\n\t\t\t}\n\n\t\t\tvalue = value.replace(/@builtin/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n\t\t\tlet result = await this.extensionsWorkbenchService.queryLocal();\n\n\t\t\tresult = result\n\t\t\t\t.filter(e => e.type === ExtensionType.System && (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1));\n\n\t\t\tif (showThemesOnly) {\n\t\t\t\tconst themesExtensions = result.filter(e => {\n\t\t\t\t\treturn e.local\n\t\t\t\t\t\t&& e.local.manifest\n\t\t\t\t\t\t&& e.local.manifest.contributes\n\t\t\t\t\t\t&& Array.isArray(e.local.manifest.contributes.themes)\n\t\t\t\t\t\t&& e.local.manifest.contributes.themes.length;\n\t\t\t\t});\n\t\t\t\treturn this.getPagedModel(this.sortExtensions(themesExtensions, options));\n\t\t\t}\n\t\t\tif (showBasicsOnly) {\n\t\t\t\tconst basics = result.filter(e => {\n\t\t\t\t\treturn e.local && e.local.manifest\n\t\t\t\t\t\t&& e.local.manifest.contributes\n\t\t\t\t\t\t&& Array.isArray(e.local.manifest.contributes.grammars)\n\t\t\t\t\t\t&& e.local.manifest.contributes.grammars.length\n\t\t\t\t\t\t&& e.local.identifier.id !== 'vscode.git';\n\t\t\t\t});\n\t\t\t\treturn this.getPagedModel(this.sortExtensions(basics, options));\n\t\t\t}\n\t\t\tif (showFeaturesOnly) {\n\t\t\t\tconst others = result.filter(e => {\n\t\t\t\t\treturn e.local\n\t\t\t\t\t\t&& e.local.manifest\n\t\t\t\t\t\t&& e.local.manifest.contributes\n\t\t\t\t\t\t&& (!Array.isArray(e.local.manifest.contributes.grammars) || e.local.identifier.id === 'vscode.git')\n\t\t\t\t\t\t&& !Array.isArray(e.local.manifest.contributes.themes);\n\t\t\t\t});\n\t\t\t\treturn this.getPagedModel(this.sortExtensions(others, options));\n\t\t\t}\n\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\t\tconst categories: string[] = [];\n\t\tvalue = value.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\tconst entry = (category || quotedCategory || '').toLowerCase();\n\t\t\tif (categories.indexOf(entry) === -1) {\n\t\t\t\tcategories.push(entry);\n\t\t\t}\n\t\t\treturn '';\n\t\t});\n\n\t\tif (/@installed/i.test(value)) {\n\t\t\t// Show installed extensions\n\t\t\tvalue = value.replace(/@installed/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n\n\t\t\tlet result = await this.extensionsWorkbenchService.queryLocal();\n\n\t\t\tresult = result\n\t\t\t\t.filter(e => e.type === ExtensionType.User\n\t\t\t\t\t&& (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n\t\t\t\t\t&& (!categories.length || categories.some(category => (e.local && e.local.manifest.categories || []).some(c => c.toLowerCase() === category))));\n\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\n\t\tif (/@outdated/i.test(value)) {\n\t\t\tvalue = value.replace(/@outdated/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n\n\t\t\tconst local = await this.extensionsWorkbenchService.queryLocal();\n\t\t\tconst result = local\n\t\t\t\t.sort((e1, e2) => e1.displayName.localeCompare(e2.displayName))\n\t\t\t\t.filter(extension => extension.outdated\n\t\t\t\t\t&& (extension.name.toLowerCase().indexOf(value) > -1 || extension.displayName.toLowerCase().indexOf(value) > -1)\n\t\t\t\t\t&& (!categories.length || categories.some(category => !!extension.local && extension.local.manifest.categories!.some(c => c.toLowerCase() === category))));\n\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\t\tif (/@disabled/i.test(value)) {\n\t\t\tvalue = value.replace(/@disabled/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase();\n\n\t\t\tconst local = await this.extensionsWorkbenchService.queryLocal();\n\t\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\n\t\t\tconst result = local\n\t\t\t\t.sort((e1, e2) => e1.displayName.localeCompare(e2.displayName))\n\t\t\t\t.filter(e => runningExtensions.every(r => !areSameExtensions({ id: r.identifier.value }, e.identifier))\n\t\t\t\t\t&& (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n\t\t\t\t\t&& (!categories.length || categories.some(category => (e.local && e.local.manifest.categories || []).some(c => c.toLowerCase() === category))));\n\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\t\tif (/@enabled/i.test(value)) {\n\t\t\tvalue = value ? value.replace(/@enabled/g, '').replace(/@sort:(\\w+)(-\\w*)?/g, '').trim().toLowerCase() : '';\n\n\t\t\tconst local = (await this.extensionsWorkbenchService.queryLocal()).filter(e => e.type === ExtensionType.User);\n\t\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\n\t\t\tconst result = local\n\t\t\t\t.sort((e1, e2) => e1.displayName.localeCompare(e2.displayName))\n\t\t\t\t.filter(e => runningExtensions.some(r => areSameExtensions({ id: r.identifier.value }, e.identifier))\n\t\t\t\t\t&& (e.name.toLowerCase().indexOf(value) > -1 || e.displayName.toLowerCase().indexOf(value) > -1)\n\t\t\t\t\t&& (!categories.length || categories.some(category => (e.local && e.local.manifest.categories || []).some(c => c.toLowerCase() === category))));\n\n\t\t\treturn this.getPagedModel(this.sortExtensions(result, options));\n\t\t}\n\n\t\treturn new PagedModel([]);\n\t}\n\n\tprivate async queryGallery(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst hasUserDefinedSortOrder = options.sortBy !== undefined;\n\t\tif (!hasUserDefinedSortOrder && !query.value.trim()) {\n\t\t\toptions.sortBy = SortBy.InstallCount;\n\t\t}\n\n\t\tif (ExtensionsListView.isWorkspaceRecommendedExtensionsQuery(query.value)) {\n\t\t\treturn this.getWorkspaceRecommendationsModel(query, options, token);\n\t\t} else if (ExtensionsListView.isKeymapsRecommendedExtensionsQuery(query.value)) {\n\t\t\treturn this.getKeymapRecommendationsModel(query, options, token);\n\t\t} else if (/@recommended:all/i.test(query.value) || ExtensionsListView.isSearchRecommendedExtensionsQuery(query.value)) {\n\t\t\treturn this.getAllRecommendationsModel(query, options, token);\n\t\t} else if (ExtensionsListView.isRecommendedExtensionsQuery(query.value)) {\n\t\t\treturn this.getRecommendationsModel(query, options, token);\n\t\t}\n\n\t\tif (/\\bcurated:([^\\s]+)\\b/.test(query.value)) {\n\t\t\treturn this.getCuratedModel(query, options, token);\n\t\t}\n\n\t\tlet text = query.value;\n\t\tconst extensionRegex = /\\bext:([^\\s]+)\\b/g;\n\n\t\tif (extensionRegex.test(query.value)) {\n\t\t\ttext = query.value.replace(extensionRegex, (m, ext) => {\n\n\t\t\t\t// Get curated keywords\n\t\t\t\tconst lookup = product.extensionKeywords || {};\n\t\t\t\tconst keywords = lookup[ext] || [];\n\n\t\t\t\t// Get mode name\n\t\t\t\tconst modeId = this.modeService.getModeIdByFilepathOrFirstLine(`.${ext}`);\n\t\t\t\tconst languageName = modeId && this.modeService.getLanguageName(modeId);\n\t\t\t\tconst languageTag = languageName ? ` tag:\"${languageName}\"` : '';\n\n\t\t\t\t// Construct a rich query\n\t\t\t\treturn `tag:\"__ext_${ext}\" tag:\"__ext_.${ext}\" ${keywords.map(tag => `tag:\"${tag}\"`).join(' ')}${languageTag} tag:\"${ext}\"`;\n\t\t\t});\n\n\t\t\tif (text !== query.value) {\n\t\t\t\toptions = assign(options, { text: text.substr(0, 350), source: 'file-extension-tags' });\n\t\t\t\treturn this.extensionsWorkbenchService.queryGallery(options, token).then(pager => this.getPagedModel(pager));\n\t\t\t}\n\t\t}\n\n\t\tlet preferredResults: string[] = [];\n\t\tif (text) {\n\t\t\toptions = assign(options, { text: text.substr(0, 350), source: 'searchText' });\n\t\t\tif (!hasUserDefinedSortOrder) {\n\t\t\t\tconst searchExperiments = await this.getSearchExperiments();\n\t\t\t\tfor (const experiment of searchExperiments) {\n\t\t\t\t\tif (experiment.action && text.toLowerCase() === experiment.action.properties['searchText'] && Array.isArray(experiment.action.properties['preferredResults'])) {\n\t\t\t\t\t\tpreferredResults = experiment.action.properties['preferredResults'];\n\t\t\t\t\t\toptions.source += `-experiment-${experiment.id}`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toptions.source = 'viewlet';\n\t\t}\n\n\t\tconst pager = await this.extensionsWorkbenchService.queryGallery(options, token);\n\n\t\tlet positionToUpdate = 0;\n\t\tfor (const preferredResult of preferredResults) {\n\t\t\tfor (let j = positionToUpdate; j < pager.firstPage.length; j++) {\n\t\t\t\tif (areSameExtensions(pager.firstPage[j].identifier, { id: preferredResult })) {\n\t\t\t\t\tif (positionToUpdate !== j) {\n\t\t\t\t\t\tconst preferredExtension = pager.firstPage.splice(j, 1)[0];\n\t\t\t\t\t\tpager.firstPage.splice(positionToUpdate, 0, preferredExtension);\n\t\t\t\t\t\tpositionToUpdate++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.getPagedModel(pager);\n\n\t}\n\n\tprivate _searchExperiments: Promise<IExperiment[]>;\n\tprivate getSearchExperiments(): Promise<IExperiment[]> {\n\t\tif (!this._searchExperiments) {\n\t\t\tthis._searchExperiments = this.experimentService.getExperimentsByType(ExperimentActionType.ExtensionSearchResults);\n\t\t}\n\t\treturn this._searchExperiments;\n\t}\n\n\tprivate sortExtensions(extensions: IExtension[], options: IQueryOptions): IExtension[] {\n\t\tswitch (options.sortBy) {\n\t\t\tcase SortBy.InstallCount:\n\t\t\t\textensions = extensions.sort((e1, e2) => typeof e2.installCount === 'number' && typeof e1.installCount === 'number' ? e2.installCount - e1.installCount : NaN);\n\t\t\t\tbreak;\n\t\t\tcase SortBy.AverageRating:\n\t\t\tcase SortBy.WeightedRating:\n\t\t\t\textensions = extensions.sort((e1, e2) => typeof e2.rating === 'number' && typeof e1.rating === 'number' ? e2.rating - e1.rating : NaN);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\textensions = extensions.sort((e1, e2) => e1.displayName.localeCompare(e2.displayName));\n\t\t\t\tbreak;\n\t\t}\n\t\tif (options.sortOrder === SortOrder.Descending) {\n\t\t\textensions = extensions.reverse();\n\t\t}\n\t\treturn extensions;\n\t}\n\n\t// Get All types of recommendations, trimmed to show a max of 8 at any given time\n\tprivate getAllRecommendationsModel(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst value = query.value.replace(/@recommended:all/g, '').replace(/@recommended/g, '').trim().toLowerCase();\n\n\t\treturn this.extensionsWorkbenchService.queryLocal()\n\t\t\t.then(result => result.filter(e => e.type === ExtensionType.User))\n\t\t\t.then(local => {\n\t\t\t\tconst fileBasedRecommendations = this.tipsService.getFileBasedRecommendations();\n\t\t\t\tconst othersPromise = this.tipsService.getOtherRecommendations();\n\t\t\t\tconst workspacePromise = this.tipsService.getWorkspaceRecommendations();\n\n\t\t\t\treturn Promise.all([othersPromise, workspacePromise])\n\t\t\t\t\t.then(([others, workspaceRecommendations]) => {\n\t\t\t\t\t\tconst names = this.getTrimmedRecommendations(local, value, fileBasedRecommendations, others, workspaceRecommendations);\n\t\t\t\t\t\tconst recommendationsWithReason = this.tipsService.getAllRecommendationsWithReason();\n\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"extensionAllRecommendations:open\" : {\n\t\t\t\t\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\t\"recommendations\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tthis.telemetryService.publicLog('extensionAllRecommendations:open', {\n\t\t\t\t\t\t\tcount: names.length,\n\t\t\t\t\t\t\trecommendations: names.map(id => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\trecommendationReason: recommendationsWithReason[id.toLowerCase()].reasonId\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!names.length) {\n\t\t\t\t\t\t\treturn Promise.resolve(new PagedModel([]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions.source = 'recommendations-all';\n\t\t\t\t\t\treturn this.extensionsWorkbenchService.queryGallery(assign(options, { names, pageSize: names.length }), token)\n\t\t\t\t\t\t\t.then(pager => {\n\t\t\t\t\t\t\t\tthis.sortFirstPage(pager, names);\n\t\t\t\t\t\t\t\treturn this.getPagedModel(pager || []);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate async getCuratedModel(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst value = query.value.replace(/curated:/g, '').trim();\n\t\tconst names = await this.experimentService.getCuratedExtensionsList(value);\n\t\tif (Array.isArray(names) && names.length) {\n\t\t\toptions.source = `curated:${value}`;\n\t\t\tconst pager = await this.extensionsWorkbenchService.queryGallery(assign(options, { names, pageSize: names.length }), token);\n\t\t\tthis.sortFirstPage(pager, names);\n\t\t\treturn this.getPagedModel(pager || []);\n\t\t}\n\t\treturn new PagedModel([]);\n\t}\n\n\t// Get All types of recommendations other than Workspace recommendations, trimmed to show a max of 8 at any given time\n\tprivate getRecommendationsModel(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst value = query.value.replace(/@recommended/g, '').trim().toLowerCase();\n\n\t\treturn this.extensionsWorkbenchService.queryLocal()\n\t\t\t.then(result => result.filter(e => e.type === ExtensionType.User))\n\t\t\t.then(local => {\n\t\t\t\tlet fileBasedRecommendations = this.tipsService.getFileBasedRecommendations();\n\t\t\t\tconst othersPromise = this.tipsService.getOtherRecommendations();\n\t\t\t\tconst workspacePromise = this.tipsService.getWorkspaceRecommendations();\n\n\t\t\t\treturn Promise.all([othersPromise, workspacePromise])\n\t\t\t\t\t.then(([others, workspaceRecommendations]) => {\n\t\t\t\t\t\tfileBasedRecommendations = fileBasedRecommendations.filter(x => workspaceRecommendations.every(({ extensionId }) => x.extensionId !== extensionId));\n\t\t\t\t\t\tothers = others.filter(x => workspaceRecommendations.every(({ extensionId }) => x.extensionId !== extensionId));\n\n\t\t\t\t\t\tconst names = this.getTrimmedRecommendations(local, value, fileBasedRecommendations, others, []);\n\t\t\t\t\t\tconst recommendationsWithReason = this.tipsService.getAllRecommendationsWithReason();\n\n\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"extensionRecommendations:open\" : {\n\t\t\t\t\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\t\"recommendations\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tthis.telemetryService.publicLog('extensionRecommendations:open', {\n\t\t\t\t\t\t\tcount: names.length,\n\t\t\t\t\t\t\trecommendations: names.map(id => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\trecommendationReason: recommendationsWithReason[id.toLowerCase()].reasonId\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (!names.length) {\n\t\t\t\t\t\t\treturn Promise.resolve(new PagedModel([]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions.source = 'recommendations';\n\t\t\t\t\t\treturn this.extensionsWorkbenchService.queryGallery(assign(options, { names, pageSize: names.length }), token)\n\t\t\t\t\t\t\t.then(pager => {\n\t\t\t\t\t\t\t\tthis.sortFirstPage(pager, names);\n\t\t\t\t\t\t\t\treturn this.getPagedModel(pager || []);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\t// Given all recommendations, trims and returns recommendations in the relevant order after filtering out installed extensions\n\tprivate getTrimmedRecommendations(installedExtensions: IExtension[], value: string, fileBasedRecommendations: IExtensionRecommendation[], otherRecommendations: IExtensionRecommendation[], workpsaceRecommendations: IExtensionRecommendation[]): string[] {\n\t\tconst totalCount = 8;\n\t\tworkpsaceRecommendations = workpsaceRecommendations\n\t\t\t.filter(recommendation => {\n\t\t\t\treturn !this.isRecommendationInstalled(recommendation, installedExtensions)\n\t\t\t\t\t&& recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n\t\t\t});\n\t\tfileBasedRecommendations = fileBasedRecommendations.filter(recommendation => {\n\t\t\treturn !this.isRecommendationInstalled(recommendation, installedExtensions)\n\t\t\t\t&& workpsaceRecommendations.every(workspaceRecommendation => workspaceRecommendation.extensionId !== recommendation.extensionId)\n\t\t\t\t&& recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n\t\t});\n\t\totherRecommendations = otherRecommendations.filter(recommendation => {\n\t\t\treturn !this.isRecommendationInstalled(recommendation, installedExtensions)\n\t\t\t\t&& fileBasedRecommendations.every(fileBasedRecommendation => fileBasedRecommendation.extensionId !== recommendation.extensionId)\n\t\t\t\t&& workpsaceRecommendations.every(workspaceRecommendation => workspaceRecommendation.extensionId !== recommendation.extensionId)\n\t\t\t\t&& recommendation.extensionId.toLowerCase().indexOf(value) > -1;\n\t\t});\n\n\t\tconst otherCount = Math.min(2, otherRecommendations.length);\n\t\tconst fileBasedCount = Math.min(fileBasedRecommendations.length, totalCount - workpsaceRecommendations.length - otherCount);\n\t\tconst recommendations = workpsaceRecommendations;\n\t\trecommendations.push(...fileBasedRecommendations.splice(0, fileBasedCount));\n\t\trecommendations.push(...otherRecommendations.splice(0, otherCount));\n\n\t\treturn distinct(recommendations.map(({ extensionId }) => extensionId));\n\t}\n\n\tprivate isRecommendationInstalled(recommendation: IExtensionRecommendation, installed: IExtension[]): boolean {\n\t\treturn installed.some(i => areSameExtensions(i.identifier, { id: recommendation.extensionId }));\n\t}\n\n\tprivate getWorkspaceRecommendationsModel(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst value = query.value.replace(/@recommended:workspace/g, '').trim().toLowerCase();\n\t\treturn this.tipsService.getWorkspaceRecommendations()\n\t\t\t.then(recommendations => {\n\t\t\t\tconst names = recommendations.map(({ extensionId }) => extensionId).filter(name => name.toLowerCase().indexOf(value) > -1);\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"extensionWorkspaceRecommendations:open\" : {\n\t\t\t\t\t\t\"count\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\tthis.telemetryService.publicLog('extensionWorkspaceRecommendations:open', { count: names.length });\n\n\t\t\t\tif (!names.length) {\n\t\t\t\t\treturn Promise.resolve(new PagedModel([]));\n\t\t\t\t}\n\t\t\t\toptions.source = 'recommendations-workspace';\n\t\t\t\treturn this.extensionsWorkbenchService.queryGallery(assign(options, { names, pageSize: names.length }), token)\n\t\t\t\t\t.then(pager => this.getPagedModel(pager || []));\n\t\t\t});\n\t}\n\n\tprivate getKeymapRecommendationsModel(query: Query, options: IQueryOptions, token: CancellationToken): Promise<IPagedModel<IExtension>> {\n\t\tconst value = query.value.replace(/@recommended:keymaps/g, '').trim().toLowerCase();\n\t\tconst names: string[] = this.tipsService.getKeymapRecommendations().map(({ extensionId }) => extensionId)\n\t\t\t.filter(extensionId => extensionId.toLowerCase().indexOf(value) > -1);\n\n\t\tif (!names.length) {\n\t\t\treturn Promise.resolve(new PagedModel([]));\n\t\t}\n\t\toptions.source = 'recommendations-keymaps';\n\t\treturn this.extensionsWorkbenchService.queryGallery(assign(options, { names, pageSize: names.length }), token)\n\t\t\t.then(result => this.getPagedModel(result));\n\t}\n\n\t// Sorts the firstPage of the pager in the same order as given array of extension ids\n\tprivate sortFirstPage(pager: IPager<IExtension>, ids: string[]) {\n\t\tids = ids.map(x => x.toLowerCase());\n\t\tpager.firstPage.sort((a, b) => {\n\t\t\treturn ids.indexOf(a.identifier.id.toLowerCase()) < ids.indexOf(b.identifier.id.toLowerCase()) ? -1 : 1;\n\t\t});\n\t}\n\n\tprivate setModel(model: IPagedModel<IExtension>, isGalleryError?: boolean) {\n\t\tif (this.list) {\n\t\t\tthis.list.model = new DelayedPagedModel(model);\n\t\t\tthis.list.scrollTop = 0;\n\t\t\tconst count = this.count();\n\n\t\t\ttoggleClass(this.extensionsList, 'hidden', count === 0);\n\t\t\ttoggleClass(this.messageBox, 'hidden', count > 0);\n\t\t\tthis.badge.setCount(count);\n\n\t\t\tif (count === 0 && this.isBodyVisible()) {\n\t\t\t\tthis.messageBox.textContent = isGalleryError ? localize('galleryError', \"We cannot connect to the Extensions Marketplace at this time, please try again later.\") : localize('no extensions found', \"No extensions found.\");\n\t\t\t\tif (isGalleryError) {\n\t\t\t\t\talert(this.messageBox.textContent);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.messageBox.textContent = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate openExtension(extension: IExtension): void {\n\t\tthis.extensionsWorkbenchService.open(extension).then(undefined, err => this.onError(err));\n\t}\n\n\tprivate pin(): void {\n\t\tconst activeControl = this.editorService.activeControl;\n\t\tif (activeControl) {\n\t\t\tactiveControl.group.pinEditor(activeControl.input);\n\t\t\tactiveControl.focus();\n\t\t}\n\t}\n\n\tprivate onError(err: any): void {\n\t\tif (isPromiseCanceledError(err)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = err && err.message || '';\n\n\t\tif (/ECONNREFUSED/.test(message)) {\n\t\t\tconst error = createErrorWithActions(localize('suggestProxyError', \"Marketplace returned 'ECONNREFUSED'. Please check the 'http.proxy' setting.\"), {\n\t\t\t\tactions: [\n\t\t\t\t\tthis.instantiationService.createInstance(OpenGlobalSettingsAction, OpenGlobalSettingsAction.ID, OpenGlobalSettingsAction.LABEL)\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tthis.notificationService.error(error);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.error(err);\n\t}\n\n\tprivate getPagedModel(arg: IPager<IExtension> | IExtension[]): IPagedModel<IExtension> {\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn new PagedModel(arg);\n\t\t}\n\t\tconst pager = {\n\t\t\ttotal: arg.total,\n\t\t\tpageSize: arg.pageSize,\n\t\t\tfirstPage: arg.firstPage,\n\t\t\tgetPage: (pageIndex: number, cancellationToken: CancellationToken) => arg.getPage(pageIndex, cancellationToken)\n\t\t};\n\t\treturn new PagedModel(pager);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.queryRequest) {\n\t\t\tthis.queryRequest.request.cancel();\n\t\t\tthis.queryRequest = null;\n\t\t}\n\t\tthis.disposables = dispose(this.disposables);\n\t\tthis.list = null;\n\t}\n\n\tstatic isBuiltInExtensionsQuery(query: string): boolean {\n\t\treturn /^\\s*@builtin\\s*$/i.test(query);\n\t}\n\n\tstatic isInstalledExtensionsQuery(query: string): boolean {\n\t\treturn /@installed|@outdated|@enabled|@disabled/i.test(query);\n\t}\n\n\tstatic isGroupByServersExtensionsQuery(query: string): boolean {\n\t\treturn !!Query.parse(query).groupBy;\n\t}\n\n\tstatic isRecommendedExtensionsQuery(query: string): boolean {\n\t\treturn /^@recommended$/i.test(query.trim());\n\t}\n\n\tstatic isSearchRecommendedExtensionsQuery(query: string): boolean {\n\t\treturn /@recommended/i.test(query) && !ExtensionsListView.isRecommendedExtensionsQuery(query);\n\t}\n\n\tstatic isWorkspaceRecommendedExtensionsQuery(query: string): boolean {\n\t\treturn /@recommended:workspace/i.test(query);\n\t}\n\n\tstatic isKeymapsRecommendedExtensionsQuery(query: string): boolean {\n\t\treturn /@recommended:keymaps/i.test(query);\n\t}\n\n\tfocus(): void {\n\t\tsuper.focus();\n\t\tif (!this.list) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(this.list.getFocus().length || this.list.getSelection().length)) {\n\t\t\tthis.list.focusNext();\n\t\t}\n\t\tthis.list.domFocus();\n\t}\n}\n\nexport class GroupByServerExtensionsView extends ExtensionsListView {\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\tquery = query.replace(/@group:server/g, '').trim();\n\t\tquery = query ? query : '@installed';\n\t\tif (!ExtensionsListView.isInstalledExtensionsQuery(query) && !ExtensionsListView.isBuiltInExtensionsQuery(query)) {\n\t\t\tquery = query += ' @installed';\n\t\t}\n\t\treturn super.show(query.trim());\n\t}\n}\n\nexport class EnabledExtensionsView extends ExtensionsListView {\n\tprivate readonly enabledExtensionsQuery = '@enabled';\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== this.enabledExtensionsQuery) ? this.showEmptyModel() : super.show(this.enabledExtensionsQuery);\n\t}\n}\n\nexport class DisabledExtensionsView extends ExtensionsListView {\n\tprivate readonly disabledExtensionsQuery = '@disabled';\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== this.disabledExtensionsQuery) ? this.showEmptyModel() : super.show(this.disabledExtensionsQuery);\n\t}\n}\n\nexport class BuiltInExtensionsView extends ExtensionsListView {\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== '@builtin') ? this.showEmptyModel() : super.show('@builtin:features');\n\t}\n}\n\nexport class BuiltInThemesExtensionsView extends ExtensionsListView {\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== '@builtin') ? this.showEmptyModel() : super.show('@builtin:themes');\n\t}\n}\n\nexport class BuiltInBasicsExtensionsView extends ExtensionsListView {\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== '@builtin') ? this.showEmptyModel() : super.show('@builtin:basics');\n\t}\n}\n\nexport class DefaultRecommendedExtensionsView extends ExtensionsListView {\n\tprivate readonly recommendedExtensionsQuery = '@recommended:all';\n\n\trenderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.disposables.push(this.tipsService.onRecommendationChange(() => {\n\t\t\tthis.show('');\n\t\t}));\n\t}\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\tif (query && query.trim() !== this.recommendedExtensionsQuery) {\n\t\t\treturn this.showEmptyModel();\n\t\t}\n\t\tconst model = await super.show(this.recommendedExtensionsQuery);\n\t\tif (!this.extensionsWorkbenchService.local.some(e => e.type === ExtensionType.User)) {\n\t\t\t// This is part of popular extensions view. Collapse if no installed extensions.\n\t\t\tthis.setExpanded(model.length > 0);\n\t\t}\n\t\treturn model;\n\t}\n\n}\n\nexport class RecommendedExtensionsView extends ExtensionsListView {\n\tprivate readonly recommendedExtensionsQuery = '@recommended';\n\n\trenderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.disposables.push(this.tipsService.onRecommendationChange(() => {\n\t\t\tthis.show('');\n\t\t}));\n\t}\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\treturn (query && query.trim() !== this.recommendedExtensionsQuery) ? this.showEmptyModel() : super.show(this.recommendedExtensionsQuery);\n\t}\n}\n\nexport class WorkspaceRecommendedExtensionsView extends ExtensionsListView {\n\tprivate readonly recommendedExtensionsQuery = '@recommended:workspace';\n\tprivate installAllAction: InstallWorkspaceRecommendedExtensionsAction;\n\n\trenderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\n\t\tthis.disposables.push(this.tipsService.onRecommendationChange(() => this.update()));\n\t\tthis.disposables.push(this.extensionsWorkbenchService.onChange(() => this.setRecommendationsToInstall()));\n\t\tthis.disposables.push(this.contextService.onDidChangeWorkbenchState(() => this.update()));\n\t}\n\n\trenderHeader(container: HTMLElement): void {\n\t\tsuper.renderHeader(container);\n\n\t\tconst listActionBar = $('.list-actionbar-container');\n\t\tcontainer.insertBefore(listActionBar, this.badgeContainer);\n\n\t\tconst actionbar = new ActionBar(listActionBar, {\n\t\t\tanimated: false\n\t\t});\n\t\tactionbar.onDidRun(({ error }) => error && this.notificationService.error(error));\n\n\t\tthis.installAllAction = this.instantiationService.createInstance(InstallWorkspaceRecommendedExtensionsAction, InstallWorkspaceRecommendedExtensionsAction.ID, InstallWorkspaceRecommendedExtensionsAction.LABEL, []);\n\t\tconst configureWorkspaceFolderAction = this.instantiationService.createInstance(ConfigureWorkspaceFolderRecommendedExtensionsAction, ConfigureWorkspaceFolderRecommendedExtensionsAction.ID, ConfigureWorkspaceFolderRecommendedExtensionsAction.LABEL);\n\n\t\tthis.installAllAction.class = 'octicon octicon-cloud-download';\n\t\tconfigureWorkspaceFolderAction.class = 'octicon octicon-pencil';\n\n\t\tactionbar.push([this.installAllAction], { icon: true, label: false });\n\t\tactionbar.push([configureWorkspaceFolderAction], { icon: true, label: false });\n\n\t\tthis.disposables.push(...[this.installAllAction, configureWorkspaceFolderAction, actionbar]);\n\t}\n\n\tasync show(query: string): Promise<IPagedModel<IExtension>> {\n\t\tlet shouldShowEmptyView = query && query.trim() !== '@recommended' && query.trim() !== '@recommended:workspace';\n\t\tlet model = await (shouldShowEmptyView ? this.showEmptyModel() : super.show(this.recommendedExtensionsQuery));\n\t\tthis.setExpanded(model.length > 0);\n\t\treturn model;\n\t}\n\n\tprivate update(): void {\n\t\tthis.show(this.recommendedExtensionsQuery);\n\t\tthis.setRecommendationsToInstall();\n\t}\n\n\tprivate setRecommendationsToInstall(): Promise<void> {\n\t\treturn this.getRecommendationsToInstall()\n\t\t\t.then(recommendations => { this.installAllAction.recommendations = recommendations; });\n\t}\n\n\tprivate getRecommendationsToInstall(): Promise<IExtensionRecommendation[]> {\n\t\treturn this.tipsService.getWorkspaceRecommendations()\n\t\t\t.then(recommendations => recommendations.filter(({ extensionId }) => !this.extensionsWorkbenchService.local.some(i => areSameExtensions({ id: extensionId }, i.identifier))));\n\t}\n}\n"]}]}