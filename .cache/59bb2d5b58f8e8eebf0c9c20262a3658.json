{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/dialog.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/dialog.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar util = require(\"util\");\nvar events_1 = require(\"@coder/events\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar highlightedLabel_1 = require(\"vs/base/browser/ui/highlightedlabel/highlightedLabel\");\nvar objectTree_1 = require(\"vs/base/browser/ui/tree/objectTree\");\nvar tree_1 = require(\"vs/base/browser/ui/tree/tree\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar getIconClasses_1 = require(\"vs/editor/common/services/getIconClasses\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar workbench_1 = require(\"./workbench\");\nrequire(\"./dialog.scss\");\n/**\n * Describes the type of dialog to show.\n */\nvar DialogType;\n(function (DialogType) {\n    DialogType[DialogType[\"NewFolder\"] = 0] = \"NewFolder\";\n    DialogType[DialogType[\"Save\"] = 1] = \"Save\";\n    DialogType[DialogType[\"Open\"] = 2] = \"Open\";\n})(DialogType = exports.DialogType || (exports.DialogType = {}));\nexports.showOpenDialog = function (options) {\n    return new Promise(function (resolve, reject) {\n        var dialog = new Dialog(DialogType.Open, options);\n        dialog.onSelect(function (e) {\n            dialog.dispose();\n            resolve(e);\n        });\n        dialog.onError(function (e) {\n            dialog.dispose();\n            reject(e);\n        });\n    });\n};\n/**\n * Open and save dialogs.\n */\nvar Dialog = /** @class */ (function () {\n    function Dialog(type, options) {\n        var _this = this;\n        this.type = type;\n        this.options = options;\n        this.selectEmitter = new events_1.Emitter();\n        this.errorEmitter = new events_1.Emitter();\n        this.background = document.createElement(\"div\");\n        this.background.style.position = \"absolute\";\n        this.background.style.top = \"0\";\n        this.background.style.left = \"0\";\n        this.background.style.bottom = \"0\";\n        this.background.style.right = \"0\";\n        this.background.style.zIndex = \"5\";\n        this.background.style.display = \"flex\";\n        this.background.style.alignItems = \"center\";\n        this.background.style.justifyContent = \"center\";\n        this.background.style.background = \"rgba(0, 0, 0, 0.25)\";\n        this.root = document.createElement(\"div\");\n        this.root.style.width = \"850px\";\n        this.root.style.height = \"600px\";\n        this.background.appendChild(this.root);\n        (document.querySelector(\".monaco-workbench\") || document.body).appendChild(this.background);\n        this.root.classList.add(\"dialog\");\n        var setProperty = function (vari, id) {\n            var getColor = function (id) {\n                var ts = workbench_1.workbench.serviceCollection.get(themeService_1.IThemeService);\n                var c = ts.getTheme().getColor(id);\n                if (!c) {\n                    return;\n                }\n                return c.toString();\n            };\n            var c = getColor(id);\n            if (c) {\n                _this.root.style.setProperty(vari, c);\n            }\n        };\n        setProperty(\"--primary\", \"sideBar.background\");\n        setProperty(\"--list-active-selection-background\", \"list.activeSelectionBackground\");\n        setProperty(\"--list-active-selection-foreground\", \"list.activeSelectionForeground\");\n        setProperty(\"--list-hover-background\", \"list.hoverBackground\");\n        setProperty(\"--header-background\", \"sideBarSectionHeader.background\");\n        setProperty(\"--header-foreground\", \"sideBarSectionHeader.foreground\");\n        setProperty(\"--border\", \"panel.border\");\n        this.background.addEventListener(\"contextmenu\", function (event) {\n            event.preventDefault();\n        });\n        var titleNode = document.createElement(\"div\");\n        titleNode.classList.add(\"title\");\n        var title;\n        switch (this.type) {\n            // case DialogType.NewFolder:\n            // \ttitle = \"New Folder\";\n            // \tbreak;\n            case DialogType.Open:\n                title = \"Open File\";\n                break;\n            case DialogType.Save:\n                title = \"Save File\";\n                break;\n            default:\n                throw new Error(\"Uncased type\");\n        }\n        titleNode.innerText = options.title || title;\n        this.root.appendChild(titleNode);\n        var navItems = document.createElement(\"div\");\n        navItems.classList.add(\"nav\");\n        this.pathNode = document.createElement(\"div\");\n        this.pathNode.classList.add(\"path\");\n        navItems.appendChild(this.pathNode);\n        this.root.appendChild(navItems);\n        var headingsNode = document.createElement(\"div\");\n        headingsNode.className = \"headings dialog-grid\";\n        [\"Name\", \"Size\", \"Last Modified\"].forEach(function (e) {\n            var header = document.createElement(\"div\");\n            header.innerText = e;\n            headingsNode.appendChild(header);\n        });\n        this.root.appendChild(headingsNode);\n        var fileAreaNode = document.createElement(\"div\");\n        fileAreaNode.classList.add(\"file-area\");\n        fileAreaNode.classList.add(\"show-file-icons\");\n        this.filesNode = document.createElement(\"div\");\n        this.filesNode.className = \"files-list\";\n        this.entryList = new objectTree_1.ObjectTree(this.filesNode, {\n            getHeight: function (_entry) {\n                return 20;\n            },\n            getTemplateId: function (_entry) {\n                return \"dialog-entry\";\n            },\n        }, [new DialogEntryRenderer()], {\n            openController: {\n                shouldOpen: function (_event) {\n                    return true;\n                },\n            },\n            keyboardNavigationLabelProvider: {\n                getKeyboardNavigationLabel: function (element) {\n                    return element.name;\n                },\n                mightProducePrintableCharacter: function (event) {\n                    if (event.ctrlKey || event.metaKey) {\n                        // ignore ctrl/cmd-combination but not shift/alt-combinatios\n                        return false;\n                    }\n                    // weak check for certain ranges. this is properly implemented in a subclass\n                    // with access to the KeyboardMapperFactory.\n                    if ((event.keyCode >= keyCodes_1.KeyCode.KEY_A && event.keyCode <= keyCodes_1.KeyCode.KEY_Z)\n                        || (event.keyCode >= keyCodes_1.KeyCode.KEY_0 && event.keyCode <= keyCodes_1.KeyCode.KEY_9)\n                        || event.keyCode === keyCodes_1.KeyCode.US_DOT || event.keyCode === keyCodes_1.KeyCode.US_SLASH || event.keyCode === keyCodes_1.KeyCode.US_MINUS) {\n                        return true;\n                    }\n                    return false;\n                },\n            },\n            automaticKeyboardNavigation: true,\n            enableKeyboardNavigation: true,\n            multipleSelectionSupport: false,\n            openOnSingleClick: false,\n            filter: {\n                filter: function () {\n                    // tslint:disable-next-line:no-any\n                    _this.entryList._options.simpleKeyboardNavigation = true;\n                    // tslint:disable-next-line:no-any\n                    var pat = _this.entryList.typeFilterController.filter._pattern;\n                    return {\n                        data: pat,\n                        visibility: tree_1.TreeVisibility.Visible,\n                    };\n                },\n            },\n            filterOnType: true,\n        });\n        // tslint:disable-next-line:no-any\n        this.entryList.focusNavigationFilter = function (node) {\n            if (node.filterData) {\n                return node.element.name.toLowerCase().startsWith(node.filterData.toLowerCase());\n            }\n            return false;\n        };\n        this.entryList.onDidOpen(function (event) {\n            var element = event.elements[0];\n            if (!element) {\n                var fv_1 = _this.filterValue;\n                if (fv_1 === Dialog.UpperDirId) {\n                    _this.path = path.dirname(_this._path);\n                }\n                if (fv_1.startsWith(\"/\")) {\n                    fs.stat(fv_1, function (err, stats) {\n                        if (err) {\n                            return;\n                        }\n                        if (stats.isDirectory()) {\n                            _this.path = fv_1;\n                        }\n                    });\n                }\n                return;\n            }\n            // If it's a directory, we want to navigate to it. If it's a file, then we\n            // only want to open it if opening files is supported.\n            if (element.isDirectory) {\n                _this.path = element.fullPath;\n            }\n            else if (_this.options.properties.openFile) {\n                _this.selectEmitter.emit(element.fullPath);\n            }\n        });\n        fileAreaNode.appendChild(this.entryList.getHTMLElement());\n        this.root.appendChild(fileAreaNode);\n        var buttonsNode = document.createElement(\"div\");\n        buttonsNode.className = \"buttons\";\n        var cancelBtn = document.createElement(\"button\");\n        cancelBtn.innerText = \"Cancel\";\n        cancelBtn.addEventListener(\"click\", function () {\n            _this.errorEmitter.emit(new Error(\"Cancelled\"));\n        });\n        buttonsNode.appendChild(cancelBtn);\n        var confirmBtn = document.createElement(\"button\");\n        var openDirectory = this.options.properties.openDirectory;\n        confirmBtn.innerText = this.options.buttonLabel || \"Confirm\";\n        confirmBtn.addEventListener(\"click\", function () {\n            if (_this._path && openDirectory) {\n                _this.selectEmitter.emit(_this._path);\n            }\n        });\n        // Disable if we can't open directories, otherwise you can open a directory\n        // as a file which won't work. This is because our button currently just\n        // always opens whatever directory is opened and will not open selected\n        // files. (A single click on a file is used to open it instead.)\n        if (!openDirectory) {\n            confirmBtn.disabled = true;\n        }\n        buttonsNode.appendChild(confirmBtn);\n        this.root.appendChild(buttonsNode);\n        this.entryList.layout();\n        this.path = options.defaultPath || \"/\";\n    }\n    Object.defineProperty(Dialog.prototype, \"onSelect\", {\n        get: function () {\n            return this.selectEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dialog.prototype, \"onError\", {\n        get: function () {\n            return this.errorEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove the dialog.\n     */\n    Dialog.prototype.dispose = function () {\n        this.selectEmitter.dispose();\n        this.errorEmitter.dispose();\n        this.entryList.dispose();\n        this.background.remove();\n    };\n    /**\n     * Build and insert the path shown at the top of the dialog.\n     */\n    Dialog.prototype.buildPath = function () {\n        var _this = this;\n        while (this.pathNode.lastChild) {\n            this.pathNode.removeChild(this.pathNode.lastChild);\n        }\n        if (!this._path) {\n            throw new Error(\"cannot build path node without valid path\");\n        }\n        var pathParts = [\"\"].concat(this._path.split(\"/\").filter(function (p) { return p.length > 0; }));\n        var _loop_1 = function (i) {\n            var pathPartNode = document.createElement(\"div\");\n            pathPartNode.classList.add(\"path-part\");\n            pathPartNode.innerText = pathParts[i].length > 0 ? pathParts[i] : \"/\";\n            if (i === pathParts.length - 1) {\n                pathPartNode.classList.add(\"active\");\n            }\n            pathPartNode.addEventListener(\"click\", function () {\n                _this.path = \"/\" + pathParts.slice(0, i + 1).join(\"/\");\n            });\n            this_1.pathNode.appendChild(pathPartNode);\n        };\n        var this_1 = this;\n        for (var i = 0; i < pathParts.length; i++) {\n            _loop_1(i);\n        }\n    };\n    Object.defineProperty(Dialog.prototype, \"path\", {\n        set: function (directory) {\n            var _this = this;\n            this.list(directory).then(function (value) {\n                _this._path = directory;\n                _this.buildPath();\n                while (_this.filesNode.lastChild) {\n                    _this.filesNode.removeChild(_this.filesNode.lastChild);\n                }\n                var items = value.filter(function (v) {\n                    if (v.name.startsWith(\".\")) {\n                        var props = _this.options.properties;\n                        if (props && props.showHiddenFiles) {\n                            return true;\n                        }\n                        return false;\n                    }\n                    return true;\n                });\n                _this.entryList.setChildren(null, items.map(function (i) { return ({ element: i }); }));\n                _this.entryList.domFocus();\n                _this.entryList.setFocus([null]);\n                // Clears the input on refresh\n                // tslint:disable-next-line:no-any\n                _this.entryList.typeFilterController.onInput(\"\");\n            }).catch(function (ex) {\n                _this.errorEmitter.emit(ex);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dialog.prototype, \"filterValue\", {\n        get: function () {\n            // tslint:disable-next-line:no-any\n            return this.entryList.typeFilterController.filter._pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * List the files and return dialog entries.\n     */\n    Dialog.prototype.list = function (directory) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var paths, stats;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, util.promisify(fs.readdir)(directory)];\n                    case 1:\n                        paths = (_a.sent()).sort();\n                        return [4 /*yield*/, Promise.all(paths.map(function (p) { return util.promisify(fs.stat)(path.join(directory, p)); }))];\n                    case 2:\n                        stats = _a.sent();\n                        return [2 /*return*/, stats.map(function (stat, index) { return ({\n                                fullPath: path.join(directory, paths[index]),\n                                name: paths[index],\n                                isDirectory: stat.isDirectory(),\n                                lastModified: stat.mtime.toDateString(),\n                                size: stat.size,\n                                // If we can't open files, show them as disabled.\n                                isDisabled: !stat.isDirectory()\n                                    && !_this.options.properties.openFile,\n                            }); })];\n                }\n            });\n        });\n    };\n    Dialog.UpperDirId = \"..\";\n    return Dialog;\n}());\n/**\n * Rendering for the different parts of a dialog entry.\n */\nvar DialogEntryRenderer = /** @class */ (function () {\n    function DialogEntryRenderer() {\n    }\n    Object.defineProperty(DialogEntryRenderer.prototype, \"templateId\", {\n        get: function () {\n            return \"dialog-entry\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Append and return containers for each part of the dialog entry.\n     */\n    DialogEntryRenderer.prototype.renderTemplate = function (container) {\n        dom_1.addClass(container, \"dialog-entry\");\n        dom_1.addClass(container, \"dialog-grid\");\n        var wrapper = dom_1.append(container, dom_1.$(\".dialog-entry-info\"));\n        var icon = dom_1.append(wrapper, dom_1.$(\"div\"));\n        var name = dom_1.append(wrapper, dom_1.$(\".dialog-entry-name\"));\n        var label = new highlightedLabel_1.HighlightedLabel(name, false);\n        dom_1.append(container, wrapper);\n        var size = dom_1.append(container, dom_1.$(\".dialog-entry-size\"));\n        var mtime = dom_1.append(container, dom_1.$(\".dialog-entry-mtime\"));\n        return {\n            icon: icon,\n            size: size,\n            lastModified: mtime,\n            label: label,\n        };\n    };\n    /**\n     * Render a dialog entry.\n     */\n    DialogEntryRenderer.prototype.renderElement = function (node, _index, templateData) {\n        templateData.icon.className = \"dialog-entry-icon monaco-icon-label\";\n        var classes = getIconClasses_1.getIconClasses(workbench_1.workbench.serviceCollection.get(modelService_1.IModelService), workbench_1.workbench.serviceCollection.get(modeService_1.IModeService), uri_1.URI.file(node.element.name), node.element.isDirectory ? files_1.FileKind.FOLDER : files_1.FileKind.FILE);\n        templateData.icon.hidden = classes.length === 0;\n        classes.forEach(function (c) {\n            try {\n                templateData.icon.classList.add(c);\n            }\n            catch (ex) {\n                // Nothin needed. Sometimes bad classes are given\n            }\n        });\n        templateData.label.set(node.element.name, typeof node.filterData === \"string\" && node.element.name.toLowerCase().startsWith(node.filterData.toLowerCase()) ? [{\n                start: 0,\n                end: node.filterData.length,\n            }] : []);\n        templateData.size.innerText = node.element.size.toString();\n        templateData.lastModified.innerText = node.element.lastModified;\n        // We know this exists because we created the template.\n        var entryContainer = templateData.label.element.parentElement.parentElement.parentElement;\n        if (node.element.isDisabled) {\n            entryContainer.classList.add(\"disabled\");\n        }\n        else {\n            entryContainer.classList.remove(\"disabled\");\n        }\n    };\n    /**\n     * Does nothing (not implemented).\n     */\n    DialogEntryRenderer.prototype.disposeTemplate = function (_templateData) {\n        // throw new Error(\"Method not implemented.\");\n    };\n    return DialogEntryRenderer;\n}());\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/dialog.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/dialog.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as util from \"util\";\nimport { Emitter, Event } from \"@coder/events\";\nimport { $, addClass, append } from \"vs/base/browser/dom\";\nimport { HighlightedLabel } from \"vs/base/browser/ui/highlightedlabel/highlightedLabel\";\nimport { ObjectTree } from \"vs/base/browser/ui/tree/objectTree\";\nimport { ITreeElement, ITreeNode, ITreeRenderer, TreeFilterResult, TreeVisibility } from \"vs/base/browser/ui/tree/tree\";\nimport { KeyCode } from \"vs/base/common/keyCodes\";\nimport { URI } from \"vs/base/common/uri\";\nimport { getIconClasses } from \"vs/editor/common/services/getIconClasses\";\nimport { IModelService } from \"vs/editor/common/services/modelService\";\nimport { IModeService } from \"vs/editor/common/services/modeService\";\nimport { FileKind } from \"vs/platform/files/common/files\";\nimport { IThemeService } from \"vs/platform/theme/common/themeService\";\nimport { workbench } from \"./workbench\";\nimport \"./dialog.scss\";\n\n/**\n * Describes the type of dialog to show.\n */\nexport enum DialogType {\n\tNewFolder,\n\tSave,\n\tOpen,\n}\n\nexport interface CommonDialogOptions {\n\treadonly title?: string;\n\treadonly defaultPath?: string;\n\treadonly buttonLabel?: string;\n}\n\nexport interface OpenDialogOptions extends CommonDialogOptions {\n\treadonly properties: {\n\t\treadonly openFile: true;\n\t\treadonly openDirectory?: boolean;\n\t\treadonly showHiddenFiles?: boolean;\n\t} | {\n\t\treadonly openDirectory: true;\n\t\treadonly showHiddenFiles?: boolean;\n\t\treadonly openFile?: boolean;\n\t};\n}\n\nexport interface SaveDialogOptions extends CommonDialogOptions {\n\treadonly type: DialogType.Save;\n\treadonly nameFieldLabel?: string;\n}\n\nexport type DialogOptions = OpenDialogOptions | SaveDialogOptions;\n\nexport const showOpenDialog = (options: OpenDialogOptions): Promise<string> => {\n\treturn new Promise<string>((resolve, reject): void => {\n\t\tconst dialog = new Dialog(DialogType.Open, options);\n\t\tdialog.onSelect((e) => {\n\t\t\tdialog.dispose();\n\t\t\tresolve(e);\n\t\t});\n\t\tdialog.onError((e) => {\n\t\t\tdialog.dispose();\n\t\t\treject(e);\n\t\t});\n\t});\n\n};\n\ninterface DialogEntry {\n\treadonly fullPath: string;\n\treadonly name: string;\n\treadonly isDirectory: boolean;\n\treadonly size: number;\n\treadonly lastModified: string;\n\treadonly isDisabled?: boolean;\n}\n\n/**\n * Open and save dialogs.\n */\nclass Dialog {\n\tprivate _path: string | undefined;\n\n\tprivate static readonly UpperDirId = \"..\";\n\n\tprivate readonly filesNode: HTMLElement;\n\tprivate readonly pathNode: HTMLElement;\n\n\tprivate readonly entryList: ObjectTree<DialogEntry, string>;\n\tprivate readonly background: HTMLElement;\n\tprivate readonly root: HTMLElement;\n\n\tprivate readonly selectEmitter: Emitter<string>;\n\tprivate readonly errorEmitter: Emitter<Error>;\n\n\tpublic constructor(\n\t\tprivate readonly type: DialogType,\n\t\tprivate readonly options: DialogOptions,\n\t) {\n\t\tthis.selectEmitter = new Emitter();\n\t\tthis.errorEmitter = new Emitter();\n\n\t\tthis.background = document.createElement(\"div\");\n\t\tthis.background.style.position = \"absolute\";\n\t\tthis.background.style.top = \"0\";\n\t\tthis.background.style.left = \"0\";\n\t\tthis.background.style.bottom = \"0\";\n\t\tthis.background.style.right = \"0\";\n\t\tthis.background.style.zIndex = \"5\";\n\t\tthis.background.style.display = \"flex\";\n\t\tthis.background.style.alignItems = \"center\";\n\t\tthis.background.style.justifyContent = \"center\";\n\t\tthis.background.style.background = \"rgba(0, 0, 0, 0.25)\";\n\n\t\tthis.root = document.createElement(\"div\");\n\t\tthis.root.style.width = \"850px\";\n\t\tthis.root.style.height = \"600px\";\n\t\tthis.background.appendChild(this.root);\n\t\t(document.querySelector(\".monaco-workbench\") || document.body).appendChild(this.background);\n\t\tthis.root.classList.add(\"dialog\");\n\n\t\tconst setProperty = (vari: string, id: string): void => {\n\t\t\tconst getColor = (id: string): string | undefined => {\n\t\t\t\tconst ts = workbench.serviceCollection.get<IThemeService>(IThemeService) as IThemeService;\n\t\t\t\tconst c = ts.getTheme().getColor(id);\n\t\t\t\tif (!c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn c.toString();\n\t\t\t};\n\t\t\tconst c = getColor(id);\n\t\t\tif (c) {\n\t\t\t\tthis.root.style.setProperty(vari, c);\n\t\t\t}\n\t\t};\n\t\tsetProperty(\"--primary\", \"sideBar.background\");\n\t\tsetProperty(\"--list-active-selection-background\", \"list.activeSelectionBackground\");\n\t\tsetProperty(\"--list-active-selection-foreground\", \"list.activeSelectionForeground\");\n\t\tsetProperty(\"--list-hover-background\", \"list.hoverBackground\");\n\t\tsetProperty(\"--header-background\", \"sideBarSectionHeader.background\");\n\t\tsetProperty(\"--header-foreground\", \"sideBarSectionHeader.foreground\");\n\t\tsetProperty(\"--border\", \"panel.border\");\n\n\t\tthis.background.addEventListener(\"contextmenu\", (event) => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\tconst titleNode = document.createElement(\"div\");\n\t\ttitleNode.classList.add(\"title\");\n\t\tlet title: string | undefined;\n\t\tswitch (this.type) {\n\t\t\t// case DialogType.NewFolder:\n\t\t\t// \ttitle = \"New Folder\";\n\t\t\t// \tbreak;\n\t\t\tcase DialogType.Open:\n\t\t\t\ttitle = \"Open File\";\n\t\t\t\tbreak;\n\t\t\tcase DialogType.Save:\n\t\t\t\ttitle = \"Save File\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Uncased type\");\n\t\t}\n\t\ttitleNode.innerText = options.title || title;\n\t\tthis.root.appendChild(titleNode);\n\n\t\tconst navItems = document.createElement(\"div\");\n\t\tnavItems.classList.add(\"nav\");\n\n\t\tthis.pathNode = document.createElement(\"div\");\n\t\tthis.pathNode.classList.add(\"path\");\n\t\tnavItems.appendChild(this.pathNode);\n\t\tthis.root.appendChild(navItems);\n\n\t\tconst headingsNode = document.createElement(\"div\");\n\t\theadingsNode.className = \"headings dialog-grid\";\n\t\t[\"Name\", \"Size\", \"Last Modified\"].forEach(e => {\n\t\t\tconst header = document.createElement(\"div\");\n\t\t\theader.innerText = e;\n\t\t\theadingsNode.appendChild(header);\n\t\t});\n\t\tthis.root.appendChild(headingsNode);\n\n\t\tconst fileAreaNode = document.createElement(\"div\");\n\t\tfileAreaNode.classList.add(\"file-area\");\n\t\tfileAreaNode.classList.add(\"show-file-icons\");\n\n\t\tthis.filesNode = document.createElement(\"div\");\n\t\tthis.filesNode.className = \"files-list\";\n\t\tthis.entryList = new ObjectTree<DialogEntry, string>(this.filesNode, {\n\t\t\tgetHeight: (_entry: DialogEntry): number => {\n\t\t\t\treturn 20;\n\t\t\t},\n\t\t\tgetTemplateId: (_entry: DialogEntry): string => {\n\t\t\t\treturn \"dialog-entry\";\n\t\t\t},\n\t\t}, [new DialogEntryRenderer()], {\n\t\t\t\topenController: {\n\t\t\t\t\tshouldOpen: (_event): boolean => {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tkeyboardNavigationLabelProvider: {\n\t\t\t\t\tgetKeyboardNavigationLabel: (element): string => {\n\t\t\t\t\t\treturn element.name;\n\t\t\t\t\t},\n\t\t\t\t\tmightProducePrintableCharacter: (event): boolean => {\n\t\t\t\t\t\tif (event.ctrlKey || event.metaKey) {\n\t\t\t\t\t\t\t// ignore ctrl/cmd-combination but not shift/alt-combinatios\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// weak check for certain ranges. this is properly implemented in a subclass\n\t\t\t\t\t\t// with access to the KeyboardMapperFactory.\n\t\t\t\t\t\tif ((event.keyCode >= KeyCode.KEY_A && event.keyCode <= KeyCode.KEY_Z)\n\t\t\t\t\t\t\t|| (event.keyCode >= KeyCode.KEY_0 && event.keyCode <= KeyCode.KEY_9)\n\t\t\t\t\t\t\t|| event.keyCode === KeyCode.US_DOT || event.keyCode === KeyCode.US_SLASH || event.keyCode === KeyCode.US_MINUS) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tautomaticKeyboardNavigation: true,\n\t\t\t\tenableKeyboardNavigation: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\topenOnSingleClick: false,\n\t\t\t\tfilter: {\n\t\t\t\t\tfilter: (): TreeFilterResult<string> => {\n\t\t\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\t\t\t(<any>this.entryList)._options.simpleKeyboardNavigation = true;\n\t\t\t\t\t\t// tslint:disable-next-line:no-any\n\t\t\t\t\t\tconst pat = (<any>this.entryList).typeFilterController.filter._pattern;\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: pat,\n\t\t\t\t\t\t\tvisibility: TreeVisibility.Visible,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tfilterOnType: true,\n\t\t\t});\n\t\t// tslint:disable-next-line:no-any\n\t\t(<any>this.entryList).focusNavigationFilter = (node: ITreeNode<DialogEntry, string>): boolean => {\n\t\t\tif (node.filterData) {\n\t\t\t\treturn node.element.name.toLowerCase().startsWith(node.filterData.toLowerCase()!);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t\tthis.entryList.onDidOpen((event) => {\n\t\t\tconst element = event.elements[0]!;\n\t\t\tif (!element) {\n\t\t\t\tconst fv = this.filterValue;\n\n\t\t\t\tif (fv === Dialog.UpperDirId) {\n\t\t\t\t\tthis.path = path.dirname(this._path!);\n\t\t\t\t}\n\n\t\t\t\tif (fv.startsWith(\"/\")) {\n\t\t\t\t\tfs.stat(fv, (err, stats) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (stats.isDirectory()) {\n\t\t\t\t\t\t\tthis.path = fv;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If it's a directory, we want to navigate to it. If it's a file, then we\n\t\t\t// only want to open it if opening files is supported.\n\t\t\tif (element.isDirectory) {\n\t\t\t\tthis.path = element.fullPath;\n\t\t\t} else if ((this.options as OpenDialogOptions).properties.openFile) {\n\t\t\t\tthis.selectEmitter.emit(element.fullPath);\n\t\t\t}\n\t\t});\n\t\tfileAreaNode.appendChild(this.entryList.getHTMLElement());\n\t\tthis.root.appendChild(fileAreaNode);\n\n\t\tconst buttonsNode = document.createElement(\"div\");\n\t\tbuttonsNode.className = \"buttons\";\n\t\tconst cancelBtn = document.createElement(\"button\");\n\t\tcancelBtn.innerText = \"Cancel\";\n\t\tcancelBtn.addEventListener(\"click\", () => {\n\t\t\tthis.errorEmitter.emit(new Error(\"Cancelled\"));\n\t\t});\n\t\tbuttonsNode.appendChild(cancelBtn);\n\t\tconst confirmBtn = document.createElement(\"button\");\n\t\tconst openDirectory = (this.options as OpenDialogOptions).properties.openDirectory;\n\t\tconfirmBtn.innerText = this.options.buttonLabel || \"Confirm\";\n\t\tconfirmBtn.addEventListener(\"click\", () => {\n\t\t\tif (this._path && openDirectory) {\n\t\t\t\tthis.selectEmitter.emit(this._path);\n\t\t\t}\n\t\t});\n\t\t// Disable if we can't open directories, otherwise you can open a directory\n\t\t// as a file which won't work. This is because our button currently just\n\t\t// always opens whatever directory is opened and will not open selected\n\t\t// files. (A single click on a file is used to open it instead.)\n\t\tif (!openDirectory) {\n\t\t\tconfirmBtn.disabled = true;\n\t\t}\n\t\tbuttonsNode.appendChild(confirmBtn);\n\t\tthis.root.appendChild(buttonsNode);\n\t\tthis.entryList.layout();\n\n\t\tthis.path = options.defaultPath || \"/\";\n\t}\n\n\tpublic get onSelect(): Event<string> {\n\t\treturn this.selectEmitter.event;\n\t}\n\n\tpublic get onError(): Event<Error> {\n\t\treturn this.errorEmitter.event;\n\t}\n\n\t/**\n\t * Remove the dialog.\n\t */\n\tpublic dispose(): void {\n\t\tthis.selectEmitter.dispose();\n\t\tthis.errorEmitter.dispose();\n\t\tthis.entryList.dispose();\n\t\tthis.background.remove();\n\t}\n\n\t/**\n\t * Build and insert the path shown at the top of the dialog.\n\t */\n\tprivate buildPath(): void {\n\t\twhile (this.pathNode.lastChild) {\n\t\t\tthis.pathNode.removeChild(this.pathNode.lastChild);\n\t\t}\n\n\t\tif (!this._path) {\n\t\t\tthrow new Error(\"cannot build path node without valid path\");\n\t\t}\n\n\t\tconst pathParts = [\"\", ...this._path.split(\"/\").filter((p) => p.length > 0)];\n\n\t\tfor (let i = 0; i < pathParts.length; i++) {\n\t\t\tconst pathPartNode = document.createElement(\"div\");\n\t\t\tpathPartNode.classList.add(\"path-part\");\n\t\t\tpathPartNode.innerText = pathParts[i].length > 0 ? pathParts[i] : \"/\";\n\n\t\t\tif (i === pathParts.length - 1) {\n\t\t\t\tpathPartNode.classList.add(\"active\");\n\t\t\t}\n\n\t\t\tpathPartNode.addEventListener(\"click\", () => {\n\t\t\t\tthis.path = \"/\" + pathParts.slice(0, i + 1).join(\"/\");\n\t\t\t});\n\n\t\t\tthis.pathNode.appendChild(pathPartNode);\n\t\t}\n\t}\n\n\tprivate set path(directory: string) {\n\t\tthis.list(directory).then((value) => {\n\t\t\tthis._path = directory;\n\t\t\tthis.buildPath();\n\n\t\t\twhile (this.filesNode.lastChild) {\n\t\t\t\tthis.filesNode.removeChild(this.filesNode.lastChild);\n\t\t\t}\n\n\t\t\tconst items = value.filter((v) => {\n\t\t\t\tif (v.name.startsWith(\".\")) {\n\t\t\t\t\tconst props = (this.options as OpenDialogOptions).properties;\n\t\t\t\t\tif (props && props.showHiddenFiles) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\tthis.entryList.setChildren(null, items.map((i: DialogEntry): ITreeElement<DialogEntry> => ({ element: i })));\n\t\t\tthis.entryList.domFocus();\n\t\t\tthis.entryList.setFocus([null]);\n\t\t\t// Clears the input on refresh\n\t\t\t// tslint:disable-next-line:no-any\n\t\t\t(<any>this.entryList).typeFilterController.onInput(\"\");\n\t\t}).catch((ex) => {\n\t\t\tthis.errorEmitter.emit(ex);\n\t\t});\n\t}\n\n\tprivate get filterValue(): string {\n\t\t// tslint:disable-next-line:no-any\n\t\treturn (<any>this.entryList).typeFilterController.filter._pattern;\n\t}\n\n\t/**\n\t * List the files and return dialog entries.\n\t */\n\tprivate async list(directory: string): Promise<ReadonlyArray<DialogEntry>> {\n\t\tconst paths = (await util.promisify(fs.readdir)(directory)).sort();\n\t\tconst stats = await Promise.all(paths.map(p => util.promisify(fs.stat)(path.join(directory, p))));\n\n\t\treturn stats.map((stat, index): DialogEntry => ({\n\t\t\tfullPath: path.join(directory, paths[index]),\n\t\t\tname: paths[index],\n\t\t\tisDirectory: stat.isDirectory(),\n\t\t\tlastModified: stat.mtime.toDateString(),\n\t\t\tsize: stat.size,\n\t\t\t// If we can't open files, show them as disabled.\n\t\t\tisDisabled: !stat.isDirectory()\n\t\t\t\t&& !(this.options as OpenDialogOptions).properties.openFile,\n\t\t}));\n\t}\n}\n\ninterface DialogEntryData {\n\ticon: HTMLElement;\n\tsize: HTMLElement;\n\tlastModified: HTMLElement;\n\tlabel: HighlightedLabel;\n}\n\n/**\n * Rendering for the different parts of a dialog entry.\n */\nclass DialogEntryRenderer implements ITreeRenderer<DialogEntry, string, DialogEntryData> {\n\tpublic get templateId(): string {\n\t\treturn \"dialog-entry\";\n\t}\n\n\t/**\n\t * Append and return containers for each part of the dialog entry.\n\t */\n\tpublic renderTemplate(container: HTMLElement): DialogEntryData {\n\t\taddClass(container, \"dialog-entry\");\n\t\taddClass(container, \"dialog-grid\");\n\n\t\tconst wrapper = append(container, $(\".dialog-entry-info\"));\n\t\tconst icon: HTMLElement = append(wrapper, $(\"div\"));\n\t\tconst name = append(wrapper, $(\".dialog-entry-name\"));\n\t\tconst label = new HighlightedLabel(name, false);\n\t\tappend(container, wrapper);\n\t\tconst size = append(container, $(\".dialog-entry-size\"));\n\t\tconst mtime = append(container, $(\".dialog-entry-mtime\"));\n\n\t\treturn {\n\t\t\ticon,\n\t\t\tsize,\n\t\t\tlastModified: mtime,\n\t\t\tlabel,\n\t\t};\n\t}\n\n\t/**\n\t * Render a dialog entry.\n\t */\n\tpublic renderElement(node: ITreeNode<DialogEntry, string>, _index: number, templateData: DialogEntryData): void {\n\t\ttemplateData.icon.className = \"dialog-entry-icon monaco-icon-label\";\n\t\tconst classes = getIconClasses(\n\t\t\tworkbench.serviceCollection.get<IModelService>(IModelService) as IModelService,\n\t\t\tworkbench.serviceCollection.get<IModeService>(IModeService) as IModeService,\n\t\t\tURI.file(node.element.name),\n\t\t\tnode.element.isDirectory ? FileKind.FOLDER : FileKind.FILE,\n\t\t);\n\t\ttemplateData.icon.hidden = classes.length === 0;\n\t\tclasses.forEach((c) => {\n\t\t\ttry {\n\t\t\t\ttemplateData.icon.classList.add(c);\n\t\t\t} catch (ex) {\n\t\t\t\t// Nothin needed. Sometimes bad classes are given\n\t\t\t}\n\t\t});\n\t\ttemplateData.label.set(node.element.name, typeof node.filterData === \"string\" && node.element.name.toLowerCase().startsWith(node.filterData.toLowerCase()) ? [{\n\t\t\tstart: 0,\n\t\t\tend: node.filterData.length,\n\t\t}] : []);\n\t\ttemplateData.size.innerText = node.element.size.toString();\n\t\ttemplateData.lastModified.innerText = node.element.lastModified;\n\n\t\t// We know this exists because we created the template.\n\t\tconst entryContainer = templateData.label.element.parentElement!.parentElement!.parentElement!;\n\t\tif (node.element.isDisabled) {\n\t\t\tentryContainer.classList.add(\"disabled\");\n\t\t} else {\n\t\t\tentryContainer.classList.remove(\"disabled\");\n\t\t}\n\t}\n\n\t/**\n\t * Does nothing (not implemented).\n\t */\n\tpublic disposeTemplate(_templateData: DialogEntryData): void {\n\t\t// throw new Error(\"Method not implemented.\");\n\t}\n}\n"]}]}