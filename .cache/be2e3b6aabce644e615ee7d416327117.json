{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/localizations/node/localizationsIpc.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/localizations/node/localizationsIpc.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/event\"], function (require, exports, event_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class LocalizationsChannel {\n        constructor(service) {\n            this.service = service;\n            this.onDidLanguagesChange = event_1.Event.buffer(service.onDidLanguagesChange, true);\n        }\n        listen(_, event) {\n            switch (event) {\n                case 'onDidLanguagesChange': return this.onDidLanguagesChange;\n            }\n            throw new Error(`Event not found: ${event}`);\n        }\n        call(_, command, arg) {\n            switch (command) {\n                case 'getLanguageIds': return this.service.getLanguageIds(arg);\n            }\n            throw new Error(`Call not found: ${command}`);\n        }\n    }\n    exports.LocalizationsChannel = LocalizationsChannel;\n});\n",null]}