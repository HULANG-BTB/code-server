{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/keybindingLabel/keybindingLabel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/keybindingLabel/keybindingLabel.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./keybindingLabel\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar keybindingLabels_1 = require(\"vs/base/common/keybindingLabels\");\nvar dom = require(\"vs/base/browser/dom\");\nvar nls_1 = require(\"vs/nls\");\nvar $ = dom.$;\nvar KeybindingLabel = /** @class */ (function () {\n    function KeybindingLabel(container, os, options) {\n        this.os = os;\n        this.options = options;\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\n        this.didEverRender = false;\n        container.appendChild(this.domNode);\n    }\n    Object.defineProperty(KeybindingLabel.prototype, \"element\", {\n        get: function () {\n            return this.domNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeybindingLabel.prototype.set = function (keybinding, matches) {\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n            return;\n        }\n        this.keybinding = keybinding;\n        this.matches = matches;\n        this.render();\n    };\n    KeybindingLabel.prototype.render = function () {\n        dom.clearNode(this.domNode);\n        if (this.keybinding) {\n            var _a = this.keybinding.getParts(), firstPart = _a[0], chordPart = _a[1];\n            if (firstPart) {\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n            }\n            if (chordPart) {\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n            }\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\n        }\n        else if (this.options && this.options.renderUnboundKeybindings) {\n            this.renderUnbound(this.domNode);\n        }\n        this.didEverRender = true;\n    };\n    KeybindingLabel.prototype.renderPart = function (parent, part, match) {\n        var modifierLabels = keybindingLabels_1.UILabelProvider.modifierLabels[this.os];\n        if (part.ctrlKey) {\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match && match.ctrlKey), modifierLabels.separator);\n        }\n        if (part.shiftKey) {\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match && match.shiftKey), modifierLabels.separator);\n        }\n        if (part.altKey) {\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match && match.altKey), modifierLabels.separator);\n        }\n        if (part.metaKey) {\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match && match.metaKey), modifierLabels.separator);\n        }\n        var keyLabel = part.keyLabel;\n        if (keyLabel) {\n            this.renderKey(parent, keyLabel, Boolean(match && match.keyCode), '');\n        }\n    };\n    KeybindingLabel.prototype.renderKey = function (parent, label, highlight, separator) {\n        dom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\n        if (separator) {\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n        }\n    };\n    KeybindingLabel.prototype.renderUnbound = function (parent) {\n        dom.append(parent, $('span.monaco-keybinding-key', undefined, nls_1.localize('unbound', \"Unbound\")));\n    };\n    KeybindingLabel.areSame = function (a, b) {\n        if (a === b || (!a && !b)) {\n            return true;\n        }\n        return !!a && !!b && objects_1.equals(a.firstPart, b.firstPart) && objects_1.equals(a.chordPart, b.chordPart);\n    };\n    return KeybindingLabel;\n}());\nexports.KeybindingLabel = KeybindingLabel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/keybindingLabel/keybindingLabel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/keybindingLabel/keybindingLabel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./keybindingLabel';\nimport { equals } from 'vs/base/common/objects';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from 'vs/base/common/keyCodes';\nimport { UILabelProvider } from 'vs/base/common/keybindingLabels';\nimport * as dom from 'vs/base/browser/dom';\nimport { localize } from 'vs/nls';\n\nconst $ = dom.$;\n\nexport interface PartMatches {\n\tctrlKey?: boolean;\n\tshiftKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n\tkeyCode?: boolean;\n}\n\nexport interface Matches {\n\tfirstPart: PartMatches;\n\tchordPart: PartMatches;\n}\n\nexport interface KeybindingLabelOptions {\n\trenderUnboundKeybindings: boolean;\n}\n\nexport class KeybindingLabel {\n\n\tprivate domNode: HTMLElement;\n\tprivate keybinding: ResolvedKeybinding | null | undefined;\n\tprivate matches: Matches | undefined;\n\tprivate didEverRender: boolean;\n\n\tconstructor(container: HTMLElement, private os: OperatingSystem, private options?: KeybindingLabelOptions) {\n\t\tthis.domNode = dom.append(container, $('.monaco-keybinding'));\n\t\tthis.didEverRender = false;\n\t\tcontainer.appendChild(this.domNode);\n\t}\n\n\tget element(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tset(keybinding: ResolvedKeybinding | null | undefined, matches?: Matches) {\n\t\tif (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.keybinding = keybinding;\n\t\tthis.matches = matches;\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tdom.clearNode(this.domNode);\n\n\t\tif (this.keybinding) {\n\t\t\tlet [firstPart, chordPart] = this.keybinding.getParts();\n\t\t\tif (firstPart) {\n\t\t\t\tthis.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n\t\t\t}\n\t\t\tif (chordPart) {\n\t\t\t\tdom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n\t\t\t\tthis.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n\t\t\t}\n\t\t\tthis.domNode.title = this.keybinding.getAriaLabel() || '';\n\t\t} else if (this.options && this.options.renderUnboundKeybindings) {\n\t\t\tthis.renderUnbound(this.domNode);\n\t\t}\n\n\t\tthis.didEverRender = true;\n\t}\n\n\tprivate renderPart(parent: HTMLElement, part: ResolvedKeybindingPart, match: PartMatches | null) {\n\t\tconst modifierLabels = UILabelProvider.modifierLabels[this.os];\n\t\tif (part.ctrlKey) {\n\t\t\tthis.renderKey(parent, modifierLabels.ctrlKey, Boolean(match && match.ctrlKey), modifierLabels.separator);\n\t\t}\n\t\tif (part.shiftKey) {\n\t\t\tthis.renderKey(parent, modifierLabels.shiftKey, Boolean(match && match.shiftKey), modifierLabels.separator);\n\t\t}\n\t\tif (part.altKey) {\n\t\t\tthis.renderKey(parent, modifierLabels.altKey, Boolean(match && match.altKey), modifierLabels.separator);\n\t\t}\n\t\tif (part.metaKey) {\n\t\t\tthis.renderKey(parent, modifierLabels.metaKey, Boolean(match && match.metaKey), modifierLabels.separator);\n\t\t}\n\t\tconst keyLabel = part.keyLabel;\n\t\tif (keyLabel) {\n\t\t\tthis.renderKey(parent, keyLabel, Boolean(match && match.keyCode), '');\n\t\t}\n\t}\n\n\tprivate renderKey(parent: HTMLElement, label: string, highlight: boolean, separator: string): void {\n\t\tdom.append(parent, $('span.monaco-keybinding-key' + (highlight ? '.highlight' : ''), undefined, label));\n\t\tif (separator) {\n\t\t\tdom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n\t\t}\n\t}\n\n\tprivate renderUnbound(parent: HTMLElement): void {\n\t\tdom.append(parent, $('span.monaco-keybinding-key', undefined, localize('unbound', \"Unbound\")));\n\t}\n\n\tprivate static areSame(a: Matches | undefined, b: Matches | undefined): boolean {\n\t\tif (a === b || (!a && !b)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n\t}\n}\n"]}]}