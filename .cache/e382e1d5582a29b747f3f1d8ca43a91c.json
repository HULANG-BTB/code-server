{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/markers/common/markerService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/markers/common/markerService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar network_1 = require(\"vs/base/common/network\");\nvar types_1 = require(\"vs/base/common/types\");\nvar event_1 = require(\"vs/base/common/event\");\nvar markers_1 = require(\"./markers\");\nvar MapMap;\n(function (MapMap) {\n    function get(map, key1, key2) {\n        if (map[key1]) {\n            return map[key1][key2];\n        }\n        return undefined;\n    }\n    MapMap.get = get;\n    function set(map, key1, key2, value) {\n        if (!map[key1]) {\n            map[key1] = Object.create(null);\n        }\n        map[key1][key2] = value;\n    }\n    MapMap.set = set;\n    function remove(map, key1, key2) {\n        if (map[key1] && map[key1][key2]) {\n            delete map[key1][key2];\n            if (types_1.isEmptyObject(map[key1])) {\n                delete map[key1];\n            }\n            return true;\n        }\n        return false;\n    }\n    MapMap.remove = remove;\n})(MapMap || (MapMap = {}));\nvar MarkerStats = /** @class */ (function () {\n    function MarkerStats(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = Object.create(null);\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    MarkerStats.prototype.dispose = function () {\n        this._subscription.dispose();\n        this._data = undefined;\n    };\n    MarkerStats.prototype._update = function (resources) {\n        if (!this._data) {\n            return;\n        }\n        for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n            var resource = resources_1[_i];\n            var key = resource.toString();\n            var oldStats = this._data[key];\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            var newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data[key] = newStats;\n        }\n    };\n    MarkerStats.prototype._resourceStats = function (resource) {\n        var result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (resource.scheme === network_1.Schemas.inMemory || resource.scheme === network_1.Schemas.walkThrough || resource.scheme === network_1.Schemas.walkThroughSnippet) {\n            return result;\n        }\n        for (var _i = 0, _a = this._service.read({ resource: resource }); _i < _a.length; _i++) {\n            var severity = _a[_i].severity;\n            if (severity === markers_1.MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === markers_1.MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === markers_1.MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    };\n    MarkerStats.prototype._substract = function (op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    };\n    MarkerStats.prototype._add = function (op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    };\n    return MarkerStats;\n}());\nvar MarkerService = /** @class */ (function () {\n    function MarkerService() {\n        this._onMarkerChanged = new event_1.Emitter();\n        this._onMarkerChangedEvent = event_1.Event.debounce(this._onMarkerChanged.event, MarkerService._debouncer, 0);\n        this._byResource = Object.create(null);\n        this._byOwner = Object.create(null);\n        this._stats = new MarkerStats(this);\n    }\n    MarkerService.prototype.dispose = function () {\n        this._stats.dispose();\n    };\n    Object.defineProperty(MarkerService.prototype, \"onMarkerChanged\", {\n        get: function () {\n            return this._onMarkerChangedEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MarkerService.prototype.getStatistics = function () {\n        return this._stats;\n    };\n    MarkerService.prototype.remove = function (owner, resources) {\n        for (var _i = 0, _a = resources || []; _i < _a.length; _i++) {\n            var resource = _a[_i];\n            this.changeOne(owner, resource, []);\n        }\n    };\n    MarkerService.prototype.changeOne = function (owner, resource, markerData) {\n        if (arrays_1.isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            var a = MapMap.remove(this._byResource, resource.toString(), owner);\n            var b = MapMap.remove(this._byOwner, owner, resource.toString());\n            if (a !== b) {\n                throw new Error('invalid marker service state');\n            }\n            if (a && b) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            var markers = [];\n            for (var _i = 0, markerData_1 = markerData; _i < markerData_1.length; _i++) {\n                var data = markerData_1[_i];\n                var marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            MapMap.set(this._byResource, resource.toString(), owner, markers);\n            MapMap.set(this._byOwner, owner, resource.toString(), markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    };\n    MarkerService._toMarker = function (owner, resource, data) {\n        var code = data.code, severity = data.severity, message = data.message, source = data.source, startLineNumber = data.startLineNumber, startColumn = data.startColumn, endLineNumber = data.endLineNumber, endColumn = data.endColumn, relatedInformation = data.relatedInformation, tags = data.tags;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource: resource,\n            owner: owner,\n            code: code,\n            severity: severity,\n            message: message,\n            source: source,\n            startLineNumber: startLineNumber,\n            startColumn: startColumn,\n            endLineNumber: endLineNumber,\n            endColumn: endColumn,\n            relatedInformation: relatedInformation,\n            tags: tags,\n        };\n    };\n    MarkerService.prototype.changeAll = function (owner, data) {\n        var changes = [];\n        var map = this._byOwner[owner];\n        // remove old marker\n        if (map) {\n            delete this._byOwner[owner];\n            for (var resource in map) {\n                var entry = MapMap.get(this._byResource, resource, owner);\n                if (entry) {\n                    // remeber what we remove\n                    var first = entry[0];\n                    if (first) {\n                        changes.push(first.resource);\n                    }\n                    // actual remove\n                    MapMap.remove(this._byResource, resource, owner);\n                }\n            }\n        }\n        // add new markers\n        if (arrays_1.isNonEmptyArray(data)) {\n            // group by resource\n            var groups = Object.create(null);\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                var _a = data_1[_i], resource = _a.resource, markerData = _a.marker;\n                var marker = MarkerService._toMarker(owner, resource, markerData);\n                if (!marker) {\n                    // filter bad markers\n                    continue;\n                }\n                var array = groups[resource.toString()];\n                if (!array) {\n                    groups[resource.toString()] = [marker];\n                    changes.push(resource);\n                }\n                else {\n                    array.push(marker);\n                }\n            }\n            // insert all\n            for (var resource in groups) {\n                MapMap.set(this._byResource, resource, owner, groups[resource]);\n                MapMap.set(this._byOwner, owner, resource, groups[resource]);\n            }\n        }\n        if (changes.length > 0) {\n            this._onMarkerChanged.fire(changes);\n        }\n    };\n    MarkerService.prototype.read = function (filter) {\n        if (filter === void 0) { filter = Object.create(null); }\n        var owner = filter.owner, resource = filter.resource, severities = filter.severities, take = filter.take;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            var data = MapMap.get(this._byResource, resource.toString(), owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                var result = [];\n                for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\n                    var marker = data_2[_i];\n                    if (MarkerService._accept(marker, severities)) {\n                        var newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            var result = [];\n            for (var key1 in this._byResource) {\n                for (var key2 in this._byResource[key1]) {\n                    for (var _a = 0, _b = this._byResource[key1][key2]; _a < _b.length; _a++) {\n                        var data = _b[_a];\n                        if (MarkerService._accept(data, severities)) {\n                            var newLen = result.push(data);\n                            if (take > 0 && newLen === take) {\n                                return result;\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            var map = owner\n                ? this._byOwner[owner]\n                : resource ? this._byResource[resource.toString()] : undefined;\n            if (!map) {\n                return [];\n            }\n            var result = [];\n            for (var key in map) {\n                for (var _c = 0, _d = map[key]; _c < _d.length; _c++) {\n                    var data = _d[_c];\n                    if (MarkerService._accept(data, severities)) {\n                        var newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    };\n    MarkerService._accept = function (marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    };\n    MarkerService._debouncer = function (last, event) {\n        if (!last) {\n            MarkerService._dedupeMap = Object.create(null);\n            last = [];\n        }\n        for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {\n            var uri = event_2[_i];\n            if (MarkerService._dedupeMap[uri.toString()] === undefined) {\n                MarkerService._dedupeMap[uri.toString()] = true;\n                last.push(uri);\n            }\n        }\n        return last;\n    };\n    return MarkerService;\n}());\nexports.MarkerService = MarkerService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/markers/common/markerService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/markers/common/markerService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gDAAwE;AACxE,kDAAiD;AAEjD,8CAAqD;AAErD,8CAAsD;AACtD,qCAAoH;AAMpH,IAAU,MAAM,CA0Bf;AA1BD,WAAU,MAAM;IAEf,SAAgB,GAAG,CAAI,GAAc,EAAE,IAAY,EAAE,IAAY;QAChE,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE;YACd,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IALe,UAAG,MAKlB,CAAA;IAED,SAAgB,GAAG,CAAI,GAAc,EAAE,IAAY,EAAE,IAAY,EAAE,KAAQ;QAC1E,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACf,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAChC;QACD,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACzB,CAAC;IALe,UAAG,MAKlB,CAAA;IAED,SAAgB,MAAM,CAAC,GAAgB,EAAE,IAAY,EAAE,IAAY;QAClE,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;YACjC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,qBAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC7B,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;aACjB;YACD,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IATe,aAAM,SASrB,CAAA;AACF,CAAC,EA1BS,MAAM,KAAN,MAAM,QA0Bf;AAED;IAWC,qBAAY,OAAuB;QATnC,WAAM,GAAW,CAAC,CAAC;QACnB,UAAK,GAAW,CAAC,CAAC;QAClB,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;QAEb,UAAK,GAA8C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAK9E,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IAED,6BAAO,GAAP;QACC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACxB,CAAC;IAEO,6BAAO,GAAf,UAAgB,SAAgB;QAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAChB,OAAO;SACP;QAED,KAAuB,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;YAA7B,IAAM,QAAQ,kBAAA;YAClB,IAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAChC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,QAAQ,EAAE;gBACb,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC1B;YACD,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;SAC3B;IACF,CAAC;IAEO,oCAAc,GAAtB,UAAuB,QAAa;QACnC,IAAM,MAAM,GAAqB,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;QAEnF,sBAAsB;QACtB,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,WAAW,IAAI,QAAQ,CAAC,MAAM,KAAK,iBAAO,CAAC,kBAAkB,EAAE;YACtI,OAAO,MAAM,CAAC;SACd;QAED,KAA2B,UAAgC,EAAhC,KAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,EAAhC,cAAgC,EAAhC,IAAgC,EAAE;YAAhD,IAAA,0BAAQ;YACpB,IAAI,QAAQ,KAAK,wBAAc,CAAC,KAAK,EAAE;gBACtC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;aACnB;iBAAM,IAAI,QAAQ,KAAK,wBAAc,CAAC,OAAO,EAAE;gBAC/C,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC;aACrB;iBAAM,IAAI,QAAQ,KAAK,wBAAc,CAAC,IAAI,EAAE;gBAC5C,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;aAClB;iBAAM;gBACN,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC;aACrB;SACD;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAEO,gCAAU,GAAlB,UAAmB,EAAoB;QACtC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEO,0BAAI,GAAZ,UAAa,EAAoB;QAChC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC;IAC9B,CAAC;IACF,kBAAC;AAAD,CAAC,AA1ED,IA0EC;AAED;IAUC;QANQ,qBAAgB,GAAG,IAAI,eAAO,EAAS,CAAC;QACxC,0BAAqB,GAAiB,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC/G,gBAAW,GAAsB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,aAAQ,GAAsB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAIzD,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,+BAAO,GAAP;QACC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC;IAED,sBAAI,0CAAe;aAAnB;YACC,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACnC,CAAC;;;OAAA;IAED,qCAAa,GAAb;QACC,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,8BAAM,GAAN,UAAO,KAAa,EAAE,SAAgB;QACrC,KAAuB,UAAe,EAAf,KAAA,SAAS,IAAI,EAAE,EAAf,cAAe,EAAf,IAAe,EAAE;YAAnC,IAAM,QAAQ,SAAA;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;SACpC;IACF,CAAC;IAED,iCAAS,GAAT,UAAU,KAAa,EAAE,QAAa,EAAE,UAAyB;QAEhE,IAAI,uBAAc,CAAC,UAAU,CAAC,EAAE;YAC/B,gDAAgD;YAChD,IAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YACtE,IAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;aAChD;YACD,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACvC;SAED;aAAM;YACN,gDAAgD;YAChD,IAAM,OAAO,GAAc,EAAE,CAAC;YAC9B,KAAmB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;gBAA1B,IAAM,IAAI,mBAAA;gBACd,IAAM,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC9D,IAAI,MAAM,EAAE;oBACX,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACrB;aACD;YACD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAClE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACvC;IACF,CAAC;IAEc,uBAAS,GAAxB,UAAyB,KAAa,EAAE,QAAa,EAAE,IAAiB;QAEtE,IAAA,gBAAI,EAAE,wBAAQ,EACd,sBAAO,EAAE,oBAAM,EACf,sCAAe,EAAE,8BAAW,EAAE,kCAAa,EAAE,0BAAS,EACtD,4CAAkB,EAClB,gBAAI,CACI;QAET,IAAI,CAAC,OAAO,EAAE;YACb,OAAO,SAAS,CAAC;SACjB;QAED,eAAe;QACf,eAAe,GAAG,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,aAAa,GAAG,aAAa,IAAI,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,CAAC;QACnF,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC;QAEpD,OAAO;YACN,QAAQ,UAAA;YACR,KAAK,OAAA;YACL,IAAI,MAAA;YACJ,QAAQ,UAAA;YACR,OAAO,SAAA;YACP,MAAM,QAAA;YACN,eAAe,iBAAA;YACf,WAAW,aAAA;YACX,aAAa,eAAA;YACb,SAAS,WAAA;YACT,kBAAkB,oBAAA;YAClB,IAAI,MAAA;SACJ,CAAC;IACH,CAAC;IAED,iCAAS,GAAT,UAAU,KAAa,EAAE,IAAuB;QAC/C,IAAM,OAAO,GAAU,EAAE,CAAC;QAC1B,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEjC,oBAAoB;QACpB,IAAI,GAAG,EAAE;YACR,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAK,IAAM,QAAQ,IAAI,GAAG,EAAE;gBAC3B,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;gBAC5D,IAAI,KAAK,EAAE;oBACV,yBAAyB;oBAClB,IAAA,gBAAK,CAAU;oBACtB,IAAI,KAAK,EAAE;wBACV,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;qBAC7B;oBACD,gBAAgB;oBAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;iBACjD;aACD;SACD;QAED,kBAAkB;QAClB,IAAI,wBAAe,CAAC,IAAI,CAAC,EAAE;YAE1B,oBAAoB;YACpB,IAAM,MAAM,GAAsC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACtE,KAA+C,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAA1C,IAAA,eAAgC,EAA9B,sBAAQ,EAAE,sBAAkB;gBACxC,IAAM,MAAM,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACpE,IAAI,CAAC,MAAM,EAAE;oBACZ,qBAAqB;oBACrB,SAAS;iBACT;gBACD,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC1C,IAAI,CAAC,KAAK,EAAE;oBACX,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACvB;qBAAM;oBACN,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnB;aACD;YAED,aAAa;YACb,KAAK,IAAM,QAAQ,IAAI,MAAM,EAAE;gBAC9B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC7D;SACD;QAED,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpC;IACF,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAqG;QAArG,uBAAA,EAAA,SAAkF,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAEnG,IAAA,oBAAK,EAAE,0BAAQ,EAAE,8BAAU,EAAE,kBAAI,CAAY;QAEnD,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;YACtB,IAAI,GAAG,CAAC,CAAC,CAAC;SACV;QAED,IAAI,KAAK,IAAI,QAAQ,EAAE;YACtB,iCAAiC;YACjC,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YACtE,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,EAAE,CAAC;aACV;iBAAM;gBACN,IAAM,MAAM,GAAc,EAAE,CAAC;gBAC7B,KAAqB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAtB,IAAM,MAAM,aAAA;oBAChB,IAAI,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;wBAC9C,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACnC,IAAI,IAAI,GAAG,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;4BAChC,MAAM;yBACN;qBACD;iBACD;gBACD,OAAO,MAAM,CAAC;aACd;SAED;aAAM,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC/B,MAAM;YACN,IAAM,MAAM,GAAc,EAAE,CAAC;YAC7B,KAAK,IAAM,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpC,KAAK,IAAM,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;oBAC1C,KAAmB,UAA4B,EAA5B,KAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAA5B,cAA4B,EAA5B,IAA4B,EAAE;wBAA5C,IAAM,IAAI,SAAA;wBACd,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;4BAC5C,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACjC,IAAI,IAAI,GAAG,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;gCAChC,OAAO,MAAM,CAAC;6BACd;yBACD;qBACD;iBACD;aACD;YACD,OAAO,MAAM,CAAC;SAEd;aAAM;YACN,2BAA2B;YAC3B,IAAM,GAAG,GAA6C,KAAK;gBAC1D,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACtB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAEhE,IAAI,CAAC,GAAG,EAAE;gBACT,OAAO,EAAE,CAAC;aACV;YAED,IAAM,MAAM,GAAc,EAAE,CAAC;YAC7B,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;gBACtB,KAAmB,UAAQ,EAAR,KAAA,GAAG,CAAC,GAAG,CAAC,EAAR,cAAQ,EAAR,IAAQ,EAAE;oBAAxB,IAAM,IAAI,SAAA;oBACd,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;wBAC5C,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACjC,IAAI,IAAI,GAAG,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;4BAChC,OAAO,MAAM,CAAC;yBACd;qBACD;iBACD;aACD;YACD,OAAO,MAAM,CAAC;SACd;IACF,CAAC;IAEc,qBAAO,GAAtB,UAAuB,MAAe,EAAE,UAAmB;QAC1D,OAAO,UAAU,KAAK,SAAS,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC;IACvF,CAAC;IAMc,wBAAU,GAAzB,UAA0B,IAAW,EAAE,KAAY;QAClD,IAAI,CAAC,IAAI,EAAE;YACV,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,GAAG,EAAE,CAAC;SACV;QACD,KAAkB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAApB,IAAM,GAAG,cAAA;YACb,IAAI,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,SAAS,EAAE;gBAC3D,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACf;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IACF,oBAAC;AAAD,CAAC,AA7OD,IA6OC;AA7OY,sCAAa","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFalsyOrEmpty, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Schemas } from 'vs/base/common/network';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMarkerService, IMarkerData, IResourceMarker, IMarker, MarkerStatistics, MarkerSeverity } from './markers';\n\ninterface MapMap<V> {\n\t[key: string]: { [key: string]: V };\n}\n\nnamespace MapMap {\n\n\texport function get<V>(map: MapMap<V>, key1: string, key2: string): V | undefined {\n\t\tif (map[key1]) {\n\t\t\treturn map[key1][key2];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function set<V>(map: MapMap<V>, key1: string, key2: string, value: V): void {\n\t\tif (!map[key1]) {\n\t\t\tmap[key1] = Object.create(null);\n\t\t}\n\t\tmap[key1][key2] = value;\n\t}\n\n\texport function remove(map: MapMap<any>, key1: string, key2: string): boolean {\n\t\tif (map[key1] && map[key1][key2]) {\n\t\t\tdelete map[key1][key2];\n\t\t\tif (isEmptyObject(map[key1])) {\n\t\t\t\tdelete map[key1];\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass MarkerStats implements MarkerStatistics {\n\n\terrors: number = 0;\n\tinfos: number = 0;\n\twarnings: number = 0;\n\tunknowns: number = 0;\n\n\tprivate _data?: { [resource: string]: MarkerStatistics } = Object.create(null);\n\tprivate _service: IMarkerService;\n\tprivate _subscription: IDisposable;\n\n\tconstructor(service: IMarkerService) {\n\t\tthis._service = service;\n\t\tthis._subscription = service.onMarkerChanged(this._update, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._subscription.dispose();\n\t\tthis._data = undefined;\n\t}\n\n\tprivate _update(resources: URI[]): void {\n\t\tif (!this._data) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const resource of resources) {\n\t\t\tconst key = resource.toString();\n\t\t\tconst oldStats = this._data[key];\n\t\t\tif (oldStats) {\n\t\t\t\tthis._substract(oldStats);\n\t\t\t}\n\t\t\tconst newStats = this._resourceStats(resource);\n\t\t\tthis._add(newStats);\n\t\t\tthis._data[key] = newStats;\n\t\t}\n\t}\n\n\tprivate _resourceStats(resource: URI): MarkerStatistics {\n\t\tconst result: MarkerStatistics = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n\n\t\t// TODO this is a hack\n\t\tif (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet) {\n\t\t\treturn result;\n\t\t}\n\n\t\tfor (const { severity } of this._service.read({ resource })) {\n\t\t\tif (severity === MarkerSeverity.Error) {\n\t\t\t\tresult.errors += 1;\n\t\t\t} else if (severity === MarkerSeverity.Warning) {\n\t\t\t\tresult.warnings += 1;\n\t\t\t} else if (severity === MarkerSeverity.Info) {\n\t\t\t\tresult.infos += 1;\n\t\t\t} else {\n\t\t\t\tresult.unknowns += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _substract(op: MarkerStatistics) {\n\t\tthis.errors -= op.errors;\n\t\tthis.warnings -= op.warnings;\n\t\tthis.infos -= op.infos;\n\t\tthis.unknowns -= op.unknowns;\n\t}\n\n\tprivate _add(op: MarkerStatistics) {\n\t\tthis.errors += op.errors;\n\t\tthis.warnings += op.warnings;\n\t\tthis.infos += op.infos;\n\t\tthis.unknowns += op.unknowns;\n\t}\n}\n\nexport class MarkerService implements IMarkerService {\n\n\t_serviceBrand: any;\n\n\tprivate _onMarkerChanged = new Emitter<URI[]>();\n\tprivate _onMarkerChangedEvent: Event<URI[]> = Event.debounce(this._onMarkerChanged.event, MarkerService._debouncer, 0);\n\tprivate _byResource: MapMap<IMarker[]> = Object.create(null);\n\tprivate _byOwner: MapMap<IMarker[]> = Object.create(null);\n\tprivate _stats: MarkerStats;\n\n\tconstructor() {\n\t\tthis._stats = new MarkerStats(this);\n\t}\n\n\tdispose(): void {\n\t\tthis._stats.dispose();\n\t}\n\n\tget onMarkerChanged(): Event<URI[]> {\n\t\treturn this._onMarkerChangedEvent;\n\t}\n\n\tgetStatistics(): MarkerStatistics {\n\t\treturn this._stats;\n\t}\n\n\tremove(owner: string, resources: URI[]): void {\n\t\tfor (const resource of resources || []) {\n\t\t\tthis.changeOne(owner, resource, []);\n\t\t}\n\t}\n\n\tchangeOne(owner: string, resource: URI, markerData: IMarkerData[]): void {\n\n\t\tif (isFalsyOrEmpty(markerData)) {\n\t\t\t// remove marker for this (owner,resource)-tuple\n\t\t\tconst a = MapMap.remove(this._byResource, resource.toString(), owner);\n\t\t\tconst b = MapMap.remove(this._byOwner, owner, resource.toString());\n\t\t\tif (a !== b) {\n\t\t\t\tthrow new Error('invalid marker service state');\n\t\t\t}\n\t\t\tif (a && b) {\n\t\t\t\tthis._onMarkerChanged.fire([resource]);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// insert marker for this (owner,resource)-tuple\n\t\t\tconst markers: IMarker[] = [];\n\t\t\tfor (const data of markerData) {\n\t\t\t\tconst marker = MarkerService._toMarker(owner, resource, data);\n\t\t\t\tif (marker) {\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t}\n\t\t\t}\n\t\t\tMapMap.set(this._byResource, resource.toString(), owner, markers);\n\t\t\tMapMap.set(this._byOwner, owner, resource.toString(), markers);\n\t\t\tthis._onMarkerChanged.fire([resource]);\n\t\t}\n\t}\n\n\tprivate static _toMarker(owner: string, resource: URI, data: IMarkerData): IMarker | undefined {\n\t\tlet {\n\t\t\tcode, severity,\n\t\t\tmessage, source,\n\t\t\tstartLineNumber, startColumn, endLineNumber, endColumn,\n\t\t\trelatedInformation,\n\t\t\ttags,\n\t\t} = data;\n\n\t\tif (!message) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// santize data\n\t\tstartLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n\t\tstartColumn = startColumn > 0 ? startColumn : 1;\n\t\tendLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n\t\tendColumn = endColumn > 0 ? endColumn : startColumn;\n\n\t\treturn {\n\t\t\tresource,\n\t\t\towner,\n\t\t\tcode,\n\t\t\tseverity,\n\t\t\tmessage,\n\t\t\tsource,\n\t\t\tstartLineNumber,\n\t\t\tstartColumn,\n\t\t\tendLineNumber,\n\t\t\tendColumn,\n\t\t\trelatedInformation,\n\t\t\ttags,\n\t\t};\n\t}\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void {\n\t\tconst changes: URI[] = [];\n\t\tconst map = this._byOwner[owner];\n\n\t\t// remove old marker\n\t\tif (map) {\n\t\t\tdelete this._byOwner[owner];\n\t\t\tfor (const resource in map) {\n\t\t\t\tconst entry = MapMap.get(this._byResource, resource, owner);\n\t\t\t\tif (entry) {\n\t\t\t\t\t// remeber what we remove\n\t\t\t\t\tconst [first] = entry;\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tchanges.push(first.resource);\n\t\t\t\t\t}\n\t\t\t\t\t// actual remove\n\t\t\t\t\tMapMap.remove(this._byResource, resource, owner);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add new markers\n\t\tif (isNonEmptyArray(data)) {\n\n\t\t\t// group by resource\n\t\t\tconst groups: { [resource: string]: IMarker[] } = Object.create(null);\n\t\t\tfor (const { resource, marker: markerData } of data) {\n\t\t\t\tconst marker = MarkerService._toMarker(owner, resource, markerData);\n\t\t\t\tif (!marker) {\n\t\t\t\t\t// filter bad markers\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst array = groups[resource.toString()];\n\t\t\t\tif (!array) {\n\t\t\t\t\tgroups[resource.toString()] = [marker];\n\t\t\t\t\tchanges.push(resource);\n\t\t\t\t} else {\n\t\t\t\t\tarray.push(marker);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// insert all\n\t\t\tfor (const resource in groups) {\n\t\t\t\tMapMap.set(this._byResource, resource, owner, groups[resource]);\n\t\t\t\tMapMap.set(this._byOwner, owner, resource, groups[resource]);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.length > 0) {\n\t\t\tthis._onMarkerChanged.fire(changes);\n\t\t}\n\t}\n\n\tread(filter: { owner?: string; resource?: URI; severities?: number, take?: number; } = Object.create(null)): IMarker[] {\n\n\t\tlet { owner, resource, severities, take } = filter;\n\n\t\tif (!take || take < 0) {\n\t\t\ttake = -1;\n\t\t}\n\n\t\tif (owner && resource) {\n\t\t\t// exactly one owner AND resource\n\t\t\tconst data = MapMap.get(this._byResource, resource.toString(), owner);\n\t\t\tif (!data) {\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tconst result: IMarker[] = [];\n\t\t\t\tfor (const marker of data) {\n\t\t\t\t\tif (MarkerService._accept(marker, severities)) {\n\t\t\t\t\t\tconst newLen = result.push(marker);\n\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t} else if (!owner && !resource) {\n\t\t\t// all\n\t\t\tconst result: IMarker[] = [];\n\t\t\tfor (const key1 in this._byResource) {\n\t\t\t\tfor (const key2 in this._byResource[key1]) {\n\t\t\t\t\tfor (const data of this._byResource[key1][key2]) {\n\t\t\t\t\t\tif (MarkerService._accept(data, severities)) {\n\t\t\t\t\t\t\tconst newLen = result.push(data);\n\t\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// of one resource OR owner\n\t\t\tconst map: { [key: string]: IMarker[] } | undefined = owner\n\t\t\t\t? this._byOwner[owner]\n\t\t\t\t: resource ? this._byResource[resource.toString()] : undefined;\n\n\t\t\tif (!map) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst result: IMarker[] = [];\n\t\t\tfor (const key in map) {\n\t\t\t\tfor (const data of map[key]) {\n\t\t\t\t\tif (MarkerService._accept(data, severities)) {\n\t\t\t\t\t\tconst newLen = result.push(data);\n\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tprivate static _accept(marker: IMarker, severities?: number): boolean {\n\t\treturn severities === undefined || (severities & marker.severity) === marker.severity;\n\t}\n\n\t// --- event debounce logic\n\n\tprivate static _dedupeMap: { [uri: string]: boolean };\n\n\tprivate static _debouncer(last: URI[], event: URI[]): URI[] {\n\t\tif (!last) {\n\t\t\tMarkerService._dedupeMap = Object.create(null);\n\t\t\tlast = [];\n\t\t}\n\t\tfor (const uri of event) {\n\t\t\tif (MarkerService._dedupeMap[uri.toString()] === undefined) {\n\t\t\t\tMarkerService._dedupeMap[uri.toString()] = true;\n\t\t\t\tlast.push(uri);\n\t\t\t}\n\t\t}\n\t\treturn last;\n\t}\n}\n"]}]}