{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/common/objects\", \"vs/base/node/request\", \"vs/base/node/proxy\", \"vs/platform/configuration/common/configuration\", \"vs/platform/log/common/log\"], function (require, exports, objects_1, request_1, proxy_1, configuration_1, log_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * This service exposes the `request` API, while using the global\n     * or configured proxy settings.\n     */\n    let RequestService = class RequestService {\n        constructor(configurationService, logService) {\n            this.logService = logService;\n            this.disposables = [];\n            this.configure(configurationService.getValue());\n            configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this, this.disposables);\n        }\n        configure(config) {\n            this.proxyUrl = config.http && config.http.proxy;\n            this.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n            this.authorization = config.http && config.http.proxyAuthorization;\n        }\n        request(options, token, requestFn = request_1.request) {\n            this.logService.trace('RequestService#request', options.url);\n            const { proxyUrl, strictSSL } = this;\n            const agentPromise = options.agent ? Promise.resolve(options.agent) : Promise.resolve(proxy_1.getProxyAgent(options.url || '', { proxyUrl, strictSSL }));\n            return agentPromise.then(agent => {\n                options.agent = agent;\n                options.strictSSL = strictSSL;\n                if (this.authorization) {\n                    options.headers = objects_1.assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n                }\n                return requestFn(options, token);\n            });\n        }\n    };\n    RequestService = __decorate([\n        __param(0, configuration_1.IConfigurationService),\n        __param(1, log_1.ILogService)\n    ], RequestService);\n    exports.RequestService = RequestService;\n});\n",null]}