{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/dropdown/dropdown.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/dropdown/dropdown.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./dropdown\");\nvar touch_1 = require(\"vs/base/browser/touch\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar BaseDropdown = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseDropdown, _super);\n    function BaseDropdown(container, options) {\n        var _this = _super.call(this) || this;\n        _this._element = dom_1.append(container, dom_1.$('.monaco-dropdown'));\n        _this._label = dom_1.append(_this._element, dom_1.$('.dropdown-label'));\n        var labelRenderer = options.labelRenderer;\n        if (!labelRenderer) {\n            labelRenderer = function (container) {\n                container.textContent = options.label || '';\n                return null;\n            };\n        }\n        for (var _i = 0, _a = [dom_1.EventType.CLICK, dom_1.EventType.MOUSE_DOWN, touch_1.EventType.Tap]; _i < _a.length; _i++) {\n            var event = _a[_i];\n            _this._register(dom_1.addDisposableListener(_this._label, event, function (e) { return dom_1.EventHelper.stop(e, true); })); // prevent default click behaviour to trigger\n        }\n        for (var _b = 0, _c = [dom_1.EventType.MOUSE_DOWN, touch_1.EventType.Tap]; _b < _c.length; _b++) {\n            var event = _c[_b];\n            _this._register(dom_1.addDisposableListener(_this._label, event, function (e) {\n                if (e instanceof MouseEvent && e.detail > 1) {\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/Microsoft/vscode/issues/41363)\n                }\n                if (_this.visible) {\n                    _this.hide();\n                }\n                else {\n                    _this.show();\n                }\n            }));\n        }\n        _this._register(dom_1.addDisposableListener(_this._label, dom_1.EventType.KEY_UP, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.equals(keyCodes_1.KeyCode.Enter) || event.equals(keyCodes_1.KeyCode.Space)) {\n                dom_1.EventHelper.stop(e, true); // https://github.com/Microsoft/vscode/issues/57997\n                if (_this.visible) {\n                    _this.hide();\n                }\n                else {\n                    _this.show();\n                }\n            }\n        }));\n        var cleanupFn = labelRenderer(_this._label);\n        if (cleanupFn) {\n            _this._register(cleanupFn);\n        }\n        touch_1.Gesture.addTarget(_this._label);\n        return _this;\n    }\n    Object.defineProperty(BaseDropdown.prototype, \"element\", {\n        get: function () {\n            return this._element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDropdown.prototype, \"label\", {\n        get: function () {\n            return this._label;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDropdown.prototype, \"tooltip\", {\n        set: function (tooltip) {\n            if (this._label) {\n                this._label.title = tooltip;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseDropdown.prototype.show = function () {\n        this.visible = true;\n    };\n    BaseDropdown.prototype.hide = function () {\n        this.visible = false;\n    };\n    BaseDropdown.prototype.onEvent = function (e, activeElement) {\n        this.hide();\n    };\n    BaseDropdown.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.hide();\n        if (this.boxContainer) {\n            this.boxContainer.remove();\n            this.boxContainer = undefined;\n        }\n        if (this.contents) {\n            this.contents.remove();\n            this.contents = undefined;\n        }\n        if (this._label) {\n            this._label.remove();\n            this._label = undefined;\n        }\n    };\n    return BaseDropdown;\n}(actions_1.ActionRunner));\nexports.BaseDropdown = BaseDropdown;\nvar Dropdown = /** @class */ (function (_super) {\n    tslib_1.__extends(Dropdown, _super);\n    function Dropdown(container, options) {\n        var _this = _super.call(this, container, options) || this;\n        _this.contextViewProvider = options.contextViewProvider;\n        return _this;\n    }\n    Dropdown.prototype.show = function () {\n        var _this = this;\n        _super.prototype.show.call(this);\n        dom_1.addClass(this.element, 'active');\n        this.contextViewProvider.showContextView({\n            getAnchor: function () { return _this.getAnchor(); },\n            render: function (container) {\n                return _this.renderContents(container);\n            },\n            onDOMEvent: function (e, activeElement) {\n                _this.onEvent(e, activeElement);\n            },\n            onHide: function () { return _this.onHide(); }\n        });\n    };\n    Dropdown.prototype.getAnchor = function () {\n        return this.element;\n    };\n    Dropdown.prototype.onHide = function () {\n        dom_1.removeClass(this.element, 'active');\n    };\n    Dropdown.prototype.hide = function () {\n        _super.prototype.hide.call(this);\n        if (this.contextViewProvider) {\n            this.contextViewProvider.hideContextView();\n        }\n    };\n    Dropdown.prototype.renderContents = function (container) {\n        return null;\n    };\n    return Dropdown;\n}(BaseDropdown));\nexports.Dropdown = Dropdown;\nvar DropdownMenu = /** @class */ (function (_super) {\n    tslib_1.__extends(DropdownMenu, _super);\n    function DropdownMenu(container, options) {\n        var _this = _super.call(this, container, options) || this;\n        _this._contextMenuProvider = options.contextMenuProvider;\n        _this.actions = options.actions || [];\n        _this.actionProvider = options.actionProvider;\n        _this.menuClassName = options.menuClassName || '';\n        return _this;\n    }\n    Object.defineProperty(DropdownMenu.prototype, \"menuOptions\", {\n        get: function () {\n            return this._menuOptions;\n        },\n        set: function (options) {\n            this._menuOptions = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DropdownMenu.prototype, \"actions\", {\n        get: function () {\n            if (this.actionProvider) {\n                return this.actionProvider.getActions();\n            }\n            return this._actions;\n        },\n        set: function (actions) {\n            this._actions = actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DropdownMenu.prototype.show = function () {\n        var _this = this;\n        _super.prototype.show.call(this);\n        dom_1.addClass(this.element, 'active');\n        this._contextMenuProvider.showContextMenu({\n            getAnchor: function () { return _this.element; },\n            getActions: function () { return _this.actions; },\n            getActionsContext: function () { return _this.menuOptions ? _this.menuOptions.context : null; },\n            getActionItem: function (action) { return _this.menuOptions && _this.menuOptions.actionItemProvider ? _this.menuOptions.actionItemProvider(action) : undefined; },\n            getKeyBinding: function (action) { return _this.menuOptions && _this.menuOptions.getKeyBinding ? _this.menuOptions.getKeyBinding(action) : undefined; },\n            getMenuClassName: function () { return _this.menuClassName; },\n            onHide: function () { return _this.onHide(); },\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\n            anchorAlignment: this.menuOptions.anchorAlignment\n        });\n    };\n    DropdownMenu.prototype.hide = function () {\n        _super.prototype.hide.call(this);\n    };\n    DropdownMenu.prototype.onHide = function () {\n        this.hide();\n        dom_1.removeClass(this.element, 'active');\n    };\n    return DropdownMenu;\n}(BaseDropdown));\nexports.DropdownMenu = DropdownMenu;\nvar DropdownMenuActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(DropdownMenuActionItem, _super);\n    function DropdownMenuActionItem(action, menuActionsOrProvider, contextMenuProvider, actionItemProvider, actionRunner, keybindings, clazz, anchorAlignmentProvider) {\n        var _this = _super.call(this, null, action) || this;\n        _this.menuActionsOrProvider = menuActionsOrProvider;\n        _this.contextMenuProvider = contextMenuProvider;\n        _this.actionItemProvider = actionItemProvider;\n        _this.actionRunner = actionRunner;\n        _this.keybindings = keybindings;\n        _this.clazz = clazz;\n        _this.anchorAlignmentProvider = anchorAlignmentProvider;\n        return _this;\n    }\n    DropdownMenuActionItem.prototype.render = function (container) {\n        var _this = this;\n        var labelRenderer = function (el) {\n            _this.element = dom_1.append(el, dom_1.$('a.action-label.icon'));\n            dom_1.addClasses(_this.element, _this.clazz);\n            _this.element.tabIndex = 0;\n            _this.element.setAttribute('role', 'button');\n            _this.element.setAttribute('aria-haspopup', 'true');\n            _this.element.title = _this._action.label || '';\n            return null;\n        };\n        var options = {\n            contextMenuProvider: this.contextMenuProvider,\n            labelRenderer: labelRenderer\n        };\n        // Render the DropdownMenu around a simple action to toggle it\n        if (Array.isArray(this.menuActionsOrProvider)) {\n            options.actions = this.menuActionsOrProvider;\n        }\n        else {\n            options.actionProvider = this.menuActionsOrProvider;\n        }\n        this.dropdownMenu = this._register(new DropdownMenu(container, options));\n        this.dropdownMenu.menuOptions = {\n            actionItemProvider: this.actionItemProvider,\n            actionRunner: this.actionRunner,\n            getKeyBinding: this.keybindings,\n            context: this._context\n        };\n        if (this.anchorAlignmentProvider) {\n            var that_1 = this;\n            this.dropdownMenu.menuOptions = tslib_1.__assign({}, this.dropdownMenu.menuOptions, { get anchorAlignment() {\n                    return that_1.anchorAlignmentProvider();\n                } });\n        }\n    };\n    DropdownMenuActionItem.prototype.setActionContext = function (newContext) {\n        _super.prototype.setActionContext.call(this, newContext);\n        if (this.dropdownMenu) {\n            this.dropdownMenu.menuOptions.context = newContext;\n        }\n    };\n    DropdownMenuActionItem.prototype.show = function () {\n        if (this.dropdownMenu) {\n            this.dropdownMenu.show();\n        }\n    };\n    return DropdownMenuActionItem;\n}(actionbar_1.BaseActionItem));\nexports.DropdownMenuActionItem = DropdownMenuActionItem;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/dropdown/dropdown.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/dropdown/dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./dropdown';\nimport { Gesture, EventType as GestureEventType } from 'vs/base/browser/touch';\nimport { ActionRunner, IAction, IActionRunner } from 'vs/base/common/actions';\nimport { BaseActionItem, IActionItemProvider } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IContextViewProvider, IAnchor, AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\nimport { IMenuOptions } from 'vs/base/browser/ui/menu/menu';\nimport { ResolvedKeybinding, KeyCode } from 'vs/base/common/keyCodes';\nimport { EventHelper, EventType, removeClass, addClass, append, $, addDisposableListener, addClasses } from 'vs/base/browser/dom';\nimport { IContextMenuDelegate } from 'vs/base/browser/contextmenu';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\n\nexport interface ILabelRenderer {\n\t(container: HTMLElement): IDisposable | null;\n}\n\nexport interface IBaseDropdownOptions {\n\tlabel?: string;\n\tlabelRenderer?: ILabelRenderer;\n}\n\nexport class BaseDropdown extends ActionRunner {\n\tprivate _element: HTMLElement;\n\tprivate boxContainer?: HTMLElement;\n\tprivate _label?: HTMLElement;\n\tprivate contents?: HTMLElement;\n\tprivate visible: boolean;\n\n\tconstructor(container: HTMLElement, options: IBaseDropdownOptions) {\n\t\tsuper();\n\n\t\tthis._element = append(container, $('.monaco-dropdown'));\n\n\t\tthis._label = append(this._element, $('.dropdown-label'));\n\n\t\tlet labelRenderer = options.labelRenderer;\n\t\tif (!labelRenderer) {\n\t\t\tlabelRenderer = (container: HTMLElement): IDisposable | null => {\n\t\t\t\tcontainer.textContent = options.label || '';\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t\tfor (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n\t\t\tthis._register(addDisposableListener(this._label, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\n\t\t}\n\n\t\tfor (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\n\t\t\tthis._register(addDisposableListener(this._label, event, e => {\n\t\t\t\tif (e instanceof MouseEvent && e.detail > 1) {\n\t\t\t\t\treturn; // prevent multiple clicks to open multiple context menus (https://github.com/Microsoft/vscode/issues/41363)\n\t\t\t\t}\n\n\t\t\t\tif (this.visible) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t} else {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tEventHelper.stop(e, true); // https://github.com/Microsoft/vscode/issues/57997\n\n\t\t\t\tif (this.visible) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t} else {\n\t\t\t\t\tthis.show();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst cleanupFn = labelRenderer(this._label);\n\t\tif (cleanupFn) {\n\t\t\tthis._register(cleanupFn);\n\t\t}\n\n\t\tGesture.addTarget(this._label);\n\t}\n\n\tget element(): HTMLElement {\n\t\treturn this._element;\n\t}\n\n\tget label() {\n\t\treturn this._label;\n\t}\n\n\tset tooltip(tooltip: string) {\n\t\tif (this._label) {\n\t\t\tthis._label.title = tooltip;\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tthis.visible = true;\n\t}\n\n\thide(): void {\n\t\tthis.visible = false;\n\t}\n\n\tprotected onEvent(e: Event, activeElement: HTMLElement): void {\n\t\tthis.hide();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.hide();\n\n\t\tif (this.boxContainer) {\n\t\t\tthis.boxContainer.remove();\n\t\t\tthis.boxContainer = undefined;\n\t\t}\n\n\t\tif (this.contents) {\n\t\t\tthis.contents.remove();\n\t\t\tthis.contents = undefined;\n\t\t}\n\n\t\tif (this._label) {\n\t\t\tthis._label.remove();\n\t\t\tthis._label = undefined;\n\t\t}\n\t}\n}\n\nexport interface IDropdownOptions extends IBaseDropdownOptions {\n\tcontextViewProvider: IContextViewProvider;\n}\n\nexport class Dropdown extends BaseDropdown {\n\tprivate contextViewProvider: IContextViewProvider;\n\n\tconstructor(container: HTMLElement, options: IDropdownOptions) {\n\t\tsuper(container, options);\n\n\t\tthis.contextViewProvider = options.contextViewProvider;\n\t}\n\n\tshow(): void {\n\t\tsuper.show();\n\n\t\taddClass(this.element, 'active');\n\n\t\tthis.contextViewProvider.showContextView({\n\t\t\tgetAnchor: () => this.getAnchor(),\n\n\t\t\trender: (container) => {\n\t\t\t\treturn this.renderContents(container);\n\t\t\t},\n\n\t\t\tonDOMEvent: (e, activeElement) => {\n\t\t\t\tthis.onEvent(e, activeElement);\n\t\t\t},\n\n\t\t\tonHide: () => this.onHide()\n\t\t});\n\t}\n\n\tprotected getAnchor(): HTMLElement | IAnchor {\n\t\treturn this.element;\n\t}\n\n\tprotected onHide(): void {\n\t\tremoveClass(this.element, 'active');\n\t}\n\n\thide(): void {\n\t\tsuper.hide();\n\n\t\tif (this.contextViewProvider) {\n\t\t\tthis.contextViewProvider.hideContextView();\n\t\t}\n\t}\n\n\tprotected renderContents(container: HTMLElement): IDisposable | null {\n\t\treturn null;\n\t}\n}\n\nexport interface IContextMenuProvider {\n\tshowContextMenu(delegate: IContextMenuDelegate): void;\n}\n\nexport interface IActionProvider {\n\tgetActions(): IAction[];\n}\n\nexport interface IDropdownMenuOptions extends IBaseDropdownOptions {\n\tcontextMenuProvider: IContextMenuProvider;\n\tactions?: IAction[];\n\tactionProvider?: IActionProvider;\n\tmenuClassName?: string;\n}\n\nexport class DropdownMenu extends BaseDropdown {\n\tprivate _contextMenuProvider: IContextMenuProvider;\n\tprivate _menuOptions: IMenuOptions;\n\tprivate _actions: IAction[];\n\tprivate actionProvider?: IActionProvider;\n\tprivate menuClassName: string;\n\n\tconstructor(container: HTMLElement, options: IDropdownMenuOptions) {\n\t\tsuper(container, options);\n\n\t\tthis._contextMenuProvider = options.contextMenuProvider;\n\t\tthis.actions = options.actions || [];\n\t\tthis.actionProvider = options.actionProvider;\n\t\tthis.menuClassName = options.menuClassName || '';\n\t}\n\n\tset menuOptions(options: IMenuOptions) {\n\t\tthis._menuOptions = options;\n\t}\n\n\tget menuOptions(): IMenuOptions {\n\t\treturn this._menuOptions;\n\t}\n\n\tprivate get actions(): IAction[] {\n\t\tif (this.actionProvider) {\n\t\t\treturn this.actionProvider.getActions();\n\t\t}\n\n\t\treturn this._actions;\n\t}\n\n\tprivate set actions(actions: IAction[]) {\n\t\tthis._actions = actions;\n\t}\n\n\tshow(): void {\n\t\tsuper.show();\n\n\t\taddClass(this.element, 'active');\n\n\t\tthis._contextMenuProvider.showContextMenu({\n\t\t\tgetAnchor: () => this.element,\n\t\t\tgetActions: () => this.actions,\n\t\t\tgetActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\n\t\t\tgetActionItem: action => this.menuOptions && this.menuOptions.actionItemProvider ? this.menuOptions.actionItemProvider(action) : undefined,\n\t\t\tgetKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\n\t\t\tgetMenuClassName: () => this.menuClassName,\n\t\t\tonHide: () => this.onHide(),\n\t\t\tactionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\n\t\t\tanchorAlignment: this.menuOptions.anchorAlignment\n\t\t});\n\t}\n\n\thide(): void {\n\t\tsuper.hide();\n\t}\n\n\tprivate onHide(): void {\n\t\tthis.hide();\n\t\tremoveClass(this.element, 'active');\n\t}\n}\n\nexport class DropdownMenuActionItem extends BaseActionItem {\n\tprivate menuActionsOrProvider: any;\n\tprivate dropdownMenu: DropdownMenu;\n\tprivate contextMenuProvider: IContextMenuProvider;\n\tprivate actionItemProvider?: IActionItemProvider;\n\tprivate keybindings?: (action: IAction) => ResolvedKeybinding | undefined;\n\tprivate clazz: string;\n\tprivate anchorAlignmentProvider: (() => AnchorAlignment) | undefined;\n\n\tconstructor(action: IAction, menuActions: IAction[], contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider | undefined, actionRunner: IActionRunner, keybindings: ((action: IAction) => ResolvedKeybinding | undefined) | undefined, clazz: string, anchorAlignmentProvider?: () => AnchorAlignment);\n\tconstructor(action: IAction, actionProvider: IActionProvider, contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider | undefined, actionRunner: IActionRunner, keybindings: ((action: IAction) => ResolvedKeybinding) | undefined, clazz: string, anchorAlignmentProvider?: () => AnchorAlignment);\n\tconstructor(action: IAction, menuActionsOrProvider: any, contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider | undefined, actionRunner: IActionRunner, keybindings: ((action: IAction) => ResolvedKeybinding | undefined) | undefined, clazz: string, anchorAlignmentProvider?: () => AnchorAlignment) {\n\t\tsuper(null, action);\n\n\t\tthis.menuActionsOrProvider = menuActionsOrProvider;\n\t\tthis.contextMenuProvider = contextMenuProvider;\n\t\tthis.actionItemProvider = actionItemProvider;\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.keybindings = keybindings;\n\t\tthis.clazz = clazz;\n\t\tthis.anchorAlignmentProvider = anchorAlignmentProvider;\n\t}\n\n\trender(container: HTMLElement): void {\n\t\tconst labelRenderer: ILabelRenderer = (el: HTMLElement): IDisposable | null => {\n\t\t\tthis.element = append(el, $('a.action-label.icon'));\n\t\t\taddClasses(this.element, this.clazz);\n\n\t\t\tthis.element.tabIndex = 0;\n\t\t\tthis.element.setAttribute('role', 'button');\n\t\t\tthis.element.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.element.title = this._action.label || '';\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst options: IDropdownMenuOptions = {\n\t\t\tcontextMenuProvider: this.contextMenuProvider,\n\t\t\tlabelRenderer: labelRenderer\n\t\t};\n\n\t\t// Render the DropdownMenu around a simple action to toggle it\n\t\tif (Array.isArray(this.menuActionsOrProvider)) {\n\t\t\toptions.actions = this.menuActionsOrProvider;\n\t\t} else {\n\t\t\toptions.actionProvider = this.menuActionsOrProvider;\n\t\t}\n\n\t\tthis.dropdownMenu = this._register(new DropdownMenu(container, options));\n\n\t\tthis.dropdownMenu.menuOptions = {\n\t\t\tactionItemProvider: this.actionItemProvider,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tgetKeyBinding: this.keybindings,\n\t\t\tcontext: this._context\n\t\t};\n\n\t\tif (this.anchorAlignmentProvider) {\n\t\t\tconst that = this;\n\n\t\t\tthis.dropdownMenu.menuOptions = {\n\t\t\t\t...this.dropdownMenu.menuOptions,\n\t\t\t\tget anchorAlignment(): AnchorAlignment {\n\t\t\t\t\treturn that.anchorAlignmentProvider!();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tsetActionContext(newContext: any): void {\n\t\tsuper.setActionContext(newContext);\n\n\t\tif (this.dropdownMenu) {\n\t\t\tthis.dropdownMenu.menuOptions.context = newContext;\n\t\t}\n\t}\n\n\tshow(): void {\n\t\tif (this.dropdownMenu) {\n\t\t\tthis.dropdownMenu.show();\n\t\t}\n\t}\n}\n"]}]}