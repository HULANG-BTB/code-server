{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostLogService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostLogService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/path\", \"vs/platform/log/common/log\", \"vs/platform/log/node/spdlogService\", \"vs/workbench/services/extensions/common/extensions\", \"vs/base/common/uri\"], function (require, exports, path_1, log_1, spdlogService_1, extensions_1, uri_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ExtHostLogService extends log_1.DelegatedLogService {\n        constructor(logLevel, logsPath) {\n            super(spdlogService_1.createSpdLogService(extensions_1.ExtensionHostLogFileName, logLevel, logsPath));\n            this._logsPath = logsPath;\n            this.logFile = uri_1.URI.file(path_1.join(logsPath, `${extensions_1.ExtensionHostLogFileName}.log`));\n        }\n        $setLevel(level) {\n            this.setLevel(level);\n        }\n        getLogDirectory(extensionID) {\n            return path_1.join(this._logsPath, extensionID.value);\n        }\n    }\n    exports.ExtHostLogService = ExtHostLogService;\n});\n",null]}