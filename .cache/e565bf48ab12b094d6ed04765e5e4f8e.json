{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Platform = require(\"vs/base/common/platform\");\nvar os = require(\"os\");\nvar uuid = require(\"vs/base/common/uuid\");\nvar pfs_1 = require(\"vs/base/node/pfs\");\nfunction resolveCommonProperties(commit, version, machineId, installSourcePath) {\n    var result = Object.create(null);\n    // __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    result['common.machineId'] = machineId;\n    // __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    result['sessionID'] = uuid.generateUuid() + Date.now();\n    // __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n    result['commitHash'] = commit;\n    // __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    result['version'] = version;\n    // __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    result['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n    // __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    result['common.platform'] = Platform.PlatformToString(Platform.platform);\n    // __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n    result['common.nodePlatform'] = process.platform;\n    // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n    result['common.nodeArch'] = process.arch;\n    // dynamic properties which value differs on each call\n    var seq = 0;\n    var startTime = Date.now();\n    Object.defineProperties(result, {\n        // __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        'timestamp': {\n            get: function () { return new Date(); },\n            enumerable: true\n        },\n        // __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n        'common.timesincesessionstart': {\n            get: function () { return Date.now() - startTime; },\n            enumerable: true\n        },\n        // __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n        'common.sequence': {\n            get: function () { return seq++; },\n            enumerable: true\n        }\n    });\n    if (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n        // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n        result['common.snap'] = 'true';\n    }\n    return pfs_1.readFile(installSourcePath, 'utf8').then(function (contents) {\n        // __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        result['common.source'] = contents.slice(0, 30);\n        return result;\n    }, function (error) {\n        return result;\n    });\n}\nexports.resolveCommonProperties = resolveCommonProperties;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,kDAAoD;AACpD,uBAAyB;AACzB,0CAA4C;AAC5C,wCAA4C;AAE5C,SAAgB,uBAAuB,CAAC,MAA0B,EAAE,OAA2B,EAAE,SAA6B,EAAE,iBAAyB;IACxJ,IAAM,MAAM,GAA4C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5E,2JAA2J;IAC3J,MAAM,CAAC,kBAAkB,CAAC,GAAG,SAAS,CAAC;IACvC,qGAAqG;IACrG,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACvD,4GAA4G;IAC5G,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;IAC9B,mGAAmG;IACnG,MAAM,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;IAC5B,kHAAkH;IAClH,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;IACxG,2GAA2G;IAC3G,MAAM,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACzE,qHAAqH;IACrH,MAAM,CAAC,qBAAqB,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;IACjD,iHAAiH;IACjH,MAAM,CAAC,iBAAiB,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;IAEzC,sDAAsD;IACtD,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC7B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/B,qGAAqG;QACrG,WAAW,EAAE;YACZ,GAAG,EAAE,cAAM,OAAA,IAAI,IAAI,EAAE,EAAV,CAAU;YACrB,UAAU,EAAE,IAAI;SAChB;QACD,+IAA+I;QAC/I,8BAA8B,EAAE;YAC/B,GAAG,EAAE,cAAM,OAAA,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,EAAtB,CAAsB;YACjC,UAAU,EAAE,IAAI;SAChB;QACD,kIAAkI;QAClI,iBAAiB,EAAE;YAClB,GAAG,EAAE,cAAM,OAAA,GAAG,EAAE,EAAL,CAAK;YAChB,UAAU,EAAE,IAAI;SAChB;KACD,CAAC,CAAC;IAEH,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE;QAClF,iHAAiH;QACjH,MAAM,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;KAC/B;IAED,OAAO,cAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;QAEvD,yGAAyG;QACzG,MAAM,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEhD,OAAO,MAAM,CAAC;IACf,CAAC,EAAE,UAAA,KAAK;QACP,OAAO,MAAM,CAAC;IACf,CAAC,CAAC,CAAC;AACJ,CAAC;AAtDD,0DAsDC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport function resolveCommonProperties(commit: string | undefined, version: string | undefined, machineId: string | undefined, installSourcePath: string): Promise<{ [name: string]: string | undefined; }> {\n\tconst result: { [name: string]: string | undefined; } = Object.create(null);\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\treturn readFile(installSourcePath, 'utf8').then(contents => {\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\n\t\treturn result;\n\t}, error => {\n\t\treturn result;\n\t});\n}\n"]}]}