{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/workbenchThemeService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/workbenchThemeService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IWorkbenchThemeService = instantiation_1.createDecorator('themeService');\nexports.VS_LIGHT_THEME = 'vs';\nexports.VS_DARK_THEME = 'vs-dark';\nexports.VS_HC_THEME = 'hc-black';\nexports.HC_THEME_ID = 'Default High Contrast';\nexports.COLOR_THEME_SETTING = 'workbench.colorTheme';\nexports.DETECT_HC_SETTING = 'window.autoDetectHighContrast';\nexports.ICON_THEME_SETTING = 'workbench.iconTheme';\nexports.CUSTOM_WORKBENCH_COLORS_SETTING = 'workbench.colorCustomizations';\nexports.CUSTOM_EDITOR_COLORS_SETTING = 'editor.tokenColorCustomizations';\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/workbenchThemeService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/workbenchThemeService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AAMpE,QAAA,sBAAsB,GAAG,+BAAe,CAAyB,cAAc,CAAC,CAAC;AAEjF,QAAA,cAAc,GAAG,IAAI,CAAC;AACtB,QAAA,aAAa,GAAG,SAAS,CAAC;AAC1B,QAAA,WAAW,GAAG,UAAU,CAAC;AAEzB,QAAA,WAAW,GAAG,uBAAuB,CAAC;AAEtC,QAAA,mBAAmB,GAAG,sBAAsB,CAAC;AAC7C,QAAA,iBAAiB,GAAG,+BAA+B,CAAC;AACpD,QAAA,kBAAkB,GAAG,qBAAqB,CAAC;AAC3C,QAAA,+BAA+B,GAAG,+BAA+B,CAAC;AAClE,QAAA,4BAA4B,GAAG,iCAAiC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { Color } from 'vs/base/common/color';\nimport { ITheme, IThemeService, IIconTheme } from 'vs/platform/theme/common/themeService';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\n\nexport const IWorkbenchThemeService = createDecorator<IWorkbenchThemeService>('themeService');\n\nexport const VS_LIGHT_THEME = 'vs';\nexport const VS_DARK_THEME = 'vs-dark';\nexport const VS_HC_THEME = 'hc-black';\n\nexport const HC_THEME_ID = 'Default High Contrast';\n\nexport const COLOR_THEME_SETTING = 'workbench.colorTheme';\nexport const DETECT_HC_SETTING = 'window.autoDetectHighContrast';\nexport const ICON_THEME_SETTING = 'workbench.iconTheme';\nexport const CUSTOM_WORKBENCH_COLORS_SETTING = 'workbench.colorCustomizations';\nexport const CUSTOM_EDITOR_COLORS_SETTING = 'editor.tokenColorCustomizations';\n\nexport interface IColorTheme extends ITheme {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly settingsId: string;\n\treadonly extensionData?: ExtensionData;\n\treadonly description?: string;\n\treadonly isLoaded: boolean;\n\treadonly tokenColors: ITokenColorizationRule[];\n}\n\nexport interface IColorMap {\n\t[id: string]: Color;\n}\n\nexport interface IFileIconTheme extends IIconTheme {\n\treadonly id: string;\n\treadonly label: string;\n\treadonly settingsId: string | null;\n\treadonly description?: string;\n\treadonly extensionData?: ExtensionData;\n\n\treadonly isLoaded: boolean;\n\treadonly hasFileIcons: boolean;\n\treadonly hasFolderIcons: boolean;\n\treadonly hidesExplorerArrows: boolean;\n}\n\nexport interface IWorkbenchThemeService extends IThemeService {\n\t_serviceBrand: any;\n\tsetColorTheme(themeId: string | undefined, settingsTarget: ConfigurationTarget | undefined): Promise<IColorTheme | null>;\n\tgetColorTheme(): IColorTheme;\n\tgetColorThemes(): Promise<IColorTheme[]>;\n\tonDidColorThemeChange: Event<IColorTheme>;\n\trestoreColorTheme(): void;\n\n\tsetFileIconTheme(iconThemeId: string | undefined, settingsTarget: ConfigurationTarget | undefined): Promise<IFileIconTheme>;\n\tgetFileIconTheme(): IFileIconTheme;\n\tgetFileIconThemes(): Promise<IFileIconTheme[]>;\n\tonDidFileIconThemeChange: Event<IFileIconTheme>;\n}\n\nexport interface ITokenColorCustomizations {\n\tcomments?: string | ITokenColorizationSetting;\n\tstrings?: string | ITokenColorizationSetting;\n\tnumbers?: string | ITokenColorizationSetting;\n\tkeywords?: string | ITokenColorizationSetting;\n\ttypes?: string | ITokenColorizationSetting;\n\tfunctions?: string | ITokenColorizationSetting;\n\tvariables?: string | ITokenColorizationSetting;\n\ttextMateRules?: ITokenColorizationRule[];\n}\n\nexport interface ITokenColorizationRule {\n\tname?: string;\n\tscope?: string | string[];\n\tsettings: ITokenColorizationSetting;\n}\n\nexport interface ITokenColorizationSetting {\n\tforeground?: string;\n\tbackground?: string;\n\tfontStyle?: string;  // italic, underline, bold\n}\n\nexport interface ExtensionData {\n\textensionId: string;\n\textensionPublisher: string;\n\textensionName: string;\n\textensionIsBuiltin: boolean;\n}\n\nexport interface IThemeExtensionPoint {\n\tid: string;\n\tlabel?: string;\n\tdescription?: string;\n\tpath: string;\n\t_watch: boolean; // unsupported options to watch location\n}"]}]}