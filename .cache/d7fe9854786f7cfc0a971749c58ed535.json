{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionGalleryService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionGalleryService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar os_1 = require(\"os\");\nvar path = require(\"vs/base/common/path\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nvar extensionManagementUtil_1 = require(\"vs/platform/extensionManagement/common/extensionManagementUtil\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar request_1 = require(\"vs/platform/request/node/request\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar request_2 = require(\"vs/base/node/request\");\nvar package_1 = require(\"vs/platform/product/node/package\");\nvar product_1 = require(\"vs/platform/product/node/product\");\nvar extensionValidator_1 = require(\"vs/platform/extensions/node/extensionValidator\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar pfs_1 = require(\"vs/base/node/pfs\");\nvar extfs_1 = require(\"vs/base/node/extfs\");\nvar uuid_1 = require(\"vs/base/common/uuid\");\nvar map_1 = require(\"vs/base/common/map\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar log_1 = require(\"vs/platform/log/common/log\");\nvar Flags;\n(function (Flags) {\n    Flags[Flags[\"None\"] = 0] = \"None\";\n    Flags[Flags[\"IncludeVersions\"] = 1] = \"IncludeVersions\";\n    Flags[Flags[\"IncludeFiles\"] = 2] = \"IncludeFiles\";\n    Flags[Flags[\"IncludeCategoryAndTags\"] = 4] = \"IncludeCategoryAndTags\";\n    Flags[Flags[\"IncludeSharedAccounts\"] = 8] = \"IncludeSharedAccounts\";\n    Flags[Flags[\"IncludeVersionProperties\"] = 16] = \"IncludeVersionProperties\";\n    Flags[Flags[\"ExcludeNonValidated\"] = 32] = \"ExcludeNonValidated\";\n    Flags[Flags[\"IncludeInstallationTargets\"] = 64] = \"IncludeInstallationTargets\";\n    Flags[Flags[\"IncludeAssetUri\"] = 128] = \"IncludeAssetUri\";\n    Flags[Flags[\"IncludeStatistics\"] = 256] = \"IncludeStatistics\";\n    Flags[Flags[\"IncludeLatestVersionOnly\"] = 512] = \"IncludeLatestVersionOnly\";\n    Flags[Flags[\"Unpublished\"] = 4096] = \"Unpublished\";\n})(Flags || (Flags = {}));\nfunction flagsToString() {\n    var flags = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        flags[_i] = arguments[_i];\n    }\n    return String(flags.reduce(function (r, f) { return r | f; }, 0));\n}\nvar FilterType;\n(function (FilterType) {\n    FilterType[FilterType[\"Tag\"] = 1] = \"Tag\";\n    FilterType[FilterType[\"ExtensionId\"] = 4] = \"ExtensionId\";\n    FilterType[FilterType[\"Category\"] = 5] = \"Category\";\n    FilterType[FilterType[\"ExtensionName\"] = 7] = \"ExtensionName\";\n    FilterType[FilterType[\"Target\"] = 8] = \"Target\";\n    FilterType[FilterType[\"Featured\"] = 9] = \"Featured\";\n    FilterType[FilterType[\"SearchText\"] = 10] = \"SearchText\";\n    FilterType[FilterType[\"ExcludeWithFlags\"] = 12] = \"ExcludeWithFlags\";\n})(FilterType || (FilterType = {}));\nvar AssetType = {\n    Icon: 'Microsoft.VisualStudio.Services.Icons.Default',\n    Details: 'Microsoft.VisualStudio.Services.Content.Details',\n    Changelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n    Manifest: 'Microsoft.VisualStudio.Code.Manifest',\n    VSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n    License: 'Microsoft.VisualStudio.Services.Content.License',\n    Repository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\nvar PropertyType = {\n    Dependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n    ExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n    Engine: 'Microsoft.VisualStudio.Code.Engine',\n    LocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\nvar DefaultPageSize = 10;\nvar DefaultQueryState = {\n    pageNumber: 1,\n    pageSize: DefaultPageSize,\n    sortBy: extensionManagement_1.SortBy.NoneOrRelevance,\n    sortOrder: extensionManagement_1.SortOrder.Default,\n    flags: Flags.None,\n    criteria: [],\n    assetTypes: []\n};\nvar Query = /** @class */ (function () {\n    function Query(state) {\n        if (state === void 0) { state = DefaultQueryState; }\n        this.state = state;\n    }\n    Object.defineProperty(Query.prototype, \"pageNumber\", {\n        get: function () { return this.state.pageNumber; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Query.prototype, \"pageSize\", {\n        get: function () { return this.state.pageSize; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Query.prototype, \"sortBy\", {\n        get: function () { return this.state.sortBy; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Query.prototype, \"sortOrder\", {\n        get: function () { return this.state.sortOrder; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Query.prototype, \"flags\", {\n        get: function () { return this.state.flags; },\n        enumerable: true,\n        configurable: true\n    });\n    Query.prototype.withPage = function (pageNumber, pageSize) {\n        if (pageSize === void 0) { pageSize = this.state.pageSize; }\n        return new Query(objects_1.assign({}, this.state, { pageNumber: pageNumber, pageSize: pageSize }));\n    };\n    Query.prototype.withFilter = function (filterType) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var criteria = this.state.criteria.concat(values.map(function (value) { return ({ filterType: filterType, value: value }); }));\n        return new Query(objects_1.assign({}, this.state, { criteria: criteria }));\n    };\n    Query.prototype.withSortBy = function (sortBy) {\n        return new Query(objects_1.assign({}, this.state, { sortBy: sortBy }));\n    };\n    Query.prototype.withSortOrder = function (sortOrder) {\n        return new Query(objects_1.assign({}, this.state, { sortOrder: sortOrder }));\n    };\n    Query.prototype.withFlags = function () {\n        var flags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            flags[_i] = arguments[_i];\n        }\n        return new Query(objects_1.assign({}, this.state, { flags: flags.reduce(function (r, f) { return r | f; }, 0) }));\n    };\n    Query.prototype.withAssetTypes = function () {\n        var assetTypes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            assetTypes[_i] = arguments[_i];\n        }\n        return new Query(objects_1.assign({}, this.state, { assetTypes: assetTypes }));\n    };\n    Object.defineProperty(Query.prototype, \"raw\", {\n        get: function () {\n            var _a = this.state, criteria = _a.criteria, pageNumber = _a.pageNumber, pageSize = _a.pageSize, sortBy = _a.sortBy, sortOrder = _a.sortOrder, flags = _a.flags, assetTypes = _a.assetTypes;\n            var filters = [{ criteria: criteria, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder }];\n            return { filters: filters, assetTypes: assetTypes, flags: flags };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Query.prototype, \"searchText\", {\n        get: function () {\n            var criterium = this.state.criteria.filter(function (criterium) { return criterium.filterType === FilterType.SearchText; })[0];\n            return criterium && criterium.value ? criterium.value : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}());\nfunction getStatistic(statistics, name) {\n    var result = (statistics || []).filter(function (s) { return s.statisticName === name; })[0];\n    return result ? result.value : 0;\n}\nfunction getCoreTranslationAssets(version) {\n    var coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n    var result = version.files.filter(function (f) { return f.assetType.indexOf(coreTranslationAssetPrefix) === 0; });\n    return result.reduce(function (result, file) {\n        result[file.assetType.substring(coreTranslationAssetPrefix.length)] = getVersionAsset(version, file.assetType);\n        return result;\n    }, {});\n}\nfunction getRepositoryAsset(version) {\n    if (version.properties) {\n        var results = version.properties.filter(function (p) { return p.key === AssetType.Repository; });\n        var gitRegExp_1 = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n        var uri = results.filter(function (r) { return gitRegExp_1.test(r.value); })[0];\n        return uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n    }\n    return getVersionAsset(version, AssetType.Repository);\n}\nfunction getDownloadAsset(version) {\n    return {\n        uri: version.fallbackAssetUri + \"/\" + AssetType.VSIX + \"?redirect=true\",\n        fallbackUri: version.fallbackAssetUri + \"/\" + AssetType.VSIX\n    };\n}\nfunction getIconAsset(version) {\n    var asset = getVersionAsset(version, AssetType.Icon);\n    if (asset) {\n        return asset;\n    }\n    var uri = require.toUrl('./media/defaultIcon.png');\n    return { uri: uri, fallbackUri: uri };\n}\nfunction getVersionAsset(version, type) {\n    var result = version.files.filter(function (f) { return f.assetType === type; })[0];\n    return result ? { uri: version.assetUri + \"/\" + type, fallbackUri: version.fallbackAssetUri + \"/\" + type } : null;\n}\nfunction getExtensions(version, property) {\n    var values = version.properties ? version.properties.filter(function (p) { return p.key === property; }) : [];\n    var value = values.length > 0 && values[0].value;\n    return value ? value.split(',').map(function (v) { return extensionManagementUtil_1.adoptToGalleryExtensionId(v); }) : [];\n}\nfunction getEngine(version) {\n    var values = version.properties ? version.properties.filter(function (p) { return p.key === PropertyType.Engine; }) : [];\n    return (values.length > 0 && values[0].value) || '';\n}\nfunction getLocalizedLanguages(version) {\n    var values = version.properties ? version.properties.filter(function (p) { return p.key === PropertyType.LocalizedLanguages; }) : [];\n    var value = (values.length > 0 && values[0].value) || '';\n    return value ? value.split(',') : [];\n}\nfunction getIsPreview(flags) {\n    return flags.indexOf('preview') !== -1;\n}\nfunction toExtension(galleryExtension, version, index, query, querySource) {\n    var assets = {\n        manifest: getVersionAsset(version, AssetType.Manifest),\n        readme: getVersionAsset(version, AssetType.Details),\n        changelog: getVersionAsset(version, AssetType.Changelog),\n        license: getVersionAsset(version, AssetType.License),\n        repository: getRepositoryAsset(version),\n        download: getDownloadAsset(version),\n        icon: getIconAsset(version),\n        coreTranslations: getCoreTranslationAssets(version)\n    };\n    return {\n        identifier: {\n            id: extensionManagementUtil_1.getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n            uuid: galleryExtension.extensionId\n        },\n        name: galleryExtension.extensionName,\n        version: version.version,\n        date: version.lastUpdated,\n        displayName: galleryExtension.displayName,\n        publisherId: galleryExtension.publisher.publisherId,\n        publisher: galleryExtension.publisher.publisherName,\n        publisherDisplayName: galleryExtension.publisher.displayName,\n        description: galleryExtension.shortDescription || '',\n        installCount: getStatistic(galleryExtension.statistics, 'install') + getStatistic(galleryExtension.statistics, 'updateCount'),\n        rating: getStatistic(galleryExtension.statistics, 'averagerating'),\n        ratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n        assets: assets,\n        properties: {\n            dependencies: getExtensions(version, PropertyType.Dependency),\n            extensionPack: getExtensions(version, PropertyType.ExtensionPack),\n            engine: getEngine(version),\n            localizedLanguages: getLocalizedLanguages(version)\n        },\n        /* __GDPR__FRAGMENT__\n            \"GalleryExtensionTelemetryData2\" : {\n                \"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n                \"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n                \"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            }\n        */\n        telemetryData: {\n            index: ((query.pageNumber - 1) * query.pageSize) + index,\n            searchText: query.searchText,\n            querySource: querySource\n        },\n        preview: getIsPreview(galleryExtension.flags)\n    };\n}\nvar ExtensionGalleryService = /** @class */ (function () {\n    function ExtensionGalleryService(requestService, logService, environmentService, telemetryService) {\n        this.requestService = requestService;\n        this.logService = logService;\n        this.environmentService = environmentService;\n        this.telemetryService = telemetryService;\n        var config = product_1.default.extensionsGallery;\n        this.extensionsGalleryUrl = config && config.serviceUrl;\n        this.extensionsControlUrl = config && config.controlUrl;\n        this.commonHeadersPromise = resolveMarketplaceHeaders(this.environmentService);\n    }\n    ExtensionGalleryService.prototype.api = function (path) {\n        if (path === void 0) { path = ''; }\n        return \"\" + this.extensionsGalleryUrl + path;\n    };\n    ExtensionGalleryService.prototype.isEnabled = function () {\n        return !!this.extensionsGalleryUrl;\n    };\n    ExtensionGalleryService.prototype.getCompatibleExtension = function (arg1, version) {\n        var _this = this;\n        var extension = extensionManagement_1.isIExtensionIdentifier(arg1) ? null : arg1;\n        if (extension && extension.properties.engine && extensionValidator_1.isEngineValid(extension.properties.engine)) {\n            return Promise.resolve(extension);\n        }\n        var _a = extension ? extension.identifier : arg1, id = _a.id, uuid = _a.uuid;\n        var query = new Query()\n            .withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n            .withPage(1, 1)\n            .withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n            .withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n        if (uuid) {\n            query = query.withFilter(FilterType.ExtensionId, uuid);\n        }\n        else {\n            query = query.withFilter(FilterType.ExtensionName, id);\n        }\n        return this.queryGallery(query, cancellation_1.CancellationToken.None)\n            .then(function (_a) {\n            var galleryExtensions = _a.galleryExtensions;\n            var rawExtension = galleryExtensions[0];\n            if (!rawExtension || !rawExtension.versions.length) {\n                return null;\n            }\n            if (version) {\n                var versionAsset = rawExtension.versions.filter(function (v) { return v.version === version; })[0];\n                if (versionAsset) {\n                    var extension_1 = toExtension(rawExtension, versionAsset, 0, query);\n                    if (extension_1.properties.engine && extensionValidator_1.isEngineValid(extension_1.properties.engine)) {\n                        return extension_1;\n                    }\n                }\n                return null;\n            }\n            return _this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n                .then(function (rawVersion) {\n                if (rawVersion) {\n                    return toExtension(rawExtension, rawVersion, 0, query);\n                }\n                return null;\n            });\n        });\n    };\n    ExtensionGalleryService.prototype.query = function (arg1, arg2) {\n        var _this = this;\n        var options = cancellation_1.CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n        var token = cancellation_1.CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n        if (!this.isEnabled()) {\n            return Promise.reject(new Error('No extension gallery service configured.'));\n        }\n        var type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n        var text = options.text || '';\n        var pageSize = objects_1.getOrDefault(options, function (o) { return o.pageSize; }, 50);\n        /* __GDPR__\n            \"galleryService:query\" : {\n                \"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                \"text\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n            }\n        */\n        this.telemetryService.publicLog('galleryService:query', { type: type, text: text });\n        var query = new Query()\n            .withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n            .withPage(1, pageSize)\n            .withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n            .withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n        if (text) {\n            // Use category filter instead of \"category:themes\"\n            text = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, function (_, quotedCategory, category) {\n                query = query.withFilter(FilterType.Category, category || quotedCategory);\n                return '';\n            });\n            // Use tag filter instead of \"tag:debuggers\"\n            text = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, function (_, quotedTag, tag) {\n                query = query.withFilter(FilterType.Tag, tag || quotedTag);\n                return '';\n            });\n            text = text.trim();\n            if (text) {\n                text = text.length < 200 ? text : text.substring(0, 200);\n                query = query.withFilter(FilterType.SearchText, text);\n            }\n            query = query.withSortBy(extensionManagement_1.SortBy.NoneOrRelevance);\n        }\n        else if (options.ids) {\n            query = query.withFilter.apply(query, [FilterType.ExtensionId].concat(options.ids));\n        }\n        else if (options.names) {\n            query = query.withFilter.apply(query, [FilterType.ExtensionName].concat(options.names));\n        }\n        else {\n            query = query.withSortBy(extensionManagement_1.SortBy.InstallCount);\n        }\n        if (typeof options.sortBy === 'number') {\n            query = query.withSortBy(options.sortBy);\n        }\n        if (typeof options.sortOrder === 'number') {\n            query = query.withSortOrder(options.sortOrder);\n        }\n        return this.queryGallery(query, token).then(function (_a) {\n            var galleryExtensions = _a.galleryExtensions, total = _a.total;\n            var extensions = galleryExtensions.map(function (e, index) { return toExtension(e, e.versions[0], index, query, options.source); });\n            var pageSize = query.pageSize;\n            var getPage = function (pageIndex, ct) {\n                if (ct.isCancellationRequested) {\n                    return Promise.reject(errors_1.canceled());\n                }\n                var nextPageQuery = query.withPage(pageIndex + 1);\n                return _this.queryGallery(nextPageQuery, ct)\n                    .then(function (_a) {\n                    var galleryExtensions = _a.galleryExtensions;\n                    return galleryExtensions.map(function (e, index) { return toExtension(e, e.versions[0], index, nextPageQuery, options.source); });\n                });\n            };\n            return { firstPage: extensions, total: total, pageSize: pageSize, getPage: getPage };\n        });\n    };\n    ExtensionGalleryService.prototype.queryGallery = function (query, token) {\n        var _this = this;\n        if (!this.isEnabled()) {\n            return Promise.reject(new Error('No extension gallery service configured.'));\n        }\n        return this.commonHeadersPromise.then(function (commonHeaders) {\n            var data = JSON.stringify(query.raw);\n            var headers = objects_1.assign({}, commonHeaders, {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json;api-version=3.0-preview.1',\n                'Accept-Encoding': 'gzip',\n                'Content-Length': data.length\n            });\n            return _this.requestService.request({\n                type: 'POST',\n                url: _this.api('/extensionquery'),\n                data: data,\n                headers: headers\n            }, token).then(function (context) {\n                if (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n                    return { galleryExtensions: [], total: 0 };\n                }\n                return request_2.asJson(context).then(function (result) {\n                    if (result) {\n                        var r = result.results[0];\n                        var galleryExtensions = r.extensions;\n                        var resultCount = r.resultMetadata && r.resultMetadata.filter(function (m) { return m.metadataType === 'ResultCount'; })[0];\n                        var total = resultCount && resultCount.metadataItems.filter(function (i) { return i.name === 'TotalCount'; })[0].count || 0;\n                        return { galleryExtensions: galleryExtensions, total: total };\n                    }\n                    return { galleryExtensions: [], total: 0 };\n                });\n            });\n        });\n    };\n    ExtensionGalleryService.prototype.reportStatistic = function (publisher, name, version, type) {\n        var _this = this;\n        if (!this.isEnabled()) {\n            return Promise.resolve(undefined);\n        }\n        return this.commonHeadersPromise.then(function (commonHeaders) {\n            var headers = tslib_1.__assign({}, commonHeaders, { Accept: '*/*;api-version=4.0-preview.1' });\n            return _this.requestService.request({\n                type: 'POST',\n                url: _this.api(\"/publishers/\" + publisher + \"/extensions/\" + name + \"/\" + version + \"/stats?statType=\" + type),\n                headers: headers\n            }, cancellation_1.CancellationToken.None).then(undefined, function () { return undefined; });\n        });\n    };\n    ExtensionGalleryService.prototype.download = function (extension, operation) {\n        var _this = this;\n        this.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n        var zipPath = path.join(os_1.tmpdir(), uuid_1.generateUuid());\n        var data = extensionManagementUtil_1.getGalleryExtensionTelemetryData(extension);\n        var startTime = new Date().getTime();\n        /* __GDPR__\n            \"galleryService:downloadVSIX\" : {\n                \"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n                \"${include}\": [\n                    \"${GalleryExtensionTelemetryData}\"\n                ]\n            }\n        */\n        var log = function (duration) { return _this.telemetryService.publicLog('galleryService:downloadVSIX', objects_1.assign(data, { duration: duration })); };\n        var operationParam = operation === extensionManagement_1.InstallOperation.Install ? 'install' : operation === extensionManagement_1.InstallOperation.Update ? 'update' : '';\n        var downloadAsset = operationParam ? {\n            uri: extension.assets.download.uri + \"&\" + operationParam + \"=true\",\n            fallbackUri: extension.assets.download.fallbackUri + \"?\" + operationParam + \"=true\"\n        } : extension.assets.download;\n        return this.getAsset(downloadAsset)\n            .then(function (context) { return request_2.download(zipPath, context); })\n            .then(function () { return log(new Date().getTime() - startTime); })\n            .then(function () { return zipPath; });\n    };\n    ExtensionGalleryService.prototype.getReadme = function (extension, token) {\n        if (extension.assets.readme) {\n            return this.getAsset(extension.assets.readme, {}, token)\n                .then(function (context) { return request_2.asText(context); })\n                .then(function (content) { return content || ''; });\n        }\n        return Promise.resolve('');\n    };\n    ExtensionGalleryService.prototype.getManifest = function (extension, token) {\n        if (extension.assets.manifest) {\n            return this.getAsset(extension.assets.manifest, {}, token)\n                .then(request_2.asText)\n                .then(JSON.parse);\n        }\n        return Promise.resolve(null);\n    };\n    ExtensionGalleryService.prototype.getCoreTranslation = function (extension, languageId) {\n        var asset = extension.assets.coreTranslations[languageId.toUpperCase()];\n        if (asset) {\n            return this.getAsset(asset)\n                .then(request_2.asText)\n                .then(JSON.parse);\n        }\n        return Promise.resolve(null);\n    };\n    ExtensionGalleryService.prototype.getChangelog = function (extension, token) {\n        if (extension.assets.changelog) {\n            return this.getAsset(extension.assets.changelog, {}, token)\n                .then(function (context) { return request_2.asText(context); })\n                .then(function (content) { return content || ''; });\n        }\n        return Promise.resolve('');\n    };\n    ExtensionGalleryService.prototype.loadAllDependencies = function (extensions, token) {\n        return this.getDependenciesReccursively(extensions.map(function (e) { return e.id; }), [], token);\n    };\n    ExtensionGalleryService.prototype.getAllVersions = function (extension, compatible) {\n        var _this = this;\n        var query = new Query()\n            .withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n            .withPage(1, 1)\n            .withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n            .withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n        if (extension.identifier.uuid) {\n            query = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n        }\n        else {\n            query = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n        }\n        return this.queryGallery(query, cancellation_1.CancellationToken.None).then(function (_a) {\n            var galleryExtensions = _a.galleryExtensions;\n            if (galleryExtensions.length) {\n                if (compatible) {\n                    return Promise.all(galleryExtensions[0].versions.map(function (v) { return _this.getEngine(v).then(function (engine) { return extensionValidator_1.isEngineValid(engine) ? v : null; }); }))\n                        .then(function (versions) { return versions\n                        .filter(function (v) { return !!v; })\n                        .map(function (v) { return ({ version: v.version, date: v.lastUpdated }); }); });\n                }\n                else {\n                    return galleryExtensions[0].versions.map(function (v) { return ({ version: v.version, date: v.lastUpdated }); });\n                }\n            }\n            return [];\n        });\n    };\n    ExtensionGalleryService.prototype.loadDependencies = function (extensionNames, token) {\n        var _a;\n        if (!extensionNames || extensionNames.length === 0) {\n            return Promise.resolve([]);\n        }\n        var query = (_a = new Query()\n            .withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n            .withPage(1, extensionNames.length)\n            .withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n            .withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished))\n            .withAssetTypes(AssetType.Icon, AssetType.License, AssetType.Details, AssetType.Manifest, AssetType.VSIX)).withFilter.apply(_a, [FilterType.ExtensionName].concat(extensionNames));\n        return this.queryGallery(query, token).then(function (result) {\n            var dependencies = [];\n            var ids = [];\n            for (var index = 0; index < result.galleryExtensions.length; index++) {\n                var rawExtension = result.galleryExtensions[index];\n                if (ids.indexOf(rawExtension.extensionId) === -1) {\n                    dependencies.push(toExtension(rawExtension, rawExtension.versions[0], index, query, 'dependencies'));\n                    ids.push(rawExtension.extensionId);\n                }\n            }\n            return dependencies;\n        });\n    };\n    ExtensionGalleryService.prototype.getDependenciesReccursively = function (toGet, result, token) {\n        var _this = this;\n        if (!toGet || !toGet.length) {\n            return Promise.resolve(result);\n        }\n        toGet = result.length ? toGet.filter(function (e) { return !ExtensionGalleryService.hasExtensionByName(result, e); }) : toGet;\n        if (!toGet.length) {\n            return Promise.resolve(result);\n        }\n        return this.loadDependencies(toGet, token)\n            .then(function (loadedDependencies) {\n            var dependenciesSet = new Set();\n            for (var _i = 0, loadedDependencies_1 = loadedDependencies; _i < loadedDependencies_1.length; _i++) {\n                var dep = loadedDependencies_1[_i];\n                if (dep.properties.dependencies) {\n                    dep.properties.dependencies.forEach(function (d) { return dependenciesSet.add(d); });\n                }\n            }\n            result = arrays_1.distinct(result.concat(loadedDependencies), function (d) { return d.identifier.uuid; });\n            var dependencies = [];\n            dependenciesSet.forEach(function (d) { return !ExtensionGalleryService.hasExtensionByName(result, d) && dependencies.push(d); });\n            return _this.getDependenciesReccursively(dependencies, result, token);\n        });\n    };\n    ExtensionGalleryService.prototype.getAsset = function (asset, options, token) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (token === void 0) { token = cancellation_1.CancellationToken.None; }\n        return this.commonHeadersPromise.then(function (commonHeaders) {\n            var baseOptions = { type: 'GET' };\n            var headers = objects_1.assign({}, commonHeaders, options.headers || {});\n            options = objects_1.assign({}, options, baseOptions, { headers: headers });\n            var url = asset.uri;\n            var fallbackUrl = asset.fallbackUri;\n            var firstOptions = objects_1.assign({}, options, { url: url });\n            return _this.requestService.request(firstOptions, token)\n                .then(function (context) {\n                if (context.res.statusCode === 200) {\n                    return Promise.resolve(context);\n                }\n                return request_2.asText(context)\n                    .then(function (message) { return Promise.reject(new Error(\"Expected 200, got back \" + context.res.statusCode + \" instead.\\n\\n\" + message)); });\n            })\n                .then(undefined, function (err) {\n                if (errors_1.isPromiseCanceledError(err)) {\n                    return Promise.reject(err);\n                }\n                var message = errors_1.getErrorMessage(err);\n                /* __GDPR__\n                    \"galleryService:requestError\" : {\n                        \"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                        \"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n                        \"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('galleryService:requestError', { url: url, cdn: true, message: message });\n                /* __GDPR__\n                    \"galleryService:cdnFallback\" : {\n                        \"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                        \"message\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                    }\n                */\n                _this.telemetryService.publicLog('galleryService:cdnFallback', { url: url, message: message });\n                var fallbackOptions = objects_1.assign({}, options, { url: fallbackUrl });\n                return _this.requestService.request(fallbackOptions, token).then(undefined, function (err) {\n                    if (errors_1.isPromiseCanceledError(err)) {\n                        return Promise.reject(err);\n                    }\n                    var message = errors_1.getErrorMessage(err);\n                    /* __GDPR__\n                        \"galleryService:requestError\" : {\n                            \"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                            \"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n                            \"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n                        }\n                    */\n                    _this.telemetryService.publicLog('galleryService:requestError', { url: fallbackUrl, cdn: false, message: message });\n                    return Promise.reject(err);\n                });\n            });\n        });\n    };\n    ExtensionGalleryService.prototype.getLastValidExtensionVersion = function (extension, versions) {\n        var version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n        if (version) {\n            return version;\n        }\n        return this.getLastValidExtensionVersionReccursively(extension, versions);\n    };\n    ExtensionGalleryService.prototype.getLastValidExtensionVersionFromProperties = function (extension, versions) {\n        for (var _i = 0, versions_1 = versions; _i < versions_1.length; _i++) {\n            var version = versions_1[_i];\n            var engine = getEngine(version);\n            if (!engine) {\n                return null;\n            }\n            if (extensionValidator_1.isEngineValid(engine)) {\n                return Promise.resolve(version);\n            }\n        }\n        return null;\n    };\n    ExtensionGalleryService.prototype.getEngine = function (version) {\n        var engine = getEngine(version);\n        if (engine) {\n            return Promise.resolve(engine);\n        }\n        var manifest = getVersionAsset(version, AssetType.Manifest);\n        if (!manifest) {\n            return Promise.reject('Manifest was not found');\n        }\n        var headers = { 'Accept-Encoding': 'gzip' };\n        return this.getAsset(manifest, { headers: headers })\n            .then(function (context) { return request_2.asJson(context); })\n            .then(function (manifest) { return manifest ? manifest.engines.vscode : Promise.reject('Error while reading manifest'); });\n    };\n    ExtensionGalleryService.prototype.getLastValidExtensionVersionReccursively = function (extension, versions) {\n        var _this = this;\n        if (!versions.length) {\n            return Promise.resolve(null);\n        }\n        var version = versions[0];\n        return this.getEngine(version)\n            .then(function (engine) {\n            if (!extensionValidator_1.isEngineValid(engine)) {\n                return _this.getLastValidExtensionVersionReccursively(extension, versions.slice(1));\n            }\n            version.properties = version.properties || [];\n            version.properties.push({ key: PropertyType.Engine, value: engine });\n            return version;\n        });\n    };\n    ExtensionGalleryService.hasExtensionByName = function (extensions, name) {\n        for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n            var extension = extensions_1[_i];\n            if (extension.publisher + \".\" + extension.name === name) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ExtensionGalleryService.prototype.getExtensionsReport = function () {\n        if (!this.isEnabled()) {\n            return Promise.reject(new Error('No extension gallery service configured.'));\n        }\n        if (!this.extensionsControlUrl) {\n            return Promise.resolve([]);\n        }\n        return this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, cancellation_1.CancellationToken.None).then(function (context) {\n            if (context.res.statusCode !== 200) {\n                return Promise.reject(new Error('Could not get extensions report.'));\n            }\n            return request_2.asJson(context).then(function (result) {\n                var map = new Map();\n                if (result) {\n                    for (var _i = 0, _a = result.malicious; _i < _a.length; _i++) {\n                        var id = _a[_i];\n                        var ext = map.get(id) || { id: { id: id }, malicious: true, slow: false };\n                        ext.malicious = true;\n                        map.set(id, ext);\n                    }\n                }\n                return Promise.resolve(map_1.values(map));\n            });\n        });\n    };\n    ExtensionGalleryService = tslib_1.__decorate([\n        tslib_1.__param(0, request_1.IRequestService),\n        tslib_1.__param(1, log_1.ILogService),\n        tslib_1.__param(2, environment_1.IEnvironmentService),\n        tslib_1.__param(3, telemetry_1.ITelemetryService)\n    ], ExtensionGalleryService);\n    return ExtensionGalleryService;\n}());\nexports.ExtensionGalleryService = ExtensionGalleryService;\nfunction resolveMarketplaceHeaders(environmentService) {\n    var marketplaceMachineIdFile = path.join(environmentService.userDataPath, 'machineid');\n    return pfs_1.readFile(marketplaceMachineIdFile, 'utf8')\n        .then(function (contents) { return uuid_1.isUUID(contents) ? contents : null; }, function () { return null; } /* error reading ID file */)\n        .then(function (uuid) {\n        if (!uuid) {\n            uuid = uuid_1.generateUuid();\n            try {\n                extfs_1.writeFileAndFlushSync(marketplaceMachineIdFile, uuid);\n            }\n            catch (error) {\n                //noop\n            }\n        }\n        return {\n            'X-Market-Client-Id': \"VSCode \" + package_1.default.version,\n            'User-Agent': \"VSCode \" + package_1.default.version,\n            'X-Market-User-Id': uuid\n        };\n    });\n}\nexports.resolveMarketplaceHeaders = resolveMarketplaceHeaders;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionGalleryService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionGalleryService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,yBAA4B;AAC5B,0CAA4C;AAC5C,gDAAiD;AACjD,gDAA0F;AAC1F,kGAAuV;AACvV,0GAAoK;AACpK,kDAA8D;AAC9D,4DAAmE;AACnE,oEAA2E;AAE3E,gDAAkG;AAClG,4DAAmD;AACnD,4DAAuD;AACvD,qFAA+E;AAC/E,0EAAiF;AACjF,wCAA4C;AAC5C,4CAA2D;AAC3D,4CAA2D;AAC3D,0CAA4C;AAC5C,4DAAgE;AAChE,kDAAyD;AAmDzD,IAAK,KAaJ;AAbD,WAAK,KAAK;IACT,iCAAU,CAAA;IACV,uDAAqB,CAAA;IACrB,iDAAkB,CAAA;IAClB,qEAA4B,CAAA;IAC5B,mEAA2B,CAAA;IAC3B,0EAA+B,CAAA;IAC/B,gEAA0B,CAAA;IAC1B,8EAAiC,CAAA;IACjC,yDAAsB,CAAA;IACtB,6DAAyB,CAAA;IACzB,2EAAgC,CAAA;IAChC,kDAAoB,CAAA;AACrB,CAAC,EAbI,KAAK,KAAL,KAAK,QAaT;AAED,SAAS,aAAa;IAAC,eAAiB;SAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;QAAjB,0BAAiB;;IACvC,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,EAAL,CAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,IAAK,UASJ;AATD,WAAK,UAAU;IACd,yCAAO,CAAA;IACP,yDAAe,CAAA;IACf,mDAAY,CAAA;IACZ,6DAAiB,CAAA;IACjB,+CAAU,CAAA;IACV,mDAAY,CAAA;IACZ,wDAAe,CAAA;IACf,oEAAqB,CAAA;AACtB,CAAC,EATI,UAAU,KAAV,UAAU,QASd;AAED,IAAM,SAAS,GAAG;IACjB,IAAI,EAAE,+CAA+C;IACrD,OAAO,EAAE,iDAAiD;IAC1D,SAAS,EAAE,mDAAmD;IAC9D,QAAQ,EAAE,sCAAsC;IAChD,IAAI,EAAE,6CAA6C;IACnD,OAAO,EAAE,iDAAiD;IAC1D,UAAU,EAAE,8CAA8C;CAC1D,CAAC;AAEF,IAAM,YAAY,GAAG;IACpB,UAAU,EAAE,mDAAmD;IAC/D,aAAa,EAAE,2CAA2C;IAC1D,MAAM,EAAE,oCAAoC;IAC5C,kBAAkB,EAAE,gDAAgD;CACpE,CAAC;AAOF,IAAM,eAAe,GAAG,EAAE,CAAC;AAY3B,IAAM,iBAAiB,GAAgB;IACtC,UAAU,EAAE,CAAC;IACb,QAAQ,EAAE,eAAe;IACzB,MAAM,EAAE,4BAAM,CAAC,eAAe;IAC9B,SAAS,EAAE,+BAAS,CAAC,OAAO;IAC5B,KAAK,EAAE,KAAK,CAAC,IAAI;IACjB,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE,EAAE;CACd,CAAC;AAEF;IAEC,eAAoB,KAAyB;QAAzB,sBAAA,EAAA,yBAAyB;QAAzB,UAAK,GAAL,KAAK,CAAoB;IAAI,CAAC;IAElD,sBAAI,6BAAU;aAAd,cAA2B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAI,2BAAQ;aAAZ,cAAyB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACtD,sBAAI,yBAAM;aAAV,cAAuB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAClD,sBAAI,4BAAS;aAAb,cAA0B,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAI,wBAAK;aAAT,cAAsB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAEhD,wBAAQ,GAAR,UAAS,UAAkB,EAAE,QAAsC;QAAtC,yBAAA,EAAA,WAAmB,IAAI,CAAC,KAAK,CAAC,QAAQ;QAClE,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,YAAA,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,0BAAU,GAAV,UAAW,UAAsB;QAAE,gBAAmB;aAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;YAAnB,+BAAmB;;QACrD,IAAM,QAAQ,GACV,IAAI,CAAC,KAAK,CAAC,QAAQ,QACnB,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,CAAC,EAAE,UAAU,YAAA,EAAE,KAAK,OAAA,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAC/C,CAAC;QAEF,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,0BAAU,GAAV,UAAW,MAAc;QACxB,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,6BAAa,GAAb,UAAc,SAAoB;QACjC,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,yBAAS,GAAT;QAAU,eAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,0BAAiB;;QAC1B,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,EAAL,CAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,8BAAc,GAAd;QAAe,oBAAuB;aAAvB,UAAuB,EAAvB,qBAAuB,EAAvB,IAAuB;YAAvB,+BAAuB;;QACrC,OAAO,IAAI,KAAK,CAAC,gBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,YAAA,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,sBAAI,sBAAG;aAAP;YACO,IAAA,eAAqF,EAAnF,sBAAQ,EAAE,0BAAU,EAAE,sBAAQ,EAAE,kBAAM,EAAE,wBAAS,EAAE,gBAAK,EAAE,0BAAyB,CAAC;YAC5F,IAAM,OAAO,GAAG,CAAC,EAAE,QAAQ,UAAA,EAAE,UAAU,YAAA,EAAE,QAAQ,UAAA,EAAE,MAAM,QAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;YACxE,OAAO,EAAE,OAAO,SAAA,EAAE,UAAU,YAAA,EAAE,KAAK,OAAA,EAAE,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,6BAAU;aAAd;YACC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,UAAU,KAAK,UAAU,CAAC,UAAU,EAA9C,CAA8C,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7G,OAAO,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,CAAC;;;OAAA;IACF,YAAC;AAAD,CAAC,AAjDD,IAiDC;AAED,SAAS,YAAY,CAAC,UAA4C,EAAE,IAAY;IAC/E,IAAM,MAAM,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,aAAa,KAAK,IAAI,EAAxB,CAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,wBAAwB,CAAC,OAAoC;IACrE,IAAM,0BAA0B,GAAG,0CAA0C,CAAC;IAC9E,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAArD,CAAqD,CAAC,CAAC;IAChG,OAAO,MAAM,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,IAAI;QACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/G,OAAO,MAAM,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,CAAC;AACR,CAAC;AAED,SAAS,kBAAkB,CAAC,OAAoC;IAC/D,IAAI,OAAO,CAAC,UAAU,EAAE;QACvB,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,UAAU,EAA9B,CAA8B,CAAC,CAAC;QAC/E,IAAM,WAAS,GAAG,IAAI,MAAM,CAAC,uEAAuE,CAAC,CAAC;QAEtG,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,WAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;KAC/D;IACD,OAAO,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;AACvD,CAAC;AAED,SAAS,gBAAgB,CAAC,OAAoC;IAC7D,OAAO;QACN,GAAG,EAAK,OAAO,CAAC,gBAAgB,SAAI,SAAS,CAAC,IAAI,mBAAgB;QAClE,WAAW,EAAK,OAAO,CAAC,gBAAgB,SAAI,SAAS,CAAC,IAAM;KAC5D,CAAC;AACH,CAAC;AAED,SAAS,YAAY,CAAC,OAAoC;IACzD,IAAM,KAAK,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IACvD,IAAI,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACb;IACD,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACrD,OAAO,EAAE,GAAG,KAAA,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC;AAClC,CAAC;AAED,SAAS,eAAe,CAAC,OAAoC,EAAE,IAAY;IAC1E,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,KAAK,IAAI,EAApB,CAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAK,OAAO,CAAC,QAAQ,SAAI,IAAM,EAAE,WAAW,EAAK,OAAO,CAAC,gBAAgB,SAAI,IAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACnH,CAAC;AAED,SAAS,aAAa,CAAC,OAAoC,EAAE,QAAgB;IAC5E,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAlB,CAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5F,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACnD,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,mDAAyB,CAAC,CAAC,CAAC,EAA5B,CAA4B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC7E,CAAC;AAED,SAAS,SAAS,CAAC,OAAoC;IACtD,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,MAAM,EAA7B,CAA6B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACvG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACrD,CAAC;AAED,SAAS,qBAAqB,CAAC,OAAoC;IAClE,IAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,kBAAkB,EAAzC,CAAyC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnH,IAAM,KAAK,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC3D,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACtC,CAAC;AAED,SAAS,YAAY,CAAC,KAAa;IAClC,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,WAAW,CAAC,gBAAsC,EAAE,OAAoC,EAAE,KAAa,EAAE,KAAY,EAAE,WAAoB;IACnJ,IAAM,MAAM,GAA4B;QACvC,QAAQ,EAAE,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC;QACtD,MAAM,EAAE,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;QACnD,SAAS,EAAE,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC;QACxD,OAAO,EAAE,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;QACpD,UAAU,EAAE,kBAAkB,CAAC,OAAO,CAAC;QACvC,QAAQ,EAAE,gBAAgB,CAAC,OAAO,CAAC;QACnC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC;QAC3B,gBAAgB,EAAE,wBAAwB,CAAC,OAAO,CAAC;KACnD,CAAC;IAEF,OAAO;QACN,UAAU,EAAE;YACX,EAAE,EAAE,+CAAqB,CAAC,gBAAgB,CAAC,SAAS,CAAC,aAAa,EAAE,gBAAgB,CAAC,aAAa,CAAC;YACnG,IAAI,EAAE,gBAAgB,CAAC,WAAW;SAClC;QACD,IAAI,EAAE,gBAAgB,CAAC,aAAa;QACpC,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,IAAI,EAAE,OAAO,CAAC,WAAW;QACzB,WAAW,EAAE,gBAAgB,CAAC,WAAW;QACzC,WAAW,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW;QACnD,SAAS,EAAE,gBAAgB,CAAC,SAAS,CAAC,aAAa;QACnD,oBAAoB,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW;QAC5D,WAAW,EAAE,gBAAgB,CAAC,gBAAgB,IAAI,EAAE;QACpD,YAAY,EAAE,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,aAAa,CAAC;QAC7H,MAAM,EAAE,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,CAAC;QAClE,WAAW,EAAE,YAAY,CAAC,gBAAgB,CAAC,UAAU,EAAE,aAAa,CAAC;QACrE,MAAM,QAAA;QACN,UAAU,EAAE;YACX,YAAY,EAAE,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,UAAU,CAAC;YAC7D,aAAa,EAAE,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,aAAa,CAAC;YACjE,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC;YAC1B,kBAAkB,EAAE,qBAAqB,CAAC,OAAO,CAAC;SAClD;QACD;;;;;;UAME;QACF,aAAa,EAAE;YACd,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK;YACxD,UAAU,EAAE,KAAK,CAAC,UAAU;YAC5B,WAAW,aAAA;SACX;QACD,OAAO,EAAE,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC;KAC7C,CAAC;AACH,CAAC;AAOD;IASC,iCACmC,cAA+B,EACnC,UAAuB,EACf,kBAAuC,EACzC,gBAAmC;QAHrC,mBAAc,GAAd,cAAc,CAAiB;QACnC,eAAU,GAAV,UAAU,CAAa;QACf,uBAAkB,GAAlB,kBAAkB,CAAqB;QACzC,qBAAgB,GAAhB,gBAAgB,CAAmB;QAEvE,IAAM,MAAM,GAAG,iBAAO,CAAC,iBAAiB,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,oBAAoB,GAAG,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,oBAAoB,GAAG,yBAAyB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAChF,CAAC;IAEO,qCAAG,GAAX,UAAY,IAAS;QAAT,qBAAA,EAAA,SAAS;QACpB,OAAO,KAAG,IAAI,CAAC,oBAAoB,GAAG,IAAM,CAAC;IAC9C,CAAC;IAED,2CAAS,GAAT;QACC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;IACpC,CAAC;IAED,wDAAsB,GAAtB,UAAuB,IAA8C,EAAE,OAAgB;QAAvF,iBA0CC;QAzCA,IAAM,SAAS,GAA6B,4CAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QACvF,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,IAAI,kCAAa,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YAC3F,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAClC;QACK,IAAA,4CAA4E,EAA1E,UAAE,EAAE,cAAsE,CAAC;QACnF,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE;aACrB,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,iBAAiB,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,mBAAmB,CAAC;aACxI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;aACd,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC;aAC5D,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAE5E,IAAI,IAAI,EAAE;YACT,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACvD;aAAM;YACN,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;SACvD;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,gCAAiB,CAAC,IAAI,CAAC;aACrD,IAAI,CAAC,UAAC,EAAqB;gBAAnB,wCAAiB;YAClB,IAAA,mCAAY,CAAsB;YACzC,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACnD,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,OAAO,EAAE;gBACZ,IAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,KAAK,OAAO,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,YAAY,EAAE;oBACjB,IAAM,WAAS,GAAG,WAAW,CAAC,YAAY,EAAE,YAAY,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;oBACpE,IAAI,WAAS,CAAC,UAAU,CAAC,MAAM,IAAI,kCAAa,CAAC,WAAS,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;wBAC9E,OAAO,WAAS,CAAC;qBACjB;iBACD;gBACD,OAAO,IAAI,CAAC;aACZ;YACD,OAAO,KAAI,CAAC,4BAA4B,CAAC,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC;iBAC3E,IAAI,CAAC,UAAA,UAAU;gBACf,IAAI,UAAU,EAAE;oBACf,OAAO,WAAW,CAAC,YAAY,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;iBACvD;gBACD,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAID,uCAAK,GAAL,UAAM,IAAS,EAAE,IAAU;QAA3B,iBA8EC;QA7EA,IAAM,OAAO,GAAkB,gCAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACvF,IAAM,KAAK,GAAsB,gCAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAE3F,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACtB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;SAC7E;QAED,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAM,QAAQ,GAAG,sBAAY,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,EAAE,EAAE,CAAC,CAAC;QAE5D;;;;;UAKE;QACF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,sBAAsB,EAAE,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;QAExE,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE;aACrB,SAAS,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,iBAAiB,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,wBAAwB,CAAC;aAC7I,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC;aACrB,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC;aAC5D,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAE5E,IAAI,IAAI,EAAE;YACT,mDAAmD;YACnD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,6CAA6C,EAAE,UAAC,CAAC,EAAE,cAAc,EAAE,QAAQ;gBAC9F,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,IAAI,cAAc,CAAC,CAAC;gBAC1E,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YAEH,4CAA4C;YAC5C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,wCAAwC,EAAE,UAAC,CAAC,EAAE,SAAS,EAAE,GAAG;gBAC/E,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC;gBAC3D,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YAEH,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAEnB,IAAI,IAAI,EAAE;gBACT,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gBACzD,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACtD;YAED,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,4BAAM,CAAC,eAAe,CAAC,CAAC;SACjD;aAAM,IAAI,OAAO,CAAC,GAAG,EAAE;YACvB,KAAK,GAAG,KAAK,CAAC,UAAU,OAAhB,KAAK,GAAY,UAAU,CAAC,WAAW,SAAK,OAAO,CAAC,GAAG,EAAC,CAAC;SACjE;aAAM,IAAI,OAAO,CAAC,KAAK,EAAE;YACzB,KAAK,GAAG,KAAK,CAAC,UAAU,OAAhB,KAAK,GAAY,UAAU,CAAC,aAAa,SAAK,OAAO,CAAC,KAAK,EAAC,CAAC;SACrE;aAAM;YACN,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,4BAAM,CAAC,YAAY,CAAC,CAAC;SAC9C;QAED,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;YACvC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACzC;QAED,IAAI,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC1C,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC/C;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,EAA4B;gBAA1B,wCAAiB,EAAE,gBAAK;YACtE,IAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,KAAK,IAAK,OAAA,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,EAA3D,CAA2D,CAAC,CAAC;YACpH,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAChC,IAAM,OAAO,GAAG,UAAC,SAAiB,EAAE,EAAqB;gBACxD,IAAI,EAAE,CAAC,uBAAuB,EAAE;oBAC/B,OAAO,OAAO,CAAC,MAAM,CAAC,iBAAQ,EAAE,CAAC,CAAC;iBAClC;gBAED,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBACpD,OAAO,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,CAAC;qBACzC,IAAI,CAAC,UAAC,EAAqB;wBAAnB,wCAAiB;oBAAO,OAAA,iBAAiB,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,KAAK,IAAK,OAAA,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,EAAnE,CAAmE,CAAC;gBAAxG,CAAwG,CAAC,CAAC;YAC7I,CAAC,CAAC;YAEF,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,OAAA,EAAE,QAAQ,UAAA,EAAE,OAAO,SAAA,EAA+B,CAAC;QACzF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,8CAAY,GAApB,UAAqB,KAAY,EAAE,KAAwB;QAA3D,iBAqCC;QApCA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACtB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;SAC7E;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAA,aAAa;YAClD,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvC,IAAM,OAAO,GAAG,gBAAM,CAAC,EAAE,EAAE,aAAa,EAAE;gBACzC,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,4CAA4C;gBACtD,iBAAiB,EAAE,MAAM;gBACzB,gBAAgB,EAAE,IAAI,CAAC,MAAM;aAC7B,CAAC,CAAC;YAEH,OAAO,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC;gBAClC,IAAI,EAAE,MAAM;gBACZ,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAChC,IAAI,MAAA;gBACJ,OAAO,SAAA;aACP,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;gBAErB,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;oBAC5F,OAAO,EAAE,iBAAiB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;iBAC3C;gBAED,OAAO,gBAAM,CAAyB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;oBACzD,IAAI,MAAM,EAAE;wBACX,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC5B,IAAM,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC;wBACvC,IAAM,WAAW,GAAG,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,YAAY,KAAK,aAAa,EAAhC,CAAgC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1G,IAAM,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,YAAY,EAAvB,CAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;wBAE1G,OAAO,EAAE,iBAAiB,mBAAA,EAAE,KAAK,OAAA,EAAE,CAAC;qBACpC;oBACD,OAAO,EAAE,iBAAiB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,iDAAe,GAAf,UAAgB,SAAiB,EAAE,IAAY,EAAE,OAAe,EAAE,IAAmB;QAArF,iBAcC;QAbA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACtB,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAClC;QAED,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAA,aAAa;YAClD,IAAM,OAAO,wBAAQ,aAAa,IAAE,MAAM,EAAE,+BAA+B,GAAE,CAAC;YAE9E,OAAO,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC;gBAClC,IAAI,EAAE,MAAM;gBACZ,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,iBAAe,SAAS,oBAAe,IAAI,SAAI,OAAO,wBAAmB,IAAM,CAAC;gBAC9F,OAAO,SAAA;aACP,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,0CAAQ,GAAR,UAAS,SAA4B,EAAE,SAA2B;QAAlE,iBAyBC;QAxBA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kCAAkC,EAAE,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACnF,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAM,EAAE,EAAE,mBAAY,EAAE,CAAC,CAAC;QACpD,IAAM,IAAI,GAAG,0DAAgC,CAAC,SAAS,CAAC,CAAC;QACzD,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC;;;;;;;UAOE;QACF,IAAM,GAAG,GAAG,UAAC,QAAgB,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,6BAA6B,EAAE,gBAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC,EAA1F,CAA0F,CAAC;QAE7H,IAAM,cAAc,GAAG,SAAS,KAAK,sCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,KAAK,sCAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAClI,IAAM,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC;YACtC,GAAG,EAAK,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAI,cAAc,UAAO;YAC9D,WAAW,EAAK,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,SAAI,cAAc,UAAO;SAC9E,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC;QAE9B,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;aACjC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,kBAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,EAA1B,CAA0B,CAAC;aAC3C,IAAI,CAAC,cAAM,OAAA,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,EAArC,CAAqC,CAAC;aACjD,IAAI,CAAC,cAAM,OAAA,OAAO,EAAP,CAAO,CAAC,CAAC;IACvB,CAAC;IAED,2CAAS,GAAT,UAAU,SAA4B,EAAE,KAAwB;QAC/D,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC;iBACtD,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,gBAAM,CAAC,OAAO,CAAC,EAAf,CAAe,CAAC;iBAChC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,IAAI,EAAE,EAAb,CAAa,CAAC,CAAC;SACjC;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,6CAAW,GAAX,UAAY,SAA4B,EAAE,KAAwB;QACjE,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC;iBACxD,IAAI,CAAC,gBAAM,CAAC;iBACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,oDAAkB,GAAlB,UAAmB,SAA4B,EAAE,UAAkB;QAClE,IAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,IAAI,KAAK,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACzB,IAAI,CAAC,gBAAM,CAAC;iBACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,8CAAY,GAAZ,UAAa,SAA4B,EAAE,KAAwB;QAClE,IAAI,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;YAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC;iBACzD,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,gBAAM,CAAC,OAAO,CAAC,EAAf,CAAe,CAAC;iBAChC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,IAAI,EAAE,EAAb,CAAa,CAAC,CAAC;SACjC;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,qDAAmB,GAAnB,UAAoB,UAAkC,EAAE,KAAwB;QAC/E,OAAO,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,gDAAc,GAAd,UAAe,SAA4B,EAAE,UAAmB;QAAhE,iBA0BC;QAzBA,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE;aACrB,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,mBAAmB,CAAC;aAC/G,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;aACd,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC;aAC5D,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAE5E,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE;YAC9B,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC5E;aAAM;YACN,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SAC5E;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,EAAqB;gBAAnB,wCAAiB;YAChF,IAAI,iBAAiB,CAAC,MAAM,EAAE;gBAC7B,IAAI,UAAU,EAAE;oBACf,OAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,kCAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAhC,CAAgC,CAAC,EAAlE,CAAkE,CAAC,CAAC;yBAC5H,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ;yBACxB,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC;yBAChB,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,EAAE,OAAO,EAAE,CAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAE,CAAC,WAAW,EAAE,CAAC,EAA/C,CAA+C,CAAC,EAFzC,CAEyC,CAAC,CAAC;iBAC9D;qBAAM;oBACN,OAAO,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,EAA7C,CAA6C,CAAC,CAAC;iBAC7F;aACD;YACD,OAAO,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACJ,CAAC;IAGO,kDAAgB,GAAxB,UAAyB,cAAwB,EAAE,KAAwB;;QAC1E,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACnD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,IAAI,KAAK,GAAG,CAAA,KAAA,IAAI,KAAK,EAAE;aACrB,SAAS,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,iBAAiB,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,wBAAwB,CAAC;aAC7I,QAAQ,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC;aAClC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,6BAA6B,CAAC;aAC5D,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aACzE,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,CAAA,CACxG,UAAU,YAAC,UAAU,CAAC,aAAa,SAAK,cAAc,EAAC,CAAC;QAE1D,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;YACjD,IAAM,YAAY,GAAwB,EAAE,CAAC;YAC7C,IAAM,GAAG,GAAa,EAAE,CAAC;YAEzB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACrE,IAAM,YAAY,GAAG,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACrD,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;oBACjD,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;oBACrG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;iBACnC;aACD;YACD,OAAO,YAAY,CAAC;QACrB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,6DAA2B,GAAnC,UAAoC,KAAe,EAAE,MAA2B,EAAE,KAAwB;QAA1G,iBAsBC;QArBA,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC5B,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC/B;QACD,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAtD,CAAsD,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC1G,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAClB,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC/B;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC;aACxC,IAAI,CAAC,UAAA,kBAAkB;YACvB,IAAM,eAAe,GAAG,IAAI,GAAG,EAAU,CAAC;YAC1C,KAAkB,UAAkB,EAAlB,yCAAkB,EAAlB,gCAAkB,EAAlB,IAAkB,EAAE;gBAAjC,IAAM,GAAG,2BAAA;gBACb,IAAI,GAAG,CAAC,UAAU,CAAC,YAAY,EAAE;oBAChC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC;iBACjE;aACD;YACD,MAAM,GAAG,iBAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,UAAU,CAAC,IAAI,EAAjB,CAAiB,CAAC,CAAC;YAC7E,IAAM,YAAY,GAAa,EAAE,CAAC;YAClC,eAAe,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAA9E,CAA8E,CAAC,CAAC;YAC7G,OAAO,KAAI,CAAC,2BAA2B,CAAC,YAAY,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0CAAQ,GAAhB,UAAiB,KAA6B,EAAE,OAA6B,EAAE,KAAiD;QAAhI,iBA4DC;QA5D+C,wBAAA,EAAA,YAA6B;QAAE,sBAAA,EAAA,QAA2B,gCAAiB,CAAC,IAAI;QAC/H,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAA,aAAa;YAClD,IAAM,WAAW,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;YACpC,IAAM,OAAO,GAAG,gBAAM,CAAC,EAAE,EAAE,aAAa,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;YACjE,OAAO,GAAG,gBAAM,CAAC,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;YAExD,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YACtB,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;YACtC,IAAM,YAAY,GAAG,gBAAM,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;YAElD,OAAO,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC;iBACrD,IAAI,CAAC,UAAA,OAAO;gBACZ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBACnC,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBAChC;gBAED,OAAO,gBAAM,CAAC,OAAO,CAAC;qBACpB,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA0B,OAAO,CAAC,GAAG,CAAC,UAAU,qBAAgB,OAAS,CAAC,CAAC,EAApG,CAAoG,CAAC,CAAC;YACzH,CAAC,CAAC;iBACD,IAAI,CAAC,SAAS,EAAE,UAAA,GAAG;gBACnB,IAAI,+BAAsB,CAAC,GAAG,CAAC,EAAE;oBAChC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBAED,IAAM,OAAO,GAAG,wBAAe,CAAC,GAAG,CAAC,CAAC;gBACrC;;;;;;kBAME;gBACF,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,6BAA6B,EAAE,EAAE,GAAG,KAAA,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;gBAC5F;;;;;kBAKE;gBACF,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,4BAA4B,EAAE,EAAE,GAAG,KAAA,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;gBAEhF,IAAM,eAAe,GAAG,gBAAM,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;gBAClE,OAAO,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAA,GAAG;oBAC7E,IAAI,+BAAsB,CAAC,GAAG,CAAC,EAAE;wBAChC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;qBAC3B;oBAED,IAAM,OAAO,GAAG,wBAAe,CAAC,GAAG,CAAC,CAAC;oBACrC;;;;;;sBAME;oBACF,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,6BAA6B,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;oBAC1G,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,8DAA4B,GAApC,UAAqC,SAA+B,EAAE,QAAuC;QAC5G,IAAM,OAAO,GAAG,IAAI,CAAC,0CAA0C,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QACrF,IAAI,OAAO,EAAE;YACZ,OAAO,OAAO,CAAC;SACf;QACD,OAAO,IAAI,CAAC,wCAAwC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC3E,CAAC;IAEO,4EAA0C,GAAlD,UAAmD,SAA+B,EAAE,QAAuC;QAC1H,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO,iBAAA;YACjB,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,EAAE;gBACZ,OAAO,IAAI,CAAC;aACZ;YACD,IAAI,kCAAa,CAAC,MAAM,CAAC,EAAE;gBAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aAChC;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,2CAAS,GAAjB,UAAkB,OAAoC;QACrD,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,MAAM,EAAE;YACX,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SAC/B;QAED,IAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,EAAE;YACd,OAAO,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;SAChD;QAED,IAAM,OAAO,GAAG,EAAE,iBAAiB,EAAE,MAAM,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC;aACzC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,gBAAM,CAAqB,OAAO,CAAC,EAAnC,CAAmC,CAAC;aACpD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAS,8BAA8B,CAAC,EAA3F,CAA2F,CAAC,CAAC;IACjH,CAAC;IAEO,0EAAwC,GAAhD,UAAiD,SAA+B,EAAE,QAAuC;QAAzH,iBAgBC;QAfA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACrB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC7B;QAED,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;aAC5B,IAAI,CAAC,UAAA,MAAM;YACX,IAAI,CAAC,kCAAa,CAAC,MAAM,CAAC,EAAE;gBAC3B,OAAO,KAAI,CAAC,wCAAwC,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACnF;YAED,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;YAC9C,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;YACrE,OAAO,OAAO,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEc,0CAAkB,GAAjC,UAAkC,UAA+B,EAAE,IAAY;QAC9E,KAAwB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;YAA/B,IAAM,SAAS,mBAAA;YACnB,IAAO,SAAS,CAAC,SAAS,SAAI,SAAS,CAAC,IAAM,KAAK,IAAI,EAAE;gBACxD,OAAO,IAAI,CAAC;aACZ;SACD;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,qDAAmB,GAAnB;QACC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACtB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;SAC7E;QAED,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC/B,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;YACvH,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;gBACnC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;aACrE;YAED,OAAO,gBAAM,CAAuB,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;gBACvD,IAAM,GAAG,GAAG,IAAI,GAAG,EAA8B,CAAC;gBAElD,IAAI,MAAM,EAAE;oBACX,KAAiB,UAAgB,EAAhB,KAAA,MAAM,CAAC,SAAS,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;wBAA9B,IAAM,EAAE,SAAA;wBACZ,IAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAA,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxE,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;wBACrB,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;qBACjB;iBACD;gBAED,OAAO,OAAO,CAAC,OAAO,CAAC,YAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAlgBW,uBAAuB;QAUjC,mBAAA,yBAAe,CAAA;QACf,mBAAA,iBAAW,CAAA;QACX,mBAAA,iCAAmB,CAAA;QACnB,mBAAA,6BAAiB,CAAA;OAbP,uBAAuB,CAmgBnC;IAAD,8BAAC;CAAA,AAngBD,IAmgBC;AAngBY,0DAAuB;AAqgBpC,SAAgB,yBAAyB,CAAC,kBAAuC;IAChF,IAAM,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IAEzF,OAAO,cAAQ,CAAC,wBAAwB,EAAE,MAAM,CAAC;SAC/C,IAAI,CAAgB,UAAA,QAAQ,IAAI,OAAA,aAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAlC,CAAkC,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,2BAA2B,CAAC;SAC3G,IAAI,CAAC,UAAA,IAAI;QACT,IAAI,CAAC,IAAI,EAAE;YACV,IAAI,GAAG,mBAAY,EAAE,CAAC;YACtB,IAAI;gBACH,6BAAqB,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;aACtD;YAAC,OAAO,KAAK,EAAE;gBACf,MAAM;aACN;SACD;QACD,OAAO;YACN,oBAAoB,EAAE,YAAU,iBAAG,CAAC,OAAS;YAC7C,YAAY,EAAE,YAAU,iBAAG,CAAC,OAAS;YACrC,kBAAkB,EAAE,IAAI;SACxB,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AApBD,8DAoBC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { tmpdir } from 'os';\nimport * as path from 'vs/base/common/path';\nimport { distinct } from 'vs/base/common/arrays';\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { IRequestService } from 'vs/platform/request/node/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestOptions, IRequestContext, download, asJson, asText } from 'vs/base/node/request';\nimport pkg from 'vs/platform/product/node/package';\nimport product from 'vs/platform/product/node/product';\nimport { isEngineValid } from 'vs/platform/extensions/node/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { readFile } from 'vs/base/node/pfs';\nimport { writeFileAndFlushSync } from 'vs/base/node/extfs';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): { [languageId: string]: IGalleryExtensionAsset } {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce((result, file) => {\n\t\tresult[file.assetType.substring(coreTranslationAssetPrefix.length)] = getVersionAsset(version, file.assetType);\n\t\treturn result;\n\t}, {});\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install') + getStatistic(galleryExtension.statistics, 'updateCount'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: any;\n\n\tprivate extensionsGalleryUrl: string;\n\tprivate extensionsControlUrl: string;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tconst config = product.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(this.environmentService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\t/* __GDPR__\n\t\t\t\"galleryService:query\" : {\n\t\t\t\t\"type\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"text\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, operation: InstallOperation): Promise<string> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zipPath = path.join(tmpdir(), generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => download(zipPath, context))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zipPath);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations[languageId.toUpperCase()];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(JSON.parse);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tloadAllDependencies(extensions: IExtensionIdentifier[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\treturn this.getDependenciesReccursively(extensions.map(e => e.id), [], token);\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\n\tprivate loadDependencies(extensionNames: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!extensionNames || extensionNames.length === 0) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, extensionNames.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished))\n\t\t\t.withAssetTypes(AssetType.Icon, AssetType.License, AssetType.Details, AssetType.Manifest, AssetType.VSIX)\n\t\t\t.withFilter(FilterType.ExtensionName, ...extensionNames);\n\n\t\treturn this.queryGallery(query, token).then(result => {\n\t\t\tconst dependencies: IGalleryExtension[] = [];\n\t\t\tconst ids: string[] = [];\n\n\t\t\tfor (let index = 0; index < result.galleryExtensions.length; index++) {\n\t\t\t\tconst rawExtension = result.galleryExtensions[index];\n\t\t\t\tif (ids.indexOf(rawExtension.extensionId) === -1) {\n\t\t\t\t\tdependencies.push(toExtension(rawExtension, rawExtension.versions[0], index, query, 'dependencies'));\n\t\t\t\t\tids.push(rawExtension.extensionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dependencies;\n\t\t});\n\t}\n\n\tprivate getDependenciesReccursively(toGet: string[], result: IGalleryExtension[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tif (!toGet || !toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t\ttoGet = result.length ? toGet.filter(e => !ExtensionGalleryService.hasExtensionByName(result, e)) : toGet;\n\t\tif (!toGet.length) {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\n\t\treturn this.loadDependencies(toGet, token)\n\t\t\t.then(loadedDependencies => {\n\t\t\t\tconst dependenciesSet = new Set<string>();\n\t\t\t\tfor (const dep of loadedDependencies) {\n\t\t\t\t\tif (dep.properties.dependencies) {\n\t\t\t\t\t\tdep.properties.dependencies.forEach(d => dependenciesSet.add(d));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult = distinct(result.concat(loadedDependencies), d => d.identifier.uuid);\n\t\t\t\tconst dependencies: string[] = [];\n\t\t\t\tdependenciesSet.forEach(d => !ExtensionGalleryService.hasExtensionByName(result, d) && dependencies.push(d));\n\t\t\t\treturn this.getDependenciesReccursively(dependencies, result, token);\n\t\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url, cdn: true, message });\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\"galleryService:cdnFallback\" : {\n\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\"message\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tthis.telemetryService.publicLog('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token).then(undefined, err => {\n\t\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\t\t\"galleryService:requestError\" : {\n\t\t\t\t\t\t\t\t\"url\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"cdn\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\t\t\t\"message\": { \"classification\": \"CallstackOrException\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tthis.telemetryService.publicLog('galleryService:requestError', { url: fallbackUrl, cdn: false, message });\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionReccursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionReccursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tprivate static hasExtensionByName(extensions: IGalleryExtension[], name: string): boolean {\n\t\tfor (const extension of extensions) {\n\t\t\tif (`${extension.publisher}.${extension.name}` === name) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport function resolveMarketplaceHeaders(environmentService: IEnvironmentService): Promise<{ [key: string]: string; }> {\n\tconst marketplaceMachineIdFile = path.join(environmentService.userDataPath, 'machineid');\n\n\treturn readFile(marketplaceMachineIdFile, 'utf8')\n\t\t.then<string | null>(contents => isUUID(contents) ? contents : null, () => null /* error reading ID file */)\n\t\t.then(uuid => {\n\t\t\tif (!uuid) {\n\t\t\t\tuuid = generateUuid();\n\t\t\t\ttry {\n\t\t\t\t\twriteFileAndFlushSync(marketplaceMachineIdFile, uuid);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t//noop\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t'X-Market-Client-Id': `VSCode ${pkg.version}`,\n\t\t\t\t'User-Agent': `VSCode ${pkg.version}`,\n\t\t\t\t'X-Market-User-Id': uuid\n\t\t\t};\n\t\t});\n}"]}]}