{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/contextmenu.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/contextmenu.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar menu_1 = require(\"vs/base/browser/ui/menu/menu\");\nvar ContextSubMenu = /** @class */ (function (_super) {\n    tslib_1.__extends(ContextSubMenu, _super);\n    function ContextSubMenu(label, entries) {\n        var _this = _super.call(this, label, entries, 'contextsubmenu') || this;\n        _this.entries = entries;\n        return _this;\n    }\n    return ContextSubMenu;\n}(menu_1.SubmenuAction));\nexports.ContextSubMenu = ContextSubMenu;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/contextmenu.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/contextmenu.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAKhG,qDAA6D;AAU7D;IAAoC,0CAAa;IAChD,wBAAY,KAAa,EAAS,OAAwC;QAA1E,YACC,kBAAM,KAAK,EAAE,OAAO,EAAE,gBAAgB,CAAC,SACvC;QAFiC,aAAO,GAAP,OAAO,CAAiC;;IAE1E,CAAC;IACF,qBAAC;AAAD,CAAC,AAJD,CAAoC,oBAAa,GAIhD;AAJY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, IActionRunner } from 'vs/base/common/actions';\nimport { IActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { SubmenuAction } from 'vs/base/browser/ui/menu/menu';\nimport { AnchorAlignment } from 'vs/base/browser/ui/contextview/contextview';\n\nexport interface IContextMenuEvent {\n\tshiftKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n}\n\nexport class ContextSubMenu extends SubmenuAction {\n\tconstructor(label: string, public entries: Array<ContextSubMenu | IAction>) {\n\t\tsuper(label, entries, 'contextsubmenu');\n\t}\n}\n\nexport interface IContextMenuDelegate {\n\tgetAnchor(): HTMLElement | { x: number; y: number; width?: number; height?: number; };\n\tgetActions(): Array<IAction | ContextSubMenu>;\n\tgetActionItem?(action: IAction): IActionItem | undefined;\n\tgetActionsContext?(event?: IContextMenuEvent): any;\n\tgetKeyBinding?(action: IAction): ResolvedKeybinding | undefined;\n\tgetMenuClassName?(): string;\n\tonHide?(didCancel: boolean): void;\n\tactionRunner?: IActionRunner;\n\tautoSelectFirstItem?: boolean;\n\tanchorAlignment?: AnchorAlignment;\n}\n"]}]}