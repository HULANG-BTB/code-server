{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/common/activity.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/activity.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/registry/common/platform\"], function (require, exports, platform_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.GlobalActivityExtensions = 'workbench.contributions.globalActivities';\n    class GlobalActivityRegistry {\n        constructor() {\n            this.activityDescriptors = new Set();\n        }\n        registerActivity(descriptor) {\n            this.activityDescriptors.add(descriptor);\n        }\n        getActivities() {\n            const result = [];\n            this.activityDescriptors.forEach(d => result.push(d));\n            return result;\n        }\n    }\n    exports.GlobalActivityRegistry = GlobalActivityRegistry;\n    platform_1.Registry.add(exports.GlobalActivityExtensions, new GlobalActivityRegistry());\n});\n",null]}