{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"vs/base/common/types\");\nvar collections_1 = require(\"vs/base/common/collections\");\nfunction newNode(data) {\n    return {\n        data: data,\n        incoming: Object.create(null),\n        outgoing: Object.create(null)\n    };\n}\nvar Graph = /** @class */ (function () {\n    function Graph(_hashFn) {\n        this._hashFn = _hashFn;\n        this._nodes = Object.create(null);\n        // empty\n    }\n    Graph.prototype.roots = function () {\n        var ret = [];\n        collections_1.forEach(this._nodes, function (entry) {\n            if (types_1.isEmptyObject(entry.value.outgoing)) {\n                ret.push(entry.value);\n            }\n        });\n        return ret;\n    };\n    Graph.prototype.insertEdge = function (from, to) {\n        var fromNode = this.lookupOrInsertNode(from), toNode = this.lookupOrInsertNode(to);\n        fromNode.outgoing[this._hashFn(to)] = toNode;\n        toNode.incoming[this._hashFn(from)] = fromNode;\n    };\n    Graph.prototype.removeNode = function (data) {\n        var key = this._hashFn(data);\n        delete this._nodes[key];\n        collections_1.forEach(this._nodes, function (entry) {\n            delete entry.value.outgoing[key];\n            delete entry.value.incoming[key];\n        });\n    };\n    Graph.prototype.lookupOrInsertNode = function (data) {\n        var key = this._hashFn(data);\n        var node = this._nodes[key];\n        if (!node) {\n            node = newNode(data);\n            this._nodes[key] = node;\n        }\n        return node;\n    };\n    Graph.prototype.lookup = function (data) {\n        return this._nodes[this._hashFn(data)];\n    };\n    Graph.prototype.isEmpty = function () {\n        for (var _key in this._nodes) {\n            return false;\n        }\n        return true;\n    };\n    Graph.prototype.toString = function () {\n        var data = [];\n        collections_1.forEach(this._nodes, function (entry) {\n            data.push(entry.key + \", (incoming)[\" + Object.keys(entry.value.incoming).join(', ') + \"], (outgoing)[\" + Object.keys(entry.value.outgoing).join(',') + \"]\");\n        });\n        return data.join('\\n');\n    };\n    return Graph;\n}());\nexports.Graph = Graph;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,8CAAqD;AACrD,0DAAqD;AAQrD,SAAS,OAAO,CAAI,IAAO;IAC1B,OAAO;QACN,IAAI,EAAE,IAAI;QACV,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAC7B,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;KAC7B,CAAC;AACH,CAAC;AAED;IAIC,eAAoB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QAF3C,WAAM,GAA+B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAGhE,QAAQ;IACT,CAAC;IAED,qBAAK,GAAL;QACC,IAAM,GAAG,GAAc,EAAE,CAAC;QAC1B,qBAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK;YACzB,IAAI,qBAAa,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACxC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;QACF,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,0BAAU,GAAV,UAAW,IAAO,EAAE,EAAK;QACxB,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAC7C,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAEtC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC;QAC7C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC;IAChD,CAAC;IAED,0BAAU,GAAV,UAAW,IAAO;QACjB,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,qBAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;YAC1B,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,kCAAkB,GAAlB,UAAmB,IAAO;QACzB,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,IAAI,EAAE;YACV,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACxB;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAED,sBAAM,GAAN,UAAO,IAAO;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,uBAAO,GAAP;QACC,KAAK,IAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;YAC/B,OAAO,KAAK,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,wBAAQ,GAAR;QACC,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,qBAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK;YACzB,IAAI,CAAC,IAAI,CAAI,KAAK,CAAC,GAAG,qBAAgB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAiB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC,CAAC;QACpJ,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IACF,YAAC;AAAD,CAAC,AAjED,IAiEC;AAjEY,sBAAK","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n"]}]}