{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/noTabsTitleControl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/noTabsTitleControl.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/notabstitlecontrol\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar titleControl_1 = require(\"vs/workbench/browser/parts/editor/titleControl\");\nvar labels_1 = require(\"vs/workbench/browser/labels\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar touch_1 = require(\"vs/base/browser/touch\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar editor_2 = require(\"vs/workbench/browser/parts/editor/editor\");\nvar editorCommands_1 = require(\"vs/workbench/browser/parts/editor/editorCommands\");\nvar color_1 = require(\"vs/base/common/color\");\nvar types_1 = require(\"vs/base/common/types\");\nvar NoTabsTitleControl = /** @class */ (function (_super) {\n    tslib_1.__extends(NoTabsTitleControl, _super);\n    function NoTabsTitleControl() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.activeLabel = Object.create(null);\n        return _this;\n    }\n    NoTabsTitleControl.prototype.create = function (parent) {\n        var _this = this;\n        this.titleContainer = parent;\n        this.titleContainer.draggable = true;\n        //Container listeners\n        this.registerContainerListeners();\n        // Gesture Support\n        touch_1.Gesture.addTarget(this.titleContainer);\n        var labelContainer = document.createElement('div');\n        dom_1.addClass(labelContainer, 'label-container');\n        this.titleContainer.appendChild(labelContainer);\n        // Editor Label\n        this.editorLabel = this._register(this.instantiationService.createInstance(labels_1.ResourceLabel, labelContainer, undefined)).element;\n        this._register(dom_1.addDisposableListener(this.editorLabel.element, dom_1.EventType.CLICK, function (e) { return _this.onTitleLabelClick(e); }));\n        // Breadcrumbs\n        this.createBreadcrumbsControl(labelContainer, { showFileIcons: false, showSymbolIcons: true, showDecorationColors: false, breadcrumbsBackground: function () { return color_1.Color.transparent; } });\n        dom_1.toggleClass(this.titleContainer, 'breadcrumbs', Boolean(this.breadcrumbsControl));\n        this.toDispose.push({ dispose: function () { return dom_1.removeClass(_this.titleContainer, 'breadcrumbs'); } }); // import to remove because the container is a shared dom node\n        // Right Actions Container\n        var actionsContainer = document.createElement('div');\n        dom_1.addClass(actionsContainer, 'title-actions');\n        this.titleContainer.appendChild(actionsContainer);\n        // Editor actions toolbar\n        this.createEditorActionsToolBar(actionsContainer);\n    };\n    NoTabsTitleControl.prototype.registerContainerListeners = function () {\n        var _this = this;\n        // Group dragging\n        this.enableGroupDragging(this.titleContainer);\n        // Pin on double click\n        this._register(dom_1.addDisposableListener(this.titleContainer, dom_1.EventType.DBLCLICK, function (e) { return _this.onTitleDoubleClick(e); }));\n        // Detect mouse click\n        this._register(dom_1.addDisposableListener(this.titleContainer, dom_1.EventType.MOUSE_UP, function (e) { return _this.onTitleClick(e); }));\n        // Detect touch\n        this._register(dom_1.addDisposableListener(this.titleContainer, touch_1.EventType.Tap, function (e) { return _this.onTitleClick(e); }));\n        // Context Menu\n        this._register(dom_1.addDisposableListener(this.titleContainer, dom_1.EventType.CONTEXT_MENU, function (e) {\n            if (_this.group.activeEditor) {\n                _this.onContextMenu(_this.group.activeEditor, e, _this.titleContainer);\n            }\n        }));\n        this._register(dom_1.addDisposableListener(this.titleContainer, touch_1.EventType.Contextmenu, function (e) {\n            if (_this.group.activeEditor) {\n                _this.onContextMenu(_this.group.activeEditor, e, _this.titleContainer);\n            }\n        }));\n    };\n    NoTabsTitleControl.prototype.onTitleLabelClick = function (e) {\n        var _this = this;\n        dom_1.EventHelper.stop(e, false);\n        // delayed to let the onTitleClick() come first which can cause a focus change which can close quick open\n        setTimeout(function () { return _this.quickOpenService.show(); });\n    };\n    NoTabsTitleControl.prototype.onTitleDoubleClick = function (e) {\n        dom_1.EventHelper.stop(e);\n        this.group.pinEditor();\n    };\n    NoTabsTitleControl.prototype.onTitleClick = function (e) {\n        // Close editor on middle mouse click\n        if (e instanceof MouseEvent && e.button === 1 /* Middle Button */) {\n            dom_1.EventHelper.stop(e, true /* for https://github.com/Microsoft/vscode/issues/56715 */);\n            if (this.group.activeEditor) {\n                this.group.closeEditor(this.group.activeEditor);\n            }\n        }\n    };\n    NoTabsTitleControl.prototype.getPreferredHeight = function () {\n        return editor_2.EDITOR_TITLE_HEIGHT;\n    };\n    NoTabsTitleControl.prototype.openEditor = function (editor) {\n        var _this = this;\n        var activeEditorChanged = this.ifActiveEditorChanged(function () { return _this.redraw(); });\n        if (!activeEditorChanged) {\n            this.ifActiveEditorPropertiesChanged(function () { return _this.redraw(); });\n        }\n    };\n    NoTabsTitleControl.prototype.closeEditor = function (editor) {\n        var _this = this;\n        this.ifActiveEditorChanged(function () { return _this.redraw(); });\n    };\n    NoTabsTitleControl.prototype.closeEditors = function (editors) {\n        var _this = this;\n        this.ifActiveEditorChanged(function () { return _this.redraw(); });\n    };\n    NoTabsTitleControl.prototype.closeAllEditors = function () {\n        this.redraw();\n    };\n    NoTabsTitleControl.prototype.moveEditor = function (editor, fromIndex, targetIndex) {\n        var _this = this;\n        this.ifActiveEditorChanged(function () { return _this.redraw(); });\n    };\n    NoTabsTitleControl.prototype.pinEditor = function (editor) {\n        var _this = this;\n        this.ifEditorIsActive(editor, function () { return _this.redraw(); });\n    };\n    NoTabsTitleControl.prototype.setActive = function (isActive) {\n        this.redraw();\n    };\n    NoTabsTitleControl.prototype.updateEditorLabel = function (editor) {\n        var _this = this;\n        this.ifEditorIsActive(editor, function () { return _this.redraw(); });\n    };\n    NoTabsTitleControl.prototype.updateEditorDirty = function (editor) {\n        var _this = this;\n        this.ifEditorIsActive(editor, function () {\n            if (editor.isDirty()) {\n                dom_1.addClass(_this.titleContainer, 'dirty');\n            }\n            else {\n                dom_1.removeClass(_this.titleContainer, 'dirty');\n            }\n        });\n    };\n    NoTabsTitleControl.prototype.updateOptions = function (oldOptions, newOptions) {\n        if (oldOptions.labelFormat !== newOptions.labelFormat) {\n            this.redraw();\n        }\n    };\n    NoTabsTitleControl.prototype.updateStyles = function () {\n        this.redraw();\n    };\n    NoTabsTitleControl.prototype.handleBreadcrumbsEnablementChange = function () {\n        dom_1.toggleClass(this.titleContainer, 'breadcrumbs', Boolean(this.breadcrumbsControl));\n        this.redraw();\n    };\n    NoTabsTitleControl.prototype.ifActiveEditorChanged = function (fn) {\n        if (!this.activeLabel.editor && this.group.activeEditor || // active editor changed from null => editor\n            this.activeLabel.editor && !this.group.activeEditor || // active editor changed from editor => null\n            (!this.activeLabel.editor || !this.group.isActive(this.activeLabel.editor)) // active editor changed from editorA => editorB\n        ) {\n            fn();\n            return true;\n        }\n        return false;\n    };\n    NoTabsTitleControl.prototype.ifActiveEditorPropertiesChanged = function (fn) {\n        if (!this.activeLabel.editor || !this.group.activeEditor) {\n            return; // need an active editor to check for properties changed\n        }\n        if (this.activeLabel.pinned !== this.group.isPinned(this.group.activeEditor)) {\n            fn(); // only run if pinned state has changed\n        }\n    };\n    NoTabsTitleControl.prototype.ifEditorIsActive = function (editor, fn) {\n        if (this.group.isActive(editor)) {\n            fn(); // only run if editor is current active\n        }\n    };\n    NoTabsTitleControl.prototype.redraw = function () {\n        var editor = types_1.withNullAsUndefined(this.group.activeEditor);\n        var isEditorPinned = this.group.activeEditor ? this.group.isPinned(this.group.activeEditor) : false;\n        var isGroupActive = this.accessor.activeGroup === this.group;\n        this.activeLabel = { editor: editor, pinned: isEditorPinned };\n        // Update Breadcrumbs\n        if (this.breadcrumbsControl) {\n            if (isGroupActive) {\n                this.breadcrumbsControl.update();\n                dom_1.toggleClass(this.breadcrumbsControl.domNode, 'preview', !isEditorPinned);\n            }\n            else {\n                this.breadcrumbsControl.hide();\n            }\n        }\n        // Clear if there is no editor\n        if (!editor) {\n            dom_1.removeClass(this.titleContainer, 'dirty');\n            this.editorLabel.clear();\n            this.clearEditorActionsToolbar();\n        }\n        // Otherwise render it\n        else {\n            // Dirty state\n            this.updateEditorDirty(editor);\n            // Editor Label\n            var resource = editor_1.toResource(editor, { supportSideBySide: true });\n            var name = editor.getName() || '';\n            var labelFormat = this.accessor.partOptions.labelFormat;\n            var description = void 0;\n            if (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden()) {\n                description = ''; // hide description when showing breadcrumbs\n            }\n            else if (labelFormat === 'default' && !isGroupActive) {\n                description = ''; // hide description when group is not active and style is 'default'\n            }\n            else {\n                description = editor.getDescription(this.getVerbosity(labelFormat)) || '';\n            }\n            var title = editor.getTitle(editor_1.Verbosity.LONG);\n            if (description === title) {\n                title = ''; // dont repeat what is already shown\n            }\n            this.editorLabel.setResource({ name: name, description: description, resource: resource || undefined }, { title: typeof title === 'string' ? title : undefined, italic: !isEditorPinned, extraClasses: ['no-tabs', 'title-label'] });\n            if (isGroupActive) {\n                this.editorLabel.element.style.color = this.getColor(theme_1.TAB_ACTIVE_FOREGROUND);\n            }\n            else {\n                this.editorLabel.element.style.color = this.getColor(theme_1.TAB_UNFOCUSED_ACTIVE_FOREGROUND);\n            }\n            // Update Editor Actions Toolbar\n            this.updateEditorActionsToolbar();\n        }\n    };\n    NoTabsTitleControl.prototype.getVerbosity = function (style) {\n        switch (style) {\n            case 'short': return editor_1.Verbosity.SHORT;\n            case 'long': return editor_1.Verbosity.LONG;\n            default: return editor_1.Verbosity.MEDIUM;\n        }\n    };\n    NoTabsTitleControl.prototype.prepareEditorActions = function (editorActions) {\n        var isGroupActive = this.accessor.activeGroup === this.group;\n        // Group active: show all actions\n        if (isGroupActive) {\n            return _super.prototype.prepareEditorActions.call(this, editorActions);\n        }\n        // Group inactive: only show close action\n        return { primaryEditorActions: editorActions.primary.filter(function (action) { return action.id === editorCommands_1.CLOSE_EDITOR_COMMAND_ID; }), secondaryEditorActions: [] };\n    };\n    return NoTabsTitleControl;\n}(titleControl_1.TitleControl));\nexports.NoTabsTitleControl = NoTabsTitleControl;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/noTabsTitleControl.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/noTabsTitleControl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/notabstitlecontrol';\nimport { toResource, Verbosity, IEditorInput, IEditorPartOptions } from 'vs/workbench/common/editor';\nimport { TitleControl, IToolbarActions } from 'vs/workbench/browser/parts/editor/titleControl';\nimport { ResourceLabel, IResourceLabel } from 'vs/workbench/browser/labels';\nimport { TAB_ACTIVE_FOREGROUND, TAB_UNFOCUSED_ACTIVE_FOREGROUND } from 'vs/workbench/common/theme';\nimport { EventType as TouchEventType, GestureEvent, Gesture } from 'vs/base/browser/touch';\nimport { addDisposableListener, EventType, addClass, EventHelper, removeClass, toggleClass } from 'vs/base/browser/dom';\nimport { EDITOR_TITLE_HEIGHT } from 'vs/workbench/browser/parts/editor/editor';\nimport { IAction } from 'vs/base/common/actions';\nimport { CLOSE_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { Color } from 'vs/base/common/color';\nimport { withNullAsUndefined } from 'vs/base/common/types';\n\ninterface IRenderedEditorLabel {\n\teditor?: IEditorInput;\n\tpinned: boolean;\n}\n\nexport class NoTabsTitleControl extends TitleControl {\n\tprivate titleContainer: HTMLElement;\n\tprivate editorLabel: IResourceLabel;\n\tprivate activeLabel: IRenderedEditorLabel = Object.create(null);\n\n\tprotected create(parent: HTMLElement): void {\n\t\tthis.titleContainer = parent;\n\t\tthis.titleContainer.draggable = true;\n\n\t\t//Container listeners\n\t\tthis.registerContainerListeners();\n\n\t\t// Gesture Support\n\t\tGesture.addTarget(this.titleContainer);\n\n\t\tconst labelContainer = document.createElement('div');\n\t\taddClass(labelContainer, 'label-container');\n\t\tthis.titleContainer.appendChild(labelContainer);\n\n\t\t// Editor Label\n\t\tthis.editorLabel = this._register(this.instantiationService.createInstance(ResourceLabel, labelContainer, undefined)).element;\n\t\tthis._register(addDisposableListener(this.editorLabel.element, EventType.CLICK, e => this.onTitleLabelClick(e)));\n\n\t\t// Breadcrumbs\n\t\tthis.createBreadcrumbsControl(labelContainer, { showFileIcons: false, showSymbolIcons: true, showDecorationColors: false, breadcrumbsBackground: () => Color.transparent });\n\t\ttoggleClass(this.titleContainer, 'breadcrumbs', Boolean(this.breadcrumbsControl));\n\t\tthis.toDispose.push({ dispose: () => removeClass(this.titleContainer, 'breadcrumbs') }); // import to remove because the container is a shared dom node\n\n\t\t// Right Actions Container\n\t\tconst actionsContainer = document.createElement('div');\n\t\taddClass(actionsContainer, 'title-actions');\n\t\tthis.titleContainer.appendChild(actionsContainer);\n\n\t\t// Editor actions toolbar\n\t\tthis.createEditorActionsToolBar(actionsContainer);\n\t}\n\n\tprivate registerContainerListeners(): void {\n\n\t\t// Group dragging\n\t\tthis.enableGroupDragging(this.titleContainer);\n\n\t\t// Pin on double click\n\t\tthis._register(addDisposableListener(this.titleContainer, EventType.DBLCLICK, (e: MouseEvent) => this.onTitleDoubleClick(e)));\n\n\t\t// Detect mouse click\n\t\tthis._register(addDisposableListener(this.titleContainer, EventType.MOUSE_UP, (e: MouseEvent) => this.onTitleClick(e)));\n\n\t\t// Detect touch\n\t\tthis._register(addDisposableListener(this.titleContainer, TouchEventType.Tap, (e: GestureEvent) => this.onTitleClick(e)));\n\n\t\t// Context Menu\n\t\tthis._register(addDisposableListener(this.titleContainer, EventType.CONTEXT_MENU, (e: Event) => {\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tthis.onContextMenu(this.group.activeEditor, e, this.titleContainer);\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(this.titleContainer, TouchEventType.Contextmenu, (e: Event) => {\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tthis.onContextMenu(this.group.activeEditor, e, this.titleContainer);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onTitleLabelClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e, false);\n\n\t\t// delayed to let the onTitleClick() come first which can cause a focus change which can close quick open\n\t\tsetTimeout(() => this.quickOpenService.show());\n\t}\n\n\tprivate onTitleDoubleClick(e: MouseEvent): void {\n\t\tEventHelper.stop(e);\n\n\t\tthis.group.pinEditor();\n\t}\n\n\tprivate onTitleClick(e: MouseEvent | GestureEvent): void {\n\n\t\t// Close editor on middle mouse click\n\t\tif (e instanceof MouseEvent && e.button === 1 /* Middle Button */) {\n\t\t\tEventHelper.stop(e, true /* for https://github.com/Microsoft/vscode/issues/56715 */);\n\n\t\t\tif (this.group.activeEditor) {\n\t\t\t\tthis.group.closeEditor(this.group.activeEditor);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetPreferredHeight(): number {\n\t\treturn EDITOR_TITLE_HEIGHT;\n\t}\n\n\topenEditor(editor: IEditorInput): void {\n\t\tconst activeEditorChanged = this.ifActiveEditorChanged(() => this.redraw());\n\t\tif (!activeEditorChanged) {\n\t\t\tthis.ifActiveEditorPropertiesChanged(() => this.redraw());\n\t\t}\n\t}\n\n\tcloseEditor(editor: IEditorInput): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseEditors(editors: IEditorInput[]): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tcloseAllEditors(): void {\n\t\tthis.redraw();\n\t}\n\n\tmoveEditor(editor: IEditorInput, fromIndex: number, targetIndex: number): void {\n\t\tthis.ifActiveEditorChanged(() => this.redraw());\n\t}\n\n\tpinEditor(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tsetActive(isActive: boolean): void {\n\t\tthis.redraw();\n\t}\n\n\tupdateEditorLabel(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => this.redraw());\n\t}\n\n\tupdateEditorDirty(editor: IEditorInput): void {\n\t\tthis.ifEditorIsActive(editor, () => {\n\t\t\tif (editor.isDirty()) {\n\t\t\t\taddClass(this.titleContainer, 'dirty');\n\t\t\t} else {\n\t\t\t\tremoveClass(this.titleContainer, 'dirty');\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void {\n\t\tif (oldOptions.labelFormat !== newOptions.labelFormat) {\n\t\t\tthis.redraw();\n\t\t}\n\t}\n\n\tupdateStyles(): void {\n\t\tthis.redraw();\n\t}\n\n\tprotected handleBreadcrumbsEnablementChange(): void {\n\t\ttoggleClass(this.titleContainer, 'breadcrumbs', Boolean(this.breadcrumbsControl));\n\t\tthis.redraw();\n\t}\n\n\tprivate ifActiveEditorChanged(fn: () => void): boolean {\n\t\tif (\n\t\t\t!this.activeLabel.editor && this.group.activeEditor || \t// active editor changed from null => editor\n\t\t\tthis.activeLabel.editor && !this.group.activeEditor || \t// active editor changed from editor => null\n\t\t\t(!this.activeLabel.editor || !this.group.isActive(this.activeLabel.editor))\t\t\t// active editor changed from editorA => editorB\n\t\t) {\n\t\t\tfn();\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate ifActiveEditorPropertiesChanged(fn: () => void): void {\n\t\tif (!this.activeLabel.editor || !this.group.activeEditor) {\n\t\t\treturn; // need an active editor to check for properties changed\n\t\t}\n\n\t\tif (this.activeLabel.pinned !== this.group.isPinned(this.group.activeEditor)) {\n\t\t\tfn(); // only run if pinned state has changed\n\t\t}\n\t}\n\n\n\tprivate ifEditorIsActive(editor: IEditorInput, fn: () => void): void {\n\t\tif (this.group.isActive(editor)) {\n\t\t\tfn();  // only run if editor is current active\n\t\t}\n\t}\n\n\tprivate redraw(): void {\n\t\tconst editor = withNullAsUndefined(this.group.activeEditor);\n\n\t\tconst isEditorPinned = this.group.activeEditor ? this.group.isPinned(this.group.activeEditor) : false;\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\tthis.activeLabel = { editor, pinned: isEditorPinned };\n\n\t\t// Update Breadcrumbs\n\t\tif (this.breadcrumbsControl) {\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.breadcrumbsControl.update();\n\t\t\t\ttoggleClass(this.breadcrumbsControl.domNode, 'preview', !isEditorPinned);\n\t\t\t} else {\n\t\t\t\tthis.breadcrumbsControl.hide();\n\t\t\t}\n\t\t}\n\n\t\t// Clear if there is no editor\n\t\tif (!editor) {\n\t\t\tremoveClass(this.titleContainer, 'dirty');\n\t\t\tthis.editorLabel.clear();\n\t\t\tthis.clearEditorActionsToolbar();\n\t\t}\n\n\t\t// Otherwise render it\n\t\telse {\n\n\t\t\t// Dirty state\n\t\t\tthis.updateEditorDirty(editor);\n\n\t\t\t// Editor Label\n\t\t\tconst resource = toResource(editor, { supportSideBySide: true });\n\t\t\tconst name = editor.getName() || '';\n\n\t\t\tconst { labelFormat } = this.accessor.partOptions;\n\t\t\tlet description: string;\n\t\t\tif (this.breadcrumbsControl && !this.breadcrumbsControl.isHidden()) {\n\t\t\t\tdescription = ''; // hide description when showing breadcrumbs\n\t\t\t} else if (labelFormat === 'default' && !isGroupActive) {\n\t\t\t\tdescription = ''; // hide description when group is not active and style is 'default'\n\t\t\t} else {\n\t\t\t\tdescription = editor.getDescription(this.getVerbosity(labelFormat)) || '';\n\t\t\t}\n\n\t\t\tlet title = editor.getTitle(Verbosity.LONG);\n\t\t\tif (description === title) {\n\t\t\t\ttitle = ''; // dont repeat what is already shown\n\t\t\t}\n\n\t\t\tthis.editorLabel.setResource({ name, description, resource: resource || undefined }, { title: typeof title === 'string' ? title : undefined, italic: !isEditorPinned, extraClasses: ['no-tabs', 'title-label'] });\n\t\t\tif (isGroupActive) {\n\t\t\t\tthis.editorLabel.element.style.color = this.getColor(TAB_ACTIVE_FOREGROUND);\n\t\t\t} else {\n\t\t\t\tthis.editorLabel.element.style.color = this.getColor(TAB_UNFOCUSED_ACTIVE_FOREGROUND);\n\t\t\t}\n\n\t\t\t// Update Editor Actions Toolbar\n\t\t\tthis.updateEditorActionsToolbar();\n\t\t}\n\t}\n\n\tprivate getVerbosity(style: string | undefined): Verbosity {\n\t\tswitch (style) {\n\t\t\tcase 'short': return Verbosity.SHORT;\n\t\t\tcase 'long': return Verbosity.LONG;\n\t\t\tdefault: return Verbosity.MEDIUM;\n\t\t}\n\t}\n\n\tprotected prepareEditorActions(editorActions: IToolbarActions): { primaryEditorActions: IAction[], secondaryEditorActions: IAction[] } {\n\t\tconst isGroupActive = this.accessor.activeGroup === this.group;\n\n\t\t// Group active: show all actions\n\t\tif (isGroupActive) {\n\t\t\treturn super.prepareEditorActions(editorActions);\n\t\t}\n\n\t\t// Group inactive: only show close action\n\t\treturn { primaryEditorActions: editorActions.primary.filter(action => action.id === CLOSE_EDITOR_COMMAND_ID), secondaryEditorActions: [] };\n\t}\n}\n"]}]}