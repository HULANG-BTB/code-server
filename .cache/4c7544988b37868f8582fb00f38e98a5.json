{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickinput/quickInputActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickinput/quickInputActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar quickInput_1 = require(\"vs/workbench/browser/parts/quickinput/quickInput\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar actions_1 = require(\"vs/workbench/common/actions\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar quickopen_1 = require(\"vs/workbench/browser/parts/quickopen/quickopen\");\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule(quickInput_1.QuickPickManyToggle);\nvar registry = platform_1.Registry.as(actions_1.Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(quickInput_1.BackAction, quickInput_1.BackAction.ID, quickInput_1.BackAction.LABEL, { primary: 0, win: { primary: keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.LeftArrow }, mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.US_MINUS }, linux: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.US_MINUS } }, quickopen_1.inQuickOpenContext, keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib + 50), 'Back');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickinput/quickInputActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/quickinput/quickInputActions.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,+EAAmG;AACnG,yFAA0G;AAC1G,iEAAgE;AAChE,uDAAuG;AACvG,8DAA0E;AAC1E,oDAA0D;AAC1D,4EAAoF;AAEpF,yCAAmB,CAAC,gCAAgC,CAAC,gCAAmB,CAAC,CAAC;AAE1E,IAAM,QAAQ,GAAG,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC,CAAC;AAC1F,QAAQ,CAAC,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,uBAAU,EAAE,uBAAU,CAAC,EAAE,EAAE,uBAAU,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,GAAG,GAAG,kBAAO,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,kBAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,GAAG,GAAG,kBAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,8BAAkB,EAAE,sCAAgB,CAAC,gBAAgB,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { QuickPickManyToggle, BackAction } from 'vs/workbench/browser/parts/quickinput/quickInput';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { inQuickOpenContext } from 'vs/workbench/browser/parts/quickopen/quickopen';\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(QuickPickManyToggle);\n\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(BackAction, BackAction.ID, BackAction.LABEL, { primary: 0, win: { primary: KeyMod.Alt | KeyCode.LeftArrow }, mac: { primary: KeyMod.WinCtrl | KeyCode.US_MINUS }, linux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.US_MINUS } }, inQuickOpenContext, KeybindingWeight.WorkbenchContrib + 50), 'Back');\n"]}]}