{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./scrollDecoration\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar viewPart_1 = require(\"vs/editor/browser/view/viewPart\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar ScrollDecorationViewPart = /** @class */ (function (_super) {\n    tslib_1.__extends(ScrollDecorationViewPart, _super);\n    function ScrollDecorationViewPart(context) {\n        var _this = _super.call(this, context) || this;\n        _this._scrollTop = 0;\n        _this._width = 0;\n        _this._updateWidth();\n        _this._shouldShow = false;\n        _this._useShadows = _this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n        _this._domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this._domNode.setAttribute('role', 'presentation');\n        _this._domNode.setAttribute('aria-hidden', 'true');\n        return _this;\n    }\n    ScrollDecorationViewPart.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    ScrollDecorationViewPart.prototype._updateShouldShow = function () {\n        var newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    };\n    ScrollDecorationViewPart.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    ScrollDecorationViewPart.prototype._updateWidth = function () {\n        var layoutInfo = this._context.configuration.editor.layoutInfo;\n        var newWidth = 0;\n        if (layoutInfo.renderMinimap === 0 || (layoutInfo.minimapWidth > 0 && layoutInfo.minimapLeft === 0)) {\n            newWidth = layoutInfo.width;\n        }\n        else {\n            newWidth = layoutInfo.width - layoutInfo.minimapWidth - layoutInfo.verticalScrollbarWidth;\n        }\n        if (this._width !== newWidth) {\n            this._width = newWidth;\n            return true;\n        }\n        return false;\n    };\n    // --- begin event handlers\n    ScrollDecorationViewPart.prototype.onConfigurationChanged = function (e) {\n        var shouldRender = false;\n        if (e.viewInfo) {\n            this._useShadows = this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n        }\n        if (e.layoutInfo) {\n            shouldRender = this._updateWidth();\n        }\n        return this._updateShouldShow() || shouldRender;\n    };\n    ScrollDecorationViewPart.prototype.onScrollChanged = function (e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    };\n    // --- end event handlers\n    ScrollDecorationViewPart.prototype.prepareRender = function (ctx) {\n        // Nothing to read\n    };\n    ScrollDecorationViewPart.prototype.render = function (ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    };\n    return ScrollDecorationViewPart;\n}(viewPart_1.ViewPart));\nexports.ScrollDecorationViewPart = ScrollDecorationViewPart;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var shadow = theme.getColor(colorRegistry_1.scrollbarShadow);\n    if (shadow) {\n        collector.addRule(\".monaco-editor .scroll-decoration { box-shadow: \" + shadow + \" 0 6px 6px -6px inset; }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./scrollDecoration';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { scrollbarShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\nexport class ScrollDecorationViewPart extends ViewPart {\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _scrollTop: number;\n\tprivate _width: number;\n\tprivate _shouldShow: boolean;\n\tprivate _useShadows: boolean;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._scrollTop = 0;\n\t\tthis._width = 0;\n\t\tthis._updateWidth();\n\t\tthis._shouldShow = false;\n\t\tthis._useShadows = this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _updateShouldShow(): boolean {\n\t\tconst newShouldShow = (this._useShadows && this._scrollTop > 0);\n\t\tif (this._shouldShow !== newShouldShow) {\n\t\t\tthis._shouldShow = newShouldShow;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _updateWidth(): boolean {\n\t\tconst layoutInfo = this._context.configuration.editor.layoutInfo;\n\t\tlet newWidth = 0;\n\t\tif (layoutInfo.renderMinimap === 0 || (layoutInfo.minimapWidth > 0 && layoutInfo.minimapLeft === 0)) {\n\t\t\tnewWidth = layoutInfo.width;\n\t\t} else {\n\t\t\tnewWidth = layoutInfo.width - layoutInfo.minimapWidth - layoutInfo.verticalScrollbarWidth;\n\t\t}\n\t\tif (this._width !== newWidth) {\n\t\t\tthis._width = newWidth;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tlet shouldRender = false;\n\t\tif (e.viewInfo) {\n\t\t\tthis._useShadows = this._context.configuration.editor.viewInfo.scrollbar.useShadows;\n\t\t}\n\t\tif (e.layoutInfo) {\n\t\t\tshouldRender = this._updateWidth();\n\t\t}\n\t\treturn this._updateShouldShow() || shouldRender;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn this._updateShouldShow();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._width);\n\t\tthis._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst shadow = theme.getColor(scrollbarShadow);\n\tif (shadow) {\n\t\tcollector.addRule(`.monaco-editor .scroll-decoration { box-shadow: ${shadow} 0 6px 6px -6px inset; }`);\n\t}\n});"]}]}