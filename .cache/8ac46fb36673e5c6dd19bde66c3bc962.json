{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/style.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/style.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./media/style\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    // Foreground\n    var windowForeground = theme.getColor(colorRegistry_1.foreground);\n    if (windowForeground) {\n        collector.addRule(\".monaco-workbench { color: \" + windowForeground + \"; }\");\n    }\n    // Selection\n    var windowSelectionBackground = theme.getColor(colorRegistry_1.selectionBackground);\n    if (windowSelectionBackground) {\n        collector.addRule(\".monaco-workbench ::selection { background-color: \" + windowSelectionBackground + \"; }\");\n    }\n    // Input placeholder\n    var placeholderForeground = theme.getColor(colorRegistry_1.inputPlaceholderForeground);\n    if (placeholderForeground) {\n        collector.addRule(\".monaco-workbench input::-webkit-input-placeholder { color: \" + placeholderForeground + \"; }\");\n        collector.addRule(\".monaco-workbench textarea::-webkit-input-placeholder { color: \" + placeholderForeground + \"; }\");\n    }\n    // List highlight\n    var listHighlightForegroundColor = theme.getColor(colorRegistry_1.listHighlightForeground);\n    if (listHighlightForegroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-workbench .monaco-tree .monaco-tree-row .monaco-highlighted-label .highlight,\\n\\t\\t\\t.monaco-workbench .monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\\n\\t\\t\\t\\tcolor: \" + listHighlightForegroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    // We need to set the workbench background color so that on Windows we get subpixel-antialiasing.\n    var workbenchBackground = theme_1.WORKBENCH_BACKGROUND(theme);\n    collector.addRule(\".monaco-workbench { background-color: \" + workbenchBackground + \"; }\");\n    // Scrollbars\n    var scrollbarShadowColor = theme.getColor(colorRegistry_1.scrollbarShadow);\n    if (scrollbarShadowColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .shadow.top {\\n\\t\\t\\t\\tbox-shadow: \" + scrollbarShadowColor + \" 0 6px 6px -6px inset;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .shadow.left {\\n\\t\\t\\t\\tbox-shadow: \" + scrollbarShadowColor + \" 6px 0 6px -6px inset;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .shadow.top.left {\\n\\t\\t\\t\\tbox-shadow: \" + scrollbarShadowColor + \" 6px 6px 6px -6px inset;\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var scrollbarSliderBackgroundColor = theme.getColor(colorRegistry_1.scrollbarSliderBackground);\n    if (scrollbarSliderBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider {\\n\\t\\t\\t\\tbackground: \" + scrollbarSliderBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var scrollbarSliderHoverBackgroundColor = theme.getColor(colorRegistry_1.scrollbarSliderHoverBackground);\n    if (scrollbarSliderHoverBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider:hover {\\n\\t\\t\\t\\tbackground: \" + scrollbarSliderHoverBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var scrollbarSliderActiveBackgroundColor = theme.getColor(colorRegistry_1.scrollbarSliderActiveBackground);\n    if (scrollbarSliderActiveBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider.active {\\n\\t\\t\\t\\tbackground: \" + scrollbarSliderActiveBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    // Focus outline\n    var focusOutline = theme.getColor(colorRegistry_1.focusBorder);\n    if (focusOutline) {\n        collector.addRule(\"\\n\\t\\t.monaco-workbench [tabindex=\\\"0\\\"]:focus,\\n\\t\\t.monaco-workbench .synthetic-focus,\\n\\t\\t.monaco-workbench select:focus,\\n\\t\\t.monaco-workbench .monaco-tree.focused.no-focused-item:focus:before,\\n\\t\\t.monaco-workbench .monaco-list:not(.element-focused):focus:before,\\n\\t\\t.monaco-workbench input[type=\\\"button\\\"]:focus,\\n\\t\\t.monaco-workbench input[type=\\\"text\\\"]:focus,\\n\\t\\t.monaco-workbench button:focus,\\n\\t\\t.monaco-workbench textarea:focus,\\n\\t\\t.monaco-workbench input[type=\\\"search\\\"]:focus,\\n\\t\\t.monaco-workbench input[type=\\\"checkbox\\\"]:focus {\\n\\t\\t\\toutline-color: \" + focusOutline + \";\\n\\t\\t}\\n\\t\\t\");\n    }\n    // High Contrast theme overwrites for outline\n    if (theme.type === themeService_1.HIGH_CONTRAST) {\n        collector.addRule(\"\\n\\t\\t.hc-black [tabindex=\\\"0\\\"]:focus,\\n\\t\\t.hc-black .synthetic-focus,\\n\\t\\t.hc-black select:focus,\\n\\t\\t.hc-black input[type=\\\"button\\\"]:focus,\\n\\t\\t.hc-black input[type=\\\"text\\\"]:focus,\\n\\t\\t.hc-black textarea:focus,\\n\\t\\t.hc-black input[type=\\\"checkbox\\\"]:focus {\\n\\t\\t\\toutline-style: solid;\\n\\t\\t\\toutline-width: 1px;\\n\\t\\t}\\n\\n\\t\\t.hc-black .monaco-tree.focused.no-focused-item:focus:before {\\n\\t\\t\\toutline-width: 1px;\\n\\t\\t\\toutline-offset: -2px;\\n\\t\\t}\\n\\n\\t\\t.hc-black .synthetic-focus input {\\n\\t\\t\\tbackground: transparent; /* Search input focus fix when in high contrast */\\n\\t\\t}\\n\\t\\t\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/style.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/style.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gCAA8B;AAE9B,sEAA8H;AAC9H,wEAAwQ;AACxQ,mDAAiE;AAEjE,yCAA0B,CAAC,UAAC,KAAa,EAAE,SAA6B;IAEvE,aAAa;IACb,IAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,0BAAU,CAAC,CAAC;IACpD,IAAI,gBAAgB,EAAE;QACrB,SAAS,CAAC,OAAO,CAAC,gCAA8B,gBAAgB,QAAK,CAAC,CAAC;KACvE;IAED,YAAY;IACZ,IAAM,yBAAyB,GAAG,KAAK,CAAC,QAAQ,CAAC,mCAAmB,CAAC,CAAC;IACtE,IAAI,yBAAyB,EAAE;QAC9B,SAAS,CAAC,OAAO,CAAC,uDAAqD,yBAAyB,QAAK,CAAC,CAAC;KACvG;IAED,oBAAoB;IACpB,IAAM,qBAAqB,GAAG,KAAK,CAAC,QAAQ,CAAC,0CAA0B,CAAC,CAAC;IACzE,IAAI,qBAAqB,EAAE;QAC1B,SAAS,CAAC,OAAO,CAAC,iEAA+D,qBAAqB,QAAK,CAAC,CAAC;QAC7G,SAAS,CAAC,OAAO,CAAC,oEAAkE,qBAAqB,QAAK,CAAC,CAAC;KAChH;IAED,iBAAiB;IACjB,IAAM,4BAA4B,GAAG,KAAK,CAAC,QAAQ,CAAC,uCAAuB,CAAC,CAAC;IAC7E,IAAI,4BAA4B,EAAE;QACjC,SAAS,CAAC,OAAO,CAAC,iNAGP,4BAA4B,qBAEtC,CAAC,CAAC;KACH;IAED,iGAAiG;IACjG,IAAM,mBAAmB,GAAG,4BAAoB,CAAC,KAAK,CAAC,CAAC;IACxD,SAAS,CAAC,OAAO,CAAC,2CAAyC,mBAAmB,QAAK,CAAC,CAAC;IAErF,aAAa;IACb,IAAM,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,+BAAe,CAAC,CAAC;IAC7D,IAAI,oBAAoB,EAAE;QACzB,SAAS,CAAC,OAAO,CAAC,+FAEF,oBAAoB,oIAIpB,oBAAoB,wIAIpB,oBAAoB,4CAEnC,CAAC,CAAC;KACH;IAED,IAAM,8BAA8B,GAAG,KAAK,CAAC,QAAQ,CAAC,yCAAyB,CAAC,CAAC;IACjF,IAAI,8BAA8B,EAAE;QACnC,SAAS,CAAC,OAAO,CAAC,wGAEF,8BAA8B,qBAE7C,CAAC,CAAC;KACH;IAED,IAAM,mCAAmC,GAAG,KAAK,CAAC,QAAQ,CAAC,8CAA8B,CAAC,CAAC;IAC3F,IAAI,mCAAmC,EAAE;QACxC,SAAS,CAAC,OAAO,CAAC,8GAEF,mCAAmC,qBAElD,CAAC,CAAC;KACH;IAED,IAAM,oCAAoC,GAAG,KAAK,CAAC,QAAQ,CAAC,+CAA+B,CAAC,CAAC;IAC7F,IAAI,oCAAoC,EAAE;QACzC,SAAS,CAAC,OAAO,CAAC,+GAEF,oCAAoC,qBAEnD,CAAC,CAAC;KACH;IAED,gBAAgB;IAChB,IAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,2BAAW,CAAC,CAAC;IACjD,IAAI,YAAY,EAAE;QACjB,SAAS,CAAC,OAAO,CAAC,4kBAYA,YAAY,mBAE7B,CAAC,CAAC;KACH;IAED,6CAA6C;IAC7C,IAAI,KAAK,CAAC,IAAI,KAAK,4BAAa,EAAE;QACjC,SAAS,CAAC,OAAO,CAAC,2lBAoBjB,CAAC,CAAC;KACH;AACF,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/style';\n\nimport { registerThemingParticipant, ITheme, ICssStyleCollector, HIGH_CONTRAST } from 'vs/platform/theme/common/themeService';\nimport { foreground, selectionBackground, focusBorder, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, listHighlightForeground, inputPlaceholderForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { WORKBENCH_BACKGROUND } from 'vs/workbench/common/theme';\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\n\t// Foreground\n\tconst windowForeground = theme.getColor(foreground);\n\tif (windowForeground) {\n\t\tcollector.addRule(`.monaco-workbench { color: ${windowForeground}; }`);\n\t}\n\n\t// Selection\n\tconst windowSelectionBackground = theme.getColor(selectionBackground);\n\tif (windowSelectionBackground) {\n\t\tcollector.addRule(`.monaco-workbench ::selection { background-color: ${windowSelectionBackground}; }`);\n\t}\n\n\t// Input placeholder\n\tconst placeholderForeground = theme.getColor(inputPlaceholderForeground);\n\tif (placeholderForeground) {\n\t\tcollector.addRule(`.monaco-workbench input::-webkit-input-placeholder { color: ${placeholderForeground}; }`);\n\t\tcollector.addRule(`.monaco-workbench textarea::-webkit-input-placeholder { color: ${placeholderForeground}; }`);\n\t}\n\n\t// List highlight\n\tconst listHighlightForegroundColor = theme.getColor(listHighlightForeground);\n\tif (listHighlightForegroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-tree .monaco-tree-row .monaco-highlighted-label .highlight,\n\t\t\t.monaco-workbench .monaco-list .monaco-list-row .monaco-highlighted-label .highlight {\n\t\t\t\tcolor: ${listHighlightForegroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// We need to set the workbench background color so that on Windows we get subpixel-antialiasing.\n\tconst workbenchBackground = WORKBENCH_BACKGROUND(theme);\n\tcollector.addRule(`.monaco-workbench { background-color: ${workbenchBackground}; }`);\n\n\t// Scrollbars\n\tconst scrollbarShadowColor = theme.getColor(scrollbarShadow);\n\tif (scrollbarShadowColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.top {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 0 6px 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 0 6px -6px inset;\n\t\t\t}\n\n\t\t\t.monaco-workbench .monaco-scrollable-element > .shadow.top.left {\n\t\t\t\tbox-shadow: ${scrollbarShadowColor} 6px 6px 6px -6px inset;\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n\tif (scrollbarSliderBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n\tif (scrollbarSliderHoverBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n\tif (scrollbarSliderActiveBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-workbench .monaco-scrollable-element > .scrollbar > .slider.active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\t// Focus outline\n\tconst focusOutline = theme.getColor(focusBorder);\n\tif (focusOutline) {\n\t\tcollector.addRule(`\n\t\t.monaco-workbench [tabindex=\"0\"]:focus,\n\t\t.monaco-workbench .synthetic-focus,\n\t\t.monaco-workbench select:focus,\n\t\t.monaco-workbench .monaco-tree.focused.no-focused-item:focus:before,\n\t\t.monaco-workbench .monaco-list:not(.element-focused):focus:before,\n\t\t.monaco-workbench input[type=\"button\"]:focus,\n\t\t.monaco-workbench input[type=\"text\"]:focus,\n\t\t.monaco-workbench button:focus,\n\t\t.monaco-workbench textarea:focus,\n\t\t.monaco-workbench input[type=\"search\"]:focus,\n\t\t.monaco-workbench input[type=\"checkbox\"]:focus {\n\t\t\toutline-color: ${focusOutline};\n\t\t}\n\t\t`);\n\t}\n\n\t// High Contrast theme overwrites for outline\n\tif (theme.type === HIGH_CONTRAST) {\n\t\tcollector.addRule(`\n\t\t.hc-black [tabindex=\"0\"]:focus,\n\t\t.hc-black .synthetic-focus,\n\t\t.hc-black select:focus,\n\t\t.hc-black input[type=\"button\"]:focus,\n\t\t.hc-black input[type=\"text\"]:focus,\n\t\t.hc-black textarea:focus,\n\t\t.hc-black input[type=\"checkbox\"]:focus {\n\t\t\toutline-style: solid;\n\t\t\toutline-width: 1px;\n\t\t}\n\n\t\t.hc-black .monaco-tree.focused.no-focused-item:focus:before {\n\t\t\toutline-width: 1px;\n\t\t\toutline-offset: -2px;\n\t\t}\n\n\t\t.hc-black .synthetic-focus input {\n\t\t\tbackground: transparent; /* Search input focus fix when in high contrast */\n\t\t}\n\t\t`);\n\t}\n});\n"]}]}