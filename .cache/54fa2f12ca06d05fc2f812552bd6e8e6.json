{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/configuration/node/configuration.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/configuration/node/configuration.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar configurationModels_1 = require(\"vs/platform/configuration/common/configurationModels\");\nvar config_1 = require(\"vs/base/node/config\");\nvar event_1 = require(\"vs/base/common/event\");\nvar async_1 = require(\"vs/base/common/async\");\nvar resources = require(\"vs/base/common/resources\");\nvar NodeBasedUserConfiguration = /** @class */ (function (_super) {\n    tslib_1.__extends(NodeBasedUserConfiguration, _super);\n    function NodeBasedUserConfiguration(settingsPath) {\n        var _this = _super.call(this) || this;\n        _this.settingsPath = settingsPath;\n        _this._onDidChangeConfiguration = _this._register(new event_1.Emitter());\n        _this.onDidChangeConfiguration = _this._onDidChangeConfiguration.event;\n        return _this;\n    }\n    NodeBasedUserConfiguration.prototype.initialize = function () {\n        var _this = this;\n        if (!this.initializePromise) {\n            this.initializePromise = new Promise(function (c, e) {\n                _this.userConfigModelWatcher = new config_1.ConfigWatcher(_this.settingsPath, {\n                    changeBufferDelay: 300, onError: function (error) { return errors_1.onUnexpectedError(error); }, defaultConfig: new configurationModels_1.ConfigurationModelParser(_this.settingsPath), parse: function (content, parseErrors) {\n                        var userConfigModelParser = new configurationModels_1.ConfigurationModelParser(_this.settingsPath);\n                        userConfigModelParser.parse(content);\n                        parseErrors = userConfigModelParser.errors.slice();\n                        return userConfigModelParser;\n                    }, initCallback: function () { return c(undefined); }\n                });\n                _this._register(_this.userConfigModelWatcher);\n                // Listeners\n                _this._register(_this.userConfigModelWatcher.onDidUpdateConfiguration(function () { return _this._onDidChangeConfiguration.fire(_this.userConfigModelWatcher.getConfig().configurationModel); }));\n            });\n        }\n        return this.initializePromise.then(function () { return _this.userConfigModelWatcher.getConfig().configurationModel; });\n    };\n    NodeBasedUserConfiguration.prototype.initializeSync = function () {\n        this.initialize();\n        return this.userConfigModelWatcher.getConfig().configurationModel;\n    };\n    NodeBasedUserConfiguration.prototype.reload = function () {\n        var _this = this;\n        return this.initialize().then(function () { return new Promise(function (c) { return _this.userConfigModelWatcher.reload(function (userConfigModelParser) { return c(userConfigModelParser.configurationModel); }); }); });\n    };\n    return NodeBasedUserConfiguration;\n}(lifecycle_1.Disposable));\nexports.NodeBasedUserConfiguration = NodeBasedUserConfiguration;\nvar FileServiceBasedUserConfiguration = /** @class */ (function (_super) {\n    tslib_1.__extends(FileServiceBasedUserConfiguration, _super);\n    function FileServiceBasedUserConfiguration(configurationResource, fileService) {\n        var _this = _super.call(this) || this;\n        _this.configurationResource = configurationResource;\n        _this.fileService = fileService;\n        _this._onDidChangeConfiguration = _this._register(new event_1.Emitter());\n        _this.onDidChangeConfiguration = _this._onDidChangeConfiguration.event;\n        _this._register(fileService.onFileChanges(function (e) { return _this.handleFileEvents(e); }));\n        _this.reloadConfigurationScheduler = _this._register(new async_1.RunOnceScheduler(function () { return _this.reload().then(function (configurationModel) { return _this._onDidChangeConfiguration.fire(configurationModel); }); }, 50));\n        _this.fileService.watchFileChanges(_this.configurationResource);\n        _this._register(lifecycle_1.toDisposable(function () { return _this.fileService.unwatchFileChanges(_this.configurationResource); }));\n        return _this;\n    }\n    FileServiceBasedUserConfiguration.prototype.initialize = function () {\n        return this.reload();\n    };\n    FileServiceBasedUserConfiguration.prototype.reload = function () {\n        var _this = this;\n        return this.fileService.resolveContent(this.configurationResource)\n            .then(function (content) { return content.value; }, function () {\n            // File not found\n            return '';\n        }).then(function (content) {\n            var parser = new configurationModels_1.ConfigurationModelParser(_this.configurationResource.toString());\n            parser.parse(content);\n            return parser.configurationModel;\n        });\n    };\n    FileServiceBasedUserConfiguration.prototype.handleFileEvents = function (event) {\n        var events = event.changes;\n        var affectedByChanges = false;\n        // Find changes that affect workspace file\n        for (var i = 0, len = events.length; i < len && !affectedByChanges; i++) {\n            affectedByChanges = resources.isEqual(this.configurationResource, events[i].resource);\n        }\n        if (affectedByChanges) {\n            this.reloadConfigurationScheduler.schedule();\n        }\n    };\n    return FileServiceBasedUserConfiguration;\n}(lifecycle_1.Disposable));\nexports.FileServiceBasedUserConfiguration = FileServiceBasedUserConfiguration;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/configuration/node/configuration.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/configuration/node/configuration.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { ConfigurationModelParser, ConfigurationModel } from 'vs/platform/configuration/common/configurationModels';\nimport { ConfigWatcher } from 'vs/base/node/config';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService, FileChangesEvent } from 'vs/platform/files/common/files';\nimport * as resources from 'vs/base/common/resources';\n\nexport class NodeBasedUserConfiguration extends Disposable {\n\n\tprivate userConfigModelWatcher: ConfigWatcher<ConfigurationModelParser>;\n\tprivate initializePromise: Promise<void>;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tconstructor(private settingsPath: string) {\n\t\tsuper();\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = new Promise<void>((c, e) => {\n\t\t\t\tthis.userConfigModelWatcher = new ConfigWatcher(this.settingsPath, {\n\t\t\t\t\tchangeBufferDelay: 300, onError: error => onUnexpectedError(error), defaultConfig: new ConfigurationModelParser(this.settingsPath), parse: (content: string, parseErrors: any[]) => {\n\t\t\t\t\t\tconst userConfigModelParser = new ConfigurationModelParser(this.settingsPath);\n\t\t\t\t\t\tuserConfigModelParser.parse(content);\n\t\t\t\t\t\tparseErrors = [...userConfigModelParser.errors];\n\t\t\t\t\t\treturn userConfigModelParser;\n\t\t\t\t\t}, initCallback: () => c(undefined)\n\t\t\t\t});\n\t\t\t\tthis._register(this.userConfigModelWatcher);\n\n\t\t\t\t// Listeners\n\t\t\t\tthis._register(this.userConfigModelWatcher.onDidUpdateConfiguration(() => this._onDidChangeConfiguration.fire(this.userConfigModelWatcher.getConfig().configurationModel)));\n\t\t\t});\n\t\t}\n\t\treturn this.initializePromise.then(() => this.userConfigModelWatcher.getConfig().configurationModel);\n\t}\n\n\tinitializeSync(): ConfigurationModel {\n\t\tthis.initialize();\n\t\treturn this.userConfigModelWatcher.getConfig().configurationModel;\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this.initialize().then(() => new Promise<ConfigurationModel>(c => this.userConfigModelWatcher.reload(userConfigModelParser => c(userConfigModelParser.configurationModel))));\n\t}\n\n}\n\nexport class FileServiceBasedUserConfiguration extends Disposable {\n\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\tprotected readonly _onDidChangeConfiguration: Emitter<ConfigurationModel> = this._register(new Emitter<ConfigurationModel>());\n\treadonly onDidChangeConfiguration: Event<ConfigurationModel> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly configurationResource: URI,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(fileService.onFileChanges(e => this.handleFileEvents(e)));\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reload().then(configurationModel => this._onDidChangeConfiguration.fire(configurationModel)), 50));\n\t\tthis.fileService.watchFileChanges(this.configurationResource);\n\t\tthis._register(toDisposable(() => this.fileService.unwatchFileChanges(this.configurationResource)));\n\t}\n\n\tinitialize(): Promise<ConfigurationModel> {\n\t\treturn this.reload();\n\t}\n\n\treload(): Promise<ConfigurationModel> {\n\t\treturn this.fileService.resolveContent(this.configurationResource)\n\t\t\t.then(content => content.value, () => {\n\t\t\t\t// File not found\n\t\t\t\treturn '';\n\t\t\t}).then(content => {\n\t\t\t\tconst parser = new ConfigurationModelParser(this.configurationResource.toString());\n\t\t\t\tparser.parse(content);\n\t\t\t\treturn parser.configurationModel;\n\t\t\t});\n\t}\n\n\tprivate handleFileEvents(event: FileChangesEvent): void {\n\t\tconst events = event.changes;\n\n\t\tlet affectedByChanges = false;\n\t\t// Find changes that affect workspace file\n\t\tfor (let i = 0, len = events.length; i < len && !affectedByChanges; i++) {\n\t\t\taffectedByChanges = resources.isEqual(this.configurationResource, events[i].resource);\n\t\t}\n\n\t\tif (affectedByChanges) {\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}\n\t}\n}"]}]}