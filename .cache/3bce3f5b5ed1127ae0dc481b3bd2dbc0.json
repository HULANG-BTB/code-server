{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchWidget.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar button_1 = require(\"vs/base/browser/ui/button/button\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar async_1 = require(\"vs/base/common/async\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar strings = require(\"vs/base/common/strings\");\nvar findModel_1 = require(\"vs/editor/contrib/find/findModel\");\nvar nls = require(\"vs/nls\");\nvar clipboardService_1 = require(\"vs/platform/clipboard/common/clipboardService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar contextScopedHistoryWidget_1 = require(\"vs/platform/browser/contextScopedHistoryWidget\");\nvar searchActions_1 = require(\"vs/workbench/contrib/search/browser/searchActions\");\nvar Constants = require(\"vs/workbench/contrib/search/common/constants\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar accessibility_1 = require(\"vs/platform/accessibility/common/accessibility\");\nvar ReplaceAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplaceAllAction, _super);\n    function ReplaceAllAction() {\n        return _super.call(this, ReplaceAllAction.ID, '', 'action-replace-all', false) || this;\n    }\n    Object.defineProperty(ReplaceAllAction, \"INSTANCE\", {\n        get: function () {\n            if (ReplaceAllAction.fgInstance === null) {\n                ReplaceAllAction.fgInstance = new ReplaceAllAction();\n            }\n            return ReplaceAllAction.fgInstance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReplaceAllAction.prototype, \"searchWidget\", {\n        set: function (searchWidget) {\n            this._searchWidget = searchWidget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReplaceAllAction.prototype.run = function () {\n        if (this._searchWidget) {\n            return this._searchWidget.triggerReplaceAll();\n        }\n        return Promise.resolve(null);\n    };\n    ReplaceAllAction.fgInstance = null;\n    ReplaceAllAction.ID = 'search.action.replaceAll';\n    return ReplaceAllAction;\n}(actions_1.Action));\nvar SearchWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(SearchWidget, _super);\n    function SearchWidget(container, options, contextViewService, themeService, contextKeyService, keyBindingService, clipboardServce, configurationService, accessibilityService) {\n        var _this = _super.call(this) || this;\n        _this.contextViewService = contextViewService;\n        _this.themeService = themeService;\n        _this.contextKeyService = contextKeyService;\n        _this.keyBindingService = keyBindingService;\n        _this.clipboardServce = clipboardServce;\n        _this.configurationService = configurationService;\n        _this.accessibilityService = accessibilityService;\n        _this.ignoreGlobalFindBufferOnNextFocus = false;\n        _this._onSearchSubmit = _this._register(new event_1.Emitter());\n        _this.onSearchSubmit = _this._onSearchSubmit.event;\n        _this._onSearchCancel = _this._register(new event_1.Emitter());\n        _this.onSearchCancel = _this._onSearchCancel.event;\n        _this._onReplaceToggled = _this._register(new event_1.Emitter());\n        _this.onReplaceToggled = _this._onReplaceToggled.event;\n        _this._onReplaceStateChange = _this._register(new event_1.Emitter());\n        _this.onReplaceStateChange = _this._onReplaceStateChange.event;\n        _this._onReplaceValueChanged = _this._register(new event_1.Emitter());\n        _this.onReplaceValueChanged = _this._onReplaceValueChanged.event;\n        _this._onReplaceAll = _this._register(new event_1.Emitter());\n        _this.onReplaceAll = _this._onReplaceAll.event;\n        _this._onBlur = _this._register(new event_1.Emitter());\n        _this.onBlur = _this._onBlur.event;\n        _this._onDidHeightChange = _this._register(new event_1.Emitter());\n        _this.onDidHeightChange = _this._onDidHeightChange.event;\n        _this.replaceActive = Constants.ReplaceActiveKey.bindTo(_this.contextKeyService);\n        _this.searchInputBoxFocused = Constants.SearchInputBoxFocusedKey.bindTo(_this.contextKeyService);\n        _this.replaceInputBoxFocused = Constants.ReplaceInputBoxFocusedKey.bindTo(_this.contextKeyService);\n        _this._replaceHistoryDelayer = new async_1.Delayer(500);\n        _this.render(container, options);\n        _this.configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                _this.updateAccessibilitySupport();\n            }\n        });\n        _this.accessibilityService.onDidChangeAccessibilitySupport(function () { return _this.updateAccessibilitySupport(); });\n        _this.updateAccessibilitySupport();\n        return _this;\n    }\n    SearchWidget.prototype.focus = function (select, focusReplace, suppressGlobalSearchBuffer) {\n        if (select === void 0) { select = true; }\n        if (focusReplace === void 0) { focusReplace = false; }\n        if (suppressGlobalSearchBuffer === void 0) { suppressGlobalSearchBuffer = false; }\n        this.ignoreGlobalFindBufferOnNextFocus = suppressGlobalSearchBuffer;\n        if (focusReplace && this.isReplaceShown()) {\n            this.replaceInput.focus();\n            if (select) {\n                this.replaceInput.select();\n            }\n        }\n        else {\n            this.searchInput.focus();\n            if (select) {\n                this.searchInput.select();\n            }\n        }\n    };\n    SearchWidget.prototype.setWidth = function (width) {\n        this.searchInput.inputBox.layout();\n        this.replaceInput.width = width - 28;\n        this.replaceInput.layout();\n    };\n    SearchWidget.prototype.clear = function () {\n        this.searchInput.clear();\n        this.replaceInput.value = '';\n        this.setReplaceAllActionState(false);\n    };\n    SearchWidget.prototype.isReplaceShown = function () {\n        return !dom.hasClass(this.replaceContainer, 'disabled');\n    };\n    SearchWidget.prototype.isReplaceActive = function () {\n        return !!this.replaceActive.get();\n    };\n    SearchWidget.prototype.getReplaceValue = function () {\n        return this.replaceInput.value;\n    };\n    SearchWidget.prototype.toggleReplace = function (show) {\n        if (show === undefined || show !== this.isReplaceShown()) {\n            this.onToggleReplaceButton();\n        }\n    };\n    SearchWidget.prototype.getSearchHistory = function () {\n        return this.searchInput.inputBox.getHistory();\n    };\n    SearchWidget.prototype.getReplaceHistory = function () {\n        return this.replaceInput.getHistory();\n    };\n    SearchWidget.prototype.clearHistory = function () {\n        this.searchInput.inputBox.clearHistory();\n    };\n    SearchWidget.prototype.showNextSearchTerm = function () {\n        this.searchInput.inputBox.showNextValue();\n    };\n    SearchWidget.prototype.showPreviousSearchTerm = function () {\n        this.searchInput.inputBox.showPreviousValue();\n    };\n    SearchWidget.prototype.showNextReplaceTerm = function () {\n        this.replaceInput.showNextValue();\n    };\n    SearchWidget.prototype.showPreviousReplaceTerm = function () {\n        this.replaceInput.showPreviousValue();\n    };\n    SearchWidget.prototype.searchInputHasFocus = function () {\n        return !!this.searchInputBoxFocused.get();\n    };\n    SearchWidget.prototype.replaceInputHasFocus = function () {\n        return this.replaceInput.hasFocus();\n    };\n    SearchWidget.prototype.focusReplaceAllAction = function () {\n        this.replaceActionBar.focus(true);\n    };\n    SearchWidget.prototype.focusRegexAction = function () {\n        this.searchInput.focusOnRegex();\n    };\n    SearchWidget.prototype.render = function (container, options) {\n        this.domNode = dom.append(container, dom.$('.search-widget'));\n        this.domNode.style.position = 'relative';\n        this.renderToggleReplaceButton(this.domNode);\n        this.renderSearchInput(this.domNode, options);\n        this.renderReplaceInput(this.domNode, options);\n    };\n    SearchWidget.prototype.isScreenReaderOptimized = function () {\n        var detected = this.accessibilityService.getAccessibilitySupport() === accessibility_1.AccessibilitySupport.Enabled;\n        var config = this.configurationService.getValue('editor').accessibilitySupport;\n        return config === 'on' || (config === 'auto' && detected);\n    };\n    SearchWidget.prototype.updateAccessibilitySupport = function () {\n        this.searchInput.setFocusInputOnOptionClick(!this.isScreenReaderOptimized());\n    };\n    SearchWidget.prototype.renderToggleReplaceButton = function (parent) {\n        var _this = this;\n        var opts = {\n            buttonBackground: undefined,\n            buttonBorder: undefined,\n            buttonForeground: undefined,\n            buttonHoverBackground: undefined\n        };\n        this.toggleReplaceButton = this._register(new button_1.Button(parent, opts));\n        this.toggleReplaceButton.element.setAttribute('aria-expanded', 'false');\n        this.toggleReplaceButton.element.classList.add('collapse');\n        this.toggleReplaceButton.icon = 'toggle-replace-button';\n        // TODO@joh need to dispose this listener eventually\n        this.toggleReplaceButton.onDidClick(function () { return _this.onToggleReplaceButton(); });\n        this.toggleReplaceButton.element.title = nls.localize('search.replace.toggle.button.title', \"Toggle Replace\");\n    };\n    SearchWidget.prototype.renderSearchInput = function (parent, options) {\n        var _this = this;\n        var inputOptions = {\n            label: nls.localize('label.Search', 'Search: Type Search Term and press Enter to search or Escape to cancel'),\n            validation: function (value) { return _this.validateSearchInput(value); },\n            placeholder: nls.localize('search.placeHolder', \"Search\"),\n            appendCaseSensitiveLabel: searchActions_1.appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleCaseSensitiveCommandId), this.keyBindingService),\n            appendWholeWordsLabel: searchActions_1.appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleWholeWordCommandId), this.keyBindingService),\n            appendRegexLabel: searchActions_1.appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleRegexCommandId), this.keyBindingService),\n            history: options.searchHistory,\n            flexibleHeight: true\n        };\n        var searchInputContainer = dom.append(parent, dom.$('.search-container.input-box'));\n        this.searchInput = this._register(new contextScopedHistoryWidget_1.ContextScopedFindInput(searchInputContainer, this.contextViewService, inputOptions, this.contextKeyService, true));\n        this._register(styler_1.attachFindInputBoxStyler(this.searchInput, this.themeService));\n        this.searchInput.onKeyDown(function (keyboardEvent) { return _this.onSearchInputKeyDown(keyboardEvent); });\n        this.searchInput.setValue(options.value || '');\n        this.searchInput.setRegex(!!options.isRegex);\n        this.searchInput.setCaseSensitive(!!options.isCaseSensitive);\n        this.searchInput.setWholeWords(!!options.isWholeWords);\n        this._register(this.onSearchSubmit(function () {\n            _this.searchInput.inputBox.addToHistory();\n        }));\n        this._register(this.searchInput.onCaseSensitiveKeyDown(function (keyboardEvent) { return _this.onCaseSensitiveKeyDown(keyboardEvent); }));\n        this._register(this.searchInput.onRegexKeyDown(function (keyboardEvent) { return _this.onRegexKeyDown(keyboardEvent); }));\n        this._register(this.searchInput.inputBox.onDidChange(function () { return _this.onSearchInputChanged(); }));\n        this._register(this.searchInput.inputBox.onDidHeightChange(function () { return _this._onDidHeightChange.fire(); }));\n        this._register(this.onReplaceValueChanged(function () {\n            _this._replaceHistoryDelayer.trigger(function () { return _this.replaceInput.addToHistory(); });\n        }));\n        this.searchInputFocusTracker = this._register(dom.trackFocus(this.searchInput.inputBox.inputElement));\n        this._register(this.searchInputFocusTracker.onDidFocus(function () {\n            _this.searchInputBoxFocused.set(true);\n            var useGlobalFindBuffer = _this.searchConfiguration.globalFindClipboard;\n            if (!_this.ignoreGlobalFindBufferOnNextFocus && useGlobalFindBuffer) {\n                var globalBufferText = _this.clipboardServce.readFindText();\n                if (_this.previousGlobalFindBufferValue !== globalBufferText) {\n                    _this.searchInput.inputBox.addToHistory();\n                    _this.searchInput.setValue(globalBufferText);\n                    _this.searchInput.select();\n                }\n                _this.previousGlobalFindBufferValue = globalBufferText;\n            }\n            _this.ignoreGlobalFindBufferOnNextFocus = false;\n        }));\n        this._register(this.searchInputFocusTracker.onDidBlur(function () { return _this.searchInputBoxFocused.set(false); }));\n    };\n    SearchWidget.prototype.renderReplaceInput = function (parent, options) {\n        var _this = this;\n        this.replaceContainer = dom.append(parent, dom.$('.replace-container.disabled'));\n        var replaceBox = dom.append(this.replaceContainer, dom.$('.input-box'));\n        this.replaceInput = this._register(new contextScopedHistoryWidget_1.ContextScopedHistoryInputBox(replaceBox, this.contextViewService, {\n            ariaLabel: nls.localize('label.Replace', 'Replace: Type replace term and press Enter to preview or Escape to cancel'),\n            placeholder: nls.localize('search.replace.placeHolder', \"Replace\"),\n            history: options.replaceHistory || [],\n            flexibleHeight: true\n        }, this.contextKeyService));\n        this._register(styler_1.attachInputBoxStyler(this.replaceInput, this.themeService));\n        this.onkeydown(this.replaceInput.inputElement, function (keyboardEvent) { return _this.onReplaceInputKeyDown(keyboardEvent); });\n        this.replaceInput.value = options.replaceValue || '';\n        this._register(this.replaceInput.onDidChange(function () { return _this._onReplaceValueChanged.fire(); }));\n        this._register(this.replaceInput.onDidHeightChange(function () { return _this._onDidHeightChange.fire(); }));\n        this.replaceAllAction = ReplaceAllAction.INSTANCE;\n        this.replaceAllAction.searchWidget = this;\n        this.replaceAllAction.label = SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n        this.replaceActionBar = this._register(new actionbar_1.ActionBar(this.replaceContainer));\n        this.replaceActionBar.push([this.replaceAllAction], { icon: true, label: false });\n        this.onkeydown(this.replaceActionBar.domNode, function (keyboardEvent) { return _this.onReplaceActionbarKeyDown(keyboardEvent); });\n        this.replaceInputFocusTracker = this._register(dom.trackFocus(this.replaceInput.inputElement));\n        this._register(this.replaceInputFocusTracker.onDidFocus(function () { return _this.replaceInputBoxFocused.set(true); }));\n        this._register(this.replaceInputFocusTracker.onDidBlur(function () { return _this.replaceInputBoxFocused.set(false); }));\n    };\n    SearchWidget.prototype.triggerReplaceAll = function () {\n        this._onReplaceAll.fire();\n        return Promise.resolve(null);\n    };\n    SearchWidget.prototype.onToggleReplaceButton = function () {\n        dom.toggleClass(this.replaceContainer, 'disabled');\n        dom.toggleClass(this.toggleReplaceButton.element, 'collapse');\n        dom.toggleClass(this.toggleReplaceButton.element, 'expand');\n        this.toggleReplaceButton.element.setAttribute('aria-expanded', this.isReplaceShown() ? 'true' : 'false');\n        this.updateReplaceActiveState();\n        this._onReplaceToggled.fire();\n    };\n    SearchWidget.prototype.setReplaceAllActionState = function (enabled) {\n        if (this.replaceAllAction.enabled !== enabled) {\n            this.replaceAllAction.enabled = enabled;\n            this.replaceAllAction.label = enabled ? SearchWidget.REPLACE_ALL_ENABLED_LABEL(this.keyBindingService) : SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n            this.updateReplaceActiveState();\n        }\n    };\n    SearchWidget.prototype.updateReplaceActiveState = function () {\n        var currentState = this.isReplaceActive();\n        var newState = this.isReplaceShown() && this.replaceAllAction.enabled;\n        if (currentState !== newState) {\n            this.replaceActive.set(newState);\n            this._onReplaceStateChange.fire(newState);\n            this.replaceInput.layout();\n        }\n    };\n    SearchWidget.prototype.validateSearchInput = function (value) {\n        if (value.length === 0) {\n            return null;\n        }\n        if (!this.searchInput.getRegex()) {\n            return null;\n        }\n        try {\n            // tslint:disable-next-line: no-unused-expression\n            new RegExp(value);\n        }\n        catch (e) {\n            return { content: e.message };\n        }\n        if (strings.regExpContainsBackreference(value)) {\n            if (!this.searchConfiguration.usePCRE2) {\n                return { content: nls.localize('regexp.backreferenceValidationFailure', \"Backreferences are not supported\") };\n            }\n        }\n        return null;\n    };\n    SearchWidget.prototype.onSearchInputChanged = function () {\n        this.searchInput.clearMessage();\n        this.setReplaceAllActionState(false);\n    };\n    SearchWidget.prototype.onSearchInputKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.equals(keyCodes_1.KeyCode.Enter)) {\n            this.submitSearch();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.Escape)) {\n            this._onSearchCancel.fire();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.Tab)) {\n            if (this.isReplaceShown()) {\n                this.replaceInput.focus();\n            }\n            else {\n                this.searchInput.focusOnCaseSensitive();\n            }\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.UpArrow)) {\n            var ta = this.searchInput.domNode.querySelector('textarea');\n            var isMultiline = !!this.searchInput.getValue().match(/\\n/);\n            if (ta && isMultiline && ta.selectionStart > 0) {\n                keyboardEvent.stopPropagation();\n            }\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.DownArrow)) {\n            var ta = this.searchInput.domNode.querySelector('textarea');\n            var isMultiline = !!this.searchInput.getValue().match(/\\n/);\n            if (ta && isMultiline && ta.selectionEnd < ta.value.length) {\n                keyboardEvent.stopPropagation();\n            }\n        }\n    };\n    SearchWidget.prototype.onCaseSensitiveKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.equals(keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab)) {\n            if (this.isReplaceShown()) {\n                this.replaceInput.focus();\n                keyboardEvent.preventDefault();\n            }\n        }\n    };\n    SearchWidget.prototype.onRegexKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.equals(keyCodes_1.KeyCode.Tab)) {\n            if (this.isReplaceActive()) {\n                this.focusReplaceAllAction();\n            }\n            else {\n                this._onBlur.fire();\n            }\n            keyboardEvent.preventDefault();\n        }\n    };\n    SearchWidget.prototype.onReplaceInputKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.equals(keyCodes_1.KeyCode.Enter)) {\n            this.submitSearch();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.Tab)) {\n            this.searchInput.focusOnCaseSensitive();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab)) {\n            this.searchInput.focus();\n            keyboardEvent.preventDefault();\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.UpArrow)) {\n            var ta = this.searchInput.domNode.querySelector('textarea');\n            if (ta && ta.selectionStart > 0) {\n                keyboardEvent.stopPropagation();\n            }\n        }\n        else if (keyboardEvent.equals(keyCodes_1.KeyCode.DownArrow)) {\n            var ta = this.searchInput.domNode.querySelector('textarea');\n            if (ta && ta.selectionEnd < ta.value.length) {\n                keyboardEvent.stopPropagation();\n            }\n        }\n    };\n    SearchWidget.prototype.onReplaceActionbarKeyDown = function (keyboardEvent) {\n        if (keyboardEvent.equals(keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab)) {\n            this.focusRegexAction();\n            keyboardEvent.preventDefault();\n        }\n    };\n    SearchWidget.prototype.submitSearch = function () {\n        this.searchInput.validate();\n        if (!this.searchInput.inputBox.isInputValid()) {\n            return;\n        }\n        var value = this.searchInput.getValue();\n        var useGlobalFindBuffer = this.searchConfiguration.globalFindClipboard;\n        if (value) {\n            if (useGlobalFindBuffer) {\n                this.clipboardServce.writeFindText(value);\n            }\n            this._onSearchSubmit.fire();\n        }\n    };\n    SearchWidget.prototype.dispose = function () {\n        this.setReplaceAllActionState(false);\n        _super.prototype.dispose.call(this);\n    };\n    Object.defineProperty(SearchWidget.prototype, \"searchConfiguration\", {\n        get: function () {\n            return this.configurationService.getValue('search');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchWidget.REPLACE_ALL_DISABLED_LABEL = nls.localize('search.action.replaceAll.disabled.label', \"Replace All (Submit Search to Enable)\");\n    SearchWidget.REPLACE_ALL_ENABLED_LABEL = function (keyBindingService2) {\n        var kb = keyBindingService2.lookupKeybinding(ReplaceAllAction.ID);\n        return searchActions_1.appendKeyBindingLabel(nls.localize('search.action.replaceAll.enabled.label', \"Replace All\"), kb, keyBindingService2);\n    };\n    SearchWidget = tslib_1.__decorate([\n        tslib_1.__param(2, contextView_1.IContextViewService),\n        tslib_1.__param(3, themeService_1.IThemeService),\n        tslib_1.__param(4, contextkey_1.IContextKeyService),\n        tslib_1.__param(5, keybinding_1.IKeybindingService),\n        tslib_1.__param(6, clipboardService_1.IClipboardService),\n        tslib_1.__param(7, configuration_1.IConfigurationService),\n        tslib_1.__param(8, accessibility_1.IAccessibilityService)\n    ], SearchWidget);\n    return SearchWidget;\n}(widget_1.Widget));\nexports.SearchWidget = SearchWidget;\nfunction registerContributions() {\n    keybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n        id: ReplaceAllAction.ID,\n        weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n        when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, findModel_1.CONTEXT_FIND_WIDGET_NOT_VISIBLE),\n        primary: keyCodes_1.KeyMod.Alt | keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Enter,\n        handler: function (accessor) {\n            if (searchActions_1.isSearchViewFocused(accessor.get(viewlet_1.IViewletService), accessor.get(panelService_1.IPanelService))) {\n                ReplaceAllAction.INSTANCE.run();\n            }\n        }\n    });\n}\nexports.registerContributions = registerContributions;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Button, IButtonOptions } from 'vs/base/browser/ui/button/button';\nimport { FindInput, IFindInputOptions } from 'vs/base/browser/ui/findinput/findInput';\nimport { HistoryInputBox, IMessage } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { Action } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as strings from 'vs/base/common/strings';\nimport { CONTEXT_FIND_WIDGET_NOT_VISIBLE } from 'vs/editor/contrib/find/findModel';\nimport * as nls from 'vs/nls';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ContextKeyExpr, IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ISearchConfigurationProperties } from 'vs/workbench/services/search/common/search';\nimport { attachFindInputBoxStyler, attachInputBoxStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ContextScopedFindInput, ContextScopedHistoryInputBox } from 'vs/platform/browser/contextScopedHistoryWidget';\nimport { appendKeyBindingLabel, isSearchViewFocused } from 'vs/workbench/contrib/search/browser/searchActions';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IAccessibilityService, AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\n\nexport interface ISearchWidgetOptions {\n\tvalue?: string;\n\treplaceValue?: string;\n\tisRegex?: boolean;\n\tisCaseSensitive?: boolean;\n\tisWholeWords?: boolean;\n\tsearchHistory?: string[];\n\treplaceHistory?: string[];\n}\n\nclass ReplaceAllAction extends Action {\n\n\tprivate static fgInstance: ReplaceAllAction | null = null;\n\tstatic readonly ID: string = 'search.action.replaceAll';\n\n\tstatic get INSTANCE(): ReplaceAllAction {\n\t\tif (ReplaceAllAction.fgInstance === null) {\n\t\t\tReplaceAllAction.fgInstance = new ReplaceAllAction();\n\t\t}\n\t\treturn ReplaceAllAction.fgInstance;\n\t}\n\n\tprivate _searchWidget: SearchWidget;\n\n\tconstructor() {\n\t\tsuper(ReplaceAllAction.ID, '', 'action-replace-all', false);\n\t}\n\n\tset searchWidget(searchWidget: SearchWidget) {\n\t\tthis._searchWidget = searchWidget;\n\t}\n\n\trun(): Promise<any> {\n\t\tif (this._searchWidget) {\n\t\t\treturn this._searchWidget.triggerReplaceAll();\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class SearchWidget extends Widget {\n\n\tprivate static readonly REPLACE_ALL_DISABLED_LABEL = nls.localize('search.action.replaceAll.disabled.label', \"Replace All (Submit Search to Enable)\");\n\tprivate static readonly REPLACE_ALL_ENABLED_LABEL = (keyBindingService2: IKeybindingService): string => {\n\t\tconst kb = keyBindingService2.lookupKeybinding(ReplaceAllAction.ID);\n\t\treturn appendKeyBindingLabel(nls.localize('search.action.replaceAll.enabled.label', \"Replace All\"), kb, keyBindingService2);\n\t}\n\n\tdomNode: HTMLElement;\n\n\tsearchInput: FindInput;\n\tsearchInputFocusTracker: dom.IFocusTracker;\n\tprivate searchInputBoxFocused: IContextKey<boolean>;\n\n\tprivate replaceContainer: HTMLElement;\n\treplaceInput: HistoryInputBox;\n\tprivate toggleReplaceButton: Button;\n\tprivate replaceAllAction: ReplaceAllAction;\n\tprivate replaceActive: IContextKey<boolean>;\n\tprivate replaceActionBar: ActionBar;\n\treplaceInputFocusTracker: dom.IFocusTracker;\n\tprivate replaceInputBoxFocused: IContextKey<boolean>;\n\tprivate _replaceHistoryDelayer: Delayer<void>;\n\n\tprivate ignoreGlobalFindBufferOnNextFocus = false;\n\tprivate previousGlobalFindBufferValue: string;\n\n\tprivate _onSearchSubmit = this._register(new Emitter<void>());\n\treadonly onSearchSubmit: Event<void> = this._onSearchSubmit.event;\n\n\tprivate _onSearchCancel = this._register(new Emitter<void>());\n\treadonly onSearchCancel: Event<void> = this._onSearchCancel.event;\n\n\tprivate _onReplaceToggled = this._register(new Emitter<void>());\n\treadonly onReplaceToggled: Event<void> = this._onReplaceToggled.event;\n\n\tprivate _onReplaceStateChange = this._register(new Emitter<boolean>());\n\treadonly onReplaceStateChange: Event<boolean> = this._onReplaceStateChange.event;\n\n\tprivate _onReplaceValueChanged = this._register(new Emitter<void>());\n\treadonly onReplaceValueChanged: Event<void> = this._onReplaceValueChanged.event;\n\n\tprivate _onReplaceAll = this._register(new Emitter<void>());\n\treadonly onReplaceAll: Event<void> = this._onReplaceAll.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\treadonly onBlur: Event<void> = this._onBlur.event;\n\n\tprivate _onDidHeightChange = this._register(new Emitter<void>());\n\treadonly onDidHeightChange: Event<void> = this._onDidHeightChange.event;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\toptions: ISearchWidgetOptions,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly keyBindingService: IKeybindingService,\n\t\t@IClipboardService private readonly clipboardServce: IClipboardService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.replaceActive = Constants.ReplaceActiveKey.bindTo(this.contextKeyService);\n\t\tthis.searchInputBoxFocused = Constants.SearchInputBoxFocusedKey.bindTo(this.contextKeyService);\n\t\tthis.replaceInputBoxFocused = Constants.ReplaceInputBoxFocusedKey.bindTo(this.contextKeyService);\n\t\tthis._replaceHistoryDelayer = new Delayer<void>(500);\n\t\tthis.render(container, options);\n\n\t\tthis.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('editor.accessibilitySupport')) {\n\t\t\t\tthis.updateAccessibilitySupport();\n\t\t\t}\n\t\t});\n\t\tthis.accessibilityService.onDidChangeAccessibilitySupport(() => this.updateAccessibilitySupport());\n\t\tthis.updateAccessibilitySupport();\n\t}\n\n\tfocus(select: boolean = true, focusReplace: boolean = false, suppressGlobalSearchBuffer = false): void {\n\t\tthis.ignoreGlobalFindBufferOnNextFocus = suppressGlobalSearchBuffer;\n\n\t\tif (focusReplace && this.isReplaceShown()) {\n\t\t\tthis.replaceInput.focus();\n\t\t\tif (select) {\n\t\t\t\tthis.replaceInput.select();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.searchInput.focus();\n\t\t\tif (select) {\n\t\t\t\tthis.searchInput.select();\n\t\t\t}\n\t\t}\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.searchInput.inputBox.layout();\n\t\tthis.replaceInput.width = width - 28;\n\t\tthis.replaceInput.layout();\n\t}\n\n\tclear() {\n\t\tthis.searchInput.clear();\n\t\tthis.replaceInput.value = '';\n\t\tthis.setReplaceAllActionState(false);\n\t}\n\n\tisReplaceShown(): boolean {\n\t\treturn !dom.hasClass(this.replaceContainer, 'disabled');\n\t}\n\n\tisReplaceActive(): boolean {\n\t\treturn !!this.replaceActive.get();\n\t}\n\n\tgetReplaceValue(): string {\n\t\treturn this.replaceInput.value;\n\t}\n\n\ttoggleReplace(show?: boolean): void {\n\t\tif (show === undefined || show !== this.isReplaceShown()) {\n\t\t\tthis.onToggleReplaceButton();\n\t\t}\n\t}\n\n\tgetSearchHistory(): string[] {\n\t\treturn this.searchInput.inputBox.getHistory();\n\t}\n\n\tgetReplaceHistory(): string[] {\n\t\treturn this.replaceInput.getHistory();\n\t}\n\n\tclearHistory(): void {\n\t\tthis.searchInput.inputBox.clearHistory();\n\t}\n\n\tshowNextSearchTerm() {\n\t\tthis.searchInput.inputBox.showNextValue();\n\t}\n\n\tshowPreviousSearchTerm() {\n\t\tthis.searchInput.inputBox.showPreviousValue();\n\t}\n\n\tshowNextReplaceTerm() {\n\t\tthis.replaceInput.showNextValue();\n\t}\n\n\tshowPreviousReplaceTerm() {\n\t\tthis.replaceInput.showPreviousValue();\n\t}\n\n\tsearchInputHasFocus(): boolean {\n\t\treturn !!this.searchInputBoxFocused.get();\n\t}\n\n\treplaceInputHasFocus(): boolean {\n\t\treturn this.replaceInput.hasFocus();\n\t}\n\n\tfocusReplaceAllAction(): void {\n\t\tthis.replaceActionBar.focus(true);\n\t}\n\n\tfocusRegexAction(): void {\n\t\tthis.searchInput.focusOnRegex();\n\t}\n\n\tprivate render(container: HTMLElement, options: ISearchWidgetOptions): void {\n\t\tthis.domNode = dom.append(container, dom.$('.search-widget'));\n\t\tthis.domNode.style.position = 'relative';\n\n\t\tthis.renderToggleReplaceButton(this.domNode);\n\n\t\tthis.renderSearchInput(this.domNode, options);\n\t\tthis.renderReplaceInput(this.domNode, options);\n\t}\n\n\tprivate isScreenReaderOptimized() {\n\t\tconst detected = this.accessibilityService.getAccessibilitySupport() === AccessibilitySupport.Enabled;\n\t\tconst config = this.configurationService.getValue<IEditorOptions>('editor').accessibilitySupport;\n\t\treturn config === 'on' || (config === 'auto' && detected);\n\t}\n\n\tprivate updateAccessibilitySupport(): void {\n\t\tthis.searchInput.setFocusInputOnOptionClick(!this.isScreenReaderOptimized());\n\t}\n\n\tprivate renderToggleReplaceButton(parent: HTMLElement): void {\n\t\tconst opts: IButtonOptions = {\n\t\t\tbuttonBackground: undefined,\n\t\t\tbuttonBorder: undefined,\n\t\t\tbuttonForeground: undefined,\n\t\t\tbuttonHoverBackground: undefined\n\t\t};\n\t\tthis.toggleReplaceButton = this._register(new Button(parent, opts));\n\t\tthis.toggleReplaceButton.element.setAttribute('aria-expanded', 'false');\n\t\tthis.toggleReplaceButton.element.classList.add('collapse');\n\t\tthis.toggleReplaceButton.icon = 'toggle-replace-button';\n\t\t// TODO@joh need to dispose this listener eventually\n\t\tthis.toggleReplaceButton.onDidClick(() => this.onToggleReplaceButton());\n\t\tthis.toggleReplaceButton.element.title = nls.localize('search.replace.toggle.button.title', \"Toggle Replace\");\n\t}\n\n\tprivate renderSearchInput(parent: HTMLElement, options: ISearchWidgetOptions): void {\n\t\tconst inputOptions: IFindInputOptions = {\n\t\t\tlabel: nls.localize('label.Search', 'Search: Type Search Term and press Enter to search or Escape to cancel'),\n\t\t\tvalidation: (value: string) => this.validateSearchInput(value),\n\t\t\tplaceholder: nls.localize('search.placeHolder', \"Search\"),\n\t\t\tappendCaseSensitiveLabel: appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleCaseSensitiveCommandId), this.keyBindingService),\n\t\t\tappendWholeWordsLabel: appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleWholeWordCommandId), this.keyBindingService),\n\t\t\tappendRegexLabel: appendKeyBindingLabel('', this.keyBindingService.lookupKeybinding(Constants.ToggleRegexCommandId), this.keyBindingService),\n\t\t\thistory: options.searchHistory,\n\t\t\tflexibleHeight: true\n\t\t};\n\n\t\tconst searchInputContainer = dom.append(parent, dom.$('.search-container.input-box'));\n\t\tthis.searchInput = this._register(new ContextScopedFindInput(searchInputContainer, this.contextViewService, inputOptions, this.contextKeyService, true));\n\t\tthis._register(attachFindInputBoxStyler(this.searchInput, this.themeService));\n\t\tthis.searchInput.onKeyDown((keyboardEvent: IKeyboardEvent) => this.onSearchInputKeyDown(keyboardEvent));\n\t\tthis.searchInput.setValue(options.value || '');\n\t\tthis.searchInput.setRegex(!!options.isRegex);\n\t\tthis.searchInput.setCaseSensitive(!!options.isCaseSensitive);\n\t\tthis.searchInput.setWholeWords(!!options.isWholeWords);\n\t\tthis._register(this.onSearchSubmit(() => {\n\t\t\tthis.searchInput.inputBox.addToHistory();\n\t\t}));\n\t\tthis._register(this.searchInput.onCaseSensitiveKeyDown((keyboardEvent: IKeyboardEvent) => this.onCaseSensitiveKeyDown(keyboardEvent)));\n\t\tthis._register(this.searchInput.onRegexKeyDown((keyboardEvent: IKeyboardEvent) => this.onRegexKeyDown(keyboardEvent)));\n\t\tthis._register(this.searchInput.inputBox.onDidChange(() => this.onSearchInputChanged()));\n\t\tthis._register(this.searchInput.inputBox.onDidHeightChange(() => this._onDidHeightChange.fire()));\n\n\t\tthis._register(this.onReplaceValueChanged(() => {\n\t\t\tthis._replaceHistoryDelayer.trigger(() => this.replaceInput.addToHistory());\n\t\t}));\n\n\t\tthis.searchInputFocusTracker = this._register(dom.trackFocus(this.searchInput.inputBox.inputElement));\n\t\tthis._register(this.searchInputFocusTracker.onDidFocus(() => {\n\t\t\tthis.searchInputBoxFocused.set(true);\n\n\t\t\tconst useGlobalFindBuffer = this.searchConfiguration.globalFindClipboard;\n\t\t\tif (!this.ignoreGlobalFindBufferOnNextFocus && useGlobalFindBuffer) {\n\t\t\t\tconst globalBufferText = this.clipboardServce.readFindText();\n\t\t\t\tif (this.previousGlobalFindBufferValue !== globalBufferText) {\n\t\t\t\t\tthis.searchInput.inputBox.addToHistory();\n\t\t\t\t\tthis.searchInput.setValue(globalBufferText);\n\t\t\t\t\tthis.searchInput.select();\n\t\t\t\t}\n\n\t\t\t\tthis.previousGlobalFindBufferValue = globalBufferText;\n\t\t\t}\n\n\t\t\tthis.ignoreGlobalFindBufferOnNextFocus = false;\n\t\t}));\n\t\tthis._register(this.searchInputFocusTracker.onDidBlur(() => this.searchInputBoxFocused.set(false)));\n\t}\n\n\tprivate renderReplaceInput(parent: HTMLElement, options: ISearchWidgetOptions): void {\n\t\tthis.replaceContainer = dom.append(parent, dom.$('.replace-container.disabled'));\n\t\tconst replaceBox = dom.append(this.replaceContainer, dom.$('.input-box'));\n\t\tthis.replaceInput = this._register(new ContextScopedHistoryInputBox(replaceBox, this.contextViewService, {\n\t\t\tariaLabel: nls.localize('label.Replace', 'Replace: Type replace term and press Enter to preview or Escape to cancel'),\n\t\t\tplaceholder: nls.localize('search.replace.placeHolder', \"Replace\"),\n\t\t\thistory: options.replaceHistory || [],\n\t\t\tflexibleHeight: true\n\t\t}, this.contextKeyService));\n\t\tthis._register(attachInputBoxStyler(this.replaceInput, this.themeService));\n\t\tthis.onkeydown(this.replaceInput.inputElement, (keyboardEvent) => this.onReplaceInputKeyDown(keyboardEvent));\n\t\tthis.replaceInput.value = options.replaceValue || '';\n\t\tthis._register(this.replaceInput.onDidChange(() => this._onReplaceValueChanged.fire()));\n\t\tthis._register(this.replaceInput.onDidHeightChange(() => this._onDidHeightChange.fire()));\n\n\t\tthis.replaceAllAction = ReplaceAllAction.INSTANCE;\n\t\tthis.replaceAllAction.searchWidget = this;\n\t\tthis.replaceAllAction.label = SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n\t\tthis.replaceActionBar = this._register(new ActionBar(this.replaceContainer));\n\t\tthis.replaceActionBar.push([this.replaceAllAction], { icon: true, label: false });\n\t\tthis.onkeydown(this.replaceActionBar.domNode, (keyboardEvent) => this.onReplaceActionbarKeyDown(keyboardEvent));\n\n\t\tthis.replaceInputFocusTracker = this._register(dom.trackFocus(this.replaceInput.inputElement));\n\t\tthis._register(this.replaceInputFocusTracker.onDidFocus(() => this.replaceInputBoxFocused.set(true)));\n\t\tthis._register(this.replaceInputFocusTracker.onDidBlur(() => this.replaceInputBoxFocused.set(false)));\n\t}\n\n\ttriggerReplaceAll(): Promise<any> {\n\t\tthis._onReplaceAll.fire();\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprivate onToggleReplaceButton(): void {\n\t\tdom.toggleClass(this.replaceContainer, 'disabled');\n\t\tdom.toggleClass(this.toggleReplaceButton.element, 'collapse');\n\t\tdom.toggleClass(this.toggleReplaceButton.element, 'expand');\n\t\tthis.toggleReplaceButton.element.setAttribute('aria-expanded', this.isReplaceShown() ? 'true' : 'false');\n\t\tthis.updateReplaceActiveState();\n\t\tthis._onReplaceToggled.fire();\n\t}\n\n\tsetReplaceAllActionState(enabled: boolean): void {\n\t\tif (this.replaceAllAction.enabled !== enabled) {\n\t\t\tthis.replaceAllAction.enabled = enabled;\n\t\t\tthis.replaceAllAction.label = enabled ? SearchWidget.REPLACE_ALL_ENABLED_LABEL(this.keyBindingService) : SearchWidget.REPLACE_ALL_DISABLED_LABEL;\n\t\t\tthis.updateReplaceActiveState();\n\t\t}\n\t}\n\n\tprivate updateReplaceActiveState(): void {\n\t\tconst currentState = this.isReplaceActive();\n\t\tconst newState = this.isReplaceShown() && this.replaceAllAction.enabled;\n\t\tif (currentState !== newState) {\n\t\t\tthis.replaceActive.set(newState);\n\t\t\tthis._onReplaceStateChange.fire(newState);\n\t\t\tthis.replaceInput.layout();\n\t\t}\n\t}\n\n\tprivate validateSearchInput(value: string): IMessage | null {\n\t\tif (value.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!this.searchInput.getRegex()) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\t// tslint:disable-next-line: no-unused-expression\n\t\t\tnew RegExp(value);\n\t\t} catch (e) {\n\t\t\treturn { content: e.message };\n\t\t}\n\n\t\tif (strings.regExpContainsBackreference(value)) {\n\t\t\tif (!this.searchConfiguration.usePCRE2) {\n\t\t\t\treturn { content: nls.localize('regexp.backreferenceValidationFailure', \"Backreferences are not supported\") };\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate onSearchInputChanged(): void {\n\t\tthis.searchInput.clearMessage();\n\t\tthis.setReplaceAllActionState(false);\n\t}\n\n\tprivate onSearchInputKeyDown(keyboardEvent: IKeyboardEvent) {\n\t\tif (keyboardEvent.equals(KeyCode.Enter)) {\n\t\t\tthis.submitSearch();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.Escape)) {\n\t\t\tthis._onSearchCancel.fire();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.Tab)) {\n\t\t\tif (this.isReplaceShown()) {\n\t\t\t\tthis.replaceInput.focus();\n\t\t\t} else {\n\t\t\t\tthis.searchInput.focusOnCaseSensitive();\n\t\t\t}\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.UpArrow)) {\n\t\t\tconst ta = this.searchInput.domNode.querySelector('textarea');\n\t\t\tconst isMultiline = !!this.searchInput.getValue().match(/\\n/);\n\t\t\tif (ta && isMultiline && ta.selectionStart > 0) {\n\t\t\t\tkeyboardEvent.stopPropagation();\n\t\t\t}\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.DownArrow)) {\n\t\t\tconst ta = this.searchInput.domNode.querySelector('textarea');\n\t\t\tconst isMultiline = !!this.searchInput.getValue().match(/\\n/);\n\t\t\tif (ta && isMultiline && ta.selectionEnd < ta.value.length) {\n\t\t\t\tkeyboardEvent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onCaseSensitiveKeyDown(keyboardEvent: IKeyboardEvent) {\n\t\tif (keyboardEvent.equals(KeyMod.Shift | KeyCode.Tab)) {\n\t\t\tif (this.isReplaceShown()) {\n\t\t\t\tthis.replaceInput.focus();\n\t\t\t\tkeyboardEvent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onRegexKeyDown(keyboardEvent: IKeyboardEvent) {\n\t\tif (keyboardEvent.equals(KeyCode.Tab)) {\n\t\t\tif (this.isReplaceActive()) {\n\t\t\t\tthis.focusReplaceAllAction();\n\t\t\t} else {\n\t\t\t\tthis._onBlur.fire();\n\t\t\t}\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\t}\n\n\tprivate onReplaceInputKeyDown(keyboardEvent: IKeyboardEvent) {\n\t\tif (keyboardEvent.equals(KeyCode.Enter)) {\n\t\t\tthis.submitSearch();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.Tab)) {\n\t\t\tthis.searchInput.focusOnCaseSensitive();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyMod.Shift | KeyCode.Tab)) {\n\t\t\tthis.searchInput.focus();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.UpArrow)) {\n\t\t\tconst ta = this.searchInput.domNode.querySelector('textarea');\n\t\t\tif (ta && ta.selectionStart > 0) {\n\t\t\t\tkeyboardEvent.stopPropagation();\n\t\t\t}\n\t\t}\n\n\t\telse if (keyboardEvent.equals(KeyCode.DownArrow)) {\n\t\t\tconst ta = this.searchInput.domNode.querySelector('textarea');\n\t\t\tif (ta && ta.selectionEnd < ta.value.length) {\n\t\t\t\tkeyboardEvent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onReplaceActionbarKeyDown(keyboardEvent: IKeyboardEvent) {\n\t\tif (keyboardEvent.equals(KeyMod.Shift | KeyCode.Tab)) {\n\t\t\tthis.focusRegexAction();\n\t\t\tkeyboardEvent.preventDefault();\n\t\t}\n\t}\n\n\tprivate submitSearch(): void {\n\t\tthis.searchInput.validate();\n\t\tif (!this.searchInput.inputBox.isInputValid()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.searchInput.getValue();\n\t\tconst useGlobalFindBuffer = this.searchConfiguration.globalFindClipboard;\n\t\tif (value) {\n\t\t\tif (useGlobalFindBuffer) {\n\t\t\t\tthis.clipboardServce.writeFindText(value);\n\t\t\t}\n\n\t\t\tthis._onSearchSubmit.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.setReplaceAllActionState(false);\n\t\tsuper.dispose();\n\t}\n\n\tprivate get searchConfiguration(): ISearchConfigurationProperties {\n\t\treturn this.configurationService.getValue<ISearchConfigurationProperties>('search');\n\t}\n}\n\nexport function registerContributions() {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\tid: ReplaceAllAction.ID,\n\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, CONTEXT_FIND_WIDGET_NOT_VISIBLE),\n\t\tprimary: KeyMod.Alt | KeyMod.CtrlCmd | KeyCode.Enter,\n\t\thandler: accessor => {\n\t\t\tif (isSearchViewFocused(accessor.get(IViewletService), accessor.get(IPanelService))) {\n\t\t\t\tReplaceAllAction.INSTANCE.run();\n\t\t\t}\n\t\t}\n\t});\n}\n"]}]}