{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorWidgets.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorWidgets.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar workspaces_1 = require(\"vs/platform/workspaces/common/workspaces\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar nls_1 = require(\"vs/nls\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar FloatingClickWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(FloatingClickWidget, _super);\n    function FloatingClickWidget(editor, label, keyBindingAction, keybindingService, themeService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.label = label;\n        _this.themeService = themeService;\n        _this._onClick = _this._register(new event_1.Emitter());\n        if (keyBindingAction) {\n            var keybinding = keybindingService.lookupKeybinding(keyBindingAction);\n            if (keybinding) {\n                _this.label += \" (\" + keybinding.getLabel() + \")\";\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(FloatingClickWidget.prototype, \"onClick\", {\n        get: function () { return this._onClick.event; },\n        enumerable: true,\n        configurable: true\n    });\n    FloatingClickWidget.prototype.getId = function () {\n        return 'editor.overlayWidget.floatingClickWidget';\n    };\n    FloatingClickWidget.prototype.getDomNode = function () {\n        return this._domNode;\n    };\n    FloatingClickWidget.prototype.getPosition = function () {\n        return {\n            preference: editorBrowser_1.OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n        };\n    };\n    FloatingClickWidget.prototype.render = function () {\n        var _this = this;\n        this._domNode = dom_1.$('.floating-click-widget');\n        this._register(styler_1.attachStylerCallback(this.themeService, { buttonBackground: colorRegistry_1.buttonBackground, buttonForeground: colorRegistry_1.buttonForeground, editorBackground: colorRegistry_1.editorBackground, editorForeground: colorRegistry_1.editorForeground, contrastBorder: colorRegistry_1.contrastBorder }, function (colors) {\n            var backgroundColor = colors.buttonBackground ? colors.buttonBackground : colors.editorBackground;\n            if (backgroundColor) {\n                _this._domNode.style.backgroundColor = backgroundColor.toString();\n            }\n            var foregroundColor = colors.buttonForeground ? colors.buttonForeground : colors.editorForeground;\n            if (foregroundColor) {\n                _this._domNode.style.color = foregroundColor.toString();\n            }\n            var borderColor = colors.contrastBorder ? colors.contrastBorder.toString() : null;\n            _this._domNode.style.borderWidth = borderColor ? '1px' : null;\n            _this._domNode.style.borderStyle = borderColor ? 'solid' : null;\n            _this._domNode.style.borderColor = borderColor;\n        }));\n        dom_1.append(this._domNode, dom_1.$('')).textContent = this.label;\n        this.onclick(this._domNode, function (e) { return _this._onClick.fire(); });\n        this.editor.addOverlayWidget(this);\n    };\n    FloatingClickWidget.prototype.dispose = function () {\n        this.editor.removeOverlayWidget(this);\n        _super.prototype.dispose.call(this);\n    };\n    FloatingClickWidget = tslib_1.__decorate([\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, themeService_1.IThemeService)\n    ], FloatingClickWidget);\n    return FloatingClickWidget;\n}(widget_1.Widget));\nexports.FloatingClickWidget = FloatingClickWidget;\nvar OpenWorkspaceButtonContribution = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenWorkspaceButtonContribution, _super);\n    function OpenWorkspaceButtonContribution(editor, instantiationService, windowService, contextService, fileService) {\n        var _this = _super.call(this) || this;\n        _this.editor = editor;\n        _this.instantiationService = instantiationService;\n        _this.windowService = windowService;\n        _this.contextService = contextService;\n        _this.fileService = fileService;\n        _this.update();\n        _this.registerListeners();\n        return _this;\n    }\n    OpenWorkspaceButtonContribution.get = function (editor) {\n        return editor.getContribution(OpenWorkspaceButtonContribution.ID);\n    };\n    OpenWorkspaceButtonContribution.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(this.editor.onDidChangeModel(function (e) { return _this.update(); }));\n    };\n    OpenWorkspaceButtonContribution.prototype.getId = function () {\n        return OpenWorkspaceButtonContribution.ID;\n    };\n    OpenWorkspaceButtonContribution.prototype.update = function () {\n        if (!this.shouldShowButton(this.editor)) {\n            this.disposeOpenWorkspaceWidgetRenderer();\n            return;\n        }\n        this.createOpenWorkspaceWidgetRenderer();\n    };\n    OpenWorkspaceButtonContribution.prototype.shouldShowButton = function (editor) {\n        var model = editor.getModel();\n        if (!model) {\n            return false; // we need a model\n        }\n        if (!workspaces_1.hasWorkspaceFileExtension(model.uri.fsPath)) {\n            return false; // we need a workspace file\n        }\n        if (!this.fileService.canHandleResource(model.uri)) {\n            return false; // needs to be backed by a file service\n        }\n        if (this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.WORKSPACE) {\n            var workspaceConfiguration = this.contextService.getWorkspace().configuration;\n            if (workspaceConfiguration && resources_1.isEqual(workspaceConfiguration, model.uri)) {\n                return false; // already inside workspace\n            }\n        }\n        return true;\n    };\n    OpenWorkspaceButtonContribution.prototype.createOpenWorkspaceWidgetRenderer = function () {\n        var _this = this;\n        if (!this.openWorkspaceButton) {\n            this.openWorkspaceButton = this.instantiationService.createInstance(FloatingClickWidget, this.editor, nls_1.localize('openWorkspace', \"Open Workspace\"), null);\n            this._register(this.openWorkspaceButton.onClick(function () {\n                var model = _this.editor.getModel();\n                if (model) {\n                    _this.windowService.openWindow([{ uri: model.uri, typeHint: 'file' }]);\n                }\n            }));\n            this.openWorkspaceButton.render();\n        }\n    };\n    OpenWorkspaceButtonContribution.prototype.disposeOpenWorkspaceWidgetRenderer = function () {\n        this.openWorkspaceButton = lifecycle_1.dispose(this.openWorkspaceButton);\n    };\n    OpenWorkspaceButtonContribution.prototype.dispose = function () {\n        this.disposeOpenWorkspaceWidgetRenderer();\n        _super.prototype.dispose.call(this);\n    };\n    OpenWorkspaceButtonContribution.ID = 'editor.contrib.openWorkspaceButton';\n    OpenWorkspaceButtonContribution = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, windows_1.IWindowService),\n        tslib_1.__param(3, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(4, files_1.IFileService)\n    ], OpenWorkspaceButtonContribution);\n    return OpenWorkspaceButtonContribution;\n}(lifecycle_1.Disposable));\nexports.OpenWorkspaceButtonContribution = OpenWorkspaceButtonContribution;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorWidgets.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/editorWidgets.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { IOverlayWidget, ICodeEditor, IOverlayWidgetPosition, OverlayWidgetPositionPreference } from 'vs/editor/browser/editorBrowser';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { $, append } from 'vs/base/browser/dom';\nimport { attachStylerCallback } from 'vs/platform/theme/common/styler';\nimport { buttonBackground, buttonForeground, editorBackground, editorForeground, contrastBorder } from 'vs/platform/theme/common/colorRegistry';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWindowService } from 'vs/platform/windows/common/windows';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\nimport { Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { localize } from 'vs/nls';\nimport { IEditorContribution } from 'vs/editor/common/editorCommon';\nimport { isEqual } from 'vs/base/common/resources';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nexport class FloatingClickWidget extends Widget implements IOverlayWidget {\n\n\tprivate readonly _onClick: Emitter<void> = this._register(new Emitter<void>());\n\tget onClick(): Event<void> { return this._onClick.event; }\n\n\tprivate _domNode: HTMLElement;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\tprivate label: string,\n\t\tkeyBindingAction: string,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IThemeService private readonly themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\tif (keyBindingAction) {\n\t\t\tconst keybinding = keybindingService.lookupKeybinding(keyBindingAction);\n\t\t\tif (keybinding) {\n\t\t\t\tthis.label += ` (${keybinding.getLabel()})`;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn 'editor.overlayWidget.floatingClickWidget';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tgetPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n\t\t};\n\t}\n\n\trender() {\n\t\tthis._domNode = $('.floating-click-widget');\n\n\t\tthis._register(attachStylerCallback(this.themeService, { buttonBackground, buttonForeground, editorBackground, editorForeground, contrastBorder }, colors => {\n\t\t\tconst backgroundColor = colors.buttonBackground ? colors.buttonBackground : colors.editorBackground;\n\t\t\tif (backgroundColor) {\n\t\t\t\tthis._domNode.style.backgroundColor = backgroundColor.toString();\n\t\t\t}\n\n\t\t\tconst foregroundColor = colors.buttonForeground ? colors.buttonForeground : colors.editorForeground;\n\t\t\tif (foregroundColor) {\n\t\t\t\tthis._domNode.style.color = foregroundColor.toString();\n\t\t\t}\n\n\t\t\tconst borderColor = colors.contrastBorder ? colors.contrastBorder.toString() : null;\n\t\t\tthis._domNode.style.borderWidth = borderColor ? '1px' : null;\n\t\t\tthis._domNode.style.borderStyle = borderColor ? 'solid' : null;\n\t\t\tthis._domNode.style.borderColor = borderColor;\n\t\t}));\n\n\t\tappend(this._domNode, $('')).textContent = this.label;\n\n\t\tthis.onclick(this._domNode, e => this._onClick.fire());\n\n\t\tthis.editor.addOverlayWidget(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.editor.removeOverlayWidget(this);\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class OpenWorkspaceButtonContribution extends Disposable implements IEditorContribution {\n\n\tstatic get(editor: ICodeEditor): OpenWorkspaceButtonContribution {\n\t\treturn editor.getContribution<OpenWorkspaceButtonContribution>(OpenWorkspaceButtonContribution.ID);\n\t}\n\n\tprivate static readonly ID = 'editor.contrib.openWorkspaceButton';\n\n\tprivate openWorkspaceButton: FloatingClickWidget;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\n\t\tthis.update();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.editor.onDidChangeModel(e => this.update()));\n\t}\n\n\tgetId(): string {\n\t\treturn OpenWorkspaceButtonContribution.ID;\n\t}\n\n\tprivate update(): void {\n\t\tif (!this.shouldShowButton(this.editor)) {\n\t\t\tthis.disposeOpenWorkspaceWidgetRenderer();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.createOpenWorkspaceWidgetRenderer();\n\t}\n\n\tprivate shouldShowButton(editor: ICodeEditor): boolean {\n\t\tconst model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn false; // we need a model\n\t\t}\n\n\t\tif (!hasWorkspaceFileExtension(model.uri.fsPath)) {\n\t\t\treturn false; // we need a workspace file\n\t\t}\n\n\t\tif (!this.fileService.canHandleResource(model.uri)) {\n\t\t\treturn false; // needs to be backed by a file service\n\t\t}\n\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tconst workspaceConfiguration = this.contextService.getWorkspace().configuration;\n\t\t\tif (workspaceConfiguration && isEqual(workspaceConfiguration, model.uri)) {\n\t\t\t\treturn false; // already inside workspace\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate createOpenWorkspaceWidgetRenderer(): void {\n\t\tif (!this.openWorkspaceButton) {\n\t\t\tthis.openWorkspaceButton = this.instantiationService.createInstance(FloatingClickWidget, this.editor, localize('openWorkspace', \"Open Workspace\"), null);\n\t\t\tthis._register(this.openWorkspaceButton.onClick(() => {\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (model) {\n\t\t\t\t\tthis.windowService.openWindow([{ uri: model.uri, typeHint: 'file' }]);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.openWorkspaceButton.render();\n\t\t}\n\t}\n\n\tprivate disposeOpenWorkspaceWidgetRenderer(): void {\n\t\tthis.openWorkspaceButton = dispose(this.openWorkspaceButton);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposeOpenWorkspaceWidgetRenderer();\n\n\t\tsuper.dispose();\n\t}\n}"]}]}