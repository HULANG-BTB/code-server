{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/broadcast/common/broadcast.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/broadcast/common/broadcast.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar event_1 = require(\"vs/base/common/event\");\nexports.IBroadcastService = instantiation_1.createDecorator('broadcastService');\nvar NullBroadcastService = /** @class */ (function () {\n    function NullBroadcastService() {\n        this.onBroadcast = event_1.Event.None;\n    }\n    NullBroadcastService.prototype.broadcast = function (_b) {\n    };\n    return NullBroadcastService;\n}());\nexports.NullBroadcastService = NullBroadcastService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/broadcast/common/broadcast.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/broadcast/common/broadcast.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gFAAiF;AACjF,8CAA6C;AAEhC,QAAA,iBAAiB,GAAG,+BAAe,CAAoB,kBAAkB,CAAC,CAAC;AAexF;IAAA;QAEC,gBAAW,GAAsB,aAAK,CAAC,IAAI,CAAC;IAI7C,CAAC;IAHA,wCAAS,GAAT,UAAU,EAAc;IAExB,CAAC;IACF,2BAAC;AAAD,CAAC,AAND,IAMC;AANY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport const IBroadcastService = createDecorator<IBroadcastService>('broadcastService');\n\nexport interface IBroadcast {\n\tchannel: string;\n\tpayload: any;\n}\n\nexport interface IBroadcastService {\n\t_serviceBrand: any;\n\n\tonBroadcast: Event<IBroadcast>;\n\n\tbroadcast(b: IBroadcast): void;\n}\n\nexport class NullBroadcastService implements IBroadcastService {\n\t_serviceBrand: any;\n\tonBroadcast: Event<IBroadcast> = Event.None;\n\tbroadcast(_b: IBroadcast): void {\n\n\t}\n}\n"]}]}