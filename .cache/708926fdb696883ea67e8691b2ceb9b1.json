{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/review\");\nvar nls = require(\"vs/nls\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes = require(\"vs/editor/common/modes\");\nvar referencesWidget_1 = require(\"vs/editor/contrib/referenceSearch/referencesWidget\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar commentThreadWidget_1 = require(\"vs/workbench/contrib/comments/browser/commentThreadWidget\");\nvar commentService_1 = require(\"vs/workbench/contrib/comments/browser/commentService\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar async_1 = require(\"vs/base/common/async\");\nvar commentGlyphWidget_1 = require(\"vs/workbench/contrib/comments/browser/commentGlyphWidget\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar simpleCommentEditor_1 = require(\"vs/workbench/contrib/comments/browser/simpleCommentEditor\");\nvar errors_1 = require(\"vs/base/common/errors\");\nexports.ID = 'editor.contrib.review';\nvar ReviewViewZone = /** @class */ (function () {\n    function ReviewViewZone(afterLineNumber, onDomNodeTop) {\n        this.afterLineNumber = afterLineNumber;\n        this.callback = onDomNodeTop;\n        this.domNode = dom_1.$('.review-viewzone');\n    }\n    ReviewViewZone.prototype.onDomNodeTop = function (top) {\n        this.callback(top);\n    };\n    return ReviewViewZone;\n}());\nexports.ReviewViewZone = ReviewViewZone;\nvar CommentingRangeDecoration = /** @class */ (function () {\n    function CommentingRangeDecoration(_editor, _ownerId, _extensionId, _range, _reply, commentingOptions, commentingRangesInfo) {\n        this._editor = _editor;\n        this._ownerId = _ownerId;\n        this._extensionId = _extensionId;\n        this._range = _range;\n        this._reply = _reply;\n        this.commentingRangesInfo = commentingRangesInfo;\n        var startLineNumber = _range.startLineNumber;\n        var endLineNumber = _range.endLineNumber;\n        var commentingRangeDecorations = [{\n                range: {\n                    startLineNumber: startLineNumber, startColumn: 1,\n                    endLineNumber: endLineNumber, endColumn: 1\n                },\n                options: commentingOptions\n            }];\n        var model = this._editor.getModel();\n        if (model) {\n            this._decorationId = model.deltaDecorations([this._decorationId], commentingRangeDecorations)[0];\n        }\n    }\n    Object.defineProperty(CommentingRangeDecoration.prototype, \"id\", {\n        get: function () {\n            return this._decorationId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CommentingRangeDecoration.prototype.getCommentAction = function () {\n        return {\n            extensionId: this._extensionId,\n            replyCommand: this._reply,\n            ownerId: this._ownerId,\n            commentingRangesInfo: this.commentingRangesInfo\n        };\n    };\n    CommentingRangeDecoration.prototype.getOriginalRange = function () {\n        return this._range;\n    };\n    CommentingRangeDecoration.prototype.getActiveRange = function () {\n        return this._editor.getModel().getDecorationRange(this._decorationId);\n    };\n    return CommentingRangeDecoration;\n}());\nvar CommentingRangeDecorator = /** @class */ (function () {\n    function CommentingRangeDecorator() {\n        this.commentingRangeDecorations = [];\n        this.disposables = [];\n        var decorationOptions = {\n            isWholeLine: true,\n            linesDecorationsClassName: 'comment-range-glyph comment-diff-added'\n        };\n        this.decorationOptions = textModel_1.ModelDecorationOptions.createDynamic(decorationOptions);\n    }\n    CommentingRangeDecorator.prototype.update = function (editor, commentInfos) {\n        var _this = this;\n        var model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        var commentingRangeDecorations = [];\n        var _loop_1 = function (info) {\n            if (Array.isArray(info.commentingRanges)) {\n                info.commentingRanges.forEach(function (range) {\n                    commentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.owner, info.extensionId, range, info.reply, _this.decorationOptions));\n                });\n            }\n            else {\n                (info.commentingRanges ? info.commentingRanges.ranges : []).forEach(function (range) {\n                    commentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.owner, info.extensionId, range, info.commentingRanges.newCommentThreadCommand, _this.decorationOptions, info.commentingRanges));\n                });\n            }\n        };\n        for (var _i = 0, commentInfos_1 = commentInfos; _i < commentInfos_1.length; _i++) {\n            var info = commentInfos_1[_i];\n            _loop_1(info);\n        }\n        var oldDecorations = this.commentingRangeDecorations.map(function (decoration) { return decoration.id; });\n        editor.deltaDecorations(oldDecorations, []);\n        this.commentingRangeDecorations = commentingRangeDecorations;\n    };\n    CommentingRangeDecorator.prototype.getMatchedCommentAction = function (line) {\n        for (var _i = 0, _a = this.commentingRangeDecorations; _i < _a.length; _i++) {\n            var decoration = _a[_i];\n            var range = decoration.getActiveRange();\n            if (range && range.startLineNumber <= line && line <= range.endLineNumber) {\n                return decoration.getCommentAction();\n            }\n        }\n        return null;\n    };\n    CommentingRangeDecorator.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        this.commentingRangeDecorations = [];\n    };\n    return CommentingRangeDecorator;\n}());\nvar ReviewController = /** @class */ (function () {\n    function ReviewController(editor, commentService, _commandService, notificationService, instantiationService, codeEditorService, contextMenuService) {\n        var _this = this;\n        this.commentService = commentService;\n        this._commandService = _commandService;\n        this.notificationService = notificationService;\n        this.instantiationService = instantiationService;\n        this.codeEditorService = codeEditorService;\n        this.contextMenuService = contextMenuService;\n        this.mouseDownInfo = null;\n        this._commentingRangeSpaceReserved = false;\n        this._emptyThreadsToAddQueue = [];\n        this.editor = editor;\n        this.globalToDispose = [];\n        this.localToDispose = [];\n        this._commentInfos = [];\n        this._commentWidgets = [];\n        this._pendingCommentCache = {};\n        this._pendingNewCommentCache = {};\n        this._computePromise = null;\n        this._commentingRangeDecorator = new CommentingRangeDecorator();\n        this.globalToDispose.push(this.commentService.onDidDeleteDataProvider(function (ownerId) {\n            // Remove new comment widget and glyph, refresh comments\n            if (_this._newCommentWidget && _this._newCommentWidget.owner === ownerId) {\n                _this._newCommentWidget.dispose();\n                _this._newCommentWidget = undefined;\n            }\n            delete _this._pendingCommentCache[ownerId];\n            _this.beginCompute();\n        }));\n        this.globalToDispose.push(this.commentService.onDidSetDataProvider(function (_) { return _this.beginCompute(); }));\n        this.globalToDispose.push(this.commentService.onDidSetResourceCommentInfos(function (e) {\n            var editorURI = _this.editor && _this.editor.hasModel() && _this.editor.getModel().uri;\n            if (editorURI && editorURI.toString() === e.resource.toString()) {\n                _this.setComments(e.commentInfos.filter(function (commentInfo) { return commentInfo !== null; }));\n            }\n        }));\n        this.globalToDispose.push(this.editor.onDidChangeModel(function (e) { return _this.onModelChanged(e); }));\n        this.codeEditorService.registerDecorationType(commentThreadWidget_1.COMMENTEDITOR_DECORATION_KEY, {});\n        this.beginCompute();\n    }\n    ReviewController.prototype.beginCompute = function () {\n        var _this = this;\n        this._computePromise = async_1.createCancelablePromise(function (token) {\n            var editorURI = _this.editor && _this.editor.hasModel() && _this.editor.getModel().uri;\n            if (editorURI) {\n                return _this.commentService.getComments(editorURI);\n            }\n            return Promise.resolve([]);\n        });\n        return this._computePromise.then(function (commentInfos) {\n            _this.setComments(arrays_1.coalesce(commentInfos));\n            _this._computePromise = null;\n        }, function (error) { return console.log(error); });\n    };\n    ReviewController.prototype.beginComputeCommentingRanges = function () {\n        var _this = this;\n        if (this._computeCommentingRangeScheduler) {\n            if (this._computeCommentingRangePromise) {\n                this._computeCommentingRangePromise.cancel();\n                this._computeCommentingRangePromise = null;\n            }\n            this._computeCommentingRangeScheduler.trigger(function () {\n                var editorURI = _this.editor && _this.editor.hasModel() && _this.editor.getModel().uri;\n                if (editorURI) {\n                    return _this.commentService.getComments(editorURI);\n                }\n                return Promise.resolve([]);\n            }).then(function (commentInfos) {\n                var meaningfulCommentInfos = arrays_1.coalesce(commentInfos);\n                _this._commentingRangeDecorator.update(_this.editor, meaningfulCommentInfos);\n            }, function (err) {\n                errors_1.onUnexpectedError(err);\n                return null;\n            });\n        }\n    };\n    ReviewController.get = function (editor) {\n        return editor.getContribution(exports.ID);\n    };\n    ReviewController.prototype.revealCommentThread = function (threadId, commentId, fetchOnceIfNotExist) {\n        var _this = this;\n        var commentThreadWidget = this._commentWidgets.filter(function (widget) { return widget.commentThread.threadId === threadId; });\n        if (commentThreadWidget.length === 1) {\n            commentThreadWidget[0].reveal(commentId);\n        }\n        else if (fetchOnceIfNotExist) {\n            this.beginCompute().then(function (_) {\n                _this.revealCommentThread(threadId, commentId, false);\n            });\n        }\n    };\n    ReviewController.prototype.nextCommentThread = function () {\n        if (!this._commentWidgets.length || !this.editor.hasModel()) {\n            return;\n        }\n        var after = this.editor.getSelection().getEndPosition();\n        var sortedWidgets = this._commentWidgets.sort(function (a, b) {\n            if (a.commentThread.range.startLineNumber < b.commentThread.range.startLineNumber) {\n                return -1;\n            }\n            if (a.commentThread.range.startLineNumber > b.commentThread.range.startLineNumber) {\n                return 1;\n            }\n            if (a.commentThread.range.startColumn < b.commentThread.range.startColumn) {\n                return -1;\n            }\n            if (a.commentThread.range.startColumn > b.commentThread.range.startColumn) {\n                return 1;\n            }\n            return 0;\n        });\n        var idx = arrays_1.findFirstInSorted(sortedWidgets, function (widget) {\n            if (widget.commentThread.range.startLineNumber > after.lineNumber) {\n                return true;\n            }\n            if (widget.commentThread.range.startLineNumber < after.lineNumber) {\n                return false;\n            }\n            if (widget.commentThread.range.startColumn > after.column) {\n                return true;\n            }\n            return false;\n        });\n        if (idx === this._commentWidgets.length) {\n            this._commentWidgets[0].reveal();\n            this.editor.setSelection(this._commentWidgets[0].commentThread.range);\n        }\n        else {\n            sortedWidgets[idx].reveal();\n            this.editor.setSelection(sortedWidgets[idx].commentThread.range);\n        }\n    };\n    ReviewController.prototype.getId = function () {\n        return exports.ID;\n    };\n    ReviewController.prototype.dispose = function () {\n        this.globalToDispose = lifecycle_1.dispose(this.globalToDispose);\n        this.localToDispose = lifecycle_1.dispose(this.localToDispose);\n        this._commentWidgets.forEach(function (widget) { return widget.dispose(); });\n        if (this._newCommentWidget) {\n            this._newCommentWidget.dispose();\n            this._newCommentWidget = undefined;\n        }\n        this.editor = null; // Strict null override — nulling out in dispose\n    };\n    ReviewController.prototype.onModelChanged = function (e) {\n        var _this = this;\n        this.localToDispose = lifecycle_1.dispose(this.localToDispose);\n        if (this._newCommentWidget) {\n            var pendingNewComment = this._newCommentWidget.getPendingComment();\n            if (e.oldModelUrl) {\n                if (pendingNewComment) {\n                    // we can't fetch zone widget's position as the model is already gone\n                    var position = this._newCommentWidget.getPosition();\n                    if (position) {\n                        this._pendingNewCommentCache[e.oldModelUrl.toString()] = {\n                            lineNumber: position.lineNumber,\n                            ownerId: this._newCommentWidget.owner,\n                            extensionId: this._newCommentWidget.extensionId,\n                            replyCommand: this._newCommentWidget.commentThread.reply,\n                            pendingComment: pendingNewComment,\n                            draftMode: this._newCommentWidget.draftMode\n                        };\n                    }\n                }\n                else {\n                    // clear cache if it is empty\n                    delete this._pendingNewCommentCache[e.oldModelUrl.toString()];\n                }\n            }\n            this._newCommentWidget.dispose();\n            this._newCommentWidget = undefined;\n        }\n        this.removeCommentWidgetsAndStoreCache();\n        if (e.newModelUrl && this._pendingNewCommentCache[e.newModelUrl.toString()]) {\n            var newCommentCache = this._pendingNewCommentCache[e.newModelUrl.toString()];\n            this.addComment(newCommentCache.lineNumber, newCommentCache.replyCommand, newCommentCache.ownerId, newCommentCache.extensionId, newCommentCache.draftMode, newCommentCache.pendingComment);\n        }\n        this.localToDispose.push(this.editor.onMouseDown(function (e) { return _this.onEditorMouseDown(e); }));\n        this.localToDispose.push(this.editor.onMouseUp(function (e) { return _this.onEditorMouseUp(e); }));\n        this._computeCommentingRangeScheduler = new async_1.Delayer(200);\n        this.localToDispose.push({\n            dispose: function () {\n                if (_this._computeCommentingRangeScheduler) {\n                    _this._computeCommentingRangeScheduler.cancel();\n                }\n                _this._computeCommentingRangeScheduler = null;\n            }\n        });\n        this.localToDispose.push(this.editor.onDidChangeModelContent(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                this.beginComputeCommentingRanges();\n                return [2 /*return*/];\n            });\n        }); }));\n        this.localToDispose.push(this.commentService.onDidUpdateCommentThreads(function (e) {\n            var editorURI = _this.editor && _this.editor.hasModel() && _this.editor.getModel().uri;\n            if (!editorURI) {\n                return;\n            }\n            var commentInfo = _this._commentInfos.filter(function (info) { return info.owner === e.owner; });\n            if (!commentInfo || !commentInfo.length) {\n                return;\n            }\n            var added = e.added.filter(function (thread) { return thread.resource && thread.resource.toString() === editorURI.toString(); });\n            var removed = e.removed.filter(function (thread) { return thread.resource && thread.resource.toString() === editorURI.toString(); });\n            var changed = e.changed.filter(function (thread) { return thread.resource && thread.resource.toString() === editorURI.toString(); });\n            var draftMode = e.draftMode;\n            commentInfo.forEach(function (info) { return info.draftMode = draftMode; });\n            _this._commentWidgets.filter(function (ZoneWidget) { return ZoneWidget.owner === e.owner; }).forEach(function (widget) { return widget.updateDraftMode(draftMode); });\n            if (_this._newCommentWidget && _this._newCommentWidget.owner === e.owner) {\n                _this._newCommentWidget.updateDraftMode(draftMode);\n            }\n            removed.forEach(function (thread) {\n                var matchedZones = _this._commentWidgets.filter(function (zoneWidget) { return zoneWidget.owner === e.owner && zoneWidget.commentThread.threadId === thread.threadId; });\n                if (matchedZones.length) {\n                    var matchedZone = matchedZones[0];\n                    var index = _this._commentWidgets.indexOf(matchedZone);\n                    _this._commentWidgets.splice(index, 1);\n                    matchedZone.dispose();\n                }\n            });\n            changed.forEach(function (thread) {\n                var matchedZones = _this._commentWidgets.filter(function (zoneWidget) { return zoneWidget.owner === e.owner && zoneWidget.commentThread.threadId === thread.threadId; });\n                if (matchedZones.length) {\n                    var matchedZone = matchedZones[0];\n                    matchedZone.update(thread);\n                }\n            });\n            added.forEach(function (thread) {\n                var pendingCommentText = _this._pendingCommentCache[e.owner] && _this._pendingCommentCache[e.owner][thread.threadId];\n                _this.displayCommentThread(e.owner, thread, pendingCommentText, draftMode);\n                _this._commentInfos.filter(function (info) { return info.owner === e.owner; })[0].threads.push(thread);\n            });\n        }));\n        this.beginCompute();\n    };\n    ReviewController.prototype.displayCommentThread = function (owner, thread, pendingComment, draftMode) {\n        var zoneWidget = this.instantiationService.createInstance(commentThreadWidget_1.ReviewZoneWidget, this.editor, owner, thread, pendingComment, draftMode);\n        zoneWidget.display(thread.range.startLineNumber);\n        this._commentWidgets.push(zoneWidget);\n    };\n    ReviewController.prototype.addComment = function (lineNumber, replyCommand, ownerId, extensionId, draftMode, pendingComment) {\n        var _this = this;\n        if (this._newCommentWidget) {\n            this.notificationService.warn(\"Please submit the comment at line \" + (this._newCommentWidget.position ? this._newCommentWidget.position.lineNumber : -1) + \" before creating a new one.\");\n            return;\n        }\n        // add new comment\n        this._newCommentWidget = this.instantiationService.createInstance(commentThreadWidget_1.ReviewZoneWidget, this.editor, ownerId, {\n            extensionId: extensionId,\n            threadId: null,\n            resource: null,\n            comments: [],\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: 0,\n                endLineNumber: lineNumber,\n                endColumn: 0\n            },\n            reply: replyCommand,\n            collapsibleState: modes.CommentThreadCollapsibleState.Expanded,\n        }, pendingComment, draftMode);\n        this.localToDispose.push(this._newCommentWidget.onDidClose(function (e) {\n            _this.clearNewCommentWidget();\n        }));\n        this.localToDispose.push(this._newCommentWidget.onDidCreateThread(function (commentWidget) {\n            var thread = commentWidget.commentThread;\n            _this._commentWidgets.push(commentWidget);\n            _this._commentInfos.filter(function (info) { return info.owner === commentWidget.owner; })[0].threads.push(thread);\n            _this.clearNewCommentWidget();\n        }));\n        this._newCommentWidget.display(lineNumber);\n    };\n    ReviewController.prototype.clearNewCommentWidget = function () {\n        this._newCommentWidget = undefined;\n        if (this.editor && this.editor.hasModel()) {\n            delete this._pendingNewCommentCache[this.editor.getModel().uri.toString()];\n        }\n    };\n    ReviewController.prototype.onEditorMouseDown = function (e) {\n        this.mouseDownInfo = null;\n        var range = e.target.range;\n        if (!range) {\n            return;\n        }\n        if (!e.event.leftButton) {\n            return;\n        }\n        if (e.target.type !== editorBrowser_1.MouseTargetType.GUTTER_LINE_DECORATIONS) {\n            return;\n        }\n        var data = e.target.detail;\n        var gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n        // don't collide with folding and git decorations\n        if (gutterOffsetX > 14) {\n            return;\n        }\n        this.mouseDownInfo = { lineNumber: range.startLineNumber };\n    };\n    ReviewController.prototype.onEditorMouseUp = function (e) {\n        if (!this.mouseDownInfo) {\n            return;\n        }\n        var lineNumber = this.mouseDownInfo.lineNumber;\n        this.mouseDownInfo = null;\n        var range = e.target.range;\n        if (!range || range.startLineNumber !== lineNumber) {\n            return;\n        }\n        if (e.target.type !== editorBrowser_1.MouseTargetType.GUTTER_LINE_DECORATIONS) {\n            return;\n        }\n        if (!e.target.element) {\n            return;\n        }\n        if (e.target.element.className.indexOf('comment-diff-added') >= 0) {\n            var lineNumber_1 = e.target.position.lineNumber;\n            this.addOrToggleCommentAtLine(lineNumber_1);\n        }\n    };\n    ReviewController.prototype.addOrToggleCommentAtLine = function (lineNumber) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var existingCommentsAtLine;\n            return tslib_1.__generator(this, function (_a) {\n                // If an add is already in progress, queue the next add and process it after the current one finishes to\n                // prevent empty comment threads from being added to the same line.\n                if (!this._addInProgress) {\n                    this._addInProgress = true;\n                    existingCommentsAtLine = this._commentWidgets.filter(function (widget) { return widget.getGlyphPosition() === lineNumber; });\n                    if (existingCommentsAtLine.length) {\n                        existingCommentsAtLine.forEach(function (widget) { return widget.toggleExpand(lineNumber); });\n                        this.processNextThreadToAdd();\n                        return [2 /*return*/];\n                    }\n                    else {\n                        this.addCommentAtLine(lineNumber);\n                    }\n                }\n                else {\n                    this._emptyThreadsToAddQueue.push(lineNumber);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    ReviewController.prototype.processNextThreadToAdd = function () {\n        this._addInProgress = false;\n        var lineNumber = this._emptyThreadsToAddQueue.shift();\n        if (lineNumber) {\n            this.addOrToggleCommentAtLine(lineNumber);\n        }\n    };\n    ReviewController.prototype.addCommentAtLine = function (lineNumber) {\n        var _this = this;\n        var _a;\n        var newCommentInfo = this._commentingRangeDecorator.getMatchedCommentAction(lineNumber);\n        if (!newCommentInfo || !this.editor.hasModel()) {\n            return Promise.resolve();\n        }\n        var replyCommand = newCommentInfo.replyCommand, ownerId = newCommentInfo.ownerId, extensionId = newCommentInfo.extensionId, commentingRangesInfo = newCommentInfo.commentingRangesInfo;\n        if (commentingRangesInfo) {\n            var range = new range_1.Range(lineNumber, 1, lineNumber, 1);\n            if (commentingRangesInfo.newCommentThreadCommand) {\n                if (replyCommand) {\n                    var commandId = replyCommand.id;\n                    var args = replyCommand.arguments || [];\n                    (_a = this._commandService).executeCommand.apply(_a, [commandId].concat(args));\n                    this._addInProgress = false;\n                }\n            }\n            else if (commentingRangesInfo.newCommentThreadCallback) {\n                return commentingRangesInfo.newCommentThreadCallback(this.editor.getModel().uri, range)\n                    .then(function (_) {\n                    _this.processNextThreadToAdd();\n                })\n                    .catch(function (e) {\n                    _this.notificationService.error(nls.localize('commentThreadAddFailure', \"Adding a new comment thread failed: {0}.\", e.message));\n                    _this.processNextThreadToAdd();\n                });\n            }\n        }\n        else {\n            var commentInfo = this._commentInfos.filter(function (info) { return info.owner === ownerId; });\n            if (!commentInfo || !commentInfo.length) {\n                this._addInProgress = false;\n                return Promise.resolve();\n            }\n            var draftMode = commentInfo[0].draftMode;\n            this.addComment(lineNumber, replyCommand, ownerId, extensionId, draftMode, null);\n            this._addInProgress = false;\n        }\n        return Promise.resolve();\n    };\n    ReviewController.prototype.setComments = function (commentInfos) {\n        var _this = this;\n        if (!this.editor) {\n            return;\n        }\n        this._commentInfos = commentInfos;\n        var lineDecorationsWidth = this.editor.getConfiguration().layoutInfo.decorationsWidth;\n        if (this._commentInfos.some(function (info) { return Boolean(info.commentingRanges && (Array.isArray(info.commentingRanges) ? info.commentingRanges : info.commentingRanges.ranges).length); })) {\n            if (!this._commentingRangeSpaceReserved) {\n                this._commentingRangeSpaceReserved = true;\n                var extraEditorClassName = [];\n                var configuredExtraClassName = this.editor.getRawConfiguration().extraEditorClassName;\n                if (configuredExtraClassName) {\n                    extraEditorClassName = configuredExtraClassName.split(' ');\n                }\n                if (this.editor.getConfiguration().contribInfo.folding) {\n                    lineDecorationsWidth -= 16;\n                }\n                lineDecorationsWidth += 9;\n                extraEditorClassName.push('inline-comment');\n                this.editor.updateOptions({\n                    extraEditorClassName: extraEditorClassName.join(' '),\n                    lineDecorationsWidth: lineDecorationsWidth\n                });\n                // we only update the lineDecorationsWidth property but keep the width of the whole editor.\n                var originalLayoutInfo = this.editor.getLayoutInfo();\n                this.editor.layout({\n                    width: originalLayoutInfo.width,\n                    height: originalLayoutInfo.height\n                });\n            }\n        }\n        // create viewzones\n        this.removeCommentWidgetsAndStoreCache();\n        this._commentInfos.forEach(function (info) {\n            var providerCacheStore = _this._pendingCommentCache[info.owner];\n            info.threads.forEach(function (thread) {\n                var pendingComment = null;\n                if (providerCacheStore) {\n                    pendingComment = providerCacheStore[thread.threadId];\n                }\n                if (pendingComment) {\n                    thread.collapsibleState = modes.CommentThreadCollapsibleState.Expanded;\n                }\n                _this.displayCommentThread(info.owner, thread, pendingComment, info.draftMode);\n            });\n        });\n        var commentingRanges = [];\n        this._commentInfos.forEach(function (info) {\n            commentingRanges.push.apply(commentingRanges, (Array.isArray(info.commentingRanges) ? info.commentingRanges : info.commentingRanges ? info.commentingRanges.ranges : []));\n        });\n        this._commentingRangeDecorator.update(this.editor, this._commentInfos);\n    };\n    ReviewController.prototype.closeWidget = function () {\n        if (this._newCommentWidget) {\n            this._newCommentWidget.dispose();\n            this._newCommentWidget = undefined;\n        }\n        if (this._commentWidgets) {\n            this._commentWidgets.forEach(function (widget) { return widget.hide(); });\n        }\n        this.editor.focus();\n        this.editor.revealRangeInCenter(this.editor.getSelection());\n    };\n    ReviewController.prototype.removeCommentWidgetsAndStoreCache = function () {\n        var _this = this;\n        if (this._commentWidgets) {\n            this._commentWidgets.forEach(function (zone) {\n                var pendingComment = zone.getPendingComment();\n                var providerCacheStore = _this._pendingCommentCache[zone.owner];\n                if (pendingComment) {\n                    if (!providerCacheStore) {\n                        _this._pendingCommentCache[zone.owner] = {};\n                    }\n                    _this._pendingCommentCache[zone.owner][zone.commentThread.threadId] = pendingComment;\n                }\n                else {\n                    if (providerCacheStore) {\n                        delete providerCacheStore[zone.commentThread.threadId];\n                    }\n                }\n                zone.dispose();\n            });\n        }\n        this._commentWidgets = [];\n    };\n    ReviewController = tslib_1.__decorate([\n        tslib_1.__param(1, commentService_1.ICommentService),\n        tslib_1.__param(2, commands_1.ICommandService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService),\n        tslib_1.__param(5, codeEditorService_1.ICodeEditorService),\n        tslib_1.__param(6, contextView_1.IContextMenuService)\n    ], ReviewController);\n    return ReviewController;\n}());\nexports.ReviewController = ReviewController;\nvar NextCommentThreadAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NextCommentThreadAction, _super);\n    function NextCommentThreadAction() {\n        return _super.call(this, {\n            id: 'editor.action.nextCommentThreadAction',\n            label: nls.localize('nextCommentThreadAction', \"Go to Next Comment Thread\"),\n            alias: 'Go to Next Comment Thread',\n            precondition: null,\n        }) || this;\n    }\n    NextCommentThreadAction.prototype.run = function (accessor, editor) {\n        var controller = ReviewController.get(editor);\n        if (controller) {\n            controller.nextCommentThread();\n        }\n    };\n    return NextCommentThreadAction;\n}(editorExtensions_1.EditorAction));\nexports.NextCommentThreadAction = NextCommentThreadAction;\neditorExtensions_1.registerEditorContribution(ReviewController);\neditorExtensions_1.registerEditorAction(NextCommentThreadAction);\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'workbench.action.addComment',\n    handler: function (accessor) {\n        var activeEditor = getActiveEditor(accessor);\n        if (!activeEditor) {\n            return Promise.resolve();\n        }\n        var controller = ReviewController.get(activeEditor);\n        if (!controller) {\n            return Promise.resolve();\n        }\n        var position = activeEditor.getPosition();\n        return controller.addOrToggleCommentAtLine(position.lineNumber);\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.submitComment',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib,\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Enter,\n    when: simpleCommentEditor_1.ctxCommentEditorFocused,\n    handler: function (accessor, args) {\n        var activeCodeEditor = accessor.get(codeEditorService_1.ICodeEditorService).getFocusedCodeEditor();\n        if (activeCodeEditor instanceof simpleCommentEditor_1.SimpleCommentEditor) {\n            activeCodeEditor.getParentThread().submitComment();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.hideComment',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib,\n    primary: keyCodes_1.KeyCode.Escape,\n    secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape],\n    when: simpleCommentEditor_1.ctxCommentEditorFocused,\n    handler: function (accessor, args) {\n        var activeCodeEditor = accessor.get(codeEditorService_1.ICodeEditorService).getFocusedCodeEditor();\n        if (activeCodeEditor instanceof simpleCommentEditor_1.SimpleCommentEditor) {\n            activeCodeEditor.getParentThread().collapse();\n        }\n    }\n});\nfunction getActiveEditor(accessor) {\n    var activeTextEditorWidget = accessor.get(editorService_1.IEditorService).activeTextEditorWidget;\n    if (editorBrowser_1.isDiffEditor(activeTextEditorWidget)) {\n        if (activeTextEditorWidget.getOriginalEditor().hasTextFocus()) {\n            activeTextEditorWidget = activeTextEditorWidget.getOriginalEditor();\n        }\n        else {\n            activeTextEditorWidget = activeTextEditorWidget.getModifiedEditor();\n        }\n    }\n    if (!editorBrowser_1.isCodeEditor(activeTextEditorWidget) || !activeTextEditorWidget.hasModel()) {\n        return null;\n    }\n    return activeTextEditorWidget;\n}\nexports.getActiveEditor = getActiveEditor;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var peekViewBackground = theme.getColor(referencesWidget_1.peekViewResultsBackground);\n    if (peekViewBackground) {\n        collector.addRule(\".monaco-editor .review-widget,\" +\n            \".monaco-editor .review-widget {\" +\n            (\"\\tbackground-color: \" + peekViewBackground + \";\") +\n            \"}\");\n    }\n    var monacoEditorBackground = theme.getColor(referencesWidget_1.peekViewTitleBackground);\n    if (monacoEditorBackground) {\n        collector.addRule(\".monaco-editor .review-widget .body .comment-form .review-thread-reply-button {\" +\n            (\"\\tbackground-color: \" + monacoEditorBackground) +\n            \"}\");\n    }\n    var monacoEditorForeground = theme.getColor(colorRegistry_1.editorForeground);\n    if (monacoEditorForeground) {\n        collector.addRule(\".monaco-editor .review-widget .body .monaco-editor {\" +\n            (\"\\tcolor: \" + monacoEditorForeground) +\n            \"}\" +\n            \".monaco-editor .review-widget .body .comment-form .review-thread-reply-button {\" +\n            (\"\\tcolor: \" + monacoEditorForeground + \";\") +\n            \"\\tfont-size: inherit\" +\n            \"}\");\n    }\n    var selectionBackground = theme.getColor(referencesWidget_1.peekViewResultsSelectionBackground);\n    if (selectionBackground) {\n        collector.addRule(\"@keyframes monaco-review-widget-focus {\" +\n            (\"\\t0% { background: \" + selectionBackground + \"; }\") +\n            \"\\t100% { background: transparent; }\" +\n            \"}\" +\n            \".monaco-editor .review-widget .body .review-comment.focus {\" +\n            \"\\tanimation: monaco-review-widget-focus 3s ease 0s;\" +\n            \"}\");\n    }\n    var commentingRangeForeground = theme.getColor(commentGlyphWidget_1.overviewRulerCommentingRangeForeground);\n    if (commentingRangeForeground) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .comment-diff-added {\\n\\t\\t\\t\\tborder-left: 3px solid \" + commentingRangeForeground + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .comment-diff-added:before {\\n\\t\\t\\t\\tbackground: \" + commentingRangeForeground + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .comment-thread {\\n\\t\\t\\t\\tborder-left: 3px solid \" + commentingRangeForeground + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .comment-thread:before {\\n\\t\\t\\t\\tbackground: \" + commentingRangeForeground + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var statusBarItemHoverBackground = theme.getColor(theme_1.STATUS_BAR_ITEM_HOVER_BACKGROUND);\n    if (statusBarItemHoverBackground) {\n        collector.addRule(\".monaco-editor .review-widget .body .review-comment .review-comment-contents .comment-reactions .action-item a.action-label.active:hover { background-color: \" + statusBarItemHoverBackground + \";}\");\n    }\n    var statusBarItemActiveBackground = theme.getColor(theme_1.STATUS_BAR_ITEM_ACTIVE_BACKGROUND);\n    if (statusBarItemActiveBackground) {\n        collector.addRule(\".monaco-editor .review-widget .body .review-comment .review-comment-contents .comment-reactions .action-item a.action-label:active { background-color: \" + statusBarItemActiveBackground + \"; border: 1px solid transparent;}\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentsEditorContribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/review';\nimport * as nls from 'vs/nls';\nimport { $ } from 'vs/base/browser/dom';\nimport { findFirstInSorted, coalesce } from 'vs/base/common/arrays';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IEditorMouseEvent, IViewZone, MouseTargetType, isDiffEditor, isCodeEditor, IActiveCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution, EditorAction, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorContribution, IModelChangedEvent } from 'vs/editor/common/editorCommon';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport * as modes from 'vs/editor/common/modes';\nimport { peekViewResultsBackground, peekViewResultsSelectionBackground, peekViewTitleBackground } from 'vs/editor/contrib/referenceSearch/referencesWidget';\nimport { ServicesAccessor, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { editorForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { ReviewZoneWidget, COMMENTEDITOR_DECORATION_KEY } from 'vs/workbench/contrib/comments/browser/commentThreadWidget';\nimport { ICommentService, ICommentInfo } from 'vs/workbench/contrib/comments/browser/commentService';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { IModelDecorationOptions } from 'vs/editor/common/model';\nimport { IMarginData } from 'vs/editor/browser/controller/mouseTarget';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { CancelablePromise, createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { overviewRulerCommentingRangeForeground } from 'vs/workbench/contrib/comments/browser/commentGlyphWidget';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { STATUS_BAR_ITEM_HOVER_BACKGROUND, STATUS_BAR_ITEM_ACTIVE_BACKGROUND } from 'vs/workbench/common/theme';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ctxCommentEditorFocused, SimpleCommentEditor } from 'vs/workbench/contrib/comments/browser/simpleCommentEditor';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport const ID = 'editor.contrib.review';\n\nexport class ReviewViewZone implements IViewZone {\n\tpublic readonly afterLineNumber: number;\n\tpublic readonly domNode: HTMLElement;\n\tprivate callback: (top: number) => void;\n\n\tconstructor(afterLineNumber: number, onDomNodeTop: (top: number) => void) {\n\t\tthis.afterLineNumber = afterLineNumber;\n\t\tthis.callback = onDomNodeTop;\n\n\t\tthis.domNode = $('.review-viewzone');\n\t}\n\n\tonDomNodeTop(top: number): void {\n\t\tthis.callback(top);\n\t}\n}\n\nclass CommentingRangeDecoration {\n\tprivate _decorationId: string;\n\n\tpublic get id(): string {\n\t\treturn this._decorationId;\n\t}\n\n\tconstructor(private _editor: ICodeEditor, private _ownerId: string, private _extensionId: string | undefined, private _range: IRange, private _reply: modes.Command | undefined, commentingOptions: ModelDecorationOptions, private commentingRangesInfo?: modes.CommentingRanges) {\n\t\tconst startLineNumber = _range.startLineNumber;\n\t\tconst endLineNumber = _range.endLineNumber;\n\t\tlet commentingRangeDecorations = [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t},\n\t\t\toptions: commentingOptions\n\t\t}];\n\n\t\tlet model = this._editor.getModel();\n\t\tif (model) {\n\t\t\tthis._decorationId = model.deltaDecorations([this._decorationId], commentingRangeDecorations)[0];\n\t\t}\n\t}\n\n\tpublic getCommentAction(): { replyCommand: modes.Command | undefined, ownerId: string, extensionId: string | undefined, commentingRangesInfo: modes.CommentingRanges | undefined } {\n\t\treturn {\n\t\t\textensionId: this._extensionId,\n\t\t\treplyCommand: this._reply,\n\t\t\townerId: this._ownerId,\n\t\t\tcommentingRangesInfo: this.commentingRangesInfo\n\t\t};\n\t}\n\n\tpublic getOriginalRange() {\n\t\treturn this._range;\n\t}\n\n\tpublic getActiveRange() {\n\t\treturn this._editor.getModel()!.getDecorationRange(this._decorationId);\n\t}\n}\nclass CommentingRangeDecorator {\n\n\tprivate decorationOptions: ModelDecorationOptions;\n\tprivate commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor() {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tisWholeLine: true,\n\t\t\tlinesDecorationsClassName: 'comment-range-glyph comment-diff-added'\n\t\t};\n\n\t\tthis.decorationOptions = ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tpublic update(editor: ICodeEditor, commentInfos: ICommentInfo[]) {\n\t\tlet model = editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet commentingRangeDecorations: CommentingRangeDecoration[] = [];\n\t\tfor (const info of commentInfos) {\n\t\t\tif (Array.isArray(info.commentingRanges)) {\n\t\t\t\tinfo.commentingRanges.forEach(range => {\n\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.owner, info.extensionId, range, info.reply, this.decorationOptions));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t(info.commentingRanges ? info.commentingRanges.ranges : []).forEach(range => {\n\t\t\t\t\tcommentingRangeDecorations.push(new CommentingRangeDecoration(editor, info.owner, info.extensionId, range, (info.commentingRanges as modes.CommentingRanges).newCommentThreadCommand, this.decorationOptions, info.commentingRanges as modes.CommentingRanges));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet oldDecorations = this.commentingRangeDecorations.map(decoration => decoration.id);\n\t\teditor.deltaDecorations(oldDecorations, []);\n\n\t\tthis.commentingRangeDecorations = commentingRangeDecorations;\n\t}\n\n\tpublic getMatchedCommentAction(line: number) {\n\t\tfor (const decoration of this.commentingRangeDecorations) {\n\t\t\tconst range = decoration.getActiveRange();\n\t\t\tif (range && range.startLineNumber <= line && line <= range.endLineNumber) {\n\t\t\t\treturn decoration.getCommentAction();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tthis.commentingRangeDecorations = [];\n\t}\n}\n\nexport class ReviewController implements IEditorContribution {\n\tprivate globalToDispose: IDisposable[];\n\tprivate localToDispose: IDisposable[];\n\tprivate editor: ICodeEditor;\n\tprivate _newCommentWidget?: ReviewZoneWidget;\n\tprivate _commentWidgets: ReviewZoneWidget[];\n\tprivate _commentInfos: ICommentInfo[];\n\tprivate _commentingRangeDecorator: CommentingRangeDecorator;\n\tprivate mouseDownInfo: { lineNumber: number } | null = null;\n\tprivate _commentingRangeSpaceReserved = false;\n\tprivate _computePromise: CancelablePromise<Array<ICommentInfo | null>> | null;\n\tprivate _addInProgress: boolean;\n\tprivate _emptyThreadsToAddQueue: number[] = [];\n\tprivate _computeCommentingRangePromise: CancelablePromise<ICommentInfo[]> | null;\n\tprivate _computeCommentingRangeScheduler: Delayer<Array<ICommentInfo | null>> | null;\n\tprivate _pendingCommentCache: { [key: number]: { [key: string]: string } };\n\tprivate _pendingNewCommentCache: { [key: string]: { lineNumber: number, replyCommand: modes.Command | undefined, ownerId: string, extensionId: string | undefined, pendingComment: string, draftMode: modes.DraftMode | undefined } };\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@ICommentService private readonly commentService: ICommentService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IContextMenuService readonly contextMenuService: IContextMenuService,\n\t) {\n\t\tthis.editor = editor;\n\t\tthis.globalToDispose = [];\n\t\tthis.localToDispose = [];\n\t\tthis._commentInfos = [];\n\t\tthis._commentWidgets = [];\n\t\tthis._pendingCommentCache = {};\n\t\tthis._pendingNewCommentCache = {};\n\t\tthis._computePromise = null;\n\n\t\tthis._commentingRangeDecorator = new CommentingRangeDecorator();\n\n\t\tthis.globalToDispose.push(this.commentService.onDidDeleteDataProvider(ownerId => {\n\t\t\t// Remove new comment widget and glyph, refresh comments\n\t\t\tif (this._newCommentWidget && this._newCommentWidget.owner === ownerId) {\n\t\t\t\tthis._newCommentWidget.dispose();\n\t\t\t\tthis._newCommentWidget = undefined;\n\t\t\t}\n\n\t\t\tdelete this._pendingCommentCache[ownerId];\n\t\t\tthis.beginCompute();\n\t\t}));\n\t\tthis.globalToDispose.push(this.commentService.onDidSetDataProvider(_ => this.beginCompute()));\n\n\t\tthis.globalToDispose.push(this.commentService.onDidSetResourceCommentInfos(e => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\t\t\tif (editorURI && editorURI.toString() === e.resource.toString()) {\n\t\t\t\tthis.setComments(e.commentInfos.filter(commentInfo => commentInfo !== null));\n\t\t\t}\n\t\t}));\n\n\t\tthis.globalToDispose.push(this.editor.onDidChangeModel(e => this.onModelChanged(e)));\n\t\tthis.codeEditorService.registerDecorationType(COMMENTEDITOR_DECORATION_KEY, {});\n\t\tthis.beginCompute();\n\t}\n\n\tprivate beginCompute(): Promise<void> {\n\t\tthis._computePromise = createCancelablePromise(token => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\n\t\t\tif (editorURI) {\n\t\t\t\treturn this.commentService.getComments(editorURI);\n\t\t\t}\n\n\t\t\treturn Promise.resolve([]);\n\t\t});\n\n\t\treturn this._computePromise.then(commentInfos => {\n\t\t\tthis.setComments(coalesce(commentInfos));\n\t\t\tthis._computePromise = null;\n\t\t}, error => console.log(error));\n\t}\n\n\tprivate beginComputeCommentingRanges() {\n\t\tif (this._computeCommentingRangeScheduler) {\n\t\t\tif (this._computeCommentingRangePromise) {\n\t\t\t\tthis._computeCommentingRangePromise.cancel();\n\t\t\t\tthis._computeCommentingRangePromise = null;\n\t\t\t}\n\n\t\t\tthis._computeCommentingRangeScheduler.trigger(() => {\n\t\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\n\t\t\t\tif (editorURI) {\n\t\t\t\t\treturn this.commentService.getComments(editorURI);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}).then(commentInfos => {\n\t\t\t\tconst meaningfulCommentInfos = coalesce(commentInfos);\n\t\t\t\tthis._commentingRangeDecorator.update(this.editor, meaningfulCommentInfos);\n\t\t\t}, (err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic static get(editor: ICodeEditor): ReviewController {\n\t\treturn editor.getContribution<ReviewController>(ID);\n\t}\n\n\tpublic revealCommentThread(threadId: string, commentId: string, fetchOnceIfNotExist: boolean): void {\n\t\tconst commentThreadWidget = this._commentWidgets.filter(widget => widget.commentThread.threadId === threadId);\n\t\tif (commentThreadWidget.length === 1) {\n\t\t\tcommentThreadWidget[0].reveal(commentId);\n\t\t} else if (fetchOnceIfNotExist) {\n\t\t\tthis.beginCompute().then(_ => {\n\t\t\t\tthis.revealCommentThread(threadId, commentId, false);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic nextCommentThread(): void {\n\t\tif (!this._commentWidgets.length || !this.editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst after = this.editor.getSelection().getEndPosition();\n\t\tconst sortedWidgets = this._commentWidgets.sort((a, b) => {\n\t\t\tif (a.commentThread.range.startLineNumber < b.commentThread.range.startLineNumber) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startLineNumber > b.commentThread.range.startLineNumber) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startColumn < b.commentThread.range.startColumn) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (a.commentThread.range.startColumn > b.commentThread.range.startColumn) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\n\t\tlet idx = findFirstInSorted(sortedWidgets, widget => {\n\t\t\tif (widget.commentThread.range.startLineNumber > after.lineNumber) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (widget.commentThread.range.startLineNumber < after.lineNumber) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (widget.commentThread.range.startColumn > after.column) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (idx === this._commentWidgets.length) {\n\t\t\tthis._commentWidgets[0].reveal();\n\t\t\tthis.editor.setSelection(this._commentWidgets[0].commentThread.range);\n\t\t} else {\n\t\t\tsortedWidgets[idx].reveal();\n\t\t\tthis.editor.setSelection(sortedWidgets[idx].commentThread.range);\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.globalToDispose = dispose(this.globalToDispose);\n\t\tthis.localToDispose = dispose(this.localToDispose);\n\n\t\tthis._commentWidgets.forEach(widget => widget.dispose());\n\n\t\tif (this._newCommentWidget) {\n\t\t\tthis._newCommentWidget.dispose();\n\t\t\tthis._newCommentWidget = undefined;\n\t\t}\n\t\tthis.editor = null!; // Strict null override — nulling out in dispose\n\t}\n\n\tpublic onModelChanged(e: IModelChangedEvent): void {\n\t\tthis.localToDispose = dispose(this.localToDispose);\n\t\tif (this._newCommentWidget) {\n\t\t\tlet pendingNewComment = this._newCommentWidget.getPendingComment();\n\n\t\t\tif (e.oldModelUrl) {\n\t\t\t\tif (pendingNewComment) {\n\t\t\t\t\t// we can't fetch zone widget's position as the model is already gone\n\t\t\t\t\tconst position = this._newCommentWidget.getPosition();\n\t\t\t\t\tif (position) {\n\t\t\t\t\t\tthis._pendingNewCommentCache[e.oldModelUrl.toString()] = {\n\t\t\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\t\t\townerId: this._newCommentWidget.owner,\n\t\t\t\t\t\t\textensionId: this._newCommentWidget.extensionId,\n\t\t\t\t\t\t\treplyCommand: this._newCommentWidget.commentThread.reply,\n\t\t\t\t\t\t\tpendingComment: pendingNewComment,\n\t\t\t\t\t\t\tdraftMode: this._newCommentWidget.draftMode\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// clear cache if it is empty\n\t\t\t\t\tdelete this._pendingNewCommentCache[e.oldModelUrl.toString()];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._newCommentWidget.dispose();\n\t\t\tthis._newCommentWidget = undefined;\n\t\t}\n\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\n\t\tif (e.newModelUrl && this._pendingNewCommentCache[e.newModelUrl.toString()]) {\n\t\t\tlet newCommentCache = this._pendingNewCommentCache[e.newModelUrl.toString()];\n\t\t\tthis.addComment(newCommentCache.lineNumber, newCommentCache.replyCommand, newCommentCache.ownerId, newCommentCache.extensionId, newCommentCache.draftMode, newCommentCache.pendingComment);\n\t\t}\n\n\t\tthis.localToDispose.push(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\n\t\tthis.localToDispose.push(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\n\n\t\tthis._computeCommentingRangeScheduler = new Delayer<ICommentInfo[]>(200);\n\t\tthis.localToDispose.push({\n\t\t\tdispose: () => {\n\t\t\t\tif (this._computeCommentingRangeScheduler) {\n\t\t\t\t\tthis._computeCommentingRangeScheduler.cancel();\n\t\t\t\t}\n\t\t\t\tthis._computeCommentingRangeScheduler = null;\n\t\t\t}\n\t\t});\n\t\tthis.localToDispose.push(this.editor.onDidChangeModelContent(async () => {\n\t\t\tthis.beginComputeCommentingRanges();\n\t\t}));\n\t\tthis.localToDispose.push(this.commentService.onDidUpdateCommentThreads(e => {\n\t\t\tconst editorURI = this.editor && this.editor.hasModel() && this.editor.getModel().uri;\n\t\t\tif (!editorURI) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet commentInfo = this._commentInfos.filter(info => info.owner === e.owner);\n\t\t\tif (!commentInfo || !commentInfo.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet added = e.added.filter(thread => thread.resource && thread.resource.toString() === editorURI.toString());\n\t\t\tlet removed = e.removed.filter(thread => thread.resource && thread.resource.toString() === editorURI.toString());\n\t\t\tlet changed = e.changed.filter(thread => thread.resource && thread.resource.toString() === editorURI.toString());\n\t\t\tlet draftMode = e.draftMode;\n\n\t\t\tcommentInfo.forEach(info => info.draftMode = draftMode);\n\t\t\tthis._commentWidgets.filter(ZoneWidget => ZoneWidget.owner === e.owner).forEach(widget => widget.updateDraftMode(draftMode));\n\t\t\tif (this._newCommentWidget && this._newCommentWidget.owner === e.owner) {\n\t\t\t\tthis._newCommentWidget.updateDraftMode(draftMode);\n\t\t\t}\n\n\t\t\tremoved.forEach(thread => {\n\t\t\t\tlet matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.owner === e.owner && zoneWidget.commentThread.threadId === thread.threadId);\n\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\tlet matchedZone = matchedZones[0];\n\t\t\t\t\tlet index = this._commentWidgets.indexOf(matchedZone);\n\t\t\t\t\tthis._commentWidgets.splice(index, 1);\n\t\t\t\t\tmatchedZone.dispose();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tchanged.forEach(thread => {\n\t\t\t\tlet matchedZones = this._commentWidgets.filter(zoneWidget => zoneWidget.owner === e.owner && zoneWidget.commentThread.threadId === thread.threadId);\n\t\t\t\tif (matchedZones.length) {\n\t\t\t\t\tlet matchedZone = matchedZones[0];\n\t\t\t\t\tmatchedZone.update(thread);\n\t\t\t\t}\n\t\t\t});\n\t\t\tadded.forEach(thread => {\n\t\t\t\tconst pendingCommentText = this._pendingCommentCache[e.owner] && this._pendingCommentCache[e.owner][thread.threadId];\n\t\t\t\tthis.displayCommentThread(e.owner, thread, pendingCommentText, draftMode);\n\t\t\t\tthis._commentInfos.filter(info => info.owner === e.owner)[0].threads.push(thread);\n\t\t\t});\n\n\t\t}));\n\n\t\tthis.beginCompute();\n\t}\n\n\tprivate displayCommentThread(owner: string, thread: modes.CommentThread | modes.CommentThread2, pendingComment: string | null, draftMode: modes.DraftMode | undefined): void {\n\t\tconst zoneWidget = this.instantiationService.createInstance(ReviewZoneWidget, this.editor, owner, thread, pendingComment, draftMode);\n\t\tzoneWidget.display(thread.range.startLineNumber);\n\t\tthis._commentWidgets.push(zoneWidget);\n\t}\n\n\tprivate addComment(lineNumber: number, replyCommand: modes.Command | undefined, ownerId: string, extensionId: string | undefined, draftMode: modes.DraftMode | undefined, pendingComment: string | null) {\n\t\tif (this._newCommentWidget) {\n\t\t\tthis.notificationService.warn(`Please submit the comment at line ${this._newCommentWidget.position ? this._newCommentWidget.position.lineNumber : -1} before creating a new one.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// add new comment\n\t\tthis._newCommentWidget = this.instantiationService.createInstance(ReviewZoneWidget, this.editor, ownerId, {\n\t\t\textensionId: extensionId,\n\t\t\tthreadId: null,\n\t\t\tresource: null,\n\t\t\tcomments: [],\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: 0\n\t\t\t},\n\t\t\treply: replyCommand,\n\t\t\tcollapsibleState: modes.CommentThreadCollapsibleState.Expanded,\n\t\t}, pendingComment, draftMode);\n\n\t\tthis.localToDispose.push(this._newCommentWidget!.onDidClose(e => {\n\t\t\tthis.clearNewCommentWidget();\n\t\t}));\n\n\t\tthis.localToDispose.push(this._newCommentWidget!.onDidCreateThread(commentWidget => {\n\t\t\tconst thread = commentWidget.commentThread;\n\t\t\tthis._commentWidgets.push(commentWidget);\n\t\t\tthis._commentInfos.filter(info => info.owner === commentWidget.owner)[0].threads.push(thread);\n\t\t\tthis.clearNewCommentWidget();\n\t\t}));\n\n\t\tthis._newCommentWidget!.display(lineNumber);\n\t}\n\n\tprivate clearNewCommentWidget() {\n\t\tthis._newCommentWidget = undefined;\n\n\t\tif (this.editor && this.editor.hasModel()) {\n\t\t\tdelete this._pendingNewCommentCache[this.editor.getModel().uri.toString()];\n\t\t}\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e.event.leftButton) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = e.target.detail as IMarginData;\n\t\tconst gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\n\n\t\t// don't collide with folding and git decorations\n\t\tif (gutterOffsetX > 14) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mouseDownInfo = { lineNumber: range.startLineNumber };\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tif (!this.mouseDownInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { lineNumber } = this.mouseDownInfo;\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range || range.startLineNumber !== lineNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e.target.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.element.className.indexOf('comment-diff-added') >= 0) {\n\t\t\tconst lineNumber = e.target.position!.lineNumber;\n\t\t\tthis.addOrToggleCommentAtLine(lineNumber);\n\t\t}\n\t}\n\n\tpublic async addOrToggleCommentAtLine(lineNumber: number): Promise<void> {\n\t\t// If an add is already in progress, queue the next add and process it after the current one finishes to\n\t\t// prevent empty comment threads from being added to the same line.\n\t\tif (!this._addInProgress) {\n\t\t\tthis._addInProgress = true;\n\t\t\t// The widget's position is undefined until the widget has been displayed, so rely on the glyph position instead\n\t\t\tconst existingCommentsAtLine = this._commentWidgets.filter(widget => widget.getGlyphPosition() === lineNumber);\n\t\t\tif (existingCommentsAtLine.length) {\n\t\t\t\texistingCommentsAtLine.forEach(widget => widget.toggleExpand(lineNumber));\n\t\t\t\tthis.processNextThreadToAdd();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.addCommentAtLine(lineNumber);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._emptyThreadsToAddQueue.push(lineNumber);\n\t\t}\n\t}\n\n\tprivate processNextThreadToAdd(): void {\n\t\tthis._addInProgress = false;\n\t\tconst lineNumber = this._emptyThreadsToAddQueue.shift();\n\t\tif (lineNumber) {\n\t\t\tthis.addOrToggleCommentAtLine(lineNumber);\n\t\t}\n\t}\n\n\tpublic addCommentAtLine(lineNumber: number): Promise<void> {\n\t\tconst newCommentInfo = this._commentingRangeDecorator.getMatchedCommentAction(lineNumber);\n\t\tif (!newCommentInfo || !this.editor.hasModel()) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst { replyCommand, ownerId, extensionId, commentingRangesInfo } = newCommentInfo;\n\n\t\tif (commentingRangesInfo) {\n\t\t\tlet range = new Range(lineNumber, 1, lineNumber, 1);\n\t\t\tif (commentingRangesInfo.newCommentThreadCommand) {\n\t\t\t\tif (replyCommand) {\n\t\t\t\t\tconst commandId = replyCommand.id;\n\t\t\t\t\tconst args = replyCommand.arguments || [];\n\n\t\t\t\t\tthis._commandService.executeCommand(commandId, ...args);\n\t\t\t\t\tthis._addInProgress = false;\n\t\t\t\t}\n\t\t\t} else if (commentingRangesInfo.newCommentThreadCallback) {\n\t\t\t\treturn commentingRangesInfo.newCommentThreadCallback(this.editor.getModel().uri, range)\n\t\t\t\t\t.then(_ => {\n\t\t\t\t\t\tthis.processNextThreadToAdd();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tthis.notificationService.error(nls.localize('commentThreadAddFailure', \"Adding a new comment thread failed: {0}.\", e.message));\n\t\t\t\t\t\tthis.processNextThreadToAdd();\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst commentInfo = this._commentInfos.filter(info => info.owner === ownerId);\n\t\t\tif (!commentInfo || !commentInfo.length) {\n\t\t\t\tthis._addInProgress = false;\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tconst draftMode = commentInfo[0].draftMode;\n\t\t\tthis.addComment(lineNumber, replyCommand, ownerId, extensionId, draftMode, null);\n\t\t\tthis._addInProgress = false;\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\n\tprivate setComments(commentInfos: ICommentInfo[]): void {\n\t\tif (!this.editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._commentInfos = commentInfos;\n\t\tlet lineDecorationsWidth: number = this.editor.getConfiguration().layoutInfo.decorationsWidth;\n\n\t\tif (this._commentInfos.some(info => Boolean(info.commentingRanges && (Array.isArray(info.commentingRanges) ? info.commentingRanges : info.commentingRanges.ranges).length))) {\n\t\t\tif (!this._commentingRangeSpaceReserved) {\n\t\t\t\tthis._commentingRangeSpaceReserved = true;\n\t\t\t\tlet extraEditorClassName: string[] = [];\n\t\t\t\tconst configuredExtraClassName = this.editor.getRawConfiguration().extraEditorClassName;\n\t\t\t\tif (configuredExtraClassName) {\n\t\t\t\t\textraEditorClassName = configuredExtraClassName.split(' ');\n\t\t\t\t}\n\n\t\t\t\tif (this.editor.getConfiguration().contribInfo.folding) {\n\t\t\t\t\tlineDecorationsWidth -= 16;\n\t\t\t\t}\n\t\t\t\tlineDecorationsWidth += 9;\n\t\t\t\textraEditorClassName.push('inline-comment');\n\t\t\t\tthis.editor.updateOptions({\n\t\t\t\t\textraEditorClassName: extraEditorClassName.join(' '),\n\t\t\t\t\tlineDecorationsWidth: lineDecorationsWidth\n\t\t\t\t});\n\n\t\t\t\t// we only update the lineDecorationsWidth property but keep the width of the whole editor.\n\t\t\t\tconst originalLayoutInfo = this.editor.getLayoutInfo();\n\n\t\t\t\tthis.editor.layout({\n\t\t\t\t\twidth: originalLayoutInfo.width,\n\t\t\t\t\theight: originalLayoutInfo.height\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// create viewzones\n\t\tthis.removeCommentWidgetsAndStoreCache();\n\n\t\tthis._commentInfos.forEach(info => {\n\t\t\tlet providerCacheStore = this._pendingCommentCache[info.owner];\n\t\t\tinfo.threads.forEach(thread => {\n\t\t\t\tlet pendingComment: string | null = null;\n\t\t\t\tif (providerCacheStore) {\n\t\t\t\t\tpendingComment = providerCacheStore[thread.threadId];\n\t\t\t\t}\n\n\t\t\t\tif (pendingComment) {\n\t\t\t\t\tthread.collapsibleState = modes.CommentThreadCollapsibleState.Expanded;\n\t\t\t\t}\n\n\t\t\t\tthis.displayCommentThread(info.owner, thread, pendingComment, info.draftMode);\n\t\t\t});\n\t\t});\n\n\t\tconst commentingRanges: IRange[] = [];\n\t\tthis._commentInfos.forEach(info => {\n\t\t\tcommentingRanges.push(...(Array.isArray(info.commentingRanges) ? info.commentingRanges : info.commentingRanges ? info.commentingRanges.ranges : []));\n\t\t});\n\t\tthis._commentingRangeDecorator.update(this.editor, this._commentInfos);\n\t}\n\n\tpublic closeWidget(): void {\n\t\tif (this._newCommentWidget) {\n\t\t\tthis._newCommentWidget.dispose();\n\t\t\tthis._newCommentWidget = undefined;\n\t\t}\n\n\t\tif (this._commentWidgets) {\n\t\t\tthis._commentWidgets.forEach(widget => widget.hide());\n\t\t}\n\n\t\tthis.editor.focus();\n\t\tthis.editor.revealRangeInCenter(this.editor.getSelection()!);\n\t}\n\n\tprivate removeCommentWidgetsAndStoreCache() {\n\t\tif (this._commentWidgets) {\n\t\t\tthis._commentWidgets.forEach(zone => {\n\t\t\t\tlet pendingComment = zone.getPendingComment();\n\t\t\t\tlet providerCacheStore = this._pendingCommentCache[zone.owner];\n\n\t\t\t\tif (pendingComment) {\n\t\t\t\t\tif (!providerCacheStore) {\n\t\t\t\t\t\tthis._pendingCommentCache[zone.owner] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pendingCommentCache[zone.owner][zone.commentThread.threadId] = pendingComment;\n\t\t\t\t} else {\n\t\t\t\t\tif (providerCacheStore) {\n\t\t\t\t\t\tdelete providerCacheStore[zone.commentThread.threadId];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tzone.dispose();\n\t\t\t});\n\t\t}\n\n\t\tthis._commentWidgets = [];\n\t}\n}\n\nexport class NextCommentThreadAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.nextCommentThreadAction',\n\t\t\tlabel: nls.localize('nextCommentThreadAction', \"Go to Next Comment Thread\"),\n\t\t\talias: 'Go to Next Comment Thread',\n\t\t\tprecondition: null,\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tlet controller = ReviewController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.nextCommentThread();\n\t\t}\n\t}\n}\n\n\nregisterEditorContribution(ReviewController);\nregisterEditorAction(NextCommentThreadAction);\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.action.addComment',\n\thandler: (accessor) => {\n\t\tconst activeEditor = getActiveEditor(accessor);\n\t\tif (!activeEditor) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst controller = ReviewController.get(activeEditor);\n\t\tif (!controller) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst position = activeEditor.getPosition();\n\t\treturn controller.addOrToggleCommentAtLine(position.lineNumber);\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.submitComment',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().submitComment();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.hideComment',\n\tweight: KeybindingWeight.EditorContrib,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ctxCommentEditorFocused,\n\thandler: (accessor, args) => {\n\t\tconst activeCodeEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n\t\tif (activeCodeEditor instanceof SimpleCommentEditor) {\n\t\t\tactiveCodeEditor.getParentThread().collapse();\n\t\t}\n\t}\n});\n\nexport function getActiveEditor(accessor: ServicesAccessor): IActiveCodeEditor | null {\n\tlet activeTextEditorWidget = accessor.get(IEditorService).activeTextEditorWidget;\n\n\tif (isDiffEditor(activeTextEditorWidget)) {\n\t\tif (activeTextEditorWidget.getOriginalEditor().hasTextFocus()) {\n\t\t\tactiveTextEditorWidget = activeTextEditorWidget.getOriginalEditor();\n\t\t} else {\n\t\t\tactiveTextEditorWidget = activeTextEditorWidget.getModifiedEditor();\n\t\t}\n\t}\n\n\tif (!isCodeEditor(activeTextEditorWidget) || !activeTextEditorWidget.hasModel()) {\n\t\treturn null;\n\t}\n\n\treturn activeTextEditorWidget;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst peekViewBackground = theme.getColor(peekViewResultsBackground);\n\tif (peekViewBackground) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .review-widget,` +\n\t\t\t`.monaco-editor .review-widget {` +\n\t\t\t`\tbackground-color: ${peekViewBackground};` +\n\t\t\t`}`);\n\t}\n\n\tconst monacoEditorBackground = theme.getColor(peekViewTitleBackground);\n\tif (monacoEditorBackground) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .review-widget .body .comment-form .review-thread-reply-button {` +\n\t\t\t`\tbackground-color: ${monacoEditorBackground}` +\n\t\t\t`}`\n\t\t);\n\t}\n\n\tconst monacoEditorForeground = theme.getColor(editorForeground);\n\tif (monacoEditorForeground) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .review-widget .body .monaco-editor {` +\n\t\t\t`\tcolor: ${monacoEditorForeground}` +\n\t\t\t`}` +\n\t\t\t`.monaco-editor .review-widget .body .comment-form .review-thread-reply-button {` +\n\t\t\t`\tcolor: ${monacoEditorForeground};` +\n\t\t\t`\tfont-size: inherit` +\n\t\t\t`}`\n\t\t);\n\t}\n\n\tconst selectionBackground = theme.getColor(peekViewResultsSelectionBackground);\n\n\tif (selectionBackground) {\n\t\tcollector.addRule(\n\t\t\t`@keyframes monaco-review-widget-focus {` +\n\t\t\t`\t0% { background: ${selectionBackground}; }` +\n\t\t\t`\t100% { background: transparent; }` +\n\t\t\t`}` +\n\t\t\t`.monaco-editor .review-widget .body .review-comment.focus {` +\n\t\t\t`\tanimation: monaco-review-widget-focus 3s ease 0s;` +\n\t\t\t`}`\n\t\t);\n\t}\n\n\tconst commentingRangeForeground = theme.getColor(overviewRulerCommentingRangeForeground);\n\tif (commentingRangeForeground) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .comment-diff-added {\n\t\t\t\tborder-left: 3px solid ${commentingRangeForeground};\n\t\t\t}\n\t\t\t.monaco-editor .comment-diff-added:before {\n\t\t\t\tbackground: ${commentingRangeForeground};\n\t\t\t}\n\t\t\t.monaco-editor .comment-thread {\n\t\t\t\tborder-left: 3px solid ${commentingRangeForeground};\n\t\t\t}\n\t\t\t.monaco-editor .comment-thread:before {\n\t\t\t\tbackground: ${commentingRangeForeground};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst statusBarItemHoverBackground = theme.getColor(STATUS_BAR_ITEM_HOVER_BACKGROUND);\n\tif (statusBarItemHoverBackground) {\n\t\tcollector.addRule(`.monaco-editor .review-widget .body .review-comment .review-comment-contents .comment-reactions .action-item a.action-label.active:hover { background-color: ${statusBarItemHoverBackground};}`);\n\t}\n\n\tconst statusBarItemActiveBackground = theme.getColor(STATUS_BAR_ITEM_ACTIVE_BACKGROUND);\n\tif (statusBarItemActiveBackground) {\n\t\tcollector.addRule(`.monaco-editor .review-widget .body .review-comment .review-comment-contents .comment-reactions .action-item a.action-label:active { background-color: ${statusBarItemActiveBackground}; border: 1px solid transparent;}`);\n\t}\n});\n"]}]}