{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostHeapService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/node/extHostHeapService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ExtHostHeapService {\n        constructor() {\n            this._data = new Map();\n        }\n        keep(obj) {\n            const id = ExtHostHeapService._idPool++;\n            this._data.set(id, obj);\n            return id;\n        }\n        delete(id) {\n            return this._data.delete(id);\n        }\n        get(id) {\n            return this._data.get(id);\n        }\n        $onGarbageCollection(ids) {\n            for (const id of ids) {\n                this.delete(id);\n            }\n        }\n    }\n    ExtHostHeapService._idPool = 0;\n    exports.ExtHostHeapService = ExtHostHeapService;\n});\n",null]}