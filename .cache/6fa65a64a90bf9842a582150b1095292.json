{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar network_1 = require(\"vs/base/common/network\");\nvar path_1 = require(\"vs/base/common/path\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar nls = require(\"vs/nls\");\nvar clipboardService_1 = require(\"vs/platform/clipboard/common/clipboardService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar Constants = require(\"vs/workbench/contrib/search/common/constants\");\nvar replace_1 = require(\"vs/workbench/contrib/search/common/replace\");\nvar searchModel_1 = require(\"vs/workbench/contrib/search/common/searchModel\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar search_1 = require(\"vs/workbench/services/search/common/search\");\nvar searchHistoryService_1 = require(\"vs/workbench/contrib/search/common/searchHistoryService\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nfunction isSearchViewFocused(viewletService, panelService) {\n    var searchView = getSearchView(viewletService, panelService);\n    var activeElement = document.activeElement;\n    return !!(searchView && activeElement && DOM.isAncestor(activeElement, searchView.getContainer()));\n}\nexports.isSearchViewFocused = isSearchViewFocused;\nfunction appendKeyBindingLabel(label, inputKeyBinding, keyBindingService2) {\n    if (typeof inputKeyBinding === 'number') {\n        var keybinding = keyCodes_1.createKeybinding(inputKeyBinding, platform_1.OS);\n        if (keybinding) {\n            var resolvedKeybindings = keyBindingService2.resolveKeybinding(keybinding);\n            return doAppendKeyBindingLabel(label, resolvedKeybindings.length > 0 ? resolvedKeybindings[0] : undefined);\n        }\n        return doAppendKeyBindingLabel(label, undefined);\n    }\n    else {\n        return doAppendKeyBindingLabel(label, inputKeyBinding);\n    }\n}\nexports.appendKeyBindingLabel = appendKeyBindingLabel;\nfunction openSearchView(viewletService, panelService, configurationService, focus) {\n    if (configurationService.getValue().search.location === 'panel') {\n        return Promise.resolve(panelService.openPanel(search_1.PANEL_ID, focus).getSearchView());\n    }\n    return viewletService.openViewlet(search_1.VIEWLET_ID, focus).then(function (viewlet) { return viewlet.getSearchView(); });\n}\nexports.openSearchView = openSearchView;\nfunction getSearchView(viewletService, panelService) {\n    var activeViewlet = viewletService.getActiveViewlet();\n    if (activeViewlet && activeViewlet.getId() === search_1.VIEWLET_ID) {\n        return activeViewlet.getSearchView();\n    }\n    var activePanel = panelService.getActivePanel();\n    if (activePanel && activePanel.getId() === search_1.PANEL_ID) {\n        return activePanel.getSearchView();\n    }\n    return undefined;\n}\nexports.getSearchView = getSearchView;\nfunction doAppendKeyBindingLabel(label, keyBinding) {\n    return keyBinding ? label + ' (' + keyBinding.getLabel() + ')' : label;\n}\nexports.toggleCaseSensitiveCommand = function (accessor) {\n    var searchView = getSearchView(accessor.get(viewlet_1.IViewletService), accessor.get(panelService_1.IPanelService));\n    if (searchView) {\n        searchView.toggleCaseSensitive();\n    }\n};\nexports.toggleWholeWordCommand = function (accessor) {\n    var searchView = getSearchView(accessor.get(viewlet_1.IViewletService), accessor.get(panelService_1.IPanelService));\n    if (searchView) {\n        searchView.toggleWholeWords();\n    }\n};\nexports.toggleRegexCommand = function (accessor) {\n    var searchView = getSearchView(accessor.get(viewlet_1.IViewletService), accessor.get(panelService_1.IPanelService));\n    if (searchView) {\n        searchView.toggleRegex();\n    }\n};\nvar FocusNextInputAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusNextInputAction, _super);\n    function FocusNextInputAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        return _this;\n    }\n    FocusNextInputAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.focusNextInputBox();\n        }\n        return Promise.resolve(null);\n    };\n    FocusNextInputAction.ID = 'search.focus.nextInputBox';\n    FocusNextInputAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], FocusNextInputAction);\n    return FocusNextInputAction;\n}(actions_1.Action));\nexports.FocusNextInputAction = FocusNextInputAction;\nvar FocusPreviousInputAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusPreviousInputAction, _super);\n    function FocusPreviousInputAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        return _this;\n    }\n    FocusPreviousInputAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.focusPreviousInputBox();\n        }\n        return Promise.resolve(null);\n    };\n    FocusPreviousInputAction.ID = 'search.focus.previousInputBox';\n    FocusPreviousInputAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], FocusPreviousInputAction);\n    return FocusPreviousInputAction;\n}(actions_1.Action));\nexports.FocusPreviousInputAction = FocusPreviousInputAction;\nvar FindOrReplaceInFilesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FindOrReplaceInFilesAction, _super);\n    function FindOrReplaceInFilesAction(id, label, viewletService, panelService, configurationService, expandSearchReplaceWidget) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.configurationService = configurationService;\n        _this.expandSearchReplaceWidget = expandSearchReplaceWidget;\n        return _this;\n    }\n    FindOrReplaceInFilesAction.prototype.run = function () {\n        var _this = this;\n        return openSearchView(this.viewletService, this.panelService, this.configurationService, false).then(function (openedView) {\n            if (openedView) {\n                var searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n                searchAndReplaceWidget.toggleReplace(_this.expandSearchReplaceWidget);\n                var updatedText = openedView.updateTextFromSelection(!_this.expandSearchReplaceWidget);\n                openedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n            }\n        });\n    };\n    return FindOrReplaceInFilesAction;\n}(actions_1.Action));\nexports.FindOrReplaceInFilesAction = FindOrReplaceInFilesAction;\nvar FindInFilesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FindInFilesAction, _super);\n    function FindInFilesAction(id, label, viewletService, panelService, configurationService) {\n        return _super.call(this, id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/ false) || this;\n    }\n    FindInFilesAction.LABEL = nls.localize('findInFiles', \"Find in Files\");\n    FindInFilesAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], FindInFilesAction);\n    return FindInFilesAction;\n}(FindOrReplaceInFilesAction));\nexports.FindInFilesAction = FindInFilesAction;\nvar OpenSearchViewletAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenSearchViewletAction, _super);\n    function OpenSearchViewletAction(id, label, viewletService, panelService, editorGroupService, configurationService) {\n        var _this = _super.call(this, id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/ false) || this;\n        _this.editorGroupService = editorGroupService;\n        return _this;\n    }\n    OpenSearchViewletAction.prototype.run = function () {\n        // Pass focus to viewlet if not open or focused\n        if (this.otherViewletShowing() || !isSearchViewFocused(this.viewletService, this.panelService)) {\n            return _super.prototype.run.call(this);\n        }\n        // Otherwise pass focus to editor group\n        this.editorGroupService.activeGroup.focus();\n        return Promise.resolve(true);\n    };\n    OpenSearchViewletAction.prototype.otherViewletShowing = function () {\n        return !getSearchView(this.viewletService, this.panelService);\n    };\n    OpenSearchViewletAction.LABEL = nls.localize('showSearch', \"Show Search\");\n    OpenSearchViewletAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(5, configuration_1.IConfigurationService)\n    ], OpenSearchViewletAction);\n    return OpenSearchViewletAction;\n}(FindOrReplaceInFilesAction));\nexports.OpenSearchViewletAction = OpenSearchViewletAction;\nvar ReplaceInFilesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplaceInFilesAction, _super);\n    function ReplaceInFilesAction(id, label, viewletService, panelService, configurationService) {\n        return _super.call(this, id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/ true) || this;\n    }\n    ReplaceInFilesAction.ID = 'workbench.action.replaceInFiles';\n    ReplaceInFilesAction.LABEL = nls.localize('replaceInFiles', \"Replace in Files\");\n    ReplaceInFilesAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], ReplaceInFilesAction);\n    return ReplaceInFilesAction;\n}(FindOrReplaceInFilesAction));\nexports.ReplaceInFilesAction = ReplaceInFilesAction;\nvar CloseReplaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseReplaceAction, _super);\n    function CloseReplaceAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        return _this;\n    }\n    CloseReplaceAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.searchAndReplaceWidget.toggleReplace(false);\n            searchView.searchAndReplaceWidget.focus();\n        }\n        return Promise.resolve(null);\n    };\n    CloseReplaceAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], CloseReplaceAction);\n    return CloseReplaceAction;\n}(actions_1.Action));\nexports.CloseReplaceAction = CloseReplaceAction;\nvar RefreshAction = /** @class */ (function (_super) {\n    tslib_1.__extends(RefreshAction, _super);\n    function RefreshAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label, 'search-action refresh') || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.searchView = getSearchView(_this.viewletService, _this.panelService);\n        return _this;\n    }\n    Object.defineProperty(RefreshAction.prototype, \"enabled\", {\n        get: function () {\n            return !!this.searchView && this.searchView.isSearchSubmitted();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RefreshAction.prototype.update = function () {\n        this._setEnabled(this.enabled);\n    };\n    RefreshAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.onQueryChanged();\n        }\n        return Promise.resolve();\n    };\n    RefreshAction.ID = 'search.action.refreshSearchResults';\n    RefreshAction.LABEL = nls.localize('RefreshAction.label', \"Refresh\");\n    RefreshAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], RefreshAction);\n    return RefreshAction;\n}(actions_1.Action));\nexports.RefreshAction = RefreshAction;\nvar CollapseDeepestExpandedLevelAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CollapseDeepestExpandedLevelAction, _super);\n    function CollapseDeepestExpandedLevelAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label, 'search-action collapse') || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.update();\n        return _this;\n    }\n    CollapseDeepestExpandedLevelAction.prototype.update = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        this.enabled = !!searchView && searchView.hasSearchResults();\n    };\n    CollapseDeepestExpandedLevelAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            var viewer = searchView.getControl();\n            /**\n             * one level to collapse so collapse everything. If FolderMatch, check if there are visible grandchildren,\n             * i.e. if Matches are returned by the navigator, and if so, collapse to them, otherwise collapse all levels.\n             */\n            var navigator = viewer.navigate();\n            var node = navigator.first();\n            var collapseFileMatchLevel = false;\n            if (node instanceof searchModel_1.BaseFolderMatch) {\n                while (node = navigator.next()) {\n                    if (node instanceof searchModel_1.Match) {\n                        collapseFileMatchLevel = true;\n                        break;\n                    }\n                }\n            }\n            if (collapseFileMatchLevel) {\n                node = navigator.first();\n                do {\n                    if (node instanceof searchModel_1.FileMatch) {\n                        viewer.collapse(node);\n                    }\n                } while (node = navigator.next());\n            }\n            else {\n                viewer.collapseAll();\n            }\n            viewer.domFocus();\n            viewer.focusFirst();\n        }\n        return Promise.resolve(undefined);\n    };\n    CollapseDeepestExpandedLevelAction.ID = 'search.action.collapseSearchResults';\n    CollapseDeepestExpandedLevelAction.LABEL = nls.localize('CollapseDeepestExpandedLevelAction.label', \"Collapse All\");\n    CollapseDeepestExpandedLevelAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], CollapseDeepestExpandedLevelAction);\n    return CollapseDeepestExpandedLevelAction;\n}(actions_1.Action));\nexports.CollapseDeepestExpandedLevelAction = CollapseDeepestExpandedLevelAction;\nvar ClearSearchResultsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ClearSearchResultsAction, _super);\n    function ClearSearchResultsAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label, 'search-action clear-search-results') || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.update();\n        return _this;\n    }\n    ClearSearchResultsAction.prototype.update = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        this.enabled = !!searchView && (!searchView.allSearchFieldsClear() || searchView.hasSearchResults());\n    };\n    ClearSearchResultsAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.clearSearchResults();\n        }\n        return Promise.resolve();\n    };\n    ClearSearchResultsAction.ID = 'search.action.clearSearchResults';\n    ClearSearchResultsAction.LABEL = nls.localize('ClearSearchResultsAction.label', \"Clear Search Results\");\n    ClearSearchResultsAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], ClearSearchResultsAction);\n    return ClearSearchResultsAction;\n}(actions_1.Action));\nexports.ClearSearchResultsAction = ClearSearchResultsAction;\nvar CancelSearchAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CancelSearchAction, _super);\n    function CancelSearchAction(id, label, viewletService, panelService) {\n        var _this = _super.call(this, id, label, 'search-action cancel-search') || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.update();\n        return _this;\n    }\n    CancelSearchAction.prototype.update = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        this.enabled = !!searchView && searchView.isSearching();\n    };\n    CancelSearchAction.prototype.run = function () {\n        var searchView = getSearchView(this.viewletService, this.panelService);\n        if (searchView) {\n            searchView.cancelSearch();\n        }\n        return Promise.resolve(undefined);\n    };\n    CancelSearchAction.ID = 'search.action.cancelSearch';\n    CancelSearchAction.LABEL = nls.localize('CancelSearchAction.label', \"Cancel Search\");\n    CancelSearchAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService)\n    ], CancelSearchAction);\n    return CancelSearchAction;\n}(actions_1.Action));\nexports.CancelSearchAction = CancelSearchAction;\nvar FocusNextSearchResultAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusNextSearchResultAction, _super);\n    function FocusNextSearchResultAction(id, label, viewletService, panelService, configurationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.configurationService = configurationService;\n        return _this;\n    }\n    FocusNextSearchResultAction.prototype.run = function () {\n        return openSearchView(this.viewletService, this.panelService, this.configurationService).then(function (searchView) {\n            if (searchView) {\n                searchView.selectNextMatch();\n            }\n        });\n    };\n    FocusNextSearchResultAction.ID = 'search.action.focusNextSearchResult';\n    FocusNextSearchResultAction.LABEL = nls.localize('FocusNextSearchResult.label', \"Focus Next Search Result\");\n    FocusNextSearchResultAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], FocusNextSearchResultAction);\n    return FocusNextSearchResultAction;\n}(actions_1.Action));\nexports.FocusNextSearchResultAction = FocusNextSearchResultAction;\nvar FocusPreviousSearchResultAction = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusPreviousSearchResultAction, _super);\n    function FocusPreviousSearchResultAction(id, label, viewletService, panelService, configurationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        _this.panelService = panelService;\n        _this.configurationService = configurationService;\n        return _this;\n    }\n    FocusPreviousSearchResultAction.prototype.run = function () {\n        return openSearchView(this.viewletService, this.panelService, this.configurationService).then(function (searchView) {\n            if (searchView) {\n                searchView.selectPreviousMatch();\n            }\n        });\n    };\n    FocusPreviousSearchResultAction.ID = 'search.action.focusPreviousSearchResult';\n    FocusPreviousSearchResultAction.LABEL = nls.localize('FocusPreviousSearchResult.label', \"Focus Previous Search Result\");\n    FocusPreviousSearchResultAction = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, panelService_1.IPanelService),\n        tslib_1.__param(4, configuration_1.IConfigurationService)\n    ], FocusPreviousSearchResultAction);\n    return FocusPreviousSearchResultAction;\n}(actions_1.Action));\nexports.FocusPreviousSearchResultAction = FocusPreviousSearchResultAction;\nvar AbstractSearchAndReplaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractSearchAndReplaceAction, _super);\n    function AbstractSearchAndReplaceAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns element to focus after removing the given element\n     */\n    AbstractSearchAndReplaceAction.prototype.getElementToFocusAfterRemoved = function (viewer, elementToBeRemoved) {\n        var elementToFocus = this.getNextElementAfterRemoved(viewer, elementToBeRemoved);\n        return elementToFocus || this.getPreviousElementAfterRemoved(viewer, elementToBeRemoved);\n    };\n    AbstractSearchAndReplaceAction.prototype.getNextElementAfterRemoved = function (viewer, element) {\n        var navigator = viewer.navigate(element);\n        if (element instanceof searchModel_1.BaseFolderMatch) {\n            while (!!navigator.next() && !(navigator.current() instanceof searchModel_1.BaseFolderMatch)) { }\n        }\n        else if (element instanceof searchModel_1.FileMatch) {\n            while (!!navigator.next() && !(navigator.current() instanceof searchModel_1.FileMatch)) { }\n        }\n        else {\n            while (navigator.next() && !(navigator.current() instanceof searchModel_1.Match)) {\n                viewer.expand(navigator.current());\n            }\n        }\n        return navigator.current();\n    };\n    AbstractSearchAndReplaceAction.prototype.getPreviousElementAfterRemoved = function (viewer, element) {\n        var navigator = viewer.navigate(element);\n        var previousElement = navigator.previous();\n        // Hence take the previous element.\n        var parent = element.parent();\n        if (parent === previousElement) {\n            previousElement = navigator.previous();\n        }\n        if (parent instanceof searchModel_1.FileMatch && parent.parent() === previousElement) {\n            previousElement = navigator.previous();\n        }\n        // If the previous element is a File or Folder, expand it and go to its last child.\n        // Spell out the two cases, would be too easy to create an infinite loop, like by adding another level...\n        if (element instanceof searchModel_1.Match && previousElement && previousElement instanceof searchModel_1.BaseFolderMatch) {\n            navigator.next();\n            viewer.expand(previousElement);\n            previousElement = navigator.previous();\n        }\n        if (element instanceof searchModel_1.Match && previousElement && previousElement instanceof searchModel_1.FileMatch) {\n            navigator.next();\n            viewer.expand(previousElement);\n            previousElement = navigator.previous();\n        }\n        return previousElement;\n    };\n    return AbstractSearchAndReplaceAction;\n}(actions_1.Action));\nexports.AbstractSearchAndReplaceAction = AbstractSearchAndReplaceAction;\nvar RemoveAction = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoveAction, _super);\n    function RemoveAction(viewer, element) {\n        var _this = _super.call(this, 'remove', RemoveAction.LABEL, 'action-remove') || this;\n        _this.viewer = viewer;\n        _this.element = element;\n        return _this;\n    }\n    RemoveAction.prototype.run = function () {\n        var currentFocusElement = this.viewer.getFocus()[0];\n        var nextFocusElement = !currentFocusElement || currentFocusElement instanceof searchModel_1.SearchResult || elementIsEqualOrParent(currentFocusElement, this.element) ?\n            this.getElementToFocusAfterRemoved(this.viewer, this.element) :\n            null;\n        if (nextFocusElement) {\n            this.viewer.reveal(nextFocusElement);\n            this.viewer.setFocus([nextFocusElement], listService_1.getSelectionKeyboardEvent());\n        }\n        this.element.parent().remove(this.element);\n        this.viewer.domFocus();\n        return Promise.resolve();\n    };\n    RemoveAction.LABEL = nls.localize('RemoveAction.label', \"Dismiss\");\n    return RemoveAction;\n}(AbstractSearchAndReplaceAction));\nexports.RemoveAction = RemoveAction;\nfunction elementIsEqualOrParent(element, testParent) {\n    do {\n        if (element === testParent) {\n            return true;\n        }\n    } while (!(element.parent() instanceof searchModel_1.SearchResult) && (element = element.parent()));\n    return false;\n}\nvar ReplaceAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplaceAllAction, _super);\n    function ReplaceAllAction(viewlet, fileMatch, keyBindingService) {\n        var _this = _super.call(this, Constants.ReplaceAllInFileActionId, appendKeyBindingLabel(ReplaceAllAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceAllInFileActionId), keyBindingService), 'action-replace-all') || this;\n        _this.viewlet = viewlet;\n        _this.fileMatch = fileMatch;\n        return _this;\n    }\n    ReplaceAllAction.prototype.run = function () {\n        var _this = this;\n        var tree = this.viewlet.getControl();\n        var nextFocusElement = this.getElementToFocusAfterRemoved(tree, this.fileMatch);\n        return this.fileMatch.parent().replace(this.fileMatch).then(function () {\n            if (nextFocusElement) {\n                tree.setFocus([nextFocusElement], listService_1.getSelectionKeyboardEvent());\n            }\n            tree.domFocus();\n            _this.viewlet.open(_this.fileMatch, true);\n        });\n    };\n    ReplaceAllAction.LABEL = nls.localize('file.replaceAll.label', \"Replace All\");\n    ReplaceAllAction = tslib_1.__decorate([\n        tslib_1.__param(2, keybinding_1.IKeybindingService)\n    ], ReplaceAllAction);\n    return ReplaceAllAction;\n}(AbstractSearchAndReplaceAction));\nexports.ReplaceAllAction = ReplaceAllAction;\nvar ReplaceAllInFolderAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplaceAllInFolderAction, _super);\n    function ReplaceAllInFolderAction(viewer, folderMatch, keyBindingService) {\n        var _this = _super.call(this, Constants.ReplaceAllInFolderActionId, appendKeyBindingLabel(ReplaceAllInFolderAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceAllInFolderActionId), keyBindingService), 'action-replace-all') || this;\n        _this.viewer = viewer;\n        _this.folderMatch = folderMatch;\n        return _this;\n    }\n    ReplaceAllInFolderAction.prototype.run = function () {\n        var _this = this;\n        var nextFocusElement = this.getElementToFocusAfterRemoved(this.viewer, this.folderMatch);\n        return this.folderMatch.replaceAll().then(function () {\n            if (nextFocusElement) {\n                _this.viewer.setFocus([nextFocusElement], listService_1.getSelectionKeyboardEvent());\n            }\n            _this.viewer.domFocus();\n        });\n    };\n    ReplaceAllInFolderAction.LABEL = nls.localize('file.replaceAll.label', \"Replace All\");\n    ReplaceAllInFolderAction = tslib_1.__decorate([\n        tslib_1.__param(2, keybinding_1.IKeybindingService)\n    ], ReplaceAllInFolderAction);\n    return ReplaceAllInFolderAction;\n}(AbstractSearchAndReplaceAction));\nexports.ReplaceAllInFolderAction = ReplaceAllInFolderAction;\nvar ReplaceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReplaceAction, _super);\n    function ReplaceAction(viewer, element, viewlet, replaceService, keyBindingService, editorService, configurationService) {\n        var _this = _super.call(this, Constants.ReplaceActionId, appendKeyBindingLabel(ReplaceAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceActionId), keyBindingService), 'action-replace') || this;\n        _this.viewer = viewer;\n        _this.element = element;\n        _this.viewlet = viewlet;\n        _this.replaceService = replaceService;\n        _this.editorService = editorService;\n        _this.configurationService = configurationService;\n        return _this;\n    }\n    ReplaceAction.prototype.run = function () {\n        var _this = this;\n        this.enabled = false;\n        return this.element.parent().replace(this.element).then(function () {\n            var elementToFocus = _this.getElementToFocusAfterReplace();\n            if (elementToFocus) {\n                _this.viewer.setFocus([elementToFocus], listService_1.getSelectionKeyboardEvent());\n            }\n            return _this.getElementToShowReplacePreview(elementToFocus);\n        }).then(function (elementToShowReplacePreview) {\n            _this.viewer.domFocus();\n            var useReplacePreview = _this.configurationService.getValue().search.useReplacePreview;\n            if (!useReplacePreview || !elementToShowReplacePreview || _this.hasToOpenFile()) {\n                _this.viewlet.open(_this.element, true);\n            }\n            else {\n                _this.replaceService.openReplacePreview(elementToShowReplacePreview, true);\n            }\n        });\n    };\n    ReplaceAction.prototype.getElementToFocusAfterReplace = function () {\n        var navigator = this.viewer.navigate();\n        var fileMatched = false;\n        var elementToFocus = null;\n        do {\n            elementToFocus = navigator.current();\n            if (elementToFocus instanceof searchModel_1.Match) {\n                if (elementToFocus.parent().id() === this.element.parent().id()) {\n                    fileMatched = true;\n                    if (this.element.range().getStartPosition().isBeforeOrEqual(elementToFocus.range().getStartPosition())) {\n                        // Closest next match in the same file\n                        break;\n                    }\n                }\n                else if (fileMatched) {\n                    // First match in the next file (if expanded)\n                    break;\n                }\n            }\n            else if (fileMatched) {\n                if (this.viewer.isCollapsed(elementToFocus)) {\n                    // Next file match (if collapsed)\n                    break;\n                }\n            }\n        } while (!!navigator.next());\n        return elementToFocus;\n    };\n    ReplaceAction.prototype.getElementToShowReplacePreview = function (elementToFocus) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var previousElement;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.hasSameParent(elementToFocus)) {\n                            return [2 /*return*/, elementToFocus];\n                        }\n                        return [4 /*yield*/, this.getPreviousElementAfterRemoved(this.viewer, this.element)];\n                    case 1:\n                        previousElement = _a.sent();\n                        if (this.hasSameParent(previousElement)) {\n                            return [2 /*return*/, previousElement];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    ReplaceAction.prototype.hasSameParent = function (element) {\n        return element && element instanceof searchModel_1.Match && element.parent().resource() === this.element.parent().resource();\n    };\n    ReplaceAction.prototype.hasToOpenFile = function () {\n        var activeEditor = this.editorService.activeEditor;\n        var file = activeEditor ? activeEditor.getResource() : undefined;\n        if (file) {\n            return file.toString() === this.element.parent().resource().toString();\n        }\n        return false;\n    };\n    ReplaceAction.LABEL = nls.localize('match.replace.label', \"Replace\");\n    ReplaceAction = tslib_1.__decorate([\n        tslib_1.__param(3, replace_1.IReplaceService),\n        tslib_1.__param(4, keybinding_1.IKeybindingService),\n        tslib_1.__param(5, editorService_1.IEditorService),\n        tslib_1.__param(6, configuration_1.IConfigurationService)\n    ], ReplaceAction);\n    return ReplaceAction;\n}(AbstractSearchAndReplaceAction));\nexports.ReplaceAction = ReplaceAction;\nfunction uriToClipboardString(resource) {\n    return resource.scheme === network_1.Schemas.file ? path_1.normalize(labels_1.normalizeDriveLetter(resource.fsPath)) : resource.toString();\n}\nexports.copyPathCommand = function (accessor, fileMatch) {\n    var clipboardService = accessor.get(clipboardService_1.IClipboardService);\n    var text = uriToClipboardString(fileMatch.resource());\n    clipboardService.writeText(text);\n};\nfunction matchToString(match, indent) {\n    if (indent === void 0) { indent = 0; }\n    var getFirstLinePrefix = function () { return match.range().startLineNumber + \",\" + match.range().startColumn; };\n    var getOtherLinePrefix = function (i) { return match.range().startLineNumber + i + ''; };\n    var fullMatchLines = match.fullPreviewLines();\n    var largestPrefixSize = fullMatchLines.reduce(function (largest, _, i) {\n        var thisSize = i === 0 ?\n            getFirstLinePrefix().length :\n            getOtherLinePrefix(i).length;\n        return Math.max(thisSize, largest);\n    }, 0);\n    var formattedLines = fullMatchLines\n        .map(function (line, i) {\n        var prefix = i === 0 ?\n            getFirstLinePrefix() :\n            getOtherLinePrefix(i);\n        var paddingStr = strings_1.repeat(' ', largestPrefixSize - prefix.length);\n        var indentStr = strings_1.repeat(' ', indent);\n        return \"\" + indentStr + prefix + \": \" + paddingStr + line;\n    });\n    return formattedLines.join('\\n');\n}\nvar lineDelimiter = platform_1.isWindows ? '\\r\\n' : '\\n';\nfunction fileMatchToString(fileMatch, maxMatches) {\n    var matchTextRows = fileMatch.matches()\n        .sort(searchModel_1.searchMatchComparer)\n        .slice(0, maxMatches)\n        .map(function (match) { return matchToString(match, 2); });\n    return {\n        text: \"\" + uriToClipboardString(fileMatch.resource()) + lineDelimiter + matchTextRows.join(lineDelimiter),\n        count: matchTextRows.length\n    };\n}\nfunction folderMatchToString(folderMatch, maxMatches) {\n    var fileResults = [];\n    var numMatches = 0;\n    var matches = folderMatch.matches().sort(searchModel_1.searchMatchComparer);\n    for (var i = 0; i < folderMatch.fileCount() && numMatches < maxMatches; i++) {\n        var fileResult = fileMatchToString(matches[i], maxMatches - numMatches);\n        numMatches += fileResult.count;\n        fileResults.push(fileResult.text);\n    }\n    return {\n        text: fileResults.join(lineDelimiter + lineDelimiter),\n        count: numMatches\n    };\n}\nvar maxClipboardMatches = 1e4;\nexports.copyMatchCommand = function (accessor, match) {\n    var clipboardService = accessor.get(clipboardService_1.IClipboardService);\n    var text;\n    if (match instanceof searchModel_1.Match) {\n        text = matchToString(match);\n    }\n    else if (match instanceof searchModel_1.FileMatch) {\n        text = fileMatchToString(match, maxClipboardMatches).text;\n    }\n    else if (match instanceof searchModel_1.BaseFolderMatch) {\n        text = folderMatchToString(match, maxClipboardMatches).text;\n    }\n    if (text) {\n        clipboardService.writeText(text);\n    }\n};\nfunction allFolderMatchesToString(folderMatches, maxMatches) {\n    var folderResults = [];\n    var numMatches = 0;\n    folderMatches = folderMatches.sort(searchModel_1.searchMatchComparer);\n    for (var i = 0; i < folderMatches.length && numMatches < maxMatches; i++) {\n        var folderResult = folderMatchToString(folderMatches[i], maxMatches - numMatches);\n        if (folderResult.count) {\n            numMatches += folderResult.count;\n            folderResults.push(folderResult.text);\n        }\n    }\n    return folderResults.join(lineDelimiter + lineDelimiter);\n}\nexports.copyAllCommand = function (accessor) {\n    var viewletService = accessor.get(viewlet_1.IViewletService);\n    var panelService = accessor.get(panelService_1.IPanelService);\n    var clipboardService = accessor.get(clipboardService_1.IClipboardService);\n    var searchView = getSearchView(viewletService, panelService);\n    if (searchView) {\n        var root = searchView.searchResult;\n        var text = allFolderMatchesToString(root.folderMatches(), maxClipboardMatches);\n        clipboardService.writeText(text);\n    }\n};\nexports.clearHistoryCommand = function (accessor) {\n    var searchHistoryService = accessor.get(searchHistoryService_1.ISearchHistoryService);\n    searchHistoryService.clearHistory();\n};\nexports.focusSearchListCommand = function (accessor) {\n    var viewletService = accessor.get(viewlet_1.IViewletService);\n    var panelService = accessor.get(panelService_1.IPanelService);\n    var configurationService = accessor.get(configuration_1.IConfigurationService);\n    openSearchView(viewletService, panelService, configurationService).then(function (searchView) {\n        if (searchView) {\n            searchView.moveFocusToResults();\n        }\n    });\n};\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { Action } from 'vs/base/common/actions';\nimport { INavigator } from 'vs/base/common/iterator';\nimport { createKeybinding, ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalize } from 'vs/base/common/path';\nimport { isWindows, OS } from 'vs/base/common/platform';\nimport { repeat } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { getSelectionKeyboardEvent, WorkbenchObjectTree } from 'vs/platform/list/browser/listService';\nimport { SearchView } from 'vs/workbench/contrib/search/browser/searchView';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport { IReplaceService } from 'vs/workbench/contrib/search/common/replace';\nimport { BaseFolderMatch, FileMatch, FileMatchOrMatch, FolderMatch, Match, RenderableMatch, searchMatchComparer, SearchResult } from 'vs/workbench/contrib/search/common/searchModel';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { ISearchConfiguration, VIEWLET_ID, PANEL_ID } from 'vs/workbench/services/search/common/search';\nimport { ISearchHistoryService } from 'vs/workbench/contrib/search/common/searchHistoryService';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { SearchViewlet } from 'vs/workbench/contrib/search/browser/searchViewlet';\nimport { SearchPanel } from 'vs/workbench/contrib/search/browser/searchPanel';\n\nexport function isSearchViewFocused(viewletService: IViewletService, panelService: IPanelService): boolean {\n\tconst searchView = getSearchView(viewletService, panelService);\n\tconst activeElement = document.activeElement;\n\treturn !!(searchView && activeElement && DOM.isAncestor(activeElement, searchView.getContainer()));\n}\n\nexport function appendKeyBindingLabel(label: string, inputKeyBinding: number | ResolvedKeybinding | undefined, keyBindingService2: IKeybindingService): string {\n\tif (typeof inputKeyBinding === 'number') {\n\t\tconst keybinding = createKeybinding(inputKeyBinding, OS);\n\t\tif (keybinding) {\n\t\t\tconst resolvedKeybindings = keyBindingService2.resolveKeybinding(keybinding);\n\t\t\treturn doAppendKeyBindingLabel(label, resolvedKeybindings.length > 0 ? resolvedKeybindings[0] : undefined);\n\t\t}\n\t\treturn doAppendKeyBindingLabel(label, undefined);\n\t} else {\n\t\treturn doAppendKeyBindingLabel(label, inputKeyBinding);\n\t}\n}\n\nexport function openSearchView(viewletService: IViewletService, panelService: IPanelService, configurationService: IConfigurationService, focus?: boolean): Promise<SearchView | undefined> {\n\tif (configurationService.getValue<ISearchConfiguration>().search.location === 'panel') {\n\t\treturn Promise.resolve((panelService.openPanel(PANEL_ID, focus) as SearchPanel).getSearchView());\n\t}\n\n\treturn viewletService.openViewlet(VIEWLET_ID, focus).then(viewlet => (viewlet as SearchViewlet).getSearchView());\n}\n\nexport function getSearchView(viewletService: IViewletService, panelService: IPanelService): SearchView | undefined {\n\tconst activeViewlet = viewletService.getActiveViewlet();\n\tif (activeViewlet && activeViewlet.getId() === VIEWLET_ID) {\n\t\treturn (activeViewlet as SearchViewlet).getSearchView();\n\t}\n\n\tconst activePanel = panelService.getActivePanel();\n\tif (activePanel && activePanel.getId() === PANEL_ID) {\n\t\treturn (activePanel as SearchPanel).getSearchView();\n\t}\n\n\treturn undefined;\n}\n\nfunction doAppendKeyBindingLabel(label: string, keyBinding: ResolvedKeybinding | undefined): string {\n\treturn keyBinding ? label + ' (' + keyBinding.getLabel() + ')' : label;\n}\n\nexport const toggleCaseSensitiveCommand = (accessor: ServicesAccessor) => {\n\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\tif (searchView) {\n\t\tsearchView.toggleCaseSensitive();\n\t}\n};\n\nexport const toggleWholeWordCommand = (accessor: ServicesAccessor) => {\n\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\tif (searchView) {\n\n\t\tsearchView.toggleWholeWords();\n\t}\n};\n\nexport const toggleRegexCommand = (accessor: ServicesAccessor) => {\n\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\tif (searchView) {\n\t\tsearchView.toggleRegex();\n\t}\n};\n\nexport class FocusNextInputAction extends Action {\n\n\tstatic readonly ID = 'search.focus.nextInputBox';\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.focusNextInputBox();\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class FocusPreviousInputAction extends Action {\n\n\tstatic readonly ID = 'search.focus.previousInputBox';\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.focusPreviousInputBox();\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport abstract class FindOrReplaceInFilesAction extends Action {\n\n\tconstructor(id: string, label: string, protected viewletService: IViewletService, protected panelService: IPanelService, protected configurationService: IConfigurationService,\n\t\tprivate expandSearchReplaceWidget: boolean\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn openSearchView(this.viewletService, this.panelService, this.configurationService, false).then(openedView => {\n\t\t\tif (openedView) {\n\t\t\t\tconst searchAndReplaceWidget = openedView.searchAndReplaceWidget;\n\t\t\t\tsearchAndReplaceWidget.toggleReplace(this.expandSearchReplaceWidget);\n\n\t\t\t\tconst updatedText = openedView.updateTextFromSelection(!this.expandSearchReplaceWidget);\n\t\t\t\topenedView.searchAndReplaceWidget.focus(undefined, updatedText, updatedText);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class FindInFilesAction extends FindOrReplaceInFilesAction {\n\n\tstatic readonly LABEL = nls.localize('findInFiles', \"Find in Files\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/false);\n\t}\n}\n\nexport class OpenSearchViewletAction extends FindOrReplaceInFilesAction {\n\n\tstatic readonly LABEL = nls.localize('showSearch', \"Show Search\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/false);\n\t}\n\n\trun(): Promise<any> {\n\n\t\t// Pass focus to viewlet if not open or focused\n\t\tif (this.otherViewletShowing() || !isSearchViewFocused(this.viewletService, this.panelService)) {\n\t\t\treturn super.run();\n\t\t}\n\n\t\t// Otherwise pass focus to editor group\n\t\tthis.editorGroupService.activeGroup.focus();\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tprivate otherViewletShowing(): boolean {\n\t\treturn !getSearchView(this.viewletService, this.panelService);\n\t}\n}\n\nexport class ReplaceInFilesAction extends FindOrReplaceInFilesAction {\n\n\tstatic readonly ID = 'workbench.action.replaceInFiles';\n\tstatic readonly LABEL = nls.localize('replaceInFiles', \"Replace in Files\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, viewletService, panelService, configurationService, /*expandSearchReplaceWidget=*/true);\n\t}\n}\n\nexport class CloseReplaceAction extends Action {\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.searchAndReplaceWidget.toggleReplace(false);\n\t\t\tsearchView.searchAndReplaceWidget.focus();\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class RefreshAction extends Action {\n\n\tstatic readonly ID: string = 'search.action.refreshSearchResults';\n\tstatic LABEL: string = nls.localize('RefreshAction.label', \"Refresh\");\n\n\tprivate searchView: SearchView | undefined;\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label, 'search-action refresh');\n\t\tthis.searchView = getSearchView(this.viewletService, this.panelService);\n\t}\n\n\tget enabled(): boolean {\n\t\treturn !!this.searchView && this.searchView.isSearchSubmitted();\n\t}\n\n\tupdate(): void {\n\t\tthis._setEnabled(this.enabled);\n\t}\n\n\trun(): Promise<void> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.onQueryChanged();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class CollapseDeepestExpandedLevelAction extends Action {\n\n\tstatic readonly ID: string = 'search.action.collapseSearchResults';\n\tstatic LABEL: string = nls.localize('CollapseDeepestExpandedLevelAction.label', \"Collapse All\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label, 'search-action collapse');\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tthis.enabled = !!searchView && searchView.hasSearchResults();\n\t}\n\n\trun(): Promise<void> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tconst viewer = searchView.getControl();\n\n\t\t\t/**\n\t\t\t * one level to collapse so collapse everything. If FolderMatch, check if there are visible grandchildren,\n\t\t\t * i.e. if Matches are returned by the navigator, and if so, collapse to them, otherwise collapse all levels.\n\t\t\t */\n\t\t\tconst navigator = viewer.navigate();\n\t\t\tlet node = navigator.first();\n\t\t\tlet collapseFileMatchLevel = false;\n\t\t\tif (node instanceof BaseFolderMatch) {\n\t\t\t\twhile (node = navigator.next()) {\n\t\t\t\t\tif (node instanceof Match) {\n\t\t\t\t\t\tcollapseFileMatchLevel = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (collapseFileMatchLevel) {\n\t\t\t\tnode = navigator.first();\n\t\t\t\tdo {\n\t\t\t\t\tif (node instanceof FileMatch) {\n\t\t\t\t\t\tviewer.collapse(node);\n\t\t\t\t\t}\n\t\t\t\t} while (node = navigator.next());\n\t\t\t} else {\n\t\t\t\tviewer.collapseAll();\n\t\t\t}\n\n\t\t\tviewer.domFocus();\n\t\t\tviewer.focusFirst();\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class ClearSearchResultsAction extends Action {\n\n\tstatic readonly ID: string = 'search.action.clearSearchResults';\n\tstatic LABEL: string = nls.localize('ClearSearchResultsAction.label', \"Clear Search Results\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label, 'search-action clear-search-results');\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tthis.enabled = !!searchView && (!searchView.allSearchFieldsClear() || searchView.hasSearchResults());\n\t}\n\n\trun(): Promise<void> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.clearSearchResults();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class CancelSearchAction extends Action {\n\n\tstatic readonly ID: string = 'search.action.cancelSearch';\n\tstatic LABEL: string = nls.localize('CancelSearchAction.label', \"Cancel Search\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService\n\t) {\n\t\tsuper(id, label, 'search-action cancel-search');\n\t\tthis.update();\n\t}\n\n\tupdate(): void {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tthis.enabled = !!searchView && searchView.isSearching();\n\t}\n\n\trun(): Promise<void> {\n\t\tconst searchView = getSearchView(this.viewletService, this.panelService);\n\t\tif (searchView) {\n\t\t\tsearchView.cancelSearch();\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nexport class FocusNextSearchResultAction extends Action {\n\tstatic readonly ID = 'search.action.focusNextSearchResult';\n\tstatic readonly LABEL = nls.localize('FocusNextSearchResult.label', \"Focus Next Search Result\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn openSearchView(this.viewletService, this.panelService, this.configurationService).then(searchView => {\n\t\t\tif (searchView) {\n\t\t\t\tsearchView.selectNextMatch();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class FocusPreviousSearchResultAction extends Action {\n\tstatic readonly ID = 'search.action.focusPreviousSearchResult';\n\tstatic readonly LABEL = nls.localize('FocusPreviousSearchResult.label', \"Focus Previous Search Result\");\n\n\tconstructor(id: string, label: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<any> {\n\t\treturn openSearchView(this.viewletService, this.panelService, this.configurationService).then(searchView => {\n\t\t\tif (searchView) {\n\t\t\t\tsearchView.selectPreviousMatch();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport abstract class AbstractSearchAndReplaceAction extends Action {\n\n\t/**\n\t * Returns element to focus after removing the given element\n\t */\n\tgetElementToFocusAfterRemoved(viewer: WorkbenchObjectTree<RenderableMatch>, elementToBeRemoved: RenderableMatch): RenderableMatch {\n\t\tconst elementToFocus = this.getNextElementAfterRemoved(viewer, elementToBeRemoved);\n\t\treturn elementToFocus || this.getPreviousElementAfterRemoved(viewer, elementToBeRemoved);\n\t}\n\n\tgetNextElementAfterRemoved(viewer: WorkbenchObjectTree<RenderableMatch>, element: RenderableMatch): RenderableMatch {\n\t\tconst navigator: INavigator<any> = viewer.navigate(element);\n\t\tif (element instanceof BaseFolderMatch) {\n\t\t\twhile (!!navigator.next() && !(navigator.current() instanceof BaseFolderMatch)) { }\n\t\t} else if (element instanceof FileMatch) {\n\t\t\twhile (!!navigator.next() && !(navigator.current() instanceof FileMatch)) { }\n\t\t} else {\n\t\t\twhile (navigator.next() && !(navigator.current() instanceof Match)) {\n\t\t\t\tviewer.expand(navigator.current());\n\t\t\t}\n\t\t}\n\t\treturn navigator.current();\n\t}\n\n\tgetPreviousElementAfterRemoved(viewer: WorkbenchObjectTree<RenderableMatch>, element: RenderableMatch): RenderableMatch {\n\t\tconst navigator: INavigator<any> = viewer.navigate(element);\n\t\tlet previousElement = navigator.previous();\n\n\t\t// Hence take the previous element.\n\t\tconst parent = element.parent();\n\t\tif (parent === previousElement) {\n\t\t\tpreviousElement = navigator.previous();\n\t\t}\n\n\t\tif (parent instanceof FileMatch && parent.parent() === previousElement) {\n\t\t\tpreviousElement = navigator.previous();\n\t\t}\n\n\t\t// If the previous element is a File or Folder, expand it and go to its last child.\n\t\t// Spell out the two cases, would be too easy to create an infinite loop, like by adding another level...\n\t\tif (element instanceof Match && previousElement && previousElement instanceof BaseFolderMatch) {\n\t\t\tnavigator.next();\n\t\t\tviewer.expand(previousElement);\n\t\t\tpreviousElement = navigator.previous();\n\t\t}\n\n\t\tif (element instanceof Match && previousElement && previousElement instanceof FileMatch) {\n\t\t\tnavigator.next();\n\t\t\tviewer.expand(previousElement);\n\t\t\tpreviousElement = navigator.previous();\n\t\t}\n\n\t\treturn previousElement;\n\t}\n}\n\nexport class RemoveAction extends AbstractSearchAndReplaceAction {\n\n\tstatic LABEL = nls.localize('RemoveAction.label', \"Dismiss\");\n\n\tconstructor(\n\t\tprivate viewer: WorkbenchObjectTree<RenderableMatch>,\n\t\tprivate element: RenderableMatch\n\t) {\n\t\tsuper('remove', RemoveAction.LABEL, 'action-remove');\n\t}\n\n\trun(): Promise<any> {\n\t\tconst currentFocusElement = this.viewer.getFocus()[0];\n\t\tconst nextFocusElement = !currentFocusElement || currentFocusElement instanceof SearchResult || elementIsEqualOrParent(currentFocusElement, this.element) ?\n\t\t\tthis.getElementToFocusAfterRemoved(this.viewer, this.element) :\n\t\t\tnull;\n\n\t\tif (nextFocusElement) {\n\t\t\tthis.viewer.reveal(nextFocusElement);\n\t\t\tthis.viewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n\t\t}\n\n\t\tthis.element.parent().remove(<any>this.element);\n\t\tthis.viewer.domFocus();\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nfunction elementIsEqualOrParent(element: RenderableMatch, testParent: RenderableMatch | SearchResult): boolean {\n\tdo {\n\t\tif (element === testParent) {\n\t\t\treturn true;\n\t\t}\n\t} while (!(element.parent() instanceof SearchResult) && (element = <RenderableMatch>element.parent()));\n\n\treturn false;\n}\n\nexport class ReplaceAllAction extends AbstractSearchAndReplaceAction {\n\n\tstatic readonly LABEL = nls.localize('file.replaceAll.label', \"Replace All\");\n\n\tconstructor(\n\t\tprivate viewlet: SearchView,\n\t\tprivate fileMatch: FileMatch,\n\t\t@IKeybindingService keyBindingService: IKeybindingService\n\t) {\n\t\tsuper(Constants.ReplaceAllInFileActionId, appendKeyBindingLabel(ReplaceAllAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceAllInFileActionId), keyBindingService), 'action-replace-all');\n\t}\n\n\trun(): Promise<any> {\n\t\tconst tree = this.viewlet.getControl();\n\t\tconst nextFocusElement = this.getElementToFocusAfterRemoved(tree, this.fileMatch);\n\t\treturn this.fileMatch.parent().replace(this.fileMatch).then(() => {\n\t\t\tif (nextFocusElement) {\n\t\t\t\ttree.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n\t\t\t}\n\n\t\t\ttree.domFocus();\n\t\t\tthis.viewlet.open(this.fileMatch, true);\n\t\t});\n\t}\n}\n\nexport class ReplaceAllInFolderAction extends AbstractSearchAndReplaceAction {\n\n\tstatic readonly LABEL = nls.localize('file.replaceAll.label', \"Replace All\");\n\n\tconstructor(private viewer: WorkbenchObjectTree<RenderableMatch>, private folderMatch: FolderMatch,\n\t\t@IKeybindingService keyBindingService: IKeybindingService\n\t) {\n\t\tsuper(Constants.ReplaceAllInFolderActionId, appendKeyBindingLabel(ReplaceAllInFolderAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceAllInFolderActionId), keyBindingService), 'action-replace-all');\n\t}\n\n\trun(): Promise<any> {\n\t\tconst nextFocusElement = this.getElementToFocusAfterRemoved(this.viewer, this.folderMatch);\n\t\treturn this.folderMatch.replaceAll().then(() => {\n\t\t\tif (nextFocusElement) {\n\t\t\t\tthis.viewer.setFocus([nextFocusElement], getSelectionKeyboardEvent());\n\t\t\t}\n\t\t\tthis.viewer.domFocus();\n\t\t});\n\t}\n}\n\nexport class ReplaceAction extends AbstractSearchAndReplaceAction {\n\n\tstatic readonly LABEL = nls.localize('match.replace.label', \"Replace\");\n\n\tconstructor(private viewer: WorkbenchObjectTree<RenderableMatch>, private element: Match, private viewlet: SearchView,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IKeybindingService keyBindingService: IKeybindingService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService) {\n\t\tsuper(Constants.ReplaceActionId, appendKeyBindingLabel(ReplaceAction.LABEL, keyBindingService.lookupKeybinding(Constants.ReplaceActionId), keyBindingService), 'action-replace');\n\t}\n\n\trun(): Promise<any> {\n\t\tthis.enabled = false;\n\n\t\treturn this.element.parent().replace(this.element).then(() => {\n\t\t\tconst elementToFocus = this.getElementToFocusAfterReplace();\n\t\t\tif (elementToFocus) {\n\t\t\t\tthis.viewer.setFocus([elementToFocus], getSelectionKeyboardEvent());\n\t\t\t}\n\n\t\t\treturn this.getElementToShowReplacePreview(elementToFocus);\n\t\t}).then(elementToShowReplacePreview => {\n\t\t\tthis.viewer.domFocus();\n\n\t\t\tconst useReplacePreview = this.configurationService.getValue<ISearchConfiguration>().search.useReplacePreview;\n\t\t\tif (!useReplacePreview || !elementToShowReplacePreview || this.hasToOpenFile()) {\n\t\t\t\tthis.viewlet.open(this.element, true);\n\t\t\t} else {\n\t\t\t\tthis.replaceService.openReplacePreview(elementToShowReplacePreview, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getElementToFocusAfterReplace(): Match {\n\t\tconst navigator: INavigator<any> = this.viewer.navigate();\n\t\tlet fileMatched = false;\n\t\tlet elementToFocus: any = null;\n\t\tdo {\n\t\t\telementToFocus = navigator.current();\n\t\t\tif (elementToFocus instanceof Match) {\n\t\t\t\tif (elementToFocus.parent().id() === this.element.parent().id()) {\n\t\t\t\t\tfileMatched = true;\n\t\t\t\t\tif (this.element.range().getStartPosition().isBeforeOrEqual((<Match>elementToFocus).range().getStartPosition())) {\n\t\t\t\t\t\t// Closest next match in the same file\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (fileMatched) {\n\t\t\t\t\t// First match in the next file (if expanded)\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (fileMatched) {\n\t\t\t\tif (this.viewer.isCollapsed(elementToFocus)) {\n\t\t\t\t\t// Next file match (if collapsed)\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (!!navigator.next());\n\t\treturn elementToFocus;\n\t}\n\n\tprivate async getElementToShowReplacePreview(elementToFocus: FileMatchOrMatch): Promise<Match | null> {\n\t\tif (this.hasSameParent(elementToFocus)) {\n\t\t\treturn <Match>elementToFocus;\n\t\t}\n\t\tconst previousElement = await this.getPreviousElementAfterRemoved(this.viewer, this.element);\n\t\tif (this.hasSameParent(previousElement)) {\n\t\t\treturn <Match>previousElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate hasSameParent(element: RenderableMatch): boolean {\n\t\treturn element && element instanceof Match && element.parent().resource() === this.element.parent().resource();\n\t}\n\n\tprivate hasToOpenFile(): boolean {\n\t\tconst activeEditor = this.editorService.activeEditor;\n\t\tconst file = activeEditor ? activeEditor.getResource() : undefined;\n\t\tif (file) {\n\t\t\treturn file.toString() === this.element.parent().resource().toString();\n\t\t}\n\t\treturn false;\n\t}\n}\n\nfunction uriToClipboardString(resource: URI): string {\n\treturn resource.scheme === Schemas.file ? normalize(normalizeDriveLetter(resource.fsPath)) : resource.toString();\n}\n\nexport const copyPathCommand: ICommandHandler = (accessor, fileMatch: FileMatch | FolderMatch) => {\n\tconst clipboardService = accessor.get(IClipboardService);\n\n\tconst text = uriToClipboardString(fileMatch.resource());\n\tclipboardService.writeText(text);\n};\n\nfunction matchToString(match: Match, indent = 0): string {\n\tconst getFirstLinePrefix = () => `${match.range().startLineNumber},${match.range().startColumn}`;\n\tconst getOtherLinePrefix = (i: number) => match.range().startLineNumber + i + '';\n\n\tconst fullMatchLines = match.fullPreviewLines();\n\tconst largestPrefixSize = fullMatchLines.reduce((largest, _, i) => {\n\t\tconst thisSize = i === 0 ?\n\t\t\tgetFirstLinePrefix().length :\n\t\t\tgetOtherLinePrefix(i).length;\n\n\t\treturn Math.max(thisSize, largest);\n\t}, 0);\n\n\tconst formattedLines = fullMatchLines\n\t\t.map((line, i) => {\n\t\t\tconst prefix = i === 0 ?\n\t\t\t\tgetFirstLinePrefix() :\n\t\t\t\tgetOtherLinePrefix(i);\n\n\t\t\tconst paddingStr = repeat(' ', largestPrefixSize - prefix.length);\n\t\t\tconst indentStr = repeat(' ', indent);\n\t\t\treturn `${indentStr}${prefix}: ${paddingStr}${line}`;\n\t\t});\n\n\treturn formattedLines.join('\\n');\n}\n\nconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\nfunction fileMatchToString(fileMatch: FileMatch, maxMatches: number): { text: string, count: number } {\n\tconst matchTextRows = fileMatch.matches()\n\t\t.sort(searchMatchComparer)\n\t\t.slice(0, maxMatches)\n\t\t.map(match => matchToString(match, 2));\n\treturn {\n\t\ttext: `${uriToClipboardString(fileMatch.resource())}${lineDelimiter}${matchTextRows.join(lineDelimiter)}`,\n\t\tcount: matchTextRows.length\n\t};\n}\n\nfunction folderMatchToString(folderMatch: FolderMatch | BaseFolderMatch, maxMatches: number): { text: string, count: number } {\n\tconst fileResults: string[] = [];\n\tlet numMatches = 0;\n\n\tconst matches = folderMatch.matches().sort(searchMatchComparer);\n\n\tfor (let i = 0; i < folderMatch.fileCount() && numMatches < maxMatches; i++) {\n\t\tconst fileResult = fileMatchToString(matches[i], maxMatches - numMatches);\n\t\tnumMatches += fileResult.count;\n\t\tfileResults.push(fileResult.text);\n\t}\n\n\treturn {\n\t\ttext: fileResults.join(lineDelimiter + lineDelimiter),\n\t\tcount: numMatches\n\t};\n}\n\nconst maxClipboardMatches = 1e4;\nexport const copyMatchCommand: ICommandHandler = (accessor, match: RenderableMatch) => {\n\tconst clipboardService = accessor.get(IClipboardService);\n\n\tlet text: string | undefined;\n\tif (match instanceof Match) {\n\t\ttext = matchToString(match);\n\t} else if (match instanceof FileMatch) {\n\t\ttext = fileMatchToString(match, maxClipboardMatches).text;\n\t} else if (match instanceof BaseFolderMatch) {\n\t\ttext = folderMatchToString(match, maxClipboardMatches).text;\n\t}\n\n\tif (text) {\n\t\tclipboardService.writeText(text);\n\t}\n};\n\nfunction allFolderMatchesToString(folderMatches: Array<FolderMatch | BaseFolderMatch>, maxMatches: number): string {\n\tconst folderResults: string[] = [];\n\tlet numMatches = 0;\n\tfolderMatches = folderMatches.sort(searchMatchComparer);\n\tfor (let i = 0; i < folderMatches.length && numMatches < maxMatches; i++) {\n\t\tconst folderResult = folderMatchToString(folderMatches[i], maxMatches - numMatches);\n\t\tif (folderResult.count) {\n\t\t\tnumMatches += folderResult.count;\n\t\t\tfolderResults.push(folderResult.text);\n\t\t}\n\t}\n\n\treturn folderResults.join(lineDelimiter + lineDelimiter);\n}\n\nexport const copyAllCommand: ICommandHandler = accessor => {\n\tconst viewletService = accessor.get(IViewletService);\n\tconst panelService = accessor.get(IPanelService);\n\tconst clipboardService = accessor.get(IClipboardService);\n\n\tconst searchView = getSearchView(viewletService, panelService);\n\tif (searchView) {\n\t\tconst root = searchView.searchResult;\n\n\t\tconst text = allFolderMatchesToString(root.folderMatches(), maxClipboardMatches);\n\t\tclipboardService.writeText(text);\n\t}\n};\n\nexport const clearHistoryCommand: ICommandHandler = accessor => {\n\tconst searchHistoryService = accessor.get(ISearchHistoryService);\n\tsearchHistoryService.clearHistory();\n};\n\nexport const focusSearchListCommand: ICommandHandler = accessor => {\n\tconst viewletService = accessor.get(IViewletService);\n\tconst panelService = accessor.get(IPanelService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\topenSearchView(viewletService, panelService, configurationService).then(searchView => {\n\t\tif (searchView) {\n\t\t\tsearchView.moveFocusToResults();\n\t\t}\n\t});\n};\n"]}]}