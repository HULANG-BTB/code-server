{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/protocol/src/browser/modules/node-pty.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/browser/modules/node-pty.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar proxy_1 = require(\"../../common/proxy\");\n// tslint:disable completed-docs\nvar NodePtyProcess = /** @class */ (function (_super) {\n    tslib_1.__extends(NodePtyProcess, _super);\n    function NodePtyProcess(moduleProxy, file, args, options) {\n        var _this = _super.call(this, moduleProxy.spawn(file, args, options)) || this;\n        _this.moduleProxy = moduleProxy;\n        _this.file = file;\n        _this.args = args;\n        _this.options = options;\n        _this._pid = -1;\n        _this._process = \"\";\n        _this.on(\"process\", function (process) { return _this._process = process; });\n        return _this;\n    }\n    NodePtyProcess.prototype.initialize = function (proxyPromise) {\n        var _this = this;\n        _super.prototype.initialize.call(this, proxyPromise);\n        this.catch(this.proxy.getPid().then(function (p) { return _this._pid = p; }));\n        this.catch(this.proxy.getProcess().then(function (p) { return _this._process = p; }));\n    };\n    Object.defineProperty(NodePtyProcess.prototype, \"pid\", {\n        get: function () {\n            return this._pid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NodePtyProcess.prototype, \"process\", {\n        get: function () {\n            return this._process;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NodePtyProcess.prototype.resize = function (columns, rows) {\n        this.catch(this.proxy.resize(columns, rows));\n    };\n    NodePtyProcess.prototype.write = function (data) {\n        this.catch(this.proxy.write(data));\n    };\n    NodePtyProcess.prototype.kill = function (signal) {\n        this.catch(this.proxy.kill(signal));\n    };\n    NodePtyProcess.prototype.handleDisconnect = function () {\n        this._process += \" (disconnected)\";\n        this.emit(\"data\", \"\\r\\n\\nLost connection...\\r\\n\\n\");\n        this.initialize(this.moduleProxy.spawn(this.file, this.args, this.options));\n    };\n    return NodePtyProcess;\n}(proxy_1.ClientProxy));\nexports.NodePtyProcess = NodePtyProcess;\nvar NodePtyModule = /** @class */ (function () {\n    function NodePtyModule(proxy) {\n        var _this = this;\n        this.proxy = proxy;\n        this.spawn = function (file, args, options) {\n            return new NodePtyProcess(_this.proxy, file, args, options);\n        };\n    }\n    return NodePtyModule;\n}());\nexports.NodePtyModule = NodePtyModule;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/browser/modules/node-pty.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/browser/modules/node-pty.ts"],"names":[],"mappings":";;;AACA,4CAAiD;AAGjD,gCAAgC;AAEhC;IAAoC,0CAAgC;IAInE,wBACkB,WAA+B,EAC/B,IAAY,EACZ,IAAuB,EACvB,OAA4B;QAJ9C,YAMC,kBAAM,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,SAE7C;QAPiB,iBAAW,GAAX,WAAW,CAAoB;QAC/B,UAAI,GAAJ,IAAI,CAAQ;QACZ,UAAI,GAAJ,IAAI,CAAmB;QACvB,aAAO,GAAP,OAAO,CAAqB;QAPtC,UAAI,GAAG,CAAC,CAAC,CAAC;QACV,cAAQ,GAAG,EAAE,CAAC;QASrB,KAAI,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,IAAK,OAAA,KAAI,CAAC,QAAQ,GAAG,OAAO,EAAvB,CAAuB,CAAC,CAAC;;IAC1D,CAAC;IAES,mCAAU,GAApB,UAAqB,YAA0C;QAA/D,iBAIC;QAHA,iBAAM,UAAU,YAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,IAAI,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,sBAAW,+BAAG;aAAd;YACC,OAAO,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;;;OAAA;IAED,sBAAW,mCAAO;aAAlB;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;;;OAAA;IAEM,+BAAM,GAAb,UAAc,OAAe,EAAE,IAAY;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,CAAC;IAEM,8BAAK,GAAZ,UAAa,IAAY;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC;IAEM,6BAAI,GAAX,UAAY,MAAe;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACrC,CAAC;IAES,yCAAgB,GAA1B;QACC,IAAI,CAAC,QAAQ,IAAI,iBAAiB,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gCAAgC,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IACF,qBAAC;AAAD,CAAC,AA7CD,CAAoC,mBAAW,GA6C9C;AA7CY,wCAAc;AAiD3B;IACC,uBAAoC,KAAyB;QAA7D,iBAAiE;QAA7B,UAAK,GAAL,KAAK,CAAoB;QAEtD,UAAK,GAAG,UAAC,IAAY,EAAE,IAAuB,EAAE,OAA4B;YAClF,OAAO,IAAI,cAAc,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,CAAC,CAAA;IAJ+D,CAAC;IAKlE,oBAAC;AAAD,CAAC,AAND,IAMC;AANY,sCAAa","sourcesContent":["import * as pty from \"node-pty\";\nimport { ClientProxy } from \"../../common/proxy\";\nimport { NodePtyModuleProxy, NodePtyProcessProxy } from \"../../node/modules/node-pty\";\n\n// tslint:disable completed-docs\n\nexport class NodePtyProcess extends ClientProxy<NodePtyProcessProxy> implements pty.IPty {\n\tprivate _pid = -1;\n\tprivate _process = \"\";\n\n\tpublic constructor(\n\t\tprivate readonly moduleProxy: NodePtyModuleProxy,\n\t\tprivate readonly file: string,\n\t\tprivate readonly args: string[] | string,\n\t\tprivate readonly options: pty.IPtyForkOptions,\n\t) {\n\t\tsuper(moduleProxy.spawn(file, args, options));\n\t\tthis.on(\"process\", (process) => this._process = process);\n\t}\n\n\tprotected initialize(proxyPromise: Promise<NodePtyProcessProxy>): void {\n\t\tsuper.initialize(proxyPromise);\n\t\tthis.catch(this.proxy.getPid().then((p) => this._pid = p));\n\t\tthis.catch(this.proxy.getProcess().then((p) => this._process = p));\n\t}\n\n\tpublic get pid(): number {\n\t\treturn this._pid;\n\t}\n\n\tpublic get process(): string {\n\t\treturn this._process;\n\t}\n\n\tpublic resize(columns: number, rows: number): void {\n\t\tthis.catch(this.proxy.resize(columns, rows));\n\t}\n\n\tpublic write(data: string): void {\n\t\tthis.catch(this.proxy.write(data));\n\t}\n\n\tpublic kill(signal?: string): void {\n\t\tthis.catch(this.proxy.kill(signal));\n\t}\n\n\tprotected handleDisconnect(): void {\n\t\tthis._process += \" (disconnected)\";\n\t\tthis.emit(\"data\", \"\\r\\n\\nLost connection...\\r\\n\\n\");\n\t\tthis.initialize(this.moduleProxy.spawn(this.file, this.args, this.options));\n\t}\n}\n\ntype NodePty = typeof pty;\n\nexport class NodePtyModule implements NodePty {\n\tpublic constructor(private readonly proxy: NodePtyModuleProxy) {}\n\n\tpublic spawn = (file: string, args: string[] | string, options: pty.IPtyForkOptions): pty.IPty => {\n\t\treturn new NodePtyProcess(this.proxy, file, args, options);\n\t}\n}\n"]}]}