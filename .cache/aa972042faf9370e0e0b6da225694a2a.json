{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/workbench.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/workbench.ts","mtime":1555846338036},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/workbench/browser/style\");\nvar comparers_1 = require(\"vs/base/common/comparers\");\nvar event_1 = require(\"vs/base/common/event\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar async_1 = require(\"vs/base/common/async\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar performance_1 = require(\"vs/base/common/performance\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar platform_2 = require(\"vs/base/common/platform\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar actions_1 = require(\"vs/workbench/browser/actions\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar notificationsCenter_1 = require(\"vs/workbench/browser/parts/notifications/notificationsCenter\");\nvar notificationsAlerts_1 = require(\"vs/workbench/browser/parts/notifications/notificationsAlerts\");\nvar notificationsStatus_1 = require(\"vs/workbench/browser/parts/notifications/notificationsStatus\");\nvar notificationsCommands_1 = require(\"vs/workbench/browser/parts/notifications/notificationsCommands\");\nvar notificationsToasts_1 = require(\"vs/workbench/browser/parts/notifications/notificationsToasts\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar aria_1 = require(\"vs/base/browser/ui/aria/aria\");\nvar configuration_2 = require(\"vs/editor/browser/config/configuration\");\nvar fontInfo_1 = require(\"vs/editor/common/config/fontInfo\");\nvar log_1 = require(\"vs/platform/log/common/log\");\nvar errorMessage_1 = require(\"vs/base/common/errorMessage\");\nvar contextkeys_1 = require(\"vs/workbench/browser/contextkeys\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar instantiationService_1 = require(\"vs/platform/instantiation/common/instantiationService\");\nvar layout_1 = require(\"vs/workbench/browser/layout\");\nvar Workbench = /** @class */ (function (_super) {\n    tslib_1.__extends(Workbench, _super);\n    function Workbench(parent, serviceCollection, logService) {\n        var _this = _super.call(this, parent) || this;\n        _this.serviceCollection = serviceCollection;\n        _this._onShutdown = _this._register(new event_1.Emitter());\n        _this._onWillShutdown = _this._register(new event_1.Emitter());\n        _this.previousUnexpectedError = { message: undefined, time: 0 };\n        _this.registerErrorHandler(logService);\n        return _this;\n    }\n    Object.defineProperty(Workbench.prototype, \"onShutdown\", {\n        get: function () { return this._onShutdown.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Workbench.prototype, \"onWillShutdown\", {\n        get: function () { return this._onWillShutdown.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Workbench.prototype.registerErrorHandler = function (logService) {\n        var _this = this;\n        // Listen on unhandled rejection events\n        window.addEventListener('unhandledrejection', function (event) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n            errors_1.onUnexpectedError(event.reason);\n            // Prevent the printing of this event to the console\n            event.preventDefault();\n        });\n        // Install handler for unexpected errors\n        errors_1.setUnexpectedErrorHandler(function (error) { return _this.handleUnexpectedError(error, logService); });\n        /*// Inform user about loading issues from the loader\n        (<any>window).require.config({\n            onError: (err: { errorCode: string; }) => {\n                if (err.errorCode === 'load') {\n                    onUnexpectedError(new Error(localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err))));\n                }\n            }\n        });*/\n    };\n    Workbench.prototype.handleUnexpectedError = function (error, logService) {\n        var message = errorMessage_1.toErrorMessage(error, true);\n        if (!message) {\n            return;\n        }\n        var now = Date.now();\n        if (message === this.previousUnexpectedError.message && now - this.previousUnexpectedError.time <= 1000) {\n            return; // Return if error message identical to previous and shorter than 1 second\n        }\n        this.previousUnexpectedError.time = now;\n        this.previousUnexpectedError.message = message;\n        // Log it\n        logService.error(message);\n    };\n    Workbench.prototype.startup = function () {\n        var _this = this;\n        try {\n            // Configure emitter leak warning threshold\n            event_1.setGlobalLeakWarningThreshold(175);\n            // Setup Intl for comparers\n            comparers_1.setFileNameComparer(new async_1.IdleValue(function () {\n                var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n                return {\n                    collator: collator,\n                    collatorIsNumeric: collator.resolvedOptions().numeric\n                };\n            }));\n            // ARIA\n            aria_1.setARIAContainer(document.body);\n            // Services\n            var instantiationService_2 = this.initServices(this.serviceCollection);\n            instantiationService_2.invokeFunction(function (accessor) {\n                var lifecycleService = accessor.get(lifecycle_1.ILifecycleService);\n                var storageService = accessor.get(storage_1.IStorageService);\n                var configurationService = accessor.get(configuration_1.IConfigurationService);\n                // Layout\n                _this.initLayout(accessor);\n                // Registries\n                _this.startRegistries(accessor);\n                // Context Keys\n                _this._register(instantiationService_2.createInstance(contextkeys_1.WorkbenchContextKeysHandler));\n                // Register Listeners\n                _this.registerListeners(lifecycleService, storageService, configurationService);\n                // Render Workbench\n                _this.renderWorkbench(instantiationService_2, accessor.get(notification_1.INotificationService), storageService, configurationService);\n                // Workbench Layout\n                _this.createWorkbenchLayout(instantiationService_2);\n                // Layout\n                _this.layout();\n                // Restore\n                _this.restoreWorkbench(accessor.get(editorService_1.IEditorService), accessor.get(editorGroupsService_1.IEditorGroupsService), accessor.get(viewlet_1.IViewletService), accessor.get(panelService_1.IPanelService), accessor.get(log_1.ILogService), lifecycleService).then(undefined, function (error) { return errors_1.onUnexpectedError(error); });\n            });\n            return instantiationService_2;\n        }\n        catch (error) {\n            errors_1.onUnexpectedError(error);\n            throw error; // rethrow because this is a critical issue we cannot handle properly here\n        }\n    };\n    Workbench.prototype.initServices = function (serviceCollection) {\n        // Layout Service\n        serviceCollection.set(layoutService_1.IWorkbenchLayoutService, this);\n        // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        // NOTE: DO NOT ADD ANY OTHER SERVICE INTO THE COLLECTION HERE.\n        // CONTRIBUTE IT VIA WORKBENCH.MAIN.TS AND registerSingleton().\n        // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        // All Contributed Services\n        var contributedServices = extensions_1.getServices();\n        for (var _i = 0, contributedServices_1 = contributedServices; _i < contributedServices_1.length; _i++) {\n            var contributedService = contributedServices_1[_i];\n            serviceCollection.set(contributedService.id, contributedService.descriptor);\n        }\n        var instantiationService = new instantiationService_1.InstantiationService(serviceCollection, true);\n        // Wrap up\n        instantiationService.invokeFunction(function (accessor) {\n            var lifecycleService = accessor.get(lifecycle_1.ILifecycleService);\n            // TODO@Ben legacy file service\n            var fileService = accessor.get(files_1.IFileService);\n            if (typeof fileService.setLegacyService === 'function') {\n                fileService.setLegacyService(accessor.get(files_1.ILegacyFileService));\n            }\n            // TODO@Sandeep debt around cyclic dependencies\n            var configurationService = accessor.get(configuration_1.IConfigurationService);\n            if (typeof configurationService.acquireFileService === 'function') {\n                configurationService.acquireFileService(fileService);\n                configurationService.acquireInstantiationService(instantiationService);\n            }\n            // Signal to lifecycle that services are set\n            lifecycleService.phase = lifecycle_1.LifecyclePhase.Ready;\n        });\n        return instantiationService;\n    };\n    Workbench.prototype.startRegistries = function (accessor) {\n        platform_1.Registry.as(actions_1.Extensions.Actionbar).start(accessor);\n        platform_1.Registry.as(contributions_1.Extensions.Workbench).start(accessor);\n        platform_1.Registry.as(editor_1.Extensions.EditorInputFactories).start(accessor);\n    };\n    Workbench.prototype.registerListeners = function (lifecycleService, storageService, configurationService) {\n        var _this = this;\n        // Lifecycle\n        this._register(lifecycleService.onWillShutdown(function (event) { return _this._onWillShutdown.fire(event); }));\n        this._register(lifecycleService.onShutdown(function () {\n            _this._onShutdown.fire();\n            _this.dispose();\n        }));\n        // Storage\n        this._register(storageService.onWillSaveState(function () { return configuration_2.saveFontInfo(storageService); }));\n        // Configuration changes\n        this._register(configurationService.onDidChangeConfiguration(function () { return _this.setFontAliasing(configurationService); }));\n    };\n    Workbench.prototype.setFontAliasing = function (configurationService) {\n        var aliasing = configurationService.getValue('workbench.fontAliasing');\n        if (this.fontAliasing === aliasing) {\n            return;\n        }\n        this.fontAliasing = aliasing;\n        // Remove all\n        var fontAliasingValues = ['antialiased', 'none', 'auto'];\n        dom_1.removeClasses.apply(void 0, [this.container].concat(fontAliasingValues.map(function (value) { return \"monaco-font-aliasing-\" + value; })));\n        // Add specific\n        if (fontAliasingValues.some(function (option) { return option === aliasing; })) {\n            dom_1.addClass(this.container, \"monaco-font-aliasing-\" + aliasing);\n        }\n    };\n    Workbench.prototype.renderWorkbench = function (instantiationService, notificationService, storageService, configurationService) {\n        var _this = this;\n        // State specific classes\n        var platformClass = browser_1.isWindows ? 'windows' : browser_1.isLinux ? 'linux' : 'mac';\n        var workbenchClasses = arrays_1.coalesce([\n            'monaco-workbench',\n            platformClass,\n            this.state.sideBar.hidden ? 'nosidebar' : undefined,\n            this.state.panel.hidden ? 'nopanel' : undefined,\n            this.state.statusBar.hidden ? 'nostatusbar' : undefined,\n            this.state.fullscreen ? 'fullscreen' : undefined\n        ]);\n        dom_1.addClasses.apply(void 0, [this.container].concat(workbenchClasses));\n        dom_1.addClasses(document.body, platformClass, platform_2.isWeb ? 'web' : 'native'); // used by our fonts\n        // Apply font aliasing\n        this.setFontAliasing(configurationService);\n        // Warm up font cache information before building up too many dom elements\n        configuration_2.restoreFontInfo(storageService);\n        configuration_2.readFontInfo(fontInfo_1.BareFontInfo.createFromRawSettings(configurationService.getValue('editor'), browser_1.getZoomLevel()));\n        // Create Parts\n        [\n            { id: layoutService_1.Parts.TITLEBAR_PART, role: 'contentinfo', classes: ['titlebar'] },\n            { id: layoutService_1.Parts.ACTIVITYBAR_PART, role: 'navigation', classes: ['activitybar', this.state.sideBar.position === layoutService_1.Position.LEFT ? 'left' : 'right'] },\n            { id: layoutService_1.Parts.SIDEBAR_PART, role: 'complementary', classes: ['sidebar', this.state.sideBar.position === layoutService_1.Position.LEFT ? 'left' : 'right'] },\n            { id: layoutService_1.Parts.EDITOR_PART, role: 'main', classes: ['editor'], options: { restorePreviousState: this.state.editor.restoreEditors } },\n            { id: layoutService_1.Parts.PANEL_PART, role: 'complementary', classes: ['panel', this.state.panel.position === layoutService_1.Position.BOTTOM ? 'bottom' : 'right'] },\n            { id: layoutService_1.Parts.STATUSBAR_PART, role: 'contentinfo', classes: ['statusbar'] }\n        ].forEach(function (_a) {\n            var id = _a.id, role = _a.role, classes = _a.classes, options = _a.options;\n            var partContainer = _this.createPart(id, role, classes);\n            if (!configurationService.getValue('workbench.useExperimentalGridLayout')) {\n                // TODO@Ben cleanup once moved to grid\n                // Insert all workbench parts at the beginning. Issue #52531\n                // This is primarily for the title bar to allow overriding -webkit-app-region\n                _this.container.insertBefore(partContainer, _this.container.lastChild);\n            }\n            _this.getPart(id).create(partContainer, options);\n        });\n        // Notification Handlers\n        this.createNotificationsHandlers(instantiationService, notificationService);\n        // Add Workbench to DOM\n        this.parent.appendChild(this.container);\n    };\n    Workbench.prototype.createPart = function (id, role, classes) {\n        var part = document.createElement('div');\n        dom_1.addClasses.apply(void 0, [part, 'part'].concat(classes));\n        part.id = id;\n        part.setAttribute('role', role);\n        return part;\n    };\n    Workbench.prototype.createNotificationsHandlers = function (instantiationService, notificationService) {\n        // Instantiate Notification components\n        var notificationsCenter = this._register(instantiationService.createInstance(notificationsCenter_1.NotificationsCenter, this.container, notificationService.model));\n        var notificationsToasts = this._register(instantiationService.createInstance(notificationsToasts_1.NotificationsToasts, this.container, notificationService.model));\n        this._register(instantiationService.createInstance(notificationsAlerts_1.NotificationsAlerts, notificationService.model));\n        var notificationsStatus = instantiationService.createInstance(notificationsStatus_1.NotificationsStatus, notificationService.model);\n        // Visibility\n        this._register(notificationsCenter.onDidChangeVisibility(function () {\n            notificationsStatus.update(notificationsCenter.isVisible);\n            notificationsToasts.update(notificationsCenter.isVisible);\n        }));\n        // Register Commands\n        notificationsCommands_1.registerNotificationCommands(notificationsCenter, notificationsToasts);\n    };\n    Workbench.prototype.restoreWorkbench = function (editorService, editorGroupService, viewletService, panelService, logService, lifecycleService) {\n        var _this = this;\n        var restorePromises = [];\n        // Restore editors\n        performance_1.mark('willRestoreEditors');\n        restorePromises.push(editorGroupService.whenRestored.then(function () {\n            function openEditors(editors, editorService) {\n                if (editors.length) {\n                    return editorService.openEditors(editors);\n                }\n                return Promise.resolve(undefined);\n            }\n            if (Array.isArray(_this.state.editor.editorsToOpen)) {\n                return openEditors(_this.state.editor.editorsToOpen, editorService);\n            }\n            return _this.state.editor.editorsToOpen.then(function (editors) { return openEditors(editors, editorService); });\n        }).then(function () { return performance_1.mark('didRestoreEditors'); }));\n        // Restore Sidebar\n        if (this.state.sideBar.viewletToRestore) {\n            performance_1.mark('willRestoreViewlet');\n            restorePromises.push(viewletService.openViewlet(this.state.sideBar.viewletToRestore)\n                .then(function (viewlet) {\n                if (!viewlet) {\n                    return viewletService.openViewlet(viewletService.getDefaultViewletId()); // fallback to default viewlet as needed\n                }\n                return viewlet;\n            })\n                .then(function () { return performance_1.mark('didRestoreViewlet'); }));\n        }\n        // Restore Panel\n        if (this.state.panel.panelToRestore) {\n            performance_1.mark('willRestorePanel');\n            panelService.openPanel(this.state.panel.panelToRestore);\n            performance_1.mark('didRestorePanel');\n        }\n        // Restore Zen Mode\n        if (this.state.zenMode.restore) {\n            this.toggleZenMode(true, true);\n        }\n        // Restore Editor Center Mode\n        if (this.state.editor.restoreCentered) {\n            this.centerEditorLayout(true);\n        }\n        // Emit a warning after 10s if restore does not complete\n        var restoreTimeoutHandle = setTimeout(function () { return logService.warn('Workbench did not finish loading in 10 seconds, that might be a problem that should be reported.'); }, 10000);\n        return Promise.all(restorePromises)\n            .then(function () { return clearTimeout(restoreTimeoutHandle); })\n            .catch(function (error) { return errors_1.onUnexpectedError(error); })\n            .finally(function () {\n            // Set lifecycle phase to `Restored`\n            lifecycleService.phase = lifecycle_1.LifecyclePhase.Restored;\n            // Set lifecycle phase to `Eventually` after a short delay and when idle (min 2.5sec, max 5sec)\n            setTimeout(function () {\n                _this._register(async_1.runWhenIdle(function () {\n                    lifecycleService.phase = lifecycle_1.LifecyclePhase.Eventually;\n                }, 2500));\n            }, 2500);\n            // Telemetry: startup metrics\n            performance_1.mark('didStartWorkbench');\n        });\n    };\n    return Workbench;\n}(layout_1.Layout));\nexports.Workbench = Workbench;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/workbench.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/workbench.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/workbench/browser/style';\n\nimport { localize } from 'vs/nls';\nimport { setFileNameComparer } from 'vs/base/common/comparers';\nimport { Event, Emitter, setGlobalLeakWarningThreshold } from 'vs/base/common/event';\nimport { addClasses, addClass, removeClasses } from 'vs/base/browser/dom';\nimport { runWhenIdle, IdleValue } from 'vs/base/common/async';\nimport { getZoomLevel, isWindows, isLinux } from 'vs/base/browser/browser';\nimport { mark } from 'vs/base/common/performance';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IEditorInputFactoryRegistry, Extensions as EditorExtensions } from 'vs/workbench/common/editor';\nimport { IActionBarRegistry, Extensions as ActionBarExtensions } from 'vs/workbench/browser/actions';\nimport { getServices } from 'vs/platform/instantiation/common/extensions';\nimport { Position, Parts, IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IFileService, ILegacyFileService } from 'vs/platform/files/common/files';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { LifecyclePhase, ILifecycleService, WillShutdownEvent } from 'vs/platform/lifecycle/common/lifecycle';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { NotificationService } from 'vs/workbench/services/notification/common/notificationService';\nimport { NotificationsCenter } from 'vs/workbench/browser/parts/notifications/notificationsCenter';\nimport { NotificationsAlerts } from 'vs/workbench/browser/parts/notifications/notificationsAlerts';\nimport { NotificationsStatus } from 'vs/workbench/browser/parts/notifications/notificationsStatus';\nimport { registerNotificationCommands } from 'vs/workbench/browser/parts/notifications/notificationsCommands';\nimport { NotificationsToasts } from 'vs/workbench/browser/parts/notifications/notificationsToasts';\nimport { IEditorService, IResourceEditor } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { setARIAContainer } from 'vs/base/browser/ui/aria/aria';\nimport { restoreFontInfo, readFontInfo, saveFontInfo } from 'vs/editor/browser/config/configuration';\nimport { BareFontInfo } from 'vs/editor/common/config/fontInfo';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { WorkbenchContextKeysHandler } from 'vs/workbench/browser/contextkeys';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { Layout } from 'vs/workbench/browser/layout';\n\nexport class Workbench extends Layout {\n\n\tprivate readonly _onShutdown = this._register(new Emitter<void>());\n\tget onShutdown(): Event<void> { return this._onShutdown.event; }\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<WillShutdownEvent>());\n\tget onWillShutdown(): Event<WillShutdownEvent> { return this._onWillShutdown.event; }\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tprivate readonly serviceCollection: ServiceCollection,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper(parent);\n\n\t\tthis.registerErrorHandler(logService);\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Listen on unhandled rejection events\n\t\twindow.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n\t\t\tonUnexpectedError(event.reason);\n\n\t\t\t// Prevent the printing of this event to the console\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => this.handleUnexpectedError(error, logService));\n\n\t\t/*// Inform user about loading issues from the loader\n\t\t(<any>window).require.config({\n\t\t\tonError: (err: { errorCode: string; }) => {\n\t\t\t\tif (err.errorCode === 'load') {\n\t\t\t\t\tonUnexpectedError(new Error(localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err))));\n\t\t\t\t}\n\t\t\t}\n\t\t});*/\n\t}\n\n\tprivate previousUnexpectedError: { message: string | undefined, time: number } = { message: undefined, time: 0 };\n\tprivate handleUnexpectedError(error: any, logService: ILogService): void {\n\t\tconst message = toErrorMessage(error, true);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst now = Date.now();\n\t\tif (message === this.previousUnexpectedError.message && now - this.previousUnexpectedError.time <= 1000) {\n\t\t\treturn; // Return if error message identical to previous and shorter than 1 second\n\t\t}\n\n\t\tthis.previousUnexpectedError.time = now;\n\t\tthis.previousUnexpectedError.message = message;\n\n\t\t// Log it\n\t\tlogService.error(message);\n\t}\n\n\tstartup(): IInstantiationService {\n\t\ttry {\n\n\t\t\t// Configure emitter leak warning threshold\n\t\t\tsetGlobalLeakWarningThreshold(175);\n\n\t\t\t// Setup Intl for comparers\n\t\t\tsetFileNameComparer(new IdleValue(() => {\n\t\t\t\tconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\t\t\t\treturn {\n\t\t\t\t\tcollator: collator,\n\t\t\t\t\tcollatorIsNumeric: collator.resolvedOptions().numeric\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\t// ARIA\n\t\t\tsetARIAContainer(document.body);\n\n\t\t\t// Services\n\t\t\tconst instantiationService = this.initServices(this.serviceCollection);\n\n\t\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\t\t\t\tconst storageService = accessor.get(IStorageService);\n\t\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\t\t// Layout\n\t\t\t\tthis.initLayout(accessor);\n\n\t\t\t\t// Registries\n\t\t\t\tthis.startRegistries(accessor);\n\n\t\t\t\t// Context Keys\n\t\t\t\tthis._register(instantiationService.createInstance(WorkbenchContextKeysHandler));\n\n\t\t\t\t// Register Listeners\n\t\t\t\tthis.registerListeners(lifecycleService, storageService, configurationService);\n\n\t\t\t\t// Render Workbench\n\t\t\t\tthis.renderWorkbench(instantiationService, accessor.get(INotificationService) as NotificationService, storageService, configurationService);\n\n\t\t\t\t// Workbench Layout\n\t\t\t\tthis.createWorkbenchLayout(instantiationService);\n\n\t\t\t\t// Layout\n\t\t\t\tthis.layout();\n\n\t\t\t\t// Restore\n\t\t\t\tthis.restoreWorkbench(accessor.get(IEditorService), accessor.get(IEditorGroupsService), accessor.get(IViewletService), accessor.get(IPanelService), accessor.get(ILogService), lifecycleService).then(undefined, error => onUnexpectedError(error));\n\t\t\t});\n\n\t\t\treturn instantiationService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\tthrow error; // rethrow because this is a critical issue we cannot handle properly here\n\t\t}\n\t}\n\n\tprivate initServices(serviceCollection: ServiceCollection): IInstantiationService {\n\n\t\t// Layout Service\n\t\tserviceCollection.set(IWorkbenchLayoutService, this);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t// NOTE: DO NOT ADD ANY OTHER SERVICE INTO THE COLLECTION HERE.\n\t\t// CONTRIBUTE IT VIA WORKBENCH.MAIN.TS AND registerSingleton().\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// All Contributed Services\n\t\tconst contributedServices = getServices();\n\t\tfor (let contributedService of contributedServices) {\n\t\t\tserviceCollection.set(contributedService.id, contributedService.descriptor);\n\t\t}\n\n\t\tconst instantiationService = new InstantiationService(serviceCollection, true);\n\n\t\t// Wrap up\n\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\tconst lifecycleService = accessor.get(ILifecycleService);\n\n\t\t\t// TODO@Ben legacy file service\n\t\t\tconst fileService = accessor.get(IFileService) as any;\n\t\t\tif (typeof fileService.setLegacyService === 'function') {\n\t\t\t\tfileService.setLegacyService(accessor.get(ILegacyFileService));\n\t\t\t}\n\n\t\t\t// TODO@Sandeep debt around cyclic dependencies\n\t\t\tconst configurationService = accessor.get(IConfigurationService) as any;\n\t\t\tif (typeof configurationService.acquireFileService === 'function') {\n\t\t\t\tconfigurationService.acquireFileService(fileService);\n\t\t\t\tconfigurationService.acquireInstantiationService(instantiationService);\n\t\t\t}\n\n\t\t\t// Signal to lifecycle that services are set\n\t\t\tlifecycleService.phase = LifecyclePhase.Ready;\n\t\t});\n\n\t\treturn instantiationService;\n\t}\n\n\tprivate startRegistries(accessor: ServicesAccessor): void {\n\t\tRegistry.as<IActionBarRegistry>(ActionBarExtensions.Actionbar).start(accessor);\n\t\tRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).start(accessor);\n\t\tRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).start(accessor);\n\t}\n\n\tprivate registerListeners(\n\t\tlifecycleService: ILifecycleService,\n\t\tstorageService: IStorageService,\n\t\tconfigurationService: IConfigurationService\n\t): void {\n\n\t\t// Lifecycle\n\t\tthis._register(lifecycleService.onWillShutdown(event => this._onWillShutdown.fire(event)));\n\t\tthis._register(lifecycleService.onShutdown(() => {\n\t\t\tthis._onShutdown.fire();\n\t\t\tthis.dispose();\n\t\t}));\n\n\t\t// Storage\n\t\tthis._register(storageService.onWillSaveState(() => saveFontInfo(storageService)));\n\n\t\t// Configuration changes\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.setFontAliasing(configurationService)));\n\t}\n\n\tprivate fontAliasing: 'default' | 'antialiased' | 'none' | 'auto';\n\tprivate setFontAliasing(configurationService: IConfigurationService) {\n\t\tconst aliasing = configurationService.getValue<'default' | 'antialiased' | 'none' | 'auto'>('workbench.fontAliasing');\n\t\tif (this.fontAliasing === aliasing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fontAliasing = aliasing;\n\n\t\t// Remove all\n\t\tconst fontAliasingValues: (typeof aliasing)[] = ['antialiased', 'none', 'auto'];\n\t\tremoveClasses(this.container, ...fontAliasingValues.map(value => `monaco-font-aliasing-${value}`));\n\n\t\t// Add specific\n\t\tif (fontAliasingValues.some(option => option === aliasing)) {\n\t\t\taddClass(this.container, `monaco-font-aliasing-${aliasing}`);\n\t\t}\n\t}\n\n\tprivate renderWorkbench(instantiationService: IInstantiationService, notificationService: NotificationService, storageService: IStorageService, configurationService: IConfigurationService): void {\n\n\t\t// State specific classes\n\t\tconst platformClass = isWindows ? 'windows' : isLinux ? 'linux' : 'mac';\n\t\tconst workbenchClasses = coalesce([\n\t\t\t'monaco-workbench',\n\t\t\tplatformClass,\n\t\t\tthis.state.sideBar.hidden ? 'nosidebar' : undefined,\n\t\t\tthis.state.panel.hidden ? 'nopanel' : undefined,\n\t\t\tthis.state.statusBar.hidden ? 'nostatusbar' : undefined,\n\t\t\tthis.state.fullscreen ? 'fullscreen' : undefined\n\t\t]);\n\n\t\taddClasses(this.container, ...workbenchClasses);\n\t\taddClasses(document.body, platformClass, isWeb ? 'web' : 'native'); // used by our fonts\n\n\t\t// Apply font aliasing\n\t\tthis.setFontAliasing(configurationService);\n\n\t\t// Warm up font cache information before building up too many dom elements\n\t\trestoreFontInfo(storageService);\n\t\treadFontInfo(BareFontInfo.createFromRawSettings(configurationService.getValue('editor'), getZoomLevel()));\n\n\t\t// Create Parts\n\t\t[\n\t\t\t{ id: Parts.TITLEBAR_PART, role: 'contentinfo', classes: ['titlebar'] },\n\t\t\t{ id: Parts.ACTIVITYBAR_PART, role: 'navigation', classes: ['activitybar', this.state.sideBar.position === Position.LEFT ? 'left' : 'right'] },\n\t\t\t{ id: Parts.SIDEBAR_PART, role: 'complementary', classes: ['sidebar', this.state.sideBar.position === Position.LEFT ? 'left' : 'right'] },\n\t\t\t{ id: Parts.EDITOR_PART, role: 'main', classes: ['editor'], options: { restorePreviousState: this.state.editor.restoreEditors } },\n\t\t\t{ id: Parts.PANEL_PART, role: 'complementary', classes: ['panel', this.state.panel.position === Position.BOTTOM ? 'bottom' : 'right'] },\n\t\t\t{ id: Parts.STATUSBAR_PART, role: 'contentinfo', classes: ['statusbar'] }\n\t\t].forEach(({ id, role, classes, options }) => {\n\t\t\tconst partContainer = this.createPart(id, role, classes);\n\n\t\t\tif (!configurationService.getValue('workbench.useExperimentalGridLayout')) {\n\t\t\t\t// TODO@Ben cleanup once moved to grid\n\t\t\t\t// Insert all workbench parts at the beginning. Issue #52531\n\t\t\t\t// This is primarily for the title bar to allow overriding -webkit-app-region\n\t\t\t\tthis.container.insertBefore(partContainer, this.container.lastChild);\n\t\t\t}\n\n\t\t\tthis.getPart(id).create(partContainer, options);\n\t\t});\n\n\t\t// Notification Handlers\n\t\tthis.createNotificationsHandlers(instantiationService, notificationService);\n\n\t\t// Add Workbench to DOM\n\t\tthis.parent.appendChild(this.container);\n\t}\n\n\tprivate createPart(id: string, role: string, classes: string[]): HTMLElement {\n\t\tconst part = document.createElement('div');\n\t\taddClasses(part, 'part', ...classes);\n\t\tpart.id = id;\n\t\tpart.setAttribute('role', role);\n\n\t\treturn part;\n\t}\n\n\tprivate createNotificationsHandlers(instantiationService: IInstantiationService, notificationService: NotificationService): void {\n\n\t\t// Instantiate Notification components\n\t\tconst notificationsCenter = this._register(instantiationService.createInstance(NotificationsCenter, this.container, notificationService.model));\n\t\tconst notificationsToasts = this._register(instantiationService.createInstance(NotificationsToasts, this.container, notificationService.model));\n\t\tthis._register(instantiationService.createInstance(NotificationsAlerts, notificationService.model));\n\t\tconst notificationsStatus = instantiationService.createInstance(NotificationsStatus, notificationService.model);\n\n\t\t// Visibility\n\t\tthis._register(notificationsCenter.onDidChangeVisibility(() => {\n\t\t\tnotificationsStatus.update(notificationsCenter.isVisible);\n\t\t\tnotificationsToasts.update(notificationsCenter.isVisible);\n\t\t}));\n\n\t\t// Register Commands\n\t\tregisterNotificationCommands(notificationsCenter, notificationsToasts);\n\t}\n\n\tprivate restoreWorkbench(\n\t\teditorService: IEditorService,\n\t\teditorGroupService: IEditorGroupsService,\n\t\tviewletService: IViewletService,\n\t\tpanelService: IPanelService,\n\t\tlogService: ILogService,\n\t\tlifecycleService: ILifecycleService\n\t): Promise<void> {\n\t\tconst restorePromises: Promise<void>[] = [];\n\n\t\t// Restore editors\n\t\tmark('willRestoreEditors');\n\t\trestorePromises.push(editorGroupService.whenRestored.then(() => {\n\n\t\t\tfunction openEditors(editors: IResourceEditor[], editorService: IEditorService) {\n\t\t\t\tif (editors.length) {\n\t\t\t\t\treturn editorService.openEditors(editors);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\tif (Array.isArray(this.state.editor.editorsToOpen)) {\n\t\t\t\treturn openEditors(this.state.editor.editorsToOpen, editorService);\n\t\t\t}\n\n\t\t\treturn this.state.editor.editorsToOpen.then(editors => openEditors(editors, editorService));\n\t\t}).then(() => mark('didRestoreEditors')));\n\n\t\t// Restore Sidebar\n\t\tif (this.state.sideBar.viewletToRestore) {\n\t\t\tmark('willRestoreViewlet');\n\t\t\trestorePromises.push(viewletService.openViewlet(this.state.sideBar.viewletToRestore)\n\t\t\t\t.then(viewlet => {\n\t\t\t\t\tif (!viewlet) {\n\t\t\t\t\t\treturn viewletService.openViewlet(viewletService.getDefaultViewletId()); // fallback to default viewlet as needed\n\t\t\t\t\t}\n\n\t\t\t\t\treturn viewlet;\n\t\t\t\t})\n\t\t\t\t.then(() => mark('didRestoreViewlet')));\n\t\t}\n\n\t\t// Restore Panel\n\t\tif (this.state.panel.panelToRestore) {\n\t\t\tmark('willRestorePanel');\n\t\t\tpanelService.openPanel(this.state.panel.panelToRestore);\n\t\t\tmark('didRestorePanel');\n\t\t}\n\n\t\t// Restore Zen Mode\n\t\tif (this.state.zenMode.restore) {\n\t\t\tthis.toggleZenMode(true, true);\n\t\t}\n\n\t\t// Restore Editor Center Mode\n\t\tif (this.state.editor.restoreCentered) {\n\t\t\tthis.centerEditorLayout(true);\n\t\t}\n\n\t\t// Emit a warning after 10s if restore does not complete\n\t\tconst restoreTimeoutHandle = setTimeout(() => logService.warn('Workbench did not finish loading in 10 seconds, that might be a problem that should be reported.'), 10000);\n\n\t\treturn Promise.all(restorePromises)\n\t\t\t.then(() => clearTimeout(restoreTimeoutHandle))\n\t\t\t.catch(error => onUnexpectedError(error))\n\t\t\t.finally(() => {\n\n\t\t\t\t// Set lifecycle phase to `Restored`\n\t\t\t\tlifecycleService.phase = LifecyclePhase.Restored;\n\n\t\t\t\t// Set lifecycle phase to `Eventually` after a short delay and when idle (min 2.5sec, max 5sec)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._register(runWhenIdle(() => {\n\t\t\t\t\t\tlifecycleService.phase = LifecyclePhase.Eventually;\n\t\t\t\t\t}, 2500));\n\t\t\t\t}, 2500);\n\n\t\t\t\t// Telemetry: startup metrics\n\t\t\t\tmark('didStartWorkbench');\n\t\t\t});\n\t}\n}\n"]}]}