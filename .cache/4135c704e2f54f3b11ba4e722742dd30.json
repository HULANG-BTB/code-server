{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/update/node/updateIpc.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/update/node/updateIpc.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class UpdateChannel {\n        constructor(service) {\n            this.service = service;\n        }\n        listen(_, event) {\n            switch (event) {\n                case 'onStateChange': return this.service.onStateChange;\n            }\n            throw new Error(`Event not found: ${event}`);\n        }\n        call(_, command, arg) {\n            switch (command) {\n                case 'checkForUpdates': return this.service.checkForUpdates(arg);\n                case 'downloadUpdate': return this.service.downloadUpdate();\n                case 'applyUpdate': return this.service.applyUpdate();\n                case 'quitAndInstall': return this.service.quitAndInstall();\n                case '_getInitialState': return Promise.resolve(this.service.state);\n                case 'isLatestVersion': return this.service.isLatestVersion();\n            }\n            throw new Error(`Call not found: ${command}`);\n        }\n    }\n    exports.UpdateChannel = UpdateChannel;\n});\n",null]}