{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/packages/vscode/src/fill/platform.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/platform.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["define([\"require\", \"exports\", \"os\", \"vs/base/common/platform\", \"vs/base/browser/browser\"], function (require, exports, os, platform, browser) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // tslint:disable no-any to override const\n    // Use en instead of en-US since that's vscode default and it uses\n    // that to determine whether to output aliases which will be redundant.\n    if (platform.locale === \"en-US\") {\n        platform.locale = \"en\";\n    }\n    if (platform.language === \"en-US\") {\n        platform.language = \"en\";\n    }\n    // Use the server's platform instead of the client's. For example, this affects\n    // how VS Code handles paths (and more) because different platforms give\n    // different results. We'll have to counter for things that shouldn't change,\n    // like keybindings.\n    platform.isLinux = os.platform() === \"linux\";\n    platform.isWindows = os.platform() === \"win32\";\n    platform.isMacintosh = os.platform() === \"darwin\";\n    platform.platform = os.platform() === \"linux\" ? platform.Platform.Linux : os.platform() === \"win32\" ? platform.Platform.Windows : platform.Platform.Mac;\n    // This is used for keybindings, and in one place to choose between \\r\\n and \\n\n    // (which we change to use platform.isWindows instead).\n    platform.OS = (browser.isMacintosh ? platform.OperatingSystem.Macintosh : (browser.isWindows ? platform.OperatingSystem.Windows : platform.OperatingSystem.Linux));\n});\n",null]}