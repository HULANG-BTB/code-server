{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/emmet/browser/actions/expandAbbreviation.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/emmet/browser/actions/expandAbbreviation.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar nls = require(\"vs/nls\");\nvar emmetActions_1 = require(\"vs/workbench/contrib/emmet/browser/emmetActions\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar ExpandAbbreviationAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpandAbbreviationAction, _super);\n    function ExpandAbbreviationAction() {\n        return _super.call(this, {\n            id: 'editor.emmet.action.expandAbbreviation',\n            label: nls.localize('expandAbbreviationAction', \"Emmet: Expand Abbreviation\"),\n            alias: 'Emmet: Expand Abbreviation',\n            precondition: editorContextKeys_1.EditorContextKeys.writable,\n            actionName: 'expand_abbreviation',\n            kbOpts: {\n                primary: keyCodes_1.KeyCode.Tab,\n                kbExpr: contextkey_1.ContextKeyExpr.and(editorContextKeys_1.EditorContextKeys.editorTextFocus, editorContextKeys_1.EditorContextKeys.tabDoesNotMoveFocus, contextkey_1.ContextKeyExpr.has('config.emmet.triggerExpansionOnTab')),\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            },\n            menubarOpts: {\n                menuId: actions_1.MenuId.MenubarEditMenu,\n                group: '5_insert',\n                title: nls.localize({ key: 'miEmmetExpandAbbreviation', comment: ['&& denotes a mnemonic'] }, \"Emmet: E&&xpand Abbreviation\"),\n                order: 3\n            }\n        }) || this;\n    }\n    return ExpandAbbreviationAction;\n}(emmetActions_1.EmmetEditorAction));\neditorExtensions_1.registerEditorAction(ExpandAbbreviationAction);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/emmet/browser/actions/expandAbbreviation.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/emmet/browser/actions/expandAbbreviation.ts"],"names":[],"mappings":";;;AAAA;;;gGAGgG;AAChG,4BAA8B;AAC9B,gFAAoF;AACpF,uEAA0E;AAC1E,wEAAuE;AACvE,oDAAkD;AAClD,uEAA0E;AAC1E,yFAAqF;AACrF,8DAA4D;AAE5D;IAAuC,oDAAiB;IAEvD;eACC,kBAAM;YACL,EAAE,EAAE,wCAAwC;YAC5C,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,0BAA0B,EAAE,4BAA4B,CAAC;YAC7E,KAAK,EAAE,4BAA4B;YACnC,YAAY,EAAE,qCAAiB,CAAC,QAAQ;YACxC,UAAU,EAAE,qBAAqB;YACjC,MAAM,EAAE;gBACP,OAAO,EAAE,kBAAO,CAAC,GAAG;gBACpB,MAAM,EAAE,2BAAc,CAAC,GAAG,CACzB,qCAAiB,CAAC,eAAe,EACjC,qCAAiB,CAAC,mBAAmB,EACrC,2BAAc,CAAC,GAAG,CAAC,oCAAoC,CAAC,CACxD;gBACD,MAAM,EAAE,sCAAgB,CAAC,aAAa;aACtC;YACD,WAAW,EAAE;gBACZ,MAAM,EAAE,gBAAM,CAAC,eAAe;gBAC9B,KAAK,EAAE,UAAU;gBACjB,KAAK,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,2BAA2B,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,8BAA8B,CAAC;gBAC7H,KAAK,EAAE,CAAC;aACR;SACD,CAAC;IAEH,CAAC;IACF,+BAAC;AAAD,CAAC,AA3BD,CAAuC,gCAAiB,GA2BvD;AAED,uCAAoB,CAAC,wBAAwB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vs/nls';\nimport { EmmetEditorAction } from 'vs/workbench/contrib/emmet/browser/emmetActions';\nimport { registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { MenuId } from 'vs/platform/actions/common/actions';\n\nclass ExpandAbbreviationAction extends EmmetEditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.emmet.action.expandAbbreviation',\n\t\t\tlabel: nls.localize('expandAbbreviationAction', \"Emmet: Expand Abbreviation\"),\n\t\t\talias: 'Emmet: Expand Abbreviation',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tactionName: 'expand_abbreviation',\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tEditorContextKeys.editorTextFocus,\n\t\t\t\t\tEditorContextKeys.tabDoesNotMoveFocus,\n\t\t\t\t\tContextKeyExpr.has('config.emmet.triggerExpansionOnTab')\n\t\t\t\t),\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t},\n\t\t\tmenubarOpts: {\n\t\t\t\tmenuId: MenuId.MenubarEditMenu,\n\t\t\t\tgroup: '5_insert',\n\t\t\t\ttitle: nls.localize({ key: 'miEmmetExpandAbbreviation', comment: ['&& denotes a mnemonic'] }, \"Emmet: E&&xpand Abbreviation\"),\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\n\t}\n}\n\nregisterEditorAction(ExpandAbbreviationAction);\n"]}]}