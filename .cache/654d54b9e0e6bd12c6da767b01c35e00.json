{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewElement.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewElement.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar event_1 = require(\"vs/base/common/event\");\nvar functional_1 = require(\"vs/base/common/functional\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar colorRegistry = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar webviewProtocols_1 = require(\"vs/workbench/contrib/webview/electron-browser/webviewProtocols\");\nvar webviewEditorService_1 = require(\"./webviewEditorService\");\nvar webviewFindWidget_1 = require(\"./webviewFindWidget\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar WebviewSession = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewSession, _super);\n    function WebviewSession(webview) {\n        var _this = _super.call(this) || this;\n        _this._onBeforeRequestDelegates = [];\n        _this._onHeadersReceivedDelegates = [];\n        _this._register(dom_1.addDisposableListener(webview, 'did-start-loading', functional_1.once(function () {\n            var contents = webview.getWebContents();\n            if (!contents) {\n                return;\n            }\n            contents.session.webRequest.onBeforeRequest(function (details, callback) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var _i, _a, delegate, result;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _i = 0, _a = this._onBeforeRequestDelegates;\n                            _b.label = 1;\n                        case 1:\n                            if (!(_i < _a.length)) return [3 /*break*/, 4];\n                            delegate = _a[_i];\n                            return [4 /*yield*/, delegate(details)];\n                        case 2:\n                            result = _b.sent();\n                            if (typeof result !== 'undefined') {\n                                callback(result);\n                                return [2 /*return*/];\n                            }\n                            _b.label = 3;\n                        case 3:\n                            _i++;\n                            return [3 /*break*/, 1];\n                        case 4:\n                            callback({});\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n            contents.session.webRequest.onHeadersReceived(function (details, callback) {\n                for (var _i = 0, _a = _this._onHeadersReceivedDelegates; _i < _a.length; _i++) {\n                    var delegate = _a[_i];\n                    var result = delegate(details);\n                    if (typeof result !== 'undefined') {\n                        callback(result);\n                        return;\n                    }\n                }\n                callback({ cancel: false, responseHeaders: details.responseHeaders });\n            });\n        })));\n        return _this;\n    }\n    WebviewSession.prototype.onBeforeRequest = function (delegate) {\n        this._onBeforeRequestDelegates.push(delegate);\n    };\n    WebviewSession.prototype.onHeadersReceived = function (delegate) {\n        this._onHeadersReceivedDelegates.push(delegate);\n    };\n    return WebviewSession;\n}(lifecycle_1.Disposable));\nvar WebviewProtocolProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewProtocolProvider, _super);\n    function WebviewProtocolProvider(webview, _extensionLocation, _getLocalResourceRoots, _environmentService, _fileService) {\n        var _this = _super.call(this) || this;\n        _this._extensionLocation = _extensionLocation;\n        _this._getLocalResourceRoots = _getLocalResourceRoots;\n        _this._environmentService = _environmentService;\n        _this._fileService = _fileService;\n        _this._register(dom_1.addDisposableListener(webview, 'did-start-loading', functional_1.once(function () {\n            var contents = webview.getWebContents();\n            if (contents) {\n                _this.registerProtocols(contents);\n            }\n        })));\n        return _this;\n    }\n    WebviewProtocolProvider.prototype.registerProtocols = function (contents) {\n        var _this = this;\n        if (contents.isDestroyed()) {\n            return;\n        }\n        var appRootUri = uri_1.URI.file(this._environmentService.appRoot);\n        webviewProtocols_1.registerFileProtocol(contents, webviewProtocols_1.WebviewProtocol.CoreResource, this._fileService, undefined, function () { return [\n            appRootUri\n        ]; });\n        webviewProtocols_1.registerFileProtocol(contents, webviewProtocols_1.WebviewProtocol.VsCodeResource, this._fileService, this._extensionLocation, function () {\n            return _this._getLocalResourceRoots();\n        });\n    };\n    return WebviewProtocolProvider;\n}(lifecycle_1.Disposable));\nvar WebviewPortMappingProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewPortMappingProvider, _super);\n    function WebviewPortMappingProvider(session, mappings, extensionId, telemetryService) {\n        var _this = _super.call(this) || this;\n        var hasLogged = false;\n        session.onBeforeRequest(function (details) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var uri, localhostMatch, port, _i, _a, mapping;\n            return tslib_1.__generator(this, function (_b) {\n                uri = uri_1.URI.parse(details.url);\n                if (uri.scheme !== 'http' && uri.scheme !== 'https') {\n                    return [2 /*return*/, undefined];\n                }\n                localhostMatch = /^localhost:(\\d+)$/.exec(uri.authority);\n                if (localhostMatch) {\n                    if (!hasLogged && extensionId) {\n                        hasLogged = true;\n                        /* __GDPR__\n                        \"webview.accessLocalhost\" : {\n                                \"extension\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n                            }\n                        */\n                        telemetryService.publicLog('webview.accessLocalhost', { extension: extensionId.value });\n                    }\n                    port = +localhostMatch[1];\n                    for (_i = 0, _a = mappings(); _i < _a.length; _i++) {\n                        mapping = _a[_i];\n                        if (mapping.port === port && mapping.port !== mapping.resolvedPort) {\n                            return [2 /*return*/, {\n                                    redirectURL: details.url.replace(new RegExp(\"^\" + uri.scheme + \"://localhost:\" + mapping.port + \"/\"), uri.scheme + \"://localhost:\" + mapping.resolvedPort + \"/\")\n                                }];\n                        }\n                    }\n                }\n                return [2 /*return*/, undefined];\n            });\n        }); });\n        return _this;\n    }\n    WebviewPortMappingProvider = tslib_1.__decorate([\n        tslib_1.__param(3, telemetry_1.ITelemetryService)\n    ], WebviewPortMappingProvider);\n    return WebviewPortMappingProvider;\n}(lifecycle_1.Disposable));\nvar SvgBlocker = /** @class */ (function (_super) {\n    tslib_1.__extends(SvgBlocker, _super);\n    function SvgBlocker(session, _options) {\n        var _this = _super.call(this) || this;\n        _this._options = _options;\n        _this._onDidBlockSvg = _this._register(new event_1.Emitter());\n        _this.onDidBlockSvg = _this._onDidBlockSvg.event;\n        session.onBeforeRequest(function (details) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var uri;\n            return tslib_1.__generator(this, function (_a) {\n                if (details.url.indexOf('.svg') > 0) {\n                    uri = uri_1.URI.parse(details.url);\n                    if (uri && !uri.scheme.match(/file/i) && strings_1.endsWith(uri.path, '.svg') && !this.isAllowedSvg(uri)) {\n                        this._onDidBlockSvg.fire();\n                        return [2 /*return*/, { cancel: true }];\n                    }\n                }\n                return [2 /*return*/, undefined];\n            });\n        }); });\n        session.onHeadersReceived(function (details) {\n            var contentType = details.responseHeaders['content-type'] || details.responseHeaders['Content-Type'];\n            if (contentType && Array.isArray(contentType) && contentType.some(function (x) { return x.toLowerCase().indexOf('image/svg') >= 0; })) {\n                var uri = uri_1.URI.parse(details.url);\n                if (uri && !_this.isAllowedSvg(uri)) {\n                    _this._onDidBlockSvg.fire();\n                    return { cancel: true };\n                }\n            }\n            return undefined;\n        });\n        return _this;\n    }\n    SvgBlocker.prototype.isAllowedSvg = function (uri) {\n        if (this._options.svgWhiteList) {\n            return this._options.svgWhiteList.indexOf(uri.authority.toLowerCase()) >= 0;\n        }\n        return false;\n    };\n    return SvgBlocker;\n}(lifecycle_1.Disposable));\nvar WebviewKeyboardHandler = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewKeyboardHandler, _super);\n    function WebviewKeyboardHandler(_webview) {\n        var _this = _super.call(this) || this;\n        _this._webview = _webview;\n        _this._ignoreMenuShortcut = false;\n        if (_this.shouldToggleMenuShortcutsEnablement) {\n            _this._register(dom_1.addDisposableListener(_this._webview, 'did-start-loading', function () {\n                var contents = _this.getWebContents();\n                if (contents) {\n                    contents.on('before-input-event', function (_event, input) {\n                        if (input.type === 'keyDown' && document.activeElement === _this._webview) {\n                            _this._ignoreMenuShortcut = input.control || input.meta;\n                            _this.setIgnoreMenuShortcuts(_this._ignoreMenuShortcut);\n                        }\n                    });\n                }\n            }));\n        }\n        _this._register(dom_1.addDisposableListener(_this._webview, 'ipc-message', function (event) {\n            switch (event.channel) {\n                case 'did-keydown':\n                    // Electron: workaround for https://github.com/electron/electron/issues/14258\n                    // We have to detect keyboard events in the <webview> and dispatch them to our\n                    // keybinding service because these events do not bubble to the parent window anymore.\n                    _this.handleKeydown(event.args[0]);\n                    return;\n                case 'did-focus':\n                    _this.setIgnoreMenuShortcuts(_this._ignoreMenuShortcut);\n                    break;\n                case 'did-blur':\n                    _this.setIgnoreMenuShortcuts(false);\n                    return;\n            }\n        }));\n        return _this;\n    }\n    Object.defineProperty(WebviewKeyboardHandler.prototype, \"shouldToggleMenuShortcutsEnablement\", {\n        get: function () {\n            return browser_1.isMacintosh;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewKeyboardHandler.prototype.setIgnoreMenuShortcuts = function (value) {\n        if (!this.shouldToggleMenuShortcutsEnablement) {\n            return;\n        }\n        var contents = this.getWebContents();\n        if (contents) {\n            contents.setIgnoreMenuShortcuts(value);\n        }\n    };\n    WebviewKeyboardHandler.prototype.getWebContents = function () {\n        var contents = this._webview.getWebContents();\n        if (contents && !contents.isDestroyed()) {\n            return contents;\n        }\n        return undefined;\n    };\n    WebviewKeyboardHandler.prototype.handleKeydown = function (event) {\n        var _this = this;\n        // Create a fake KeyboardEvent from the data provided\n        var emulatedKeyboardEvent = new KeyboardEvent('keydown', event);\n        // Force override the target\n        Object.defineProperty(emulatedKeyboardEvent, 'target', {\n            get: function () { return _this._webview; }\n        });\n        // And re-dispatch\n        window.dispatchEvent(emulatedKeyboardEvent);\n    };\n    return WebviewKeyboardHandler;\n}(lifecycle_1.Disposable));\nvar WebviewElement = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewElement, _super);\n    function WebviewElement(_styleElement, _options, _contentOptions, instantiationService, themeService, environmentService, fileService, telemetryService) {\n        var _this = _super.call(this) || this;\n        _this._styleElement = _styleElement;\n        _this._options = _options;\n        _this._contentOptions = _contentOptions;\n        _this._findStarted = false;\n        _this._contents = '';\n        _this._state = undefined;\n        _this._focused = false;\n        _this._onDidFocus = _this._register(new event_1.Emitter());\n        _this._onDidClickLink = _this._register(new event_1.Emitter());\n        _this.onDidClickLink = _this._onDidClickLink.event;\n        _this._onDidScroll = _this._register(new event_1.Emitter());\n        _this.onDidScroll = _this._onDidScroll.event;\n        _this._onDidUpdateState = _this._register(new event_1.Emitter());\n        _this.onDidUpdateState = _this._onDidUpdateState.event;\n        _this._onMessage = _this._register(new event_1.Emitter());\n        _this.onMessage = _this._onMessage.event;\n        _this._webview = document.createElement('webview');\n        _this._webview.setAttribute('partition', \"webview\" + Date.now());\n        _this._webview.setAttribute('webpreferences', 'contextIsolation=yes');\n        _this._webview.style.flex = '0 1';\n        _this._webview.style.width = '0';\n        _this._webview.style.height = '0';\n        _this._webview.style.outline = '0';\n        _this._webview.preload = require.toUrl('./webview-pre.js');\n        _this._webview.src = 'data:text/html;charset=utf-8,%3C%21DOCTYPE%20html%3E%0D%0A%3Chtml%20lang%3D%22en%22%20style%3D%22width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3Chead%3E%0D%0A%09%3Ctitle%3EVirtual%20Document%3C%2Ftitle%3E%0D%0A%3C%2Fhead%3E%0D%0A%3Cbody%20style%3D%22margin%3A%200%3B%20overflow%3A%20hidden%3B%20width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3C%2Fbody%3E%0D%0A%3C%2Fhtml%3E';\n        _this._ready = new Promise(function (resolve) {\n            var subscription = _this._register(dom_1.addDisposableListener(_this._webview, 'ipc-message', function (event) {\n                if (event.channel === 'webview-ready') {\n                    // console.info('[PID Webview] ' event.args[0]);\n                    dom_1.addClass(_this._webview, 'ready'); // can be found by debug command\n                    subscription.dispose();\n                    resolve();\n                }\n            }));\n        });\n        var session = _this._register(new WebviewSession(_this._webview));\n        _this._register(new WebviewProtocolProvider(_this._webview, _this._options.extension ? _this._options.extension.location : undefined, function () { return (_this._contentOptions.localResourceRoots || []); }, environmentService, fileService));\n        _this._register(new WebviewPortMappingProvider(session, function () { return (_this._contentOptions.portMappings || []); }, _options.extension ? _options.extension.id : undefined, telemetryService));\n        if (!_this._options.allowSvgs) {\n            var svgBlocker = _this._register(new SvgBlocker(session, _this._contentOptions));\n            svgBlocker.onDidBlockSvg(function () { return _this.onDidBlockSvg(); });\n        }\n        _this._register(new WebviewKeyboardHandler(_this._webview));\n        _this._register(dom_1.addDisposableListener(_this._webview, 'console-message', function (e) {\n            console.log(\"[Embedded Page] \" + e.message);\n        }));\n        _this._register(dom_1.addDisposableListener(_this._webview, 'dom-ready', function () {\n            _this.layout();\n            // Workaround for https://github.com/electron/electron/issues/14474\n            if (_this._focused || document.activeElement === _this._webview) {\n                _this._webview.blur();\n                _this._webview.focus();\n            }\n        }));\n        _this._register(dom_1.addDisposableListener(_this._webview, 'crashed', function () {\n            console.error('embedded page crashed');\n        }));\n        _this._register(dom_1.addDisposableListener(_this._webview, 'ipc-message', function (event) {\n            switch (event.channel) {\n                case 'onmessage':\n                    if (event.args && event.args.length) {\n                        _this._onMessage.fire(event.args[0]);\n                    }\n                    return;\n                case 'did-click-link':\n                    var uri = event.args[0];\n                    _this._onDidClickLink.fire(uri_1.URI.parse(uri));\n                    return;\n                case 'did-set-content':\n                    _this._webview.style.flex = '';\n                    _this._webview.style.width = '100%';\n                    _this._webview.style.height = '100%';\n                    _this.layout();\n                    return;\n                case 'did-scroll':\n                    if (event.args && typeof event.args[0] === 'number') {\n                        _this._onDidScroll.fire({ scrollYPercentage: event.args[0] });\n                    }\n                    return;\n                case 'do-reload':\n                    _this.reload();\n                    return;\n                case 'do-update-state':\n                    _this._state = event.args[0];\n                    _this._onDidUpdateState.fire(_this._state);\n                    return;\n                case 'did-focus':\n                    _this.handleFocusChange(true);\n                    return;\n                case 'did-blur':\n                    _this.handleFocusChange(false);\n                    return;\n            }\n        }));\n        _this._register(dom_1.addDisposableListener(_this._webview, 'devtools-opened', function () {\n            _this._send('devtools-opened');\n        }));\n        if (_options.enableFindWidget) {\n            _this._webviewFindWidget = _this._register(instantiationService.createInstance(webviewFindWidget_1.WebviewFindWidget, _this));\n        }\n        _this.style(themeService.getTheme());\n        themeService.onThemeChange(_this.style, _this, _this._toDispose);\n        return _this;\n    }\n    Object.defineProperty(WebviewElement.prototype, \"onDidFocus\", {\n        get: function () { return this._onDidFocus.event; },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewElement.prototype.mountTo = function (parent) {\n        if (this._webviewFindWidget) {\n            parent.appendChild(this._webviewFindWidget.getDomNode());\n        }\n        parent.appendChild(this._webview);\n    };\n    WebviewElement.prototype.dispose = function () {\n        if (this._webview) {\n            if (this._webview.parentElement) {\n                this._webview.parentElement.removeChild(this._webview);\n            }\n        }\n        this._webview = undefined;\n        this._webviewFindWidget = undefined;\n        _super.prototype.dispose.call(this);\n    };\n    WebviewElement.prototype._send = function (channel) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this._ready\n            .then(function () {\n            var _a;\n            return (_a = _this._webview).send.apply(_a, [channel].concat(args));\n        })\n            .catch(function (err) { return console.error(err); });\n    };\n    Object.defineProperty(WebviewElement.prototype, \"initialScrollProgress\", {\n        set: function (value) {\n            this._send('initial-scroll-position', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebviewElement.prototype, \"state\", {\n        set: function (value) {\n            this._state = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebviewElement.prototype, \"options\", {\n        set: function (value) {\n            if (this._contentOptions && webviewEditorService_1.areWebviewInputOptionsEqual(value, this._contentOptions)) {\n                return;\n            }\n            this._contentOptions = value;\n            this._send('content', {\n                contents: this._contents,\n                options: this._contentOptions,\n                state: this._state\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebviewElement.prototype, \"contents\", {\n        set: function (value) {\n            this._contents = value;\n            this._send('content', {\n                contents: value,\n                options: this._contentOptions,\n                state: this._state\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewElement.prototype.update = function (value, options, retainContextWhenHidden) {\n        if (retainContextWhenHidden && value === this._contents && this._contentOptions && webviewEditorService_1.areWebviewInputOptionsEqual(options, this._contentOptions)) {\n            return;\n        }\n        this._contents = value;\n        this._contentOptions = options;\n        this._send('content', {\n            contents: this._contents,\n            options: this._contentOptions,\n            state: this._state\n        });\n    };\n    Object.defineProperty(WebviewElement.prototype, \"baseUrl\", {\n        set: function (value) {\n            this._send('baseUrl', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewElement.prototype.focus = function () {\n        this._webview.focus();\n        this._send('focus');\n        // Handle focus change programmatically (do not rely on event from <webview>)\n        this.handleFocusChange(true);\n    };\n    WebviewElement.prototype.handleFocusChange = function (isFocused) {\n        this._focused = isFocused;\n        if (isFocused) {\n            this._onDidFocus.fire();\n        }\n    };\n    WebviewElement.prototype.sendMessage = function (data) {\n        this._send('message', data);\n    };\n    WebviewElement.prototype.onDidBlockSvg = function () {\n        this.sendMessage({\n            name: 'vscode-did-block-svg'\n        });\n    };\n    WebviewElement.prototype.style = function (theme) {\n        var _a = window.getComputedStyle(this._styleElement), fontFamily = _a.fontFamily, fontWeight = _a.fontWeight, fontSize = _a.fontSize; // TODO@theme avoid styleElement\n        var exportedColors = colorRegistry.getColorRegistry().getColors().reduce(function (colors, entry) {\n            var color = theme.getColor(entry.id);\n            if (color) {\n                colors['vscode-' + entry.id.replace('.', '-')] = color.toString();\n            }\n            return colors;\n        }, {});\n        var styles = tslib_1.__assign({ 'vscode-editor-font-family': fontFamily, 'vscode-editor-font-weight': fontWeight, 'vscode-editor-font-size': fontSize }, exportedColors);\n        var activeTheme = ApiThemeClassName.fromTheme(theme);\n        this._send('styles', styles, activeTheme);\n        if (this._webviewFindWidget) {\n            this._webviewFindWidget.updateTheme(theme);\n        }\n    };\n    WebviewElement.prototype.layout = function () {\n        var contents = this._webview.getWebContents();\n        if (!contents || contents.isDestroyed()) {\n            return;\n        }\n        var window = contents.getOwnerBrowserWindow();\n        if (!window || !window.webContents || window.webContents.isDestroyed()) {\n            return;\n        }\n        window.webContents.getZoomFactor(function (factor) {\n            if (contents.isDestroyed()) {\n                return;\n            }\n            contents.setZoomFactor(factor);\n        });\n    };\n    WebviewElement.prototype.startFind = function (value, options) {\n        if (!value) {\n            return;\n        }\n        // ensure options is defined without modifying the original\n        options = options || {};\n        // FindNext must be false for a first request\n        var findOptions = {\n            forward: options.forward,\n            findNext: false,\n            matchCase: options.matchCase,\n            medialCapitalAsWordStart: options.medialCapitalAsWordStart\n        };\n        this._findStarted = true;\n        this._webview.findInPage(value, findOptions);\n    };\n    /**\n     * Webviews expose a stateful find API.\n     * Successive calls to find will move forward or backward through onFindResults\n     * depending on the supplied options.\n     *\n     * @param value The string to search for. Empty strings are ignored.\n     */\n    WebviewElement.prototype.find = function (value, options) {\n        // Searching with an empty value will throw an exception\n        if (!value) {\n            return;\n        }\n        if (!this._findStarted) {\n            this.startFind(value, options);\n            return;\n        }\n        this._webview.findInPage(value, options);\n    };\n    WebviewElement.prototype.stopFind = function (keepSelection) {\n        this._findStarted = false;\n        this._webview.stopFindInPage(keepSelection ? 'keepSelection' : 'clearSelection');\n    };\n    WebviewElement.prototype.showFind = function () {\n        if (this._webviewFindWidget) {\n            this._webviewFindWidget.reveal();\n        }\n    };\n    WebviewElement.prototype.hideFind = function () {\n        if (this._webviewFindWidget) {\n            this._webviewFindWidget.hide();\n        }\n    };\n    WebviewElement.prototype.reload = function () {\n        this.contents = this._contents;\n    };\n    WebviewElement.prototype.selectAll = function () {\n        this._webview.selectAll();\n    };\n    WebviewElement.prototype.copy = function () {\n        this._webview.copy();\n    };\n    WebviewElement.prototype.paste = function () {\n        this._webview.paste();\n    };\n    WebviewElement.prototype.cut = function () {\n        this._webview.cut();\n    };\n    WebviewElement.prototype.undo = function () {\n        this._webview.undo();\n    };\n    WebviewElement.prototype.redo = function () {\n        this._webview.redo();\n    };\n    WebviewElement = tslib_1.__decorate([\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, themeService_1.IThemeService),\n        tslib_1.__param(5, environment_1.IEnvironmentService),\n        tslib_1.__param(6, files_1.IFileService),\n        tslib_1.__param(7, telemetry_1.ITelemetryService)\n    ], WebviewElement);\n    return WebviewElement;\n}(lifecycle_1.Disposable));\nexports.WebviewElement = WebviewElement;\nvar ApiThemeClassName;\n(function (ApiThemeClassName) {\n    ApiThemeClassName[\"light\"] = \"vscode-light\";\n    ApiThemeClassName[\"dark\"] = \"vscode-dark\";\n    ApiThemeClassName[\"highContrast\"] = \"vscode-high-contrast\";\n})(ApiThemeClassName || (ApiThemeClassName = {}));\n(function (ApiThemeClassName) {\n    function fromTheme(theme) {\n        if (theme.type === themeService_1.LIGHT) {\n            return ApiThemeClassName.light;\n        }\n        else if (theme.type === themeService_1.DARK) {\n            return ApiThemeClassName.dark;\n        }\n        else {\n            return ApiThemeClassName.highContrast;\n        }\n    }\n    ApiThemeClassName.fromTheme = fromTheme;\n})(ApiThemeClassName || (ApiThemeClassName = {}));\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewElement.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewElement.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OnBeforeRequestDetails, OnHeadersReceivedDetails, Response } from 'electron';\nimport { addClass, addDisposableListener } from 'vs/base/browser/dom';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { once } from 'vs/base/common/functional';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh } from 'vs/base/browser/browser';\nimport { endsWith } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport * as colorRegistry from 'vs/platform/theme/common/colorRegistry';\nimport { DARK, ITheme, IThemeService, LIGHT } from 'vs/platform/theme/common/themeService';\nimport { registerFileProtocol, WebviewProtocol } from 'vs/workbench/contrib/webview/electron-browser/webviewProtocols';\nimport { areWebviewInputOptionsEqual } from './webviewEditorService';\nimport { WebviewFindWidget } from './webviewFindWidget';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport interface WebviewPortMapping {\n\treadonly port: number;\n\treadonly resolvedPort: number;\n}\n\nexport interface WebviewPortMapping {\n\treadonly port: number;\n\treadonly resolvedPort: number;\n}\n\nexport interface WebviewOptions {\n\treadonly allowSvgs?: boolean;\n\treadonly extension?: {\n\t\treadonly location: URI;\n\t\treadonly id?: ExtensionIdentifier;\n\t};\n\treadonly enableFindWidget?: boolean;\n}\n\nexport interface WebviewContentOptions {\n\treadonly allowScripts?: boolean;\n\treadonly svgWhiteList?: string[];\n\treadonly localResourceRoots?: ReadonlyArray<URI>;\n\treadonly portMappings?: ReadonlyArray<WebviewPortMapping>;\n}\n\ninterface IKeydownEvent {\n\tkey: string;\n\tkeyCode: number;\n\tcode: string;\n\tshiftKey: boolean;\n\taltKey: boolean;\n\tctrlKey: boolean;\n\tmetaKey: boolean;\n\trepeat: boolean;\n}\n\ntype OnBeforeRequestDelegate = (details: OnBeforeRequestDetails) => Promise<Response | undefined>;\ntype OnHeadersReceivedDelegate = (details: OnHeadersReceivedDetails) => { cancel: boolean } | undefined;\n\nclass WebviewSession extends Disposable {\n\n\tprivate readonly _onBeforeRequestDelegates: Array<OnBeforeRequestDelegate> = [];\n\tprivate readonly _onHeadersReceivedDelegates: Array<OnHeadersReceivedDelegate> = [];\n\n\tpublic constructor(\n\t\twebview: Electron.WebviewTag,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(addDisposableListener(webview, 'did-start-loading', once(() => {\n\t\t\tconst contents = webview.getWebContents();\n\t\t\tif (!contents) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontents.session.webRequest.onBeforeRequest(async (details, callback) => {\n\t\t\t\tfor (const delegate of this._onBeforeRequestDelegates) {\n\t\t\t\t\tconst result = await delegate(details);\n\t\t\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\t\t\tcallback(result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallback({});\n\t\t\t});\n\n\t\t\tcontents.session.webRequest.onHeadersReceived((details, callback) => {\n\t\t\t\tfor (const delegate of this._onHeadersReceivedDelegates) {\n\t\t\t\t\tconst result = delegate(details);\n\t\t\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\t\t\tcallback(result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallback({ cancel: false, responseHeaders: details.responseHeaders });\n\t\t\t});\n\t\t})));\n\t}\n\n\tpublic onBeforeRequest(delegate: OnBeforeRequestDelegate) {\n\t\tthis._onBeforeRequestDelegates.push(delegate);\n\t}\n\n\tpublic onHeadersReceived(delegate: OnHeadersReceivedDelegate) {\n\t\tthis._onHeadersReceivedDelegates.push(delegate);\n\t}\n}\n\nclass WebviewProtocolProvider extends Disposable {\n\tconstructor(\n\t\twebview: Electron.WebviewTag,\n\t\tprivate readonly _extensionLocation: URI | undefined,\n\t\tprivate readonly _getLocalResourceRoots: () => ReadonlyArray<URI>,\n\t\tprivate readonly _environmentService: IEnvironmentService,\n\t\tprivate readonly _fileService: IFileService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(addDisposableListener(webview, 'did-start-loading', once(() => {\n\t\t\tconst contents = webview.getWebContents();\n\t\t\tif (contents) {\n\t\t\t\tthis.registerProtocols(contents);\n\t\t\t}\n\t\t})));\n\t}\n\n\tprivate registerProtocols(contents: Electron.WebContents) {\n\t\tif (contents.isDestroyed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst appRootUri = URI.file(this._environmentService.appRoot);\n\n\t\tregisterFileProtocol(contents, WebviewProtocol.CoreResource, this._fileService, undefined, () => [\n\t\t\tappRootUri\n\t\t]);\n\n\t\tregisterFileProtocol(contents, WebviewProtocol.VsCodeResource, this._fileService, this._extensionLocation, () =>\n\t\t\tthis._getLocalResourceRoots()\n\t\t);\n\t}\n}\n\nclass WebviewPortMappingProvider extends Disposable {\n\n\tconstructor(\n\t\tsession: WebviewSession,\n\t\tmappings: () => ReadonlyArray<WebviewPortMapping>,\n\t\textensionId: ExtensionIdentifier | undefined,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tlet hasLogged = false;\n\n\t\tsession.onBeforeRequest(async (details) => {\n\t\t\tconst uri = URI.parse(details.url);\n\t\t\tif (uri.scheme !== 'http' && uri.scheme !== 'https') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst localhostMatch = /^localhost:(\\d+)$/.exec(uri.authority);\n\t\t\tif (localhostMatch) {\n\t\t\t\tif (!hasLogged && extensionId) {\n\t\t\t\t\thasLogged = true;\n\n\t\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"webview.accessLocalhost\" : {\n\t\t\t\t\t\t\t\"extension\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\ttelemetryService.publicLog('webview.accessLocalhost', { extension: extensionId.value });\n\t\t\t\t}\n\n\t\t\t\tconst port = +localhostMatch[1];\n\t\t\t\tfor (const mapping of mappings()) {\n\t\t\t\t\tif (mapping.port === port && mapping.port !== mapping.resolvedPort) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tredirectURL: details.url.replace(\n\t\t\t\t\t\t\t\tnew RegExp(`^${uri.scheme}://localhost:${mapping.port}/`),\n\t\t\t\t\t\t\t\t`${uri.scheme}://localhost:${mapping.resolvedPort}/`)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n\nclass SvgBlocker extends Disposable {\n\n\tprivate readonly _onDidBlockSvg = this._register(new Emitter<void>());\n\tpublic readonly onDidBlockSvg = this._onDidBlockSvg.event;\n\n\tconstructor(\n\t\tsession: WebviewSession,\n\t\tprivate readonly _options: WebviewContentOptions,\n\t) {\n\t\tsuper();\n\n\t\tsession.onBeforeRequest(async (details) => {\n\t\t\tif (details.url.indexOf('.svg') > 0) {\n\t\t\t\tconst uri = URI.parse(details.url);\n\t\t\t\tif (uri && !uri.scheme.match(/file/i) && endsWith(uri.path, '.svg') && !this.isAllowedSvg(uri)) {\n\t\t\t\t\tthis._onDidBlockSvg.fire();\n\t\t\t\t\treturn { cancel: true };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\n\t\tsession.onHeadersReceived((details) => {\n\t\t\tconst contentType: string[] = details.responseHeaders['content-type'] || details.responseHeaders['Content-Type'];\n\t\t\tif (contentType && Array.isArray(contentType) && contentType.some(x => x.toLowerCase().indexOf('image/svg') >= 0)) {\n\t\t\t\tconst uri = URI.parse(details.url);\n\t\t\t\tif (uri && !this.isAllowedSvg(uri)) {\n\t\t\t\t\tthis._onDidBlockSvg.fire();\n\t\t\t\t\treturn { cancel: true };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate isAllowedSvg(uri: URI): boolean {\n\t\tif (this._options.svgWhiteList) {\n\t\t\treturn this._options.svgWhiteList.indexOf(uri.authority.toLowerCase()) >= 0;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nclass WebviewKeyboardHandler extends Disposable {\n\n\tprivate _ignoreMenuShortcut = false;\n\n\tconstructor(\n\t\tprivate readonly _webview: Electron.WebviewTag\n\t) {\n\t\tsuper();\n\n\t\tif (this.shouldToggleMenuShortcutsEnablement) {\n\t\t\tthis._register(addDisposableListener(this._webview, 'did-start-loading', () => {\n\t\t\t\tconst contents = this.getWebContents();\n\t\t\t\tif (contents) {\n\t\t\t\t\tcontents.on('before-input-event', (_event, input) => {\n\t\t\t\t\t\tif (input.type === 'keyDown' && document.activeElement === this._webview) {\n\t\t\t\t\t\t\tthis._ignoreMenuShortcut = input.control || input.meta;\n\t\t\t\t\t\t\tthis.setIgnoreMenuShortcuts(this._ignoreMenuShortcut);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(addDisposableListener(this._webview, 'ipc-message', (event) => {\n\t\t\tswitch (event.channel) {\n\t\t\t\tcase 'did-keydown':\n\t\t\t\t\t// Electron: workaround for https://github.com/electron/electron/issues/14258\n\t\t\t\t\t// We have to detect keyboard events in the <webview> and dispatch them to our\n\t\t\t\t\t// keybinding service because these events do not bubble to the parent window anymore.\n\t\t\t\t\tthis.handleKeydown(event.args[0]);\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-focus':\n\t\t\t\t\tthis.setIgnoreMenuShortcuts(this._ignoreMenuShortcut);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'did-blur':\n\t\t\t\t\tthis.setIgnoreMenuShortcuts(false);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate get shouldToggleMenuShortcutsEnablement() {\n\t\treturn isMacintosh;\n\t}\n\n\tprivate setIgnoreMenuShortcuts(value: boolean) {\n\t\tif (!this.shouldToggleMenuShortcutsEnablement) {\n\t\t\treturn;\n\t\t}\n\t\tconst contents = this.getWebContents();\n\t\tif (contents) {\n\t\t\tcontents.setIgnoreMenuShortcuts(value);\n\t\t}\n\t}\n\n\tprivate getWebContents(): Electron.WebContents | undefined {\n\t\tconst contents = this._webview.getWebContents();\n\t\tif (contents && !contents.isDestroyed()) {\n\t\t\treturn contents;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate handleKeydown(event: IKeydownEvent): void {\n\t\t// Create a fake KeyboardEvent from the data provided\n\t\tconst emulatedKeyboardEvent = new KeyboardEvent('keydown', event);\n\t\t// Force override the target\n\t\tObject.defineProperty(emulatedKeyboardEvent, 'target', {\n\t\t\tget: () => this._webview\n\t\t});\n\t\t// And re-dispatch\n\t\twindow.dispatchEvent(emulatedKeyboardEvent);\n\t}\n}\n\n\nexport class WebviewElement extends Disposable {\n\tprivate _webview: Electron.WebviewTag;\n\tprivate _ready: Promise<void>;\n\n\tprivate _webviewFindWidget: WebviewFindWidget;\n\tprivate _findStarted: boolean = false;\n\tprivate _contents: string = '';\n\tprivate _state: string | undefined = undefined;\n\tprivate _focused = false;\n\n\tprivate readonly _onDidFocus = this._register(new Emitter<void>());\n\tpublic get onDidFocus(): Event<void> { return this._onDidFocus.event; }\n\n\tconstructor(\n\t\tprivate readonly _styleElement: Element,\n\t\tprivate readonly _options: WebviewOptions,\n\t\tprivate _contentOptions: WebviewContentOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis._webview = document.createElement('webview');\n\t\tthis._webview.setAttribute('partition', `webview${Date.now()}`);\n\n\t\tthis._webview.setAttribute('webpreferences', 'contextIsolation=yes');\n\n\t\tthis._webview.style.flex = '0 1';\n\t\tthis._webview.style.width = '0';\n\t\tthis._webview.style.height = '0';\n\t\tthis._webview.style.outline = '0';\n\n\t\tthis._webview.preload = require.toUrl('./webview-pre.js');\n\t\tthis._webview.src = 'data:text/html;charset=utf-8,%3C%21DOCTYPE%20html%3E%0D%0A%3Chtml%20lang%3D%22en%22%20style%3D%22width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3Chead%3E%0D%0A%09%3Ctitle%3EVirtual%20Document%3C%2Ftitle%3E%0D%0A%3C%2Fhead%3E%0D%0A%3Cbody%20style%3D%22margin%3A%200%3B%20overflow%3A%20hidden%3B%20width%3A%20100%25%3B%20height%3A%20100%25%22%3E%0D%0A%3C%2Fbody%3E%0D%0A%3C%2Fhtml%3E';\n\n\t\tthis._ready = new Promise(resolve => {\n\t\t\tconst subscription = this._register(addDisposableListener(this._webview, 'ipc-message', (event) => {\n\t\t\t\tif (event.channel === 'webview-ready') {\n\t\t\t\t\t// console.info('[PID Webview] ' event.args[0]);\n\t\t\t\t\taddClass(this._webview, 'ready'); // can be found by debug command\n\n\t\t\t\t\tsubscription.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\tconst session = this._register(new WebviewSession(this._webview));\n\n\t\tthis._register(new WebviewProtocolProvider(\n\t\t\tthis._webview,\n\t\t\tthis._options.extension ? this._options.extension.location : undefined,\n\t\t\t() => (this._contentOptions.localResourceRoots || []),\n\t\t\tenvironmentService,\n\t\t\tfileService));\n\n\t\tthis._register(new WebviewPortMappingProvider(\n\t\t\tsession,\n\t\t\t() => (this._contentOptions.portMappings || []),\n\t\t\t_options.extension ? _options.extension.id : undefined,\n\t\t\ttelemetryService));\n\n\n\t\tif (!this._options.allowSvgs) {\n\t\t\tconst svgBlocker = this._register(new SvgBlocker(session, this._contentOptions));\n\t\t\tsvgBlocker.onDidBlockSvg(() => this.onDidBlockSvg());\n\t\t}\n\n\t\tthis._register(new WebviewKeyboardHandler(this._webview));\n\n\t\tthis._register(addDisposableListener(this._webview, 'console-message', function (e: { level: number; message: string; line: number; sourceId: string; }) {\n\t\t\tconsole.log(`[Embedded Page] ${e.message}`);\n\t\t}));\n\t\tthis._register(addDisposableListener(this._webview, 'dom-ready', () => {\n\t\t\tthis.layout();\n\n\t\t\t// Workaround for https://github.com/electron/electron/issues/14474\n\t\t\tif (this._focused || document.activeElement === this._webview) {\n\t\t\t\tthis._webview.blur();\n\t\t\t\tthis._webview.focus();\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(this._webview, 'crashed', () => {\n\t\t\tconsole.error('embedded page crashed');\n\t\t}));\n\t\tthis._register(addDisposableListener(this._webview, 'ipc-message', (event) => {\n\t\t\tswitch (event.channel) {\n\t\t\t\tcase 'onmessage':\n\t\t\t\t\tif (event.args && event.args.length) {\n\t\t\t\t\t\tthis._onMessage.fire(event.args[0]);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-click-link':\n\t\t\t\t\tlet [uri] = event.args;\n\t\t\t\t\tthis._onDidClickLink.fire(URI.parse(uri));\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-set-content':\n\t\t\t\t\tthis._webview.style.flex = '';\n\t\t\t\t\tthis._webview.style.width = '100%';\n\t\t\t\t\tthis._webview.style.height = '100%';\n\t\t\t\t\tthis.layout();\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-scroll':\n\t\t\t\t\tif (event.args && typeof event.args[0] === 'number') {\n\t\t\t\t\t\tthis._onDidScroll.fire({ scrollYPercentage: event.args[0] });\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'do-reload':\n\t\t\t\t\tthis.reload();\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'do-update-state':\n\t\t\t\t\tthis._state = event.args[0];\n\t\t\t\t\tthis._onDidUpdateState.fire(this._state);\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-focus':\n\t\t\t\t\tthis.handleFocusChange(true);\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'did-blur':\n\t\t\t\t\tthis.handleFocusChange(false);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(this._webview, 'devtools-opened', () => {\n\t\t\tthis._send('devtools-opened');\n\t\t}));\n\n\t\tif (_options.enableFindWidget) {\n\t\t\tthis._webviewFindWidget = this._register(instantiationService.createInstance(WebviewFindWidget, this));\n\t\t}\n\n\t\tthis.style(themeService.getTheme());\n\t\tthemeService.onThemeChange(this.style, this, this._toDispose);\n\t}\n\n\tpublic mountTo(parent: HTMLElement) {\n\t\tif (this._webviewFindWidget) {\n\t\t\tparent.appendChild(this._webviewFindWidget.getDomNode()!);\n\t\t}\n\t\tparent.appendChild(this._webview);\n\t}\n\n\tdispose(): void {\n\t\tif (this._webview) {\n\t\t\tif (this._webview.parentElement) {\n\t\t\t\tthis._webview.parentElement.removeChild(this._webview);\n\t\t\t}\n\t\t}\n\n\t\tthis._webview = undefined!;\n\t\tthis._webviewFindWidget = undefined!;\n\t\tsuper.dispose();\n\t}\n\n\tprivate readonly _onDidClickLink = this._register(new Emitter<URI>());\n\tpublic readonly onDidClickLink = this._onDidClickLink.event;\n\n\tprivate readonly _onDidScroll = this._register(new Emitter<{ scrollYPercentage: number }>());\n\tpublic readonly onDidScroll = this._onDidScroll.event;\n\n\tprivate readonly _onDidUpdateState = this._register(new Emitter<string | undefined>());\n\tpublic readonly onDidUpdateState = this._onDidUpdateState.event;\n\n\tprivate readonly _onMessage = this._register(new Emitter<any>());\n\tpublic readonly onMessage = this._onMessage.event;\n\n\tprivate _send(channel: string, ...args: any[]): void {\n\t\tthis._ready\n\t\t\t.then(() => this._webview.send(channel, ...args))\n\t\t\t.catch(err => console.error(err));\n\t}\n\n\tpublic set initialScrollProgress(value: number) {\n\t\tthis._send('initial-scroll-position', value);\n\t}\n\n\tpublic set state(value: string | undefined) {\n\t\tthis._state = value;\n\t}\n\n\tpublic set options(value: WebviewContentOptions) {\n\t\tif (this._contentOptions && areWebviewInputOptionsEqual(value, this._contentOptions)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._contentOptions = value;\n\t\tthis._send('content', {\n\t\t\tcontents: this._contents,\n\t\t\toptions: this._contentOptions,\n\t\t\tstate: this._state\n\t\t});\n\t}\n\n\tpublic set contents(value: string) {\n\t\tthis._contents = value;\n\t\tthis._send('content', {\n\t\t\tcontents: value,\n\t\t\toptions: this._contentOptions,\n\t\t\tstate: this._state\n\t\t});\n\t}\n\n\tpublic update(value: string, options: WebviewContentOptions, retainContextWhenHidden: boolean) {\n\t\tif (retainContextWhenHidden && value === this._contents && this._contentOptions && areWebviewInputOptionsEqual(options, this._contentOptions)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._contents = value;\n\t\tthis._contentOptions = options;\n\t\tthis._send('content', {\n\t\t\tcontents: this._contents,\n\t\t\toptions: this._contentOptions,\n\t\t\tstate: this._state\n\t\t});\n\t}\n\n\tpublic set baseUrl(value: string) {\n\t\tthis._send('baseUrl', value);\n\t}\n\n\tpublic focus(): void {\n\t\tthis._webview.focus();\n\t\tthis._send('focus');\n\n\t\t// Handle focus change programmatically (do not rely on event from <webview>)\n\t\tthis.handleFocusChange(true);\n\t}\n\n\tprivate handleFocusChange(isFocused: boolean): void {\n\t\tthis._focused = isFocused;\n\t\tif (isFocused) {\n\t\t\tthis._onDidFocus.fire();\n\t\t}\n\t}\n\n\tpublic sendMessage(data: any): void {\n\t\tthis._send('message', data);\n\t}\n\n\tprivate onDidBlockSvg() {\n\t\tthis.sendMessage({\n\t\t\tname: 'vscode-did-block-svg'\n\t\t});\n\t}\n\n\tprivate style(theme: ITheme): void {\n\t\tconst { fontFamily, fontWeight, fontSize } = window.getComputedStyle(this._styleElement); // TODO@theme avoid styleElement\n\n\t\tconst exportedColors = colorRegistry.getColorRegistry().getColors().reduce((colors, entry) => {\n\t\t\tconst color = theme.getColor(entry.id);\n\t\t\tif (color) {\n\t\t\t\tcolors['vscode-' + entry.id.replace('.', '-')] = color.toString();\n\t\t\t}\n\t\t\treturn colors;\n\t\t}, {} as { [key: string]: string });\n\n\n\t\tconst styles = {\n\t\t\t'vscode-editor-font-family': fontFamily,\n\t\t\t'vscode-editor-font-weight': fontWeight,\n\t\t\t'vscode-editor-font-size': fontSize,\n\t\t\t...exportedColors\n\t\t};\n\n\t\tconst activeTheme = ApiThemeClassName.fromTheme(theme);\n\t\tthis._send('styles', styles, activeTheme);\n\n\t\tif (this._webviewFindWidget) {\n\t\t\tthis._webviewFindWidget.updateTheme(theme);\n\t\t}\n\t}\n\n\tpublic layout(): void {\n\t\tconst contents = this._webview.getWebContents();\n\t\tif (!contents || contents.isDestroyed()) {\n\t\t\treturn;\n\t\t}\n\t\tconst window = (contents as any).getOwnerBrowserWindow();\n\t\tif (!window || !window.webContents || window.webContents.isDestroyed()) {\n\t\t\treturn;\n\t\t}\n\t\twindow.webContents.getZoomFactor((factor: number) => {\n\t\t\tif (contents.isDestroyed()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontents.setZoomFactor(factor);\n\t\t});\n\t}\n\n\tpublic startFind(value: string, options?: Electron.FindInPageOptions) {\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ensure options is defined without modifying the original\n\t\toptions = options || {};\n\n\t\t// FindNext must be false for a first request\n\t\tconst findOptions: Electron.FindInPageOptions = {\n\t\t\tforward: options.forward,\n\t\t\tfindNext: false,\n\t\t\tmatchCase: options.matchCase,\n\t\t\tmedialCapitalAsWordStart: options.medialCapitalAsWordStart\n\t\t};\n\n\t\tthis._findStarted = true;\n\t\tthis._webview.findInPage(value, findOptions);\n\t}\n\n\t/**\n\t * Webviews expose a stateful find API.\n\t * Successive calls to find will move forward or backward through onFindResults\n\t * depending on the supplied options.\n\t *\n\t * @param value The string to search for. Empty strings are ignored.\n\t */\n\tpublic find(value: string, options?: Electron.FindInPageOptions): void {\n\t\t// Searching with an empty value will throw an exception\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._findStarted) {\n\t\t\tthis.startFind(value, options);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._webview.findInPage(value, options);\n\t}\n\n\tpublic stopFind(keepSelection?: boolean): void {\n\t\tthis._findStarted = false;\n\t\tthis._webview.stopFindInPage(keepSelection ? 'keepSelection' : 'clearSelection');\n\t}\n\n\tpublic showFind() {\n\t\tif (this._webviewFindWidget) {\n\t\t\tthis._webviewFindWidget.reveal();\n\t\t}\n\t}\n\n\tpublic hideFind() {\n\t\tif (this._webviewFindWidget) {\n\t\t\tthis._webviewFindWidget.hide();\n\t\t}\n\t}\n\n\tpublic reload() {\n\t\tthis.contents = this._contents;\n\t}\n\n\tpublic selectAll() {\n\t\tthis._webview.selectAll();\n\t}\n\n\tpublic copy() {\n\t\tthis._webview.copy();\n\t}\n\n\tpublic paste() {\n\t\tthis._webview.paste();\n\t}\n\n\tpublic cut() {\n\t\tthis._webview.cut();\n\t}\n\n\tpublic undo() {\n\t\tthis._webview.undo();\n\t}\n\n\tpublic redo() {\n\t\tthis._webview.redo();\n\t}\n}\n\n\nenum ApiThemeClassName {\n\tlight = 'vscode-light',\n\tdark = 'vscode-dark',\n\thighContrast = 'vscode-high-contrast'\n}\n\nnamespace ApiThemeClassName {\n\texport function fromTheme(theme: ITheme): ApiThemeClassName {\n\t\tif (theme.type === LIGHT) {\n\t\t\treturn ApiThemeClassName.light;\n\t\t} else if (theme.type === DARK) {\n\t\t\treturn ApiThemeClassName.dark;\n\t\t} else {\n\t\t\treturn ApiThemeClassName.highContrast;\n\t\t}\n\t}\n}\n"]}]}