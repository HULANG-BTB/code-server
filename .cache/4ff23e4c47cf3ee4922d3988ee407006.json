{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-main/menubarService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-main/menubarService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/platform/menubar/electron-main/menubar\", \"vs/platform/log/common/log\", \"vs/platform/instantiation/common/instantiation\"], function (require, exports, menubar_1, log_1, instantiation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let MenubarService = class MenubarService {\n        constructor(instantiationService, logService) {\n            this.instantiationService = instantiationService;\n            this.logService = logService;\n            // Install Menu\n            this._menubar = this.instantiationService.createInstance(menubar_1.Menubar);\n        }\n        updateMenubar(windowId, menus) {\n            this.logService.trace('menubarService#updateMenubar', windowId);\n            if (this._menubar) {\n                this._menubar.updateMenu(menus, windowId);\n            }\n            return Promise.resolve(undefined);\n        }\n    };\n    MenubarService = __decorate([\n        __param(0, instantiation_1.IInstantiationService),\n        __param(1, log_1.ILogService)\n    ], MenubarService);\n    exports.MenubarService = MenubarService;\n});\n",null]}