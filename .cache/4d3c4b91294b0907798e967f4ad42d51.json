{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadHeapService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadHeapService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar extHost_protocol_1 = require(\"../common/extHost.protocol\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar heap_1 = require(\"vs/workbench/services/heap/common/heap\");\nvar MainThreadHeapService = /** @class */ (function (_super) {\n    tslib_1.__extends(MainThreadHeapService, _super);\n    function MainThreadHeapService(extHostContext, heapService) {\n        var _this = _super.call(this) || this;\n        var proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostHeapService);\n        _this._register(heapService.onGarbageCollection(function (ids) {\n            // send to ext host\n            proxy.$onGarbageCollection(ids);\n        }));\n        return _this;\n    }\n    MainThreadHeapService = tslib_1.__decorate([\n        extHostCustomers_1.extHostCustomer,\n        tslib_1.__param(1, heap_1.IHeapService)\n    ], MainThreadHeapService);\n    return MainThreadHeapService;\n}(lifecycle_1.Disposable));\nexports.MainThreadHeapService = MainThreadHeapService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadHeapService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadHeapService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,+DAA6E;AAC7E,sDAAsD;AACtD,6EAA2E;AAC3E,+DAAsE;AAGtE;IAA2C,iDAAU;IAEpD,+BACC,cAA+B,EACjB,WAAyB;QAFxC,YAIC,iBAAO,SAMP;QALA,IAAM,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,iCAAc,CAAC,kBAAkB,CAAC,CAAC;QACzE,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAC,GAAG;YAClD,mBAAmB;YACnB,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC;;IACL,CAAC;IAZW,qBAAqB;QADjC,kCAAe;QAKb,mBAAA,mBAAY,CAAA;OAJF,qBAAqB,CAajC;IAAD,4BAAC;CAAA,AAbD,CAA2C,sBAAU,GAapD;AAbY,sDAAqB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostContext, IExtHostContext } from '../common/extHost.protocol';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { extHostCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { IHeapService } from 'vs/workbench/services/heap/common/heap';\n\n@extHostCustomer\nexport class MainThreadHeapService extends Disposable {\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IHeapService heapService: IHeapService,\n\t) {\n\t\tsuper();\n\t\tconst proxy = extHostContext.getProxy(ExtHostContext.ExtHostHeapService);\n\t\tthis._register(heapService.onGarbageCollection((ids) => {\n\t\t\t// send to ext host\n\t\t\tproxy.$onGarbageCollection(ids);\n\t\t}));\n\t}\n}\n"]}]}