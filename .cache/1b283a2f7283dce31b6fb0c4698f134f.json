{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/url/common/url.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/url/common/url.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IURLService = instantiation_1.createDecorator('urlService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/url/common/url.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/url/common/url.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,gFAAiF;AAGpE,QAAA,WAAW,GAAG,+BAAe,CAAc,YAAY,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport const IURLService = createDecorator<IURLService>('urlService');\n\nexport interface IURLHandler {\n\thandleURL(uri: URI): Promise<boolean>;\n}\n\nexport interface IURLService {\n\t_serviceBrand: any;\n\n\topen(url: URI): Promise<boolean>;\n\tregisterHandler(handler: IURLHandler): IDisposable;\n}\n"]}]}