{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar descriptors_1 = require(\"./descriptors\");\nvar _registry = [];\nfunction registerSingleton(id, ctor, supportsDelayedInstantiation) {\n    _registry.push({ id: id, descriptor: new descriptors_1.SyncDescriptor(ctor, [], supportsDelayedInstantiation) });\n}\nexports.registerSingleton = registerSingleton;\nfunction getServices() {\n    return _registry;\n}\nexports.getServices = getServices;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,6CAA+C;AAS/C,IAAM,SAAS,GAAgC,EAAE,CAAC;AAElD,SAAgB,iBAAiB,CAAI,EAAwB,EAAE,IAA+B,EAAE,4BAAsC;IACrI,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,IAAA,EAAE,UAAU,EAAE,IAAI,4BAAc,CAAI,IAAI,EAAE,EAAE,EAAE,4BAA4B,CAAC,EAAE,CAAC,CAAC;AACnG,CAAC;AAFD,8CAEC;AAED,SAAgB,WAAW;IAC1B,OAAO,SAAS,CAAC;AAClB,CAAC;AAFD,kCAEC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { ServiceIdentifier, IConstructorSignature0 } from './instantiation';\n\n\nexport interface IServiceContribution<T> {\n\tid: ServiceIdentifier<T>;\n\tdescriptor: SyncDescriptor<T>;\n}\n\nconst _registry: IServiceContribution<any>[] = [];\n\nexport function registerSingleton<T>(id: ServiceIdentifier<T>, ctor: IConstructorSignature0<T>, supportsDelayedInstantiation?: boolean): void {\n\t_registry.push({ id, descriptor: new SyncDescriptor<T>(ctor, [], supportsDelayedInstantiation) });\n}\n\nexport function getServices(): IServiceContribution<any>[] {\n\treturn _registry;\n}\n"]}]}