{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/protocol/src/browser/modules/spdlog.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/browser/modules/spdlog.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar proxy_1 = require(\"../../common/proxy\");\n// tslint:disable completed-docs\nvar RotatingLogger = /** @class */ (function (_super) {\n    tslib_1.__extends(RotatingLogger, _super);\n    function RotatingLogger(moduleProxy, name, filename, filesize, filecount) {\n        var _this = _super.call(this, moduleProxy.createLogger(name, filename, filesize, filecount)) || this;\n        _this.moduleProxy = moduleProxy;\n        _this.name = name;\n        _this.filename = filename;\n        _this.filesize = filesize;\n        _this.filecount = filecount;\n        return _this;\n    }\n    RotatingLogger.prototype.trace = function (message) { this.catch(this.proxy.trace(message)); };\n    RotatingLogger.prototype.debug = function (message) { this.catch(this.proxy.debug(message)); };\n    RotatingLogger.prototype.info = function (message) { this.catch(this.proxy.info(message)); };\n    RotatingLogger.prototype.warn = function (message) { this.catch(this.proxy.warn(message)); };\n    RotatingLogger.prototype.error = function (message) { this.catch(this.proxy.error(message)); };\n    RotatingLogger.prototype.critical = function (message) { this.catch(this.proxy.critical(message)); };\n    RotatingLogger.prototype.setLevel = function (level) { this.catch(this.proxy.setLevel(level)); };\n    RotatingLogger.prototype.clearFormatters = function () { this.catch(this.proxy.clearFormatters()); };\n    RotatingLogger.prototype.flush = function () { this.catch(this.proxy.flush()); };\n    RotatingLogger.prototype.drop = function () { this.catch(this.proxy.drop()); };\n    RotatingLogger.prototype.handleDisconnect = function () {\n        this.initialize(this.moduleProxy.createLogger(this.name, this.filename, this.filesize, this.filecount));\n    };\n    return RotatingLogger;\n}(proxy_1.ClientProxy));\nvar SpdlogModule = /** @class */ (function () {\n    function SpdlogModule(proxy) {\n        var _this = this;\n        this.proxy = proxy;\n        this.setAsyncMode = function (bufferSize, flushInterval) {\n            return _this.proxy.setAsyncMode(bufferSize, flushInterval);\n        };\n        this.RotatingLogger = /** @class */ (function (_super) {\n            tslib_1.__extends(class_1, _super);\n            function class_1(name, filename, filesize, filecount) {\n                return _super.call(this, proxy, name, filename, filesize, filecount) || this;\n            }\n            return class_1;\n        }(RotatingLogger));\n    }\n    SpdlogModule.prototype.createRotatingLogger = function (name, filename, filesize, filecount) {\n        return new RotatingLogger(this.proxy, name, filename, filesize, filecount);\n    };\n    SpdlogModule.prototype.createRotatingLoggerAsync = function (name, filename, filesize, filecount) {\n        return Promise.resolve(this.createRotatingLogger(name, filename, filesize, filecount));\n    };\n    return SpdlogModule;\n}());\nexports.SpdlogModule = SpdlogModule;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/browser/modules/spdlog.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/browser/modules/spdlog.ts"],"names":[],"mappings":"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","sourcesContent":["import * as spdlog from \"spdlog\";\nimport { ClientProxy } from \"../../common/proxy\";\nimport { RotatingLoggerProxy, SpdlogModuleProxy } from \"../../node/modules/spdlog\";\n\n// tslint:disable completed-docs\n\nclass RotatingLogger extends ClientProxy<RotatingLoggerProxy> implements spdlog.RotatingLogger {\n\tpublic constructor(\n\t\tprivate readonly moduleProxy: SpdlogModuleProxy,\n\t\tprivate readonly name: string,\n\t\tprivate readonly filename: string,\n\t\tprivate readonly filesize: number,\n\t\tprivate readonly filecount: number,\n\t) {\n\t\tsuper(moduleProxy.createLogger(name, filename, filesize, filecount));\n\t}\n\n\tpublic trace (message: string): void { this.catch(this.proxy.trace(message)); }\n\tpublic debug (message: string): void { this.catch(this.proxy.debug(message)); }\n\tpublic info (message: string): void { this.catch(this.proxy.info(message)); }\n\tpublic warn (message: string): void { this.catch(this.proxy.warn(message)); }\n\tpublic error (message: string): void { this.catch(this.proxy.error(message)); }\n\tpublic critical (message: string): void { this.catch(this.proxy.critical(message)); }\n\tpublic setLevel (level: number): void { this.catch(this.proxy.setLevel(level)); }\n\tpublic clearFormatters (): void { this.catch(this.proxy.clearFormatters()); }\n\tpublic flush (): void { this.catch(this.proxy.flush()); }\n\tpublic drop (): void { this.catch(this.proxy.drop()); }\n\n\tprotected handleDisconnect(): void {\n\t\tthis.initialize(this.moduleProxy.createLogger(this.name, this.filename, this.filesize, this.filecount));\n\t}\n}\n\nexport class SpdlogModule {\n\tpublic readonly RotatingLogger: typeof spdlog.RotatingLogger;\n\n\tpublic constructor(private readonly proxy: SpdlogModuleProxy) {\n\t\tthis.RotatingLogger = class extends RotatingLogger {\n\t\t\tpublic constructor(name: string, filename: string, filesize: number, filecount: number) {\n\t\t\t\tsuper(proxy, name, filename, filesize, filecount);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic setAsyncMode = (bufferSize: number, flushInterval: number): Promise<void> => {\n\t\treturn this.proxy.setAsyncMode(bufferSize, flushInterval);\n\t}\n\n\tpublic createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): RotatingLogger {\n\t\treturn new RotatingLogger(this.proxy, name, filename, filesize, filecount);\n\t}\n\n\tpublic createRotatingLoggerAsync(name: string, filename: string, filesize: number, filecount: number): Promise<RotatingLogger> {\n\t\treturn Promise.resolve(this.createRotatingLogger(name, filename, filesize, filecount));\n\t}\n}\n"]}]}