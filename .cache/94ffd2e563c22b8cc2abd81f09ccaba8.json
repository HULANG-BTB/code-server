{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/patternInputWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/patternInputWidget.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar dom = require(\"vs/base/browser/dom\");\nvar widget_1 = require(\"vs/base/browser/ui/widget\");\nvar checkbox_1 = require(\"vs/base/browser/ui/checkbox/checkbox\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar event_1 = require(\"vs/base/common/event\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar contextScopedHistoryWidget_1 = require(\"vs/platform/browser/contextScopedHistoryWidget\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar PatternInputWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(PatternInputWidget, _super);\n    function PatternInputWidget(parent, contextViewProvider, options, themeService, contextKeyService) {\n        if (options === void 0) { options = Object.create(null); }\n        var _this = _super.call(this) || this;\n        _this.contextViewProvider = contextViewProvider;\n        _this.themeService = themeService;\n        _this.contextKeyService = contextKeyService;\n        _this._onSubmit = _this._register(new event_1.Emitter());\n        _this.onSubmit = _this._onSubmit.event;\n        _this._onCancel = _this._register(new event_1.Emitter());\n        _this.onCancel = _this._onCancel.event;\n        _this.width = options.width || 100;\n        _this.placeholder = options.placeholder || '';\n        _this.ariaLabel = options.ariaLabel || nls.localize('defaultLabel', \"input\");\n        _this.render(options);\n        parent.appendChild(_this.domNode);\n        return _this;\n    }\n    PatternInputWidget.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.inputFocusTracker) {\n            this.inputFocusTracker.dispose();\n        }\n    };\n    PatternInputWidget.prototype.setWidth = function (newWidth) {\n        this.width = newWidth;\n        this.domNode.style.width = this.width + 'px';\n        this.contextViewProvider.layout();\n        this.setInputWidth();\n    };\n    PatternInputWidget.prototype.getValue = function () {\n        return this.inputBox.value;\n    };\n    PatternInputWidget.prototype.setValue = function (value) {\n        if (this.inputBox.value !== value) {\n            this.inputBox.value = value;\n        }\n    };\n    PatternInputWidget.prototype.select = function () {\n        this.inputBox.select();\n    };\n    PatternInputWidget.prototype.focus = function () {\n        this.inputBox.focus();\n    };\n    PatternInputWidget.prototype.inputHasFocus = function () {\n        return this.inputBox.hasFocus();\n    };\n    PatternInputWidget.prototype.setInputWidth = function () {\n        this.inputBox.width = this.width - this.getSubcontrolsWidth() - 2; // 2 for input box border\n    };\n    PatternInputWidget.prototype.getSubcontrolsWidth = function () {\n        return 0;\n    };\n    PatternInputWidget.prototype.getHistory = function () {\n        return this.inputBox.getHistory();\n    };\n    PatternInputWidget.prototype.clearHistory = function () {\n        this.inputBox.clearHistory();\n    };\n    PatternInputWidget.prototype.onSearchSubmit = function () {\n        this.inputBox.addToHistory();\n    };\n    PatternInputWidget.prototype.showNextTerm = function () {\n        this.inputBox.showNextValue();\n    };\n    PatternInputWidget.prototype.showPreviousTerm = function () {\n        this.inputBox.showPreviousValue();\n    };\n    PatternInputWidget.prototype.render = function (options) {\n        var _this = this;\n        this.domNode = document.createElement('div');\n        this.domNode.style.width = this.width + 'px';\n        dom.addClass(this.domNode, 'monaco-findInput');\n        this.inputBox = new contextScopedHistoryWidget_1.ContextScopedHistoryInputBox(this.domNode, this.contextViewProvider, {\n            placeholder: this.placeholder || '',\n            ariaLabel: this.ariaLabel || '',\n            validationOptions: {\n                validation: undefined\n            },\n            history: options.history || []\n        }, this.contextKeyService);\n        this._register(styler_1.attachInputBoxStyler(this.inputBox, this.themeService));\n        this.inputFocusTracker = dom.trackFocus(this.inputBox.inputElement);\n        this.onkeyup(this.inputBox.inputElement, function (keyboardEvent) { return _this.onInputKeyUp(keyboardEvent); });\n        var controls = document.createElement('div');\n        controls.className = 'controls';\n        this.renderSubcontrols(controls);\n        this.domNode.appendChild(controls);\n        this.setInputWidth();\n    };\n    PatternInputWidget.prototype.renderSubcontrols = function (controlsDiv) {\n    };\n    PatternInputWidget.prototype.onInputKeyUp = function (keyboardEvent) {\n        switch (keyboardEvent.keyCode) {\n            case keyCodes_1.KeyCode.Enter:\n                this._onSubmit.fire(false);\n                return;\n            case keyCodes_1.KeyCode.Escape:\n                this._onCancel.fire(false);\n                return;\n            default:\n                return;\n        }\n    };\n    PatternInputWidget.OPTION_CHANGE = 'optionChange';\n    PatternInputWidget = tslib_1.__decorate([\n        tslib_1.__param(3, themeService_1.IThemeService),\n        tslib_1.__param(4, contextkey_1.IContextKeyService)\n    ], PatternInputWidget);\n    return PatternInputWidget;\n}(widget_1.Widget));\nexports.PatternInputWidget = PatternInputWidget;\nvar ExcludePatternInputWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(ExcludePatternInputWidget, _super);\n    function ExcludePatternInputWidget(parent, contextViewProvider, options, themeService, contextKeyService) {\n        if (options === void 0) { options = Object.create(null); }\n        return _super.call(this, parent, contextViewProvider, options, themeService, contextKeyService) || this;\n    }\n    ExcludePatternInputWidget.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.useExcludesAndIgnoreFilesBox.dispose();\n    };\n    ExcludePatternInputWidget.prototype.useExcludesAndIgnoreFiles = function () {\n        return this.useExcludesAndIgnoreFilesBox.checked;\n    };\n    ExcludePatternInputWidget.prototype.setUseExcludesAndIgnoreFiles = function (value) {\n        this.useExcludesAndIgnoreFilesBox.checked = value;\n    };\n    ExcludePatternInputWidget.prototype.getSubcontrolsWidth = function () {\n        return _super.prototype.getSubcontrolsWidth.call(this) + this.useExcludesAndIgnoreFilesBox.width();\n    };\n    ExcludePatternInputWidget.prototype.renderSubcontrols = function (controlsDiv) {\n        var _this = this;\n        this.useExcludesAndIgnoreFilesBox = this._register(new checkbox_1.Checkbox({\n            actionClassName: 'useExcludesAndIgnoreFiles',\n            title: nls.localize('useExcludesAndIgnoreFilesDescription', \"Use Exclude Settings and Ignore Files\"),\n            isChecked: true,\n        }));\n        this._register(this.useExcludesAndIgnoreFilesBox.onChange(function (viaKeyboard) {\n            if (!viaKeyboard) {\n                _this.inputBox.focus();\n            }\n        }));\n        this._register(styler_1.attachCheckboxStyler(this.useExcludesAndIgnoreFilesBox, this.themeService));\n        controlsDiv.appendChild(this.useExcludesAndIgnoreFilesBox.domNode);\n        _super.prototype.renderSubcontrols.call(this, controlsDiv);\n    };\n    ExcludePatternInputWidget = tslib_1.__decorate([\n        tslib_1.__param(3, themeService_1.IThemeService),\n        tslib_1.__param(4, contextkey_1.IContextKeyService)\n    ], ExcludePatternInputWidget);\n    return ExcludePatternInputWidget;\n}(PatternInputWidget));\nexports.ExcludePatternInputWidget = ExcludePatternInputWidget;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/patternInputWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/patternInputWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { Widget } from 'vs/base/browser/ui/widget';\nimport { Checkbox } from 'vs/base/browser/ui/checkbox/checkbox';\nimport { IContextViewProvider } from 'vs/base/browser/ui/contextview/contextview';\nimport { IInputValidator, HistoryInputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { Event as CommonEvent, Emitter } from 'vs/base/common/event';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { attachInputBoxStyler, attachCheckboxStyler } from 'vs/platform/theme/common/styler';\nimport { ContextScopedHistoryInputBox } from 'vs/platform/browser/contextScopedHistoryWidget';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\n\nexport interface IOptions {\n\tplaceholder?: string;\n\twidth?: number;\n\tvalidation?: IInputValidator;\n\tariaLabel?: string;\n\thistory?: string[];\n}\n\nexport class PatternInputWidget extends Widget {\n\n\tstatic OPTION_CHANGE: string = 'optionChange';\n\n\tinputFocusTracker: dom.IFocusTracker;\n\n\tprivate width: number;\n\tprivate placeholder: string;\n\tprivate ariaLabel: string;\n\n\tprivate domNode: HTMLElement;\n\tprotected inputBox: HistoryInputBox;\n\n\tprivate _onSubmit = this._register(new Emitter<boolean>());\n\tonSubmit: CommonEvent<boolean> = this._onSubmit.event;\n\n\tprivate _onCancel = this._register(new Emitter<boolean>());\n\tonCancel: CommonEvent<boolean> = this._onCancel.event;\n\n\tconstructor(parent: HTMLElement, private contextViewProvider: IContextViewProvider, options: IOptions = Object.create(null),\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\t\tthis.width = options.width || 100;\n\t\tthis.placeholder = options.placeholder || '';\n\t\tthis.ariaLabel = options.ariaLabel || nls.localize('defaultLabel', \"input\");\n\n\t\tthis.render(options);\n\n\t\tparent.appendChild(this.domNode);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.inputFocusTracker) {\n\t\t\tthis.inputFocusTracker.dispose();\n\t\t}\n\t}\n\n\tsetWidth(newWidth: number): void {\n\t\tthis.width = newWidth;\n\t\tthis.domNode.style.width = this.width + 'px';\n\t\tthis.contextViewProvider.layout();\n\t\tthis.setInputWidth();\n\t}\n\n\tgetValue(): string {\n\t\treturn this.inputBox.value;\n\t}\n\n\tsetValue(value: string): void {\n\t\tif (this.inputBox.value !== value) {\n\t\t\tthis.inputBox.value = value;\n\t\t}\n\t}\n\n\n\tselect(): void {\n\t\tthis.inputBox.select();\n\t}\n\n\tfocus(): void {\n\t\tthis.inputBox.focus();\n\t}\n\n\tinputHasFocus(): boolean {\n\t\treturn this.inputBox.hasFocus();\n\t}\n\n\tprivate setInputWidth(): void {\n\t\tthis.inputBox.width = this.width - this.getSubcontrolsWidth() - 2; // 2 for input box border\n\t}\n\n\tprotected getSubcontrolsWidth(): number {\n\t\treturn 0;\n\t}\n\n\tgetHistory(): string[] {\n\t\treturn this.inputBox.getHistory();\n\t}\n\n\tclearHistory(): void {\n\t\tthis.inputBox.clearHistory();\n\t}\n\n\tonSearchSubmit(): void {\n\t\tthis.inputBox.addToHistory();\n\t}\n\n\tshowNextTerm() {\n\t\tthis.inputBox.showNextValue();\n\t}\n\n\tshowPreviousTerm() {\n\t\tthis.inputBox.showPreviousValue();\n\t}\n\n\tprivate render(options: IOptions): void {\n\t\tthis.domNode = document.createElement('div');\n\t\tthis.domNode.style.width = this.width + 'px';\n\t\tdom.addClass(this.domNode, 'monaco-findInput');\n\n\t\tthis.inputBox = new ContextScopedHistoryInputBox(this.domNode, this.contextViewProvider, {\n\t\t\tplaceholder: this.placeholder || '',\n\t\t\tariaLabel: this.ariaLabel || '',\n\t\t\tvalidationOptions: {\n\t\t\t\tvalidation: undefined\n\t\t\t},\n\t\t\thistory: options.history || []\n\t\t}, this.contextKeyService);\n\t\tthis._register(attachInputBoxStyler(this.inputBox, this.themeService));\n\t\tthis.inputFocusTracker = dom.trackFocus(this.inputBox.inputElement);\n\t\tthis.onkeyup(this.inputBox.inputElement, (keyboardEvent) => this.onInputKeyUp(keyboardEvent));\n\n\t\tconst controls = document.createElement('div');\n\t\tcontrols.className = 'controls';\n\t\tthis.renderSubcontrols(controls);\n\n\t\tthis.domNode.appendChild(controls);\n\t\tthis.setInputWidth();\n\t}\n\n\tprotected renderSubcontrols(controlsDiv: HTMLDivElement): void {\n\t}\n\n\tprivate onInputKeyUp(keyboardEvent: IKeyboardEvent) {\n\t\tswitch (keyboardEvent.keyCode) {\n\t\t\tcase KeyCode.Enter:\n\t\t\t\tthis._onSubmit.fire(false);\n\t\t\t\treturn;\n\t\t\tcase KeyCode.Escape:\n\t\t\t\tthis._onCancel.fire(false);\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport class ExcludePatternInputWidget extends PatternInputWidget {\n\n\tconstructor(parent: HTMLElement, contextViewProvider: IContextViewProvider, options: IOptions = Object.create(null),\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(parent, contextViewProvider, options, themeService, contextKeyService);\n\t}\n\n\tprivate useExcludesAndIgnoreFilesBox: Checkbox;\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tthis.useExcludesAndIgnoreFilesBox.dispose();\n\t}\n\n\tuseExcludesAndIgnoreFiles(): boolean {\n\t\treturn this.useExcludesAndIgnoreFilesBox.checked;\n\t}\n\n\tsetUseExcludesAndIgnoreFiles(value: boolean) {\n\t\tthis.useExcludesAndIgnoreFilesBox.checked = value;\n\t}\n\n\tprotected getSubcontrolsWidth(): number {\n\t\treturn super.getSubcontrolsWidth() + this.useExcludesAndIgnoreFilesBox.width();\n\t}\n\n\tprotected renderSubcontrols(controlsDiv: HTMLDivElement): void {\n\t\tthis.useExcludesAndIgnoreFilesBox = this._register(new Checkbox({\n\t\t\tactionClassName: 'useExcludesAndIgnoreFiles',\n\t\t\ttitle: nls.localize('useExcludesAndIgnoreFilesDescription', \"Use Exclude Settings and Ignore Files\"),\n\t\t\tisChecked: true,\n\t\t}));\n\t\tthis._register(this.useExcludesAndIgnoreFilesBox.onChange(viaKeyboard => {\n\t\t\tif (!viaKeyboard) {\n\t\t\t\tthis.inputBox.focus();\n\t\t\t}\n\t\t}));\n\t\tthis._register(attachCheckboxStyler(this.useExcludesAndIgnoreFilesBox, this.themeService));\n\n\t\tcontrolsDiv.appendChild(this.useExcludesAndIgnoreFilesBox.domNode);\n\t\tsuper.renderSubcontrols(controlsDiv);\n\t}\n}"]}]}