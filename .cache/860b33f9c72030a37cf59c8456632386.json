{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/base/common/uuid.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/common/uuid.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ValueUUID {\n        constructor(_value) {\n            this._value = _value;\n            // empty\n        }\n        asHex() {\n            return this._value;\n        }\n    }\n    class V4UUID extends ValueUUID {\n        constructor() {\n            super([\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                '-',\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                '-',\n                '4',\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                '-',\n                V4UUID._oneOf(V4UUID._timeHighBits),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                '-',\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n                V4UUID._randomHex(),\n            ].join(''));\n        }\n        static _oneOf(array) {\n            return array[Math.floor(array.length * Math.random())];\n        }\n        static _randomHex() {\n            return V4UUID._oneOf(V4UUID._chars);\n        }\n    }\n    V4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n    V4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n    function v4() {\n        return new V4UUID();\n    }\n    exports.v4 = v4;\n    const _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    function isUUID(value) {\n        return _UUIDPattern.test(value);\n    }\n    exports.isUUID = isUUID;\n    /**\n     * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n     * @param value A uuid string.\n     */\n    function parse(value) {\n        if (!isUUID(value)) {\n            throw new Error('invalid uuid');\n        }\n        return new ValueUUID(value);\n    }\n    exports.parse = parse;\n    function generateUuid() {\n        return v4().asHex();\n    }\n    exports.generateUuid = generateUuid;\n});\n",null]}