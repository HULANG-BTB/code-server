{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/workbenchCommonProperties.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/workbenchCommonProperties.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/storage/common/storage\", \"vs/platform/telemetry/node/commonProperties\"], function (require, exports, storage_1, commonProperties_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.instanceStorageKey = 'telemetry.instanceId';\n    exports.currentSessionDateStorageKey = 'telemetry.currentSessionDate';\n    exports.firstSessionDateStorageKey = 'telemetry.firstSessionDate';\n    exports.lastSessionDateStorageKey = 'telemetry.lastSessionDate';\n    function resolveWorkbenchCommonProperties(storageService, commit, version, machineId, installSourcePath) {\n        return commonProperties_1.resolveCommonProperties(commit, version, machineId, installSourcePath).then(result => {\n            const instanceId = storageService.get(exports.instanceStorageKey, storage_1.StorageScope.GLOBAL);\n            const firstSessionDate = storageService.get(exports.firstSessionDateStorageKey, storage_1.StorageScope.GLOBAL);\n            const lastSessionDate = storageService.get(exports.lastSessionDateStorageKey, storage_1.StorageScope.GLOBAL);\n            // __GDPR__COMMON__ \"common.version.shell\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n            result['common.version.shell'] = process.versions && process.versions['electron'];\n            // __GDPR__COMMON__ \"common.version.renderer\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n            result['common.version.renderer'] = process.versions && process.versions['chrome'];\n            // __GDPR__COMMON__ \"common.firstSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            result['common.firstSessionDate'] = firstSessionDate;\n            // __GDPR__COMMON__ \"common.lastSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            result['common.lastSessionDate'] = lastSessionDate || '';\n            // __GDPR__COMMON__ \"common.isNewSession\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            result['common.isNewSession'] = !lastSessionDate ? '1' : '0';\n            // __GDPR__COMMON__ \"common.instanceId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            result['common.instanceId'] = instanceId;\n            return result;\n        });\n    }\n    exports.resolveWorkbenchCommonProperties = resolveWorkbenchCommonProperties;\n});\n",null]}