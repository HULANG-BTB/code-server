{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/theme/common/styler.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/theme/common/colorRegistry\", \"vs/base/common/objects\"], function (require, exports, colorRegistry_1, objects_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function computeStyles(theme, styleMap) {\n        const styles = Object.create(null);\n        for (let key in styleMap) {\n            const value = styleMap[key];\n            if (typeof value === 'string') {\n                styles[key] = theme.getColor(value);\n            }\n            else if (typeof value === 'function') {\n                styles[key] = value(theme);\n            }\n        }\n        return styles;\n    }\n    exports.computeStyles = computeStyles;\n    function attachStyler(themeService, styleMap, widgetOrCallback) {\n        function applyStyles(theme) {\n            const styles = computeStyles(themeService.getTheme(), styleMap);\n            if (typeof widgetOrCallback === 'function') {\n                widgetOrCallback(styles);\n            }\n            else {\n                widgetOrCallback.style(styles);\n            }\n        }\n        applyStyles(themeService.getTheme());\n        return themeService.onThemeChange(applyStyles);\n    }\n    exports.attachStyler = attachStyler;\n    function attachCheckboxStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            inputActiveOptionBorder: (style && style.inputActiveOptionBorderColor) || colorRegistry_1.inputActiveOptionBorder\n        }, widget);\n    }\n    exports.attachCheckboxStyler = attachCheckboxStyler;\n    function attachBadgeStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            badgeBackground: (style && style.badgeBackground) || colorRegistry_1.badgeBackground,\n            badgeForeground: (style && style.badgeForeground) || colorRegistry_1.badgeForeground,\n            badgeBorder: colorRegistry_1.contrastBorder\n        }, widget);\n    }\n    exports.attachBadgeStyler = attachBadgeStyler;\n    function attachInputBoxStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n            inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n            inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n            inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n            inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n            inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n            inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n            inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n            inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n            inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n            inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n            inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground\n        }, widget);\n    }\n    exports.attachInputBoxStyler = attachInputBoxStyler;\n    function attachSelectBoxStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            selectBackground: (style && style.selectBackground) || colorRegistry_1.selectBackground,\n            selectListBackground: (style && style.selectListBackground) || colorRegistry_1.selectListBackground,\n            selectForeground: (style && style.selectForeground) || colorRegistry_1.selectForeground,\n            decoratorRightForeground: (style && style.pickerGroupForeground) || colorRegistry_1.pickerGroupForeground,\n            selectBorder: (style && style.selectBorder) || colorRegistry_1.selectBorder,\n            focusBorder: (style && style.focusBorder) || colorRegistry_1.focusBorder,\n            listFocusBackground: (style && style.listFocusBackground) || colorRegistry_1.listFocusBackground,\n            listFocusForeground: (style && style.listFocusForeground) || colorRegistry_1.listFocusForeground,\n            listFocusOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n            listHoverBackground: (style && style.listHoverBackground) || colorRegistry_1.listHoverBackground,\n            listHoverForeground: (style && style.listHoverForeground) || colorRegistry_1.listHoverForeground,\n            listHoverOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n            selectListBorder: (style && style.selectListBorder) || colorRegistry_1.editorWidgetBorder\n        }, widget);\n    }\n    exports.attachSelectBoxStyler = attachSelectBoxStyler;\n    function attachFindInputBoxStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n            inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n            inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n            inputActiveOptionBorder: (style && style.inputActiveOptionBorder) || colorRegistry_1.inputActiveOptionBorder,\n            inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n            inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n            inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n            inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n            inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n            inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n            inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n            inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n            inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground\n        }, widget);\n    }\n    exports.attachFindInputBoxStyler = attachFindInputBoxStyler;\n    function attachQuickOpenStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            foreground: (style && style.foreground) || colorRegistry_1.foreground,\n            background: (style && style.background) || colorRegistry_1.editorBackground,\n            borderColor: style && style.borderColor || colorRegistry_1.contrastBorder,\n            widgetShadow: style && style.widgetShadow || colorRegistry_1.widgetShadow,\n            progressBarBackground: style && style.progressBarBackground || colorRegistry_1.progressBarBackground,\n            pickerGroupForeground: style && style.pickerGroupForeground || colorRegistry_1.pickerGroupForeground,\n            pickerGroupBorder: style && style.pickerGroupBorder || colorRegistry_1.pickerGroupBorder,\n            inputBackground: (style && style.inputBackground) || colorRegistry_1.inputBackground,\n            inputForeground: (style && style.inputForeground) || colorRegistry_1.inputForeground,\n            inputBorder: (style && style.inputBorder) || colorRegistry_1.inputBorder,\n            inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_1.inputValidationInfoBorder,\n            inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_1.inputValidationInfoBackground,\n            inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_1.inputValidationInfoForeground,\n            inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_1.inputValidationWarningBorder,\n            inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_1.inputValidationWarningBackground,\n            inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_1.inputValidationWarningForeground,\n            inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_1.inputValidationErrorBorder,\n            inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_1.inputValidationErrorBackground,\n            inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_1.inputValidationErrorForeground,\n            listFocusBackground: (style && style.listFocusBackground) || colorRegistry_1.listFocusBackground,\n            listFocusForeground: (style && style.listFocusForeground) || colorRegistry_1.listFocusForeground,\n            listActiveSelectionBackground: (style && style.listActiveSelectionBackground) || colorRegistry_1.darken(colorRegistry_1.listActiveSelectionBackground, 0.1),\n            listActiveSelectionForeground: (style && style.listActiveSelectionForeground) || colorRegistry_1.listActiveSelectionForeground,\n            listFocusAndSelectionBackground: style && style.listFocusAndSelectionBackground || colorRegistry_1.listActiveSelectionBackground,\n            listFocusAndSelectionForeground: (style && style.listFocusAndSelectionForeground) || colorRegistry_1.listActiveSelectionForeground,\n            listInactiveSelectionBackground: (style && style.listInactiveSelectionBackground) || colorRegistry_1.listInactiveSelectionBackground,\n            listInactiveSelectionForeground: (style && style.listInactiveSelectionForeground) || colorRegistry_1.listInactiveSelectionForeground,\n            listInactiveFocusBackground: (style && style.listInactiveFocusBackground) || colorRegistry_1.listInactiveFocusBackground,\n            listHoverBackground: (style && style.listHoverBackground) || colorRegistry_1.listHoverBackground,\n            listHoverForeground: (style && style.listHoverForeground) || colorRegistry_1.listHoverForeground,\n            listDropBackground: (style && style.listDropBackground) || colorRegistry_1.listDropBackground,\n            listFocusOutline: (style && style.listFocusOutline) || colorRegistry_1.activeContrastBorder,\n            listSelectionOutline: (style && style.listSelectionOutline) || colorRegistry_1.activeContrastBorder,\n            listHoverOutline: (style && style.listHoverOutline) || colorRegistry_1.activeContrastBorder\n        }, widget);\n    }\n    exports.attachQuickOpenStyler = attachQuickOpenStyler;\n    function attachListStyler(widget, themeService, overrides) {\n        return attachStyler(themeService, objects_1.mixin(overrides || Object.create(null), exports.defaultListStyles, false), widget);\n    }\n    exports.attachListStyler = attachListStyler;\n    exports.defaultListStyles = {\n        listFocusBackground: colorRegistry_1.listFocusBackground,\n        listFocusForeground: colorRegistry_1.listFocusForeground,\n        listActiveSelectionBackground: colorRegistry_1.darken(colorRegistry_1.listActiveSelectionBackground, 0.1),\n        listActiveSelectionForeground: colorRegistry_1.listActiveSelectionForeground,\n        listFocusAndSelectionBackground: colorRegistry_1.listActiveSelectionBackground,\n        listFocusAndSelectionForeground: colorRegistry_1.listActiveSelectionForeground,\n        listInactiveSelectionBackground: colorRegistry_1.listInactiveSelectionBackground,\n        listInactiveSelectionForeground: colorRegistry_1.listInactiveSelectionForeground,\n        listInactiveFocusBackground: colorRegistry_1.listInactiveFocusBackground,\n        listHoverBackground: colorRegistry_1.listHoverBackground,\n        listHoverForeground: colorRegistry_1.listHoverForeground,\n        listDropBackground: colorRegistry_1.listDropBackground,\n        listFocusOutline: colorRegistry_1.activeContrastBorder,\n        listSelectionOutline: colorRegistry_1.activeContrastBorder,\n        listHoverOutline: colorRegistry_1.activeContrastBorder,\n        listFilterWidgetBackground: colorRegistry_1.listFilterWidgetBackground,\n        listFilterWidgetOutline: colorRegistry_1.listFilterWidgetOutline,\n        listFilterWidgetNoMatchesOutline: colorRegistry_1.listFilterWidgetNoMatchesOutline,\n        listMatchesShadow: colorRegistry_1.widgetShadow\n    };\n    function attachButtonStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            buttonForeground: (style && style.buttonForeground) || colorRegistry_1.buttonForeground,\n            buttonBackground: (style && style.buttonBackground) || colorRegistry_1.buttonBackground,\n            buttonHoverBackground: (style && style.buttonHoverBackground) || colorRegistry_1.buttonHoverBackground,\n            buttonBorder: colorRegistry_1.contrastBorder\n        }, widget);\n    }\n    exports.attachButtonStyler = attachButtonStyler;\n    function attachProgressBarStyler(widget, themeService, style) {\n        return attachStyler(themeService, {\n            progressBarBackground: (style && style.progressBarBackground) || colorRegistry_1.progressBarBackground\n        }, widget);\n    }\n    exports.attachProgressBarStyler = attachProgressBarStyler;\n    function attachStylerCallback(themeService, colors, callback) {\n        return attachStyler(themeService, colors, callback);\n    }\n    exports.attachStylerCallback = attachStylerCallback;\n    exports.defaultBreadcrumbsStyles = {\n        breadcrumbsBackground: colorRegistry_1.breadcrumbsBackground,\n        breadcrumbsForeground: colorRegistry_1.breadcrumbsForeground,\n        breadcrumbsHoverForeground: colorRegistry_1.breadcrumbsFocusForeground,\n        breadcrumbsFocusForeground: colorRegistry_1.breadcrumbsFocusForeground,\n        breadcrumbsFocusAndSelectionForeground: colorRegistry_1.breadcrumbsActiveSelectionForeground,\n    };\n    function attachBreadcrumbsStyler(widget, themeService, style) {\n        return attachStyler(themeService, Object.assign({}, exports.defaultBreadcrumbsStyles, style), widget);\n    }\n    exports.attachBreadcrumbsStyler = attachBreadcrumbsStyler;\n    exports.defaultMenuStyles = {\n        shadowColor: colorRegistry_1.widgetShadow,\n        borderColor: colorRegistry_1.menuBorder,\n        foregroundColor: colorRegistry_1.menuForeground,\n        backgroundColor: colorRegistry_1.menuBackground,\n        selectionForegroundColor: colorRegistry_1.menuSelectionForeground,\n        selectionBackgroundColor: colorRegistry_1.menuSelectionBackground,\n        selectionBorderColor: colorRegistry_1.menuSelectionBorder,\n        separatorColor: colorRegistry_1.menuSeparatorBackground\n    };\n    function attachMenuStyler(widget, themeService, style) {\n        return attachStyler(themeService, Object.assign({}, exports.defaultMenuStyles, style), widget);\n    }\n    exports.attachMenuStyler = attachMenuStyler;\n    exports.defaultDialogStyles = {\n        dialogBackground: colorRegistry_1.editorWidgetBackground,\n        dialogForeground: colorRegistry_1.foreground,\n        dialogShadow: colorRegistry_1.widgetShadow,\n        dialogBorder: colorRegistry_1.contrastBorder,\n        buttonForeground: colorRegistry_1.buttonForeground,\n        buttonBackground: colorRegistry_1.buttonBackground,\n        buttonHoverBackground: colorRegistry_1.buttonHoverBackground,\n        buttonBorder: colorRegistry_1.contrastBorder\n    };\n    function attachDialogStyler(widget, themeService, style) {\n        return attachStyler(themeService, Object.assign({}, exports.defaultDialogStyles, style), widget);\n    }\n    exports.attachDialogStyler = attachDialogStyler;\n});\n",null]}