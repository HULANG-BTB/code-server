{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar sharedProcessService_1 = require(\"vs/platform/ipc/electron-browser/sharedProcessService\");\nvar LocalizationsService = /** @class */ (function () {\n    function LocalizationsService(sharedProcessService) {\n        this.channel = sharedProcessService.getChannel('localizations');\n    }\n    Object.defineProperty(LocalizationsService.prototype, \"onDidLanguagesChange\", {\n        get: function () { return this.channel.listen('onDidLanguagesChange'); },\n        enumerable: true,\n        configurable: true\n    });\n    LocalizationsService.prototype.getLanguageIds = function (type) {\n        return this.channel.call('getLanguageIds', type);\n    };\n    LocalizationsService = tslib_1.__decorate([\n        tslib_1.__param(0, sharedProcessService_1.ISharedProcessService)\n    ], LocalizationsService);\n    return LocalizationsService;\n}());\nexports.LocalizationsService = LocalizationsService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAKhG,8FAA8F;AAG9F;IAMC,8BAAmC,oBAA2C;QAC7E,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IACjE,CAAC;IAED,sBAAI,sDAAoB;aAAxB,cAA0C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAE/F,6CAAc,GAAd,UAAe,IAAmB;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAdW,oBAAoB;QAMnB,mBAAA,4CAAqB,CAAA;OANtB,oBAAoB,CAehC;IAAD,2BAAC;CAAA,AAfD,IAeC;AAfY,oDAAoB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport { ISharedProcessService } from 'vs/platform/ipc/electron-browser/sharedProcessService';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport class LocalizationsService implements ILocalizationsService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate channel: IChannel;\n\n\tconstructor(@ISharedProcessService sharedProcessService: ISharedProcessService) {\n\t\tthis.channel = sharedProcessService.getChannel('localizations');\n\t}\n\n\tget onDidLanguagesChange(): Event<void> { return this.channel.listen('onDidLanguagesChange'); }\n\n\tgetLanguageIds(type?: LanguageType): Promise<string[]> {\n\t\treturn this.channel.call('getLanguageIds', type);\n\t}\n}"]}]}