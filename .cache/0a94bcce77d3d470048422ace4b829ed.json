{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts","mtime":1555846338040},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar lifecycle = require(\"vs/base/common/lifecycle\");\nvar env = require(\"vs/base/common/platform\");\nvar browser = require(\"vs/base/browser/browser\");\nvar json_1 = require(\"vs/base/common/json\");\nvar severity_1 = require(\"vs/base/common/severity\");\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar wordHelper_1 = require(\"vs/editor/common/model/wordHelper\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar debugActions_1 = require(\"vs/workbench/contrib/debug/browser/debugActions\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar exceptionWidget_1 = require(\"vs/workbench/contrib/debug/browser/exceptionWidget\");\nvar editorWidgets_1 = require(\"vs/workbench/browser/parts/editor/editorWidgets\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar coreCommands_1 = require(\"vs/editor/browser/controller/coreCommands\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar contextmenu_1 = require(\"vs/base/browser/contextmenu\");\nvar decorators_1 = require(\"vs/base/common/decorators\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar getHover_1 = require(\"vs/editor/contrib/hover/getHover\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar breakpointWidget_1 = require(\"vs/workbench/contrib/debug/browser/breakpointWidget\");\nvar debugHover_1 = require(\"vs/workbench/contrib/debug/browser/debugHover\");\nvar HOVER_DELAY = 300;\nvar LAUNCH_JSON_REGEX = /launch\\.json$/;\nvar INLINE_VALUE_DECORATION_KEY = 'inlinevaluedecoration';\nvar MAX_NUM_INLINE_VALUES = 100; // JS Global scope can have 700+ entries. We want to limit ourselves for perf reasons\nvar MAX_INLINE_DECORATOR_LENGTH = 150; // Max string length of each inline decorator when debugging. If exceeded ... is added\nvar MAX_TOKENIZATION_LINE_LEN = 500; // If line is too long, then inline values for the line are skipped\nvar DebugEditorContribution = /** @class */ (function () {\n    function DebugEditorContribution(editor, debugService, contextMenuService, instantiationService, contextKeyService, commandService, codeEditorService, telemetryService, configurationService, keybindingService, dialogService) {\n        this.editor = editor;\n        this.debugService = debugService;\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n        this.commandService = commandService;\n        this.codeEditorService = codeEditorService;\n        this.telemetryService = telemetryService;\n        this.configurationService = configurationService;\n        this.keybindingService = keybindingService;\n        this.dialogService = dialogService;\n        this.mouseDown = false;\n        this.breakpointHintDecoration = [];\n        this.hoverWidget = this.instantiationService.createInstance(debugHover_1.DebugHoverWidget, this.editor);\n        this.toDispose = [];\n        this.registerListeners();\n        this.breakpointWidgetVisible = debug_1.CONTEXT_BREAKPOINT_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this.updateConfigurationWidgetVisibility();\n        this.codeEditorService.registerDecorationType(INLINE_VALUE_DECORATION_KEY, {});\n        this.toggleExceptionWidget();\n    }\n    DebugEditorContribution.prototype.getContextMenuActions = function (breakpoints, uri, lineNumber) {\n        var _this = this;\n        var actions = [];\n        if (breakpoints.length === 1) {\n            var breakpointType = breakpoints[0].logMessage ? nls.localize('logPoint', \"Logpoint\") : nls.localize('breakpoint', \"Breakpoint\");\n            actions.push(new debugActions_1.RemoveBreakpointAction(debugActions_1.RemoveBreakpointAction.ID, nls.localize('removeBreakpoint', \"Remove {0}\", breakpointType), this.debugService, this.keybindingService));\n            actions.push(new actions_1.Action('workbench.debug.action.editBreakpointAction', nls.localize('editBreakpoint', \"Edit {0}...\", breakpointType), undefined, true, function () { return Promise.resolve(_this.editor.getContribution(debug_1.EDITOR_CONTRIBUTION_ID).showBreakpointWidget(breakpoints[0].lineNumber, breakpoints[0].column)); }));\n            actions.push(new actions_1.Action(\"workbench.debug.viewlet.action.toggleBreakpoint\", breakpoints[0].enabled ? nls.localize('disableBreakpoint', \"Disable {0}\", breakpointType) : nls.localize('enableBreakpoint', \"Enable {0}\", breakpointType), undefined, true, function () { return _this.debugService.enableOrDisableBreakpoints(!breakpoints[0].enabled, breakpoints[0]); }));\n        }\n        else if (breakpoints.length > 1) {\n            var sorted = breakpoints.slice().sort(function (first, second) { return (first.column && second.column) ? first.column - second.column : 1; });\n            actions.push(new contextmenu_1.ContextSubMenu(nls.localize('removeBreakpoints', \"Remove Breakpoints\"), sorted.map(function (bp) { return new actions_1.Action('removeInlineBreakpoint', bp.column ? nls.localize('removeInlineBreakpointOnColumn', \"Remove Inline Breakpoint on Column {0}\", bp.column) : nls.localize('removeLineBreakpoint', \"Remove Line Breakpoint\"), undefined, true, function () { return _this.debugService.removeBreakpoints(bp.getId()); }); })));\n            actions.push(new contextmenu_1.ContextSubMenu(nls.localize('editBreakpoints', \"Edit Breakpoints\"), sorted.map(function (bp) {\n                return new actions_1.Action('editBreakpoint', bp.column ? nls.localize('editInlineBreakpointOnColumn', \"Edit Inline Breakpoint on Column {0}\", bp.column) : nls.localize('editLineBrekapoint', \"Edit Line Breakpoint\"), undefined, true, function () { return Promise.resolve(_this.editor.getContribution(debug_1.EDITOR_CONTRIBUTION_ID).showBreakpointWidget(bp.lineNumber, bp.column)); });\n            })));\n            actions.push(new contextmenu_1.ContextSubMenu(nls.localize('enableDisableBreakpoints', \"Enable/Disable Breakpoints\"), sorted.map(function (bp) { return new actions_1.Action(bp.enabled ? 'disableColumnBreakpoint' : 'enableColumnBreakpoint', bp.enabled ? (bp.column ? nls.localize('disableInlineColumnBreakpoint', \"Disable Inline Breakpoint on Column {0}\", bp.column) : nls.localize('disableBreakpointOnLine', \"Disable Line Breakpoint\"))\n                : (bp.column ? nls.localize('enableBreakpoints', \"Enable Inline Breakpoint on Column {0}\", bp.column) : nls.localize('enableBreakpointOnLine', \"Enable Line Breakpoint\")), undefined, true, function () { return _this.debugService.enableOrDisableBreakpoints(!bp.enabled, bp); }); })));\n        }\n        else {\n            actions.push(new actions_1.Action('addBreakpoint', nls.localize('addBreakpoint', \"Add Breakpoint\"), undefined, true, function () { return _this.debugService.addBreakpoints(uri, [{ lineNumber: lineNumber }], \"debugEditorContextMenu\"); }));\n            actions.push(new actions_1.Action('addConditionalBreakpoint', nls.localize('addConditionalBreakpoint', \"Add Conditional Breakpoint...\"), undefined, true, function () { return Promise.resolve(_this.editor.getContribution(debug_1.EDITOR_CONTRIBUTION_ID).showBreakpointWidget(lineNumber, undefined)); }));\n            actions.push(new actions_1.Action('addLogPoint', nls.localize('addLogPoint', \"Add Logpoint...\"), undefined, true, function () { return Promise.resolve(_this.editor.getContribution(debug_1.EDITOR_CONTRIBUTION_ID).showBreakpointWidget(lineNumber, undefined, debug_1.BreakpointWidgetContext.LOG_MESSAGE)); }));\n        }\n        return actions;\n    };\n    DebugEditorContribution.prototype.registerListeners = function () {\n        var _this = this;\n        this.toDispose.push(this.editor.onMouseDown(function (e) {\n            var data = e.target.detail;\n            var model = _this.editor.getModel();\n            if (!e.target.position || !model || e.target.type !== editorBrowser_1.MouseTargetType.GUTTER_GLYPH_MARGIN || data.isAfterLines || !_this.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)) {\n                return;\n            }\n            var canSetBreakpoints = _this.debugService.getConfigurationManager().canSetBreakpointsIn(model);\n            var lineNumber = e.target.position.lineNumber;\n            var uri = model.uri;\n            if (e.event.rightButton || (browser.isMacintosh && e.event.leftButton && e.event.ctrlKey)) {\n                if (!canSetBreakpoints) {\n                    return;\n                }\n                var anchor_1 = { x: e.event.posx, y: e.event.posy };\n                var breakpoints_1 = _this.debugService.getModel().getBreakpoints({ lineNumber: lineNumber, uri: uri });\n                _this.contextMenuService.showContextMenu({\n                    getAnchor: function () { return anchor_1; },\n                    getActions: function () { return _this.getContextMenuActions(breakpoints_1, uri, lineNumber); },\n                    getActionsContext: function () { return breakpoints_1.length ? breakpoints_1[0] : undefined; }\n                });\n            }\n            else {\n                var breakpoints_2 = _this.debugService.getModel().getBreakpoints({ uri: uri, lineNumber: lineNumber });\n                if (breakpoints_2.length) {\n                    // Show the dialog if there is a potential condition to be accidently lost.\n                    // Do not show dialog on linux due to electron issue freezing the mouse #50026\n                    if (!(env.isNative && env.isLinux) && breakpoints_2.some(function (bp) { return !!bp.condition || !!bp.logMessage || !!bp.hitCondition; })) {\n                        var logPoint = breakpoints_2.every(function (bp) { return !!bp.logMessage; });\n                        var breakpointType = logPoint ? nls.localize('logPoint', \"Logpoint\") : nls.localize('breakpoint', \"Breakpoint\");\n                        var disable_1 = breakpoints_2.some(function (bp) { return bp.enabled; });\n                        var enabling = nls.localize('breakpointHasConditionDisabled', \"This {0} has a {1} that will get lost on remove. Consider enabling the {0} instead.\", breakpointType.toLowerCase(), logPoint ? nls.localize('message', \"message\") : nls.localize('condition', \"condition\"));\n                        var disabling = nls.localize('breakpointHasConditionEnabled', \"This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.\", breakpointType.toLowerCase(), logPoint ? nls.localize('message', \"message\") : nls.localize('condition', \"condition\"));\n                        _this.dialogService.show(severity_1.default.Info, disable_1 ? disabling : enabling, [\n                            nls.localize('removeLogPoint', \"Remove {0}\", breakpointType),\n                            nls.localize('disableLogPoint', \"{0} {1}\", disable_1 ? nls.localize('disable', \"Disable\") : nls.localize('enable', \"Enable\"), breakpointType),\n                            nls.localize('cancel', \"Cancel\")\n                        ], { cancelId: 2 }).then(function (choice) {\n                            if (choice === 0) {\n                                breakpoints_2.forEach(function (bp) { return _this.debugService.removeBreakpoints(bp.getId()); });\n                            }\n                            if (choice === 1) {\n                                breakpoints_2.forEach(function (bp) { return _this.debugService.enableOrDisableBreakpoints(!disable_1, bp); });\n                            }\n                        });\n                    }\n                    else {\n                        breakpoints_2.forEach(function (bp) { return _this.debugService.removeBreakpoints(bp.getId()); });\n                    }\n                }\n                else if (canSetBreakpoints) {\n                    _this.debugService.addBreakpoints(uri, [{ lineNumber: lineNumber }], \"debugEditorGutter\");\n                }\n            }\n        }));\n        this.toDispose.push(this.editor.onMouseMove(function (e) {\n            var showBreakpointHintAtLineNumber = -1;\n            var model = _this.editor.getModel();\n            if (model && e.target.position && e.target.type === editorBrowser_1.MouseTargetType.GUTTER_GLYPH_MARGIN && _this.debugService.getConfigurationManager().canSetBreakpointsIn(model) &&\n                _this.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)) {\n                var data = e.target.detail;\n                if (!data.isAfterLines) {\n                    showBreakpointHintAtLineNumber = e.target.position.lineNumber;\n                }\n            }\n            _this.ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber);\n        }));\n        this.toDispose.push(this.editor.onMouseLeave(function (e) {\n            _this.ensureBreakpointHintDecoration(-1);\n        }));\n        this.toDispose.push(this.debugService.getViewModel().onDidFocusStackFrame(function (e) { return _this.onFocusStackFrame(e.stackFrame); }));\n        // hover listeners & hover widget\n        this.toDispose.push(this.editor.onMouseDown(function (e) { return _this.onEditorMouseDown(e); }));\n        this.toDispose.push(this.editor.onMouseUp(function () { return _this.mouseDown = false; }));\n        this.toDispose.push(this.editor.onMouseMove(function (e) { return _this.onEditorMouseMove(e); }));\n        this.toDispose.push(this.editor.onMouseLeave(function (e) {\n            _this.provideNonDebugHoverScheduler.cancel();\n            var hoverDomNode = _this.hoverWidget.getDomNode();\n            if (!hoverDomNode) {\n                return;\n            }\n            var rect = hoverDomNode.getBoundingClientRect();\n            // Only hide the hover widget if the editor mouse leave event is outside the hover widget #3528\n            if (e.event.posx < rect.left || e.event.posx > rect.right || e.event.posy < rect.top || e.event.posy > rect.bottom) {\n                _this.hideHoverWidget();\n            }\n        }));\n        this.toDispose.push(this.editor.onKeyDown(function (e) { return _this.onKeyDown(e); }));\n        this.toDispose.push(this.editor.onDidChangeModelContent(function () {\n            _this.wordToLineNumbersMap = undefined;\n            _this.updateInlineValuesScheduler.schedule();\n        }));\n        this.toDispose.push(this.editor.onDidChangeModel(function () {\n            var stackFrame = _this.debugService.getViewModel().focusedStackFrame;\n            var model = _this.editor.getModel();\n            if (model) {\n                _this._applyHoverConfiguration(model, stackFrame);\n            }\n            _this.closeBreakpointWidget();\n            _this.toggleExceptionWidget();\n            _this.hideHoverWidget();\n            _this.updateConfigurationWidgetVisibility();\n            _this.wordToLineNumbersMap = undefined;\n            _this.updateInlineValueDecorations(stackFrame);\n        }));\n        this.toDispose.push(this.editor.onDidScrollChange(function () { return _this.hideHoverWidget; }));\n        this.toDispose.push(this.debugService.onDidChangeState(function (state) {\n            if (state !== debug_1.State.Stopped) {\n                _this.toggleExceptionWidget();\n            }\n        }));\n    };\n    DebugEditorContribution.prototype._applyHoverConfiguration = function (model, stackFrame) {\n        if (stackFrame && model.uri.toString() === stackFrame.source.uri.toString()) {\n            this.editor.updateOptions({\n                hover: {\n                    enabled: false\n                }\n            });\n        }\n        else {\n            var overrides = {\n                resource: model.uri,\n                overrideIdentifier: model.getLanguageIdentifier().language\n            };\n            var defaultConfiguration = this.configurationService.getValue('editor.hover', overrides);\n            this.editor.updateOptions({\n                hover: {\n                    enabled: defaultConfiguration.enabled,\n                    delay: defaultConfiguration.delay,\n                    sticky: defaultConfiguration.sticky\n                }\n            });\n        }\n    };\n    DebugEditorContribution.prototype.getId = function () {\n        return debug_1.EDITOR_CONTRIBUTION_ID;\n    };\n    DebugEditorContribution.prototype.showHover = function (range, focus) {\n        var sf = this.debugService.getViewModel().focusedStackFrame;\n        var model = this.editor.getModel();\n        if (sf && model && sf.source.uri.toString() === model.uri.toString()) {\n            return this.hoverWidget.showAt(range, focus);\n        }\n        return Promise.resolve();\n    };\n    DebugEditorContribution.prototype.marginFreeFromNonDebugDecorations = function (line) {\n        var decorations = this.editor.getLineDecorations(line);\n        if (decorations) {\n            for (var _i = 0, decorations_1 = decorations; _i < decorations_1.length; _i++) {\n                var options = decorations_1[_i].options;\n                if (options.glyphMarginClassName && options.glyphMarginClassName.indexOf('debug') === -1) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    DebugEditorContribution.prototype.ensureBreakpointHintDecoration = function (showBreakpointHintAtLineNumber) {\n        var newDecoration = [];\n        if (showBreakpointHintAtLineNumber !== -1) {\n            newDecoration.push({\n                options: DebugEditorContribution.BREAKPOINT_HELPER_DECORATION,\n                range: {\n                    startLineNumber: showBreakpointHintAtLineNumber,\n                    startColumn: 1,\n                    endLineNumber: showBreakpointHintAtLineNumber,\n                    endColumn: 1\n                }\n            });\n        }\n        this.breakpointHintDecoration = this.editor.deltaDecorations(this.breakpointHintDecoration, newDecoration);\n    };\n    DebugEditorContribution.prototype.onFocusStackFrame = function (sf) {\n        var model = this.editor.getModel();\n        if (model) {\n            this._applyHoverConfiguration(model, sf);\n            if (sf && sf.source.uri.toString() === model.uri.toString()) {\n                this.toggleExceptionWidget();\n            }\n            else {\n                this.hideHoverWidget();\n            }\n        }\n        this.updateInlineValueDecorations(sf);\n    };\n    Object.defineProperty(DebugEditorContribution.prototype, \"showHoverScheduler\", {\n        get: function () {\n            var _this = this;\n            var scheduler = new async_1.RunOnceScheduler(function () { return _this.showHover(_this.hoverRange, false); }, HOVER_DELAY);\n            this.toDispose.push(scheduler);\n            return scheduler;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugEditorContribution.prototype, \"hideHoverScheduler\", {\n        get: function () {\n            var _this = this;\n            var scheduler = new async_1.RunOnceScheduler(function () { return _this.hoverWidget.hide(); }, 2 * HOVER_DELAY);\n            this.toDispose.push(scheduler);\n            return scheduler;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugEditorContribution.prototype, \"provideNonDebugHoverScheduler\", {\n        get: function () {\n            var _this = this;\n            var scheduler = new async_1.RunOnceScheduler(function () {\n                if (_this.editor.hasModel()) {\n                    getHover_1.getHover(_this.editor.getModel(), _this.nonDebugHoverPosition, cancellation_1.CancellationToken.None);\n                }\n            }, HOVER_DELAY);\n            this.toDispose.push(scheduler);\n            return scheduler;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugEditorContribution.prototype.hideHoverWidget = function () {\n        if (!this.hideHoverScheduler.isScheduled() && this.hoverWidget.isVisible()) {\n            this.hideHoverScheduler.schedule();\n        }\n        this.showHoverScheduler.cancel();\n        this.provideNonDebugHoverScheduler.cancel();\n    };\n    // hover business\n    DebugEditorContribution.prototype.onEditorMouseDown = function (mouseEvent) {\n        this.mouseDown = true;\n        if (mouseEvent.target.type === editorBrowser_1.MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === debugHover_1.DebugHoverWidget.ID) {\n            return;\n        }\n        this.hideHoverWidget();\n    };\n    DebugEditorContribution.prototype.onEditorMouseMove = function (mouseEvent) {\n        if (this.debugService.state !== debug_1.State.Stopped) {\n            return;\n        }\n        if (this.configurationService.getValue('debug').enableAllHovers && mouseEvent.target.position) {\n            this.nonDebugHoverPosition = mouseEvent.target.position;\n            this.provideNonDebugHoverScheduler.schedule();\n        }\n        var targetType = mouseEvent.target.type;\n        var stopKey = browser.isMacintosh ? 'metaKey' : 'ctrlKey';\n        if (targetType === editorBrowser_1.MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === debugHover_1.DebugHoverWidget.ID && !mouseEvent.event[stopKey]) {\n            // mouse moved on top of debug hover widget\n            return;\n        }\n        if (targetType === editorBrowser_1.MouseTargetType.CONTENT_TEXT) {\n            if (mouseEvent.target.range && !mouseEvent.target.range.equalsRange(this.hoverRange)) {\n                this.hoverRange = mouseEvent.target.range;\n                this.showHoverScheduler.schedule();\n            }\n        }\n        else if (!this.mouseDown) {\n            // Do not hide debug hover when the mouse is pressed because it usually leads to accidental closing #64620\n            this.hideHoverWidget();\n        }\n    };\n    DebugEditorContribution.prototype.onKeyDown = function (e) {\n        var stopKey = browser.isMacintosh ? keyCodes_1.KeyCode.Meta : keyCodes_1.KeyCode.Ctrl;\n        if (e.keyCode !== stopKey) {\n            // do not hide hover when Ctrl/Meta is pressed\n            this.hideHoverWidget();\n        }\n    };\n    // end hover business\n    // breakpoint widget\n    DebugEditorContribution.prototype.showBreakpointWidget = function (lineNumber, column, context) {\n        if (this.breakpointWidget) {\n            this.breakpointWidget.dispose();\n        }\n        this.breakpointWidget = this.instantiationService.createInstance(breakpointWidget_1.BreakpointWidget, this.editor, lineNumber, context);\n        this.breakpointWidget.show({ lineNumber: lineNumber, column: 1 }, 2);\n        this.breakpointWidgetVisible.set(true);\n    };\n    DebugEditorContribution.prototype.closeBreakpointWidget = function () {\n        if (this.breakpointWidget) {\n            this.breakpointWidget.dispose();\n            this.breakpointWidget = undefined;\n            this.breakpointWidgetVisible.reset();\n            this.editor.focus();\n        }\n    };\n    // exception widget\n    DebugEditorContribution.prototype.toggleExceptionWidget = function () {\n        var _this = this;\n        // Toggles exception widget based on the state of the current editor model and debug stack frame\n        var model = this.editor.getModel();\n        var focusedSf = this.debugService.getViewModel().focusedStackFrame;\n        var callStack = focusedSf ? focusedSf.thread.getCallStack() : null;\n        if (!model || !focusedSf || !callStack || callStack.length === 0) {\n            this.closeExceptionWidget();\n            return;\n        }\n        // First call stack frame that is available is the frame where exception has been thrown\n        var exceptionSf = arrays_1.first(callStack, function (sf) { return !!(sf && sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize'); }, undefined);\n        if (!exceptionSf || exceptionSf !== focusedSf) {\n            this.closeExceptionWidget();\n            return;\n        }\n        var sameUri = exceptionSf.source.uri.toString() === model.uri.toString();\n        if (this.exceptionWidget && !sameUri) {\n            this.closeExceptionWidget();\n        }\n        else if (sameUri) {\n            focusedSf.thread.exceptionInfo.then(function (exceptionInfo) {\n                if (exceptionInfo && exceptionSf.range.startLineNumber && exceptionSf.range.startColumn) {\n                    _this.showExceptionWidget(exceptionInfo, exceptionSf.range.startLineNumber, exceptionSf.range.startColumn);\n                }\n            });\n        }\n    };\n    DebugEditorContribution.prototype.showExceptionWidget = function (exceptionInfo, lineNumber, column) {\n        if (this.exceptionWidget) {\n            this.exceptionWidget.dispose();\n        }\n        this.exceptionWidget = this.instantiationService.createInstance(exceptionWidget_1.ExceptionWidget, this.editor, exceptionInfo);\n        this.exceptionWidget.show({ lineNumber: lineNumber, column: column }, 0);\n        this.editor.revealLine(lineNumber);\n    };\n    DebugEditorContribution.prototype.closeExceptionWidget = function () {\n        if (this.exceptionWidget) {\n            this.exceptionWidget.dispose();\n            this.exceptionWidget = undefined;\n        }\n    };\n    // configuration widget\n    DebugEditorContribution.prototype.updateConfigurationWidgetVisibility = function () {\n        var _this = this;\n        var model = this.editor.getModel();\n        if (this.configurationWidget) {\n            this.configurationWidget.dispose();\n        }\n        if (model && LAUNCH_JSON_REGEX.test(model.uri.toString()) && !this.editor.getConfiguration().readOnly) {\n            this.configurationWidget = this.instantiationService.createInstance(editorWidgets_1.FloatingClickWidget, this.editor, nls.localize('addConfiguration', \"Add Configuration...\"), null);\n            this.configurationWidget.render();\n            this.toDispose.push(this.configurationWidget.onClick(function () { return _this.addLaunchConfiguration(); }));\n        }\n    };\n    DebugEditorContribution.prototype.addLaunchConfiguration = function () {\n        var _this = this;\n        /* __GDPR__\n            \"debug/addLaunchConfiguration\" : {}\n        */\n        this.telemetryService.publicLog('debug/addLaunchConfiguration');\n        var configurationsArrayPosition;\n        var model = this.editor.getModel();\n        if (!model) {\n            return Promise.resolve();\n        }\n        var depthInArray = 0;\n        var lastProperty;\n        json_1.visit(model.getValue(), {\n            onObjectProperty: function (property, offset, length) {\n                lastProperty = property;\n            },\n            onArrayBegin: function (offset, length) {\n                if (lastProperty === 'configurations' && depthInArray === 0) {\n                    configurationsArrayPosition = model.getPositionAt(offset + 1);\n                }\n                depthInArray++;\n            },\n            onArrayEnd: function () {\n                depthInArray--;\n            }\n        });\n        this.editor.focus();\n        if (!configurationsArrayPosition) {\n            return Promise.resolve();\n        }\n        var insertLine = function (position) {\n            // Check if there are more characters on a line after a \"configurations\": [, if yes enter a newline\n            if (model.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n                _this.editor.setPosition(position);\n                coreCommands_1.CoreEditingCommands.LineBreakInsert.runEditorCommand(null, _this.editor, null);\n            }\n            _this.editor.setPosition(position);\n            return _this.commandService.executeCommand('editor.action.insertLineAfter');\n        };\n        return insertLine(configurationsArrayPosition).then(function () { return _this.commandService.executeCommand('editor.action.triggerSuggest'); });\n    };\n    Object.defineProperty(DebugEditorContribution.prototype, \"removeInlineValuesScheduler\", {\n        // Inline Decorations\n        get: function () {\n            var _this = this;\n            return new async_1.RunOnceScheduler(function () { return _this.editor.removeDecorations(INLINE_VALUE_DECORATION_KEY); }, 100);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugEditorContribution.prototype, \"updateInlineValuesScheduler\", {\n        get: function () {\n            var _this = this;\n            return new async_1.RunOnceScheduler(function () { return _this.updateInlineValueDecorations(_this.debugService.getViewModel().focusedStackFrame); }, 200);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugEditorContribution.prototype.updateInlineValueDecorations = function (stackFrame) {\n        var _this = this;\n        var model = this.editor.getModel();\n        if (!this.configurationService.getValue('debug').inlineValues ||\n            !model || !stackFrame || model.uri.toString() !== stackFrame.source.uri.toString()) {\n            if (!this.removeInlineValuesScheduler.isScheduled()) {\n                this.removeInlineValuesScheduler.schedule();\n            }\n            return;\n        }\n        this.removeInlineValuesScheduler.cancel();\n        stackFrame.getMostSpecificScopes(stackFrame.range)\n            // Get all top level children in the scope chain\n            .then(function (scopes) { return Promise.all(scopes.map(function (scope) { return scope.getChildren()\n            .then(function (children) {\n            var range = new range_1.Range(0, 0, stackFrame.range.startLineNumber, stackFrame.range.startColumn);\n            if (scope.range) {\n                range = range.setStartPosition(scope.range.startLineNumber, scope.range.startColumn);\n            }\n            return _this.createInlineValueDecorationsInsideRange(children, range, model);\n        }); })).then(function (decorationsPerScope) {\n            var allDecorations = decorationsPerScope.reduce(function (previous, current) { return previous.concat(current); }, []);\n            _this.editor.setDecorations(INLINE_VALUE_DECORATION_KEY, allDecorations);\n        }); });\n    };\n    DebugEditorContribution.prototype.createInlineValueDecorationsInsideRange = function (expressions, range, model) {\n        var _this = this;\n        var nameValueMap = new Map();\n        for (var _i = 0, expressions_1 = expressions; _i < expressions_1.length; _i++) {\n            var expr = expressions_1[_i];\n            nameValueMap.set(expr.name, expr.value);\n            // Limit the size of map. Too large can have a perf impact\n            if (nameValueMap.size >= MAX_NUM_INLINE_VALUES) {\n                break;\n            }\n        }\n        var lineToNamesMap = new Map();\n        var wordToPositionsMap = this.getWordToPositionsMap();\n        // Compute unique set of names on each line\n        nameValueMap.forEach(function (value, name) {\n            var positions = wordToPositionsMap.get(name);\n            if (positions) {\n                for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n                    var position = positions_1[_i];\n                    if (range.containsPosition(position)) {\n                        if (!lineToNamesMap.has(position.lineNumber)) {\n                            lineToNamesMap.set(position.lineNumber, []);\n                        }\n                        if (lineToNamesMap.get(position.lineNumber).indexOf(name) === -1) {\n                            lineToNamesMap.get(position.lineNumber).push(name);\n                        }\n                    }\n                }\n            }\n        });\n        var decorations = [];\n        // Compute decorators for each line\n        lineToNamesMap.forEach(function (names, line) {\n            var contentText = names.sort(function (first, second) {\n                var content = model.getLineContent(line);\n                return content.indexOf(first) - content.indexOf(second);\n            }).map(function (name) { return name + \" = \" + nameValueMap.get(name); }).join(', ');\n            decorations.push(_this.createInlineValueDecoration(line, contentText));\n        });\n        return decorations;\n    };\n    DebugEditorContribution.prototype.createInlineValueDecoration = function (lineNumber, contentText) {\n        // If decoratorText is too long, trim and add ellipses. This could happen for minified files with everything on a single line\n        if (contentText.length > MAX_INLINE_DECORATOR_LENGTH) {\n            contentText = contentText.substr(0, MAX_INLINE_DECORATOR_LENGTH) + '...';\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                endLineNumber: lineNumber,\n                startColumn: uint_1.Constants.MAX_SAFE_SMALL_INTEGER,\n                endColumn: uint_1.Constants.MAX_SAFE_SMALL_INTEGER\n            },\n            renderOptions: {\n                after: {\n                    contentText: contentText,\n                    backgroundColor: 'rgba(255, 200, 0, 0.2)',\n                    margin: '10px'\n                },\n                dark: {\n                    after: {\n                        color: 'rgba(255, 255, 255, 0.5)',\n                    }\n                },\n                light: {\n                    after: {\n                        color: 'rgba(0, 0, 0, 0.5)',\n                    }\n                }\n            }\n        };\n    };\n    DebugEditorContribution.prototype.getWordToPositionsMap = function () {\n        if (!this.wordToLineNumbersMap) {\n            this.wordToLineNumbersMap = new Map();\n            var model = this.editor.getModel();\n            if (!model) {\n                return this.wordToLineNumbersMap;\n            }\n            // For every word in every line, map its ranges for fast lookup\n            for (var lineNumber = 1, len = model.getLineCount(); lineNumber <= len; ++lineNumber) {\n                var lineContent = model.getLineContent(lineNumber);\n                // If line is too long then skip the line\n                if (lineContent.length > MAX_TOKENIZATION_LINE_LEN) {\n                    continue;\n                }\n                model.forceTokenization(lineNumber);\n                var lineTokens = model.getLineTokens(lineNumber);\n                for (var tokenIndex = 0, tokenCount = lineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n                    var tokenStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    var tokenEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    var tokenType = lineTokens.getStandardTokenType(tokenIndex);\n                    var tokenStr = lineContent.substring(tokenStartOffset, tokenEndOffset);\n                    // Token is a word and not a comment\n                    if (tokenType === modes_1.StandardTokenType.Other) {\n                        wordHelper_1.DEFAULT_WORD_REGEXP.lastIndex = 0; // We assume tokens will usually map 1:1 to words if they match\n                        var wordMatch = wordHelper_1.DEFAULT_WORD_REGEXP.exec(tokenStr);\n                        if (wordMatch) {\n                            var word = wordMatch[0];\n                            if (!this.wordToLineNumbersMap.has(word)) {\n                                this.wordToLineNumbersMap.set(word, []);\n                            }\n                            this.wordToLineNumbersMap.get(word).push(new position_1.Position(lineNumber, tokenStartOffset));\n                        }\n                    }\n                }\n            }\n        }\n        return this.wordToLineNumbersMap;\n    };\n    DebugEditorContribution.prototype.dispose = function () {\n        if (this.breakpointWidget) {\n            this.breakpointWidget.dispose();\n        }\n        if (this.hoverWidget) {\n            this.hoverWidget.dispose();\n        }\n        if (this.configurationWidget) {\n            this.configurationWidget.dispose();\n        }\n        this.toDispose = lifecycle.dispose(this.toDispose);\n    };\n    DebugEditorContribution.BREAKPOINT_HELPER_DECORATION = {\n        glyphMarginClassName: 'debug-breakpoint-hint',\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n    };\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], DebugEditorContribution.prototype, \"showHoverScheduler\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], DebugEditorContribution.prototype, \"hideHoverScheduler\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], DebugEditorContribution.prototype, \"provideNonDebugHoverScheduler\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], DebugEditorContribution.prototype, \"removeInlineValuesScheduler\", null);\n    tslib_1.__decorate([\n        decorators_1.memoize\n    ], DebugEditorContribution.prototype, \"updateInlineValuesScheduler\", null);\n    DebugEditorContribution = tslib_1.__decorate([\n        tslib_1.__param(1, debug_1.IDebugService),\n        tslib_1.__param(2, contextView_1.IContextMenuService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, contextkey_1.IContextKeyService),\n        tslib_1.__param(5, commands_1.ICommandService),\n        tslib_1.__param(6, codeEditorService_1.ICodeEditorService),\n        tslib_1.__param(7, telemetry_1.ITelemetryService),\n        tslib_1.__param(8, configuration_1.IConfigurationService),\n        tslib_1.__param(9, keybinding_1.IKeybindingService),\n        tslib_1.__param(10, dialogs_1.IDialogService)\n    ], DebugEditorContribution);\n    return DebugEditorContribution;\n}());\nexports.DebugEditorContribution = DebugEditorContribution;\neditorExtensions_1.registerEditorContribution(DebugEditorContribution);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport * as lifecycle from 'vs/base/common/lifecycle';\nimport * as env from 'vs/base/common/platform';\nimport * as browser from 'vs/base/browser/browser';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { visit } from 'vs/base/common/json';\nimport severity from 'vs/base/common/severity';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { IAction, Action } from 'vs/base/common/actions';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { StandardTokenType } from 'vs/editor/common/modes';\nimport { DEFAULT_WORD_REGEXP } from 'vs/editor/common/model/wordHelper';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IDecorationOptions } from 'vs/editor/common/editorCommon';\nimport { IModelDecorationOptions, IModelDeltaDecoration, TrackedRangeStickiness, ITextModel } from 'vs/editor/common/model';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Range } from 'vs/editor/common/core/range';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { IContextKeyService, IContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { RemoveBreakpointAction } from 'vs/workbench/contrib/debug/browser/debugActions';\nimport { IDebugEditorContribution, IDebugService, State, IBreakpoint, EDITOR_CONTRIBUTION_ID, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, IStackFrame, IDebugConfiguration, IExpression, IExceptionInfo, BreakpointWidgetContext } from 'vs/workbench/contrib/debug/common/debug';\nimport { ExceptionWidget } from 'vs/workbench/contrib/debug/browser/exceptionWidget';\nimport { FloatingClickWidget } from 'vs/workbench/browser/parts/editor/editorWidgets';\nimport { Position } from 'vs/editor/common/core/position';\nimport { CoreEditingCommands } from 'vs/editor/browser/controller/coreCommands';\nimport { first } from 'vs/base/common/arrays';\nimport { IMarginData } from 'vs/editor/browser/controller/mouseTarget';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ContextSubMenu } from 'vs/base/browser/contextmenu';\nimport { memoize } from 'vs/base/common/decorators';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { getHover } from 'vs/editor/contrib/hover/getHover';\nimport { IEditorHoverOptions } from 'vs/editor/common/config/editorOptions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { BreakpointWidget } from 'vs/workbench/contrib/debug/browser/breakpointWidget';\nimport { DebugHoverWidget } from 'vs/workbench/contrib/debug/browser/debugHover';\n\nconst HOVER_DELAY = 300;\nconst LAUNCH_JSON_REGEX = /launch\\.json$/;\nconst INLINE_VALUE_DECORATION_KEY = 'inlinevaluedecoration';\nconst MAX_NUM_INLINE_VALUES = 100; // JS Global scope can have 700+ entries. We want to limit ourselves for perf reasons\nconst MAX_INLINE_DECORATOR_LENGTH = 150; // Max string length of each inline decorator when debugging. If exceeded ... is added\nconst MAX_TOKENIZATION_LINE_LEN = 500; // If line is too long, then inline values for the line are skipped\n\nexport class DebugEditorContribution implements IDebugEditorContribution {\n\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate hoverWidget: DebugHoverWidget;\n\tprivate nonDebugHoverPosition: Position;\n\tprivate hoverRange: Range;\n\tprivate mouseDown = false;\n\n\tprivate breakpointHintDecoration: string[];\n\tprivate breakpointWidget: BreakpointWidget | undefined;\n\tprivate breakpointWidgetVisible: IContextKey<boolean>;\n\tprivate wordToLineNumbersMap: Map<string, Position[]> | undefined;\n\n\tprivate exceptionWidget: ExceptionWidget | undefined;\n\n\tprivate configurationWidget: FloatingClickWidget;\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IDebugService private readonly debugService: IDebugService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t) {\n\t\tthis.breakpointHintDecoration = [];\n\t\tthis.hoverWidget = this.instantiationService.createInstance(DebugHoverWidget, this.editor);\n\t\tthis.toDispose = [];\n\t\tthis.registerListeners();\n\t\tthis.breakpointWidgetVisible = CONTEXT_BREAKPOINT_WIDGET_VISIBLE.bindTo(contextKeyService);\n\t\tthis.updateConfigurationWidgetVisibility();\n\t\tthis.codeEditorService.registerDecorationType(INLINE_VALUE_DECORATION_KEY, {});\n\t\tthis.toggleExceptionWidget();\n\t}\n\n\tprivate getContextMenuActions(breakpoints: ReadonlyArray<IBreakpoint>, uri: uri, lineNumber: number): Array<IAction | ContextSubMenu> {\n\t\tconst actions: Array<IAction | ContextSubMenu> = [];\n\t\tif (breakpoints.length === 1) {\n\t\t\tconst breakpointType = breakpoints[0].logMessage ? nls.localize('logPoint', \"Logpoint\") : nls.localize('breakpoint', \"Breakpoint\");\n\t\t\tactions.push(new RemoveBreakpointAction(RemoveBreakpointAction.ID, nls.localize('removeBreakpoint', \"Remove {0}\", breakpointType), this.debugService, this.keybindingService));\n\t\t\tactions.push(new Action(\n\t\t\t\t'workbench.debug.action.editBreakpointAction',\n\t\t\t\tnls.localize('editBreakpoint', \"Edit {0}...\", breakpointType),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => Promise.resolve(this.editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showBreakpointWidget(breakpoints[0].lineNumber, breakpoints[0].column))\n\t\t\t));\n\n\t\t\tactions.push(new Action(\n\t\t\t\t`workbench.debug.viewlet.action.toggleBreakpoint`,\n\t\t\t\tbreakpoints[0].enabled ? nls.localize('disableBreakpoint', \"Disable {0}\", breakpointType) : nls.localize('enableBreakpoint', \"Enable {0}\", breakpointType),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.debugService.enableOrDisableBreakpoints(!breakpoints[0].enabled, breakpoints[0])\n\t\t\t));\n\t\t} else if (breakpoints.length > 1) {\n\t\t\tconst sorted = breakpoints.slice().sort((first, second) => (first.column && second.column) ? first.column - second.column : 1);\n\t\t\tactions.push(new ContextSubMenu(nls.localize('removeBreakpoints', \"Remove Breakpoints\"), sorted.map(bp => new Action(\n\t\t\t\t'removeInlineBreakpoint',\n\t\t\t\tbp.column ? nls.localize('removeInlineBreakpointOnColumn', \"Remove Inline Breakpoint on Column {0}\", bp.column) : nls.localize('removeLineBreakpoint', \"Remove Line Breakpoint\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.debugService.removeBreakpoints(bp.getId())\n\t\t\t))));\n\n\t\t\tactions.push(new ContextSubMenu(nls.localize('editBreakpoints', \"Edit Breakpoints\"), sorted.map(bp =>\n\t\t\t\tnew Action('editBreakpoint',\n\t\t\t\t\tbp.column ? nls.localize('editInlineBreakpointOnColumn', \"Edit Inline Breakpoint on Column {0}\", bp.column) : nls.localize('editLineBrekapoint', \"Edit Line Breakpoint\"),\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => Promise.resolve(this.editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showBreakpointWidget(bp.lineNumber, bp.column))\n\t\t\t\t)\n\t\t\t)));\n\n\t\t\tactions.push(new ContextSubMenu(nls.localize('enableDisableBreakpoints', \"Enable/Disable Breakpoints\"), sorted.map(bp => new Action(\n\t\t\t\tbp.enabled ? 'disableColumnBreakpoint' : 'enableColumnBreakpoint',\n\t\t\t\tbp.enabled ? (bp.column ? nls.localize('disableInlineColumnBreakpoint', \"Disable Inline Breakpoint on Column {0}\", bp.column) : nls.localize('disableBreakpointOnLine', \"Disable Line Breakpoint\"))\n\t\t\t\t\t: (bp.column ? nls.localize('enableBreakpoints', \"Enable Inline Breakpoint on Column {0}\", bp.column) : nls.localize('enableBreakpointOnLine', \"Enable Line Breakpoint\")),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.debugService.enableOrDisableBreakpoints(!bp.enabled, bp)\n\t\t\t))));\n\t\t} else {\n\t\t\tactions.push(new Action(\n\t\t\t\t'addBreakpoint',\n\t\t\t\tnls.localize('addBreakpoint', \"Add Breakpoint\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => this.debugService.addBreakpoints(uri, [{ lineNumber }], `debugEditorContextMenu`)\n\t\t\t));\n\t\t\tactions.push(new Action(\n\t\t\t\t'addConditionalBreakpoint',\n\t\t\t\tnls.localize('addConditionalBreakpoint', \"Add Conditional Breakpoint...\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => Promise.resolve(this.editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showBreakpointWidget(lineNumber, undefined))\n\t\t\t));\n\t\t\tactions.push(new Action(\n\t\t\t\t'addLogPoint',\n\t\t\t\tnls.localize('addLogPoint', \"Add Logpoint...\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\t() => Promise.resolve(this.editor.getContribution<IDebugEditorContribution>(EDITOR_CONTRIBUTION_ID).showBreakpointWidget(lineNumber, undefined, BreakpointWidgetContext.LOG_MESSAGE))\n\t\t\t));\n\t\t}\n\n\t\treturn actions;\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.editor.onMouseDown((e: IEditorMouseEvent) => {\n\t\t\tconst data = e.target.detail as IMarginData;\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (!e.target.position || !model || e.target.type !== MouseTargetType.GUTTER_GLYPH_MARGIN || data.isAfterLines || !this.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst canSetBreakpoints = this.debugService.getConfigurationManager().canSetBreakpointsIn(model);\n\t\t\tconst lineNumber = e.target.position.lineNumber;\n\t\t\tconst uri = model.uri;\n\n\t\t\tif (e.event.rightButton || (browser.isMacintosh && e.event.leftButton && e.event.ctrlKey)) {\n\t\t\t\tif (!canSetBreakpoints) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst anchor = { x: e.event.posx, y: e.event.posy };\n\t\t\t\tconst breakpoints = this.debugService.getModel().getBreakpoints({ lineNumber, uri });\n\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => anchor,\n\t\t\t\t\tgetActions: () => this.getContextMenuActions(breakpoints, uri, lineNumber),\n\t\t\t\t\tgetActionsContext: () => breakpoints.length ? breakpoints[0] : undefined\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst breakpoints = this.debugService.getModel().getBreakpoints({ uri, lineNumber });\n\n\t\t\t\tif (breakpoints.length) {\n\t\t\t\t\t// Show the dialog if there is a potential condition to be accidently lost.\n\t\t\t\t\t// Do not show dialog on linux due to electron issue freezing the mouse #50026\n\t\t\t\t\tif (!(env.isNative && env.isLinux) && breakpoints.some(bp => !!bp.condition || !!bp.logMessage || !!bp.hitCondition)) {\n\t\t\t\t\t\tconst logPoint = breakpoints.every(bp => !!bp.logMessage);\n\t\t\t\t\t\tconst breakpointType = logPoint ? nls.localize('logPoint', \"Logpoint\") : nls.localize('breakpoint', \"Breakpoint\");\n\t\t\t\t\t\tconst disable = breakpoints.some(bp => bp.enabled);\n\n\t\t\t\t\t\tconst enabling = nls.localize('breakpointHasConditionDisabled',\n\t\t\t\t\t\t\t\"This {0} has a {1} that will get lost on remove. Consider enabling the {0} instead.\",\n\t\t\t\t\t\t\tbreakpointType.toLowerCase(),\n\t\t\t\t\t\t\tlogPoint ? nls.localize('message', \"message\") : nls.localize('condition', \"condition\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst disabling = nls.localize('breakpointHasConditionEnabled',\n\t\t\t\t\t\t\t\"This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.\",\n\t\t\t\t\t\t\tbreakpointType.toLowerCase(),\n\t\t\t\t\t\t\tlogPoint ? nls.localize('message', \"message\") : nls.localize('condition', \"condition\")\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.dialogService.show(severity.Info, disable ? disabling : enabling, [\n\t\t\t\t\t\t\tnls.localize('removeLogPoint', \"Remove {0}\", breakpointType),\n\t\t\t\t\t\t\tnls.localize('disableLogPoint', \"{0} {1}\", disable ? nls.localize('disable', \"Disable\") : nls.localize('enable', \"Enable\"), breakpointType),\n\t\t\t\t\t\t\tnls.localize('cancel', \"Cancel\")\n\t\t\t\t\t\t], { cancelId: 2 }).then(choice => {\n\t\t\t\t\t\t\tif (choice === 0) {\n\t\t\t\t\t\t\t\tbreakpoints.forEach(bp => this.debugService.removeBreakpoints(bp.getId()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (choice === 1) {\n\t\t\t\t\t\t\t\tbreakpoints.forEach(bp => this.debugService.enableOrDisableBreakpoints(!disable, bp));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreakpoints.forEach(bp => this.debugService.removeBreakpoints(bp.getId()));\n\t\t\t\t\t}\n\t\t\t\t} else if (canSetBreakpoints) {\n\t\t\t\t\tthis.debugService.addBreakpoints(uri, [{ lineNumber }], `debugEditorGutter`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis.toDispose.push(this.editor.onMouseMove((e: IEditorMouseEvent) => {\n\t\t\tlet showBreakpointHintAtLineNumber = -1;\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (model && e.target.position && e.target.type === MouseTargetType.GUTTER_GLYPH_MARGIN && this.debugService.getConfigurationManager().canSetBreakpointsIn(model) &&\n\t\t\t\tthis.marginFreeFromNonDebugDecorations(e.target.position.lineNumber)) {\n\t\t\t\tconst data = e.target.detail as IMarginData;\n\t\t\t\tif (!data.isAfterLines) {\n\t\t\t\t\tshowBreakpointHintAtLineNumber = e.target.position.lineNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber);\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onMouseLeave((e: IEditorMouseEvent) => {\n\t\t\tthis.ensureBreakpointHintDecoration(-1);\n\t\t}));\n\t\tthis.toDispose.push(this.debugService.getViewModel().onDidFocusStackFrame(e => this.onFocusStackFrame(e.stackFrame)));\n\n\t\t// hover listeners & hover widget\n\t\tthis.toDispose.push(this.editor.onMouseDown((e: IEditorMouseEvent) => this.onEditorMouseDown(e)));\n\t\tthis.toDispose.push(this.editor.onMouseUp(() => this.mouseDown = false));\n\t\tthis.toDispose.push(this.editor.onMouseMove((e: IEditorMouseEvent) => this.onEditorMouseMove(e)));\n\t\tthis.toDispose.push(this.editor.onMouseLeave((e: IEditorMouseEvent) => {\n\t\t\tthis.provideNonDebugHoverScheduler.cancel();\n\t\t\tconst hoverDomNode = this.hoverWidget.getDomNode();\n\t\t\tif (!hoverDomNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rect = hoverDomNode.getBoundingClientRect();\n\t\t\t// Only hide the hover widget if the editor mouse leave event is outside the hover widget #3528\n\t\t\tif (e.event.posx < rect.left || e.event.posx > rect.right || e.event.posy < rect.top || e.event.posy > rect.bottom) {\n\t\t\t\tthis.hideHoverWidget();\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onKeyDown((e: IKeyboardEvent) => this.onKeyDown(e)));\n\t\tthis.toDispose.push(this.editor.onDidChangeModelContent(() => {\n\t\t\tthis.wordToLineNumbersMap = undefined;\n\t\t\tthis.updateInlineValuesScheduler.schedule();\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onDidChangeModel(() => {\n\t\t\tconst stackFrame = this.debugService.getViewModel().focusedStackFrame;\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (model) {\n\t\t\t\tthis._applyHoverConfiguration(model, stackFrame);\n\t\t\t}\n\t\t\tthis.closeBreakpointWidget();\n\t\t\tthis.toggleExceptionWidget();\n\t\t\tthis.hideHoverWidget();\n\t\t\tthis.updateConfigurationWidgetVisibility();\n\t\t\tthis.wordToLineNumbersMap = undefined;\n\t\t\tthis.updateInlineValueDecorations(stackFrame);\n\t\t}));\n\t\tthis.toDispose.push(this.editor.onDidScrollChange(() => this.hideHoverWidget));\n\t\tthis.toDispose.push(this.debugService.onDidChangeState((state: State) => {\n\t\t\tif (state !== State.Stopped) {\n\t\t\t\tthis.toggleExceptionWidget();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _applyHoverConfiguration(model: ITextModel, stackFrame: IStackFrame | undefined): void {\n\t\tif (stackFrame && model.uri.toString() === stackFrame.source.uri.toString()) {\n\t\t\tthis.editor.updateOptions({\n\t\t\t\thover: {\n\t\t\t\t\tenabled: false\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tlet overrides = {\n\t\t\t\tresource: model.uri,\n\t\t\t\toverrideIdentifier: model.getLanguageIdentifier().language\n\t\t\t};\n\t\t\tconst defaultConfiguration = this.configurationService.getValue<IEditorHoverOptions>('editor.hover', overrides);\n\t\t\tthis.editor.updateOptions({\n\t\t\t\thover: {\n\t\t\t\t\tenabled: defaultConfiguration.enabled,\n\t\t\t\t\tdelay: defaultConfiguration.delay,\n\t\t\t\t\tsticky: defaultConfiguration.sticky\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn EDITOR_CONTRIBUTION_ID;\n\t}\n\n\tpublic showHover(range: Range, focus: boolean): Promise<void> {\n\t\tconst sf = this.debugService.getViewModel().focusedStackFrame;\n\t\tconst model = this.editor.getModel();\n\t\tif (sf && model && sf.source.uri.toString() === model.uri.toString()) {\n\t\t\treturn this.hoverWidget.showAt(range, focus);\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate marginFreeFromNonDebugDecorations(line: number): boolean {\n\t\tconst decorations = this.editor.getLineDecorations(line);\n\t\tif (decorations) {\n\t\t\tfor (const { options } of decorations) {\n\t\t\t\tif (options.glyphMarginClassName && options.glyphMarginClassName.indexOf('debug') === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber: number): void {\n\t\tconst newDecoration: IModelDeltaDecoration[] = [];\n\t\tif (showBreakpointHintAtLineNumber !== -1) {\n\t\t\tnewDecoration.push({\n\t\t\t\toptions: DebugEditorContribution.BREAKPOINT_HELPER_DECORATION,\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: showBreakpointHintAtLineNumber,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: showBreakpointHintAtLineNumber,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.breakpointHintDecoration = this.editor.deltaDecorations(this.breakpointHintDecoration, newDecoration);\n\t}\n\n\tprivate onFocusStackFrame(sf: IStackFrame | undefined): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (model) {\n\t\t\tthis._applyHoverConfiguration(model, sf);\n\t\t\tif (sf && sf.source.uri.toString() === model.uri.toString()) {\n\t\t\t\tthis.toggleExceptionWidget();\n\t\t\t} else {\n\t\t\t\tthis.hideHoverWidget();\n\t\t\t}\n\t\t}\n\n\t\tthis.updateInlineValueDecorations(sf);\n\t}\n\n\t@memoize\n\tprivate get showHoverScheduler(): RunOnceScheduler {\n\t\tconst scheduler = new RunOnceScheduler(() => this.showHover(this.hoverRange, false), HOVER_DELAY);\n\t\tthis.toDispose.push(scheduler);\n\n\t\treturn scheduler;\n\t}\n\n\t@memoize\n\tprivate get hideHoverScheduler(): RunOnceScheduler {\n\t\tconst scheduler = new RunOnceScheduler(() => this.hoverWidget.hide(), 2 * HOVER_DELAY);\n\t\tthis.toDispose.push(scheduler);\n\n\t\treturn scheduler;\n\t}\n\n\t@memoize\n\tprivate get provideNonDebugHoverScheduler(): RunOnceScheduler {\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tif (this.editor.hasModel()) {\n\t\t\t\tgetHover(this.editor.getModel(), this.nonDebugHoverPosition, CancellationToken.None);\n\t\t\t}\n\t\t}, HOVER_DELAY);\n\t\tthis.toDispose.push(scheduler);\n\n\t\treturn scheduler;\n\t}\n\n\tprivate hideHoverWidget(): void {\n\t\tif (!this.hideHoverScheduler.isScheduled() && this.hoverWidget.isVisible()) {\n\t\t\tthis.hideHoverScheduler.schedule();\n\t\t}\n\t\tthis.showHoverScheduler.cancel();\n\t\tthis.provideNonDebugHoverScheduler.cancel();\n\t}\n\n\t// hover business\n\n\tprivate onEditorMouseDown(mouseEvent: IEditorMouseEvent): void {\n\t\tthis.mouseDown = true;\n\t\tif (mouseEvent.target.type === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === DebugHoverWidget.ID) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hideHoverWidget();\n\t}\n\n\tprivate onEditorMouseMove(mouseEvent: IEditorMouseEvent): void {\n\t\tif (this.debugService.state !== State.Stopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.configurationService.getValue<IDebugConfiguration>('debug').enableAllHovers && mouseEvent.target.position) {\n\t\t\tthis.nonDebugHoverPosition = mouseEvent.target.position;\n\t\t\tthis.provideNonDebugHoverScheduler.schedule();\n\t\t}\n\t\tconst targetType = mouseEvent.target.type;\n\t\tconst stopKey = browser.isMacintosh ? 'metaKey' : 'ctrlKey';\n\n\t\tif (targetType === MouseTargetType.CONTENT_WIDGET && mouseEvent.target.detail === DebugHoverWidget.ID && !(<any>mouseEvent.event)[stopKey]) {\n\t\t\t// mouse moved on top of debug hover widget\n\t\t\treturn;\n\t\t}\n\t\tif (targetType === MouseTargetType.CONTENT_TEXT) {\n\t\t\tif (mouseEvent.target.range && !mouseEvent.target.range.equalsRange(this.hoverRange)) {\n\t\t\t\tthis.hoverRange = mouseEvent.target.range;\n\t\t\t\tthis.showHoverScheduler.schedule();\n\t\t\t}\n\t\t} else if (!this.mouseDown) {\n\t\t\t// Do not hide debug hover when the mouse is pressed because it usually leads to accidental closing #64620\n\t\t\tthis.hideHoverWidget();\n\t\t}\n\t}\n\n\tprivate onKeyDown(e: IKeyboardEvent): void {\n\t\tconst stopKey = browser.isMacintosh ? KeyCode.Meta : KeyCode.Ctrl;\n\t\tif (e.keyCode !== stopKey) {\n\t\t\t// do not hide hover when Ctrl/Meta is pressed\n\t\t\tthis.hideHoverWidget();\n\t\t}\n\t}\n\n\t// end hover business\n\n\t// breakpoint widget\n\tpublic showBreakpointWidget(lineNumber: number, column: number, context?: BreakpointWidgetContext): void {\n\t\tif (this.breakpointWidget) {\n\t\t\tthis.breakpointWidget.dispose();\n\t\t}\n\n\t\tthis.breakpointWidget = this.instantiationService.createInstance(BreakpointWidget, this.editor, lineNumber, context);\n\t\tthis.breakpointWidget.show({ lineNumber, column: 1 }, 2);\n\t\tthis.breakpointWidgetVisible.set(true);\n\t}\n\n\tpublic closeBreakpointWidget(): void {\n\t\tif (this.breakpointWidget) {\n\t\t\tthis.breakpointWidget.dispose();\n\t\t\tthis.breakpointWidget = undefined;\n\t\t\tthis.breakpointWidgetVisible.reset();\n\t\t\tthis.editor.focus();\n\t\t}\n\t}\n\n\t// exception widget\n\tprivate toggleExceptionWidget(): void {\n\t\t// Toggles exception widget based on the state of the current editor model and debug stack frame\n\t\tconst model = this.editor.getModel();\n\t\tconst focusedSf = this.debugService.getViewModel().focusedStackFrame;\n\t\tconst callStack = focusedSf ? focusedSf.thread.getCallStack() : null;\n\t\tif (!model || !focusedSf || !callStack || callStack.length === 0) {\n\t\t\tthis.closeExceptionWidget();\n\t\t\treturn;\n\t\t}\n\n\t\t// First call stack frame that is available is the frame where exception has been thrown\n\t\tconst exceptionSf = first(callStack, sf => !!(sf && sf.source && sf.source.available && sf.source.presentationHint !== 'deemphasize'), undefined);\n\t\tif (!exceptionSf || exceptionSf !== focusedSf) {\n\t\t\tthis.closeExceptionWidget();\n\t\t\treturn;\n\t\t}\n\n\t\tconst sameUri = exceptionSf.source.uri.toString() === model.uri.toString();\n\t\tif (this.exceptionWidget && !sameUri) {\n\t\t\tthis.closeExceptionWidget();\n\t\t} else if (sameUri) {\n\t\t\tfocusedSf.thread.exceptionInfo.then(exceptionInfo => {\n\t\t\t\tif (exceptionInfo && exceptionSf.range.startLineNumber && exceptionSf.range.startColumn) {\n\t\t\t\t\tthis.showExceptionWidget(exceptionInfo, exceptionSf.range.startLineNumber, exceptionSf.range.startColumn);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate showExceptionWidget(exceptionInfo: IExceptionInfo, lineNumber: number, column: number): void {\n\t\tif (this.exceptionWidget) {\n\t\t\tthis.exceptionWidget.dispose();\n\t\t}\n\n\t\tthis.exceptionWidget = this.instantiationService.createInstance(ExceptionWidget, this.editor, exceptionInfo);\n\t\tthis.exceptionWidget.show({ lineNumber, column }, 0);\n\t\tthis.editor.revealLine(lineNumber);\n\t}\n\n\tprivate closeExceptionWidget(): void {\n\t\tif (this.exceptionWidget) {\n\t\t\tthis.exceptionWidget.dispose();\n\t\t\tthis.exceptionWidget = undefined;\n\t\t}\n\t}\n\n\t// configuration widget\n\tprivate updateConfigurationWidgetVisibility(): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (this.configurationWidget) {\n\t\t\tthis.configurationWidget.dispose();\n\t\t}\n\t\tif (model && LAUNCH_JSON_REGEX.test(model.uri.toString()) && !this.editor.getConfiguration().readOnly) {\n\t\t\tthis.configurationWidget = this.instantiationService.createInstance(FloatingClickWidget, this.editor, nls.localize('addConfiguration', \"Add Configuration...\"), null);\n\t\t\tthis.configurationWidget.render();\n\t\t\tthis.toDispose.push(this.configurationWidget.onClick(() => this.addLaunchConfiguration()));\n\t\t}\n\t}\n\n\tpublic addLaunchConfiguration(): Promise<any> {\n\t\t/* __GDPR__\n\t\t\t\"debug/addLaunchConfiguration\" : {}\n\t\t*/\n\t\tthis.telemetryService.publicLog('debug/addLaunchConfiguration');\n\t\tlet configurationsArrayPosition: Position | undefined;\n\t\tconst model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tlet depthInArray = 0;\n\t\tlet lastProperty: string;\n\n\t\tvisit(model.getValue(), {\n\t\t\tonObjectProperty: (property, offset, length) => {\n\t\t\t\tlastProperty = property;\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (lastProperty === 'configurations' && depthInArray === 0) {\n\t\t\t\t\tconfigurationsArrayPosition = model.getPositionAt(offset + 1);\n\t\t\t\t}\n\t\t\t\tdepthInArray++;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tdepthInArray--;\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.focus();\n\t\tif (!configurationsArrayPosition) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst insertLine = (position: Position): Promise<any> => {\n\t\t\t// Check if there are more characters on a line after a \"configurations\": [, if yes enter a newline\n\t\t\tif (model.getLineLastNonWhitespaceColumn(position.lineNumber) > position.column) {\n\t\t\t\tthis.editor.setPosition(position);\n\t\t\t\tCoreEditingCommands.LineBreakInsert.runEditorCommand(null, this.editor, null);\n\t\t\t}\n\t\t\tthis.editor.setPosition(position);\n\t\t\treturn this.commandService.executeCommand('editor.action.insertLineAfter');\n\t\t};\n\n\t\treturn insertLine(configurationsArrayPosition).then(() => this.commandService.executeCommand('editor.action.triggerSuggest'));\n\t}\n\n\tprivate static BREAKPOINT_HELPER_DECORATION: IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-hint',\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\t// Inline Decorations\n\n\t@memoize\n\tprivate get removeInlineValuesScheduler(): RunOnceScheduler {\n\t\treturn new RunOnceScheduler(\n\t\t\t() => this.editor.removeDecorations(INLINE_VALUE_DECORATION_KEY),\n\t\t\t100\n\t\t);\n\t}\n\n\t@memoize\n\tprivate get updateInlineValuesScheduler(): RunOnceScheduler {\n\t\treturn new RunOnceScheduler(\n\t\t\t() => this.updateInlineValueDecorations(this.debugService.getViewModel().focusedStackFrame),\n\t\t\t200\n\t\t);\n\t}\n\n\tprivate updateInlineValueDecorations(stackFrame: IStackFrame | undefined): void {\n\t\tconst model = this.editor.getModel();\n\t\tif (!this.configurationService.getValue<IDebugConfiguration>('debug').inlineValues ||\n\t\t\t!model || !stackFrame || model.uri.toString() !== stackFrame.source.uri.toString()) {\n\t\t\tif (!this.removeInlineValuesScheduler.isScheduled()) {\n\t\t\t\tthis.removeInlineValuesScheduler.schedule();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeInlineValuesScheduler.cancel();\n\n\t\tstackFrame.getMostSpecificScopes(stackFrame.range)\n\t\t\t// Get all top level children in the scope chain\n\t\t\t.then(scopes => Promise.all(scopes.map(scope => scope.getChildren()\n\t\t\t\t.then(children => {\n\t\t\t\t\tlet range = new Range(0, 0, stackFrame.range.startLineNumber, stackFrame.range.startColumn);\n\t\t\t\t\tif (scope.range) {\n\t\t\t\t\t\trange = range.setStartPosition(scope.range.startLineNumber, scope.range.startColumn);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.createInlineValueDecorationsInsideRange(children, range, model);\n\t\t\t\t}))).then(decorationsPerScope => {\n\t\t\t\t\tconst allDecorations = decorationsPerScope.reduce((previous, current) => previous.concat(current), []);\n\t\t\t\t\tthis.editor.setDecorations(INLINE_VALUE_DECORATION_KEY, allDecorations);\n\t\t\t\t}));\n\t}\n\n\tprivate createInlineValueDecorationsInsideRange(expressions: ReadonlyArray<IExpression>, range: Range, model: ITextModel): IDecorationOptions[] {\n\t\tconst nameValueMap = new Map<string, string>();\n\t\tfor (let expr of expressions) {\n\t\t\tnameValueMap.set(expr.name, expr.value);\n\t\t\t// Limit the size of map. Too large can have a perf impact\n\t\t\tif (nameValueMap.size >= MAX_NUM_INLINE_VALUES) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst lineToNamesMap: Map<number, string[]> = new Map<number, string[]>();\n\t\tconst wordToPositionsMap = this.getWordToPositionsMap();\n\n\t\t// Compute unique set of names on each line\n\t\tnameValueMap.forEach((value, name) => {\n\t\t\tconst positions = wordToPositionsMap.get(name);\n\t\t\tif (positions) {\n\t\t\t\tfor (let position of positions) {\n\t\t\t\t\tif (range.containsPosition(position)) {\n\t\t\t\t\t\tif (!lineToNamesMap.has(position.lineNumber)) {\n\t\t\t\t\t\t\tlineToNamesMap.set(position.lineNumber, []);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (lineToNamesMap.get(position.lineNumber)!.indexOf(name) === -1) {\n\t\t\t\t\t\t\tlineToNamesMap.get(position.lineNumber)!.push(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst decorations: IDecorationOptions[] = [];\n\t\t// Compute decorators for each line\n\t\tlineToNamesMap.forEach((names, line) => {\n\t\t\tconst contentText = names.sort((first, second) => {\n\t\t\t\tconst content = model.getLineContent(line);\n\t\t\t\treturn content.indexOf(first) - content.indexOf(second);\n\t\t\t}).map(name => `${name} = ${nameValueMap.get(name)}`).join(', ');\n\t\t\tdecorations.push(this.createInlineValueDecoration(line, contentText));\n\t\t});\n\n\t\treturn decorations;\n\t}\n\n\tprivate createInlineValueDecoration(lineNumber: number, contentText: string): IDecorationOptions {\n\t\t// If decoratorText is too long, trim and add ellipses. This could happen for minified files with everything on a single line\n\t\tif (contentText.length > MAX_INLINE_DECORATOR_LENGTH) {\n\t\t\tcontentText = contentText.substr(0, MAX_INLINE_DECORATOR_LENGTH) + '...';\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tstartColumn: Constants.MAX_SAFE_SMALL_INTEGER,\n\t\t\t\tendColumn: Constants.MAX_SAFE_SMALL_INTEGER\n\t\t\t},\n\t\t\trenderOptions: {\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText,\n\t\t\t\t\tbackgroundColor: 'rgba(255, 200, 0, 0.2)',\n\t\t\t\t\tmargin: '10px'\n\t\t\t\t},\n\t\t\t\tdark: {\n\t\t\t\t\tafter: {\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.5)',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlight: {\n\t\t\t\t\tafter: {\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate getWordToPositionsMap(): Map<string, Position[]> {\n\t\tif (!this.wordToLineNumbersMap) {\n\t\t\tthis.wordToLineNumbersMap = new Map<string, Position[]>();\n\t\t\tconst model = this.editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn this.wordToLineNumbersMap;\n\t\t\t}\n\n\t\t\t// For every word in every line, map its ranges for fast lookup\n\t\t\tfor (let lineNumber = 1, len = model.getLineCount(); lineNumber <= len; ++lineNumber) {\n\t\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\n\t\t\t\t// If line is too long then skip the line\n\t\t\t\tif (lineContent.length > MAX_TOKENIZATION_LINE_LEN) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tmodel.forceTokenization(lineNumber);\n\t\t\t\tconst lineTokens = model.getLineTokens(lineNumber);\n\t\t\t\tfor (let tokenIndex = 0, tokenCount = lineTokens.getCount(); tokenIndex < tokenCount; tokenIndex++) {\n\t\t\t\t\tconst tokenStartOffset = lineTokens.getStartOffset(tokenIndex);\n\t\t\t\t\tconst tokenEndOffset = lineTokens.getEndOffset(tokenIndex);\n\t\t\t\t\tconst tokenType = lineTokens.getStandardTokenType(tokenIndex);\n\t\t\t\t\tconst tokenStr = lineContent.substring(tokenStartOffset, tokenEndOffset);\n\n\t\t\t\t\t// Token is a word and not a comment\n\t\t\t\t\tif (tokenType === StandardTokenType.Other) {\n\t\t\t\t\t\tDEFAULT_WORD_REGEXP.lastIndex = 0; // We assume tokens will usually map 1:1 to words if they match\n\t\t\t\t\t\tconst wordMatch = DEFAULT_WORD_REGEXP.exec(tokenStr);\n\n\t\t\t\t\t\tif (wordMatch) {\n\t\t\t\t\t\t\tconst word = wordMatch[0];\n\t\t\t\t\t\t\tif (!this.wordToLineNumbersMap.has(word)) {\n\t\t\t\t\t\t\t\tthis.wordToLineNumbersMap.set(word, []);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.wordToLineNumbersMap.get(word)!.push(new Position(lineNumber, tokenStartOffset));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.wordToLineNumbersMap;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.breakpointWidget) {\n\t\t\tthis.breakpointWidget.dispose();\n\t\t}\n\t\tif (this.hoverWidget) {\n\t\t\tthis.hoverWidget.dispose();\n\t\t}\n\t\tif (this.configurationWidget) {\n\t\t\tthis.configurationWidget.dispose();\n\t\t}\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nregisterEditorContribution(DebugEditorContribution);\n"]}]}