{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/codeEditor/electron-browser/sleepResumeRepaintMinimap.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/codeEditor/electron-browser/sleepResumeRepaintMinimap.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar electron_1 = require(\"electron\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar SleepResumeRepaintMinimap = /** @class */ (function () {\n    function SleepResumeRepaintMinimap(codeEditorService) {\n        electron_1.ipcRenderer.on('vscode:osResume', function () {\n            codeEditorService.listCodeEditors().forEach(function (editor) { return editor.render(true); });\n        });\n    }\n    SleepResumeRepaintMinimap = tslib_1.__decorate([\n        tslib_1.__param(0, codeEditorService_1.ICodeEditorService)\n    ], SleepResumeRepaintMinimap);\n    return SleepResumeRepaintMinimap;\n}());\nplatform_1.Registry.as(contributions_1.Extensions.Workbench).registerWorkbenchContribution(SleepResumeRepaintMinimap, lifecycle_1.LifecyclePhase.Eventually);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/codeEditor/electron-browser/sleepResumeRepaintMinimap.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/codeEditor/electron-browser/sleepResumeRepaintMinimap.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,oEAAwE;AACxE,iEAAgE;AAChE,mEAA+I;AAC/I,qCAA8C;AAC9C,kFAAkF;AAElF;IAEC,mCACqB,iBAAqC;QAEzD,sBAAG,CAAC,EAAE,CAAC,iBAAiB,EAAE;YACzB,iBAAiB,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACJ,CAAC;IARI,yBAAyB;QAG5B,mBAAA,sCAAkB,CAAA;OAHf,yBAAyB,CAS9B;IAAD,gCAAC;CAAA,AATD,IASC;AAED,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,yBAAyB,EAAE,0BAAc,CAAC,UAAU,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { ipcRenderer as ipc } from 'electron';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\n\nclass SleepResumeRepaintMinimap implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService\n\t) {\n\t\tipc.on('vscode:osResume', () => {\n\t\t\tcodeEditorService.listCodeEditors().forEach(editor => editor.render(true));\n\t\t});\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(SleepResumeRepaintMinimap, LifecyclePhase.Eventually);\n"]}]}