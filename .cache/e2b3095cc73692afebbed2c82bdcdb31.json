{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/services/resourceConfigurationImpl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/services/resourceConfigurationImpl.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/common/event\", \"vs/base/common/lifecycle\", \"vs/editor/common/core/position\", \"vs/editor/common/services/modeService\", \"vs/editor/common/services/modelService\", \"vs/platform/configuration/common/configuration\"], function (require, exports, event_1, lifecycle_1, position_1, modeService_1, modelService_1, configuration_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let TextResourceConfigurationService = class TextResourceConfigurationService extends lifecycle_1.Disposable {\n        constructor(configurationService, modelService, modeService) {\n            super();\n            this.configurationService = configurationService;\n            this.modelService = modelService;\n            this.modeService = modeService;\n            this._onDidChangeConfiguration = this._register(new event_1.Emitter());\n            this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n            this._register(this.configurationService.onDidChangeConfiguration(e => this._onDidChangeConfiguration.fire(e)));\n        }\n        getValue(resource, arg2, arg3) {\n            if (typeof arg3 === 'string') {\n                return this._getValue(resource, position_1.Position.isIPosition(arg2) ? arg2 : null, arg3);\n            }\n            return this._getValue(resource, null, typeof arg2 === 'string' ? arg2 : undefined);\n        }\n        _getValue(resource, position, section) {\n            const language = resource ? this.getLanguage(resource, position) : undefined;\n            if (typeof section === 'undefined') {\n                return this.configurationService.getValue({ resource, overrideIdentifier: language });\n            }\n            return this.configurationService.getValue(section, { resource, overrideIdentifier: language });\n        }\n        getLanguage(resource, position) {\n            const model = this.modelService.getModel(resource);\n            if (model) {\n                return position ? this.modeService.getLanguageIdentifier(model.getLanguageIdAtPosition(position.lineNumber, position.column)).language : model.getLanguageIdentifier().language;\n            }\n            return this.modeService.getModeIdByFilepathOrFirstLine(resource.path);\n        }\n    };\n    TextResourceConfigurationService = __decorate([\n        __param(0, configuration_1.IConfigurationService),\n        __param(1, modelService_1.IModelService),\n        __param(2, modeService_1.IModeService)\n    ], TextResourceConfigurationService);\n    exports.TextResourceConfigurationService = TextResourceConfigurationService;\n});\n",null]}