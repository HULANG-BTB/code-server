{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/supports/onEnter.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/supports/onEnter.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"vs/base/common/errors\");\nvar strings = require(\"vs/base/common/strings\");\nvar languageConfiguration_1 = require(\"vs/editor/common/modes/languageConfiguration\");\nvar OnEnterSupport = /** @class */ (function () {\n    function OnEnterSupport(opts) {\n        var _this = this;\n        opts = opts || {};\n        opts.brackets = opts.brackets || [\n            ['(', ')'],\n            ['{', '}'],\n            ['[', ']']\n        ];\n        this._brackets = [];\n        opts.brackets.forEach(function (bracket) {\n            var openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n            var closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n            if (openRegExp && closeRegExp) {\n                _this._brackets.push({\n                    open: bracket[0],\n                    openRegExp: openRegExp,\n                    close: bracket[1],\n                    closeRegExp: closeRegExp,\n                });\n            }\n        });\n        this._regExpRules = opts.regExpRules || [];\n    }\n    OnEnterSupport.prototype.onEnter = function (oneLineAboveText, beforeEnterText, afterEnterText) {\n        // (1): `regExpRules`\n        for (var i = 0, len = this._regExpRules.length; i < len; i++) {\n            var rule = this._regExpRules[i];\n            var regResult = [{\n                    reg: rule.beforeText,\n                    text: beforeEnterText\n                }, {\n                    reg: rule.afterText,\n                    text: afterEnterText\n                }, {\n                    reg: rule.oneLineAboveText,\n                    text: oneLineAboveText\n                }].every(function (obj) {\n                return obj.reg ? obj.reg.test(obj.text) : true;\n            });\n            if (regResult) {\n                return rule.action;\n            }\n        }\n        // (2): Special indent-outdent\n        if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n            for (var i = 0, len = this._brackets.length; i < len; i++) {\n                var bracket = this._brackets[i];\n                if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n                    return { indentAction: languageConfiguration_1.IndentAction.IndentOutdent };\n                }\n            }\n        }\n        // (4): Open bracket based logic\n        if (beforeEnterText.length > 0) {\n            for (var i = 0, len = this._brackets.length; i < len; i++) {\n                var bracket = this._brackets[i];\n                if (bracket.openRegExp.test(beforeEnterText)) {\n                    return { indentAction: languageConfiguration_1.IndentAction.Indent };\n                }\n            }\n        }\n        return null;\n    };\n    OnEnterSupport._createOpenBracketRegExp = function (bracket) {\n        var str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(0))) {\n            str = '\\\\b' + str;\n        }\n        str += '\\\\s*$';\n        return OnEnterSupport._safeRegExp(str);\n    };\n    OnEnterSupport._createCloseBracketRegExp = function (bracket) {\n        var str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(str.length - 1))) {\n            str = str + '\\\\b';\n        }\n        str = '^\\\\s*' + str;\n        return OnEnterSupport._safeRegExp(str);\n    };\n    OnEnterSupport._safeRegExp = function (def) {\n        try {\n            return new RegExp(def);\n        }\n        catch (err) {\n            errors_1.onUnexpectedError(err);\n            return null;\n        }\n    };\n    return OnEnterSupport;\n}());\nexports.OnEnterSupport = OnEnterSupport;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/supports/onEnter.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/modes/supports/onEnter.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport { CharacterPair, EnterAction, IndentAction, OnEnterRule } from 'vs/editor/common/modes/languageConfiguration';\n\nexport interface IOnEnterSupportOptions {\n\tbrackets?: CharacterPair[];\n\tregExpRules?: OnEnterRule[];\n}\n\ninterface IProcessedBracketPair {\n\topen: string;\n\tclose: string;\n\topenRegExp: RegExp;\n\tcloseRegExp: RegExp;\n}\n\nexport class OnEnterSupport {\n\n\tprivate readonly _brackets: IProcessedBracketPair[];\n\tprivate readonly _regExpRules: OnEnterRule[];\n\n\tconstructor(opts?: IOnEnterSupportOptions) {\n\t\topts = opts || {};\n\t\topts.brackets = opts.brackets || [\n\t\t\t['(', ')'],\n\t\t\t['{', '}'],\n\t\t\t['[', ']']\n\t\t];\n\n\t\tthis._brackets = [];\n\t\topts.brackets.forEach((bracket) => {\n\t\t\tconst openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n\t\t\tconst closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n\t\t\tif (openRegExp && closeRegExp) {\n\t\t\t\tthis._brackets.push({\n\t\t\t\t\topen: bracket[0],\n\t\t\t\t\topenRegExp: openRegExp,\n\t\t\t\t\tclose: bracket[1],\n\t\t\t\t\tcloseRegExp: closeRegExp,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._regExpRules = opts.regExpRules || [];\n\t}\n\n\tpublic onEnter(oneLineAboveText: string, beforeEnterText: string, afterEnterText: string): EnterAction | null {\n\t\t// (1): `regExpRules`\n\t\tfor (let i = 0, len = this._regExpRules.length; i < len; i++) {\n\t\t\tlet rule = this._regExpRules[i];\n\t\t\tconst regResult = [{\n\t\t\t\treg: rule.beforeText,\n\t\t\t\ttext: beforeEnterText\n\t\t\t}, {\n\t\t\t\treg: rule.afterText,\n\t\t\t\ttext: afterEnterText\n\t\t\t}, {\n\t\t\t\treg: rule.oneLineAboveText,\n\t\t\t\ttext: oneLineAboveText\n\t\t\t}].every((obj): boolean => {\n\t\t\t\treturn obj.reg ? obj.reg.test(obj.text) : true;\n\t\t\t});\n\n\t\t\tif (regResult) {\n\t\t\t\treturn rule.action;\n\t\t\t}\n\t\t}\n\n\n\t\t// (2): Special indent-outdent\n\t\tif (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n\t\t\t\t\treturn { indentAction: IndentAction.IndentOutdent };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// (4): Open bracket based logic\n\t\tif (beforeEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText)) {\n\t\t\t\t\treturn { indentAction: IndentAction.Indent };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _createOpenBracketRegExp(bracket: string): RegExp | null {\n\t\tlet str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(0))) {\n\t\t\tstr = '\\\\b' + str;\n\t\t}\n\t\tstr += '\\\\s*$';\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _createCloseBracketRegExp(bracket: string): RegExp | null {\n\t\tlet str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(str.length - 1))) {\n\t\t\tstr = str + '\\\\b';\n\t\t}\n\t\tstr = '^\\\\s*' + str;\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _safeRegExp(def: string): RegExp | null {\n\t\ttry {\n\t\t\treturn new RegExp(def);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n"]}]}