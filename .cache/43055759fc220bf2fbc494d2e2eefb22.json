{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/common/panel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/panel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nexports.ActivePanelContext = new contextkey_1.RawContextKey('activePanel', '');\nexports.PanelFocusContext = new contextkey_1.RawContextKey('panelFocus', false);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/common/panel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/common/panel.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,uEAAyE;AAE5D,QAAA,kBAAkB,GAAG,IAAI,0BAAa,CAAS,aAAa,EAAE,EAAE,CAAC,CAAC;AAClE,QAAA,iBAAiB,GAAG,IAAI,0BAAa,CAAU,YAAY,EAAE,KAAK,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IComposite } from 'vs/workbench/common/composite';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const ActivePanelContext = new RawContextKey<string>('activePanel', '');\nexport const PanelFocusContext = new RawContextKey<boolean>('panelFocus', false);\n\nexport interface IPanel extends IComposite { }\n"]}]}