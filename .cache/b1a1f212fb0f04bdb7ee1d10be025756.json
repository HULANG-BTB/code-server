{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxNative.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxNative.ts","mtime":1555846338028},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar dom = require(\"vs/base/browser/dom\");\nvar arrays = require(\"vs/base/common/arrays\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar SelectBoxNative = /** @class */ (function () {\n    function SelectBoxNative(options, selected, styles, selectBoxOptions) {\n        this.toDispose = [];\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        this.options = [];\n        this.selectElement = document.createElement('select');\n        this.selectElement.className = 'monaco-select-box';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        this._onDidSelect = new event_1.Emitter();\n        this.toDispose.push(this._onDidSelect);\n        this.styles = styles;\n        this.registerListeners();\n        this.setOptions(options, selected);\n    }\n    SelectBoxNative.prototype.registerListeners = function () {\n        var _this = this;\n        this.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'change', function (e) {\n            _this.selectElement.title = e.target.value;\n            _this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n        }));\n        this.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'keydown', function (e) {\n            var showSelect = false;\n            if (browser_1.isMacintosh) {\n                if (e.keyCode === keyCodes_1.KeyCode.DownArrow || e.keyCode === keyCodes_1.KeyCode.UpArrow || e.keyCode === keyCodes_1.KeyCode.Space) {\n                    showSelect = true;\n                }\n            }\n            else {\n                if (e.keyCode === keyCodes_1.KeyCode.DownArrow && e.altKey || e.keyCode === keyCodes_1.KeyCode.Space || e.keyCode === keyCodes_1.KeyCode.Enter) {\n                    showSelect = true;\n                }\n            }\n            if (showSelect) {\n                // Space, Enter, is used to expand select box, do not propagate it (prevent action bar action run)\n                e.stopPropagation();\n            }\n        }));\n    };\n    Object.defineProperty(SelectBoxNative.prototype, \"onDidSelect\", {\n        get: function () {\n            return this._onDidSelect.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectBoxNative.prototype.setOptions = function (options, selected) {\n        var _this = this;\n        if (!this.options || !arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this.options.forEach(function (option, index) {\n                _this.selectElement.add(_this.createOption(option.text, index, option.isDisabled));\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n        }\n    };\n    SelectBoxNative.prototype.select = function (index) {\n        if (this.options.length === 0) {\n            this.selected = 0;\n        }\n        else if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n        if ((this.selected < this.options.length) && typeof this.options[this.selected].text === 'string') {\n            this.selectElement.title = this.options[this.selected].text;\n        }\n        else {\n            this.selectElement.title = '';\n        }\n    };\n    SelectBoxNative.prototype.setAriaLabel = function (label) {\n        this.selectBoxOptions.ariaLabel = label;\n        this.selectElement.setAttribute('aria-label', label);\n    };\n    SelectBoxNative.prototype.focus = function () {\n        if (this.selectElement) {\n            this.selectElement.focus();\n        }\n    };\n    SelectBoxNative.prototype.blur = function () {\n        if (this.selectElement) {\n            this.selectElement.blur();\n        }\n    };\n    SelectBoxNative.prototype.render = function (container) {\n        dom.addClass(container, 'select-container');\n        container.appendChild(this.selectElement);\n        this.setOptions(this.options, this.selected);\n        this.applyStyles();\n    };\n    SelectBoxNative.prototype.style = function (styles) {\n        this.styles = styles;\n        this.applyStyles();\n    };\n    SelectBoxNative.prototype.applyStyles = function () {\n        // Style native select\n        if (this.selectElement) {\n            var background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n            var foreground = this.styles.selectForeground ? this.styles.selectForeground.toString() : null;\n            var border = this.styles.selectBorder ? this.styles.selectBorder.toString() : null;\n            this.selectElement.style.backgroundColor = background;\n            this.selectElement.style.color = foreground;\n            this.selectElement.style.borderColor = border;\n        }\n    };\n    SelectBoxNative.prototype.createOption = function (value, index, disabled) {\n        var option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    };\n    SelectBoxNative.prototype.dispose = function () {\n        this.toDispose = lifecycle_1.dispose(this.toDispose);\n    };\n    return SelectBoxNative;\n}());\nexports.SelectBoxNative = SelectBoxNative;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxNative.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/selectBox/selectBoxNative.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport * as dom from 'vs/base/browser/dom';\nimport * as arrays from 'vs/base/common/arrays';\nimport { ISelectBoxDelegate, ISelectOptionItem, ISelectBoxOptions, ISelectBoxStyles, ISelectData } from 'vs/base/browser/ui/selectBox/selectBox';\nimport { isMacintosh } from 'vs/base/browser/browser';\n\nexport class SelectBoxNative implements ISelectBoxDelegate {\n\n\tprivate selectElement: HTMLSelectElement;\n\tprivate selectBoxOptions: ISelectBoxOptions;\n\tprivate options: ISelectOptionItem[];\n\tprivate selected: number;\n\tprivate readonly _onDidSelect: Emitter<ISelectData>;\n\tprivate toDispose: IDisposable[];\n\tprivate styles: ISelectBoxStyles;\n\n\tconstructor(options: ISelectOptionItem[], selected: number, styles: ISelectBoxStyles, selectBoxOptions?: ISelectBoxOptions) {\n\t\tthis.toDispose = [];\n\t\tthis.selectBoxOptions = selectBoxOptions || Object.create(null);\n\n\t\tthis.options = [];\n\n\t\tthis.selectElement = document.createElement('select');\n\n\t\tthis.selectElement.className = 'monaco-select-box';\n\n\t\tif (typeof this.selectBoxOptions.ariaLabel === 'string') {\n\t\t\tthis.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n\t\t}\n\n\t\tthis._onDidSelect = new Emitter<ISelectData>();\n\t\tthis.toDispose.push(this._onDidSelect);\n\n\t\tthis.styles = styles;\n\n\t\tthis.registerListeners();\n\t\tthis.setOptions(options, selected);\n\t}\n\n\tprivate registerListeners() {\n\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n\t\t\tthis.selectElement.title = e.target.value;\n\t\t\tthis._onDidSelect.fire({\n\t\t\t\tindex: e.target.selectedIndex,\n\t\t\t\tselected: e.target.value\n\t\t\t});\n\t\t}));\n\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.selectElement, 'keydown', (e) => {\n\t\t\tlet showSelect = false;\n\n\t\t\tif (isMacintosh) {\n\t\t\t\tif (e.keyCode === KeyCode.DownArrow || e.keyCode === KeyCode.UpArrow || e.keyCode === KeyCode.Space) {\n\t\t\t\t\tshowSelect = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (e.keyCode === KeyCode.DownArrow && e.altKey || e.keyCode === KeyCode.Space || e.keyCode === KeyCode.Enter) {\n\t\t\t\t\tshowSelect = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (showSelect) {\n\t\t\t\t// Space, Enter, is used to expand select box, do not propagate it (prevent action bar action run)\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic get onDidSelect(): Event<ISelectData> {\n\t\treturn this._onDidSelect.event;\n\t}\n\n\tpublic setOptions(options: ISelectOptionItem[], selected?: number): void {\n\n\t\tif (!this.options || !arrays.equals(this.options, options)) {\n\t\t\tthis.options = options;\n\t\t\tthis.selectElement.options.length = 0;\n\n\t\t\tthis.options.forEach((option, index) => {\n\t\t\t\tthis.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n\t\t\t});\n\n\t\t}\n\n\t\tif (selected !== undefined) {\n\t\t\tthis.select(selected);\n\t\t}\n\t}\n\n\tpublic select(index: number): void {\n\t\tif (this.options.length === 0) {\n\t\t\tthis.selected = 0;\n\t\t} else if (index >= 0 && index < this.options.length) {\n\t\t\tthis.selected = index;\n\t\t} else if (index > this.options.length - 1) {\n\t\t\t// Adjust index to end of list\n\t\t\t// This could make client out of sync with the select\n\t\t\tthis.select(this.options.length - 1);\n\t\t} else if (this.selected < 0) {\n\t\t\tthis.selected = 0;\n\t\t}\n\n\t\tthis.selectElement.selectedIndex = this.selected;\n\t\tif ((this.selected < this.options.length) && typeof this.options[this.selected].text === 'string') {\n\t\t\tthis.selectElement.title = this.options[this.selected].text;\n\t\t} else {\n\t\t\tthis.selectElement.title = '';\n\t\t}\n\t}\n\n\tpublic setAriaLabel(label: string): void {\n\t\tthis.selectBoxOptions.ariaLabel = label;\n\t\tthis.selectElement.setAttribute('aria-label', label);\n\t}\n\n\tpublic focus(): void {\n\t\tif (this.selectElement) {\n\t\t\tthis.selectElement.focus();\n\t\t}\n\t}\n\n\tpublic blur(): void {\n\t\tif (this.selectElement) {\n\t\t\tthis.selectElement.blur();\n\t\t}\n\t}\n\n\tpublic render(container: HTMLElement): void {\n\t\tdom.addClass(container, 'select-container');\n\t\tcontainer.appendChild(this.selectElement);\n\t\tthis.setOptions(this.options, this.selected);\n\t\tthis.applyStyles();\n\t}\n\n\tpublic style(styles: ISelectBoxStyles): void {\n\t\tthis.styles = styles;\n\t\tthis.applyStyles();\n\t}\n\n\tpublic applyStyles(): void {\n\n\t\t// Style native select\n\t\tif (this.selectElement) {\n\t\t\tconst background = this.styles.selectBackground ? this.styles.selectBackground.toString() : null;\n\t\t\tconst foreground = this.styles.selectForeground ? this.styles.selectForeground.toString() : null;\n\t\t\tconst border = this.styles.selectBorder ? this.styles.selectBorder.toString() : null;\n\n\t\t\tthis.selectElement.style.backgroundColor = background;\n\t\t\tthis.selectElement.style.color = foreground;\n\t\t\tthis.selectElement.style.borderColor = border;\n\t\t}\n\n\t}\n\n\tprivate createOption(value: string, index: number, disabled?: boolean): HTMLOptionElement {\n\t\tconst option = document.createElement('option');\n\t\toption.value = value;\n\t\toption.text = value;\n\t\toption.disabled = !!disabled;\n\n\t\treturn option;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = dispose(this.toDispose);\n\t}\n}\n"]}]}