{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/constants.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/constants.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nexports.FindInFilesActionId = 'workbench.action.findInFiles';\nexports.FocusActiveEditorCommandId = 'search.action.focusActiveEditor';\nexports.FocusSearchFromResults = 'search.action.focusSearchFromResults';\nexports.OpenMatchToSide = 'search.action.openResultToSide';\nexports.CancelActionId = 'search.action.cancel';\nexports.RemoveActionId = 'search.action.remove';\nexports.CopyPathCommandId = 'search.action.copyPath';\nexports.CopyMatchCommandId = 'search.action.copyMatch';\nexports.CopyAllCommandId = 'search.action.copyAll';\nexports.ClearSearchHistoryCommandId = 'search.action.clearHistory';\nexports.FocusSearchListCommandID = 'search.action.focusSearchList';\nexports.ReplaceActionId = 'search.action.replace';\nexports.ReplaceAllInFileActionId = 'search.action.replaceAllInFile';\nexports.ReplaceAllInFolderActionId = 'search.action.replaceAllInFolder';\nexports.CloseReplaceWidgetActionId = 'closeReplaceInFilesWidget';\nexports.ToggleCaseSensitiveCommandId = 'toggleSearchCaseSensitive';\nexports.ToggleWholeWordCommandId = 'toggleSearchWholeWord';\nexports.ToggleRegexCommandId = 'toggleSearchRegex';\nexports.ToggleSearchViewPositionCommandId = 'search.action.toggleSearchViewPosition';\nexports.SearchViewVisibleKey = new contextkey_1.RawContextKey('searchViewletVisible', true);\nexports.SearchViewFocusedKey = new contextkey_1.RawContextKey('searchViewletFocus', false);\nexports.InputBoxFocusedKey = new contextkey_1.RawContextKey('inputBoxFocus', false);\nexports.SearchInputBoxFocusedKey = new contextkey_1.RawContextKey('searchInputBoxFocus', false);\nexports.ReplaceInputBoxFocusedKey = new contextkey_1.RawContextKey('replaceInputBoxFocus', false);\nexports.PatternIncludesFocusedKey = new contextkey_1.RawContextKey('patternIncludesInputBoxFocus', false);\nexports.PatternExcludesFocusedKey = new contextkey_1.RawContextKey('patternExcludesInputBoxFocus', false);\nexports.ReplaceActiveKey = new contextkey_1.RawContextKey('replaceActive', false);\nexports.HasSearchResults = new contextkey_1.RawContextKey('hasSearchResult', false);\nexports.FirstMatchFocusKey = new contextkey_1.RawContextKey('firstMatchFocus', false);\nexports.FileMatchOrMatchFocusKey = new contextkey_1.RawContextKey('fileMatchOrMatchFocus', false); // This is actually, Match or File or Folder\nexports.FileMatchOrFolderMatchFocusKey = new contextkey_1.RawContextKey('fileMatchOrFolderMatchFocus', false);\nexports.FileFocusKey = new contextkey_1.RawContextKey('fileMatchFocus', false);\nexports.FolderFocusKey = new contextkey_1.RawContextKey('folderMatchFocus', false);\nexports.MatchFocusKey = new contextkey_1.RawContextKey('matchFocus', false);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/constants.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/common/constants.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,uEAAyE;AAE5D,QAAA,mBAAmB,GAAG,8BAA8B,CAAC;AACrD,QAAA,0BAA0B,GAAG,iCAAiC,CAAC;AAE/D,QAAA,sBAAsB,GAAG,sCAAsC,CAAC;AAChE,QAAA,eAAe,GAAG,gCAAgC,CAAC;AACnD,QAAA,cAAc,GAAG,sBAAsB,CAAC;AACxC,QAAA,cAAc,GAAG,sBAAsB,CAAC;AACxC,QAAA,iBAAiB,GAAG,wBAAwB,CAAC;AAC7C,QAAA,kBAAkB,GAAG,yBAAyB,CAAC;AAC/C,QAAA,gBAAgB,GAAG,uBAAuB,CAAC;AAC3C,QAAA,2BAA2B,GAAG,4BAA4B,CAAC;AAC3D,QAAA,wBAAwB,GAAG,+BAA+B,CAAC;AAC3D,QAAA,eAAe,GAAG,uBAAuB,CAAC;AAC1C,QAAA,wBAAwB,GAAG,gCAAgC,CAAC;AAC5D,QAAA,0BAA0B,GAAG,kCAAkC,CAAC;AAChE,QAAA,0BAA0B,GAAG,2BAA2B,CAAC;AACzD,QAAA,4BAA4B,GAAG,2BAA2B,CAAC;AAC3D,QAAA,wBAAwB,GAAG,uBAAuB,CAAC;AACnD,QAAA,oBAAoB,GAAG,mBAAmB,CAAC;AAE3C,QAAA,iCAAiC,GAAG,wCAAwC,CAAC;AAE7E,QAAA,oBAAoB,GAAG,IAAI,0BAAa,CAAU,sBAAsB,EAAE,IAAI,CAAC,CAAC;AAChF,QAAA,oBAAoB,GAAG,IAAI,0BAAa,CAAU,oBAAoB,EAAE,KAAK,CAAC,CAAC;AAC/E,QAAA,kBAAkB,GAAG,IAAI,0BAAa,CAAU,eAAe,EAAE,KAAK,CAAC,CAAC;AACxE,QAAA,wBAAwB,GAAG,IAAI,0BAAa,CAAU,qBAAqB,EAAE,KAAK,CAAC,CAAC;AACpF,QAAA,yBAAyB,GAAG,IAAI,0BAAa,CAAU,sBAAsB,EAAE,KAAK,CAAC,CAAC;AACtF,QAAA,yBAAyB,GAAG,IAAI,0BAAa,CAAU,8BAA8B,EAAE,KAAK,CAAC,CAAC;AAC9F,QAAA,yBAAyB,GAAG,IAAI,0BAAa,CAAU,8BAA8B,EAAE,KAAK,CAAC,CAAC;AAC9F,QAAA,gBAAgB,GAAG,IAAI,0BAAa,CAAU,eAAe,EAAE,KAAK,CAAC,CAAC;AACtE,QAAA,gBAAgB,GAAG,IAAI,0BAAa,CAAU,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAExE,QAAA,kBAAkB,GAAG,IAAI,0BAAa,CAAU,iBAAiB,EAAE,KAAK,CAAC,CAAC;AAC1E,QAAA,wBAAwB,GAAG,IAAI,0BAAa,CAAU,uBAAuB,EAAE,KAAK,CAAC,CAAC,CAAC,4CAA4C;AACnI,QAAA,8BAA8B,GAAG,IAAI,0BAAa,CAAU,6BAA6B,EAAE,KAAK,CAAC,CAAC;AAClG,QAAA,YAAY,GAAG,IAAI,0BAAa,CAAU,gBAAgB,EAAE,KAAK,CAAC,CAAC;AACnE,QAAA,cAAc,GAAG,IAAI,0BAAa,CAAU,kBAAkB,EAAE,KAAK,CAAC,CAAC;AACvE,QAAA,aAAa,GAAG,IAAI,0BAAa,CAAU,YAAY,EAAE,KAAK,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\n\nexport const FindInFilesActionId = 'workbench.action.findInFiles';\nexport const FocusActiveEditorCommandId = 'search.action.focusActiveEditor';\n\nexport const FocusSearchFromResults = 'search.action.focusSearchFromResults';\nexport const OpenMatchToSide = 'search.action.openResultToSide';\nexport const CancelActionId = 'search.action.cancel';\nexport const RemoveActionId = 'search.action.remove';\nexport const CopyPathCommandId = 'search.action.copyPath';\nexport const CopyMatchCommandId = 'search.action.copyMatch';\nexport const CopyAllCommandId = 'search.action.copyAll';\nexport const ClearSearchHistoryCommandId = 'search.action.clearHistory';\nexport const FocusSearchListCommandID = 'search.action.focusSearchList';\nexport const ReplaceActionId = 'search.action.replace';\nexport const ReplaceAllInFileActionId = 'search.action.replaceAllInFile';\nexport const ReplaceAllInFolderActionId = 'search.action.replaceAllInFolder';\nexport const CloseReplaceWidgetActionId = 'closeReplaceInFilesWidget';\nexport const ToggleCaseSensitiveCommandId = 'toggleSearchCaseSensitive';\nexport const ToggleWholeWordCommandId = 'toggleSearchWholeWord';\nexport const ToggleRegexCommandId = 'toggleSearchRegex';\n\nexport const ToggleSearchViewPositionCommandId = 'search.action.toggleSearchViewPosition';\n\nexport const SearchViewVisibleKey = new RawContextKey<boolean>('searchViewletVisible', true);\nexport const SearchViewFocusedKey = new RawContextKey<boolean>('searchViewletFocus', false);\nexport const InputBoxFocusedKey = new RawContextKey<boolean>('inputBoxFocus', false);\nexport const SearchInputBoxFocusedKey = new RawContextKey<boolean>('searchInputBoxFocus', false);\nexport const ReplaceInputBoxFocusedKey = new RawContextKey<boolean>('replaceInputBoxFocus', false);\nexport const PatternIncludesFocusedKey = new RawContextKey<boolean>('patternIncludesInputBoxFocus', false);\nexport const PatternExcludesFocusedKey = new RawContextKey<boolean>('patternExcludesInputBoxFocus', false);\nexport const ReplaceActiveKey = new RawContextKey<boolean>('replaceActive', false);\nexport const HasSearchResults = new RawContextKey<boolean>('hasSearchResult', false);\n\nexport const FirstMatchFocusKey = new RawContextKey<boolean>('firstMatchFocus', false);\nexport const FileMatchOrMatchFocusKey = new RawContextKey<boolean>('fileMatchOrMatchFocus', false); // This is actually, Match or File or Folder\nexport const FileMatchOrFolderMatchFocusKey = new RawContextKey<boolean>('fileMatchOrFolderMatchFocus', false);\nexport const FileFocusKey = new RawContextKey<boolean>('fileMatchFocus', false);\nexport const FolderFocusKey = new RawContextKey<boolean>('folderMatchFocus', false);\nexport const MatchFocusKey = new RawContextKey<boolean>('matchFocus', false);\n"]}]}