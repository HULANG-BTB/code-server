{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewImpl.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewImpl.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar pointerHandler_1 = require(\"vs/editor/browser/controller/pointerHandler\");\nvar textAreaHandler_1 = require(\"vs/editor/browser/controller/textAreaHandler\");\nvar viewController_1 = require(\"vs/editor/browser/view/viewController\");\nvar viewOverlays_1 = require(\"vs/editor/browser/view/viewOverlays\");\nvar viewPart_1 = require(\"vs/editor/browser/view/viewPart\");\nvar contentWidgets_1 = require(\"vs/editor/browser/viewParts/contentWidgets/contentWidgets\");\nvar currentLineHighlight_1 = require(\"vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight\");\nvar currentLineMarginHighlight_1 = require(\"vs/editor/browser/viewParts/currentLineMarginHighlight/currentLineMarginHighlight\");\nvar decorations_1 = require(\"vs/editor/browser/viewParts/decorations/decorations\");\nvar editorScrollbar_1 = require(\"vs/editor/browser/viewParts/editorScrollbar/editorScrollbar\");\nvar glyphMargin_1 = require(\"vs/editor/browser/viewParts/glyphMargin/glyphMargin\");\nvar indentGuides_1 = require(\"vs/editor/browser/viewParts/indentGuides/indentGuides\");\nvar lineNumbers_1 = require(\"vs/editor/browser/viewParts/lineNumbers/lineNumbers\");\nvar viewLines_1 = require(\"vs/editor/browser/viewParts/lines/viewLines\");\nvar linesDecorations_1 = require(\"vs/editor/browser/viewParts/linesDecorations/linesDecorations\");\nvar margin_1 = require(\"vs/editor/browser/viewParts/margin/margin\");\nvar marginDecorations_1 = require(\"vs/editor/browser/viewParts/marginDecorations/marginDecorations\");\nvar minimap_1 = require(\"vs/editor/browser/viewParts/minimap/minimap\");\nvar overlayWidgets_1 = require(\"vs/editor/browser/viewParts/overlayWidgets/overlayWidgets\");\nvar decorationsOverviewRuler_1 = require(\"vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler\");\nvar overviewRuler_1 = require(\"vs/editor/browser/viewParts/overviewRuler/overviewRuler\");\nvar rulers_1 = require(\"vs/editor/browser/viewParts/rulers/rulers\");\nvar scrollDecoration_1 = require(\"vs/editor/browser/viewParts/scrollDecoration/scrollDecoration\");\nvar selections_1 = require(\"vs/editor/browser/viewParts/selections/selections\");\nvar viewCursors_1 = require(\"vs/editor/browser/viewParts/viewCursors/viewCursors\");\nvar viewZones_1 = require(\"vs/editor/browser/viewParts/viewZones/viewZones\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar renderingContext_1 = require(\"vs/editor/common/view/renderingContext\");\nvar viewContext_1 = require(\"vs/editor/common/view/viewContext\");\nvar viewEventDispatcher_1 = require(\"vs/editor/common/view/viewEventDispatcher\");\nvar viewEvents = require(\"vs/editor/common/view/viewEvents\");\nvar viewLinesViewportData_1 = require(\"vs/editor/common/viewLayout/viewLinesViewportData\");\nvar viewEventHandler_1 = require(\"vs/editor/common/viewModel/viewEventHandler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar invalidFunc = function () { throw new Error(\"Invalid change accessor\"); };\nvar View = /** @class */ (function (_super) {\n    tslib_1.__extends(View, _super);\n    function View(commandDelegate, configuration, themeService, model, cursor, outgoingEvents) {\n        var _this = _super.call(this) || this;\n        _this._cursor = cursor;\n        _this._renderAnimationFrame = null;\n        _this.outgoingEvents = outgoingEvents;\n        var viewController = new viewController_1.ViewController(configuration, model, _this.outgoingEvents, commandDelegate);\n        // The event dispatcher will always go through _renderOnce before dispatching any events\n        _this.eventDispatcher = new viewEventDispatcher_1.ViewEventDispatcher(function (callback) { return _this._renderOnce(callback); });\n        // Ensure the view is the first event handler in order to update the layout\n        _this.eventDispatcher.addEventHandler(_this);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        _this._context = new viewContext_1.ViewContext(configuration, themeService.getTheme(), model, _this.eventDispatcher);\n        _this._register(themeService.onThemeChange(function (theme) {\n            _this._context.theme = theme;\n            _this.eventDispatcher.emit(new viewEvents.ViewThemeChangedEvent());\n            _this.render(true, false);\n        }));\n        _this.viewParts = [];\n        // Keyboard handler\n        _this._textAreaHandler = new textAreaHandler_1.TextAreaHandler(_this._context, viewController, _this.createTextAreaHandlerHelper());\n        _this.viewParts.push(_this._textAreaHandler);\n        _this.createViewParts();\n        _this._setLayout();\n        // Pointer handler\n        _this.pointerHandler = new pointerHandler_1.PointerHandler(_this._context, viewController, _this.createPointerHandlerHelper());\n        _this._register(model.addEventListener(function (events) {\n            _this.eventDispatcher.emitMany(events);\n        }));\n        _this._register(_this._cursor.addEventListener(function (events) {\n            _this.eventDispatcher.emitMany(events);\n        }));\n        return _this;\n    }\n    View.prototype.createViewParts = function () {\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this.linesContent = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        this.linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this.linesContent.setPosition('absolute');\n        this.domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this.getEditorClassName());\n        this.overflowGuardContainer = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        viewPart_1.PartFingerprints.write(this.overflowGuardContainer, viewPart_1.PartFingerprint.OverflowGuard);\n        this.overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new editorScrollbar_1.EditorScrollbar(this._context, this.linesContent, this.domNode, this.overflowGuardContainer);\n        this.viewParts.push(this._scrollbar);\n        // View Lines\n        this.viewLines = new viewLines_1.ViewLines(this._context, this.linesContent);\n        // View Zones\n        this.viewZones = new viewZones_1.ViewZones(this._context);\n        this.viewParts.push(this.viewZones);\n        // Decorations overview ruler\n        var decorationsOverviewRuler = new decorationsOverviewRuler_1.DecorationsOverviewRuler(this._context);\n        this.viewParts.push(decorationsOverviewRuler);\n        var scrollDecoration = new scrollDecoration_1.ScrollDecorationViewPart(this._context);\n        this.viewParts.push(scrollDecoration);\n        var contentViewOverlays = new viewOverlays_1.ContentViewOverlays(this._context);\n        this.viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new currentLineHighlight_1.CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new selections_1.SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new indentGuides_1.IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new decorations_1.DecorationsOverlay(this._context));\n        var marginViewOverlays = new viewOverlays_1.MarginViewOverlays(this._context);\n        this.viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new currentLineMarginHighlight_1.CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new glyphMargin_1.GlyphMarginOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new marginDecorations_1.MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new linesDecorations_1.LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new lineNumbers_1.LineNumbersOverlay(this._context));\n        var margin = new margin_1.Margin(this._context);\n        margin.getDomNode().appendChild(this.viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        this.viewParts.push(margin);\n        // Content widgets\n        this.contentWidgets = new contentWidgets_1.ViewContentWidgets(this._context, this.domNode);\n        this.viewParts.push(this.contentWidgets);\n        this.viewCursors = new viewCursors_1.ViewCursors(this._context);\n        this.viewParts.push(this.viewCursors);\n        // Overlay widgets\n        this.overlayWidgets = new overlayWidgets_1.ViewOverlayWidgets(this._context);\n        this.viewParts.push(this.overlayWidgets);\n        var rulers = new rulers_1.Rulers(this._context);\n        this.viewParts.push(rulers);\n        var minimap = new minimap_1.Minimap(this._context);\n        this.viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            var overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this.linesContent.appendChild(contentViewOverlays.getDomNode());\n        this.linesContent.appendChild(rulers.domNode);\n        this.linesContent.appendChild(this.viewZones.domNode);\n        this.linesContent.appendChild(this.viewLines.getDomNode());\n        this.linesContent.appendChild(this.contentWidgets.domNode);\n        this.linesContent.appendChild(this.viewCursors.getDomNode());\n        this.overflowGuardContainer.appendChild(margin.getDomNode());\n        this.overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this.overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this.overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this.overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this.overflowGuardContainer.appendChild(this.overlayWidgets.getDomNode());\n        this.overflowGuardContainer.appendChild(minimap.getDomNode());\n        this.domNode.appendChild(this.overflowGuardContainer);\n        this.domNode.appendChild(this.contentWidgets.overflowingContentWidgetsDomNode);\n    };\n    View.prototype._flushAccumulatedAndRenderNow = function () {\n        this._renderNow();\n    };\n    View.prototype.createPointerHandlerHelper = function () {\n        var _this = this;\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this.linesContent.domNode,\n            focusTextArea: function () {\n                _this.focus();\n            },\n            getLastViewCursorsRenderData: function () {\n                return _this.viewCursors.getLastRenderData() || [];\n            },\n            shouldSuppressMouseDownOnViewZone: function (viewZoneId) {\n                return _this.viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: function (widgetId) {\n                return _this.contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: function (spanNode, offset) {\n                _this._flushAccumulatedAndRenderNow();\n                return _this.viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition2: function (lineNumber, column) {\n                _this._flushAccumulatedAndRenderNow();\n                return _this.viewLines.visibleRangeForPosition(new position_1.Position(lineNumber, column));\n            },\n            getLineWidth: function (lineNumber) {\n                _this._flushAccumulatedAndRenderNow();\n                return _this.viewLines.getLineWidth(lineNumber);\n            }\n        };\n    };\n    View.prototype.createTextAreaHandlerHelper = function () {\n        var _this = this;\n        return {\n            visibleRangeForPositionRelativeToEditor: function (lineNumber, column) {\n                _this._flushAccumulatedAndRenderNow();\n                return _this.viewLines.visibleRangeForPosition(new position_1.Position(lineNumber, column));\n            }\n        };\n    };\n    View.prototype._setLayout = function () {\n        var layoutInfo = this._context.configuration.editor.layoutInfo;\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this.overflowGuardContainer.setWidth(layoutInfo.width);\n        this.overflowGuardContainer.setHeight(layoutInfo.height);\n        this.linesContent.setWidth(1000000);\n        this.linesContent.setHeight(1000000);\n    };\n    View.prototype.getEditorClassName = function () {\n        var focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.editor.editorClassName + ' ' + themeService_1.getThemeTypeSelector(this._context.theme.type) + focused;\n    };\n    // --- begin event handlers\n    View.prototype.onConfigurationChanged = function (e) {\n        if (e.editorClassName) {\n            this.domNode.setClassName(this.getEditorClassName());\n        }\n        if (e.layoutInfo) {\n            this._setLayout();\n        }\n        return false;\n    };\n    View.prototype.onFocusChanged = function (e) {\n        this.domNode.setClassName(this.getEditorClassName());\n        this._context.model.setHasFocus(e.isFocused);\n        if (e.isFocused) {\n            this.outgoingEvents.emitViewFocusGained();\n        }\n        else {\n            this.outgoingEvents.emitViewFocusLost();\n        }\n        return false;\n    };\n    View.prototype.onScrollChanged = function (e) {\n        this.outgoingEvents.emitScrollChanged(e);\n        return false;\n    };\n    View.prototype.onThemeChanged = function (e) {\n        this.domNode.setClassName(this.getEditorClassName());\n        return false;\n    };\n    // --- end event handlers\n    View.prototype.dispose = function () {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this.eventDispatcher.removeEventHandler(this);\n        this.outgoingEvents.dispose();\n        this.pointerHandler.dispose();\n        this.viewLines.dispose();\n        // Destroy view parts\n        for (var i = 0, len = this.viewParts.length; i < len; i++) {\n            this.viewParts[i].dispose();\n        }\n        this.viewParts = [];\n        _super.prototype.dispose.call(this);\n    };\n    View.prototype._renderOnce = function (callback) {\n        var r = safeInvokeNoArg(callback);\n        this._scheduleRender();\n        return r;\n    };\n    View.prototype._scheduleRender = function () {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    };\n    View.prototype._onRenderScheduled = function () {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    };\n    View.prototype._renderNow = function () {\n        var _this = this;\n        safeInvokeNoArg(function () { return _this._actualRender(); });\n    };\n    View.prototype._getViewPartsToRender = function () {\n        var result = [], resultLen = 0;\n        for (var i = 0, len = this.viewParts.length; i < len; i++) {\n            var viewPart = this.viewParts[i];\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    };\n    View.prototype._actualRender = function () {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        var viewPartsToRender = this._getViewPartsToRender();\n        if (!this.viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        var partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.model.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        var viewportData = new viewLinesViewportData_1.ViewportData(this._cursor.getViewSelections(), partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.model);\n        if (this.contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this.contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this.viewLines.shouldRender()) {\n            this.viewLines.renderText(viewportData);\n            this.viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        var renderingContext = new renderingContext_1.RenderingContext(this._context.viewLayout, viewportData, this.viewLines);\n        // Render the rest of the parts\n        for (var i = 0, len = viewPartsToRender.length; i < len; i++) {\n            var viewPart = viewPartsToRender[i];\n            viewPart.prepareRender(renderingContext);\n        }\n        for (var i = 0, len = viewPartsToRender.length; i < len; i++) {\n            var viewPart = viewPartsToRender[i];\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    };\n    // --- BEGIN CodeEditor helpers\n    View.prototype.delegateVerticalScrollbarMouseDown = function (browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n    };\n    View.prototype.restoreState = function (scrollPosition) {\n        this._context.viewLayout.setScrollPositionNow({ scrollTop: scrollPosition.scrollTop });\n        this._context.model.tokenizeViewport();\n        this._renderNow();\n        this.viewLines.updateLineWidths();\n        this._context.viewLayout.setScrollPositionNow({ scrollLeft: scrollPosition.scrollLeft });\n    };\n    View.prototype.getOffsetForColumn = function (modelLineNumber, modelColumn) {\n        var modelPosition = this._context.model.validateModelPosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        var viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        var visibleRange = this.viewLines.visibleRangeForPosition(new position_1.Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    };\n    View.prototype.getTargetAtClientPoint = function (clientX, clientY) {\n        return this.pointerHandler.getTargetAtClientPoint(clientX, clientY);\n    };\n    View.prototype.createOverviewRuler = function (cssClassName) {\n        return new overviewRuler_1.OverviewRuler(this._context, cssClassName);\n    };\n    View.prototype.change = function (callback) {\n        var _this = this;\n        var zonesHaveChanged = false;\n        this._renderOnce(function () {\n            var changeAccessor = {\n                addZone: function (zone) {\n                    zonesHaveChanged = true;\n                    return _this.viewZones.addZone(zone);\n                },\n                removeZone: function (id) {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = _this.viewZones.removeZone(id) || zonesHaveChanged;\n                },\n                layoutZone: function (id) {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = _this.viewZones.layoutZone(id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n            if (zonesHaveChanged) {\n                _this._context.viewLayout.onHeightMaybeChanged();\n                _this._context.privateViewEventBus.emit(new viewEvents.ViewZonesChangedEvent());\n            }\n        });\n        return zonesHaveChanged;\n    };\n    View.prototype.render = function (now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this.viewLines.forceShouldRender();\n            for (var i = 0, len = this.viewParts.length; i < len; i++) {\n                var viewPart = this.viewParts[i];\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    };\n    View.prototype.focus = function () {\n        this._textAreaHandler.focusTextArea();\n    };\n    View.prototype.isFocused = function () {\n        return this._textAreaHandler.isFocused();\n    };\n    View.prototype.addContentWidget = function (widgetData) {\n        this.contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    };\n    View.prototype.layoutContentWidget = function (widgetData) {\n        var newPosition = widgetData.position ? widgetData.position.position : null;\n        var newRange = widgetData.position ? widgetData.position.range : null;\n        var newPreference = widgetData.position ? widgetData.position.preference : null;\n        this.contentWidgets.setWidgetPosition(widgetData.widget, newPosition, newRange, newPreference);\n        this._scheduleRender();\n    };\n    View.prototype.removeContentWidget = function (widgetData) {\n        this.contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    };\n    View.prototype.addOverlayWidget = function (widgetData) {\n        this.overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    };\n    View.prototype.layoutOverlayWidget = function (widgetData) {\n        var newPreference = widgetData.position ? widgetData.position.preference : null;\n        var shouldRender = this.overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    };\n    View.prototype.removeOverlayWidget = function (widgetData) {\n        this.overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    };\n    return View;\n}(viewEventHandler_1.ViewEventHandler));\nexports.View = View;\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        errors_1.onUnexpectedError(e);\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        errors_1.onUnexpectedError(e);\n    }\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewImpl.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/view/viewImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IPointerHandlerHelper } from 'vs/editor/browser/controller/mouseHandler';\nimport { PointerHandler } from 'vs/editor/browser/controller/pointerHandler';\nimport { ITextAreaHandlerHelper, TextAreaHandler } from 'vs/editor/browser/controller/textAreaHandler';\nimport * as editorBrowser from 'vs/editor/browser/editorBrowser';\nimport { ICommandDelegate, ViewController } from 'vs/editor/browser/view/viewController';\nimport { ViewOutgoingEvents } from 'vs/editor/browser/view/viewOutgoingEvents';\nimport { ContentViewOverlays, MarginViewOverlays } from 'vs/editor/browser/view/viewOverlays';\nimport { PartFingerprint, PartFingerprints, ViewPart } from 'vs/editor/browser/view/viewPart';\nimport { ViewContentWidgets } from 'vs/editor/browser/viewParts/contentWidgets/contentWidgets';\nimport { CurrentLineHighlightOverlay } from 'vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight';\nimport { CurrentLineMarginHighlightOverlay } from 'vs/editor/browser/viewParts/currentLineMarginHighlight/currentLineMarginHighlight';\nimport { DecorationsOverlay } from 'vs/editor/browser/viewParts/decorations/decorations';\nimport { EditorScrollbar } from 'vs/editor/browser/viewParts/editorScrollbar/editorScrollbar';\nimport { GlyphMarginOverlay } from 'vs/editor/browser/viewParts/glyphMargin/glyphMargin';\nimport { IndentGuidesOverlay } from 'vs/editor/browser/viewParts/indentGuides/indentGuides';\nimport { LineNumbersOverlay } from 'vs/editor/browser/viewParts/lineNumbers/lineNumbers';\nimport { ViewLines } from 'vs/editor/browser/viewParts/lines/viewLines';\nimport { LinesDecorationsOverlay } from 'vs/editor/browser/viewParts/linesDecorations/linesDecorations';\nimport { Margin } from 'vs/editor/browser/viewParts/margin/margin';\nimport { MarginViewLineDecorationsOverlay } from 'vs/editor/browser/viewParts/marginDecorations/marginDecorations';\nimport { Minimap } from 'vs/editor/browser/viewParts/minimap/minimap';\nimport { ViewOverlayWidgets } from 'vs/editor/browser/viewParts/overlayWidgets/overlayWidgets';\nimport { DecorationsOverviewRuler } from 'vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler';\nimport { OverviewRuler } from 'vs/editor/browser/viewParts/overviewRuler/overviewRuler';\nimport { Rulers } from 'vs/editor/browser/viewParts/rulers/rulers';\nimport { ScrollDecorationViewPart } from 'vs/editor/browser/viewParts/scrollDecoration/scrollDecoration';\nimport { SelectionsOverlay } from 'vs/editor/browser/viewParts/selections/selections';\nimport { ViewCursors } from 'vs/editor/browser/viewParts/viewCursors/viewCursors';\nimport { ViewZones } from 'vs/editor/browser/viewParts/viewZones/viewZones';\nimport { Cursor } from 'vs/editor/common/controller/cursor';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IConfiguration } from 'vs/editor/common/editorCommon';\nimport { RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport { ViewEventDispatcher } from 'vs/editor/common/view/viewEventDispatcher';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { ViewportData } from 'vs/editor/common/viewLayout/viewLinesViewportData';\nimport { ViewEventHandler } from 'vs/editor/common/viewModel/viewEventHandler';\nimport { IViewModel } from 'vs/editor/common/viewModel/viewModel';\nimport { IThemeService, getThemeTypeSelector } from 'vs/platform/theme/common/themeService';\n\nexport interface IContentWidgetData {\n\twidget: editorBrowser.IContentWidget;\n\tposition: editorBrowser.IContentWidgetPosition | null;\n}\n\nexport interface IOverlayWidgetData {\n\twidget: editorBrowser.IOverlayWidget;\n\tposition: editorBrowser.IOverlayWidgetPosition | null;\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\nexport class View extends ViewEventHandler {\n\n\tprivate readonly eventDispatcher: ViewEventDispatcher;\n\n\tprivate _scrollbar: EditorScrollbar;\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _cursor: Cursor;\n\n\t// The view lines\n\tprivate viewLines: ViewLines;\n\n\t// These are parts, but we must do some API related calls on them, so we keep a reference\n\tprivate viewZones: ViewZones;\n\tprivate contentWidgets: ViewContentWidgets;\n\tprivate overlayWidgets: ViewOverlayWidgets;\n\tprivate viewCursors: ViewCursors;\n\tprivate viewParts: ViewPart[];\n\n\tprivate readonly _textAreaHandler: TextAreaHandler;\n\tprivate readonly pointerHandler: PointerHandler;\n\n\tprivate readonly outgoingEvents: ViewOutgoingEvents;\n\n\t// Dom nodes\n\tprivate linesContent: FastDomNode<HTMLElement>;\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tprivate overflowGuardContainer: FastDomNode<HTMLElement>;\n\n\t// Actual mutable state\n\tprivate _renderAnimationFrame: IDisposable | null;\n\n\tconstructor(\n\t\tcommandDelegate: ICommandDelegate,\n\t\tconfiguration: IConfiguration,\n\t\tthemeService: IThemeService,\n\t\tmodel: IViewModel,\n\t\tcursor: Cursor,\n\t\toutgoingEvents: ViewOutgoingEvents\n\t) {\n\t\tsuper();\n\t\tthis._cursor = cursor;\n\t\tthis._renderAnimationFrame = null;\n\t\tthis.outgoingEvents = outgoingEvents;\n\n\t\tconst viewController = new ViewController(configuration, model, this.outgoingEvents, commandDelegate);\n\n\t\t// The event dispatcher will always go through _renderOnce before dispatching any events\n\t\tthis.eventDispatcher = new ViewEventDispatcher((callback: () => void) => this._renderOnce(callback));\n\n\t\t// Ensure the view is the first event handler in order to update the layout\n\t\tthis.eventDispatcher.addEventHandler(this);\n\n\t\t// The view context is passed on to most classes (basically to reduce param. counts in ctors)\n\t\tthis._context = new ViewContext(configuration, themeService.getTheme(), model, this.eventDispatcher);\n\n\t\tthis._register(themeService.onThemeChange(theme => {\n\t\t\tthis._context.theme = theme;\n\t\t\tthis.eventDispatcher.emit(new viewEvents.ViewThemeChangedEvent());\n\t\t\tthis.render(true, false);\n\t\t}));\n\n\t\tthis.viewParts = [];\n\n\t\t// Keyboard handler\n\t\tthis._textAreaHandler = new TextAreaHandler(this._context, viewController, this.createTextAreaHandlerHelper());\n\t\tthis.viewParts.push(this._textAreaHandler);\n\n\t\tthis.createViewParts();\n\t\tthis._setLayout();\n\n\t\t// Pointer handler\n\t\tthis.pointerHandler = new PointerHandler(this._context, viewController, this.createPointerHandlerHelper());\n\n\t\tthis._register(model.addEventListener((events: viewEvents.ViewEvent[]) => {\n\t\t\tthis.eventDispatcher.emitMany(events);\n\t\t}));\n\n\t\tthis._register(this._cursor.addEventListener((events: viewEvents.ViewEvent[]) => {\n\t\t\tthis.eventDispatcher.emitMany(events);\n\t\t}));\n\t}\n\n\tprivate createViewParts(): void {\n\t\t// These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n\t\tthis.linesContent = createFastDomNode(document.createElement('div'));\n\t\tthis.linesContent.setClassName('lines-content' + ' monaco-editor-background');\n\t\tthis.linesContent.setPosition('absolute');\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName(this.getEditorClassName());\n\n\t\tthis.overflowGuardContainer = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowGuardContainer, PartFingerprint.OverflowGuard);\n\t\tthis.overflowGuardContainer.setClassName('overflow-guard');\n\n\t\tthis._scrollbar = new EditorScrollbar(this._context, this.linesContent, this.domNode, this.overflowGuardContainer);\n\t\tthis.viewParts.push(this._scrollbar);\n\n\t\t// View Lines\n\t\tthis.viewLines = new ViewLines(this._context, this.linesContent);\n\n\t\t// View Zones\n\t\tthis.viewZones = new ViewZones(this._context);\n\t\tthis.viewParts.push(this.viewZones);\n\n\t\t// Decorations overview ruler\n\t\tconst decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n\t\tthis.viewParts.push(decorationsOverviewRuler);\n\n\n\t\tconst scrollDecoration = new ScrollDecorationViewPart(this._context);\n\t\tthis.viewParts.push(scrollDecoration);\n\n\t\tconst contentViewOverlays = new ContentViewOverlays(this._context);\n\t\tthis.viewParts.push(contentViewOverlays);\n\t\tcontentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n\t\tcontentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n\t\tcontentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n\t\tcontentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n\n\t\tconst marginViewOverlays = new MarginViewOverlays(this._context);\n\t\tthis.viewParts.push(marginViewOverlays);\n\t\tmarginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n\t\tmarginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context));\n\t\tmarginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n\t\tmarginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n\t\tmarginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n\n\t\tconst margin = new Margin(this._context);\n\t\tmargin.getDomNode().appendChild(this.viewZones.marginDomNode);\n\t\tmargin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n\t\tthis.viewParts.push(margin);\n\n\t\t// Content widgets\n\t\tthis.contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n\t\tthis.viewParts.push(this.contentWidgets);\n\n\t\tthis.viewCursors = new ViewCursors(this._context);\n\t\tthis.viewParts.push(this.viewCursors);\n\n\t\t// Overlay widgets\n\t\tthis.overlayWidgets = new ViewOverlayWidgets(this._context);\n\t\tthis.viewParts.push(this.overlayWidgets);\n\n\t\tconst rulers = new Rulers(this._context);\n\t\tthis.viewParts.push(rulers);\n\n\t\tconst minimap = new Minimap(this._context);\n\t\tthis.viewParts.push(minimap);\n\n\t\t// -------------- Wire dom nodes up\n\n\t\tif (decorationsOverviewRuler) {\n\t\t\tconst overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n\t\t\toverviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n\t\t}\n\n\t\tthis.linesContent.appendChild(contentViewOverlays.getDomNode());\n\t\tthis.linesContent.appendChild(rulers.domNode);\n\t\tthis.linesContent.appendChild(this.viewZones.domNode);\n\t\tthis.linesContent.appendChild(this.viewLines.getDomNode());\n\t\tthis.linesContent.appendChild(this.contentWidgets.domNode);\n\t\tthis.linesContent.appendChild(this.viewCursors.getDomNode());\n\t\tthis.overflowGuardContainer.appendChild(margin.getDomNode());\n\t\tthis.overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n\t\tthis.overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n\t\tthis.overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n\t\tthis.overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n\t\tthis.overflowGuardContainer.appendChild(this.overlayWidgets.getDomNode());\n\t\tthis.overflowGuardContainer.appendChild(minimap.getDomNode());\n\t\tthis.domNode.appendChild(this.overflowGuardContainer);\n\t\tthis.domNode.appendChild(this.contentWidgets.overflowingContentWidgetsDomNode);\n\t}\n\n\tprivate _flushAccumulatedAndRenderNow(): void {\n\t\tthis._renderNow();\n\t}\n\n\tprivate createPointerHandlerHelper(): IPointerHandlerHelper {\n\t\treturn {\n\t\t\tviewDomNode: this.domNode.domNode,\n\t\t\tlinesContentDomNode: this.linesContent.domNode,\n\n\t\t\tfocusTextArea: () => {\n\t\t\t\tthis.focus();\n\t\t\t},\n\n\t\t\tgetLastViewCursorsRenderData: () => {\n\t\t\t\treturn this.viewCursors.getLastRenderData() || [];\n\t\t\t},\n\t\t\tshouldSuppressMouseDownOnViewZone: (viewZoneId: number) => {\n\t\t\t\treturn this.viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n\t\t\t},\n\t\t\tshouldSuppressMouseDownOnWidget: (widgetId: string) => {\n\t\t\t\treturn this.contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n\t\t\t},\n\t\t\tgetPositionFromDOMInfo: (spanNode: HTMLElement, offset: number) => {\n\t\t\t\tthis._flushAccumulatedAndRenderNow();\n\t\t\t\treturn this.viewLines.getPositionFromDOMInfo(spanNode, offset);\n\t\t\t},\n\n\t\t\tvisibleRangeForPosition2: (lineNumber: number, column: number) => {\n\t\t\t\tthis._flushAccumulatedAndRenderNow();\n\t\t\t\treturn this.viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n\t\t\t},\n\n\t\t\tgetLineWidth: (lineNumber: number) => {\n\t\t\t\tthis._flushAccumulatedAndRenderNow();\n\t\t\t\treturn this.viewLines.getLineWidth(lineNumber);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate createTextAreaHandlerHelper(): ITextAreaHandlerHelper {\n\t\treturn {\n\t\t\tvisibleRangeForPositionRelativeToEditor: (lineNumber: number, column: number) => {\n\t\t\t\tthis._flushAccumulatedAndRenderNow();\n\t\t\t\treturn this.viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst layoutInfo = this._context.configuration.editor.layoutInfo;\n\t\tthis.domNode.setWidth(layoutInfo.width);\n\t\tthis.domNode.setHeight(layoutInfo.height);\n\n\t\tthis.overflowGuardContainer.setWidth(layoutInfo.width);\n\t\tthis.overflowGuardContainer.setHeight(layoutInfo.height);\n\n\t\tthis.linesContent.setWidth(1000000);\n\t\tthis.linesContent.setHeight(1000000);\n\n\t}\n\n\tprivate getEditorClassName() {\n\t\tconst focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n\t\treturn this._context.configuration.editor.editorClassName + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.editorClassName) {\n\t\t\tthis.domNode.setClassName(this.getEditorClassName());\n\t\t}\n\t\tif (e.layoutInfo) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis.domNode.setClassName(this.getEditorClassName());\n\t\tthis._context.model.setHasFocus(e.isFocused);\n\t\tif (e.isFocused) {\n\t\t\tthis.outgoingEvents.emitViewFocusGained();\n\t\t} else {\n\t\t\tthis.outgoingEvents.emitViewFocusLost();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis.outgoingEvents.emitScrollChanged(e);\n\t\treturn false;\n\t}\n\tpublic onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.domNode.setClassName(this.getEditorClassName());\n\t\treturn false;\n\t}\n\n\t// --- end event handlers\n\n\tpublic dispose(): void {\n\t\tif (this._renderAnimationFrame !== null) {\n\t\t\tthis._renderAnimationFrame.dispose();\n\t\t\tthis._renderAnimationFrame = null;\n\t\t}\n\n\t\tthis.eventDispatcher.removeEventHandler(this);\n\t\tthis.outgoingEvents.dispose();\n\n\t\tthis.pointerHandler.dispose();\n\n\t\tthis.viewLines.dispose();\n\n\t\t// Destroy view parts\n\t\tfor (let i = 0, len = this.viewParts.length; i < len; i++) {\n\t\t\tthis.viewParts[i].dispose();\n\t\t}\n\t\tthis.viewParts = [];\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate _renderOnce(callback: () => any): any {\n\t\tconst r = safeInvokeNoArg(callback);\n\t\tthis._scheduleRender();\n\t\treturn r;\n\t}\n\n\tprivate _scheduleRender(): void {\n\t\tif (this._renderAnimationFrame === null) {\n\t\t\tthis._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n\t\t}\n\t}\n\n\tprivate _onRenderScheduled(): void {\n\t\tthis._renderAnimationFrame = null;\n\t\tthis._flushAccumulatedAndRenderNow();\n\t}\n\n\tprivate _renderNow(): void {\n\t\tsafeInvokeNoArg(() => this._actualRender());\n\t}\n\n\tprivate _getViewPartsToRender(): ViewPart[] {\n\t\tlet result: ViewPart[] = [], resultLen = 0;\n\t\tfor (let i = 0, len = this.viewParts.length; i < len; i++) {\n\t\t\tconst viewPart = this.viewParts[i];\n\t\t\tif (viewPart.shouldRender()) {\n\t\t\t\tresult[resultLen++] = viewPart;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _actualRender(): void {\n\t\tif (!dom.isInDOM(this.domNode.domNode)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet viewPartsToRender = this._getViewPartsToRender();\n\n\t\tif (!this.viewLines.shouldRender() && viewPartsToRender.length === 0) {\n\t\t\t// Nothing to render\n\t\t\treturn;\n\t\t}\n\n\t\tconst partialViewportData = this._context.viewLayout.getLinesViewportData();\n\t\tthis._context.model.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n\n\t\tconst viewportData = new ViewportData(\n\t\t\tthis._cursor.getViewSelections(),\n\t\t\tpartialViewportData,\n\t\t\tthis._context.viewLayout.getWhitespaceViewportData(),\n\t\t\tthis._context.model\n\t\t);\n\n\t\tif (this.contentWidgets.shouldRender()) {\n\t\t\t// Give the content widgets a chance to set their max width before a possible synchronous layout\n\t\t\tthis.contentWidgets.onBeforeRender(viewportData);\n\t\t}\n\n\t\tif (this.viewLines.shouldRender()) {\n\t\t\tthis.viewLines.renderText(viewportData);\n\t\t\tthis.viewLines.onDidRender();\n\n\t\t\t// Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n\t\t\tviewPartsToRender = this._getViewPartsToRender();\n\t\t}\n\n\t\tconst renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this.viewLines);\n\n\t\t// Render the rest of the parts\n\t\tfor (let i = 0, len = viewPartsToRender.length; i < len; i++) {\n\t\t\tconst viewPart = viewPartsToRender[i];\n\t\t\tviewPart.prepareRender(renderingContext);\n\t\t}\n\n\t\tfor (let i = 0, len = viewPartsToRender.length; i < len; i++) {\n\t\t\tconst viewPart = viewPartsToRender[i];\n\t\t\tviewPart.render(renderingContext);\n\t\t\tviewPart.onDidRender();\n\t\t}\n\t}\n\n\t// --- BEGIN CodeEditor helpers\n\n\tpublic delegateVerticalScrollbarMouseDown(browserEvent: IMouseEvent): void {\n\t\tthis._scrollbar.delegateVerticalScrollbarMouseDown(browserEvent);\n\t}\n\n\tpublic restoreState(scrollPosition: { scrollLeft: number; scrollTop: number; }): void {\n\t\tthis._context.viewLayout.setScrollPositionNow({ scrollTop: scrollPosition.scrollTop });\n\t\tthis._context.model.tokenizeViewport();\n\t\tthis._renderNow();\n\t\tthis.viewLines.updateLineWidths();\n\t\tthis._context.viewLayout.setScrollPositionNow({ scrollLeft: scrollPosition.scrollLeft });\n\t}\n\n\tpublic getOffsetForColumn(modelLineNumber: number, modelColumn: number): number {\n\t\tconst modelPosition = this._context.model.validateModelPosition({\n\t\t\tlineNumber: modelLineNumber,\n\t\t\tcolumn: modelColumn\n\t\t});\n\t\tconst viewPosition = this._context.model.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n\t\tthis._flushAccumulatedAndRenderNow();\n\t\tconst visibleRange = this.viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n\t\tif (!visibleRange) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn visibleRange.left;\n\t}\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): editorBrowser.IMouseTarget | null {\n\t\treturn this.pointerHandler.getTargetAtClientPoint(clientX, clientY);\n\t}\n\n\tpublic createOverviewRuler(cssClassName: string): OverviewRuler {\n\t\treturn new OverviewRuler(this._context, cssClassName);\n\t}\n\n\tpublic change(callback: (changeAccessor: editorBrowser.IViewZoneChangeAccessor) => any): boolean {\n\t\tlet zonesHaveChanged = false;\n\n\t\tthis._renderOnce(() => {\n\t\t\tconst changeAccessor: editorBrowser.IViewZoneChangeAccessor = {\n\t\t\t\taddZone: (zone: editorBrowser.IViewZone): number => {\n\t\t\t\t\tzonesHaveChanged = true;\n\t\t\t\t\treturn this.viewZones.addZone(zone);\n\t\t\t\t},\n\t\t\t\tremoveZone: (id: number): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this.viewZones.removeZone(id) || zonesHaveChanged;\n\t\t\t\t},\n\t\t\t\tlayoutZone: (id: number): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this.viewZones.layoutZone(id) || zonesHaveChanged;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsafeInvoke1Arg(callback, changeAccessor);\n\n\t\t\t// Invalidate changeAccessor\n\t\t\tchangeAccessor.addZone = invalidFunc;\n\t\t\tchangeAccessor.removeZone = invalidFunc;\n\t\t\tchangeAccessor.layoutZone = invalidFunc;\n\n\t\t\tif (zonesHaveChanged) {\n\t\t\t\tthis._context.viewLayout.onHeightMaybeChanged();\n\t\t\t\tthis._context.privateViewEventBus.emit(new viewEvents.ViewZonesChangedEvent());\n\t\t\t}\n\t\t});\n\t\treturn zonesHaveChanged;\n\t}\n\n\tpublic render(now: boolean, everything: boolean): void {\n\t\tif (everything) {\n\t\t\t// Force everything to render...\n\t\t\tthis.viewLines.forceShouldRender();\n\t\t\tfor (let i = 0, len = this.viewParts.length; i < len; i++) {\n\t\t\t\tconst viewPart = this.viewParts[i];\n\t\t\t\tviewPart.forceShouldRender();\n\t\t\t}\n\t\t}\n\t\tif (now) {\n\t\t\tthis._flushAccumulatedAndRenderNow();\n\t\t} else {\n\t\t\tthis._scheduleRender();\n\t\t}\n\t}\n\n\tpublic focus(): void {\n\t\tthis._textAreaHandler.focusTextArea();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._textAreaHandler.isFocused();\n\t}\n\n\tpublic addContentWidget(widgetData: IContentWidgetData): void {\n\t\tthis.contentWidgets.addWidget(widgetData.widget);\n\t\tthis.layoutContentWidget(widgetData);\n\t\tthis._scheduleRender();\n\t}\n\n\tpublic layoutContentWidget(widgetData: IContentWidgetData): void {\n\t\tconst newPosition = widgetData.position ? widgetData.position.position : null;\n\t\tconst newRange = widgetData.position ? widgetData.position.range : null;\n\t\tconst newPreference = widgetData.position ? widgetData.position.preference : null;\n\t\tthis.contentWidgets.setWidgetPosition(widgetData.widget, newPosition, newRange, newPreference);\n\t\tthis._scheduleRender();\n\t}\n\n\tpublic removeContentWidget(widgetData: IContentWidgetData): void {\n\t\tthis.contentWidgets.removeWidget(widgetData.widget);\n\t\tthis._scheduleRender();\n\t}\n\n\tpublic addOverlayWidget(widgetData: IOverlayWidgetData): void {\n\t\tthis.overlayWidgets.addWidget(widgetData.widget);\n\t\tthis.layoutOverlayWidget(widgetData);\n\t\tthis._scheduleRender();\n\t}\n\n\tpublic layoutOverlayWidget(widgetData: IOverlayWidgetData): void {\n\t\tconst newPreference = widgetData.position ? widgetData.position.preference : null;\n\t\tconst shouldRender = this.overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n\t\tif (shouldRender) {\n\t\t\tthis._scheduleRender();\n\t\t}\n\t}\n\n\tpublic removeOverlayWidget(widgetData: IOverlayWidgetData): void {\n\t\tthis.overlayWidgets.removeWidget(widgetData.widget);\n\t\tthis._scheduleRender();\n\t}\n\n\t// --- END CodeEditor helpers\n\n}\n\nfunction safeInvokeNoArg(func: Function): any {\n\ttry {\n\t\treturn func();\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t}\n}\n\nfunction safeInvoke1Arg(func: Function, arg1: any): any {\n\ttry {\n\t\treturn func(arg1);\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t}\n}\n"]}]}