{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/search.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/search.contribution.ts","mtime":1555846338044},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar objects = require(\"vs/base/common/objects\");\nvar platform = require(\"vs/base/common/platform\");\nvar resources_1 = require(\"vs/base/common/resources\");\nrequire(\"vs/css!./media/search.contribution\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar findController_1 = require(\"vs/editor/contrib/find/findController\");\nvar findModel_1 = require(\"vs/editor/contrib/find/findModel\");\nvar nls = require(\"vs/nls\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar quickOpen_1 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar panel_1 = require(\"vs/workbench/browser/panel\");\nvar quickopen_1 = require(\"vs/workbench/browser/parts/quickopen/quickopen\");\nvar quickopen_2 = require(\"vs/workbench/browser/quickopen\");\nvar viewlet_1 = require(\"vs/workbench/browser/viewlet\");\nvar actions_3 = require(\"vs/workbench/common/actions\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar views_1 = require(\"vs/workbench/common/views\");\nvar files_2 = require(\"vs/workbench/contrib/files/browser/files\");\nvar files_3 = require(\"vs/workbench/contrib/files/common/files\");\nvar openAnythingHandler_1 = require(\"vs/workbench/contrib/search/browser/openAnythingHandler\");\nvar openSymbolHandler_1 = require(\"vs/workbench/contrib/search/browser/openSymbolHandler\");\nvar replaceContributions_1 = require(\"vs/workbench/contrib/search/browser/replaceContributions\");\nvar searchActions_1 = require(\"vs/workbench/contrib/search/browser/searchActions\");\nvar searchPanel_1 = require(\"vs/workbench/contrib/search/browser/searchPanel\");\nvar searchView_1 = require(\"vs/workbench/contrib/search/browser/searchView\");\nvar searchViewlet_1 = require(\"vs/workbench/contrib/search/browser/searchViewlet\");\nvar searchWidget_1 = require(\"vs/workbench/contrib/search/browser/searchWidget\");\nvar Constants = require(\"vs/workbench/contrib/search/common/constants\");\nvar search_1 = require(\"vs/workbench/contrib/search/common/search\");\nvar searchHistoryService_1 = require(\"vs/workbench/contrib/search/common/searchHistoryService\");\nvar searchModel_1 = require(\"vs/workbench/contrib/search/common/searchModel\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar search_2 = require(\"vs/workbench/services/search/common/search\");\nvar viewlet_2 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nextensions_1.registerSingleton(searchModel_1.ISearchWorkbenchService, searchModel_1.SearchWorkbenchService, true);\nextensions_1.registerSingleton(searchHistoryService_1.ISearchHistoryService, searchHistoryService_1.SearchHistoryService, true);\nreplaceContributions_1.registerContributions();\nsearchWidget_1.registerContributions();\nvar category = nls.localize('search', \"Search\");\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'workbench.action.search.toggleQueryDetails',\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: Constants.SearchViewVisibleKey,\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_J,\n    handler: function (accessor) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            searchView.toggleQueryDetails();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.FocusSearchFromResults,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FirstMatchFocusKey),\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow,\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            searchView.focusPreviousInputBox();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.OpenMatchToSide,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Enter,\n    mac: {\n        primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Enter\n    },\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            var tree = searchView.getControl();\n            searchView.open(tree.getFocus()[0], false, true, true);\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.CancelActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, listService_1.WorkbenchListFocusContextKey),\n    primary: keyCodes_1.KeyCode.Escape,\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            searchView.cancelSearch();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.RemoveActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n    primary: keyCodes_1.KeyCode.Delete,\n    mac: {\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Backspace,\n    },\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            var tree = searchView.getControl();\n            accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.RemoveAction, tree, tree.getFocus()[0]).run();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.ReplaceActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_1,\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            var tree = searchView.getControl();\n            accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.ReplaceAction, tree, tree.getFocus()[0], searchView).run();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.ReplaceAllInFileActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FileFocusKey),\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_1,\n    secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Enter],\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            var tree = searchView.getControl();\n            accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.ReplaceAllAction, searchView, tree.getFocus()[0]).run();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.ReplaceAllInFolderActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_1,\n    secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Enter],\n    handler: function (accessor, args) {\n        var searchView = searchActions_1.getSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService));\n        if (searchView) {\n            var tree = searchView.getControl();\n            accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.ReplaceAllInFolderAction, tree, tree.getFocus()[0]).run();\n        }\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.CloseReplaceWidgetActionId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceInputBoxFocusedKey),\n    primary: keyCodes_1.KeyCode.Escape,\n    handler: function (accessor, args) {\n        accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.CloseReplaceAction, Constants.CloseReplaceWidgetActionId, '').run();\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: searchActions_1.FocusNextInputAction.ID,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey),\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow,\n    handler: function (accessor, args) {\n        accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.FocusNextInputAction, searchActions_1.FocusNextInputAction.ID, '').run();\n    }\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: searchActions_1.FocusPreviousInputAction.ID,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey, Constants.SearchInputBoxFocusedKey.toNegated()),\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow,\n    handler: function (accessor, args) {\n        accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.FocusPreviousInputAction, searchActions_1.FocusPreviousInputAction.ID, '').run();\n    }\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.ReplaceActionId,\n        title: searchActions_1.ReplaceAction.LABEL\n    },\n    when: contextkey_1.ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n    group: 'search',\n    order: 1\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.ReplaceAllInFolderActionId,\n        title: searchActions_1.ReplaceAllInFolderAction.LABEL\n    },\n    when: contextkey_1.ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n    group: 'search',\n    order: 1\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.ReplaceAllInFileActionId,\n        title: searchActions_1.ReplaceAllAction.LABEL\n    },\n    when: contextkey_1.ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FileFocusKey),\n    group: 'search',\n    order: 1\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.RemoveActionId,\n        title: searchActions_1.RemoveAction.LABEL\n    },\n    when: Constants.FileMatchOrMatchFocusKey,\n    group: 'search',\n    order: 2\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.CopyMatchCommandId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: Constants.FileMatchOrMatchFocusKey,\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_C,\n    handler: searchActions_1.copyMatchCommand\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.CopyMatchCommandId,\n        title: nls.localize('copyMatchLabel', \"Copy\")\n    },\n    when: Constants.FileMatchOrMatchFocusKey,\n    group: 'search_2',\n    order: 1\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: Constants.CopyPathCommandId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: Constants.FileMatchOrFolderMatchFocusKey,\n    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.KEY_C,\n    win: {\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.KEY_C\n    },\n    handler: searchActions_1.copyPathCommand\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.CopyPathCommandId,\n        title: nls.localize('copyPathLabel', \"Copy Path\")\n    },\n    when: Constants.FileMatchOrFolderMatchFocusKey,\n    group: 'search_2',\n    order: 2\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: {\n        id: Constants.CopyAllCommandId,\n        title: nls.localize('copyAllLabel', \"Copy All\")\n    },\n    when: Constants.HasSearchResults,\n    group: 'search_2',\n    order: 3\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: Constants.CopyAllCommandId,\n    handler: searchActions_1.copyAllCommand\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: Constants.ClearSearchHistoryCommandId,\n    handler: searchActions_1.clearHistoryCommand\n});\nvar clearSearchHistoryLabel = nls.localize('clearSearchHistoryLabel', \"Clear Search History\");\nvar ClearSearchHistoryCommand = {\n    id: Constants.ClearSearchHistoryCommandId,\n    title: clearSearchHistoryLabel,\n    category: category\n};\nactions_2.MenuRegistry.addCommand(ClearSearchHistoryCommand);\ncommands_1.CommandsRegistry.registerCommand({\n    id: Constants.ToggleSearchViewPositionCommandId,\n    handler: function (accessor) {\n        var configurationService = accessor.get(configuration_1.IConfigurationService);\n        var currentValue = configurationService.getValue('search').location;\n        var toggleValue = currentValue === 'sidebar' ? 'panel' : 'sidebar';\n        configurationService.updateValue('search.location', toggleValue);\n    }\n});\nvar toggleSearchViewPositionLabel = nls.localize('toggleSearchViewPositionLabel', \"Toggle Search View Position\");\nvar ToggleSearchViewPositionCommand = {\n    id: Constants.ToggleSearchViewPositionCommandId,\n    title: toggleSearchViewPositionLabel,\n    category: category\n};\nactions_2.MenuRegistry.addCommand(ToggleSearchViewPositionCommand);\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.SearchContext, {\n    command: ToggleSearchViewPositionCommand,\n    when: Constants.SearchViewVisibleKey,\n    group: 'search_9',\n    order: 1\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: Constants.FocusSearchListCommandID,\n    handler: searchActions_1.focusSearchListCommand\n});\nvar focusSearchListCommandLabel = nls.localize('focusSearchListCommandLabel', \"Focus List\");\nvar FocusSearchListCommand = {\n    id: Constants.FocusSearchListCommandID,\n    title: focusSearchListCommandLabel,\n    category: category\n};\nactions_2.MenuRegistry.addCommand(FocusSearchListCommand);\nvar searchInFolderCommand = function (accessor, resource) {\n    var listService = accessor.get(listService_1.IListService);\n    var viewletService = accessor.get(viewlet_2.IViewletService);\n    var panelService = accessor.get(panelService_1.IPanelService);\n    var fileService = accessor.get(files_1.IFileService);\n    var configurationService = accessor.get(configuration_1.IConfigurationService);\n    var resources = files_2.getMultiSelectedResources(resource, listService, accessor.get(editorService_1.IEditorService));\n    return searchActions_1.openSearchView(viewletService, panelService, configurationService, true).then(function (searchView) {\n        if (resources && resources.length && searchView) {\n            return fileService.resolveFiles(resources.map(function (resource) { return ({ resource: resource }); })).then(function (results) {\n                var folders = [];\n                results.forEach(function (result) {\n                    if (result.success && result.stat) {\n                        folders.push(result.stat.isDirectory ? result.stat.resource : resources_1.dirname(result.stat.resource));\n                    }\n                });\n                searchView.searchInFolders(arrays_1.distinct(folders, function (folder) { return folder.toString(); }));\n            });\n        }\n        return undefined;\n    });\n};\nvar FIND_IN_FOLDER_ID = 'filesExplorer.findInFolder';\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: FIND_IN_FOLDER_ID,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(files_3.FilesExplorerFocusCondition, files_3.ExplorerFolderContext),\n    primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.KEY_F,\n    handler: searchInFolderCommand\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: searchActions_1.ClearSearchResultsAction.ID,\n    handler: function (accessor, args) {\n        accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.ClearSearchResultsAction, searchActions_1.ClearSearchResultsAction.ID, '').run();\n    }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: searchActions_1.RefreshAction.ID,\n    handler: function (accessor, args) {\n        accessor.get(instantiation_1.IInstantiationService).createInstance(searchActions_1.RefreshAction, searchActions_1.RefreshAction.ID, '').run();\n    }\n});\nvar FIND_IN_WORKSPACE_ID = 'filesExplorer.findInWorkspace';\ncommands_1.CommandsRegistry.registerCommand({\n    id: FIND_IN_WORKSPACE_ID,\n    handler: function (accessor) {\n        return searchActions_1.openSearchView(accessor.get(viewlet_2.IViewletService), accessor.get(panelService_1.IPanelService), accessor.get(configuration_1.IConfigurationService), true).then(function (searchView) {\n            if (searchView) {\n                searchView.searchInFolders();\n            }\n        });\n    }\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.ExplorerContext, {\n    group: '4_search',\n    order: 10,\n    command: {\n        id: FIND_IN_FOLDER_ID,\n        title: nls.localize('findInFolder', \"Find in Folder...\")\n    },\n    when: contextkey_1.ContextKeyExpr.and(files_3.ExplorerFolderContext)\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.ExplorerContext, {\n    group: '4_search',\n    order: 10,\n    command: {\n        id: FIND_IN_WORKSPACE_ID,\n        title: nls.localize('findInWorkspace', \"Find in Workspace...\")\n    },\n    when: contextkey_1.ContextKeyExpr.and(files_3.ExplorerRootContext, files_3.ExplorerFolderContext.toNegated())\n});\nvar ShowAllSymbolsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowAllSymbolsAction, _super);\n    function ShowAllSymbolsAction(actionId, actionLabel, quickOpenService, editorService) {\n        var _this = _super.call(this, actionId, actionLabel) || this;\n        _this.quickOpenService = quickOpenService;\n        _this.editorService = editorService;\n        _this.enabled = !!_this.quickOpenService;\n        return _this;\n    }\n    ShowAllSymbolsAction.prototype.run = function (context) {\n        var prefix = ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX;\n        var inputSelection = undefined;\n        var editor = this.editorService.getFocusedCodeEditor();\n        var word = editor && findController_1.getSelectionSearchString(editor);\n        if (word) {\n            prefix = prefix + word;\n            inputSelection = { start: 1, end: word.length + 1 };\n        }\n        this.quickOpenService.show(prefix, { inputSelection: inputSelection });\n        return Promise.resolve(undefined);\n    };\n    ShowAllSymbolsAction.ID = 'workbench.action.showAllSymbols';\n    ShowAllSymbolsAction.LABEL = nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\");\n    ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX = '#';\n    ShowAllSymbolsAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, codeEditorService_1.ICodeEditorService)\n    ], ShowAllSymbolsAction);\n    return ShowAllSymbolsAction;\n}(actions_1.Action));\nplatform_1.Registry.as(viewlet_1.Extensions.Viewlets).registerViewlet(new viewlet_1.ViewletDescriptor(searchViewlet_1.SearchViewlet, search_2.VIEWLET_ID, nls.localize('name', \"Search\"), 'search', 1));\nvar RegisterSearchViewContribution = /** @class */ (function () {\n    function RegisterSearchViewContribution(viewletService, panelService, configurationService) {\n        var viewsRegistry = platform_1.Registry.as(views_1.Extensions.ViewsRegistry);\n        var updateSearchViewLocation = function (open) {\n            var config = configurationService.getValue();\n            if (config.search.location === 'panel') {\n                viewsRegistry.deregisterViews(viewsRegistry.getViews(search_2.VIEW_CONTAINER), search_2.VIEW_CONTAINER);\n                platform_1.Registry.as(panel_1.Extensions.Panels).registerPanel(new panel_1.PanelDescriptor(searchPanel_1.SearchPanel, search_2.PANEL_ID, nls.localize('name', \"Search\"), 'search', 10));\n                if (open) {\n                    panelService.openPanel(search_2.PANEL_ID);\n                }\n            }\n            else {\n                platform_1.Registry.as(panel_1.Extensions.Panels).deregisterPanel(search_2.PANEL_ID);\n                viewsRegistry.registerViews([{ id: search_2.VIEW_ID, name: nls.localize('search', \"Search\"), ctorDescriptor: { ctor: searchView_1.SearchView }, canToggleVisibility: false }], search_2.VIEW_CONTAINER);\n                if (open) {\n                    viewletService.openViewlet(search_2.VIEWLET_ID);\n                }\n            }\n        };\n        configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('search.location')) {\n                updateSearchViewLocation(true);\n            }\n        });\n        updateSearchViewLocation(false);\n    }\n    RegisterSearchViewContribution = tslib_1.__decorate([\n        tslib_1.__param(0, viewlet_2.IViewletService),\n        tslib_1.__param(1, panelService_1.IPanelService),\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], RegisterSearchViewContribution);\n    return RegisterSearchViewContribution;\n}());\nplatform_1.Registry.as(contributions_1.Extensions.Workbench).registerWorkbenchContribution(RegisterSearchViewContribution, lifecycle_1.LifecyclePhase.Starting);\n// Actions\nvar registry = platform_1.Registry.as(actions_3.Extensions.WorkbenchActions);\n// Show Search and Find in Files are redundant, but we can't break keybindings by removing one. So it's the same action, same keybinding, registered to different IDs.\n// Show Search 'when' is redundant but if the two conflict with exactly the same keybinding and 'when' clause, then they can show up as \"unbound\" - #51780\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.OpenSearchViewletAction, search_2.VIEWLET_ID, searchActions_1.OpenSearchViewletAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_F }, Constants.SearchViewVisibleKey.toNegated()), 'View: Show Search', nls.localize('view', \"View\"));\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.FindInFilesAction, Constants.FindInFilesActionId, nls.localize('findInFiles', \"Find in Files\"), { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_F }), 'Find in Files', category);\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarEditMenu, {\n    group: '4_find_global',\n    command: {\n        id: Constants.FindInFilesActionId,\n        title: nls.localize({ key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] }, \"Find &&in Files\")\n    },\n    order: 1\n});\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.FocusNextSearchResultAction, searchActions_1.FocusNextSearchResultAction.ID, searchActions_1.FocusNextSearchResultAction.LABEL, { primary: keyCodes_1.KeyCode.F4 }, contextkey_1.ContextKeyExpr.and(Constants.HasSearchResults)), 'Focus Next Search Result', category);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.FocusPreviousSearchResultAction, searchActions_1.FocusPreviousSearchResultAction.ID, searchActions_1.FocusPreviousSearchResultAction.LABEL, { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F4 }, contextkey_1.ContextKeyExpr.and(Constants.HasSearchResults)), 'Focus Previous Search Result', category);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.ReplaceInFilesAction, searchActions_1.ReplaceInFilesAction.ID, searchActions_1.ReplaceInFilesAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_H }), 'Replace in Files', category);\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarEditMenu, {\n    group: '4_find_global',\n    command: {\n        id: searchActions_1.ReplaceInFilesAction.ID,\n        title: nls.localize({ key: 'miReplaceInFiles', comment: ['&& denotes a mnemonic'] }, \"Replace &&in Files\")\n    },\n    order: 2\n});\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n    id: Constants.ToggleCaseSensitiveCommandId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey, Constants.FileMatchOrFolderMatchFocusKey.toNegated()),\n    handler: searchActions_1.toggleCaseSensitiveCommand\n}, findModel_1.ToggleCaseSensitiveKeybinding));\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n    id: Constants.ToggleWholeWordCommandId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey),\n    handler: searchActions_1.toggleWholeWordCommand\n}, findModel_1.ToggleWholeWordKeybinding));\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n    id: Constants.ToggleRegexCommandId,\n    weight: keybindingsRegistry_1.KeybindingWeight.WorkbenchContrib,\n    when: contextkey_1.ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey),\n    handler: searchActions_1.toggleRegexCommand\n}, findModel_1.ToggleRegexKeybinding));\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.CollapseDeepestExpandedLevelAction, searchActions_1.CollapseDeepestExpandedLevelAction.ID, searchActions_1.CollapseDeepestExpandedLevelAction.LABEL), 'Search: Collapse All', category);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(ShowAllSymbolsAction, ShowAllSymbolsAction.ID, ShowAllSymbolsAction.LABEL, { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_T }), 'Go to Symbol in Workspace...');\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.RefreshAction, searchActions_1.RefreshAction.ID, searchActions_1.RefreshAction.LABEL), 'Search: Refresh', category);\nregistry.registerWorkbenchAction(new actions_2.SyncActionDescriptor(searchActions_1.ClearSearchResultsAction, searchActions_1.ClearSearchResultsAction.ID, searchActions_1.ClearSearchResultsAction.LABEL), 'Search: Clear', category);\n// Register Quick Open Handler\nplatform_1.Registry.as(quickopen_2.Extensions.Quickopen).registerDefaultQuickOpenHandler(new quickopen_2.QuickOpenHandlerDescriptor(openAnythingHandler_1.OpenAnythingHandler, openAnythingHandler_1.OpenAnythingHandler.ID, '', quickopen_1.defaultQuickOpenContextKey, nls.localize('openAnythingHandlerDescription', \"Go to File\")));\nplatform_1.Registry.as(quickopen_2.Extensions.Quickopen).registerQuickOpenHandler(new quickopen_2.QuickOpenHandlerDescriptor(openSymbolHandler_1.OpenSymbolHandler, openSymbolHandler_1.OpenSymbolHandler.ID, ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX, 'inWorkspaceSymbolsPicker', [\n    {\n        prefix: ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX,\n        needsEditor: false,\n        description: nls.localize('openSymbolDescriptionNormal', \"Go to Symbol in Workspace\")\n    }\n]));\n// Configuration\nvar configurationRegistry = platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n    id: 'search',\n    order: 13,\n    title: nls.localize('searchConfigurationTitle', \"Search\"),\n    type: 'object',\n    properties: {\n        'search.exclude': {\n            type: 'object',\n            markdownDescription: nls.localize('exclude', \"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the `#files.exclude#` setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).\"),\n            default: { '**/node_modules': true, '**/bower_components': true },\n            additionalProperties: {\n                anyOf: [\n                    {\n                        type: 'boolean',\n                        description: nls.localize('exclude.boolean', \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"),\n                    },\n                    {\n                        type: 'object',\n                        properties: {\n                            when: {\n                                type: 'string',\n                                pattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n                                default: '$(basename).ext',\n                                description: nls.localize('exclude.when', 'Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.')\n                            }\n                        }\n                    }\n                ]\n            },\n            scope: configurationRegistry_1.ConfigurationScope.RESOURCE\n        },\n        'search.useRipgrep': {\n            type: 'boolean',\n            description: nls.localize('useRipgrep', \"This setting is deprecated and now falls back on \\\"search.usePCRE2\\\".\"),\n            deprecationMessage: nls.localize('useRipgrepDeprecated', \"Deprecated. Consider \\\"search.usePCRE2\\\" for advanced regex feature support.\"),\n            default: true\n        },\n        'search.maintainFileSearchCache': {\n            type: 'boolean',\n            description: nls.localize('search.maintainFileSearchCache', \"When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.\"),\n            default: false\n        },\n        'search.useIgnoreFiles': {\n            type: 'boolean',\n            markdownDescription: nls.localize('useIgnoreFiles', \"Controls whether to use `.gitignore` and `.ignore` files when searching for files.\"),\n            default: true,\n            scope: configurationRegistry_1.ConfigurationScope.RESOURCE\n        },\n        'search.useGlobalIgnoreFiles': {\n            type: 'boolean',\n            markdownDescription: nls.localize('useGlobalIgnoreFiles', \"Controls whether to use global `.gitignore` and `.ignore` files when searching for files.\"),\n            default: false,\n            scope: configurationRegistry_1.ConfigurationScope.RESOURCE\n        },\n        'search.quickOpen.includeSymbols': {\n            type: 'boolean',\n            description: nls.localize('search.quickOpen.includeSymbols', \"Whether to include results from a global symbol search in the file results for Quick Open.\"),\n            default: false\n        },\n        'search.quickOpen.includeHistory': {\n            type: 'boolean',\n            description: nls.localize('search.quickOpen.includeHistory', \"Whether to include results from recently opened files in the file results for Quick Open.\"),\n            default: true\n        },\n        'search.followSymlinks': {\n            type: 'boolean',\n            description: nls.localize('search.followSymlinks', \"Controls whether to follow symlinks while searching.\"),\n            default: true\n        },\n        'search.smartCase': {\n            type: 'boolean',\n            description: nls.localize('search.smartCase', \"Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.\"),\n            default: false\n        },\n        'search.globalFindClipboard': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('search.globalFindClipboard', \"Controls whether the search view should read or modify the shared find clipboard on macOS.\"),\n            included: platform.isNative && platform.isMacintosh\n        },\n        'search.location': {\n            type: 'string',\n            enum: ['sidebar', 'panel'],\n            default: 'sidebar',\n            description: nls.localize('search.location', \"Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.\"),\n        },\n        'search.collapseResults': {\n            type: 'string',\n            enum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n            enumDescriptions: [\n                'Files with less than 10 results are expanded. Others are collapsed.',\n                '',\n                ''\n            ],\n            default: 'auto',\n            description: nls.localize('search.collapseAllResults', \"Controls whether the search results will be collapsed or expanded.\"),\n        },\n        'search.useReplacePreview': {\n            type: 'boolean',\n            default: true,\n            description: nls.localize('search.useReplacePreview', \"Controls whether to open Replace Preview when selecting or replacing a match.\"),\n        },\n        'search.showLineNumbers': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('search.showLineNumbers', \"Controls whether to show line numbers for search results.\"),\n        },\n        'searchRipgrep.enable': {\n            type: 'boolean',\n            default: false,\n            deprecationMessage: nls.localize('search.searchRipgrepEnableDeprecated', \"Deprecated. Use \\\"search.runInExtensionHost\\\" instead\"),\n            description: nls.localize('search.searchRipgrepEnable', \"Whether to run search in the extension host\")\n        },\n        'search.runInExtensionHost': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('search.runInExtensionHost', \"Whether to run search in the extension host. Requires a restart to take effect.\")\n        },\n        'search.usePCRE2': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('search.usePCRE2', \"Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.\")\n        },\n        'search.actionsPosition': {\n            type: 'string',\n            enum: ['auto', 'right'],\n            enumDescriptions: [\n                nls.localize('search.actionsPositionAuto', \"Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.\"),\n                nls.localize('search.actionsPositionRight', \"Always position the actionbar to the right.\"),\n            ],\n            default: 'auto',\n            description: nls.localize('search.actionsPosition', \"Controls the positioning of the actionbar on rows in the search view.\")\n        }\n    }\n});\neditorExtensions_1.registerLanguageCommand('_executeWorkspaceSymbolProvider', function (accessor, args) {\n    var query = args.query;\n    if (typeof query !== 'string') {\n        throw errors_1.illegalArgument();\n    }\n    return search_1.getWorkspaceSymbols(query);\n});\n// View menu\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarViewMenu, {\n    group: '3_views',\n    command: {\n        id: search_2.VIEWLET_ID,\n        title: nls.localize({ key: 'miViewSearch', comment: ['&& denotes a mnemonic'] }, \"&&Search\")\n    },\n    order: 2\n});\n// Go to menu\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarGoMenu, {\n    group: '3_global_nav',\n    command: {\n        id: 'workbench.action.showAllSymbols',\n        title: nls.localize({ key: 'miGotoSymbolInWorkspace', comment: ['&& denotes a mnemonic'] }, \"Go to Symbol in &&Workspace...\")\n    },\n    order: 2\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/search.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/search.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { distinct } from 'vs/base/common/arrays';\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport * as objects from 'vs/base/common/objects';\nimport * as platform from 'vs/base/common/platform';\nimport { dirname } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./media/search.contribution';\nimport { registerLanguageCommand } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { getSelectionSearchString } from 'vs/editor/contrib/find/findController';\nimport { ToggleCaseSensitiveKeybinding, ToggleRegexKeybinding, ToggleWholeWordKeybinding } from 'vs/editor/contrib/find/findModel';\nimport * as nls from 'vs/nls';\nimport { ICommandAction, MenuId, MenuRegistry, SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { CommandsRegistry, ICommandHandler } from 'vs/platform/commands/common/commands';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchObjectTree } from 'vs/platform/list/browser/listService';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as PanelExtensions, PanelDescriptor, PanelRegistry } from 'vs/workbench/browser/panel';\nimport { defaultQuickOpenContextKey } from 'vs/workbench/browser/parts/quickopen/quickopen';\nimport { Extensions as QuickOpenExtensions, IQuickOpenRegistry, QuickOpenHandlerDescriptor } from 'vs/workbench/browser/quickopen';\nimport { Extensions as ViewletExtensions, ViewletDescriptor, ViewletRegistry } from 'vs/workbench/browser/viewlet';\nimport { Extensions as ActionExtensions, IWorkbenchActionRegistry } from 'vs/workbench/common/actions';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContribution, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { Extensions as ViewExtensions, IViewsRegistry } from 'vs/workbench/common/views';\nimport { getMultiSelectedResources } from 'vs/workbench/contrib/files/browser/files';\nimport { ExplorerFolderContext, ExplorerRootContext, FilesExplorerFocusCondition } from 'vs/workbench/contrib/files/common/files';\nimport { OpenAnythingHandler } from 'vs/workbench/contrib/search/browser/openAnythingHandler';\nimport { OpenSymbolHandler } from 'vs/workbench/contrib/search/browser/openSymbolHandler';\nimport { registerContributions as replaceContributions } from 'vs/workbench/contrib/search/browser/replaceContributions';\nimport { clearHistoryCommand, ClearSearchResultsAction, CloseReplaceAction, CollapseDeepestExpandedLevelAction, copyAllCommand, copyMatchCommand, copyPathCommand, FindInFilesAction, FocusNextInputAction, FocusNextSearchResultAction, FocusPreviousInputAction, FocusPreviousSearchResultAction, focusSearchListCommand, getSearchView, openSearchView, OpenSearchViewletAction, RefreshAction, RemoveAction, ReplaceAction, ReplaceAllAction, ReplaceAllInFolderAction, ReplaceInFilesAction, toggleCaseSensitiveCommand, toggleRegexCommand, toggleWholeWordCommand } from 'vs/workbench/contrib/search/browser/searchActions';\nimport { SearchPanel } from 'vs/workbench/contrib/search/browser/searchPanel';\nimport { SearchView } from 'vs/workbench/contrib/search/browser/searchView';\nimport { SearchViewlet } from 'vs/workbench/contrib/search/browser/searchViewlet';\nimport { registerContributions as searchWidgetContributions } from 'vs/workbench/contrib/search/browser/searchWidget';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport { getWorkspaceSymbols } from 'vs/workbench/contrib/search/common/search';\nimport { ISearchHistoryService, SearchHistoryService } from 'vs/workbench/contrib/search/common/searchHistoryService';\nimport { FileMatchOrMatch, ISearchWorkbenchService, RenderableMatch, SearchWorkbenchService } from 'vs/workbench/contrib/search/common/searchModel';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { ISearchConfiguration, ISearchConfigurationProperties, PANEL_ID, VIEWLET_ID, VIEW_CONTAINER, VIEW_ID } from 'vs/workbench/services/search/common/search';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\n\n\nregisterSingleton(ISearchWorkbenchService, SearchWorkbenchService, true);\nregisterSingleton(ISearchHistoryService, SearchHistoryService, true);\n\nreplaceContributions();\nsearchWidgetContributions();\n\nconst category = nls.localize('search', \"Search\");\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.search.toggleQueryDetails',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.SearchViewVisibleKey,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_J,\n\thandler: accessor => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tsearchView.toggleQueryDetails();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.FocusSearchFromResults,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FirstMatchFocusKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tsearchView.focusPreviousInputBox();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.OpenMatchToSide,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.Enter,\n\tmac: {\n\t\tprimary: KeyMod.WinCtrl | KeyCode.Enter\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\tsearchView.open(<FileMatchOrMatch>tree.getFocus()[0], false, true, true);\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CancelActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, WorkbenchListFocusContextKey),\n\tprimary: KeyCode.Escape,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tsearchView.cancelSearch();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.RemoveActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.FileMatchOrMatchFocusKey),\n\tprimary: KeyCode.Delete,\n\tmac: {\n\t\tprimary: KeyMod.CtrlCmd | KeyCode.Backspace,\n\t},\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(RemoveAction, tree, tree.getFocus()[0]).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAction, tree, tree.getFocus()[0], searchView).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceAllInFileActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FileFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAllAction, searchView, tree.getFocus()[0]).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.ReplaceAllInFolderActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n\tprimary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.KEY_1,\n\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter],\n\thandler: (accessor, args: any) => {\n\t\tconst searchView = getSearchView(accessor.get(IViewletService), accessor.get(IPanelService));\n\t\tif (searchView) {\n\t\t\tconst tree: WorkbenchObjectTree<RenderableMatch> = searchView.getControl();\n\t\t\taccessor.get(IInstantiationService).createInstance(ReplaceAllInFolderAction, tree, tree.getFocus()[0]).run();\n\t\t}\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CloseReplaceWidgetActionId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.ReplaceInputBoxFocusedKey),\n\tprimary: KeyCode.Escape,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(CloseReplaceAction, Constants.CloseReplaceWidgetActionId, '').run();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FocusNextInputAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey),\n\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(FocusNextInputAction, FocusNextInputAction.ID, '').run();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FocusPreviousInputAction.ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.InputBoxFocusedKey, Constants.SearchInputBoxFocusedKey.toNegated()),\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(FocusPreviousInputAction, FocusPreviousInputAction.ID, '').run();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceActionId,\n\t\ttitle: ReplaceAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.MatchFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceAllInFolderActionId,\n\t\ttitle: ReplaceAllInFolderAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FolderFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.ReplaceAllInFileActionId,\n\t\ttitle: ReplaceAllAction.LABEL\n\t},\n\twhen: ContextKeyExpr.and(Constants.ReplaceActiveKey, Constants.FileFocusKey),\n\tgroup: 'search',\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.RemoveActionId,\n\t\ttitle: RemoveAction.LABEL\n\t},\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tgroup: 'search',\n\torder: 2\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CopyMatchCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_C,\n\thandler: copyMatchCommand\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyMatchCommandId,\n\t\ttitle: nls.localize('copyMatchLabel', \"Copy\")\n\t},\n\twhen: Constants.FileMatchOrMatchFocusKey,\n\tgroup: 'search_2',\n\torder: 1\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: Constants.CopyPathCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: Constants.FileMatchOrFolderMatchFocusKey,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.KEY_C,\n\twin: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_C\n\t},\n\thandler: copyPathCommand\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyPathCommandId,\n\t\ttitle: nls.localize('copyPathLabel', \"Copy Path\")\n\t},\n\twhen: Constants.FileMatchOrFolderMatchFocusKey,\n\tgroup: 'search_2',\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: {\n\t\tid: Constants.CopyAllCommandId,\n\t\ttitle: nls.localize('copyAllLabel', \"Copy All\")\n\t},\n\twhen: Constants.HasSearchResults,\n\tgroup: 'search_2',\n\torder: 3\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.CopyAllCommandId,\n\thandler: copyAllCommand\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.ClearSearchHistoryCommandId,\n\thandler: clearHistoryCommand\n});\n\nconst clearSearchHistoryLabel = nls.localize('clearSearchHistoryLabel', \"Clear Search History\");\nconst ClearSearchHistoryCommand: ICommandAction = {\n\tid: Constants.ClearSearchHistoryCommandId,\n\ttitle: clearSearchHistoryLabel,\n\tcategory\n};\nMenuRegistry.addCommand(ClearSearchHistoryCommand);\n\nCommandsRegistry.registerCommand({\n\tid: Constants.ToggleSearchViewPositionCommandId,\n\thandler: (accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst currentValue = configurationService.getValue<ISearchConfigurationProperties>('search').location;\n\t\tconst toggleValue = currentValue === 'sidebar' ? 'panel' : 'sidebar';\n\n\t\tconfigurationService.updateValue('search.location', toggleValue);\n\t}\n});\n\nconst toggleSearchViewPositionLabel = nls.localize('toggleSearchViewPositionLabel', \"Toggle Search View Position\");\nconst ToggleSearchViewPositionCommand: ICommandAction = {\n\tid: Constants.ToggleSearchViewPositionCommandId,\n\ttitle: toggleSearchViewPositionLabel,\n\tcategory\n};\nMenuRegistry.addCommand(ToggleSearchViewPositionCommand);\nMenuRegistry.appendMenuItem(MenuId.SearchContext, {\n\tcommand: ToggleSearchViewPositionCommand,\n\twhen: Constants.SearchViewVisibleKey,\n\tgroup: 'search_9',\n\torder: 1\n});\n\nCommandsRegistry.registerCommand({\n\tid: Constants.FocusSearchListCommandID,\n\thandler: focusSearchListCommand\n});\n\nconst focusSearchListCommandLabel = nls.localize('focusSearchListCommandLabel', \"Focus List\");\nconst FocusSearchListCommand: ICommandAction = {\n\tid: Constants.FocusSearchListCommandID,\n\ttitle: focusSearchListCommandLabel,\n\tcategory\n};\nMenuRegistry.addCommand(FocusSearchListCommand);\n\nconst searchInFolderCommand: ICommandHandler = (accessor, resource?: URI) => {\n\tconst listService = accessor.get(IListService);\n\tconst viewletService = accessor.get(IViewletService);\n\tconst panelService = accessor.get(IPanelService);\n\tconst fileService = accessor.get(IFileService);\n\tconst configurationService = accessor.get(IConfigurationService);\n\tconst resources = getMultiSelectedResources(resource, listService, accessor.get(IEditorService));\n\n\treturn openSearchView(viewletService, panelService, configurationService, true).then(searchView => {\n\t\tif (resources && resources.length && searchView) {\n\t\t\treturn fileService.resolveFiles(resources.map(resource => ({ resource }))).then(results => {\n\t\t\t\tconst folders: URI[] = [];\n\n\t\t\t\tresults.forEach(result => {\n\t\t\t\t\tif (result.success && result.stat) {\n\t\t\t\t\t\tfolders.push(result.stat.isDirectory ? result.stat.resource : dirname(result.stat.resource));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tsearchView.searchInFolders(distinct(folders, folder => folder.toString()));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t});\n};\n\nconst FIND_IN_FOLDER_ID = 'filesExplorer.findInFolder';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: FIND_IN_FOLDER_ID,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(FilesExplorerFocusCondition, ExplorerFolderContext),\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_F,\n\thandler: searchInFolderCommand\n});\n\nCommandsRegistry.registerCommand({\n\tid: ClearSearchResultsAction.ID,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(ClearSearchResultsAction, ClearSearchResultsAction.ID, '').run();\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: RefreshAction.ID,\n\thandler: (accessor, args: any) => {\n\t\taccessor.get(IInstantiationService).createInstance(RefreshAction, RefreshAction.ID, '').run();\n\t}\n});\n\nconst FIND_IN_WORKSPACE_ID = 'filesExplorer.findInWorkspace';\nCommandsRegistry.registerCommand({\n\tid: FIND_IN_WORKSPACE_ID,\n\thandler: (accessor) => {\n\t\treturn openSearchView(accessor.get(IViewletService), accessor.get(IPanelService), accessor.get(IConfigurationService), true).then(searchView => {\n\t\t\tif (searchView) {\n\t\t\t\tsearchView.searchInFolders();\n\t\t\t}\n\t\t});\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, {\n\tgroup: '4_search',\n\torder: 10,\n\tcommand: {\n\t\tid: FIND_IN_FOLDER_ID,\n\t\ttitle: nls.localize('findInFolder', \"Find in Folder...\")\n\t},\n\twhen: ContextKeyExpr.and(ExplorerFolderContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, {\n\tgroup: '4_search',\n\torder: 10,\n\tcommand: {\n\t\tid: FIND_IN_WORKSPACE_ID,\n\t\ttitle: nls.localize('findInWorkspace', \"Find in Workspace...\")\n\t},\n\twhen: ContextKeyExpr.and(ExplorerRootContext, ExplorerFolderContext.toNegated())\n});\n\n\nclass ShowAllSymbolsAction extends Action {\n\tstatic readonly ID = 'workbench.action.showAllSymbols';\n\tstatic readonly LABEL = nls.localize('showTriggerActions', \"Go to Symbol in Workspace...\");\n\tstatic readonly ALL_SYMBOLS_PREFIX = '#';\n\n\tconstructor(\n\t\tactionId: string, actionLabel: string,\n\t\t@IQuickOpenService private readonly quickOpenService: IQuickOpenService,\n\t\t@ICodeEditorService private readonly editorService: ICodeEditorService) {\n\t\tsuper(actionId, actionLabel);\n\t\tthis.enabled = !!this.quickOpenService;\n\t}\n\n\trun(context?: any): Promise<void> {\n\n\t\tlet prefix = ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX;\n\t\tlet inputSelection: { start: number; end: number; } | undefined = undefined;\n\t\tconst editor = this.editorService.getFocusedCodeEditor();\n\t\tconst word = editor && getSelectionSearchString(editor);\n\t\tif (word) {\n\t\t\tprefix = prefix + word;\n\t\t\tinputSelection = { start: 1, end: word.length + 1 };\n\t\t}\n\n\t\tthis.quickOpenService.show(prefix, { inputSelection });\n\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nRegistry.as<ViewletRegistry>(ViewletExtensions.Viewlets).registerViewlet(new ViewletDescriptor(\n\tSearchViewlet,\n\tVIEWLET_ID,\n\tnls.localize('name', \"Search\"),\n\t'search',\n\t1\n));\n\nclass RegisterSearchViewContribution implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IPanelService panelService: IPanelService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tconst viewsRegistry = Registry.as<IViewsRegistry>(ViewExtensions.ViewsRegistry);\n\t\tconst updateSearchViewLocation = (open: boolean) => {\n\t\t\tconst config = configurationService.getValue<ISearchConfiguration>();\n\t\t\tif (config.search.location === 'panel') {\n\t\t\t\tviewsRegistry.deregisterViews(viewsRegistry.getViews(VIEW_CONTAINER), VIEW_CONTAINER);\n\t\t\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels).registerPanel(new PanelDescriptor(\n\t\t\t\t\tSearchPanel,\n\t\t\t\t\tPANEL_ID,\n\t\t\t\t\tnls.localize('name', \"Search\"),\n\t\t\t\t\t'search',\n\t\t\t\t\t10\n\t\t\t\t));\n\t\t\t\tif (open) {\n\t\t\t\t\tpanelService.openPanel(PANEL_ID);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tRegistry.as<PanelRegistry>(PanelExtensions.Panels).deregisterPanel(PANEL_ID);\n\t\t\t\tviewsRegistry.registerViews([{ id: VIEW_ID, name: nls.localize('search', \"Search\"), ctorDescriptor: { ctor: SearchView }, canToggleVisibility: false }], VIEW_CONTAINER);\n\t\t\t\tif (open) {\n\t\t\t\t\tviewletService.openViewlet(VIEWLET_ID);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconfigurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('search.location')) {\n\t\t\t\tupdateSearchViewLocation(true);\n\t\t\t}\n\t\t});\n\n\t\tupdateSearchViewLocation(false);\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(RegisterSearchViewContribution, LifecyclePhase.Starting);\n\n// Actions\nconst registry = Registry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions);\n\n// Show Search and Find in Files are redundant, but we can't break keybindings by removing one. So it's the same action, same keybinding, registered to different IDs.\n// Show Search 'when' is redundant but if the two conflict with exactly the same keybinding and 'when' clause, then they can show up as \"unbound\" - #51780\nregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenSearchViewletAction, VIEWLET_ID, OpenSearchViewletAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F }, Constants.SearchViewVisibleKey.toNegated()), 'View: Show Search', nls.localize('view', \"View\"));\nregistry.registerWorkbenchAction(new SyncActionDescriptor(FindInFilesAction, Constants.FindInFilesActionId, nls.localize('findInFiles', \"Find in Files\"), { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F }), 'Find in Files', category);\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, {\n\tgroup: '4_find_global',\n\tcommand: {\n\t\tid: Constants.FindInFilesActionId,\n\t\ttitle: nls.localize({ key: 'miFindInFiles', comment: ['&& denotes a mnemonic'] }, \"Find &&in Files\")\n\t},\n\torder: 1\n});\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(FocusNextSearchResultAction, FocusNextSearchResultAction.ID, FocusNextSearchResultAction.LABEL, { primary: KeyCode.F4 }, ContextKeyExpr.and(Constants.HasSearchResults)), 'Focus Next Search Result', category);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(FocusPreviousSearchResultAction, FocusPreviousSearchResultAction.ID, FocusPreviousSearchResultAction.LABEL, { primary: KeyMod.Shift | KeyCode.F4 }, ContextKeyExpr.and(Constants.HasSearchResults)), 'Focus Previous Search Result', category);\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ReplaceInFilesAction, ReplaceInFilesAction.ID, ReplaceInFilesAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_H }), 'Replace in Files', category);\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, {\n\tgroup: '4_find_global',\n\tcommand: {\n\t\tid: ReplaceInFilesAction.ID,\n\t\ttitle: nls.localize({ key: 'miReplaceInFiles', comment: ['&& denotes a mnemonic'] }, \"Replace &&in Files\")\n\t},\n\torder: 2\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n\tid: Constants.ToggleCaseSensitiveCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey, Constants.FileMatchOrFolderMatchFocusKey.toNegated()),\n\thandler: toggleCaseSensitiveCommand\n}, ToggleCaseSensitiveKeybinding));\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n\tid: Constants.ToggleWholeWordCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey),\n\thandler: toggleWholeWordCommand\n}, ToggleWholeWordKeybinding));\n\nKeybindingsRegistry.registerCommandAndKeybindingRule(objects.assign({\n\tid: Constants.ToggleRegexCommandId,\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(Constants.SearchViewVisibleKey, Constants.SearchViewFocusedKey),\n\thandler: toggleRegexCommand\n}, ToggleRegexKeybinding));\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(CollapseDeepestExpandedLevelAction, CollapseDeepestExpandedLevelAction.ID, CollapseDeepestExpandedLevelAction.LABEL), 'Search: Collapse All', category);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ShowAllSymbolsAction, ShowAllSymbolsAction.ID, ShowAllSymbolsAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.KEY_T }), 'Go to Symbol in Workspace...');\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(RefreshAction, RefreshAction.ID, RefreshAction.LABEL), 'Search: Refresh', category);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ClearSearchResultsAction, ClearSearchResultsAction.ID, ClearSearchResultsAction.LABEL), 'Search: Clear', category);\n\n\n// Register Quick Open Handler\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerDefaultQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tOpenAnythingHandler,\n\t\tOpenAnythingHandler.ID,\n\t\t'',\n\t\tdefaultQuickOpenContextKey,\n\t\tnls.localize('openAnythingHandlerDescription', \"Go to File\")\n\t)\n);\n\nRegistry.as<IQuickOpenRegistry>(QuickOpenExtensions.Quickopen).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\tOpenSymbolHandler,\n\t\tOpenSymbolHandler.ID,\n\t\tShowAllSymbolsAction.ALL_SYMBOLS_PREFIX,\n\t\t'inWorkspaceSymbolsPicker',\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: ShowAllSymbolsAction.ALL_SYMBOLS_PREFIX,\n\t\t\t\tneedsEditor: false,\n\t\t\t\tdescription: nls.localize('openSymbolDescriptionNormal', \"Go to Symbol in Workspace\")\n\t\t\t}\n\t\t]\n\t)\n);\n\n// Configuration\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'search',\n\torder: 13,\n\ttitle: nls.localize('searchConfigurationTitle', \"Search\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'search.exclude': {\n\t\t\ttype: 'object',\n\t\t\tmarkdownDescription: nls.localize('exclude', \"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the `#files.exclude#` setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).\"),\n\t\t\tdefault: { '**/node_modules': true, '**/bower_components': true },\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdescription: nls.localize('exclude.boolean', \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\twhen: {\n\t\t\t\t\t\t\t\ttype: 'string', // expression ({ \"**/*.js\": { \"when\": \"$(basename).js\" } })\n\t\t\t\t\t\t\t\tpattern: '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n\t\t\t\t\t\t\t\tdefault: '$(basename).ext',\n\t\t\t\t\t\t\t\tdescription: nls.localize('exclude.when', 'Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.useRipgrep': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('useRipgrep', \"This setting is deprecated and now falls back on \\\"search.usePCRE2\\\".\"),\n\t\t\tdeprecationMessage: nls.localize('useRipgrepDeprecated', \"Deprecated. Consider \\\"search.usePCRE2\\\" for advanced regex feature support.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.maintainFileSearchCache': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.maintainFileSearchCache', \"When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.useIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useIgnoreFiles', \"Controls whether to use `.gitignore` and `.ignore` files when searching for files.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.useGlobalIgnoreFiles': {\n\t\t\ttype: 'boolean',\n\t\t\tmarkdownDescription: nls.localize('useGlobalIgnoreFiles', \"Controls whether to use global `.gitignore` and `.ignore` files when searching for files.\"),\n\t\t\tdefault: false,\n\t\t\tscope: ConfigurationScope.RESOURCE\n\t\t},\n\t\t'search.quickOpen.includeSymbols': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeSymbols', \"Whether to include results from a global symbol search in the file results for Quick Open.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.quickOpen.includeHistory': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.quickOpen.includeHistory', \"Whether to include results from recently opened files in the file results for Quick Open.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.followSymlinks': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.followSymlinks', \"Controls whether to follow symlinks while searching.\"),\n\t\t\tdefault: true\n\t\t},\n\t\t'search.smartCase': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('search.smartCase', \"Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.\"),\n\t\t\tdefault: false\n\t\t},\n\t\t'search.globalFindClipboard': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.globalFindClipboard', \"Controls whether the search view should read or modify the shared find clipboard on macOS.\"),\n\t\t\tincluded: platform.isNative && platform.isMacintosh\n\t\t},\n\t\t'search.location': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['sidebar', 'panel'],\n\t\t\tdefault: 'sidebar',\n\t\t\tdescription: nls.localize('search.location', \"Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.\"),\n\t\t},\n\t\t'search.collapseResults': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'alwaysCollapse', 'alwaysExpand'],\n\t\t\tenumDescriptions: [\n\t\t\t\t'Files with less than 10 results are expanded. Others are collapsed.',\n\t\t\t\t'',\n\t\t\t\t''\n\t\t\t],\n\t\t\tdefault: 'auto',\n\t\t\tdescription: nls.localize('search.collapseAllResults', \"Controls whether the search results will be collapsed or expanded.\"),\n\t\t},\n\t\t'search.useReplacePreview': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription: nls.localize('search.useReplacePreview', \"Controls whether to open Replace Preview when selecting or replacing a match.\"),\n\t\t},\n\t\t'search.showLineNumbers': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.showLineNumbers', \"Controls whether to show line numbers for search results.\"),\n\t\t},\n\t\t'searchRipgrep.enable': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdeprecationMessage: nls.localize('search.searchRipgrepEnableDeprecated', \"Deprecated. Use \\\"search.runInExtensionHost\\\" instead\"),\n\t\t\tdescription: nls.localize('search.searchRipgrepEnable', \"Whether to run search in the extension host\")\n\t\t},\n\t\t'search.runInExtensionHost': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.runInExtensionHost', \"Whether to run search in the extension host. Requires a restart to take effect.\")\n\t\t},\n\t\t'search.usePCRE2': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: nls.localize('search.usePCRE2', \"Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.\")\n\t\t},\n\t\t'search.actionsPosition': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['auto', 'right'],\n\t\t\tenumDescriptions: [\n\t\t\t\tnls.localize('search.actionsPositionAuto', \"Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.\"),\n\t\t\t\tnls.localize('search.actionsPositionRight', \"Always position the actionbar to the right.\"),\n\t\t\t],\n\t\t\tdefault: 'auto',\n\t\t\tdescription: nls.localize('search.actionsPosition', \"Controls the positioning of the actionbar on rows in the search view.\")\n\t\t}\n\t}\n});\n\nregisterLanguageCommand('_executeWorkspaceSymbolProvider', function (accessor, args: { query: string; }) {\n\tconst { query } = args;\n\tif (typeof query !== 'string') {\n\t\tthrow illegalArgument();\n\t}\n\treturn getWorkspaceSymbols(query);\n});\n\n// View menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '3_views',\n\tcommand: {\n\t\tid: VIEWLET_ID,\n\t\ttitle: nls.localize({ key: 'miViewSearch', comment: ['&& denotes a mnemonic'] }, \"&&Search\")\n\t},\n\torder: 2\n});\n\n// Go to menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '3_global_nav',\n\tcommand: {\n\t\tid: 'workbench.action.showAllSymbols',\n\t\ttitle: nls.localize({ key: 'miGotoSymbolInWorkspace', comment: ['&& denotes a mnemonic'] }, \"Go to Symbol in &&Workspace...\")\n\t},\n\torder: 2\n});\n"]}]}