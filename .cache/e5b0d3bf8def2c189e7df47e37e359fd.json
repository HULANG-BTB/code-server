{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/countBadge/countBadge.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/countBadge/countBadge.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"vs/css!./countBadge\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar color_1 = require(\"vs/base/common/color\");\nvar objects_1 = require(\"vs/base/common/objects\");\nvar defaultOpts = {\n    badgeBackground: color_1.Color.fromHex('#4D4D4D'),\n    badgeForeground: color_1.Color.fromHex('#FFFFFF')\n};\nvar CountBadge = /** @class */ (function () {\n    function CountBadge(container, options) {\n        this.options = options || Object.create(null);\n        objects_1.mixin(this.options, defaultOpts, false);\n        this.badgeBackground = this.options.badgeBackground;\n        this.badgeForeground = this.options.badgeForeground;\n        this.badgeBorder = this.options.badgeBorder;\n        this.element = dom_1.append(container, dom_1.$('.monaco-count-badge'));\n        this.countFormat = this.options.countFormat || '{0}';\n        this.titleFormat = this.options.titleFormat || '';\n        this.setCount(this.options.count || 0);\n    }\n    CountBadge.prototype.setCount = function (count) {\n        this.count = count;\n        this.render();\n    };\n    CountBadge.prototype.setCountFormat = function (countFormat) {\n        this.countFormat = countFormat;\n        this.render();\n    };\n    CountBadge.prototype.setTitleFormat = function (titleFormat) {\n        this.titleFormat = titleFormat;\n        this.render();\n    };\n    CountBadge.prototype.render = function () {\n        this.element.textContent = strings_1.format(this.countFormat, this.count);\n        this.element.title = strings_1.format(this.titleFormat, this.count);\n        this.applyStyles();\n    };\n    CountBadge.prototype.style = function (styles) {\n        this.badgeBackground = styles.badgeBackground;\n        this.badgeForeground = styles.badgeForeground;\n        this.badgeBorder = styles.badgeBorder;\n        this.applyStyles();\n    };\n    CountBadge.prototype.applyStyles = function () {\n        if (this.element) {\n            var background = this.badgeBackground ? this.badgeBackground.toString() : null;\n            var foreground = this.badgeForeground ? this.badgeForeground.toString() : null;\n            var border = this.badgeBorder ? this.badgeBorder.toString() : null;\n            this.element.style.backgroundColor = background;\n            this.element.style.color = foreground;\n            this.element.style.borderWidth = border ? '1px' : null;\n            this.element.style.borderStyle = border ? 'solid' : null;\n            this.element.style.borderColor = border;\n        }\n    };\n    return CountBadge;\n}());\nexports.CountBadge = CountBadge;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/countBadge/countBadge.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/countBadge/countBadge.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./countBadge';\nimport { $, append } from 'vs/base/browser/dom';\nimport { format } from 'vs/base/common/strings';\nimport { Color } from 'vs/base/common/color';\nimport { mixin } from 'vs/base/common/objects';\n\nexport interface ICountBadgeOptions extends ICountBadgetyles {\n\tcount?: number;\n\tcountFormat?: string;\n\ttitleFormat?: string;\n}\n\nexport interface ICountBadgetyles {\n\tbadgeBackground?: Color;\n\tbadgeForeground?: Color;\n\tbadgeBorder?: Color;\n}\n\nconst defaultOpts = {\n\tbadgeBackground: Color.fromHex('#4D4D4D'),\n\tbadgeForeground: Color.fromHex('#FFFFFF')\n};\n\nexport class CountBadge {\n\n\tprivate element: HTMLElement;\n\tprivate count: number;\n\tprivate countFormat: string;\n\tprivate titleFormat: string;\n\n\tprivate badgeBackground: Color | undefined;\n\tprivate badgeForeground: Color | undefined;\n\tprivate badgeBorder: Color | undefined;\n\n\tprivate options: ICountBadgeOptions;\n\n\tconstructor(container: HTMLElement, options?: ICountBadgeOptions) {\n\t\tthis.options = options || Object.create(null);\n\t\tmixin(this.options, defaultOpts, false);\n\n\t\tthis.badgeBackground = this.options.badgeBackground;\n\t\tthis.badgeForeground = this.options.badgeForeground;\n\t\tthis.badgeBorder = this.options.badgeBorder;\n\n\t\tthis.element = append(container, $('.monaco-count-badge'));\n\t\tthis.countFormat = this.options.countFormat || '{0}';\n\t\tthis.titleFormat = this.options.titleFormat || '';\n\t\tthis.setCount(this.options.count || 0);\n\t}\n\n\tsetCount(count: number) {\n\t\tthis.count = count;\n\t\tthis.render();\n\t}\n\n\tsetCountFormat(countFormat: string) {\n\t\tthis.countFormat = countFormat;\n\t\tthis.render();\n\t}\n\n\tsetTitleFormat(titleFormat: string) {\n\t\tthis.titleFormat = titleFormat;\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tthis.element.textContent = format(this.countFormat, this.count);\n\t\tthis.element.title = format(this.titleFormat, this.count);\n\n\t\tthis.applyStyles();\n\t}\n\n\tstyle(styles: ICountBadgetyles): void {\n\t\tthis.badgeBackground = styles.badgeBackground;\n\t\tthis.badgeForeground = styles.badgeForeground;\n\t\tthis.badgeBorder = styles.badgeBorder;\n\n\t\tthis.applyStyles();\n\t}\n\n\tprivate applyStyles(): void {\n\t\tif (this.element) {\n\t\t\tconst background = this.badgeBackground ? this.badgeBackground.toString() : null;\n\t\t\tconst foreground = this.badgeForeground ? this.badgeForeground.toString() : null;\n\t\t\tconst border = this.badgeBorder ? this.badgeBorder.toString() : null;\n\n\t\t\tthis.element.style.backgroundColor = background;\n\t\t\tthis.element.style.color = foreground;\n\n\t\t\tthis.element.style.borderWidth = border ? '1px' : null;\n\t\t\tthis.element.style.borderStyle = border ? 'solid' : null;\n\t\t\tthis.element.style.borderColor = border;\n\t\t}\n\t}\n}\n"]}]}