{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffReview.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffReview.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/diffReview\");\nvar nls = require(\"vs/nls\");\nvar dom = require(\"vs/base/browser/dom\");\nvar fastDomNode_1 = require(\"vs/base/browser/fastDomNode\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar scrollableElement_1 = require(\"vs/base/browser/ui/scrollbar/scrollableElement\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar configuration_1 = require(\"vs/editor/browser/config/configuration\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar lineTokens_1 = require(\"vs/editor/common/core/lineTokens\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar editorColorRegistry_1 = require(\"vs/editor/common/view/editorColorRegistry\");\nvar viewLineRenderer_1 = require(\"vs/editor/common/viewLayout/viewLineRenderer\");\nvar viewModel_1 = require(\"vs/editor/common/viewModel/viewModel\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar DIFF_LINES_PADDING = 3;\nvar DiffEntryType;\n(function (DiffEntryType) {\n    DiffEntryType[DiffEntryType[\"Equal\"] = 0] = \"Equal\";\n    DiffEntryType[DiffEntryType[\"Insert\"] = 1] = \"Insert\";\n    DiffEntryType[DiffEntryType[\"Delete\"] = 2] = \"Delete\";\n})(DiffEntryType || (DiffEntryType = {}));\nvar DiffEntry = /** @class */ (function () {\n    function DiffEntry(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    DiffEntry.prototype.getType = function () {\n        if (this.originalLineStart === 0) {\n            return DiffEntryType.Insert;\n        }\n        if (this.modifiedLineStart === 0) {\n            return DiffEntryType.Delete;\n        }\n        return DiffEntryType.Equal;\n    };\n    return DiffEntry;\n}());\nvar Diff = /** @class */ (function () {\n    function Diff(entries) {\n        this.entries = entries;\n    }\n    return Diff;\n}());\nvar DiffReview = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffReview, _super);\n    function DiffReview(diffEditor) {\n        var _this = _super.call(this) || this;\n        _this._width = 0;\n        _this._diffEditor = diffEditor;\n        _this._isVisible = false;\n        _this.shadow = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this.shadow.setClassName('diff-review-shadow');\n        _this.actionBarContainer = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this.actionBarContainer.setClassName('diff-review-actions');\n        _this._actionBar = _this._register(new actionbar_1.ActionBar(_this.actionBarContainer.domNode));\n        _this._actionBar.push(new actions_1.Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, function () {\n            _this.hide();\n            return Promise.resolve(null);\n        }), { label: false, icon: true });\n        _this.domNode = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this.domNode.setClassName('diff-review monaco-editor-background');\n        _this._content = fastDomNode_1.createFastDomNode(document.createElement('div'));\n        _this._content.setClassName('diff-review-content');\n        _this.scrollbar = _this._register(new scrollableElement_1.DomScrollableElement(_this._content.domNode, {}));\n        _this.domNode.domNode.appendChild(_this.scrollbar.getDomNode());\n        _this._register(diffEditor.onDidUpdateDiff(function () {\n            if (!_this._isVisible) {\n                return;\n            }\n            _this._diffs = _this._compute();\n            _this._render();\n        }));\n        _this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(function () {\n            if (!_this._isVisible) {\n                return;\n            }\n            _this._render();\n        }));\n        _this._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(function () {\n            if (_this._isVisible) {\n                _this.hide();\n            }\n        }));\n        _this._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(function () {\n            if (_this._isVisible) {\n                _this.hide();\n            }\n        }));\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'click', function (e) {\n            e.preventDefault();\n            var row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                _this._goToRow(row);\n            }\n        }));\n        _this._register(dom.addStandardDisposableListener(_this.domNode.domNode, 'keydown', function (e) {\n            if (e.equals(keyCodes_1.KeyCode.DownArrow)\n                || e.equals(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow)\n                || e.equals(keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.DownArrow)) {\n                e.preventDefault();\n                _this._goToRow(_this._getNextRow());\n            }\n            if (e.equals(keyCodes_1.KeyCode.UpArrow)\n                || e.equals(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow)\n                || e.equals(keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.UpArrow)) {\n                e.preventDefault();\n                _this._goToRow(_this._getPrevRow());\n            }\n            if (e.equals(keyCodes_1.KeyCode.Escape)\n                || e.equals(keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Escape)\n                || e.equals(keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.Escape)\n                || e.equals(keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape)) {\n                e.preventDefault();\n                _this.hide();\n            }\n            if (e.equals(keyCodes_1.KeyCode.Space)\n                || e.equals(keyCodes_1.KeyCode.Enter)) {\n                e.preventDefault();\n                _this.accept();\n            }\n        }));\n        _this._diffs = [];\n        _this._currentDiff = null;\n        return _this;\n    }\n    DiffReview.prototype.prev = function () {\n        var index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            var currentIndex = -1;\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        this._diffEditor.setPosition(new position_1.Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    };\n    DiffReview.prototype.next = function () {\n        var index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            var currentIndex = -1;\n            for (var i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        this._diffEditor.setPosition(new position_1.Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    };\n    DiffReview.prototype.accept = function () {\n        var jumpToLineNumber = -1;\n        var current = this._getCurrentFocusedRow();\n        if (current) {\n            var lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new position_1.Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new position_1.Position(jumpToLineNumber, 1), editorCommon_1.ScrollType.Immediate);\n        }\n    };\n    DiffReview.prototype.hide = function () {\n        this._isVisible = false;\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    };\n    DiffReview.prototype._getPrevRow = function () {\n        var current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    };\n    DiffReview.prototype._getNextRow = function () {\n        var current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    };\n    DiffReview.prototype._getFirstRow = function () {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    };\n    DiffReview.prototype._getCurrentFocusedRow = function () {\n        var result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    };\n    DiffReview.prototype._goToRow = function (row) {\n        var prev = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (prev && prev !== row) {\n            prev.tabIndex = -1;\n        }\n        this.scrollbar.scanDomNode();\n    };\n    DiffReview.prototype.isVisible = function () {\n        return this._isVisible;\n    };\n    DiffReview.prototype.layout = function (top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    };\n    DiffReview.prototype._compute = function () {\n        var lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    };\n    DiffReview._mergeAdjacent = function (lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        var diffs = [], diffsLength = 0;\n        for (var i = 0, len = lineChanges.length; i < len; i++) {\n            var lineChange = lineChanges[i];\n            var originalStart = lineChange.originalStartLineNumber;\n            var originalEnd = lineChange.originalEndLineNumber;\n            var modifiedStart = lineChange.modifiedStartLineNumber;\n            var modifiedEnd = lineChange.modifiedEndLineNumber;\n            var r_1 = [], rLength_1 = 0;\n            // Emit before anchors\n            {\n                var originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                var modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                var minOriginal = 1;\n                var minModified = 1;\n                if (i > 0) {\n                    var prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                var fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                var fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    var delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    var delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r_1[rLength_1++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r_1[rLength_1++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r_1[rLength_1++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                var originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                var modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                var maxOriginal = originalLineCount;\n                var maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    var nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                var toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                var toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    var delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    var delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r_1[rLength_1++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r_1);\n        }\n        // Merge adjacent diffs\n        var curr = diffs[0].entries;\n        var r = [], rLength = 0;\n        for (var i = 1, len = diffs.length; i < len; i++) {\n            var thisDiff = diffs[i].entries;\n            var currLast = curr[curr.length - 1];\n            var thisFirst = thisDiff[0];\n            if (currLast.getType() === DiffEntryType.Equal\n                && thisFirst.getType() === DiffEntryType.Equal\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    };\n    DiffReview.prototype._findDiffIndex = function (pos) {\n        var lineNumber = pos.lineNumber;\n        for (var i = 0, len = this._diffs.length; i < len; i++) {\n            var diff = this._diffs[i].entries;\n            var lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    DiffReview.prototype._render = function () {\n        var originalOpts = this._diffEditor.getOriginalEditor().getConfiguration();\n        var modifiedOpts = this._diffEditor.getModifiedEditor().getConfiguration();\n        var originalModel = this._diffEditor.getOriginalEditor().getModel();\n        var modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        var originalModelOpts = originalModel.getOptions();\n        var modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        var diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        var diffs = this._diffs[diffIndex].entries;\n        var container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        configuration_1.Configuration.applyFontInfoSlow(container, modifiedOpts.fontInfo);\n        var minOriginalLine = 0;\n        var maxOriginalLine = 0;\n        var minModifiedLine = 0;\n        var maxModifiedLine = 0;\n        for (var i = 0, len = diffs.length; i < len; i++) {\n            var diffEntry = diffs[i];\n            var originalLineStart = diffEntry.originalLineStart;\n            var originalLineEnd = diffEntry.originalLineEnd;\n            var modifiedLineStart = diffEntry.modifiedLineStart;\n            var modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        var header = document.createElement('div');\n        header.className = 'diff-review-row';\n        var cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        var originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        var modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(diffIndex + 1 + \"/\" + this._diffs.length + \": @@ -\" + minOriginalLine + \",\" + originalChangedLinesCnt + \" +\" + minModifiedLine + \",\" + modifiedChangedLinesCnt + \" @@\"));\n        header.setAttribute('data-line', String(minModifiedLine));\n        var getAriaLines = function (lines) {\n            if (lines === 0) {\n                return nls.localize('no_lines', \"no lines\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line', \"1 line\");\n            }\n            else {\n                return nls.localize('more_lines', \"{0} lines\", lines);\n            }\n        };\n        var originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        var modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        var modLine = minModifiedLine;\n        for (var i = 0, len = diffs.length; i < len; i++) {\n            var diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, this._width, originalOpts, originalModel, originalModelOpts, modifiedOpts, modifiedModel, modifiedModelOpts);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    };\n    DiffReview._renderSection = function (dest, diffEntry, modLine, width, originalOpts, originalModel, originalModelOpts, modifiedOpts, modifiedModel, modifiedModelOpts) {\n        var type = diffEntry.getType();\n        var rowClassName = 'diff-review-row';\n        var lineNumbersExtraClassName = '';\n        var spacerClassName = 'diff-review-spacer';\n        switch (type) {\n            case DiffEntryType.Insert:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerClassName = 'diff-review-spacer insert-sign';\n                break;\n            case DiffEntryType.Delete:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerClassName = 'diff-review-spacer delete-sign';\n                break;\n        }\n        var originalLineStart = diffEntry.originalLineStart;\n        var originalLineEnd = diffEntry.originalLineEnd;\n        var modifiedLineStart = diffEntry.modifiedLineStart;\n        var modifiedLineEnd = diffEntry.modifiedLineEnd;\n        var cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        var originalLineNumbersWidth = originalOpts.layoutInfo.glyphMarginWidth + originalOpts.layoutInfo.lineNumbersWidth;\n        var modifiedLineNumbersWidth = 10 + modifiedOpts.layoutInfo.glyphMarginWidth + modifiedOpts.layoutInfo.lineNumbersWidth;\n        for (var i = 0; i <= cnt; i++) {\n            var originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            var modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            var row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            var cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            row.appendChild(cell);\n            var originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerHTML = '&nbsp;';\n            }\n            cell.appendChild(originalLineNumber);\n            var modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerHTML = '&nbsp;';\n            }\n            cell.appendChild(modifiedLineNumber);\n            var spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            spacer.innerHTML = '&nbsp;&nbsp;';\n            cell.appendChild(spacer);\n            var lineContent = void 0;\n            if (modifiedLine !== 0) {\n                cell.insertAdjacentHTML('beforeend', this._renderLine(modifiedModel, modifiedOpts, modifiedModelOpts.tabSize, modifiedLine));\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                cell.insertAdjacentHTML('beforeend', this._renderLine(originalModel, originalOpts, originalModelOpts.tabSize, originalLine));\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            var ariaLabel = '';\n            switch (type) {\n                case DiffEntryType.Equal:\n                    ariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\n                    break;\n                case DiffEntryType.Insert:\n                    ariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\n                    break;\n                case DiffEntryType.Delete:\n                    ariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    };\n    DiffReview._renderLine = function (model, config, tabSize, lineNumber) {\n        var lineContent = model.getLineContent(lineNumber);\n        var defaultMetadata = ((modes_1.FontStyle.None << modes_1.MetadataConsts.FONT_STYLE_OFFSET)\n            | (modes_1.ColorId.DefaultForeground << modes_1.MetadataConsts.FOREGROUND_OFFSET)\n            | (modes_1.ColorId.DefaultBackground << modes_1.MetadataConsts.BACKGROUND_OFFSET)) >>> 0;\n        var tokens = new Uint32Array(2);\n        tokens[0] = lineContent.length;\n        tokens[1] = defaultMetadata;\n        var lineTokens = new lineTokens_1.LineTokens(tokens, lineContent);\n        var isBasicASCII = viewModel_1.ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        var containsRTL = viewModel_1.ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        var r = viewLineRenderer_1.renderViewLine2(new viewLineRenderer_1.RenderLineInput((config.fontInfo.isMonospace && !config.viewInfo.disableMonospaceOptimizations), config.fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, config.fontInfo.spaceWidth, config.viewInfo.stopRenderingLineAfter, config.viewInfo.renderWhitespace, config.viewInfo.renderControlCharacters, config.viewInfo.fontLigatures));\n        return r.html;\n    };\n    return DiffReview;\n}(lifecycle_1.Disposable));\nexports.DiffReview = DiffReview;\n// theming\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var lineNumbers = theme.getColor(editorColorRegistry_1.editorLineNumbers);\n    if (lineNumbers) {\n        collector.addRule(\".monaco-diff-editor .diff-review-line-number { color: \" + lineNumbers + \"; }\");\n    }\n    var shadow = theme.getColor(colorRegistry_1.scrollbarShadow);\n    if (shadow) {\n        collector.addRule(\".monaco-diff-editor .diff-review-shadow { box-shadow: \" + shadow + \" 0 -6px 6px -6px inset; }\");\n    }\n});\nvar DiffReviewNext = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffReviewNext, _super);\n    function DiffReviewNext() {\n        return _super.call(this, {\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: contextkey_1.ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: keyCodes_1.KeyCode.F7,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    DiffReviewNext.prototype.run = function (accessor, editor) {\n        var diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewNext();\n        }\n    };\n    return DiffReviewNext;\n}(editorExtensions_1.EditorAction));\nvar DiffReviewPrev = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffReviewPrev, _super);\n    function DiffReviewPrev() {\n        return _super.call(this, {\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: contextkey_1.ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F7,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    DiffReviewPrev.prototype.run = function (accessor, editor) {\n        var diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewPrev();\n        }\n    };\n    return DiffReviewPrev;\n}(editorExtensions_1.EditorAction));\nfunction findFocusedDiffEditor(accessor) {\n    var codeEditorService = accessor.get(codeEditorService_1.ICodeEditorService);\n    var diffEditors = codeEditorService.listDiffEditors();\n    for (var i = 0, len = diffEditors.length; i < len; i++) {\n        var diffEditor = diffEditors[i];\n        if (diffEditor.hasWidgetFocus()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\neditorExtensions_1.registerEditorAction(DiffReviewNext);\neditorExtensions_1.registerEditorAction(DiffReviewPrev);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffReview.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/widget/diffReview.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/diffReview';\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { FastDomNode, createFastDomNode } from 'vs/base/browser/fastDomNode';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { Action } from 'vs/base/common/actions';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Configuration } from 'vs/editor/browser/config/configuration';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction } from 'vs/editor/browser/editorExtensions';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { DiffEditorWidget } from 'vs/editor/browser/widget/diffEditorWidget';\nimport * as editorOptions from 'vs/editor/common/config/editorOptions';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ILineChange, ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel, TextModelResolvedOptions } from 'vs/editor/common/model';\nimport { ColorId, FontStyle, MetadataConsts } from 'vs/editor/common/modes';\nimport { editorLineNumbers } from 'vs/editor/common/view/editorColorRegistry';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from 'vs/editor/common/viewLayout/viewLineRenderer';\nimport { ViewLineRenderingData } from 'vs/editor/common/viewModel/viewModel';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { scrollbarShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\nconst DIFF_LINES_PADDING = 3;\n\nconst enum DiffEntryType {\n\tEqual = 0,\n\tInsert = 1,\n\tDelete = 2\n}\n\nclass DiffEntry {\n\treadonly originalLineStart: number;\n\treadonly originalLineEnd: number;\n\treadonly modifiedLineStart: number;\n\treadonly modifiedLineEnd: number;\n\n\tconstructor(originalLineStart: number, originalLineEnd: number, modifiedLineStart: number, modifiedLineEnd: number) {\n\t\tthis.originalLineStart = originalLineStart;\n\t\tthis.originalLineEnd = originalLineEnd;\n\t\tthis.modifiedLineStart = modifiedLineStart;\n\t\tthis.modifiedLineEnd = modifiedLineEnd;\n\t}\n\n\tpublic getType(): DiffEntryType {\n\t\tif (this.originalLineStart === 0) {\n\t\t\treturn DiffEntryType.Insert;\n\t\t}\n\t\tif (this.modifiedLineStart === 0) {\n\t\t\treturn DiffEntryType.Delete;\n\t\t}\n\t\treturn DiffEntryType.Equal;\n\t}\n}\n\nclass Diff {\n\treadonly entries: DiffEntry[];\n\n\tconstructor(entries: DiffEntry[]) {\n\t\tthis.entries = entries;\n\t}\n}\n\nexport class DiffReview extends Disposable {\n\n\tprivate readonly _diffEditor: DiffEditorWidget;\n\tprivate _isVisible: boolean;\n\tpublic readonly shadow: FastDomNode<HTMLElement>;\n\tprivate readonly _actionBar: ActionBar;\n\tpublic readonly actionBarContainer: FastDomNode<HTMLElement>;\n\tpublic readonly domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _content: FastDomNode<HTMLElement>;\n\tprivate readonly scrollbar: DomScrollableElement;\n\tprivate _diffs: Diff[];\n\tprivate _currentDiff: Diff | null;\n\n\tconstructor(diffEditor: DiffEditorWidget) {\n\t\tsuper();\n\t\tthis._diffEditor = diffEditor;\n\t\tthis._isVisible = false;\n\n\t\tthis.shadow = createFastDomNode(document.createElement('div'));\n\t\tthis.shadow.setClassName('diff-review-shadow');\n\n\t\tthis.actionBarContainer = createFastDomNode(document.createElement('div'));\n\t\tthis.actionBarContainer.setClassName('diff-review-actions');\n\t\tthis._actionBar = this._register(new ActionBar(\n\t\t\tthis.actionBarContainer.domNode\n\t\t));\n\n\t\tthis._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review', true, () => {\n\t\t\tthis.hide();\n\t\t\treturn Promise.resolve(null);\n\t\t}), { label: false, icon: true });\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName('diff-review monaco-editor-background');\n\n\t\tthis._content = createFastDomNode(document.createElement('div'));\n\t\tthis._content.setClassName('diff-review-content');\n\t\tthis.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n\t\tthis.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n\n\t\tthis._register(diffEditor.onDidUpdateDiff(() => {\n\t\t\tif (!this._isVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._diffs = this._compute();\n\t\t\tthis._render();\n\t\t}));\n\t\tthis._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n\t\t\tif (!this._isVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._render();\n\t\t}));\n\t\tthis._register(diffEditor.getOriginalEditor().onDidFocusEditorWidget(() => {\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis._register(diffEditor.getModifiedEditor().onDidFocusEditorWidget(() => {\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tlet row = dom.findParentWithClass(e.target, 'diff-review-row');\n\t\t\tif (row) {\n\t\t\t\tthis._goToRow(row);\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.DownArrow)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.DownArrow)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.DownArrow)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._goToRow(this._getNextRow());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.UpArrow)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.UpArrow)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.UpArrow)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._goToRow(this._getPrevRow());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.CtrlCmd | KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.Alt | KeyCode.Escape)\n\t\t\t\t|| e.equals(KeyMod.Shift | KeyCode.Escape)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.hide();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\te.equals(KeyCode.Space)\n\t\t\t\t|| e.equals(KeyCode.Enter)\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.accept();\n\t\t\t}\n\t\t}));\n\t\tthis._diffs = [];\n\t\tthis._currentDiff = null;\n\t}\n\n\tpublic prev(): void {\n\t\tlet index = 0;\n\n\t\tif (!this._isVisible) {\n\t\t\tthis._diffs = this._compute();\n\t\t}\n\n\t\tif (this._isVisible) {\n\t\t\tlet currentIndex = -1;\n\t\t\tfor (let i = 0, len = this._diffs.length; i < len; i++) {\n\t\t\t\tif (this._diffs[i] === this._currentDiff) {\n\t\t\t\t\tcurrentIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex = (this._diffs.length + currentIndex - 1);\n\t\t} else {\n\t\t\tindex = this._findDiffIndex(this._diffEditor.getPosition()!);\n\t\t}\n\n\t\tif (this._diffs.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tindex = index % this._diffs.length;\n\t\tthis._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n\t\tthis._isVisible = true;\n\t\tthis._diffEditor.doLayout();\n\t\tthis._render();\n\t\tthis._goToRow(this._getNextRow());\n\t}\n\n\tpublic next(): void {\n\t\tlet index = 0;\n\n\t\tif (!this._isVisible) {\n\t\t\tthis._diffs = this._compute();\n\t\t}\n\n\t\tif (this._isVisible) {\n\t\t\tlet currentIndex = -1;\n\t\t\tfor (let i = 0, len = this._diffs.length; i < len; i++) {\n\t\t\t\tif (this._diffs[i] === this._currentDiff) {\n\t\t\t\t\tcurrentIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex = (currentIndex + 1);\n\t\t} else {\n\t\t\tindex = this._findDiffIndex(this._diffEditor.getPosition()!);\n\t\t}\n\n\t\tif (this._diffs.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tindex = index % this._diffs.length;\n\t\tthis._diffEditor.setPosition(new Position(this._diffs[index].entries[0].modifiedLineStart, 1));\n\t\tthis._isVisible = true;\n\t\tthis._diffEditor.doLayout();\n\t\tthis._render();\n\t\tthis._goToRow(this._getNextRow());\n\t}\n\n\tprivate accept(): void {\n\t\tlet jumpToLineNumber = -1;\n\t\tlet current = this._getCurrentFocusedRow();\n\t\tif (current) {\n\t\t\tlet lineNumber = parseInt(current.getAttribute('data-line')!, 10);\n\t\t\tif (!isNaN(lineNumber)) {\n\t\t\t\tjumpToLineNumber = lineNumber;\n\t\t\t}\n\t\t}\n\t\tthis.hide();\n\n\t\tif (jumpToLineNumber !== -1) {\n\t\t\tthis._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n\t\t\tthis._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), ScrollType.Immediate);\n\t\t}\n\t}\n\n\tprivate hide(): void {\n\t\tthis._isVisible = false;\n\t\tthis._diffEditor.focus();\n\t\tthis._diffEditor.doLayout();\n\t\tthis._render();\n\t}\n\n\tprivate _getPrevRow(): HTMLElement {\n\t\tlet current = this._getCurrentFocusedRow();\n\t\tif (!current) {\n\t\t\treturn this._getFirstRow();\n\t\t}\n\t\tif (current.previousElementSibling) {\n\t\t\treturn <HTMLElement>current.previousElementSibling;\n\t\t}\n\t\treturn current;\n\t}\n\n\tprivate _getNextRow(): HTMLElement {\n\t\tlet current = this._getCurrentFocusedRow();\n\t\tif (!current) {\n\t\t\treturn this._getFirstRow();\n\t\t}\n\t\tif (current.nextElementSibling) {\n\t\t\treturn <HTMLElement>current.nextElementSibling;\n\t\t}\n\t\treturn current;\n\t}\n\n\tprivate _getFirstRow(): HTMLElement {\n\t\treturn <HTMLElement>this.domNode.domNode.querySelector('.diff-review-row');\n\t}\n\n\tprivate _getCurrentFocusedRow(): HTMLElement | null {\n\t\tlet result = <HTMLElement>document.activeElement;\n\t\tif (result && /diff-review-row/.test(result.className)) {\n\t\t\treturn result;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _goToRow(row: HTMLElement): void {\n\t\tlet prev = this._getCurrentFocusedRow();\n\t\trow.tabIndex = 0;\n\t\trow.focus();\n\t\tif (prev && prev !== row) {\n\t\t\tprev.tabIndex = -1;\n\t\t}\n\t\tthis.scrollbar.scanDomNode();\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tprivate _width: number = 0;\n\n\tpublic layout(top: number, width: number, height: number): void {\n\t\tthis._width = width;\n\t\tthis.shadow.setTop(top - 6);\n\t\tthis.shadow.setWidth(width);\n\t\tthis.shadow.setHeight(this._isVisible ? 6 : 0);\n\t\tthis.domNode.setTop(top);\n\t\tthis.domNode.setWidth(width);\n\t\tthis.domNode.setHeight(height);\n\t\tthis._content.setHeight(height);\n\t\tthis._content.setWidth(width);\n\n\t\tif (this._isVisible) {\n\t\t\tthis.actionBarContainer.setAttribute('aria-hidden', 'false');\n\t\t\tthis.actionBarContainer.setDisplay('block');\n\t\t} else {\n\t\t\tthis.actionBarContainer.setAttribute('aria-hidden', 'true');\n\t\t\tthis.actionBarContainer.setDisplay('none');\n\t\t}\n\t}\n\n\tprivate _compute(): Diff[] {\n\t\tconst lineChanges = this._diffEditor.getLineChanges();\n\t\tif (!lineChanges || lineChanges.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\tconst originalModel = this._diffEditor.getOriginalEditor().getModel();\n\t\tconst modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n\n\t\tif (!originalModel || !modifiedModel) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n\t}\n\n\tprivate static _mergeAdjacent(lineChanges: ILineChange[], originalLineCount: number, modifiedLineCount: number): Diff[] {\n\t\tif (!lineChanges || lineChanges.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet diffs: Diff[] = [], diffsLength = 0;\n\n\t\tfor (let i = 0, len = lineChanges.length; i < len; i++) {\n\t\t\tconst lineChange = lineChanges[i];\n\n\t\t\tconst originalStart = lineChange.originalStartLineNumber;\n\t\t\tconst originalEnd = lineChange.originalEndLineNumber;\n\t\t\tconst modifiedStart = lineChange.modifiedStartLineNumber;\n\t\t\tconst modifiedEnd = lineChange.modifiedEndLineNumber;\n\n\t\t\tlet r: DiffEntry[] = [], rLength = 0;\n\n\t\t\t// Emit before anchors\n\t\t\t{\n\t\t\t\tconst originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n\t\t\t\tconst modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n\n\t\t\t\t// Make sure we don't step into the previous diff\n\t\t\t\tlet minOriginal = 1;\n\t\t\t\tlet minModified = 1;\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst prevLineChange = lineChanges[i - 1];\n\n\t\t\t\t\tif (prevLineChange.originalEndLineNumber === 0) {\n\t\t\t\t\t\tminOriginal = prevLineChange.originalStartLineNumber + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminOriginal = prevLineChange.originalEndLineNumber + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prevLineChange.modifiedEndLineNumber === 0) {\n\t\t\t\t\t\tminModified = prevLineChange.modifiedStartLineNumber + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminModified = prevLineChange.modifiedEndLineNumber + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n\t\t\t\tlet fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n\t\t\t\tif (fromOriginal < minOriginal) {\n\t\t\t\t\tconst delta = minOriginal - fromOriginal;\n\t\t\t\t\tfromOriginal = fromOriginal + delta;\n\t\t\t\t\tfromModified = fromModified + delta;\n\t\t\t\t}\n\t\t\t\tif (fromModified < minModified) {\n\t\t\t\t\tconst delta = minModified - fromModified;\n\t\t\t\t\tfromOriginal = fromOriginal + delta;\n\t\t\t\t\tfromModified = fromModified + delta;\n\t\t\t\t}\n\n\t\t\t\tr[rLength++] = new DiffEntry(\n\t\t\t\t\tfromOriginal, originalEqualAbove,\n\t\t\t\t\tfromModified, modifiedEqualAbove\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Emit deleted lines\n\t\t\t{\n\t\t\t\tif (originalEnd !== 0) {\n\t\t\t\t\tr[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Emit inserted lines\n\t\t\t{\n\t\t\t\tif (modifiedEnd !== 0) {\n\t\t\t\t\tr[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Emit after anchors\n\t\t\t{\n\t\t\t\tconst originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n\t\t\t\tconst modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n\n\t\t\t\t// Make sure we don't step into the next diff\n\t\t\t\tlet maxOriginal = originalLineCount;\n\t\t\t\tlet maxModified = modifiedLineCount;\n\t\t\t\tif (i + 1 < len) {\n\t\t\t\t\tconst nextLineChange = lineChanges[i + 1];\n\n\t\t\t\t\tif (nextLineChange.originalEndLineNumber === 0) {\n\t\t\t\t\t\tmaxOriginal = nextLineChange.originalStartLineNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmaxOriginal = nextLineChange.originalStartLineNumber - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nextLineChange.modifiedEndLineNumber === 0) {\n\t\t\t\t\t\tmaxModified = nextLineChange.modifiedStartLineNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmaxModified = nextLineChange.modifiedStartLineNumber - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n\t\t\t\tlet toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n\n\t\t\t\tif (toOriginal > maxOriginal) {\n\t\t\t\t\tconst delta = maxOriginal - toOriginal;\n\t\t\t\t\ttoOriginal = toOriginal + delta;\n\t\t\t\t\ttoModified = toModified + delta;\n\t\t\t\t}\n\t\t\t\tif (toModified > maxModified) {\n\t\t\t\t\tconst delta = maxModified - toModified;\n\t\t\t\t\ttoOriginal = toOriginal + delta;\n\t\t\t\t\ttoModified = toModified + delta;\n\t\t\t\t}\n\n\t\t\t\tr[rLength++] = new DiffEntry(\n\t\t\t\t\toriginalEqualBelow, toOriginal,\n\t\t\t\t\tmodifiedEqualBelow, toModified,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdiffs[diffsLength++] = new Diff(r);\n\t\t}\n\n\t\t// Merge adjacent diffs\n\t\tlet curr: DiffEntry[] = diffs[0].entries;\n\t\tlet r: Diff[] = [], rLength = 0;\n\t\tfor (let i = 1, len = diffs.length; i < len; i++) {\n\t\t\tconst thisDiff = diffs[i].entries;\n\n\t\t\tconst currLast = curr[curr.length - 1];\n\t\t\tconst thisFirst = thisDiff[0];\n\n\t\t\tif (\n\t\t\t\tcurrLast.getType() === DiffEntryType.Equal\n\t\t\t\t&& thisFirst.getType() === DiffEntryType.Equal\n\t\t\t\t&& thisFirst.originalLineStart <= currLast.originalLineEnd\n\t\t\t) {\n\t\t\t\t// We are dealing with equal lines that overlap\n\n\t\t\t\tcurr[curr.length - 1] = new DiffEntry(\n\t\t\t\t\tcurrLast.originalLineStart, thisFirst.originalLineEnd,\n\t\t\t\t\tcurrLast.modifiedLineStart, thisFirst.modifiedLineEnd\n\t\t\t\t);\n\t\t\t\tcurr = curr.concat(thisDiff.slice(1));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tr[rLength++] = new Diff(curr);\n\t\t\tcurr = thisDiff;\n\t\t}\n\t\tr[rLength++] = new Diff(curr);\n\t\treturn r;\n\t}\n\n\tprivate _findDiffIndex(pos: Position): number {\n\t\tconst lineNumber = pos.lineNumber;\n\t\tfor (let i = 0, len = this._diffs.length; i < len; i++) {\n\t\t\tconst diff = this._diffs[i].entries;\n\t\t\tconst lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n\t\t\tif (lineNumber <= lastModifiedLine) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate _render(): void {\n\n\t\tconst originalOpts = this._diffEditor.getOriginalEditor().getConfiguration();\n\t\tconst modifiedOpts = this._diffEditor.getModifiedEditor().getConfiguration();\n\n\t\tconst originalModel = this._diffEditor.getOriginalEditor().getModel();\n\t\tconst modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n\n\t\tconst originalModelOpts = originalModel!.getOptions();\n\t\tconst modifiedModelOpts = modifiedModel!.getOptions();\n\n\t\tif (!this._isVisible || !originalModel || !modifiedModel) {\n\t\t\tdom.clearNode(this._content.domNode);\n\t\t\tthis._currentDiff = null;\n\t\t\tthis.scrollbar.scanDomNode();\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffIndex = this._findDiffIndex(this._diffEditor.getPosition()!);\n\n\t\tif (this._diffs[diffIndex] === this._currentDiff) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentDiff = this._diffs[diffIndex];\n\n\t\tconst diffs = this._diffs[diffIndex].entries;\n\t\tlet container = document.createElement('div');\n\t\tcontainer.className = 'diff-review-table';\n\t\tcontainer.setAttribute('role', 'list');\n\t\tConfiguration.applyFontInfoSlow(container, modifiedOpts.fontInfo);\n\n\t\tlet minOriginalLine = 0;\n\t\tlet maxOriginalLine = 0;\n\t\tlet minModifiedLine = 0;\n\t\tlet maxModifiedLine = 0;\n\t\tfor (let i = 0, len = diffs.length; i < len; i++) {\n\t\t\tconst diffEntry = diffs[i];\n\t\t\tconst originalLineStart = diffEntry.originalLineStart;\n\t\t\tconst originalLineEnd = diffEntry.originalLineEnd;\n\t\t\tconst modifiedLineStart = diffEntry.modifiedLineStart;\n\t\t\tconst modifiedLineEnd = diffEntry.modifiedLineEnd;\n\n\t\t\tif (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n\t\t\t\tminOriginalLine = originalLineStart;\n\t\t\t}\n\t\t\tif (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n\t\t\t\tmaxOriginalLine = originalLineEnd;\n\t\t\t}\n\t\t\tif (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n\t\t\t\tminModifiedLine = modifiedLineStart;\n\t\t\t}\n\t\t\tif (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n\t\t\t\tmaxModifiedLine = modifiedLineEnd;\n\t\t\t}\n\t\t}\n\n\t\tlet header = document.createElement('div');\n\t\theader.className = 'diff-review-row';\n\n\t\tlet cell = document.createElement('div');\n\t\tcell.className = 'diff-review-cell diff-review-summary';\n\t\tconst originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n\t\tconst modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n\t\tcell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n\t\theader.setAttribute('data-line', String(minModifiedLine));\n\n\t\tconst getAriaLines = (lines: number) => {\n\t\t\tif (lines === 0) {\n\t\t\t\treturn nls.localize('no_lines', \"no lines\");\n\t\t\t} else if (lines === 1) {\n\t\t\t\treturn nls.localize('one_line', \"1 line\");\n\t\t\t} else {\n\t\t\t\treturn nls.localize('more_lines', \"{0} lines\", lines);\n\t\t\t}\n\t\t};\n\n\t\tconst originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n\t\tconst modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n\t\theader.setAttribute('aria-label', nls.localize({\n\t\t\tkey: 'header',\n\t\t\tcomment: [\n\t\t\t\t'This is the ARIA label for a git diff header.',\n\t\t\t\t'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n\t\t\t\t'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n\t\t\t\t'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n\t\t\t\t'Variables 2 and 4 will be numbers (a line number).',\n\t\t\t\t'Variables 3 and 5 will be \"no lines\", \"1 line\" or \"X lines\", localized separately.'\n\t\t\t]\n\t\t}, \"Difference {0} of {1}: original {2}, {3}, modified {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n\t\theader.appendChild(cell);\n\n\t\t// @@ -504,7 +517,7 @@\n\t\theader.setAttribute('role', 'listitem');\n\t\tcontainer.appendChild(header);\n\n\t\tlet modLine = minModifiedLine;\n\t\tfor (let i = 0, len = diffs.length; i < len; i++) {\n\t\t\tconst diffEntry = diffs[i];\n\t\t\tDiffReview._renderSection(container, diffEntry, modLine, this._width, originalOpts, originalModel, originalModelOpts, modifiedOpts, modifiedModel, modifiedModelOpts);\n\t\t\tif (diffEntry.modifiedLineStart !== 0) {\n\t\t\t\tmodLine = diffEntry.modifiedLineEnd;\n\t\t\t}\n\t\t}\n\n\t\tdom.clearNode(this._content.domNode);\n\t\tthis._content.domNode.appendChild(container);\n\t\tthis.scrollbar.scanDomNode();\n\t}\n\n\tprivate static _renderSection(\n\t\tdest: HTMLElement, diffEntry: DiffEntry, modLine: number, width: number,\n\t\toriginalOpts: editorOptions.InternalEditorOptions, originalModel: ITextModel, originalModelOpts: TextModelResolvedOptions,\n\t\tmodifiedOpts: editorOptions.InternalEditorOptions, modifiedModel: ITextModel, modifiedModelOpts: TextModelResolvedOptions\n\t): void {\n\n\t\tconst type = diffEntry.getType();\n\n\t\tlet rowClassName: string = 'diff-review-row';\n\t\tlet lineNumbersExtraClassName: string = '';\n\t\tlet spacerClassName: string = 'diff-review-spacer';\n\t\tswitch (type) {\n\t\t\tcase DiffEntryType.Insert:\n\t\t\t\trowClassName = 'diff-review-row line-insert';\n\t\t\t\tlineNumbersExtraClassName = ' char-insert';\n\t\t\t\tspacerClassName = 'diff-review-spacer insert-sign';\n\t\t\t\tbreak;\n\t\t\tcase DiffEntryType.Delete:\n\t\t\t\trowClassName = 'diff-review-row line-delete';\n\t\t\t\tlineNumbersExtraClassName = ' char-delete';\n\t\t\t\tspacerClassName = 'diff-review-spacer delete-sign';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst originalLineStart = diffEntry.originalLineStart;\n\t\tconst originalLineEnd = diffEntry.originalLineEnd;\n\t\tconst modifiedLineStart = diffEntry.modifiedLineStart;\n\t\tconst modifiedLineEnd = diffEntry.modifiedLineEnd;\n\n\t\tconst cnt = Math.max(\n\t\t\tmodifiedLineEnd - modifiedLineStart,\n\t\t\toriginalLineEnd - originalLineStart\n\t\t);\n\n\t\tconst originalLineNumbersWidth = originalOpts.layoutInfo.glyphMarginWidth + originalOpts.layoutInfo.lineNumbersWidth;\n\t\tconst modifiedLineNumbersWidth = 10 + modifiedOpts.layoutInfo.glyphMarginWidth + modifiedOpts.layoutInfo.lineNumbersWidth;\n\n\t\tfor (let i = 0; i <= cnt; i++) {\n\t\t\tconst originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n\t\t\tconst modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.style.minWidth = width + 'px';\n\t\t\trow.className = rowClassName;\n\t\t\trow.setAttribute('role', 'listitem');\n\t\t\tif (modifiedLine !== 0) {\n\t\t\t\tmodLine = modifiedLine;\n\t\t\t}\n\t\t\trow.setAttribute('data-line', String(modLine));\n\n\t\t\tlet cell = document.createElement('div');\n\t\t\tcell.className = 'diff-review-cell';\n\t\t\trow.appendChild(cell);\n\n\t\t\tconst originalLineNumber = document.createElement('span');\n\t\t\toriginalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n\t\t\toriginalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n\t\t\toriginalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\t\t\tif (originalLine !== 0) {\n\t\t\t\toriginalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n\t\t\t} else {\n\t\t\t\toriginalLineNumber.innerHTML = '&nbsp;';\n\t\t\t}\n\t\t\tcell.appendChild(originalLineNumber);\n\n\t\t\tconst modifiedLineNumber = document.createElement('span');\n\t\t\tmodifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n\t\t\tmodifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n\t\t\tmodifiedLineNumber.style.paddingRight = '10px';\n\t\t\tmodifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n\t\t\tif (modifiedLine !== 0) {\n\t\t\t\tmodifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n\t\t\t} else {\n\t\t\t\tmodifiedLineNumber.innerHTML = '&nbsp;';\n\t\t\t}\n\t\t\tcell.appendChild(modifiedLineNumber);\n\n\t\t\tconst spacer = document.createElement('span');\n\t\t\tspacer.className = spacerClassName;\n\t\t\tspacer.innerHTML = '&nbsp;&nbsp;';\n\t\t\tcell.appendChild(spacer);\n\n\t\t\tlet lineContent: string;\n\t\t\tif (modifiedLine !== 0) {\n\t\t\t\tcell.insertAdjacentHTML('beforeend',\n\t\t\t\t\tthis._renderLine(modifiedModel, modifiedOpts, modifiedModelOpts.tabSize, modifiedLine)\n\t\t\t\t);\n\t\t\t\tlineContent = modifiedModel.getLineContent(modifiedLine);\n\t\t\t} else {\n\t\t\t\tcell.insertAdjacentHTML('beforeend',\n\t\t\t\t\tthis._renderLine(originalModel, originalOpts, originalModelOpts.tabSize, originalLine)\n\t\t\t\t);\n\t\t\t\tlineContent = originalModel.getLineContent(originalLine);\n\t\t\t}\n\n\t\t\tif (lineContent.length === 0) {\n\t\t\t\tlineContent = nls.localize('blankLine', \"blank\");\n\t\t\t}\n\n\t\t\tlet ariaLabel: string = '';\n\t\t\tswitch (type) {\n\t\t\t\tcase DiffEntryType.Equal:\n\t\t\t\t\tariaLabel = nls.localize('equalLine', \"original {0}, modified {1}: {2}\", originalLine, modifiedLine, lineContent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DiffEntryType.Insert:\n\t\t\t\t\tariaLabel = nls.localize('insertLine', \"+ modified {0}: {1}\", modifiedLine, lineContent);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DiffEntryType.Delete:\n\t\t\t\t\tariaLabel = nls.localize('deleteLine', \"- original {0}: {1}\", originalLine, lineContent);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\trow.setAttribute('aria-label', ariaLabel);\n\n\t\t\tdest.appendChild(row);\n\t\t}\n\t}\n\n\tprivate static _renderLine(model: ITextModel, config: editorOptions.InternalEditorOptions, tabSize: number, lineNumber: number): string {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\n\t\tconst defaultMetadata = (\n\t\t\t(FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t\t) >>> 0;\n\n\t\tconst tokens = new Uint32Array(2);\n\t\ttokens[0] = lineContent.length;\n\t\ttokens[1] = defaultMetadata;\n\n\t\tconst lineTokens = new LineTokens(tokens, lineContent);\n\n\t\tconst isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n\t\tconst containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n\t\tconst r = renderViewLine(new RenderLineInput(\n\t\t\t(config.fontInfo.isMonospace && !config.viewInfo.disableMonospaceOptimizations),\n\t\t\tconfig.fontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tlineContent,\n\t\t\tfalse,\n\t\t\tisBasicASCII,\n\t\t\tcontainsRTL,\n\t\t\t0,\n\t\t\tlineTokens,\n\t\t\t[],\n\t\t\ttabSize,\n\t\t\tconfig.fontInfo.spaceWidth,\n\t\t\tconfig.viewInfo.stopRenderingLineAfter,\n\t\t\tconfig.viewInfo.renderWhitespace,\n\t\t\tconfig.viewInfo.renderControlCharacters,\n\t\t\tconfig.viewInfo.fontLigatures\n\t\t));\n\n\t\treturn r.html;\n\t}\n}\n\n// theming\n\nregisterThemingParticipant((theme, collector) => {\n\tconst lineNumbers = theme.getColor(editorLineNumbers);\n\tif (lineNumbers) {\n\t\tcollector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\n\t}\n\n\tconst shadow = theme.getColor(scrollbarShadow);\n\tif (shadow) {\n\t\tcollector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\n\t}\n});\n\nclass DiffReviewNext extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.diffReview.next',\n\t\t\tlabel: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n\t\t\talias: 'Go to Next Difference',\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor) {\n\t\t\tdiffEditor.diffReviewNext();\n\t\t}\n\t}\n}\n\nclass DiffReviewPrev extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.diffReview.prev',\n\t\t\tlabel: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n\t\t\talias: 'Go to Previous Difference',\n\t\t\tprecondition: ContextKeyExpr.has('isInDiffEditor'),\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: null,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F7,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst diffEditor = findFocusedDiffEditor(accessor);\n\t\tif (diffEditor) {\n\t\t\tdiffEditor.diffReviewPrev();\n\t\t}\n\t}\n}\n\nfunction findFocusedDiffEditor(accessor: ServicesAccessor): DiffEditorWidget | null {\n\tconst codeEditorService = accessor.get(ICodeEditorService);\n\tconst diffEditors = codeEditorService.listDiffEditors();\n\tfor (let i = 0, len = diffEditors.length; i < len; i++) {\n\t\tconst diffEditor = <DiffEditorWidget>diffEditors[i];\n\t\tif (diffEditor.hasWidgetFocus()) {\n\t\t\treturn diffEditor;\n\t\t}\n\t}\n\treturn null;\n}\n\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n"]}]}