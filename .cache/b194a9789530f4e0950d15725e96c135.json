{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar event_1 = require(\"vs/base/common/event\");\nvar baseEditor_1 = require(\"vs/workbench/browser/parts/editor/baseEditor\");\nvar binaryEditorModel_1 = require(\"vs/workbench/common/editor/binaryEditorModel\");\nvar scrollableElement_1 = require(\"vs/base/browser/ui/scrollbar/scrollableElement\");\nvar scrollable_1 = require(\"vs/base/common/scrollable\");\nvar resourceViewer_1 = require(\"vs/workbench/browser/parts/editor/resourceViewer\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\n/*\n * This class is only intended to be subclassed and not instantiated.\n */\nvar BaseBinaryResourceEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseBinaryResourceEditor, _super);\n    function BaseBinaryResourceEditor(id, callbacks, telemetryService, themeService, _fileService, storageService) {\n        var _this = _super.call(this, id, telemetryService, themeService, storageService) || this;\n        _this._fileService = _fileService;\n        _this._onMetadataChanged = _this._register(new event_1.Emitter());\n        _this._onDidOpenInPlace = _this._register(new event_1.Emitter());\n        _this.callbacks = callbacks;\n        return _this;\n    }\n    Object.defineProperty(BaseBinaryResourceEditor.prototype, \"onMetadataChanged\", {\n        get: function () { return this._onMetadataChanged.event; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseBinaryResourceEditor.prototype, \"onDidOpenInPlace\", {\n        get: function () { return this._onDidOpenInPlace.event; },\n        enumerable: true,\n        configurable: true\n    });\n    BaseBinaryResourceEditor.prototype.getTitle = function () {\n        return this.input ? this.input.getName() : nls.localize('binaryEditor', \"Binary Viewer\");\n    };\n    BaseBinaryResourceEditor.prototype.createEditor = function (parent) {\n        // Container for Binary\n        this.binaryContainer = document.createElement('div');\n        this.binaryContainer.className = 'binary-container';\n        this.binaryContainer.style.outline = 'none';\n        this.binaryContainer.tabIndex = 0; // enable focus support from the editor part (do not remove)\n        // Custom Scrollbars\n        this.scrollbar = this._register(new scrollableElement_1.DomScrollableElement(this.binaryContainer, { horizontal: scrollable_1.ScrollbarVisibility.Auto, vertical: scrollable_1.ScrollbarVisibility.Auto }));\n        parent.appendChild(this.scrollbar.getDomNode());\n    };\n    BaseBinaryResourceEditor.prototype.setInput = function (input, options, token) {\n        var _this = this;\n        return _super.prototype.setInput.call(this, input, options, token).then(function () {\n            return input.resolve().then(function (model) {\n                // Check for cancellation\n                if (token.isCancellationRequested) {\n                    return undefined;\n                }\n                // Assert Model instance\n                if (!(model instanceof binaryEditorModel_1.BinaryEditorModel)) {\n                    return Promise.reject(new Error('Unable to open file as binary'));\n                }\n                // Render Input\n                _this.resourceViewerContext = resourceViewer_1.ResourceViewer.show({ name: model.getName(), resource: model.getResource(), size: model.getSize(), etag: model.getETag(), mime: model.getMime() }, _this._fileService, _this.binaryContainer, _this.scrollbar, function (resource) { return _this.handleOpenInternalCallback(input, options); }, function (resource) { return _this.callbacks.openExternal(resource); }, function (meta) { return _this.handleMetadataChanged(meta); });\n                return undefined;\n            });\n        });\n    };\n    BaseBinaryResourceEditor.prototype.handleOpenInternalCallback = function (input, options) {\n        var _this = this;\n        this.callbacks.openInternal(input, options).then(function () {\n            // Signal to listeners that the binary editor has been opened in-place\n            _this._onDidOpenInPlace.fire();\n        });\n    };\n    BaseBinaryResourceEditor.prototype.handleMetadataChanged = function (meta) {\n        this.metadata = meta;\n        this._onMetadataChanged.fire();\n    };\n    BaseBinaryResourceEditor.prototype.getMetadata = function () {\n        return this.metadata;\n    };\n    BaseBinaryResourceEditor.prototype.clearInput = function () {\n        // Clear Meta\n        this.handleMetadataChanged(undefined);\n        // Clear Resource Viewer\n        dom_1.clearNode(this.binaryContainer);\n        this.resourceViewerContext = lifecycle_1.dispose(this.resourceViewerContext);\n        _super.prototype.clearInput.call(this);\n    };\n    BaseBinaryResourceEditor.prototype.layout = function (dimension) {\n        // Pass on to Binary Container\n        dom_1.size(this.binaryContainer, dimension.width, dimension.height);\n        this.scrollbar.scanDomNode();\n        if (this.resourceViewerContext && this.resourceViewerContext.layout) {\n            this.resourceViewerContext.layout(dimension);\n        }\n    };\n    BaseBinaryResourceEditor.prototype.focus = function () {\n        this.binaryContainer.focus();\n    };\n    BaseBinaryResourceEditor.prototype.dispose = function () {\n        this.binaryContainer.remove();\n        this.resourceViewerContext = lifecycle_1.dispose(this.resourceViewerContext);\n        _super.prototype.dispose.call(this);\n    };\n    BaseBinaryResourceEditor = tslib_1.__decorate([\n        tslib_1.__param(4, files_1.IFileService),\n        tslib_1.__param(5, storage_1.IStorageService)\n    ], BaseBinaryResourceEditor);\n    return BaseBinaryResourceEditor;\n}(baseEditor_1.BaseEditor));\nexports.BaseBinaryResourceEditor = BaseBinaryResourceEditor;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/editor/binaryEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { EditorInput, EditorOptions } from 'vs/workbench/common/editor';\nimport { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';\nimport { BinaryEditorModel } from 'vs/workbench/common/editor/binaryEditorModel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { DomScrollableElement } from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport { ScrollbarVisibility } from 'vs/base/common/scrollable';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ResourceViewerContext, ResourceViewer } from 'vs/workbench/browser/parts/editor/resourceViewer';\nimport { URI } from 'vs/base/common/uri';\nimport { Dimension, size, clearNode } from 'vs/base/browser/dom';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { dispose } from 'vs/base/common/lifecycle';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\n\nexport interface IOpenCallbacks {\n\topenInternal: (input: EditorInput, options: EditorOptions) => Promise<void>;\n\topenExternal: (uri: URI) => void;\n}\n\n/*\n * This class is only intended to be subclassed and not instantiated.\n */\nexport abstract class BaseBinaryResourceEditor extends BaseEditor {\n\n\tprivate readonly _onMetadataChanged: Emitter<void> = this._register(new Emitter<void>());\n\tget onMetadataChanged(): Event<void> { return this._onMetadataChanged.event; }\n\n\tprivate readonly _onDidOpenInPlace: Emitter<void> = this._register(new Emitter<void>());\n\tget onDidOpenInPlace(): Event<void> { return this._onDidOpenInPlace.event; }\n\n\tprivate callbacks: IOpenCallbacks;\n\tprivate metadata: string | undefined;\n\tprivate binaryContainer: HTMLElement;\n\tprivate scrollbar: DomScrollableElement;\n\tprivate resourceViewerContext: ResourceViewerContext;\n\n\tconstructor(\n\t\tid: string,\n\t\tcallbacks: IOpenCallbacks,\n\t\ttelemetryService: ITelemetryService,\n\t\tthemeService: IThemeService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(id, telemetryService, themeService, storageService);\n\n\t\tthis.callbacks = callbacks;\n\t}\n\n\tgetTitle() {\n\t\treturn this.input ? this.input.getName() : nls.localize('binaryEditor', \"Binary Viewer\");\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\n\t\t// Container for Binary\n\t\tthis.binaryContainer = document.createElement('div');\n\t\tthis.binaryContainer.className = 'binary-container';\n\t\tthis.binaryContainer.style.outline = 'none';\n\t\tthis.binaryContainer.tabIndex = 0; // enable focus support from the editor part (do not remove)\n\n\t\t// Custom Scrollbars\n\t\tthis.scrollbar = this._register(new DomScrollableElement(this.binaryContainer, { horizontal: ScrollbarVisibility.Auto, vertical: ScrollbarVisibility.Auto }));\n\t\tparent.appendChild(this.scrollbar.getDomNode());\n\t}\n\n\tsetInput(input: EditorInput, options: EditorOptions, token: CancellationToken): Promise<void> {\n\t\treturn super.setInput(input, options, token).then(() => {\n\t\t\treturn input.resolve().then(model => {\n\n\t\t\t\t// Check for cancellation\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// Assert Model instance\n\t\t\t\tif (!(model instanceof BinaryEditorModel)) {\n\t\t\t\t\treturn Promise.reject(new Error('Unable to open file as binary'));\n\t\t\t\t}\n\n\t\t\t\t// Render Input\n\t\t\t\tthis.resourceViewerContext = ResourceViewer.show(\n\t\t\t\t\t{ name: model.getName(), resource: model.getResource(), size: model.getSize(), etag: model.getETag(), mime: model.getMime() },\n\t\t\t\t\tthis._fileService,\n\t\t\t\t\tthis.binaryContainer,\n\t\t\t\t\tthis.scrollbar,\n\t\t\t\t\tresource => this.handleOpenInternalCallback(input, options),\n\t\t\t\t\tresource => this.callbacks.openExternal(resource),\n\t\t\t\t\tmeta => this.handleMetadataChanged(meta)\n\t\t\t\t);\n\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate handleOpenInternalCallback(input: EditorInput, options: EditorOptions) {\n\t\tthis.callbacks.openInternal(input, options).then(() => {\n\n\t\t\t// Signal to listeners that the binary editor has been opened in-place\n\t\t\tthis._onDidOpenInPlace.fire();\n\t\t});\n\t}\n\n\tprivate handleMetadataChanged(meta: string | undefined): void {\n\t\tthis.metadata = meta;\n\n\t\tthis._onMetadataChanged.fire();\n\t}\n\n\tgetMetadata(): string | undefined {\n\t\treturn this.metadata;\n\t}\n\n\tclearInput(): void {\n\n\t\t// Clear Meta\n\t\tthis.handleMetadataChanged(undefined);\n\n\t\t// Clear Resource Viewer\n\t\tclearNode(this.binaryContainer);\n\t\tthis.resourceViewerContext = dispose(this.resourceViewerContext);\n\n\t\tsuper.clearInput();\n\t}\n\n\tlayout(dimension: Dimension): void {\n\n\t\t// Pass on to Binary Container\n\t\tsize(this.binaryContainer, dimension.width, dimension.height);\n\t\tthis.scrollbar.scanDomNode();\n\t\tif (this.resourceViewerContext && this.resourceViewerContext.layout) {\n\t\t\tthis.resourceViewerContext.layout(dimension);\n\t\t}\n\t}\n\n\tfocus(): void {\n\t\tthis.binaryContainer.focus();\n\t}\n\n\tdispose(): void {\n\t\tthis.binaryContainer.remove();\n\n\t\tthis.resourceViewerContext = dispose(this.resourceViewerContext);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}]}