{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/outline/browser/outlinePanel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/outline/browser/outlinePanel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar progressbar_1 = require(\"vs/base/browser/ui/progressbar/progressbar\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar event_1 = require(\"vs/base/common/event\");\nvar idGenerator_1 = require(\"vs/base/common/idGenerator\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar map_1 = require(\"vs/base/common/map\");\nvar strings_1 = require(\"vs/base/common/strings\");\nrequire(\"vs/css!./outlinePanel\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar outlineModel_1 = require(\"vs/editor/contrib/documentSymbols/outlineModel\");\nvar nls_1 = require(\"vs/nls\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar viewlet_1 = require(\"vs/workbench/browser/viewlet\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar outline_1 = require(\"vs/editor/contrib/documentSymbols/outline\");\nvar outlineTree_1 = require(\"vs/editor/contrib/documentSymbols/outlineTree\");\nvar mouseEvent_1 = require(\"vs/base/browser/mouseEvent\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar markersDecorationService_1 = require(\"vs/editor/common/services/markersDecorationService\");\nvar markers_1 = require(\"vs/platform/markers/common/markers\");\nvar RequestState = /** @class */ (function () {\n    function RequestState(_editorId, _modelId, _modelVersion, _providerCount) {\n        this._editorId = _editorId;\n        this._modelId = _modelId;\n        this._modelVersion = _modelVersion;\n        this._providerCount = _providerCount;\n        //\n    }\n    RequestState.prototype.equals = function (other) {\n        return other\n            && this._editorId === other._editorId\n            && this._modelId === other._modelId\n            && this._modelVersion === other._modelVersion\n            && this._providerCount === other._providerCount;\n    };\n    return RequestState;\n}());\nvar RequestOracle = /** @class */ (function () {\n    function RequestOracle(_callback, _featureRegistry, _editorService) {\n        this._callback = _callback;\n        this._featureRegistry = _featureRegistry;\n        this._editorService = _editorService;\n        this._disposables = new Array();\n        _editorService.onDidActiveEditorChange(this._update, this, this._disposables);\n        _featureRegistry.onDidChange(this._update, this, this._disposables);\n        this._update();\n    }\n    RequestOracle.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        lifecycle_1.dispose(this._sessionDisposable);\n    };\n    RequestOracle.prototype._update = function () {\n        var _this = this;\n        var widget = this._editorService.activeTextEditorWidget;\n        var codeEditor = undefined;\n        if (editorBrowser_1.isCodeEditor(widget)) {\n            codeEditor = widget;\n        }\n        else if (editorBrowser_1.isDiffEditor(widget)) {\n            codeEditor = widget.getModifiedEditor();\n        }\n        if (!codeEditor || !codeEditor.hasModel()) {\n            this._lastState = undefined;\n            this._callback(undefined, undefined);\n            return;\n        }\n        var thisState = new RequestState(codeEditor.getId(), codeEditor.getModel().id, codeEditor.getModel().getVersionId(), this._featureRegistry.all(codeEditor.getModel()).length);\n        if (this._lastState && thisState.equals(this._lastState)) {\n            // prevent unneccesary changes...\n            return;\n        }\n        lifecycle_1.dispose(this._sessionDisposable);\n        this._lastState = thisState;\n        this._callback(codeEditor, undefined);\n        var handle;\n        var contentListener = codeEditor.onDidChangeModelContent(function (event) {\n            clearTimeout(handle);\n            handle = setTimeout(function () { return _this._callback(codeEditor, event); }, 350);\n        });\n        var modeListener = codeEditor.onDidChangeModelLanguage(function (_) {\n            _this._callback(codeEditor, undefined);\n        });\n        var disposeListener = codeEditor.onDidDispose(function () {\n            _this._callback(undefined, undefined);\n        });\n        this._sessionDisposable = {\n            dispose: function () {\n                contentListener.dispose();\n                clearTimeout(handle);\n                modeListener.dispose();\n                disposeListener.dispose();\n            }\n        };\n    };\n    RequestOracle = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService)\n    ], RequestOracle);\n    return RequestOracle;\n}());\nvar SimpleToggleAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SimpleToggleAction, _super);\n    function SimpleToggleAction(state, label, isChecked, callback, className) {\n        var _this = _super.call(this, \"simple\" + idGenerator_1.defaultGenerator.nextId(), label, className, true, function () {\n            _this.checked = !_this.checked;\n            callback(_this);\n            return Promise.resolve();\n        }) || this;\n        _this.checked = isChecked();\n        _this._listener = state.onDidChange(function () { return _this.checked = isChecked(); });\n        return _this;\n    }\n    SimpleToggleAction.prototype.dispose = function () {\n        this._listener.dispose();\n        _super.prototype.dispose.call(this);\n    };\n    return SimpleToggleAction;\n}(actions_1.Action));\nvar OutlineViewState = /** @class */ (function () {\n    function OutlineViewState() {\n        this._followCursor = false;\n        this._filterOnType = true;\n        this._sortBy = outlineTree_1.OutlineSortOrder.ByKind;\n        this._onDidChange = new event_1.Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    Object.defineProperty(OutlineViewState.prototype, \"followCursor\", {\n        get: function () {\n            return this._followCursor;\n        },\n        set: function (value) {\n            if (value !== this._followCursor) {\n                this._followCursor = value;\n                this._onDidChange.fire({ followCursor: true });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OutlineViewState.prototype, \"filterOnType\", {\n        get: function () {\n            return this._filterOnType;\n        },\n        set: function (value) {\n            if (value !== this._filterOnType) {\n                this._filterOnType = value;\n                this._onDidChange.fire({ filterOnType: true });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OutlineViewState.prototype, \"sortBy\", {\n        get: function () {\n            return this._sortBy;\n        },\n        set: function (value) {\n            if (value !== this._sortBy) {\n                this._sortBy = value;\n                this._onDidChange.fire({ sortBy: true });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OutlineViewState.prototype.persist = function (storageService) {\n        storageService.store('outline/state', JSON.stringify({\n            followCursor: this.followCursor,\n            sortBy: this.sortBy,\n            filterOnType: this.filterOnType,\n        }), storage_1.StorageScope.WORKSPACE);\n    };\n    OutlineViewState.prototype.restore = function (storageService) {\n        var raw = storageService.get('outline/state', storage_1.StorageScope.WORKSPACE);\n        if (!raw) {\n            return;\n        }\n        var data;\n        try {\n            data = JSON.parse(raw);\n        }\n        catch (e) {\n            return;\n        }\n        this.followCursor = data.followCursor;\n        this.sortBy = data.sortBy;\n        if (typeof data.filterOnType === 'boolean') {\n            this.filterOnType = data.filterOnType;\n        }\n    };\n    return OutlineViewState;\n}());\nvar OutlinePanel = /** @class */ (function (_super) {\n    tslib_1.__extends(OutlinePanel, _super);\n    function OutlinePanel(options, _instantiationService, _themeService, _storageService, _editorService, _markerDecorationService, _configurationService, keybindingService, configurationService, contextKeyService, contextMenuService) {\n        var _this = _super.call(this, options, keybindingService, contextMenuService, configurationService) || this;\n        _this._instantiationService = _instantiationService;\n        _this._themeService = _themeService;\n        _this._storageService = _storageService;\n        _this._editorService = _editorService;\n        _this._markerDecorationService = _markerDecorationService;\n        _this._configurationService = _configurationService;\n        _this._disposables = new Array();\n        _this._editorDisposables = new Array();\n        _this._outlineViewState = new OutlineViewState();\n        _this._treeStates = new map_1.LRUCache(10);\n        _this._treeFakeUIEvent = new UIEvent('me');\n        _this._outlineViewState.restore(_this._storageService);\n        _this._contextKeyFocused = outline_1.OutlineViewFocused.bindTo(contextKeyService);\n        _this._contextKeyFiltered = outline_1.OutlineViewFiltered.bindTo(contextKeyService);\n        _this._disposables.push(_this.onDidFocus(function (_) { return _this._contextKeyFocused.set(true); }));\n        _this._disposables.push(_this.onDidBlur(function (_) { return _this._contextKeyFocused.set(false); }));\n        return _this;\n    }\n    OutlinePanel.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        lifecycle_1.dispose(this._requestOracle);\n        lifecycle_1.dispose(this._editorDisposables);\n        _super.prototype.dispose.call(this);\n    };\n    OutlinePanel.prototype.focus = function () {\n        if (this._tree) {\n            // focus on tree and fallback to root\n            // dom node when the tree cannot take focus,\n            // e.g. when hidden\n            this._tree.domFocus();\n            if (!this._tree.isDOMFocused()) {\n                this._domNode.focus();\n            }\n        }\n    };\n    OutlinePanel.prototype.renderBody = function (container) {\n        var _this = this;\n        this._domNode = container;\n        this._domNode.tabIndex = 0;\n        dom.addClass(container, 'outline-panel');\n        var progressContainer = dom.$('.outline-progress');\n        this._message = dom.$('.outline-message');\n        this._inputContainer = dom.$('.outline-input');\n        this._progressBar = new progressbar_1.ProgressBar(progressContainer);\n        this.disposables.push(styler_1.attachProgressBarStyler(this._progressBar, this._themeService));\n        var treeContainer = dom.$('.outline-tree');\n        dom.append(container, progressContainer, this._message, this._inputContainer, treeContainer);\n        this._treeRenderer = this._instantiationService.createInstance(outlineTree_1.OutlineElementRenderer);\n        this._treeDataSource = new outlineTree_1.OutlineDataSource();\n        this._treeComparator = new outlineTree_1.OutlineItemComparator(this._outlineViewState.sortBy);\n        this._tree = this._instantiationService.createInstance(listService_1.WorkbenchDataTree, treeContainer, new outlineTree_1.OutlineVirtualDelegate(), [new outlineTree_1.OutlineGroupRenderer(), this._treeRenderer], this._treeDataSource, {\n            expandOnlyOnTwistieClick: true,\n            multipleSelectionSupport: false,\n            filterOnType: this._outlineViewState.filterOnType,\n            sorter: this._treeComparator,\n            identityProvider: new outlineTree_1.OutlineIdentityProvider(),\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(outlineTree_1.OutlineNavigationLabelProvider)\n        });\n        this._disposables.push(this._tree);\n        this._disposables.push(this._outlineViewState.onDidChange(this._onDidChangeUserState, this));\n        // override the globally defined behaviour\n        this._tree.updateOptions({\n            filterOnType: this._outlineViewState.filterOnType\n        });\n        // feature: filter on type - keep tree and menu in sync\n        this.disposables.push(this._tree.onDidUpdateOptions(function (e) {\n            _this._outlineViewState.filterOnType = Boolean(e.filterOnType);\n        }));\n        // feature: expand all nodes when filtering (not when finding)\n        var viewState;\n        this.disposables.push(this._tree.onDidChangeTypeFilterPattern(function (pattern) {\n            if (!_this._tree.options.filterOnType) {\n                return;\n            }\n            if (!viewState && pattern) {\n                viewState = _this._tree.getViewState();\n                _this._tree.expandAll();\n            }\n            else if (!pattern && viewState) {\n                _this._tree.setInput(_this._tree.getInput(), viewState);\n                viewState = undefined;\n            }\n        }));\n        // feature: toggle icons\n        this.disposables.push(this._configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration(outline_1.OutlineConfigKeys.icons)) {\n                _this._tree.updateChildren();\n            }\n        }));\n        this.disposables.push(this.onDidChangeBodyVisibility(function (visible) {\n            if (visible && !_this._requestOracle) {\n                _this._requestOracle = _this._instantiationService.createInstance(RequestOracle, function (editor, event) { return _this._doUpdate(editor, event); }, modes_1.DocumentSymbolProviderRegistry);\n            }\n            else if (!visible) {\n                lifecycle_1.dispose(_this._requestOracle);\n                _this._requestOracle = undefined;\n                _this._doUpdate(undefined, undefined);\n            }\n        }));\n    };\n    OutlinePanel.prototype.layoutBody = function (height, width) {\n        this._tree.layout(height, width);\n    };\n    OutlinePanel.prototype.getActions = function () {\n        var _this = this;\n        return [\n            new actions_1.Action('collapse', nls_1.localize('collapse', \"Collapse All\"), 'explorer-action collapse-explorer', true, function () {\n                return new viewlet_1.CollapseAction(_this._tree, true, undefined).run();\n            })\n        ];\n    };\n    OutlinePanel.prototype.getSecondaryActions = function () {\n        var _this = this;\n        var _a;\n        var group = new actions_1.RadioGroup([\n            new SimpleToggleAction(this._outlineViewState, nls_1.localize('sortByPosition', \"Sort By: Position\"), function () { return _this._outlineViewState.sortBy === outlineTree_1.OutlineSortOrder.ByPosition; }, function (_) { return _this._outlineViewState.sortBy = outlineTree_1.OutlineSortOrder.ByPosition; }),\n            new SimpleToggleAction(this._outlineViewState, nls_1.localize('sortByName', \"Sort By: Name\"), function () { return _this._outlineViewState.sortBy === outlineTree_1.OutlineSortOrder.ByName; }, function (_) { return _this._outlineViewState.sortBy = outlineTree_1.OutlineSortOrder.ByName; }),\n            new SimpleToggleAction(this._outlineViewState, nls_1.localize('sortByKind', \"Sort By: Type\"), function () { return _this._outlineViewState.sortBy === outlineTree_1.OutlineSortOrder.ByKind; }, function (_) { return _this._outlineViewState.sortBy = outlineTree_1.OutlineSortOrder.ByKind; }),\n        ]);\n        var result = [\n            new SimpleToggleAction(this._outlineViewState, nls_1.localize('followCur', \"Follow Cursor\"), function () { return _this._outlineViewState.followCursor; }, function (action) { return _this._outlineViewState.followCursor = action.checked; }),\n            new SimpleToggleAction(this._outlineViewState, nls_1.localize('filterOnType', \"Filter on Type\"), function () { return _this._outlineViewState.filterOnType; }, function (action) { return _this._outlineViewState.filterOnType = action.checked; }),\n            new actionbar_1.Separator()\n        ].concat(group.actions);\n        (_a = this.disposables).push.apply(_a, result);\n        this.disposables.push(group);\n        return result;\n    };\n    OutlinePanel.prototype._onDidChangeUserState = function (e) {\n        this._outlineViewState.persist(this._storageService);\n        if (e.followCursor) {\n            // todo@joh update immediately\n        }\n        if (e.sortBy) {\n            this._treeComparator.type = this._outlineViewState.sortBy;\n            this._tree.resort();\n        }\n        if (e.filterOnType) {\n            this._tree.updateOptions({\n                filterOnType: this._outlineViewState.filterOnType\n            });\n        }\n    };\n    OutlinePanel.prototype._showMessage = function (message) {\n        dom.addClass(this._domNode, 'message');\n        this._tree.setInput(undefined);\n        this._progressBar.stop().hide();\n        this._message.innerText = strings_1.escape(message);\n    };\n    OutlinePanel._createOutlineModel = function (model, disposables) {\n        var promise = async_1.createCancelablePromise(function (token) { return outlineModel_1.OutlineModel.create(model, token); });\n        disposables.push({ dispose: function () { promise.cancel(); } });\n        return promise.catch(function (err) {\n            if (!errors_1.isPromiseCanceledError(err)) {\n                throw err;\n            }\n            return undefined;\n        });\n    };\n    OutlinePanel.prototype._doUpdate = function (editor, event) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var oldModel, state, textModel, loadingMessage, createdModel, newModel, newSize, newLength, newRatio, oldSize, oldLength, oldRatio, waitPromise, state, versionIdThen, updateMarker;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        lifecycle_1.dispose(this._editorDisposables);\n                        this._editorDisposables = new Array();\n                        this._progressBar.infinite().show(150);\n                        oldModel = this._tree.getInput();\n                        // persist state\n                        if (oldModel) {\n                            state = this._tree.getViewState();\n                            this._treeStates.set(oldModel.textModel.uri.toString(), state);\n                        }\n                        if (!editor || !editor.hasModel() || !modes_1.DocumentSymbolProviderRegistry.has(editor.getModel())) {\n                            return [2 /*return*/, this._showMessage(nls_1.localize('no-editor', \"There are no editors open that can provide outline information.\"))];\n                        }\n                        textModel = editor.getModel();\n                        if (!oldModel) {\n                            loadingMessage = new async_1.TimeoutTimer(function () { return _this._showMessage(nls_1.localize('loading', \"Loading document symbols for '{0}'...\", resources_1.basename(textModel.uri))); }, 100);\n                        }\n                        return [4 /*yield*/, OutlinePanel._createOutlineModel(textModel, this._editorDisposables)];\n                    case 1:\n                        createdModel = _a.sent();\n                        lifecycle_1.dispose(loadingMessage);\n                        if (!createdModel) {\n                            return [2 /*return*/];\n                        }\n                        newModel = createdModel;\n                        if (outlineModel_1.TreeElement.empty(newModel)) {\n                            return [2 /*return*/, this._showMessage(nls_1.localize('no-symbols', \"No symbols found in document '{0}'\", resources_1.basename(textModel.uri)))];\n                        }\n                        dom.removeClass(this._domNode, 'message');\n                        if (!(event && oldModel && textModel.getLineCount() >= 25)) return [3 /*break*/, 3];\n                        newSize = outlineModel_1.TreeElement.size(newModel);\n                        newLength = textModel.getValueLength();\n                        newRatio = newSize / newLength;\n                        oldSize = outlineModel_1.TreeElement.size(oldModel);\n                        oldLength = newLength - event.changes.reduce(function (prev, value) { return prev + value.rangeLength; }, 0);\n                        oldRatio = oldSize / oldLength;\n                        if (!(newRatio <= oldRatio * 0.5 || newRatio >= oldRatio * 1.5)) return [3 /*break*/, 3];\n                        waitPromise = new Promise(function (resolve) {\n                            var handle = setTimeout(function () {\n                                handle = undefined;\n                                resolve(true);\n                            }, 2000);\n                            _this._disposables.push({\n                                dispose: function () {\n                                    clearTimeout(handle);\n                                    resolve(false);\n                                }\n                            });\n                        });\n                        return [4 /*yield*/, waitPromise];\n                    case 2:\n                        if (!(_a.sent())) {\n                            return [2 /*return*/];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this._progressBar.stop().hide();\n                        if (!(oldModel && oldModel.merge(newModel))) return [3 /*break*/, 4];\n                        this._tree.updateChildren();\n                        newModel = oldModel;\n                        return [3 /*break*/, 6];\n                    case 4:\n                        state = this._treeStates.get(newModel.textModel.uri.toString());\n                        return [4 /*yield*/, this._tree.setInput(newModel, state)];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6:\n                        // transfer focus from domNode to the tree\n                        if (this._domNode === document.activeElement) {\n                            this._tree.domFocus();\n                        }\n                        this._editorDisposables.push(lifecycle_1.toDisposable(function () { return _this._contextKeyFiltered.reset(); }));\n                        // feature: reveal outline selection in editor\n                        // on change -> reveal/select defining range\n                        this._editorDisposables.push(this._tree.onDidChangeSelection(function (e) {\n                            if (e.browserEvent === _this._treeFakeUIEvent /* || e.payload && e.payload.didClickOnTwistie */) {\n                                return;\n                            }\n                            var first = e.elements[0];\n                            if (!(first instanceof outlineModel_1.OutlineElement)) {\n                                return;\n                            }\n                            var focus = false;\n                            var aside = false;\n                            // todo@Joh\n                            if (e.browserEvent) {\n                                if (e.browserEvent.type === 'keydown') {\n                                    focus = true;\n                                }\n                                else if (e.browserEvent.type === 'click') {\n                                    var event_2 = new mouseEvent_1.StandardMouseEvent(e.browserEvent);\n                                    focus = e.browserEvent.detail === 2;\n                                    aside = (!_this._tree.useAltAsMultipleSelectionModifier && event_2.altKey)\n                                        || (_this._tree.useAltAsMultipleSelectionModifier && (event_2.ctrlKey || event_2.metaKey));\n                                }\n                            }\n                            _this._revealTreeSelection(newModel, first, focus, aside);\n                        }));\n                        // feature: reveal editor selection in outline\n                        this._revealEditorSelection(newModel, editor.getSelection());\n                        versionIdThen = newModel.textModel.getVersionId();\n                        this._editorDisposables.push(editor.onDidChangeCursorSelection(function (e) {\n                            // first check if the document has changed and stop revealing the\n                            // cursor position iff it has -> we will update/recompute the\n                            // outline view then anyways\n                            if (!newModel.textModel.isDisposed() && newModel.textModel.getVersionId() === versionIdThen) {\n                                _this._revealEditorSelection(newModel, e.selection);\n                            }\n                        }));\n                        updateMarker = function (model, ignoreEmpty) {\n                            if (!_this._configurationService.getValue(outline_1.OutlineConfigKeys.problemsEnabled)) {\n                                return;\n                            }\n                            if (model !== textModel) {\n                                return;\n                            }\n                            var markers = [];\n                            for (var _i = 0, _a = _this._markerDecorationService.getLiveMarkers(textModel); _i < _a.length; _i++) {\n                                var _b = _a[_i], range = _b[0], marker = _b[1];\n                                if (marker.severity === markers_1.MarkerSeverity.Error || marker.severity === markers_1.MarkerSeverity.Warning) {\n                                    markers.push(tslib_1.__assign({}, range, { severity: marker.severity }));\n                                }\n                            }\n                            if (markers.length > 0 || !ignoreEmpty) {\n                                newModel.updateMarker(markers);\n                                _this._tree.updateChildren();\n                            }\n                        };\n                        updateMarker(textModel, true);\n                        this._editorDisposables.push(this._markerDecorationService.onDidChangeMarker(updateMarker));\n                        this._editorDisposables.push(this.configurationService.onDidChangeConfiguration(function (e) {\n                            if (e.affectsConfiguration(outline_1.OutlineConfigKeys.problemsBadges) || e.affectsConfiguration(outline_1.OutlineConfigKeys.problemsColors)) {\n                                _this._tree.updateChildren();\n                                return;\n                            }\n                            if (!e.affectsConfiguration(outline_1.OutlineConfigKeys.problemsEnabled)) {\n                                return;\n                            }\n                            if (!_this._configurationService.getValue(outline_1.OutlineConfigKeys.problemsEnabled)) {\n                                newModel.updateMarker([]);\n                                _this._tree.updateChildren();\n                            }\n                            else {\n                                updateMarker(textModel, true);\n                            }\n                        }));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    OutlinePanel.prototype._revealTreeSelection = function (model, element, focus, aside) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._editorService.openEditor({\n                            resource: model.textModel.uri,\n                            options: {\n                                preserveFocus: !focus,\n                                selection: range_1.Range.collapseToStart(element.symbol.selectionRange),\n                                revealInCenterIfOutsideViewport: true\n                            }\n                        }, aside ? editorService_1.SIDE_GROUP : editorService_1.ACTIVE_GROUP)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    OutlinePanel.prototype._revealEditorSelection = function (model, selection) {\n        if (!this._outlineViewState.followCursor || !this._tree.getInput() || !selection) {\n            return;\n        }\n        var first = this._tree.getSelection()[0];\n        var item = model.getItemEnclosingPosition({\n            lineNumber: selection.selectionStartLineNumber,\n            column: selection.selectionStartColumn\n        }, first instanceof outlineModel_1.OutlineElement ? first : undefined);\n        if (!item) {\n            // nothing to reveal\n            return;\n        }\n        var top = this._tree.getRelativeTop(item);\n        if (top === null) {\n            this._tree.reveal(item, 0.5);\n        }\n        this._tree.setFocus([item], this._treeFakeUIEvent);\n        this._tree.setSelection([item], this._treeFakeUIEvent);\n    };\n    OutlinePanel = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, themeService_1.IThemeService),\n        tslib_1.__param(3, storage_1.IStorageService),\n        tslib_1.__param(4, editorService_1.IEditorService),\n        tslib_1.__param(5, markersDecorationService_1.IMarkerDecorationsService),\n        tslib_1.__param(6, configuration_1.IConfigurationService),\n        tslib_1.__param(7, keybinding_1.IKeybindingService),\n        tslib_1.__param(8, configuration_1.IConfigurationService),\n        tslib_1.__param(9, contextkey_1.IContextKeyService),\n        tslib_1.__param(10, contextView_1.IContextMenuService)\n    ], OutlinePanel);\n    return OutlinePanel;\n}(panelViewlet_1.ViewletPanel));\nexports.OutlinePanel = OutlinePanel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/outline/browser/outlinePanel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/outline/browser/outlinePanel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { Action, IAction, RadioGroup } from 'vs/base/common/actions';\nimport { createCancelablePromise, TimeoutTimer } from 'vs/base/common/async';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { defaultGenerator } from 'vs/base/common/idGenerator';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { escape } from 'vs/base/common/strings';\nimport 'vs/css!./outlinePanel';\nimport { ICodeEditor, isCodeEditor, isDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModelContentChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { DocumentSymbolProviderRegistry } from 'vs/editor/common/modes';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/modes/languageFeatureRegistry';\nimport { OutlineElement, OutlineModel, TreeElement, IOutlineMarker } from 'vs/editor/contrib/documentSymbols/outlineModel';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IResourceInput } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { WorkbenchDataTree } from 'vs/platform/list/browser/listService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { attachProgressBarStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ViewletPanel } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { IViewletViewOptions } from 'vs/workbench/browser/parts/views/viewsViewlet';\nimport { CollapseAction } from 'vs/workbench/browser/viewlet';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { OutlineConfigKeys, OutlineViewFocused, OutlineViewFiltered } from 'vs/editor/contrib/documentSymbols/outline';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { OutlineDataSource, OutlineItemComparator, OutlineSortOrder, OutlineVirtualDelegate, OutlineGroupRenderer, OutlineElementRenderer, OutlineItem, OutlineIdentityProvider, OutlineNavigationLabelProvider } from 'vs/editor/contrib/documentSymbols/outlineTree';\nimport { IDataTreeViewState } from 'vs/base/browser/ui/tree/dataTree';\nimport { StandardMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { basename } from 'vs/base/common/resources';\nimport { IDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { IMarkerDecorationsService } from 'vs/editor/common/services/markersDecorationService';\nimport { MarkerSeverity } from 'vs/platform/markers/common/markers';\n\nclass RequestState {\n\n\tconstructor(\n\t\tprivate _editorId: string,\n\t\tprivate _modelId: string,\n\t\tprivate _modelVersion: number,\n\t\tprivate _providerCount: number\n\t) {\n\t\t//\n\t}\n\n\tequals(other: RequestState): boolean {\n\t\treturn other\n\t\t\t&& this._editorId === other._editorId\n\t\t\t&& this._modelId === other._modelId\n\t\t\t&& this._modelVersion === other._modelVersion\n\t\t\t&& this._providerCount === other._providerCount;\n\t}\n}\n\nclass RequestOracle {\n\n\tprivate _disposables = new Array<IDisposable>();\n\tprivate _sessionDisposable: IDisposable;\n\tprivate _lastState?: RequestState;\n\n\tconstructor(\n\t\tprivate readonly _callback: (editor: ICodeEditor | undefined, change: IModelContentChangedEvent | undefined) => any,\n\t\tprivate readonly _featureRegistry: LanguageFeatureRegistry<any>,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t) {\n\t\t_editorService.onDidActiveEditorChange(this._update, this, this._disposables);\n\t\t_featureRegistry.onDidChange(this._update, this, this._disposables);\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\t\tdispose(this._sessionDisposable);\n\t}\n\n\tprivate _update(): void {\n\n\t\tlet widget = this._editorService.activeTextEditorWidget;\n\t\tlet codeEditor: ICodeEditor | undefined = undefined;\n\t\tif (isCodeEditor(widget)) {\n\t\t\tcodeEditor = widget;\n\t\t} else if (isDiffEditor(widget)) {\n\t\t\tcodeEditor = widget.getModifiedEditor();\n\t\t}\n\n\t\tif (!codeEditor || !codeEditor.hasModel()) {\n\t\t\tthis._lastState = undefined;\n\t\t\tthis._callback(undefined, undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tlet thisState = new RequestState(\n\t\t\tcodeEditor.getId(),\n\t\t\tcodeEditor.getModel().id,\n\t\t\tcodeEditor.getModel().getVersionId(),\n\t\t\tthis._featureRegistry.all(codeEditor.getModel()).length\n\t\t);\n\n\t\tif (this._lastState && thisState.equals(this._lastState)) {\n\t\t\t// prevent unneccesary changes...\n\t\t\treturn;\n\t\t}\n\t\tdispose(this._sessionDisposable);\n\t\tthis._lastState = thisState;\n\t\tthis._callback(codeEditor, undefined);\n\n\t\tlet handle: any;\n\t\tlet contentListener = codeEditor.onDidChangeModelContent(event => {\n\t\t\tclearTimeout(handle);\n\t\t\thandle = setTimeout(() => this._callback(codeEditor!, event), 350);\n\t\t});\n\t\tlet modeListener = codeEditor.onDidChangeModelLanguage(_ => {\n\t\t\tthis._callback(codeEditor!, undefined);\n\t\t});\n\t\tlet disposeListener = codeEditor.onDidDispose(() => {\n\t\t\tthis._callback(undefined, undefined);\n\t\t});\n\t\tthis._sessionDisposable = {\n\t\t\tdispose() {\n\t\t\t\tcontentListener.dispose();\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tmodeListener.dispose();\n\t\t\t\tdisposeListener.dispose();\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass SimpleToggleAction extends Action {\n\n\tprivate readonly _listener: IDisposable;\n\n\tconstructor(state: OutlineViewState, label: string, isChecked: () => boolean, callback: (action: SimpleToggleAction) => any, className?: string) {\n\t\tsuper(`simple` + defaultGenerator.nextId(), label, className, true, () => {\n\t\t\tthis.checked = !this.checked;\n\t\t\tcallback(this);\n\t\t\treturn Promise.resolve();\n\t\t});\n\t\tthis.checked = isChecked();\n\t\tthis._listener = state.onDidChange(() => this.checked = isChecked());\n\t}\n\n\tdispose(): void {\n\t\tthis._listener.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\n\nclass OutlineViewState {\n\n\tprivate _followCursor = false;\n\tprivate _filterOnType = true;\n\tprivate _sortBy = OutlineSortOrder.ByKind;\n\n\tprivate _onDidChange = new Emitter<{ followCursor?: boolean, sortBy?: boolean, filterOnType?: boolean }>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tset followCursor(value: boolean) {\n\t\tif (value !== this._followCursor) {\n\t\t\tthis._followCursor = value;\n\t\t\tthis._onDidChange.fire({ followCursor: true });\n\t\t}\n\t}\n\n\tget followCursor(): boolean {\n\t\treturn this._followCursor;\n\t}\n\n\tget filterOnType() {\n\t\treturn this._filterOnType;\n\t}\n\n\tset filterOnType(value) {\n\t\tif (value !== this._filterOnType) {\n\t\t\tthis._filterOnType = value;\n\t\t\tthis._onDidChange.fire({ filterOnType: true });\n\t\t}\n\t}\n\n\tset sortBy(value: OutlineSortOrder) {\n\t\tif (value !== this._sortBy) {\n\t\t\tthis._sortBy = value;\n\t\t\tthis._onDidChange.fire({ sortBy: true });\n\t\t}\n\t}\n\n\tget sortBy(): OutlineSortOrder {\n\t\treturn this._sortBy;\n\t}\n\n\tpersist(storageService: IStorageService): void {\n\t\tstorageService.store('outline/state', JSON.stringify({\n\t\t\tfollowCursor: this.followCursor,\n\t\t\tsortBy: this.sortBy,\n\t\t\tfilterOnType: this.filterOnType,\n\t\t}), StorageScope.WORKSPACE);\n\t}\n\n\trestore(storageService: IStorageService): void {\n\t\tlet raw = storageService.get('outline/state', StorageScope.WORKSPACE);\n\t\tif (!raw) {\n\t\t\treturn;\n\t\t}\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch (e) {\n\t\t\treturn;\n\t\t}\n\t\tthis.followCursor = data.followCursor;\n\t\tthis.sortBy = data.sortBy;\n\t\tif (typeof data.filterOnType === 'boolean') {\n\t\t\tthis.filterOnType = data.filterOnType;\n\t\t}\n\t}\n}\n\nexport class OutlinePanel extends ViewletPanel {\n\n\tprivate _disposables = new Array<IDisposable>();\n\n\tprivate _editorDisposables = new Array<IDisposable>();\n\tprivate _outlineViewState = new OutlineViewState();\n\tprivate _requestOracle?: RequestOracle;\n\tprivate _domNode: HTMLElement;\n\tprivate _message: HTMLDivElement;\n\tprivate _inputContainer: HTMLDivElement;\n\tprivate _progressBar: ProgressBar;\n\tprivate _tree: WorkbenchDataTree<OutlineModel, OutlineItem, FuzzyScore>;\n\tprivate _treeDataSource: OutlineDataSource;\n\tprivate _treeRenderer: OutlineElementRenderer;\n\tprivate _treeComparator: OutlineItemComparator;\n\tprivate _treeStates = new LRUCache<string, IDataTreeViewState>(10);\n\n\tprivate _treeFakeUIEvent = new UIEvent('me');\n\n\tprivate readonly _contextKeyFocused: IContextKey<boolean>;\n\tprivate readonly _contextKeyFiltered: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IViewletViewOptions,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IMarkerDecorationsService private readonly _markerDecorationService: IMarkerDecorationsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService);\n\t\tthis._outlineViewState.restore(this._storageService);\n\t\tthis._contextKeyFocused = OutlineViewFocused.bindTo(contextKeyService);\n\t\tthis._contextKeyFiltered = OutlineViewFiltered.bindTo(contextKeyService);\n\t\tthis._disposables.push(this.onDidFocus(_ => this._contextKeyFocused.set(true)));\n\t\tthis._disposables.push(this.onDidBlur(_ => this._contextKeyFocused.set(false)));\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\t\tdispose(this._requestOracle);\n\t\tdispose(this._editorDisposables);\n\t\tsuper.dispose();\n\t}\n\n\tfocus(): void {\n\t\tif (this._tree) {\n\t\t\t// focus on tree and fallback to root\n\t\t\t// dom node when the tree cannot take focus,\n\t\t\t// e.g. when hidden\n\t\t\tthis._tree.domFocus();\n\t\t\tif (!this._tree.isDOMFocused()) {\n\t\t\t\tthis._domNode.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tthis._domNode = container;\n\t\tthis._domNode.tabIndex = 0;\n\t\tdom.addClass(container, 'outline-panel');\n\n\t\tlet progressContainer = dom.$('.outline-progress');\n\t\tthis._message = dom.$('.outline-message');\n\t\tthis._inputContainer = dom.$('.outline-input');\n\n\t\tthis._progressBar = new ProgressBar(progressContainer);\n\t\tthis.disposables.push(attachProgressBarStyler(this._progressBar, this._themeService));\n\n\t\tlet treeContainer = dom.$('.outline-tree');\n\t\tdom.append(\n\t\t\tcontainer,\n\t\t\tprogressContainer, this._message, this._inputContainer, treeContainer\n\t\t);\n\n\t\tthis._treeRenderer = this._instantiationService.createInstance(OutlineElementRenderer);\n\t\tthis._treeDataSource = new OutlineDataSource();\n\t\tthis._treeComparator = new OutlineItemComparator(this._outlineViewState.sortBy);\n\t\tthis._tree = this._instantiationService.createInstance(\n\t\t\tWorkbenchDataTree,\n\t\t\ttreeContainer,\n\t\t\tnew OutlineVirtualDelegate(),\n\t\t\t[new OutlineGroupRenderer(), this._treeRenderer],\n\t\t\tthis._treeDataSource as IDataSource<OutlineModel, OutlineItem>,\n\t\t\t{\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tfilterOnType: this._outlineViewState.filterOnType,\n\t\t\t\tsorter: this._treeComparator,\n\t\t\t\tidentityProvider: new OutlineIdentityProvider(),\n\t\t\t\tkeyboardNavigationLabelProvider: this._instantiationService.createInstance(OutlineNavigationLabelProvider)\n\t\t\t}\n\t\t) as WorkbenchDataTree<OutlineModel, OutlineItem, FuzzyScore>;\n\n\t\tthis._disposables.push(this._tree);\n\t\tthis._disposables.push(this._outlineViewState.onDidChange(this._onDidChangeUserState, this));\n\n\t\t// override the globally defined behaviour\n\t\tthis._tree.updateOptions({\n\t\t\tfilterOnType: this._outlineViewState.filterOnType\n\t\t});\n\n\t\t// feature: filter on type - keep tree and menu in sync\n\t\tthis.disposables.push(this._tree.onDidUpdateOptions(e => {\n\t\t\tthis._outlineViewState.filterOnType = Boolean(e.filterOnType);\n\t\t}));\n\n\t\t// feature: expand all nodes when filtering (not when finding)\n\t\tlet viewState: IDataTreeViewState | undefined;\n\t\tthis.disposables.push(this._tree.onDidChangeTypeFilterPattern(pattern => {\n\t\t\tif (!this._tree.options.filterOnType) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!viewState && pattern) {\n\t\t\t\tviewState = this._tree.getViewState();\n\t\t\t\tthis._tree.expandAll();\n\t\t\t} else if (!pattern && viewState) {\n\t\t\t\tthis._tree.setInput(this._tree.getInput()!, viewState);\n\t\t\t\tviewState = undefined;\n\t\t\t}\n\t\t}));\n\n\t\t// feature: toggle icons\n\t\tthis.disposables.push(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(OutlineConfigKeys.icons)) {\n\t\t\t\tthis._tree.updateChildren();\n\t\t\t}\n\t\t}));\n\n\t\tthis.disposables.push(this.onDidChangeBodyVisibility(visible => {\n\t\t\tif (visible && !this._requestOracle) {\n\t\t\t\tthis._requestOracle = this._instantiationService.createInstance(RequestOracle, (editor: ICodeEditor | undefined, event: IModelContentChangedEvent | undefined) => this._doUpdate(editor, event), DocumentSymbolProviderRegistry);\n\t\t\t} else if (!visible) {\n\t\t\t\tdispose(this._requestOracle);\n\t\t\t\tthis._requestOracle = undefined;\n\t\t\t\tthis._doUpdate(undefined, undefined);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis._tree.layout(height, width);\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn [\n\t\t\tnew Action('collapse', localize('collapse', \"Collapse All\"), 'explorer-action collapse-explorer', true, () => {\n\t\t\t\treturn new CollapseAction(this._tree, true, undefined).run();\n\t\t\t})\n\t\t];\n\t}\n\n\tgetSecondaryActions(): IAction[] {\n\t\tlet group = new RadioGroup([\n\t\t\tnew SimpleToggleAction(this._outlineViewState, localize('sortByPosition', \"Sort By: Position\"), () => this._outlineViewState.sortBy === OutlineSortOrder.ByPosition, _ => this._outlineViewState.sortBy = OutlineSortOrder.ByPosition),\n\t\t\tnew SimpleToggleAction(this._outlineViewState, localize('sortByName', \"Sort By: Name\"), () => this._outlineViewState.sortBy === OutlineSortOrder.ByName, _ => this._outlineViewState.sortBy = OutlineSortOrder.ByName),\n\t\t\tnew SimpleToggleAction(this._outlineViewState, localize('sortByKind', \"Sort By: Type\"), () => this._outlineViewState.sortBy === OutlineSortOrder.ByKind, _ => this._outlineViewState.sortBy = OutlineSortOrder.ByKind),\n\t\t]);\n\t\tlet result = [\n\t\t\tnew SimpleToggleAction(this._outlineViewState, localize('followCur', \"Follow Cursor\"), () => this._outlineViewState.followCursor, action => this._outlineViewState.followCursor = action.checked),\n\t\t\tnew SimpleToggleAction(this._outlineViewState, localize('filterOnType', \"Filter on Type\"), () => this._outlineViewState.filterOnType, action => this._outlineViewState.filterOnType = action.checked),\n\t\t\tnew Separator(),\n\t\t\t...group.actions,\n\t\t];\n\n\t\tthis.disposables.push(...result);\n\t\tthis.disposables.push(group);\n\t\treturn result;\n\t}\n\n\tprivate _onDidChangeUserState(e: { followCursor?: boolean, sortBy?: boolean, filterOnType?: boolean }) {\n\t\tthis._outlineViewState.persist(this._storageService);\n\t\tif (e.followCursor) {\n\t\t\t// todo@joh update immediately\n\t\t}\n\t\tif (e.sortBy) {\n\t\t\tthis._treeComparator.type = this._outlineViewState.sortBy;\n\t\t\tthis._tree.resort();\n\t\t}\n\t\tif (e.filterOnType) {\n\t\t\tthis._tree.updateOptions({\n\t\t\t\tfilterOnType: this._outlineViewState.filterOnType\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _showMessage(message: string) {\n\t\tdom.addClass(this._domNode, 'message');\n\t\tthis._tree.setInput(undefined!);\n\t\tthis._progressBar.stop().hide();\n\t\tthis._message.innerText = escape(message);\n\t}\n\n\tprivate static _createOutlineModel(model: ITextModel, disposables: IDisposable[]): Promise<OutlineModel | undefined> {\n\t\tlet promise = createCancelablePromise(token => OutlineModel.create(model, token));\n\t\tdisposables.push({ dispose() { promise.cancel(); } });\n\t\treturn promise.catch(err => {\n\t\t\tif (!isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate async _doUpdate(editor: ICodeEditor | undefined, event: IModelContentChangedEvent | undefined): Promise<void> {\n\t\tdispose(this._editorDisposables);\n\n\t\tthis._editorDisposables = new Array();\n\t\tthis._progressBar.infinite().show(150);\n\n\t\tlet oldModel = this._tree.getInput();\n\n\t\t// persist state\n\t\tif (oldModel) {\n\t\t\tlet state = this._tree.getViewState();\n\t\t\tthis._treeStates.set(oldModel.textModel.uri.toString(), state);\n\t\t}\n\n\t\tif (!editor || !editor.hasModel() || !DocumentSymbolProviderRegistry.has(editor.getModel())) {\n\t\t\treturn this._showMessage(localize('no-editor', \"There are no editors open that can provide outline information.\"));\n\t\t}\n\n\t\tlet textModel = editor.getModel();\n\t\tlet loadingMessage: IDisposable | undefined;\n\t\tif (!oldModel) {\n\t\t\tloadingMessage = new TimeoutTimer(\n\t\t\t\t() => this._showMessage(localize('loading', \"Loading document symbols for '{0}'...\", basename(textModel.uri))),\n\t\t\t\t100\n\t\t\t);\n\t\t}\n\n\t\tlet createdModel = await OutlinePanel._createOutlineModel(textModel, this._editorDisposables);\n\t\tdispose(loadingMessage);\n\t\tif (!createdModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newModel = createdModel;\n\t\tif (TreeElement.empty(newModel)) {\n\t\t\treturn this._showMessage(localize('no-symbols', \"No symbols found in document '{0}'\", basename(textModel.uri)));\n\t\t}\n\n\t\tdom.removeClass(this._domNode, 'message');\n\n\t\tif (event && oldModel && textModel.getLineCount() >= 25) {\n\t\t\t// heuristic: when the symbols-to-lines ratio changes by 50% between edits\n\t\t\t// wait a little (and hope that the next change isn't as drastic).\n\t\t\tlet newSize = TreeElement.size(newModel);\n\t\t\tlet newLength = textModel.getValueLength();\n\t\t\tlet newRatio = newSize / newLength;\n\t\t\tlet oldSize = TreeElement.size(oldModel);\n\t\t\tlet oldLength = newLength - event.changes.reduce((prev, value) => prev + value.rangeLength, 0);\n\t\t\tlet oldRatio = oldSize / oldLength;\n\t\t\tif (newRatio <= oldRatio * 0.5 || newRatio >= oldRatio * 1.5) {\n\n\t\t\t\tlet waitPromise = new Promise<boolean>(resolve => {\n\t\t\t\t\tlet handle: any = setTimeout(() => {\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t}, 2000);\n\t\t\t\t\tthis._disposables.push({\n\t\t\t\t\t\tdispose() {\n\t\t\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tif (!await waitPromise) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._progressBar.stop().hide();\n\n\t\tif (oldModel && oldModel.merge(newModel)) {\n\t\t\tthis._tree.updateChildren();\n\t\t\tnewModel = oldModel;\n\t\t} else {\n\t\t\tlet state = this._treeStates.get(newModel.textModel.uri.toString());\n\t\t\tawait this._tree.setInput(newModel, state);\n\t\t}\n\n\t\t// transfer focus from domNode to the tree\n\t\tif (this._domNode === document.activeElement) {\n\t\t\tthis._tree.domFocus();\n\t\t}\n\n\t\tthis._editorDisposables.push(toDisposable(() => this._contextKeyFiltered.reset()));\n\n\t\t// feature: reveal outline selection in editor\n\t\t// on change -> reveal/select defining range\n\t\tthis._editorDisposables.push(this._tree.onDidChangeSelection(e => {\n\t\t\tif (e.browserEvent === this._treeFakeUIEvent /* || e.payload && e.payload.didClickOnTwistie */) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet [first] = e.elements;\n\t\t\tif (!(first instanceof OutlineElement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet focus = false;\n\t\t\tlet aside = false;\n\t\t\t// todo@Joh\n\t\t\tif (e.browserEvent) {\n\t\t\t\tif (e.browserEvent.type === 'keydown') {\n\t\t\t\t\tfocus = true;\n\t\t\t\t} else if (e.browserEvent.type === 'click') {\n\t\t\t\t\tconst event = new StandardMouseEvent(e.browserEvent as MouseEvent);\n\t\t\t\t\tfocus = e.browserEvent.detail === 2;\n\t\t\t\t\taside = (!this._tree.useAltAsMultipleSelectionModifier && event.altKey)\n\t\t\t\t\t\t|| (this._tree.useAltAsMultipleSelectionModifier && (event.ctrlKey || event.metaKey));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._revealTreeSelection(newModel, first, focus, aside);\n\t\t}));\n\n\t\t// feature: reveal editor selection in outline\n\t\tthis._revealEditorSelection(newModel, editor.getSelection());\n\t\tconst versionIdThen = newModel.textModel.getVersionId();\n\t\tthis._editorDisposables.push(editor.onDidChangeCursorSelection(e => {\n\t\t\t// first check if the document has changed and stop revealing the\n\t\t\t// cursor position iff it has -> we will update/recompute the\n\t\t\t// outline view then anyways\n\t\t\tif (!newModel.textModel.isDisposed() && newModel.textModel.getVersionId() === versionIdThen) {\n\t\t\t\tthis._revealEditorSelection(newModel, e.selection);\n\t\t\t}\n\t\t}));\n\n\t\t// feature: show markers in outline\n\t\tconst updateMarker = (model: ITextModel, ignoreEmpty?: boolean) => {\n\t\t\tif (!this._configurationService.getValue(OutlineConfigKeys.problemsEnabled)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (model !== textModel) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst markers: IOutlineMarker[] = [];\n\t\t\tfor (const [range, marker] of this._markerDecorationService.getLiveMarkers(textModel)) {\n\t\t\t\tif (marker.severity === MarkerSeverity.Error || marker.severity === MarkerSeverity.Warning) {\n\t\t\t\t\tmarkers.push({ ...range, severity: marker.severity });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (markers.length > 0 || !ignoreEmpty) {\n\t\t\t\tnewModel.updateMarker(markers);\n\t\t\t\tthis._tree.updateChildren();\n\t\t\t}\n\t\t};\n\t\tupdateMarker(textModel, true);\n\t\tthis._editorDisposables.push(this._markerDecorationService.onDidChangeMarker(updateMarker));\n\n\t\tthis._editorDisposables.push(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(OutlineConfigKeys.problemsBadges) || e.affectsConfiguration(OutlineConfigKeys.problemsColors)) {\n\t\t\t\tthis._tree.updateChildren();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!e.affectsConfiguration(OutlineConfigKeys.problemsEnabled)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._configurationService.getValue(OutlineConfigKeys.problemsEnabled)) {\n\t\t\t\tnewModel.updateMarker([]);\n\t\t\t\tthis._tree.updateChildren();\n\t\t\t} else {\n\t\t\t\tupdateMarker(textModel, true);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async _revealTreeSelection(model: OutlineModel, element: OutlineElement, focus: boolean, aside: boolean): Promise<void> {\n\n\t\tawait this._editorService.openEditor({\n\t\t\tresource: model.textModel.uri,\n\t\t\toptions: {\n\t\t\t\tpreserveFocus: !focus,\n\t\t\t\tselection: Range.collapseToStart(element.symbol.selectionRange),\n\t\t\t\trevealInCenterIfOutsideViewport: true\n\t\t\t}\n\t\t} as IResourceInput, aside ? SIDE_GROUP : ACTIVE_GROUP);\n\t}\n\n\tprivate _revealEditorSelection(model: OutlineModel, selection: Selection): void {\n\t\tif (!this._outlineViewState.followCursor || !this._tree.getInput() || !selection) {\n\t\t\treturn;\n\t\t}\n\t\tlet [first] = this._tree.getSelection();\n\t\tlet item = model.getItemEnclosingPosition({\n\t\t\tlineNumber: selection.selectionStartLineNumber,\n\t\t\tcolumn: selection.selectionStartColumn\n\t\t}, first instanceof OutlineElement ? first : undefined);\n\t\tif (!item) {\n\t\t\t// nothing to reveal\n\t\t\treturn;\n\t\t}\n\t\tlet top = this._tree.getRelativeTop(item);\n\t\tif (top === null) {\n\t\t\tthis._tree.reveal(item, 0.5);\n\t\t}\n\t\tthis._tree.setFocus([item], this._treeFakeUIEvent);\n\t\tthis._tree.setSelection([item], this._treeFakeUIEvent);\n\t}\n}\n"]}]}