{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/download/node/downloadService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/download/node/downloadService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/base/common/network\", \"vs/base/node/pfs\", \"vs/platform/request/node/request\", \"vs/base/node/request\", \"vs/base/common/cancellation\", \"vs/base/common/path\", \"os\", \"vs/base/common/uuid\"], function (require, exports, network_1, pfs_1, request_1, request_2, cancellation_1, path_1, os_1, uuid_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let DownloadService = class DownloadService {\n        constructor(requestService) {\n            this.requestService = requestService;\n        }\n        download(uri, target = path_1.join(os_1.tmpdir(), uuid_1.generateUuid()), cancellationToken = cancellation_1.CancellationToken.None) {\n            if (uri.scheme === network_1.Schemas.file) {\n                return pfs_1.copy(uri.fsPath, target).then(() => target);\n            }\n            const options = { type: 'GET', url: uri.toString() };\n            return this.requestService.request(options, cancellationToken)\n                .then(context => {\n                if (context.res.statusCode === 200) {\n                    return request_2.download(target, context).then(() => target);\n                }\n                return request_2.asText(context)\n                    .then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n            });\n        }\n    };\n    DownloadService = __decorate([\n        __param(0, request_1.IRequestService)\n    ], DownloadService);\n    exports.DownloadService = DownloadService;\n});\n",null]}