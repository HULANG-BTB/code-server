{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/severity\", \"vs/platform/instantiation/common/instantiation\", \"vs/base/common/event\"], function (require, exports, severity_1, instantiation_1, event_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Severity = severity_1.default;\n    exports.INotificationService = instantiation_1.createDecorator('notificationService');\n    class NoOpNotification {\n        constructor() {\n            this.progress = new NoOpProgress();\n            this._onDidClose = new event_1.Emitter();\n        }\n        get onDidClose() {\n            return this._onDidClose.event;\n        }\n        updateSeverity(severity) { }\n        updateMessage(message) { }\n        updateActions(actions) { }\n        close() {\n            this._onDidClose.dispose();\n        }\n    }\n    exports.NoOpNotification = NoOpNotification;\n    class NoOpProgress {\n        infinite() { }\n        done() { }\n        total(value) { }\n        worked(value) { }\n    }\n    exports.NoOpProgress = NoOpProgress;\n});\n",null]}