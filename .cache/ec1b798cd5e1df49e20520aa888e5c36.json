{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewEditor.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewEditor.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar DOM = require(\"vs/base/browser/dom\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar telemetry_1 = require(\"vs/platform/telemetry/common/telemetry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar baseEditor_1 = require(\"vs/workbench/browser/parts/editor/baseEditor\");\nvar webviewEditorInput_1 = require(\"vs/workbench/contrib/webview/electron-browser/webviewEditorInput\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar webviewElement_1 = require(\"./webviewElement\");\n/**  A context key that is set when the find widget in a webview is visible. */\nexports.KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE = new contextkey_1.RawContextKey('webviewFindWidgetVisible', false);\nvar WebviewEditor = /** @class */ (function (_super) {\n    tslib_1.__extends(WebviewEditor, _super);\n    function WebviewEditor(telemetryService, themeService, _contextKeyService, _layoutService, _contextService, _instantiationService, _editorService, _windowService, storageService) {\n        var _this = _super.call(this, WebviewEditor.ID, telemetryService, themeService, storageService) || this;\n        _this._contextKeyService = _contextKeyService;\n        _this._layoutService = _layoutService;\n        _this._contextService = _contextService;\n        _this._instantiationService = _instantiationService;\n        _this._editorService = _editorService;\n        _this._windowService = _windowService;\n        _this._webviewFocusTrackerDisposables = [];\n        _this._onDidFocusWebview = _this._register(new event_1.Emitter());\n        _this.pendingMessages = [];\n        if (_contextKeyService) {\n            _this.findWidgetVisible = exports.KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE.bindTo(_contextKeyService);\n        }\n        return _this;\n    }\n    Object.defineProperty(WebviewEditor.prototype, \"onDidFocus\", {\n        get: function () { return this._onDidFocusWebview.event; },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewEditor.prototype.createEditor = function (parent) {\n        this._editorFrame = parent;\n        this._content = document.createElement('div');\n        parent.appendChild(this._content);\n    };\n    WebviewEditor.prototype.doUpdateContainer = function () {\n        var webviewContainer = this.input && this.input.container;\n        if (webviewContainer && webviewContainer.parentElement) {\n            var frameRect = this._editorFrame.getBoundingClientRect();\n            var containerRect = webviewContainer.parentElement.getBoundingClientRect();\n            webviewContainer.style.position = 'absolute';\n            webviewContainer.style.top = frameRect.top - containerRect.top + \"px\";\n            webviewContainer.style.left = frameRect.left - containerRect.left + \"px\";\n            webviewContainer.style.width = frameRect.width + \"px\";\n            webviewContainer.style.height = frameRect.height + \"px\";\n        }\n    };\n    WebviewEditor.prototype.dispose = function () {\n        this.pendingMessages = [];\n        // Let the editor input dispose of the webview.\n        this._webview = undefined;\n        this._webviewContent = undefined;\n        if (this._content && this._content.parentElement) {\n            this._content.parentElement.removeChild(this._content);\n            this._content = undefined;\n        }\n        this._webviewFocusTrackerDisposables = lifecycle_1.dispose(this._webviewFocusTrackerDisposables);\n        if (this._onFocusWindowHandler) {\n            this._onFocusWindowHandler.dispose();\n        }\n        _super.prototype.dispose.call(this);\n    };\n    WebviewEditor.prototype.sendMessage = function (data) {\n        if (this._webview) {\n            this._webview.sendMessage(data);\n        }\n        else {\n            this.pendingMessages.push(data);\n        }\n    };\n    WebviewEditor.prototype.showFind = function () {\n        if (this._webview) {\n            this._webview.showFind();\n            this.findWidgetVisible.set(true);\n        }\n    };\n    WebviewEditor.prototype.hideFind = function () {\n        this.findWidgetVisible.reset();\n        if (this._webview) {\n            this._webview.hideFind();\n        }\n    };\n    Object.defineProperty(WebviewEditor.prototype, \"isWebviewEditor\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebviewEditor.prototype.reload = function () {\n        this.withWebviewElement(function (webview) { return webview.reload(); });\n    };\n    WebviewEditor.prototype.layout = function (_dimension) {\n        var _this = this;\n        this.withWebviewElement(function (webview) {\n            _this.doUpdateContainer();\n            webview.layout();\n        });\n    };\n    WebviewEditor.prototype.focus = function () {\n        var _this = this;\n        _super.prototype.focus.call(this);\n        if (!this._onFocusWindowHandler) {\n            // Make sure we restore focus when switching back to a VS Code window\n            this._onFocusWindowHandler = this._windowService.onDidChangeFocus(function (focused) {\n                if (focused && _this._editorService.activeControl === _this) {\n                    _this.focus();\n                }\n            });\n        }\n        this.withWebviewElement(function (webview) { return webview.focus(); });\n    };\n    WebviewEditor.prototype.selectAll = function () {\n        this.withWebviewElement(function (webview) { return webview.selectAll(); });\n    };\n    WebviewEditor.prototype.copy = function () {\n        this.withWebviewElement(function (webview) { return webview.copy(); });\n    };\n    WebviewEditor.prototype.paste = function () {\n        this.withWebviewElement(function (webview) { return webview.paste(); });\n    };\n    WebviewEditor.prototype.cut = function () {\n        this.withWebviewElement(function (webview) { return webview.cut(); });\n    };\n    WebviewEditor.prototype.undo = function () {\n        this.withWebviewElement(function (webview) { return webview.undo(); });\n    };\n    WebviewEditor.prototype.redo = function () {\n        this.withWebviewElement(function (webview) { return webview.redo(); });\n    };\n    WebviewEditor.prototype.withWebviewElement = function (f) {\n        if (this._webview) {\n            f(this._webview);\n        }\n    };\n    WebviewEditor.prototype.setEditorVisible = function (visible, group) {\n        if (this.input && this.input instanceof webviewEditorInput_1.WebviewEditorInput) {\n            if (visible) {\n                this.input.claimWebview(this);\n            }\n            else {\n                this.input.releaseWebview(this);\n            }\n            this.updateWebview(this.input);\n        }\n        if (this._webviewContent) {\n            if (visible) {\n                this._webviewContent.style.visibility = 'visible';\n                this.doUpdateContainer();\n            }\n            else {\n                this._webviewContent.style.visibility = 'hidden';\n            }\n        }\n        _super.prototype.setEditorVisible.call(this, visible, group);\n    };\n    WebviewEditor.prototype.clearInput = function () {\n        if (this.input && this.input instanceof webviewEditorInput_1.WebviewEditorInput) {\n            this.input.releaseWebview(this);\n        }\n        this._webview = undefined;\n        this._webviewContent = undefined;\n        this.pendingMessages = [];\n        _super.prototype.clearInput.call(this);\n    };\n    WebviewEditor.prototype.setInput = function (input, options, token) {\n        var _this = this;\n        if (this.input) {\n            this.input.releaseWebview(this);\n            this._webview = undefined;\n            this._webviewContent = undefined;\n        }\n        this.pendingMessages = [];\n        return _super.prototype.setInput.call(this, input, options, token)\n            .then(function () { return input.resolve(); })\n            .then(function () {\n            if (token.isCancellationRequested) {\n                return;\n            }\n            if (_this.group) {\n                input.updateGroup(_this.group.id);\n            }\n            _this.updateWebview(input);\n        });\n    };\n    WebviewEditor.prototype.updateWebview = function (input) {\n        var webview = this.getWebview(input);\n        input.claimWebview(this);\n        webview.update(input.html, {\n            allowScripts: input.options.enableScripts,\n            localResourceRoots: input.options.localResourceRoots || this.getDefaultLocalResourceRoots(),\n            portMappings: input.options.portMapping,\n        }, !!input.options.retainContextWhenHidden);\n        if (this._webviewContent) {\n            this._webviewContent.style.visibility = 'visible';\n        }\n        this.doUpdateContainer();\n    };\n    WebviewEditor.prototype.getDefaultLocalResourceRoots = function () {\n        var rootPaths = this._contextService.getWorkspace().folders.map(function (x) { return x.uri; });\n        var extension = this.input.extension;\n        if (extension) {\n            rootPaths.push(extension.location);\n        }\n        return rootPaths;\n    };\n    WebviewEditor.prototype.getWebview = function (input) {\n        if (this._webview) {\n            return this._webview;\n        }\n        this._webviewContent = input.container;\n        if (input.webview) {\n            this._webview = input.webview;\n        }\n        else {\n            if (input.options.enableFindWidget) {\n                this._contextKeyService = this._register(this._contextKeyService.createScoped(this._webviewContent));\n                this.findWidgetVisible = exports.KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE.bindTo(this._contextKeyService);\n            }\n            this._webview = this._instantiationService.createInstance(webviewElement_1.WebviewElement, this._layoutService.getContainer(layoutService_1.Parts.EDITOR_PART), {\n                allowSvgs: true,\n                extension: input.extension,\n                enableFindWidget: input.options.enableFindWidget\n            }, {});\n            this._webview.mountTo(this._webviewContent);\n            input.webview = this._webview;\n            if (input.options.tryRestoreScrollPosition) {\n                this._webview.initialScrollProgress = input.scrollYPercentage;\n            }\n            this._webview.state = input.webviewState;\n            this._content.setAttribute('aria-flowto', this._webviewContent.id);\n            this.doUpdateContainer();\n        }\n        for (var _i = 0, _a = this.pendingMessages; _i < _a.length; _i++) {\n            var message = _a[_i];\n            this._webview.sendMessage(message);\n        }\n        this.pendingMessages = [];\n        this.trackFocus();\n        return this._webview;\n    };\n    WebviewEditor.prototype.trackFocus = function () {\n        var _this = this;\n        this._webviewFocusTrackerDisposables = lifecycle_1.dispose(this._webviewFocusTrackerDisposables);\n        // Track focus in webview content\n        var webviewContentFocusTracker = DOM.trackFocus(this._webviewContent);\n        this._webviewFocusTrackerDisposables.push(webviewContentFocusTracker);\n        this._webviewFocusTrackerDisposables.push(webviewContentFocusTracker.onDidFocus(function () { return _this._onDidFocusWebview.fire(); }));\n        // Track focus in webview element\n        this._webviewFocusTrackerDisposables.push(this._webview.onDidFocus(function () { return _this._onDidFocusWebview.fire(); }));\n    };\n    WebviewEditor.ID = 'WebviewEditor';\n    WebviewEditor = tslib_1.__decorate([\n        tslib_1.__param(0, telemetry_1.ITelemetryService),\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, contextkey_1.IContextKeyService),\n        tslib_1.__param(3, layoutService_1.IWorkbenchLayoutService),\n        tslib_1.__param(4, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService),\n        tslib_1.__param(6, editorService_1.IEditorService),\n        tslib_1.__param(7, windows_1.IWindowService),\n        tslib_1.__param(8, storage_1.IStorageService)\n    ], WebviewEditor);\n    return WebviewEditor;\n}(baseEditor_1.BaseEditor));\nexports.WebviewEditor = WebviewEditor;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewEditor.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/webview/electron-browser/webviewEditor.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,yCAA2C;AAE3C,8CAAsD;AACtD,sDAAgE;AAEhE,uEAA0G;AAC1G,gFAAuF;AACvF,8DAAqE;AACrE,oEAA2E;AAC3E,sEAAsE;AACtE,8DAAoE;AACpE,oEAAkF;AAClF,2EAA0E;AAE1E,uGAAsG;AAEtG,mFAAmF;AACnF,oFAAoG;AACpG,mDAAkD;AAElD,+EAA+E;AAClE,QAAA,8CAA8C,GAAG,IAAI,0BAAa,CAAU,0BAA0B,EAAE,KAAK,CAAC,CAAC;AAG5H;IAAmC,yCAAU;IAmB5C,uBACoB,gBAAmC,EACvC,YAA2B,EACd,kBAAsC,EACxB,cAAuC,EACtC,eAAyC,EAC5C,qBAA4C,EACnD,cAA8B,EAC9B,cAA8B,EAC9C,cAA+B;QATjD,YAWC,kBAAM,aAAa,CAAC,EAAE,EAAE,gBAAgB,EAAE,YAAY,EAAE,cAAc,CAAC,SAIvE;QAZ4B,wBAAkB,GAAlB,kBAAkB,CAAoB;QACxB,oBAAc,GAAd,cAAc,CAAyB;QACtC,qBAAe,GAAf,eAAe,CAA0B;QAC5C,2BAAqB,GAArB,qBAAqB,CAAuB;QACnD,oBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;QAhBxD,qCAA+B,GAAkB,EAAE,CAAC;QAG3C,wBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAQ,CAAC,CAAC;QAGlE,qBAAe,GAAU,EAAE,CAAC;QAcnC,IAAI,kBAAkB,EAAE;YACvB,KAAI,CAAC,iBAAiB,GAAG,sDAA8C,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SACnG;;IACF,CAAC;IAnBD,sBAAW,qCAAU;aAArB,cAAsC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAqBnE,oCAAY,GAAtB,UAAuB,MAAmB;QACzC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAEO,yCAAiB,GAAzB;QACC,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,IAAK,IAAI,CAAC,KAA4B,CAAC,SAAS,CAAC;QACpF,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;YACvD,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;YAC5D,IAAM,aAAa,GAAG,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAE7E,gBAAgB,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YAC7C,gBAAgB,CAAC,KAAK,CAAC,GAAG,GAAM,SAAS,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,OAAI,CAAC;YACtE,gBAAgB,CAAC,KAAK,CAAC,IAAI,GAAM,SAAS,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,OAAI,CAAC;YACzE,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAM,SAAS,CAAC,KAAK,OAAI,CAAC;YACtD,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAM,SAAS,CAAC,MAAM,OAAI,CAAC;SACxD;IACF,CAAC;IAEM,+BAAO,GAAd;QACC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,+CAA+C;QAC/C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QAEjC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YACjD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC1B;QAED,IAAI,CAAC,+BAA+B,GAAG,mBAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAErF,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC/B,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;SACrC;QAED,iBAAM,OAAO,WAAE,CAAC;IACjB,CAAC;IAEM,mCAAW,GAAlB,UAAmB,IAAS;QAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAChC;aAAM;YACN,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;IACF,CAAC;IACM,gCAAQ,GAAf;QACC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACjC;IACF,CAAC;IAEM,gCAAQ,GAAf;QACC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SACzB;IACF,CAAC;IAED,sBAAW,0CAAe;aAA1B;YACC,OAAO,IAAI,CAAC;QACb,CAAC;;;OAAA;IAEM,8BAAM,GAAb;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,EAAE,EAAhB,CAAgB,CAAC,CAAC;IACtD,CAAC;IAEM,8BAAM,GAAb,UAAc,UAAyB;QAAvC,iBAKC;QAJA,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO;YAC9B,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,OAAO,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,6BAAK,GAAZ;QAAA,iBAYC;QAXA,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAEhC,qEAAqE;YACrE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,UAAA,OAAO;gBACxE,IAAI,OAAO,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,KAAK,KAAI,EAAE;oBAC1D,KAAI,CAAC,KAAK,EAAE,CAAC;iBACb;YACF,CAAC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,EAAE,EAAf,CAAe,CAAC,CAAC;IACrD,CAAC;IAEM,iCAAS,GAAhB;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,SAAS,EAAE,EAAnB,CAAmB,CAAC,CAAC;IACzD,CAAC;IAEM,4BAAI,GAAX;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,EAAE,EAAd,CAAc,CAAC,CAAC;IACpD,CAAC;IAEM,6BAAK,GAAZ;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,EAAE,EAAf,CAAe,CAAC,CAAC;IACrD,CAAC;IAEM,2BAAG,GAAV;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,EAAE,EAAb,CAAa,CAAC,CAAC;IACnD,CAAC;IAEM,4BAAI,GAAX;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,EAAE,EAAd,CAAc,CAAC,CAAC;IACpD,CAAC;IAEM,4BAAI,GAAX;QACC,IAAI,CAAC,kBAAkB,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,EAAE,EAAd,CAAc,CAAC,CAAC;IACpD,CAAC;IAEO,0CAAkB,GAA1B,UAA2B,CAAoC;QAC9D,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjB;IACF,CAAC;IAES,wCAAgB,GAA1B,UAA2B,OAAgB,EAAE,KAAmB;QAC/D,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,YAAY,uCAAkB,EAAE;YAC3D,IAAI,OAAO,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAAM;gBACN,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAChC;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAA2B,CAAC,CAAC;SACrD;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,OAAO,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;gBAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC;aACzB;iBAAM;gBACN,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;aACjD;SACD;QAED,iBAAM,gBAAgB,YAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,kCAAU,GAAjB;QACC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,YAAY,uCAAkB,EAAE;YAC3D,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,iBAAM,UAAU,WAAE,CAAC;IACpB,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAyB,EAAE,OAAsB,EAAE,KAAwB;QAApF,iBAkBC;QAjBA,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAA4B,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;SACjC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,OAAO,iBAAM,QAAQ,YAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC;aAC1C,IAAI,CAAC,cAAM,OAAA,KAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC;aAC3B,IAAI,CAAC;YACL,IAAI,KAAK,CAAC,uBAAuB,EAAE;gBAClC,OAAO;aACP;YACD,IAAI,KAAI,CAAC,KAAK,EAAE;gBACf,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACjC;YACD,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,qCAAa,GAArB,UAAsB,KAAyB;QAC9C,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE;YAC1B,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,aAAa;YACzC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,4BAA4B,EAAE;YAC3F,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;SACvC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;SAClD;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEO,oDAA4B,GAApC;QACC,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,EAAL,CAAK,CAAC,CAAC;QAC9E,IAAM,SAAS,GAAI,IAAI,CAAC,KAA4B,CAAC,SAAS,CAAC;QAC/D,IAAI,SAAS,EAAE;YACd,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACnC;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAEO,kCAAU,GAAlB,UAAmB,KAAyB;QAC3C,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;SACrB;QAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC;QAEvC,IAAI,KAAK,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;SAC9B;aAAM;YACN,IAAI,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE;gBACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACrG,IAAI,CAAC,iBAAiB,GAAG,sDAA8C,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACxG;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,+BAAc,EACvE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,qBAAK,CAAC,WAAW,CAAC,EACnD;gBACC,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,gBAAgB,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;aAChD,EACD,EAAE,CAAC,CAAC;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC5C,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE9B,IAAI,KAAK,CAAC,OAAO,CAAC,wBAAwB,EAAE;gBAC3C,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAAG,KAAK,CAAC,iBAAiB,CAAC;aAC9D;YAED,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;YAEzC,IAAI,CAAC,QAAS,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAEpE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB;QAED,KAAsB,UAAoB,EAApB,KAAA,IAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB,EAAE;YAAvC,IAAM,OAAO,SAAA;YACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEO,kCAAU,GAAlB;QAAA,iBAUC;QATA,IAAI,CAAC,+BAA+B,GAAG,mBAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAErF,iCAAiC;QACjC,IAAM,0BAA0B,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,eAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACtE,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAA9B,CAA8B,CAAC,CAAC,CAAC;QAEvH,iCAAiC;QACjC,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAA9B,CAA8B,CAAC,CAAC,CAAC;IAC5G,CAAC;IAjSsB,gBAAE,GAAG,eAAe,CAAC;IALhC,aAAa;QAoBvB,mBAAA,6BAAiB,CAAA;QACjB,mBAAA,4BAAa,CAAA;QACb,mBAAA,+BAAkB,CAAA;QAClB,mBAAA,uCAAuB,CAAA;QACvB,mBAAA,oCAAwB,CAAA;QACxB,mBAAA,qCAAqB,CAAA;QACrB,mBAAA,8BAAc,CAAA;QACd,mBAAA,wBAAc,CAAA;QACd,mBAAA,yBAAe,CAAA;OA5BL,aAAa,CAuSzB;IAAD,oBAAC;CAAA,AAvSD,CAAmC,uBAAU,GAuS5C;AAvSY,sCAAa","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DOM from 'vs/base/browser/dom';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWindowService } from 'vs/platform/windows/common/windows';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';\nimport { EditorOptions } from 'vs/workbench/common/editor';\nimport { WebviewEditorInput } from 'vs/workbench/contrib/webview/electron-browser/webviewEditorInput';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkbenchLayoutService, Parts } from 'vs/workbench/services/layout/browser/layoutService';\nimport { WebviewElement } from './webviewElement';\n\n/**  A context key that is set when the find widget in a webview is visible. */\nexport const KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE = new RawContextKey<boolean>('webviewFindWidgetVisible', false);\n\n\nexport class WebviewEditor extends BaseEditor {\n\n\tprotected _webview: WebviewElement | undefined;\n\tprotected findWidgetVisible: IContextKey<boolean>;\n\n\tpublic static readonly ID = 'WebviewEditor';\n\n\tprivate _editorFrame: HTMLElement;\n\tprivate _content?: HTMLElement;\n\tprivate _webviewContent: HTMLElement | undefined;\n\n\tprivate _webviewFocusTrackerDisposables: IDisposable[] = [];\n\tprivate _onFocusWindowHandler?: IDisposable;\n\n\tprivate readonly _onDidFocusWebview = this._register(new Emitter<void>());\n\tpublic get onDidFocus(): Event<any> { return this._onDidFocusWebview.event; }\n\n\tprivate pendingMessages: any[] = [];\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IContextKeyService private _contextKeyService: IContextKeyService,\n\t\t@IWorkbenchLayoutService private readonly _layoutService: IWorkbenchLayoutService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWindowService private readonly _windowService: IWindowService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(WebviewEditor.ID, telemetryService, themeService, storageService);\n\t\tif (_contextKeyService) {\n\t\t\tthis.findWidgetVisible = KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE.bindTo(_contextKeyService);\n\t\t}\n\t}\n\n\tprotected createEditor(parent: HTMLElement): void {\n\t\tthis._editorFrame = parent;\n\t\tthis._content = document.createElement('div');\n\t\tparent.appendChild(this._content);\n\t}\n\n\tprivate doUpdateContainer() {\n\t\tconst webviewContainer = this.input && (this.input as WebviewEditorInput).container;\n\t\tif (webviewContainer && webviewContainer.parentElement) {\n\t\t\tconst frameRect = this._editorFrame.getBoundingClientRect();\n\t\t\tconst containerRect = webviewContainer.parentElement.getBoundingClientRect();\n\n\t\t\twebviewContainer.style.position = 'absolute';\n\t\t\twebviewContainer.style.top = `${frameRect.top - containerRect.top}px`;\n\t\t\twebviewContainer.style.left = `${frameRect.left - containerRect.left}px`;\n\t\t\twebviewContainer.style.width = `${frameRect.width}px`;\n\t\t\twebviewContainer.style.height = `${frameRect.height}px`;\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.pendingMessages = [];\n\n\t\t// Let the editor input dispose of the webview.\n\t\tthis._webview = undefined;\n\t\tthis._webviewContent = undefined;\n\n\t\tif (this._content && this._content.parentElement) {\n\t\t\tthis._content.parentElement.removeChild(this._content);\n\t\t\tthis._content = undefined;\n\t\t}\n\n\t\tthis._webviewFocusTrackerDisposables = dispose(this._webviewFocusTrackerDisposables);\n\n\t\tif (this._onFocusWindowHandler) {\n\t\t\tthis._onFocusWindowHandler.dispose();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic sendMessage(data: any): void {\n\t\tif (this._webview) {\n\t\t\tthis._webview.sendMessage(data);\n\t\t} else {\n\t\t\tthis.pendingMessages.push(data);\n\t\t}\n\t}\n\tpublic showFind() {\n\t\tif (this._webview) {\n\t\t\tthis._webview.showFind();\n\t\t\tthis.findWidgetVisible.set(true);\n\t\t}\n\t}\n\n\tpublic hideFind() {\n\t\tthis.findWidgetVisible.reset();\n\t\tif (this._webview) {\n\t\t\tthis._webview.hideFind();\n\t\t}\n\t}\n\n\tpublic get isWebviewEditor() {\n\t\treturn true;\n\t}\n\n\tpublic reload() {\n\t\tthis.withWebviewElement(webview => webview.reload());\n\t}\n\n\tpublic layout(_dimension: DOM.Dimension): void {\n\t\tthis.withWebviewElement(webview => {\n\t\t\tthis.doUpdateContainer();\n\t\t\twebview.layout();\n\t\t});\n\t}\n\n\tpublic focus(): void {\n\t\tsuper.focus();\n\t\tif (!this._onFocusWindowHandler) {\n\n\t\t\t// Make sure we restore focus when switching back to a VS Code window\n\t\t\tthis._onFocusWindowHandler = this._windowService.onDidChangeFocus(focused => {\n\t\t\t\tif (focused && this._editorService.activeControl === this) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.withWebviewElement(webview => webview.focus());\n\t}\n\n\tpublic selectAll(): void {\n\t\tthis.withWebviewElement(webview => webview.selectAll());\n\t}\n\n\tpublic copy(): void {\n\t\tthis.withWebviewElement(webview => webview.copy());\n\t}\n\n\tpublic paste(): void {\n\t\tthis.withWebviewElement(webview => webview.paste());\n\t}\n\n\tpublic cut(): void {\n\t\tthis.withWebviewElement(webview => webview.cut());\n\t}\n\n\tpublic undo(): void {\n\t\tthis.withWebviewElement(webview => webview.undo());\n\t}\n\n\tpublic redo(): void {\n\t\tthis.withWebviewElement(webview => webview.redo());\n\t}\n\n\tprivate withWebviewElement(f: (element: WebviewElement) => void): void {\n\t\tif (this._webview) {\n\t\t\tf(this._webview);\n\t\t}\n\t}\n\n\tprotected setEditorVisible(visible: boolean, group: IEditorGroup): void {\n\t\tif (this.input && this.input instanceof WebviewEditorInput) {\n\t\t\tif (visible) {\n\t\t\t\tthis.input.claimWebview(this);\n\t\t\t} else {\n\t\t\t\tthis.input.releaseWebview(this);\n\t\t\t}\n\n\t\t\tthis.updateWebview(this.input as WebviewEditorInput);\n\t\t}\n\n\t\tif (this._webviewContent) {\n\t\t\tif (visible) {\n\t\t\t\tthis._webviewContent.style.visibility = 'visible';\n\t\t\t\tthis.doUpdateContainer();\n\t\t\t} else {\n\t\t\t\tthis._webviewContent.style.visibility = 'hidden';\n\t\t\t}\n\t\t}\n\n\t\tsuper.setEditorVisible(visible, group);\n\t}\n\n\tpublic clearInput() {\n\t\tif (this.input && this.input instanceof WebviewEditorInput) {\n\t\t\tthis.input.releaseWebview(this);\n\t\t}\n\n\t\tthis._webview = undefined;\n\t\tthis._webviewContent = undefined;\n\t\tthis.pendingMessages = [];\n\n\t\tsuper.clearInput();\n\t}\n\n\tsetInput(input: WebviewEditorInput, options: EditorOptions, token: CancellationToken): Promise<void> {\n\t\tif (this.input) {\n\t\t\t(this.input as WebviewEditorInput).releaseWebview(this);\n\t\t\tthis._webview = undefined;\n\t\t\tthis._webviewContent = undefined;\n\t\t}\n\t\tthis.pendingMessages = [];\n\t\treturn super.setInput(input, options, token)\n\t\t\t.then(() => input.resolve())\n\t\t\t.then(() => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.group) {\n\t\t\t\t\tinput.updateGroup(this.group.id);\n\t\t\t\t}\n\t\t\t\tthis.updateWebview(input);\n\t\t\t});\n\t}\n\n\tprivate updateWebview(input: WebviewEditorInput) {\n\t\tconst webview = this.getWebview(input);\n\t\tinput.claimWebview(this);\n\t\twebview.update(input.html, {\n\t\t\tallowScripts: input.options.enableScripts,\n\t\t\tlocalResourceRoots: input.options.localResourceRoots || this.getDefaultLocalResourceRoots(),\n\t\t\tportMappings: input.options.portMapping,\n\t\t}, !!input.options.retainContextWhenHidden);\n\n\t\tif (this._webviewContent) {\n\t\t\tthis._webviewContent.style.visibility = 'visible';\n\t\t}\n\n\t\tthis.doUpdateContainer();\n\t}\n\n\tprivate getDefaultLocalResourceRoots(): URI[] {\n\t\tconst rootPaths = this._contextService.getWorkspace().folders.map(x => x.uri);\n\t\tconst extension = (this.input as WebviewEditorInput).extension;\n\t\tif (extension) {\n\t\t\trootPaths.push(extension.location);\n\t\t}\n\t\treturn rootPaths;\n\t}\n\n\tprivate getWebview(input: WebviewEditorInput): WebviewElement {\n\t\tif (this._webview) {\n\t\t\treturn this._webview;\n\t\t}\n\n\t\tthis._webviewContent = input.container;\n\n\t\tif (input.webview) {\n\t\t\tthis._webview = input.webview;\n\t\t} else {\n\t\t\tif (input.options.enableFindWidget) {\n\t\t\t\tthis._contextKeyService = this._register(this._contextKeyService.createScoped(this._webviewContent));\n\t\t\t\tthis.findWidgetVisible = KEYBINDING_CONTEXT_WEBVIEW_FIND_WIDGET_VISIBLE.bindTo(this._contextKeyService);\n\t\t\t}\n\n\t\t\tthis._webview = this._instantiationService.createInstance(WebviewElement,\n\t\t\t\tthis._layoutService.getContainer(Parts.EDITOR_PART),\n\t\t\t\t{\n\t\t\t\t\tallowSvgs: true,\n\t\t\t\t\textension: input.extension,\n\t\t\t\t\tenableFindWidget: input.options.enableFindWidget\n\t\t\t\t},\n\t\t\t\t{});\n\t\t\tthis._webview.mountTo(this._webviewContent);\n\t\t\tinput.webview = this._webview;\n\n\t\t\tif (input.options.tryRestoreScrollPosition) {\n\t\t\t\tthis._webview.initialScrollProgress = input.scrollYPercentage;\n\t\t\t}\n\n\t\t\tthis._webview.state = input.webviewState;\n\n\t\t\tthis._content!.setAttribute('aria-flowto', this._webviewContent.id);\n\n\t\t\tthis.doUpdateContainer();\n\t\t}\n\n\t\tfor (const message of this.pendingMessages) {\n\t\t\tthis._webview.sendMessage(message);\n\t\t}\n\t\tthis.pendingMessages = [];\n\n\t\tthis.trackFocus();\n\n\t\treturn this._webview;\n\t}\n\n\tprivate trackFocus() {\n\t\tthis._webviewFocusTrackerDisposables = dispose(this._webviewFocusTrackerDisposables);\n\n\t\t// Track focus in webview content\n\t\tconst webviewContentFocusTracker = DOM.trackFocus(this._webviewContent!);\n\t\tthis._webviewFocusTrackerDisposables.push(webviewContentFocusTracker);\n\t\tthis._webviewFocusTrackerDisposables.push(webviewContentFocusTracker.onDidFocus(() => this._onDidFocusWebview.fire()));\n\n\t\t// Track focus in webview element\n\t\tthis._webviewFocusTrackerDisposables.push(this._webview!.onDidFocus(() => this._onDidFocusWebview.fire()));\n\t}\n}\n"]}]}