{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/electron-browser/terminal.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/electron-browser/terminal.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/platform\", \"vs/nls\", \"vs/platform/configuration/common/configurationRegistry\", \"vs/platform/instantiation/common/extensions\", \"vs/platform/registry/common/platform\", \"vs/workbench/contrib/terminal/browser/terminal\", \"vs/workbench/contrib/terminal/common/terminal\", \"vs/workbench/contrib/terminal/electron-browser/terminalInstanceService\", \"vs/workbench/contrib/terminal/electron-browser/terminalService\", \"vs/workbench/contrib/terminal/node/terminal\"], function (require, exports, platform, nls, configurationRegistry_1, extensions_1, platform_1, terminal_1, terminal_2, terminalInstanceService_1, terminalService_1, terminal_3) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const configurationRegistry = platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration);\n    configurationRegistry.registerConfiguration({\n        id: 'terminal',\n        order: 100,\n        title: nls.localize('terminalIntegratedConfigurationTitle', \"Integrated Terminal\"),\n        type: 'object',\n        properties: {\n            'terminal.integrated.shell.linux': {\n                markdownDescription: nls.localize('terminal.integrated.shell.linux', \"The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).\"),\n                type: 'string',\n                default: terminal_3.getDefaultShell(platform.Platform.Linux)\n            },\n            'terminal.integrated.shell.osx': {\n                markdownDescription: nls.localize('terminal.integrated.shell.osx', \"The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).\"),\n                type: 'string',\n                default: terminal_3.getDefaultShell(platform.Platform.Mac)\n            },\n            'terminal.integrated.shell.windows': {\n                markdownDescription: nls.localize('terminal.integrated.shell.windows', \"The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).\"),\n                type: 'string',\n                default: terminal_3.getDefaultShell(platform.Platform.Windows)\n            }\n        }\n    });\n    extensions_1.registerSingleton(terminal_2.ITerminalService, terminalService_1.TerminalService, true);\n    extensions_1.registerSingleton(terminal_1.ITerminalInstanceService, terminalInstanceService_1.TerminalInstanceService, true);\n});\n",null]}