{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/platform\", \"os\", \"vs/base/common/uuid\", \"vs/base/node/pfs\"], function (require, exports, Platform, os, uuid, pfs_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function resolveCommonProperties(commit, version, machineId, installSourcePath) {\n        const result = Object.create(null);\n        // __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n        result['common.machineId'] = machineId;\n        // __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        result['sessionID'] = uuid.generateUuid() + Date.now();\n        // __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n        result['commitHash'] = commit;\n        // __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        result['version'] = version;\n        // __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        result['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n        // __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n        result['common.platform'] = Platform.PlatformToString(Platform.platform);\n        // __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n        result['common.nodePlatform'] = process.platform;\n        // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n        result['common.nodeArch'] = process.arch;\n        // dynamic properties which value differs on each call\n        let seq = 0;\n        const startTime = Date.now();\n        Object.defineProperties(result, {\n            // __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            'timestamp': {\n                get: () => new Date(),\n                enumerable: true\n            },\n            // __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n            'common.timesincesessionstart': {\n                get: () => Date.now() - startTime,\n                enumerable: true\n            },\n            // __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n            'common.sequence': {\n                get: () => seq++,\n                enumerable: true\n            }\n        });\n        if (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n            // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n            result['common.snap'] = 'true';\n        }\n        return pfs_1.readFile(installSourcePath, 'utf8').then(contents => {\n            // __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n            result['common.source'] = contents.slice(0, 30);\n            return result;\n        }, error => {\n            return result;\n        });\n    }\n    exports.resolveCommonProperties = resolveCommonProperties;\n});\n",null]}