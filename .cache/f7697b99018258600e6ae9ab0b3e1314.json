{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referencesWidget.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referencesWidget.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar sash_1 = require(\"vs/base/browser/ui/sash/sash\");\nvar color_1 = require(\"vs/base/common/color\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar network_1 = require(\"vs/base/common/network\");\nvar resources_1 = require(\"vs/base/common/resources\");\nrequire(\"vs/css!./media/referencesWidget\");\nvar embeddedCodeEditorWidget_1 = require(\"vs/editor/browser/widget/embeddedCodeEditorWidget\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorCommon = require(\"vs/editor/common/editorCommon\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar referencesTree_1 = require(\"vs/editor/contrib/referenceSearch/referencesTree\");\nvar nls = require(\"vs/nls\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar peekViewWidget_1 = require(\"./peekViewWidget\");\nvar referencesModel_1 = require(\"./referencesModel\");\nvar splitview_1 = require(\"vs/base/browser/ui/splitview/splitview\");\nvar DecorationsManager = /** @class */ (function () {\n    function DecorationsManager(_editor, _model) {\n        var _this = this;\n        this._editor = _editor;\n        this._model = _model;\n        this._decorations = new Map();\n        this._decorationIgnoreSet = new Set();\n        this._callOnDispose = [];\n        this._callOnModelChange = [];\n        this._callOnDispose.push(this._editor.onDidChangeModel(function () { return _this._onModelChanged(); }));\n        this._onModelChanged();\n    }\n    DecorationsManager.prototype.dispose = function () {\n        this._callOnModelChange = lifecycle_1.dispose(this._callOnModelChange);\n        this._callOnDispose = lifecycle_1.dispose(this._callOnDispose);\n        this.removeDecorations();\n    };\n    DecorationsManager.prototype._onModelChanged = function () {\n        this._callOnModelChange = lifecycle_1.dispose(this._callOnModelChange);\n        var model = this._editor.getModel();\n        if (model) {\n            for (var _i = 0, _a = this._model.groups; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                if (ref.uri.toString() === model.uri.toString()) {\n                    this._addDecorations(ref);\n                    return;\n                }\n            }\n        }\n    };\n    DecorationsManager.prototype._addDecorations = function (reference) {\n        var _this = this;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        this._callOnModelChange.push(this._editor.getModel().onDidChangeDecorations(function (event) { return _this._onDecorationChanged(); }));\n        var newDecorations = [];\n        var newDecorationsActualIndex = [];\n        for (var i = 0, len = reference.children.length; i < len; i++) {\n            var oneReference = reference.children[i];\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\n                continue;\n            }\n            newDecorations.push({\n                range: oneReference.range,\n                options: DecorationsManager.DecorationOptions\n            });\n            newDecorationsActualIndex.push(i);\n        }\n        var decorations = this._editor.deltaDecorations([], newDecorations);\n        for (var i = 0; i < decorations.length; i++) {\n            this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n        }\n    };\n    DecorationsManager.prototype._onDecorationChanged = function () {\n        var _this = this;\n        var toRemove = [];\n        var model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        this._decorations.forEach(function (reference, decorationId) {\n            var newRange = model.getDecorationRange(decorationId);\n            if (!newRange) {\n                return;\n            }\n            var ignore = false;\n            if (range_1.Range.equalsRange(newRange, reference.range)) {\n                return;\n            }\n            else if (range_1.Range.spansMultipleLines(newRange)) {\n                ignore = true;\n            }\n            else {\n                var lineLength = reference.range.endColumn - reference.range.startColumn;\n                var newLineLength = newRange.endColumn - newRange.startColumn;\n                if (lineLength !== newLineLength) {\n                    ignore = true;\n                }\n            }\n            if (ignore) {\n                _this._decorationIgnoreSet.add(reference.id);\n                toRemove.push(decorationId);\n            }\n            else {\n                reference.range = newRange;\n            }\n        });\n        for (var i = 0, len = toRemove.length; i < len; i++) {\n            this._decorations.delete(toRemove[i]);\n        }\n        this._editor.deltaDecorations(toRemove, []);\n    };\n    DecorationsManager.prototype.removeDecorations = function () {\n        var toRemove = [];\n        this._decorations.forEach(function (value, key) {\n            toRemove.push(key);\n        });\n        this._editor.deltaDecorations(toRemove, []);\n        this._decorations.clear();\n    };\n    DecorationsManager.DecorationOptions = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        className: 'reference-decoration'\n    });\n    return DecorationsManager;\n}());\nexports.ctxReferenceWidgetSearchTreeFocused = new contextkey_1.RawContextKey('referenceSearchTreeFocused', true);\n/**\n * ZoneWidget that is shown inside the editor\n */\nvar ReferenceWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(ReferenceWidget, _super);\n    function ReferenceWidget(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel) {\n        var _this = _super.call(this, editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true }) || this;\n        _this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        _this.layoutData = layoutData;\n        _this._textModelResolverService = _textModelResolverService;\n        _this._instantiationService = _instantiationService;\n        _this._peekViewService = _peekViewService;\n        _this._uriLabel = _uriLabel;\n        _this._disposeOnNewModel = [];\n        _this._callOnDispose = [];\n        _this._onDidSelectReference = new event_1.Emitter();\n        _this._dim = { height: 0, width: 0 };\n        _this._applyTheme(themeService.getTheme());\n        _this._callOnDispose.push(themeService.onThemeChange(_this._applyTheme.bind(_this)));\n        _this._peekViewService.addExclusiveWidget(editor, _this);\n        _this.create();\n        return _this;\n    }\n    ReferenceWidget.prototype.dispose = function () {\n        this.setModel(undefined);\n        this._callOnDispose = lifecycle_1.dispose(this._callOnDispose);\n        lifecycle_1.dispose(this._preview, this._previewNotAvailableMessage, this._tree, this._previewModelReference);\n        this._splitView.dispose();\n        _super.prototype.dispose.call(this);\n    };\n    ReferenceWidget.prototype._applyTheme = function (theme) {\n        var borderColor = theme.getColor(exports.peekViewBorder) || color_1.Color.transparent;\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: theme.getColor(exports.peekViewTitleBackground) || color_1.Color.transparent,\n            primaryHeadingColor: theme.getColor(exports.peekViewTitleForeground),\n            secondaryHeadingColor: theme.getColor(exports.peekViewTitleInfoForeground)\n        });\n    };\n    Object.defineProperty(ReferenceWidget.prototype, \"onDidSelectReference\", {\n        get: function () {\n            return this._onDidSelectReference.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReferenceWidget.prototype.show = function (where) {\n        this.editor.revealRangeInCenterIfOutsideViewport(where, editorCommon.ScrollType.Smooth);\n        _super.prototype.show.call(this, where, this.layoutData.heightInLines || 18);\n    };\n    ReferenceWidget.prototype.focus = function () {\n        this._tree.domFocus();\n    };\n    ReferenceWidget.prototype._onTitleClick = function (e) {\n        if (this._preview && this._preview.getModel()) {\n            this._onDidSelectReference.fire({\n                element: this._getFocusedReference(),\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n                source: 'title'\n            });\n        }\n    };\n    ReferenceWidget.prototype._fillBody = function (containerElement) {\n        var _this = this;\n        this.setCssClass('reference-zone-widget');\n        // message pane\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n        dom.hide(this._messageContainer);\n        this._splitView = new splitview_1.SplitView(containerElement, { orientation: sash_1.Orientation.HORIZONTAL });\n        // editor\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n        var options = {\n            scrollBeyondLastLine: false,\n            scrollbar: {\n                verticalScrollbarSize: 14,\n                horizontal: 'auto',\n                useShadows: true,\n                verticalHasArrows: false,\n                horizontalHasArrows: false\n            },\n            overviewRulerLanes: 2,\n            fixedOverflowWidgets: true,\n            minimap: {\n                enabled: false\n            }\n        };\n        this._preview = this._instantiationService.createInstance(embeddedCodeEditorWidget_1.EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\n        dom.hide(this._previewContainer);\n        this._previewNotAvailableMessage = textModel_1.TextModel.createFromString(nls.localize('missingPreviewMessage', \"no preview available\"));\n        // tree\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n        var treeOptions = {\n            ariaLabel: nls.localize('treeAriaLabel', \"References\"),\n            keyboardSupport: this._defaultTreeKeyboardSupport,\n            accessibilityProvider: new referencesTree_1.AriaProvider(),\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(referencesTree_1.StringRepresentationProvider),\n            identityProvider: new referencesTree_1.IdentityProvider()\n        };\n        this._tree = this._instantiationService.createInstance(listService_1.WorkbenchAsyncDataTree, this._treeContainer, new referencesTree_1.Delegate(), [\n            this._instantiationService.createInstance(referencesTree_1.FileReferencesRenderer),\n            this._instantiationService.createInstance(referencesTree_1.OneReferenceRenderer),\n        ], this._instantiationService.createInstance(referencesTree_1.DataSource), treeOptions);\n        exports.ctxReferenceWidgetSearchTreeFocused.bindTo(this._tree.contextKeyService);\n        // split stuff\n        this._splitView.addView({\n            onDidChange: event_1.Event.None,\n            element: this._previewContainer,\n            minimumSize: 200,\n            maximumSize: Number.MAX_VALUE,\n            layout: function (width) {\n                _this._preview.layout({ height: _this._dim.height, width: width });\n            }\n        }, splitview_1.Sizing.Distribute);\n        this._splitView.addView({\n            onDidChange: event_1.Event.None,\n            element: this._treeContainer,\n            minimumSize: 100,\n            maximumSize: Number.MAX_VALUE,\n            layout: function (width) {\n                _this._treeContainer.style.height = _this._dim.height + \"px\";\n                _this._treeContainer.style.width = width + \"px\";\n                _this._tree.layout(_this._dim.height, width);\n            }\n        }, splitview_1.Sizing.Distribute);\n        this._splitView.onDidSashChange(function () {\n            if (_this._dim.width) {\n                _this.layoutData.ratio = _this._splitView.getViewSize(0) / _this._dim.width;\n            }\n        }, undefined, this._disposables);\n        // listen on selection and focus\n        var onEvent = function (element, kind) {\n            if (element instanceof referencesModel_1.OneReference) {\n                if (kind === 'show') {\n                    _this._revealReference(element, false);\n                }\n                _this._onDidSelectReference.fire({ element: element, kind: kind, source: 'tree' });\n            }\n        };\n        this._tree.onDidChangeFocus(function (e) {\n            onEvent(e.elements[0], 'show');\n        });\n        this._tree.onDidChangeSelection(function (e) {\n            var aside = false;\n            var goto = false;\n            if (e.browserEvent instanceof KeyboardEvent) {\n                // todo@joh make this a command\n                goto = true;\n            }\n            else if (e.browserEvent instanceof MouseEvent) {\n                aside = e.browserEvent.ctrlKey || e.browserEvent.metaKey || e.browserEvent.altKey;\n                goto = e.browserEvent.detail === 2;\n            }\n            if (aside) {\n                onEvent(e.elements[0], 'side');\n            }\n            else if (goto) {\n                onEvent(e.elements[0], 'goto');\n            }\n            else {\n                onEvent(e.elements[0], 'show');\n            }\n        });\n        this._tree.onDidOpen(function (e) {\n            var aside = (e.browserEvent instanceof MouseEvent) && (e.browserEvent.ctrlKey || e.browserEvent.metaKey || e.browserEvent.altKey);\n            var goto = !e.browserEvent || ((e.browserEvent instanceof MouseEvent) && e.browserEvent.detail === 2);\n            if (aside) {\n                onEvent(e.elements[0], 'side');\n            }\n            else if (goto) {\n                onEvent(e.elements[0], 'goto');\n            }\n            else {\n                onEvent(e.elements[0], 'show');\n            }\n        });\n        dom.hide(this._treeContainer);\n    };\n    ReferenceWidget.prototype._onWidth = function (width) {\n        if (this._dim) {\n            this._doLayoutBody(this._dim.height, width);\n        }\n    };\n    ReferenceWidget.prototype._doLayoutBody = function (heightInPixel, widthInPixel) {\n        _super.prototype._doLayoutBody.call(this, heightInPixel, widthInPixel);\n        this._dim = { height: heightInPixel, width: widthInPixel };\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n        this._splitView.layout(widthInPixel);\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n    };\n    ReferenceWidget.prototype.setSelection = function (selection) {\n        var _this = this;\n        return this._revealReference(selection, true).then(function () {\n            if (!_this._model) {\n                // disposed\n                return;\n            }\n            // show in tree\n            _this._tree.setSelection([selection]);\n            _this._tree.setFocus([selection]);\n        });\n    };\n    ReferenceWidget.prototype.setModel = function (newModel) {\n        // clean up\n        this._disposeOnNewModel = lifecycle_1.dispose(this._disposeOnNewModel);\n        this._model = newModel;\n        if (this._model) {\n            return this._onNewModel();\n        }\n        return Promise.resolve();\n    };\n    ReferenceWidget.prototype._onNewModel = function () {\n        var _this = this;\n        if (!this._model) {\n            return Promise.resolve(undefined);\n        }\n        if (this._model.empty) {\n            this.setTitle('');\n            this._messageContainer.innerHTML = nls.localize('noResults', \"No results\");\n            dom.show(this._messageContainer);\n            return Promise.resolve(undefined);\n        }\n        dom.hide(this._messageContainer);\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\n        this._disposeOnNewModel.push(this._decorationsManager);\n        // listen on model changes\n        this._disposeOnNewModel.push(this._model.onDidChangeReferenceRange(function (reference) { return _this._tree.rerender(reference); }));\n        // listen on editor\n        this._disposeOnNewModel.push(this._preview.onMouseDown(function (e) {\n            var event = e.event, target = e.target;\n            if (event.detail !== 2) {\n                return;\n            }\n            var element = _this._getFocusedReference();\n            if (!element) {\n                return;\n            }\n            _this._onDidSelectReference.fire({\n                element: { uri: element.uri, range: target.range },\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\n                source: 'editor'\n            });\n        }));\n        // make sure things are rendered\n        dom.addClass(this.container, 'results-loaded');\n        dom.show(this._treeContainer);\n        dom.show(this._previewContainer);\n        this._splitView.layout(this._dim.width);\n        this.focus();\n        // pick input and a reference to begin with\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n    };\n    ReferenceWidget.prototype._getFocusedReference = function () {\n        var element = this._tree.getFocus()[0];\n        if (element instanceof referencesModel_1.OneReference) {\n            return element;\n        }\n        else if (element instanceof referencesModel_1.FileReferences) {\n            if (element.children.length > 0) {\n                return element.children[0];\n            }\n        }\n        return undefined;\n    };\n    ReferenceWidget.prototype._revealReference = function (reference, revealParent) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var promise, ref, model, scrollType, sel;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // check if there is anything to do...\n                        if (this._revealedReference === reference) {\n                            return [2 /*return*/];\n                        }\n                        this._revealedReference = reference;\n                        // Update widget header\n                        if (reference.uri.scheme !== network_1.Schemas.inMemory) {\n                            this.setTitle(resources_1.basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(resources_1.dirname(reference.uri)));\n                        }\n                        else {\n                            this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n                        }\n                        promise = this._textModelResolverService.createModelReference(reference.uri);\n                        if (!(this._tree.getInput() === reference.parent)) return [3 /*break*/, 1];\n                        this._tree.reveal(reference);\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (revealParent) {\n                            this._tree.reveal(reference.parent);\n                        }\n                        return [4 /*yield*/, this._tree.expand(reference.parent)];\n                    case 2:\n                        _a.sent();\n                        this._tree.reveal(reference);\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, promise];\n                    case 4:\n                        ref = _a.sent();\n                        if (!this._model) {\n                            // disposed\n                            ref.dispose();\n                            return [2 /*return*/];\n                        }\n                        lifecycle_1.dispose(this._previewModelReference);\n                        model = ref.object;\n                        if (model) {\n                            scrollType = this._preview.getModel() === model.textEditorModel ? editorCommon.ScrollType.Smooth : editorCommon.ScrollType.Immediate;\n                            sel = range_1.Range.lift(reference.range).collapseToStart();\n                            this._previewModelReference = ref;\n                            this._preview.setModel(model.textEditorModel);\n                            this._preview.setSelection(sel);\n                            this._preview.revealRangeInCenter(sel, scrollType);\n                        }\n                        else {\n                            this._preview.setModel(this._previewNotAvailableMessage);\n                            ref.dispose();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ReferenceWidget = tslib_1.__decorate([\n        tslib_1.__param(3, themeService_1.IThemeService),\n        tslib_1.__param(4, resolverService_1.ITextModelService),\n        tslib_1.__param(5, instantiation_1.IInstantiationService),\n        tslib_1.__param(6, peekViewWidget_1.IPeekViewService),\n        tslib_1.__param(7, label_1.ILabelService)\n    ], ReferenceWidget);\n    return ReferenceWidget;\n}(peekViewWidget_1.PeekViewWidget));\nexports.ReferenceWidget = ReferenceWidget;\n// theming\nexports.peekViewTitleBackground = colorRegistry_1.registerColor('peekViewTitle.background', { dark: '#1E1E1E', light: '#FFFFFF', hc: '#0C141F' }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexports.peekViewTitleForeground = colorRegistry_1.registerColor('peekViewTitleLabel.foreground', { dark: '#FFFFFF', light: '#333333', hc: '#FFFFFF' }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexports.peekViewTitleInfoForeground = colorRegistry_1.registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#6c6c6cb3', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexports.peekViewBorder = colorRegistry_1.registerColor('peekView.border', { dark: '#007acc', light: '#007acc', hc: colorRegistry_1.contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\nexports.peekViewResultsBackground = colorRegistry_1.registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: color_1.Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexports.peekViewResultsMatchForeground = colorRegistry_1.registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: color_1.Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexports.peekViewResultsFileForeground = colorRegistry_1.registerColor('peekViewResult.fileForeground', { dark: color_1.Color.white, light: '#1E1E1E', hc: color_1.Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexports.peekViewResultsSelectionBackground = colorRegistry_1.registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexports.peekViewResultsSelectionForeground = colorRegistry_1.registerColor('peekViewResult.selectionForeground', { dark: color_1.Color.white, light: '#6C6C6C', hc: color_1.Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexports.peekViewEditorBackground = colorRegistry_1.registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: color_1.Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexports.peekViewEditorGutterBackground = colorRegistry_1.registerColor('peekViewEditorGutter.background', { dark: exports.peekViewEditorBackground, light: exports.peekViewEditorBackground, hc: exports.peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\nexports.peekViewResultsMatchHighlight = colorRegistry_1.registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexports.peekViewEditorMatchHighlight = colorRegistry_1.registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexports.peekViewEditorMatchHighlightBorder = colorRegistry_1.registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: colorRegistry_1.activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var findMatchHighlightColor = theme.getColor(exports.peekViewResultsMatchHighlight);\n    if (findMatchHighlightColor) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .referenceMatch { background-color: \" + findMatchHighlightColor + \"; }\");\n    }\n    var referenceHighlightColor = theme.getColor(exports.peekViewEditorMatchHighlight);\n    if (referenceHighlightColor) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: \" + referenceHighlightColor + \"; }\");\n    }\n    var referenceHighlightBorder = theme.getColor(exports.peekViewEditorMatchHighlightBorder);\n    if (referenceHighlightBorder) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid \" + referenceHighlightBorder + \"; box-sizing: border-box; }\");\n    }\n    var hcOutline = theme.getColor(colorRegistry_1.activeContrastBorder);\n    if (hcOutline) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .referenceMatch { border: 1px dotted \" + hcOutline + \"; box-sizing: border-box; }\");\n    }\n    var resultsBackground = theme.getColor(exports.peekViewResultsBackground);\n    if (resultsBackground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree { background-color: \" + resultsBackground + \"; }\");\n    }\n    var resultsMatchForeground = theme.getColor(exports.peekViewResultsMatchForeground);\n    if (resultsMatchForeground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree { color: \" + resultsMatchForeground + \"; }\");\n    }\n    var resultsFileForeground = theme.getColor(exports.peekViewResultsFileForeground);\n    if (resultsFileForeground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .reference-file { color: \" + resultsFileForeground + \"; }\");\n    }\n    var resultsSelectedBackground = theme.getColor(exports.peekViewResultsSelectionBackground);\n    if (resultsSelectedBackground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: \" + resultsSelectedBackground + \"; }\");\n    }\n    var resultsSelectedForeground = theme.getColor(exports.peekViewResultsSelectionForeground);\n    if (resultsSelectedForeground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: \" + resultsSelectedForeground + \" !important; }\");\n    }\n    var editorBackground = theme.getColor(exports.peekViewEditorBackground);\n    if (editorBackground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,\" +\n            \".monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {\" +\n            (\"\\tbackground-color: \" + editorBackground + \";\") +\n            \"}\");\n    }\n    var editorGutterBackground = theme.getColor(exports.peekViewEditorGutterBackground);\n    if (editorGutterBackground) {\n        collector.addRule(\".monaco-editor .reference-zone-widget .preview .monaco-editor .margin {\" +\n            (\"\\tbackground-color: \" + editorGutterBackground + \";\") +\n            \"}\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referencesWidget.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/referenceSearch/referencesWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { IMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { Orientation } from 'vs/base/browser/ui/sash/sash';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, IReference } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basenameOrAuthority, dirname } from 'vs/base/common/resources';\nimport 'vs/css!./media/referencesWidget';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { EmbeddedCodeEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDeltaDecoration, TrackedRangeStickiness } from 'vs/editor/common/model';\nimport { ModelDecorationOptions, TextModel } from 'vs/editor/common/model/textModel';\nimport { Location } from 'vs/editor/common/modes';\nimport { ITextEditorModel, ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { AriaProvider, DataSource, Delegate, FileReferencesRenderer, OneReferenceRenderer, TreeElement, StringRepresentationProvider, IdentityProvider } from 'vs/editor/contrib/referenceSearch/referencesTree';\nimport * as nls from 'vs/nls';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { activeContrastBorder, contrastBorder, registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { ITheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { PeekViewWidget, IPeekViewService } from './peekViewWidget';\nimport { FileReferences, OneReference, ReferencesModel } from './referencesModel';\nimport { ITreeRenderer, IAsyncDataSource } from 'vs/base/browser/ui/tree/tree';\nimport { IAsyncDataTreeOptions } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { FuzzyScore } from 'vs/base/common/filters';\nimport { SplitView, Sizing } from 'vs/base/browser/ui/splitview/splitview';\n\n\nclass DecorationsManager implements IDisposable {\n\n\tprivate static readonly DecorationOptions = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tclassName: 'reference-decoration'\n\t});\n\n\tprivate _decorations = new Map<string, OneReference>();\n\tprivate _decorationIgnoreSet = new Set<string>();\n\tprivate _callOnDispose: IDisposable[] = [];\n\tprivate _callOnModelChange: IDisposable[] = [];\n\n\tconstructor(private _editor: ICodeEditor, private _model: ReferencesModel) {\n\t\tthis._callOnDispose.push(this._editor.onDidChangeModel(() => this._onModelChanged()));\n\t\tthis._onModelChanged();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._callOnModelChange = dispose(this._callOnModelChange);\n\t\tthis._callOnDispose = dispose(this._callOnDispose);\n\t\tthis.removeDecorations();\n\t}\n\n\tprivate _onModelChanged(): void {\n\t\tthis._callOnModelChange = dispose(this._callOnModelChange);\n\t\tconst model = this._editor.getModel();\n\t\tif (model) {\n\t\t\tfor (const ref of this._model.groups) {\n\t\t\t\tif (ref.uri.toString() === model.uri.toString()) {\n\t\t\t\t\tthis._addDecorations(ref);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _addDecorations(reference: FileReferences): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\t\tthis._callOnModelChange.push(this._editor.getModel().onDidChangeDecorations((event) => this._onDecorationChanged()));\n\n\t\tconst newDecorations: IModelDeltaDecoration[] = [];\n\t\tconst newDecorationsActualIndex: number[] = [];\n\n\t\tfor (let i = 0, len = reference.children.length; i < len; i++) {\n\t\t\tlet oneReference = reference.children[i];\n\t\t\tif (this._decorationIgnoreSet.has(oneReference.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnewDecorations.push({\n\t\t\t\trange: oneReference.range,\n\t\t\t\toptions: DecorationsManager.DecorationOptions\n\t\t\t});\n\t\t\tnewDecorationsActualIndex.push(i);\n\t\t}\n\n\t\tconst decorations = this._editor.deltaDecorations([], newDecorations);\n\t\tfor (let i = 0; i < decorations.length; i++) {\n\t\t\tthis._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\n\t\t}\n\t}\n\n\tprivate _onDecorationChanged(): void {\n\t\tconst toRemove: string[] = [];\n\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._decorations.forEach((reference, decorationId) => {\n\t\t\tconst newRange = model.getDecorationRange(decorationId);\n\n\t\t\tif (!newRange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet ignore = false;\n\n\t\t\tif (Range.equalsRange(newRange, reference.range)) {\n\t\t\t\treturn;\n\n\t\t\t} else if (Range.spansMultipleLines(newRange)) {\n\t\t\t\tignore = true;\n\n\t\t\t} else {\n\t\t\t\tconst lineLength = reference.range.endColumn - reference.range.startColumn;\n\t\t\t\tconst newLineLength = newRange.endColumn - newRange.startColumn;\n\n\t\t\t\tif (lineLength !== newLineLength) {\n\t\t\t\t\tignore = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ignore) {\n\t\t\t\tthis._decorationIgnoreSet.add(reference.id);\n\t\t\t\ttoRemove.push(decorationId);\n\t\t\t} else {\n\t\t\t\treference.range = newRange;\n\t\t\t}\n\t\t});\n\n\t\tfor (let i = 0, len = toRemove.length; i < len; i++) {\n\t\t\tthis._decorations.delete(toRemove[i]);\n\t\t}\n\t\tthis._editor.deltaDecorations(toRemove, []);\n\t}\n\n\tpublic removeDecorations(): void {\n\t\tlet toRemove: string[] = [];\n\t\tthis._decorations.forEach((value, key) => {\n\t\t\ttoRemove.push(key);\n\t\t});\n\t\tthis._editor.deltaDecorations(toRemove, []);\n\t\tthis._decorations.clear();\n\t}\n}\n\nexport interface LayoutData {\n\tratio: number;\n\theightInLines: number;\n}\n\nexport interface SelectionEvent {\n\tkind: 'goto' | 'show' | 'side' | 'open';\n\tsource: 'editor' | 'tree' | 'title';\n\telement?: Location;\n}\n\nexport const ctxReferenceWidgetSearchTreeFocused = new RawContextKey<boolean>('referenceSearchTreeFocused', true);\n\n/**\n * ZoneWidget that is shown inside the editor\n */\nexport class ReferenceWidget extends PeekViewWidget {\n\n\tprivate _model: ReferencesModel | undefined;\n\tprivate _decorationsManager: DecorationsManager;\n\n\tprivate _disposeOnNewModel: IDisposable[] = [];\n\tprivate _callOnDispose: IDisposable[] = [];\n\tprivate _onDidSelectReference = new Emitter<SelectionEvent>();\n\n\tprivate _tree: WorkbenchAsyncDataTree<ReferencesModel | FileReferences, TreeElement, FuzzyScore>;\n\tprivate _treeContainer: HTMLElement;\n\t// private _sash: VSash;\n\tprivate _splitView: SplitView;\n\tprivate _preview: ICodeEditor;\n\tprivate _previewModelReference: IReference<ITextEditorModel>;\n\tprivate _previewNotAvailableMessage: TextModel;\n\tprivate _previewContainer: HTMLElement;\n\tprivate _messageContainer: HTMLElement;\n\tprivate _dim: dom.Dimension = { height: 0, width: 0 };\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tprivate _defaultTreeKeyboardSupport: boolean,\n\t\tpublic layoutData: LayoutData,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IPeekViewService private readonly _peekViewService: IPeekViewService,\n\t\t@ILabelService private readonly _uriLabel: ILabelService\n\t) {\n\t\tsuper(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true });\n\n\t\tthis._applyTheme(themeService.getTheme());\n\t\tthis._callOnDispose.push(themeService.onThemeChange(this._applyTheme.bind(this)));\n\t\tthis._peekViewService.addExclusiveWidget(editor, this);\n\t\tthis.create();\n\t}\n\n\tdispose(): void {\n\t\tthis.setModel(undefined);\n\t\tthis._callOnDispose = dispose(this._callOnDispose);\n\t\tdispose<IDisposable>(this._preview, this._previewNotAvailableMessage, this._tree, this._previewModelReference);\n\t\tthis._splitView.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _applyTheme(theme: ITheme) {\n\t\tconst borderColor = theme.getColor(peekViewBorder) || Color.transparent;\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor,\n\t\t\theaderBackgroundColor: theme.getColor(peekViewTitleBackground) || Color.transparent,\n\t\t\tprimaryHeadingColor: theme.getColor(peekViewTitleForeground),\n\t\t\tsecondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n\t\t});\n\t}\n\n\tget onDidSelectReference(): Event<SelectionEvent> {\n\t\treturn this._onDidSelectReference.event;\n\t}\n\n\tshow(where: IRange) {\n\t\tthis.editor.revealRangeInCenterIfOutsideViewport(where, editorCommon.ScrollType.Smooth);\n\t\tsuper.show(where, this.layoutData.heightInLines || 18);\n\t}\n\n\tfocus(): void {\n\t\tthis._tree.domFocus();\n\t}\n\n\tprotected _onTitleClick(e: IMouseEvent): void {\n\t\tif (this._preview && this._preview.getModel()) {\n\t\t\tthis._onDidSelectReference.fire({\n\t\t\t\telement: this._getFocusedReference(),\n\t\t\t\tkind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\n\t\t\t\tsource: 'title'\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _fillBody(containerElement: HTMLElement): void {\n\t\tthis.setCssClass('reference-zone-widget');\n\n\t\t// message pane\n\t\tthis._messageContainer = dom.append(containerElement, dom.$('div.messages'));\n\t\tdom.hide(this._messageContainer);\n\n\t\tthis._splitView = new SplitView(containerElement, { orientation: Orientation.HORIZONTAL });\n\n\t\t// editor\n\t\tthis._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\n\t\tlet options: IEditorOptions = {\n\t\t\tscrollBeyondLastLine: false,\n\t\t\tscrollbar: {\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\thorizontal: 'auto',\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false\n\t\t\t},\n\t\t\toverviewRulerLanes: 2,\n\t\t\tfixedOverflowWidgets: true,\n\t\t\tminimap: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t};\n\t\tthis._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\n\t\tdom.hide(this._previewContainer);\n\t\tthis._previewNotAvailableMessage = TextModel.createFromString(nls.localize('missingPreviewMessage', \"no preview available\"));\n\n\t\t// tree\n\t\tthis._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\n\t\tconst treeOptions: IAsyncDataTreeOptions<TreeElement, FuzzyScore> = {\n\t\t\tariaLabel: nls.localize('treeAriaLabel', \"References\"),\n\t\t\tkeyboardSupport: this._defaultTreeKeyboardSupport,\n\t\t\taccessibilityProvider: new AriaProvider(),\n\t\t\tkeyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\n\t\t\tidentityProvider: new IdentityProvider()\n\t\t};\n\t\tthis._tree = this._instantiationService.createInstance<HTMLElement, IListVirtualDelegate<TreeElement>, ITreeRenderer<any, FuzzyScore, any>[], IAsyncDataSource<ReferencesModel | FileReferences, TreeElement>, IAsyncDataTreeOptions<TreeElement, FuzzyScore>, WorkbenchAsyncDataTree<ReferencesModel | FileReferences, TreeElement, FuzzyScore>>(\n\t\t\tWorkbenchAsyncDataTree,\n\t\t\tthis._treeContainer,\n\t\t\tnew Delegate(),\n\t\t\t[\n\t\t\t\tthis._instantiationService.createInstance(FileReferencesRenderer),\n\t\t\t\tthis._instantiationService.createInstance(OneReferenceRenderer),\n\t\t\t],\n\t\t\tthis._instantiationService.createInstance(DataSource),\n\t\t\ttreeOptions\n\t\t);\n\t\tctxReferenceWidgetSearchTreeFocused.bindTo(this._tree.contextKeyService);\n\n\t\t// split stuff\n\t\tthis._splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: this._previewContainer,\n\t\t\tminimumSize: 200,\n\t\t\tmaximumSize: Number.MAX_VALUE,\n\t\t\tlayout: (width) => {\n\t\t\t\tthis._preview.layout({ height: this._dim.height, width });\n\t\t\t}\n\t\t}, Sizing.Distribute);\n\n\t\tthis._splitView.addView({\n\t\t\tonDidChange: Event.None,\n\t\t\telement: this._treeContainer,\n\t\t\tminimumSize: 100,\n\t\t\tmaximumSize: Number.MAX_VALUE,\n\t\t\tlayout: (width) => {\n\t\t\t\tthis._treeContainer.style.height = `${this._dim.height}px`;\n\t\t\t\tthis._treeContainer.style.width = `${width}px`;\n\t\t\t\tthis._tree.layout(this._dim.height, width);\n\t\t\t}\n\t\t}, Sizing.Distribute);\n\n\t\tthis._splitView.onDidSashChange(() => {\n\t\t\tif (this._dim.width) {\n\t\t\t\tthis.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\n\t\t\t}\n\t\t}, undefined, this._disposables);\n\n\t\t// listen on selection and focus\n\t\tlet onEvent = (element: any, kind: 'show' | 'goto' | 'side') => {\n\t\t\tif (element instanceof OneReference) {\n\t\t\t\tif (kind === 'show') {\n\t\t\t\t\tthis._revealReference(element, false);\n\t\t\t\t}\n\t\t\t\tthis._onDidSelectReference.fire({ element, kind, source: 'tree' });\n\t\t\t}\n\t\t};\n\t\tthis._tree.onDidChangeFocus(e => {\n\t\t\tonEvent(e.elements[0], 'show');\n\t\t});\n\t\tthis._tree.onDidChangeSelection(e => {\n\t\t\tlet aside = false;\n\t\t\tlet goto = false;\n\t\t\tif (e.browserEvent instanceof KeyboardEvent) {\n\t\t\t\t// todo@joh make this a command\n\t\t\t\tgoto = true;\n\t\t\t} else if (e.browserEvent instanceof MouseEvent) {\n\t\t\t\taside = e.browserEvent.ctrlKey || e.browserEvent.metaKey || e.browserEvent.altKey;\n\t\t\t\tgoto = e.browserEvent.detail === 2;\n\t\t\t}\n\t\t\tif (aside) {\n\t\t\t\tonEvent(e.elements[0], 'side');\n\t\t\t} else if (goto) {\n\t\t\t\tonEvent(e.elements[0], 'goto');\n\t\t\t} else {\n\t\t\t\tonEvent(e.elements[0], 'show');\n\t\t\t}\n\t\t});\n\t\tthis._tree.onDidOpen(e => {\n\t\t\tconst aside = (e.browserEvent instanceof MouseEvent) && (e.browserEvent.ctrlKey || e.browserEvent.metaKey || e.browserEvent.altKey);\n\t\t\tconst goto = !e.browserEvent || ((e.browserEvent instanceof MouseEvent) && e.browserEvent.detail === 2);\n\n\t\t\tif (aside) {\n\t\t\t\tonEvent(e.elements[0], 'side');\n\t\t\t} else if (goto) {\n\t\t\t\tonEvent(e.elements[0], 'goto');\n\t\t\t} else {\n\t\t\t\tonEvent(e.elements[0], 'show');\n\t\t\t}\n\t\t});\n\n\t\tdom.hide(this._treeContainer);\n\t}\n\n\tprotected _onWidth(width: number) {\n\t\tif (this._dim) {\n\t\t\tthis._doLayoutBody(this._dim.height, width);\n\t\t}\n\t}\n\n\tprotected _doLayoutBody(heightInPixel: number, widthInPixel: number): void {\n\t\tsuper._doLayoutBody(heightInPixel, widthInPixel);\n\t\tthis._dim = { height: heightInPixel, width: widthInPixel };\n\t\tthis.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\n\t\tthis._splitView.layout(widthInPixel);\n\t\tthis._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\n\t}\n\n\tpublic setSelection(selection: OneReference): Promise<any> {\n\t\treturn this._revealReference(selection, true).then(() => {\n\t\t\tif (!this._model) {\n\t\t\t\t// disposed\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// show in tree\n\t\t\tthis._tree.setSelection([selection]);\n\t\t\tthis._tree.setFocus([selection]);\n\t\t});\n\t}\n\n\tpublic setModel(newModel: ReferencesModel | undefined): Promise<any> {\n\t\t// clean up\n\t\tthis._disposeOnNewModel = dispose(this._disposeOnNewModel);\n\t\tthis._model = newModel;\n\t\tif (this._model) {\n\t\t\treturn this._onNewModel();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate _onNewModel(): Promise<any> {\n\t\tif (!this._model) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (this._model.empty) {\n\t\t\tthis.setTitle('');\n\t\t\tthis._messageContainer.innerHTML = nls.localize('noResults', \"No results\");\n\t\t\tdom.show(this._messageContainer);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tdom.hide(this._messageContainer);\n\t\tthis._decorationsManager = new DecorationsManager(this._preview, this._model);\n\t\tthis._disposeOnNewModel.push(this._decorationsManager);\n\n\t\t// listen on model changes\n\t\tthis._disposeOnNewModel.push(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\n\n\t\t// listen on editor\n\t\tthis._disposeOnNewModel.push(this._preview.onMouseDown(e => {\n\t\t\tconst { event, target } = e;\n\t\t\tif (event.detail !== 2) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst element = this._getFocusedReference();\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onDidSelectReference.fire({\n\t\t\t\telement: { uri: element.uri, range: target.range! },\n\t\t\t\tkind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\n\t\t\t\tsource: 'editor'\n\t\t\t});\n\t\t}));\n\n\t\t// make sure things are rendered\n\t\tdom.addClass(this.container, 'results-loaded');\n\t\tdom.show(this._treeContainer);\n\t\tdom.show(this._previewContainer);\n\t\tthis._splitView.layout(this._dim.width);\n\t\tthis.focus();\n\n\t\t// pick input and a reference to begin with\n\t\treturn this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\n\t}\n\n\tprivate _getFocusedReference(): OneReference | undefined {\n\t\tconst [element] = this._tree.getFocus();\n\t\tif (element instanceof OneReference) {\n\t\t\treturn element;\n\t\t} else if (element instanceof FileReferences) {\n\t\t\tif (element.children.length > 0) {\n\t\t\t\treturn element.children[0];\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _revealedReference?: OneReference;\n\n\tprivate async _revealReference(reference: OneReference, revealParent: boolean): Promise<void> {\n\n\t\t// check if there is anything to do...\n\t\tif (this._revealedReference === reference) {\n\t\t\treturn;\n\t\t}\n\t\tthis._revealedReference = reference;\n\n\t\t// Update widget header\n\t\tif (reference.uri.scheme !== Schemas.inMemory) {\n\t\t\tthis.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\n\t\t} else {\n\t\t\tthis.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\n\t\t}\n\n\t\tconst promise = this._textModelResolverService.createModelReference(reference.uri);\n\n\t\tif (this._tree.getInput() === reference.parent) {\n\t\t\tthis._tree.reveal(reference);\n\t\t} else {\n\t\t\tif (revealParent) {\n\t\t\t\tthis._tree.reveal(reference.parent);\n\t\t\t}\n\t\t\tawait this._tree.expand(reference.parent);\n\t\t\tthis._tree.reveal(reference);\n\t\t}\n\n\t\tconst ref = await promise;\n\n\t\tif (!this._model) {\n\t\t\t// disposed\n\t\t\tref.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\tdispose(this._previewModelReference);\n\n\t\t// show in editor\n\t\tconst model = ref.object;\n\t\tif (model) {\n\t\t\tconst scrollType = this._preview.getModel() === model.textEditorModel ? editorCommon.ScrollType.Smooth : editorCommon.ScrollType.Immediate;\n\t\t\tconst sel = Range.lift(reference.range).collapseToStart();\n\t\t\tthis._previewModelReference = ref;\n\t\t\tthis._preview.setModel(model.textEditorModel);\n\t\t\tthis._preview.setSelection(sel);\n\t\t\tthis._preview.revealRangeInCenter(sel, scrollType);\n\t\t} else {\n\t\t\tthis._preview.setModel(this._previewNotAvailableMessage);\n\t\t\tref.dispose();\n\t\t}\n\t}\n}\n\n// theming\n\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: '#1E1E1E', light: '#FFFFFF', hc: '#0C141F' }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: '#FFFFFF', light: '#333333', hc: '#FFFFFF' }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#6c6c6cb3', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\nexport const peekViewBorder = registerColor('peekView.border', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\n\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hc: Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hc: Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hc: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\n\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\n\n\nregisterThemingParticipant((theme, collector) => {\n\tconst findMatchHighlightColor = theme.getColor(peekViewResultsMatchHighlight);\n\tif (findMatchHighlightColor) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch { background-color: ${findMatchHighlightColor}; }`);\n\t}\n\tconst referenceHighlightColor = theme.getColor(peekViewEditorMatchHighlight);\n\tif (referenceHighlightColor) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: ${referenceHighlightColor}; }`);\n\t}\n\tconst referenceHighlightBorder = theme.getColor(peekViewEditorMatchHighlightBorder);\n\tif (referenceHighlightBorder) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid ${referenceHighlightBorder}; box-sizing: border-box; }`);\n\t}\n\tconst hcOutline = theme.getColor(activeContrastBorder);\n\tif (hcOutline) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch { border: 1px dotted ${hcOutline}; box-sizing: border-box; }`);\n\t}\n\tconst resultsBackground = theme.getColor(peekViewResultsBackground);\n\tif (resultsBackground) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { background-color: ${resultsBackground}; }`);\n\t}\n\tconst resultsMatchForeground = theme.getColor(peekViewResultsMatchForeground);\n\tif (resultsMatchForeground) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { color: ${resultsMatchForeground}; }`);\n\t}\n\tconst resultsFileForeground = theme.getColor(peekViewResultsFileForeground);\n\tif (resultsFileForeground) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .reference-file { color: ${resultsFileForeground}; }`);\n\t}\n\tconst resultsSelectedBackground = theme.getColor(peekViewResultsSelectionBackground);\n\tif (resultsSelectedBackground) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: ${resultsSelectedBackground}; }`);\n\t}\n\tconst resultsSelectedForeground = theme.getColor(peekViewResultsSelectionForeground);\n\tif (resultsSelectedForeground) {\n\t\tcollector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: ${resultsSelectedForeground} !important; }`);\n\t}\n\tconst editorBackground = theme.getColor(peekViewEditorBackground);\n\tif (editorBackground) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,` +\n\t\t\t`.monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {` +\n\t\t\t`\tbackground-color: ${editorBackground};` +\n\t\t\t`}`);\n\t}\n\tconst editorGutterBackground = theme.getColor(peekViewEditorGutterBackground);\n\tif (editorGutterBackground) {\n\t\tcollector.addRule(\n\t\t\t`.monaco-editor .reference-zone-widget .preview .monaco-editor .margin {` +\n\t\t\t`\tbackground-color: ${editorGutterBackground};` +\n\t\t\t`}`);\n\t}\n});\n"]}]}