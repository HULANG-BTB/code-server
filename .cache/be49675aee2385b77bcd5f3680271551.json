{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/base/browser/ui/aria/aria\", \"vs/base/common/keyCodes\", \"vs/editor/browser/editorExtensions\", \"vs/editor/common/config/commonEditorConfig\", \"vs/platform/keybinding/common/keybindingsRegistry\"], function (require, exports, nls, aria_1, keyCodes_1, editorExtensions_1, commonEditorConfig_1, keybindingsRegistry_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ToggleTabFocusModeAction extends editorExtensions_1.EditorAction {\n        constructor() {\n            super({\n                id: ToggleTabFocusModeAction.ID,\n                label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\n                alias: 'Toggle Tab Key Moves Focus',\n                precondition: null,\n                kbOpts: {\n                    kbExpr: null,\n                    primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_M,\n                    mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_M },\n                    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n                }\n            });\n        }\n        run(accessor, editor) {\n            const oldValue = commonEditorConfig_1.TabFocus.getTabFocusMode();\n            const newValue = !oldValue;\n            commonEditorConfig_1.TabFocus.setTabFocusMode(newValue);\n            if (newValue) {\n                aria_1.alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n            }\n            else {\n                aria_1.alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n            }\n        }\n    }\n    ToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\n    exports.ToggleTabFocusModeAction = ToggleTabFocusModeAction;\n    editorExtensions_1.registerEditorAction(ToggleTabFocusModeAction);\n});\n",null]}