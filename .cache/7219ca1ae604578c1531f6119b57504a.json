{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-browser/menubarService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-browser/menubarService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar mainProcessService_1 = require(\"vs/platform/ipc/electron-browser/mainProcessService\");\nvar MenubarService = /** @class */ (function () {\n    function MenubarService(mainProcessService) {\n        this.channel = mainProcessService.getChannel('menubar');\n    }\n    MenubarService.prototype.updateMenubar = function (windowId, menuData) {\n        return this.channel.call('updateMenubar', [windowId, menuData]);\n    };\n    MenubarService = tslib_1.__decorate([\n        tslib_1.__param(0, mainProcessService_1.IMainProcessService)\n    ], MenubarService);\n    return MenubarService;\n}());\nexports.MenubarService = MenubarService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-browser/menubarService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/menubar/electron-browser/menubarService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAIhG,0FAA0F;AAG1F;IAMC,wBAAiC,kBAAuC;QACvE,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACzD,CAAC;IAED,sCAAa,GAAb,UAAc,QAAgB,EAAE,QAAsB;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IACjE,CAAC;IAZW,cAAc;QAMb,mBAAA,wCAAmB,CAAA;OANpB,cAAc,CAa1B;IAAD,qBAAC;CAAA,AAbD,IAaC;AAbY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IMenubarService, IMenubarData } from 'vs/platform/menubar/common/menubar';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport class MenubarService implements IMenubarService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate channel: IChannel;\n\n\tconstructor(@IMainProcessService mainProcessService: IMainProcessService) {\n\t\tthis.channel = mainProcessService.getChannel('menubar');\n\t}\n\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void> {\n\t\treturn this.channel.call('updateMenubar', [windowId, menuData]);\n\t}\n}\n"]}]}