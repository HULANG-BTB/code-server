{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/colorThemeSchema.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/colorThemeSchema.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar nls = require(\"vs/nls\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar jsonContributionRegistry_1 = require(\"vs/platform/jsonschemas/common/jsonContributionRegistry\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar textMateScopes = [\n    'comment',\n    'comment.block',\n    'comment.block.documentation',\n    'comment.line',\n    'constant',\n    'constant.character',\n    'constant.character.escape',\n    'constant.numeric',\n    'constant.numeric.integer',\n    'constant.numeric.float',\n    'constant.numeric.hex',\n    'constant.numeric.octal',\n    'constant.other',\n    'constant.regexp',\n    'constant.rgb-value',\n    'emphasis',\n    'entity',\n    'entity.name',\n    'entity.name.class',\n    'entity.name.function',\n    'entity.name.method',\n    'entity.name.section',\n    'entity.name.selector',\n    'entity.name.tag',\n    'entity.name.type',\n    'entity.other',\n    'entity.other.attribute-name',\n    'entity.other.inherited-class',\n    'invalid',\n    'invalid.deprecated',\n    'invalid.illegal',\n    'keyword',\n    'keyword.control',\n    'keyword.operator',\n    'keyword.operator.new',\n    'keyword.operator.assignment',\n    'keyword.operator.arithmetic',\n    'keyword.operator.logical',\n    'keyword.other',\n    'markup',\n    'markup.bold',\n    'markup.changed',\n    'markup.deleted',\n    'markup.heading',\n    'markup.inline.raw',\n    'markup.inserted',\n    'markup.italic',\n    'markup.list',\n    'markup.list.numbered',\n    'markup.list.unnumbered',\n    'markup.other',\n    'markup.quote',\n    'markup.raw',\n    'markup.underline',\n    'markup.underline.link',\n    'meta',\n    'meta.block',\n    'meta.cast',\n    'meta.class',\n    'meta.function',\n    'meta.function-call',\n    'meta.preprocessor',\n    'meta.return-type',\n    'meta.selector',\n    'meta.tag',\n    'meta.type.annotation',\n    'meta.type',\n    'punctuation.definition.string.begin',\n    'punctuation.definition.string.end',\n    'punctuation.separator',\n    'punctuation.separator.continuation',\n    'punctuation.terminator',\n    'storage',\n    'storage.modifier',\n    'storage.type',\n    'string',\n    'string.interpolated',\n    'string.other',\n    'string.quoted',\n    'string.quoted.double',\n    'string.quoted.other',\n    'string.quoted.single',\n    'string.quoted.triple',\n    'string.regexp',\n    'string.unquoted',\n    'strong',\n    'support',\n    'support.class',\n    'support.constant',\n    'support.function',\n    'support.other',\n    'support.type',\n    'support.type.property-name',\n    'support.variable',\n    'variable',\n    'variable.language',\n    'variable.name',\n    'variable.other',\n    'variable.other.readwrite',\n    'variable.parameter'\n];\nexports.textmateColorsSchemaId = 'vscode://schemas/textmate-colors';\nexports.textmateColorSettingsSchemaId = exports.textmateColorsSchemaId + \"#definitions/settings\";\nvar textmateColorSchema = {\n    type: 'array',\n    definitions: {\n        settings: {\n            type: 'object',\n            description: nls.localize('schema.token.settings', 'Colors and styles for the token.'),\n            properties: {\n                foreground: {\n                    type: 'string',\n                    description: nls.localize('schema.token.foreground', 'Foreground color for the token.'),\n                    format: 'color-hex',\n                    default: '#ff0000'\n                },\n                background: {\n                    type: 'string',\n                    deprecationMessage: nls.localize('schema.token.background.warning', 'Token background colors are currently not supported.')\n                },\n                fontStyle: {\n                    type: 'string',\n                    description: nls.localize('schema.token.fontStyle', 'Font style of the rule: \\'italic\\', \\'bold\\' or \\'underline\\' or a combination. The empty string unsets inherited settings.'),\n                    pattern: '^(\\\\s*\\\\b(italic|bold|underline))*\\\\s*$',\n                    patternErrorMessage: nls.localize('schema.fontStyle.error', 'Font style must be \\'italic\\', \\'bold\\' or \\'underline\\' or a combination or the empty string.'),\n                    defaultSnippets: [{ label: nls.localize('schema.token.fontStyle.none', 'None (clear inherited style)'), bodyText: '\"\"' }, { body: 'italic' }, { body: 'bold' }, { body: 'underline' }, { body: 'italic bold' }, { body: 'italic underline' }, { body: 'bold underline' }, { body: 'italic bold underline' }]\n                }\n            },\n            additionalProperties: false,\n            defaultSnippets: [{ body: { foreground: '${1:#FF0000}', fontStyle: '${2:bold}' } }]\n        }\n    },\n    items: {\n        type: 'object',\n        defaultSnippets: [{ body: { scope: '${1:keyword.operator}', settings: { foreground: '${2:#FF0000}' } } }],\n        properties: {\n            name: {\n                type: 'string',\n                description: nls.localize('schema.properties.name', 'Description of the rule.')\n            },\n            scope: {\n                description: nls.localize('schema.properties.scope', 'Scope selector against which this rule matches.'),\n                anyOf: [\n                    {\n                        enum: textMateScopes\n                    },\n                    {\n                        type: 'string'\n                    },\n                    {\n                        type: 'array',\n                        items: {\n                            enum: textMateScopes\n                        }\n                    },\n                    {\n                        type: 'array',\n                        items: {\n                            type: 'string'\n                        }\n                    }\n                ]\n            },\n            settings: {\n                $ref: '#definitions/settings'\n            }\n        },\n        required: [\n            'settings', 'scope'\n        ],\n        additionalProperties: false\n    }\n};\nexports.colorThemeSchemaId = 'vscode://schemas/color-theme';\nvar colorThemeSchema = {\n    type: 'object',\n    allowComments: true,\n    properties: {\n        colors: {\n            description: nls.localize('schema.workbenchColors', 'Colors in the workbench'),\n            $ref: colorRegistry_1.workbenchColorsSchemaId,\n            additionalProperties: false\n        },\n        tokenColors: {\n            anyOf: [{\n                    type: 'string',\n                    description: nls.localize('schema.tokenColors.path', 'Path to a tmTheme file (relative to the current file).')\n                },\n                {\n                    description: nls.localize('schema.colors', 'Colors for syntax highlighting'),\n                    $ref: exports.textmateColorsSchemaId\n                }\n            ]\n        }\n    }\n};\nfunction registerColorThemeSchemas() {\n    var schemaRegistry = platform_1.Registry.as(jsonContributionRegistry_1.Extensions.JSONContribution);\n    schemaRegistry.registerSchema(exports.colorThemeSchemaId, colorThemeSchema);\n    schemaRegistry.registerSchema(exports.textmateColorsSchemaId, textmateColorSchema);\n}\nexports.registerColorThemeSchemas = registerColorThemeSchemas;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/colorThemeSchema.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/themes/common/colorThemeSchema.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vs/nls';\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\nimport { workbenchColorsSchemaId } from 'vs/platform/theme/common/colorRegistry';\n\nlet textMateScopes = [\n\t'comment',\n\t'comment.block',\n\t'comment.block.documentation',\n\t'comment.line',\n\t'constant',\n\t'constant.character',\n\t'constant.character.escape',\n\t'constant.numeric',\n\t'constant.numeric.integer',\n\t'constant.numeric.float',\n\t'constant.numeric.hex',\n\t'constant.numeric.octal',\n\t'constant.other',\n\t'constant.regexp',\n\t'constant.rgb-value',\n\t'emphasis',\n\t'entity',\n\t'entity.name',\n\t'entity.name.class',\n\t'entity.name.function',\n\t'entity.name.method',\n\t'entity.name.section',\n\t'entity.name.selector',\n\t'entity.name.tag',\n\t'entity.name.type',\n\t'entity.other',\n\t'entity.other.attribute-name',\n\t'entity.other.inherited-class',\n\t'invalid',\n\t'invalid.deprecated',\n\t'invalid.illegal',\n\t'keyword',\n\t'keyword.control',\n\t'keyword.operator',\n\t'keyword.operator.new',\n\t'keyword.operator.assignment',\n\t'keyword.operator.arithmetic',\n\t'keyword.operator.logical',\n\t'keyword.other',\n\t'markup',\n\t'markup.bold',\n\t'markup.changed',\n\t'markup.deleted',\n\t'markup.heading',\n\t'markup.inline.raw',\n\t'markup.inserted',\n\t'markup.italic',\n\t'markup.list',\n\t'markup.list.numbered',\n\t'markup.list.unnumbered',\n\t'markup.other',\n\t'markup.quote',\n\t'markup.raw',\n\t'markup.underline',\n\t'markup.underline.link',\n\t'meta',\n\t'meta.block',\n\t'meta.cast',\n\t'meta.class',\n\t'meta.function',\n\t'meta.function-call',\n\t'meta.preprocessor',\n\t'meta.return-type',\n\t'meta.selector',\n\t'meta.tag',\n\t'meta.type.annotation',\n\t'meta.type',\n\t'punctuation.definition.string.begin',\n\t'punctuation.definition.string.end',\n\t'punctuation.separator',\n\t'punctuation.separator.continuation',\n\t'punctuation.terminator',\n\t'storage',\n\t'storage.modifier',\n\t'storage.type',\n\t'string',\n\t'string.interpolated',\n\t'string.other',\n\t'string.quoted',\n\t'string.quoted.double',\n\t'string.quoted.other',\n\t'string.quoted.single',\n\t'string.quoted.triple',\n\t'string.regexp',\n\t'string.unquoted',\n\t'strong',\n\t'support',\n\t'support.class',\n\t'support.constant',\n\t'support.function',\n\t'support.other',\n\t'support.type',\n\t'support.type.property-name',\n\t'support.variable',\n\t'variable',\n\t'variable.language',\n\t'variable.name',\n\t'variable.other',\n\t'variable.other.readwrite',\n\t'variable.parameter'\n];\n\nexport const textmateColorsSchemaId = 'vscode://schemas/textmate-colors';\nexport const textmateColorSettingsSchemaId = `${textmateColorsSchemaId}#definitions/settings`;\n\nconst textmateColorSchema: IJSONSchema = {\n\ttype: 'array',\n\tdefinitions: {\n\t\tsettings: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('schema.token.settings', 'Colors and styles for the token.'),\n\t\t\tproperties: {\n\t\t\t\tforeground: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('schema.token.foreground', 'Foreground color for the token.'),\n\t\t\t\t\tformat: 'color-hex',\n\t\t\t\t\tdefault: '#ff0000'\n\t\t\t\t},\n\t\t\t\tbackground: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdeprecationMessage: nls.localize('schema.token.background.warning', 'Token background colors are currently not supported.')\n\t\t\t\t},\n\t\t\t\tfontStyle: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('schema.token.fontStyle', 'Font style of the rule: \\'italic\\', \\'bold\\' or \\'underline\\' or a combination. The empty string unsets inherited settings.'),\n\t\t\t\t\tpattern: '^(\\\\s*\\\\b(italic|bold|underline))*\\\\s*$',\n\t\t\t\t\tpatternErrorMessage: nls.localize('schema.fontStyle.error', 'Font style must be \\'italic\\', \\'bold\\' or \\'underline\\' or a combination or the empty string.'),\n\t\t\t\t\tdefaultSnippets: [{ label: nls.localize('schema.token.fontStyle.none', 'None (clear inherited style)'), bodyText: '\"\"' }, { body: 'italic' }, { body: 'bold' }, { body: 'underline' }, { body: 'italic bold' }, { body: 'italic underline' }, { body: 'bold underline' }, { body: 'italic bold underline' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: false,\n\t\t\tdefaultSnippets: [{ body: { foreground: '${1:#FF0000}', fontStyle: '${2:bold}' } }]\n\t\t}\n\t},\n\titems: {\n\t\ttype: 'object',\n\t\tdefaultSnippets: [{ body: { scope: '${1:keyword.operator}', settings: { foreground: '${2:#FF0000}' } } }],\n\t\tproperties: {\n\t\t\tname: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('schema.properties.name', 'Description of the rule.')\n\t\t\t},\n\t\t\tscope: {\n\t\t\t\tdescription: nls.localize('schema.properties.scope', 'Scope selector against which this rule matches.'),\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\tenum: textMateScopes\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\tenum: textMateScopes\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\t$ref: '#definitions/settings'\n\t\t\t}\n\t\t},\n\t\trequired: [\n\t\t\t'settings', 'scope'\n\t\t],\n\t\tadditionalProperties: false\n\t}\n};\n\nexport const colorThemeSchemaId = 'vscode://schemas/color-theme';\n\nconst colorThemeSchema: IJSONSchema = {\n\ttype: 'object',\n\tallowComments: true,\n\tproperties: {\n\t\tcolors: {\n\t\t\tdescription: nls.localize('schema.workbenchColors', 'Colors in the workbench'),\n\t\t\t$ref: workbenchColorsSchemaId,\n\t\t\tadditionalProperties: false\n\t\t},\n\t\ttokenColors: {\n\t\t\tanyOf: [{\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('schema.tokenColors.path', 'Path to a tmTheme file (relative to the current file).')\n\t\t\t},\n\t\t\t{\n\t\t\t\tdescription: nls.localize('schema.colors', 'Colors for syntax highlighting'),\n\t\t\t\t$ref: textmateColorsSchemaId\n\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n};\n\n\n\nexport function registerColorThemeSchemas() {\n\tlet schemaRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tschemaRegistry.registerSchema(colorThemeSchemaId, colorThemeSchema);\n\tschemaRegistry.registerSchema(textmateColorsSchemaId, textmateColorSchema);\n}\n\n"]}]}