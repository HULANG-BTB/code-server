{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/menuService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/menuService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar MenuService = /** @class */ (function () {\n    function MenuService(_commandService) {\n        this._commandService = _commandService;\n        //\n    }\n    MenuService.prototype.createMenu = function (id, contextKeyService) {\n        return new Menu(id, this._commandService, contextKeyService);\n    };\n    MenuService = tslib_1.__decorate([\n        tslib_1.__param(0, commands_1.ICommandService)\n    ], MenuService);\n    return MenuService;\n}());\nexports.MenuService = MenuService;\nvar Menu = /** @class */ (function () {\n    function Menu(_id, _commandService, _contextKeyService) {\n        var _this = this;\n        this._id = _id;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._onDidChange = new event_1.Emitter();\n        this._disposables = [];\n        this._build();\n        // rebuild this menu whenever the menu registry reports an\n        // event for this MenuId\n        event_1.Event.debounce(event_1.Event.filter(actions_1.MenuRegistry.onDidChangeMenu, function (menuId) { return menuId === _this._id; }), function () { }, 50)(this._build, this, this._disposables);\n        // when context keys change we need to check if the menu also\n        // has changed\n        event_1.Event.debounce(this._contextKeyService.onDidChangeContext, function (last, event) { return last || event.affectsSome(_this._contextKeys); }, 50)(function (e) { return e && _this._onDidChange.fire(undefined); }, this, this._disposables);\n    }\n    Menu.prototype._build = function () {\n        // reset\n        this._menuGroups = [];\n        this._contextKeys = new Set();\n        var menuItems = actions_1.MenuRegistry.getMenuItems(this._id);\n        var group;\n        menuItems.sort(Menu._compareMenuItems);\n        for (var _i = 0, menuItems_1 = menuItems; _i < menuItems_1.length; _i++) {\n            var item = menuItems_1[_i];\n            // group by groupId\n            var groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            Menu._fillInKbExprKeys(item.when, this._contextKeys);\n            // keep precondition keys for event if applicable\n            if (actions_1.isIMenuItem(item) && item.command.precondition) {\n                Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (actions_1.isIMenuItem(item) && item.command.toggled) {\n                Menu._fillInKbExprKeys(item.command.toggled, this._contextKeys);\n            }\n        }\n        this._onDidChange.fire(this);\n    };\n    Menu.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        this._onDidChange.dispose();\n    };\n    Object.defineProperty(Menu.prototype, \"onDidChange\", {\n        get: function () {\n            return this._onDidChange.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Menu.prototype.getActions = function (options) {\n        var result = [];\n        for (var _i = 0, _a = this._menuGroups; _i < _a.length; _i++) {\n            var group = _a[_i];\n            var id = group[0], items = group[1];\n            var activeActions = [];\n            for (var _b = 0, items_1 = items; _b < items_1.length; _b++) {\n                var item = items_1[_b];\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    var action = actions_1.isIMenuItem(item) ? new actions_1.MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService) : new actions_1.SubmenuItemAction(item);\n                    activeActions.push(action);\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    };\n    Menu._fillInKbExprKeys = function (exp, set) {\n        if (exp) {\n            for (var _i = 0, _a = exp.keys(); _i < _a.length; _i++) {\n                var key = _a[_i];\n                set.add(key);\n            }\n        }\n    };\n    Menu._compareMenuItems = function (a, b) {\n        var aGroup = a.group;\n        var bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            var value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        var aPrio = a.order || 0;\n        var bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        var aTitle = typeof a.command.title === 'string' ? a.command.title : a.command.title.value;\n        var bTitle = typeof b.command.title === 'string' ? b.command.title : b.command.title.value;\n        return aTitle.localeCompare(bTitle);\n    };\n    Menu = tslib_1.__decorate([\n        tslib_1.__param(1, commands_1.ICommandService),\n        tslib_1.__param(2, contextkey_1.IContextKeyService)\n    ], Menu);\n    return Menu;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/menuService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/actions/common/menuService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IMenu, IMenuActionOptions, IMenuItem, IMenuService, isIMenuItem, ISubmenuItem, MenuId, MenuItemAction, MenuRegistry, SubmenuItemAction } from 'vs/platform/actions/common/actions';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { ContextKeyExpr, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\n\nexport class MenuService implements IMenuService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService\n\t) {\n\t\t//\n\t}\n\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService): IMenu {\n\t\treturn new Menu(id, this._commandService, contextKeyService);\n\t}\n}\n\n\ntype MenuItemGroup = [string, Array<IMenuItem | ISubmenuItem>];\n\nclass Menu implements IMenu {\n\n\tprivate readonly _onDidChange = new Emitter<IMenu | undefined>();\n\tprivate readonly _disposables: IDisposable[] = [];\n\n\tprivate _menuGroups: MenuItemGroup[];\n\tprivate _contextKeys: Set<string>;\n\n\tconstructor(\n\t\tprivate readonly _id: MenuId,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService\n\t) {\n\t\tthis._build();\n\n\t\t// rebuild this menu whenever the menu registry reports an\n\t\t// event for this MenuId\n\t\tEvent.debounce(\n\t\t\tEvent.filter(MenuRegistry.onDidChangeMenu, menuId => menuId === this._id),\n\t\t\t() => { },\n\t\t\t50\n\t\t)(this._build, this, this._disposables);\n\n\t\t// when context keys change we need to check if the menu also\n\t\t// has changed\n\t\tEvent.debounce(\n\t\t\tthis._contextKeyService.onDidChangeContext,\n\t\t\t(last, event) => last || event.affectsSome(this._contextKeys),\n\t\t\t50\n\t\t)(e => e && this._onDidChange.fire(undefined), this, this._disposables);\n\t}\n\n\tprivate _build(): void {\n\n\t\t// reset\n\t\tthis._menuGroups = [];\n\t\tthis._contextKeys = new Set();\n\n\t\tconst menuItems = MenuRegistry.getMenuItems(this._id);\n\n\t\tlet group: MenuItemGroup | undefined;\n\t\tmenuItems.sort(Menu._compareMenuItems);\n\n\t\tfor (let item of menuItems) {\n\t\t\t// group by groupId\n\t\t\tconst groupName = item.group || '';\n\t\t\tif (!group || group[0] !== groupName) {\n\t\t\t\tgroup = [groupName, []];\n\t\t\t\tthis._menuGroups.push(group);\n\t\t\t}\n\t\t\tgroup![1].push(item);\n\n\t\t\t// keep keys for eventing\n\t\t\tMenu._fillInKbExprKeys(item.when, this._contextKeys);\n\n\t\t\t// keep precondition keys for event if applicable\n\t\t\tif (isIMenuItem(item) && item.command.precondition) {\n\t\t\t\tMenu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\n\t\t\t}\n\n\t\t\t// keep toggled keys for event if applicable\n\t\t\tif (isIMenuItem(item) && item.command.toggled) {\n\t\t\t\tMenu._fillInKbExprKeys(item.command.toggled, this._contextKeys);\n\t\t\t}\n\t\t}\n\t\tthis._onDidChange.fire(this);\n\t}\n\n\tdispose() {\n\t\tdispose(this._disposables);\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tget onDidChange(): Event<IMenu | undefined> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tgetActions(options: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][] {\n\t\tconst result: [string, Array<MenuItemAction | SubmenuItemAction>][] = [];\n\t\tfor (let group of this._menuGroups) {\n\t\t\tconst [id, items] = group;\n\t\t\tconst activeActions: Array<MenuItemAction | SubmenuItemAction> = [];\n\t\t\tfor (const item of items) {\n\t\t\t\tif (this._contextKeyService.contextMatchesRules(item.when)) {\n\t\t\t\t\tconst action = isIMenuItem(item) ? new MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService) : new SubmenuItemAction(item);\n\t\t\t\t\tactiveActions.push(action);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (activeActions.length > 0) {\n\t\t\t\tresult.push([id, activeActions]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _fillInKbExprKeys(exp: ContextKeyExpr | undefined, set: Set<string>): void {\n\t\tif (exp) {\n\t\t\tfor (let key of exp.keys()) {\n\t\t\t\tset.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _compareMenuItems(a: IMenuItem, b: IMenuItem): number {\n\n\t\tlet aGroup = a.group;\n\t\tlet bGroup = b.group;\n\n\t\tif (aGroup !== bGroup) {\n\n\t\t\t// Falsy groups come last\n\t\t\tif (!aGroup) {\n\t\t\t\treturn 1;\n\t\t\t} else if (!bGroup) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// 'navigation' group comes first\n\t\t\tif (aGroup === 'navigation') {\n\t\t\t\treturn -1;\n\t\t\t} else if (bGroup === 'navigation') {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// lexical sort for groups\n\t\t\tlet value = aGroup.localeCompare(bGroup);\n\t\t\tif (value !== 0) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\t// sort on priority - default is 0\n\t\tlet aPrio = a.order || 0;\n\t\tlet bPrio = b.order || 0;\n\t\tif (aPrio < bPrio) {\n\t\t\treturn -1;\n\t\t} else if (aPrio > bPrio) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// sort on titles\n\t\tconst aTitle = typeof a.command.title === 'string' ? a.command.title : a.command.title.value;\n\t\tconst bTitle = typeof b.command.title === 'string' ? b.command.title : b.command.title.value;\n\t\treturn aTitle.localeCompare(bTitle);\n\t}\n}\n"]}]}