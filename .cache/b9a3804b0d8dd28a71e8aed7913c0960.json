{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/surveys/electron-browser/nps.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/surveys/electron-browser/nps.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/base/common/platform\", \"vs/workbench/common/contributions\", \"vs/platform/registry/common/platform\", \"vs/platform/telemetry/common/telemetry\", \"vs/platform/storage/common/storage\", \"vs/platform/product/node/package\", \"vs/platform/product/node/product\", \"vs/platform/lifecycle/common/lifecycle\", \"vs/platform/notification/common/notification\"], function (require, exports, nls, platform_1, contributions_1, platform_2, telemetry_1, storage_1, package_1, product_1, lifecycle_1, notification_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const PROBABILITY = 0.15;\n    const SESSION_COUNT_KEY = 'nps/sessionCount';\n    const LAST_SESSION_DATE_KEY = 'nps/lastSessionDate';\n    const SKIP_VERSION_KEY = 'nps/skipVersion';\n    const IS_CANDIDATE_KEY = 'nps/isCandidate';\n    let NPSContribution = class NPSContribution {\n        constructor(storageService, notificationService, telemetryService) {\n            const skipVersion = storageService.get(SKIP_VERSION_KEY, storage_1.StorageScope.GLOBAL, '');\n            if (skipVersion) {\n                return;\n            }\n            const date = new Date().toDateString();\n            const lastSessionDate = storageService.get(LAST_SESSION_DATE_KEY, storage_1.StorageScope.GLOBAL, new Date(0).toDateString());\n            if (date === lastSessionDate) {\n                return;\n            }\n            const sessionCount = (storageService.getNumber(SESSION_COUNT_KEY, storage_1.StorageScope.GLOBAL, 0) || 0) + 1;\n            storageService.store(LAST_SESSION_DATE_KEY, date, storage_1.StorageScope.GLOBAL);\n            storageService.store(SESSION_COUNT_KEY, sessionCount, storage_1.StorageScope.GLOBAL);\n            if (sessionCount < 9) {\n                return;\n            }\n            const isCandidate = storageService.getBoolean(IS_CANDIDATE_KEY, storage_1.StorageScope.GLOBAL, false)\n                || Math.random() < PROBABILITY;\n            storageService.store(IS_CANDIDATE_KEY, isCandidate, storage_1.StorageScope.GLOBAL);\n            if (!isCandidate) {\n                storageService.store(SKIP_VERSION_KEY, package_1.default.version, storage_1.StorageScope.GLOBAL);\n                return;\n            }\n            notificationService.prompt(notification_1.Severity.Info, nls.localize('surveyQuestion', \"Do you mind taking a quick feedback survey?\"), [{\n                    label: nls.localize('takeSurvey', \"Take Survey\"),\n                    run: () => {\n                        telemetryService.getTelemetryInfo().then(info => {\n                            window.open(`${product_1.default.npsSurveyUrl}?o=${encodeURIComponent(process.platform)}&v=${encodeURIComponent(package_1.default.version)}&m=${encodeURIComponent(info.machineId)}`);\n                            storageService.store(IS_CANDIDATE_KEY, false, storage_1.StorageScope.GLOBAL);\n                            storageService.store(SKIP_VERSION_KEY, package_1.default.version, storage_1.StorageScope.GLOBAL);\n                        });\n                    }\n                }, {\n                    label: nls.localize('remindLater', \"Remind Me later\"),\n                    run: () => storageService.store(SESSION_COUNT_KEY, sessionCount - 3, storage_1.StorageScope.GLOBAL)\n                }, {\n                    label: nls.localize('neverAgain', \"Don't Show Again\"),\n                    run: () => {\n                        storageService.store(IS_CANDIDATE_KEY, false, storage_1.StorageScope.GLOBAL);\n                        storageService.store(SKIP_VERSION_KEY, package_1.default.version, storage_1.StorageScope.GLOBAL);\n                    }\n                }], { sticky: true });\n        }\n    };\n    NPSContribution = __decorate([\n        __param(0, storage_1.IStorageService),\n        __param(1, notification_1.INotificationService),\n        __param(2, telemetry_1.ITelemetryService)\n    ], NPSContribution);\n    if (platform_1.language === 'en' && product_1.default.npsSurveyUrl) {\n        const workbenchRegistry = platform_2.Registry.as(contributions_1.Extensions.Workbench);\n        workbenchRegistry.registerWorkbenchContribution(NPSContribution, lifecycle_1.LifecyclePhase.Restored);\n    }\n});\n",null]}