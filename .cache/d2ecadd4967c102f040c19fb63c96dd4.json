{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/files.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/files.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uri_1 = require(\"vs/base/common/uri\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar files_1 = require(\"vs/workbench/contrib/files/common/files\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar listWidget_1 = require(\"vs/base/browser/ui/list/listWidget\");\nvar explorerModel_1 = require(\"vs/workbench/contrib/files/common/explorerModel\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\n// Commands can get exeucted from a command pallete, from a context menu or from some list using a keybinding\n// To cover all these cases we need to properly compute the resource on which the command is being executed\nfunction getResourceForCommand(resource, listService, editorService) {\n    if (uri_1.URI.isUri(resource)) {\n        return resource;\n    }\n    var list = listService.lastFocusedList;\n    if (list && list.getHTMLElement() === document.activeElement) {\n        var focus = void 0;\n        if (list instanceof listWidget_1.List) {\n            var focused = list.getFocusedElements();\n            if (focused.length) {\n                focus = focused[0];\n            }\n        }\n        else if (list instanceof listService_1.WorkbenchAsyncDataTree) {\n            var focused = list.getFocus();\n            if (focused.length) {\n                focus = focused[0];\n            }\n        }\n        if (focus instanceof explorerModel_1.ExplorerItem) {\n            return focus.resource;\n        }\n        else if (focus instanceof files_1.OpenEditor) {\n            return focus.getResource();\n        }\n    }\n    return editorService.activeEditor ? editor_1.toResource(editorService.activeEditor, { supportSideBySide: true }) : null;\n}\nexports.getResourceForCommand = getResourceForCommand;\nfunction getMultiSelectedResources(resource, listService, editorService) {\n    var list = listService.lastFocusedList;\n    if (list && list.getHTMLElement() === document.activeElement) {\n        // Explorer\n        if (list instanceof listService_1.WorkbenchAsyncDataTree) {\n            var selection = list.getSelection().map(function (fs) { return fs.resource; });\n            var focusedElements = list.getFocus();\n            var focus = focusedElements.length ? focusedElements[0] : undefined;\n            var mainUriStr_1 = uri_1.URI.isUri(resource) ? resource.toString() : focus instanceof explorerModel_1.ExplorerItem ? focus.resource.toString() : undefined;\n            // If the resource is passed it has to be a part of the returned context.\n            // We only respect the selection if it contains the focused element.\n            if (selection.some(function (s) { return uri_1.URI.isUri(s) && s.toString() === mainUriStr_1; })) {\n                return selection;\n            }\n        }\n        // Open editors view\n        if (list instanceof listWidget_1.List) {\n            var selection = arrays_1.coalesce(list.getSelectedElements().filter(function (s) { return s instanceof files_1.OpenEditor; }).map(function (oe) { return oe.getResource(); }));\n            var focusedElements = list.getFocusedElements();\n            var focus = focusedElements.length ? focusedElements[0] : undefined;\n            var mainUriStr_2 = undefined;\n            if (uri_1.URI.isUri(resource)) {\n                mainUriStr_2 = resource.toString();\n            }\n            else if (focus instanceof files_1.OpenEditor) {\n                var focusedResource = focus.getResource();\n                mainUriStr_2 = focusedResource ? focusedResource.toString() : undefined;\n            }\n            // We only respect the selection if it contains the main element.\n            if (selection.some(function (s) { return s.toString() === mainUriStr_2; })) {\n                return selection;\n            }\n        }\n    }\n    var result = getResourceForCommand(resource, listService, editorService);\n    return !!result ? [result] : [];\n}\nexports.getMultiSelectedResources = getMultiSelectedResources;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/files.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/files.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,0CAAyC;AACzC,oEAA4F;AAC5F,iEAAqE;AACrE,qDAAwD;AACxD,iEAA0D;AAE1D,iFAA+E;AAC/E,gDAAiD;AAEjD,6GAA6G;AAC7G,2GAA2G;AAC3G,SAAgB,qBAAqB,CAAC,QAAkC,EAAE,WAAyB,EAAE,aAA6B;IACjI,IAAI,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;QACxB,OAAO,QAAQ,CAAC;KAChB;IAED,IAAI,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC;IACvC,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,aAAa,EAAE;QAC7D,IAAI,KAAK,SAAK,CAAC;QACf,IAAI,IAAI,YAAY,iBAAI,EAAE;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1C,IAAI,OAAO,CAAC,MAAM,EAAE;gBACnB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACnB;SACD;aAAM,IAAI,IAAI,YAAY,oCAAsB,EAAE;YAClD,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChC,IAAI,OAAO,CAAC,MAAM,EAAE;gBACnB,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;aACnB;SACD;QAED,IAAI,KAAK,YAAY,4BAAY,EAAE;YAClC,OAAO,KAAK,CAAC,QAAQ,CAAC;SACtB;aAAM,IAAI,KAAK,YAAY,kBAAU,EAAE;YACvC,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;SAC3B;KACD;IAED,OAAO,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,mBAAU,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAChH,CAAC;AA5BD,sDA4BC;AAED,SAAgB,yBAAyB,CAAC,QAAkC,EAAE,WAAyB,EAAE,aAA6B;IACrI,IAAM,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC;IACzC,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,aAAa,EAAE;QAC7D,WAAW;QACX,IAAI,IAAI,YAAY,oCAAsB,EAAE;YAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,UAAC,EAAgB,IAAK,OAAA,EAAE,CAAC,QAAQ,EAAX,CAAW,CAAC,CAAC;YAC7E,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACxC,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtE,IAAM,YAAU,GAAG,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,YAAY,4BAAY,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YACrI,yEAAyE;YACzE,oEAAoE;YACpE,IAAI,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,YAAU,EAA3C,CAA2C,CAAC,EAAE;gBACrE,OAAO,SAAS,CAAC;aACjB;SACD;QAED,oBAAoB;QACpB,IAAI,IAAI,YAAY,iBAAI,EAAE;YACzB,IAAM,SAAS,GAAG,iBAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,YAAY,kBAAU,EAAvB,CAAuB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAc,IAAK,OAAA,EAAE,CAAC,WAAW,EAAE,EAAhB,CAAgB,CAAC,CAAC,CAAC;YACtI,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAClD,IAAM,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtE,IAAI,YAAU,GAAuB,SAAS,CAAC;YAC/C,IAAI,SAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACxB,YAAU,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACjC;iBAAM,IAAI,KAAK,YAAY,kBAAU,EAAE;gBACvC,IAAM,eAAe,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC5C,YAAU,GAAG,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;aACtE;YACD,iEAAiE;YACjE,IAAI,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,KAAK,YAAU,EAA3B,CAA2B,CAAC,EAAE;gBACrD,OAAO,SAAS,CAAC;aACjB;SACD;KACD;IAED,IAAM,MAAM,GAAG,qBAAqB,CAAC,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;IAC3E,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACjC,CAAC;AArCD,8DAqCC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IListService, WorkbenchAsyncDataTree } from 'vs/platform/list/browser/listService';\nimport { OpenEditor } from 'vs/workbench/contrib/files/common/files';\nimport { toResource } from 'vs/workbench/common/editor';\nimport { List } from 'vs/base/browser/ui/list/listWidget';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ExplorerItem } from 'vs/workbench/contrib/files/common/explorerModel';\nimport { coalesce } from 'vs/base/common/arrays';\n\n// Commands can get exeucted from a command pallete, from a context menu or from some list using a keybinding\n// To cover all these cases we need to properly compute the resource on which the command is being executed\nexport function getResourceForCommand(resource: URI | object | undefined, listService: IListService, editorService: IEditorService): URI | null {\n\tif (URI.isUri(resource)) {\n\t\treturn resource;\n\t}\n\n\tlet list = listService.lastFocusedList;\n\tif (list && list.getHTMLElement() === document.activeElement) {\n\t\tlet focus: any;\n\t\tif (list instanceof List) {\n\t\t\tconst focused = list.getFocusedElements();\n\t\t\tif (focused.length) {\n\t\t\t\tfocus = focused[0];\n\t\t\t}\n\t\t} else if (list instanceof WorkbenchAsyncDataTree) {\n\t\t\tconst focused = list.getFocus();\n\t\t\tif (focused.length) {\n\t\t\t\tfocus = focused[0];\n\t\t\t}\n\t\t}\n\n\t\tif (focus instanceof ExplorerItem) {\n\t\t\treturn focus.resource;\n\t\t} else if (focus instanceof OpenEditor) {\n\t\t\treturn focus.getResource();\n\t\t}\n\t}\n\n\treturn editorService.activeEditor ? toResource(editorService.activeEditor, { supportSideBySide: true }) : null;\n}\n\nexport function getMultiSelectedResources(resource: URI | object | undefined, listService: IListService, editorService: IEditorService): Array<URI> {\n\tconst list = listService.lastFocusedList;\n\tif (list && list.getHTMLElement() === document.activeElement) {\n\t\t// Explorer\n\t\tif (list instanceof WorkbenchAsyncDataTree) {\n\t\t\tconst selection = list.getSelection().map((fs: ExplorerItem) => fs.resource);\n\t\t\tconst focusedElements = list.getFocus();\n\t\t\tconst focus = focusedElements.length ? focusedElements[0] : undefined;\n\t\t\tconst mainUriStr = URI.isUri(resource) ? resource.toString() : focus instanceof ExplorerItem ? focus.resource.toString() : undefined;\n\t\t\t// If the resource is passed it has to be a part of the returned context.\n\t\t\t// We only respect the selection if it contains the focused element.\n\t\t\tif (selection.some(s => URI.isUri(s) && s.toString() === mainUriStr)) {\n\t\t\t\treturn selection;\n\t\t\t}\n\t\t}\n\n\t\t// Open editors view\n\t\tif (list instanceof List) {\n\t\t\tconst selection = coalesce(list.getSelectedElements().filter(s => s instanceof OpenEditor).map((oe: OpenEditor) => oe.getResource()));\n\t\t\tconst focusedElements = list.getFocusedElements();\n\t\t\tconst focus = focusedElements.length ? focusedElements[0] : undefined;\n\t\t\tlet mainUriStr: string | undefined = undefined;\n\t\t\tif (URI.isUri(resource)) {\n\t\t\t\tmainUriStr = resource.toString();\n\t\t\t} else if (focus instanceof OpenEditor) {\n\t\t\t\tconst focusedResource = focus.getResource();\n\t\t\t\tmainUriStr = focusedResource ? focusedResource.toString() : undefined;\n\t\t\t}\n\t\t\t// We only respect the selection if it contains the main element.\n\t\t\tif (selection.some(s => s.toString() === mainUriStr)) {\n\t\t\t\treturn selection;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst result = getResourceForCommand(resource, listService, editorService);\n\treturn !!result ? [result] : [];\n}\n"]}]}