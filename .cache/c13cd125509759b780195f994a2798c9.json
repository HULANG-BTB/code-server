{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/contextmenu/contextmenu.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/contextmenu/contextmenu.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar ContextMenuController = /** @class */ (function () {\n    function ContextMenuController(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService) {\n        var _this = this;\n        this._contextMenuService = _contextMenuService;\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._keybindingService = _keybindingService;\n        this._menuService = _menuService;\n        this._toDispose = [];\n        this._contextMenuIsBeingShownCount = 0;\n        this._editor = editor;\n        this._toDispose.push(this._editor.onContextMenu(function (e) { return _this._onContextMenu(e); }));\n        this._toDispose.push(this._editor.onDidScrollChange(function (e) {\n            if (_this._contextMenuIsBeingShownCount > 0 && e.scrollTopChanged) {\n                _this._contextViewService.hideContextView();\n            }\n        }));\n        this._toDispose.push(this._editor.onKeyDown(function (e) {\n            if (e.keyCode === keyCodes_1.KeyCode.ContextMenu) {\n                // Chrome is funny like that\n                e.preventDefault();\n                e.stopPropagation();\n                _this.showContextMenu();\n            }\n        }));\n    }\n    ContextMenuController.get = function (editor) {\n        return editor.getContribution(ContextMenuController.ID);\n    };\n    ContextMenuController.prototype._onContextMenu = function (e) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._editor.getConfiguration().contribInfo.contextmenu) {\n            this._editor.focus();\n            // Ensure the cursor is at the position of the mouse click\n            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\n                this._editor.setPosition(e.target.position);\n            }\n            return; // Context menu is turned off through configuration\n        }\n        if (e.target.type === editorBrowser_1.MouseTargetType.OVERLAY_WIDGET) {\n            return; // allow native menu on widgets to support right click on input field for example in find\n        }\n        e.event.preventDefault();\n        if (e.target.type !== editorBrowser_1.MouseTargetType.CONTENT_TEXT && e.target.type !== editorBrowser_1.MouseTargetType.CONTENT_EMPTY && e.target.type !== editorBrowser_1.MouseTargetType.TEXTAREA) {\n            return; // only support mouse click into text or native context menu key for now\n        }\n        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\n        this._editor.focus();\n        // Ensure the cursor is at the position of the mouse click\n        if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\n            this._editor.setPosition(e.target.position);\n        }\n        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\n        var anchor = null;\n        if (e.target.type !== editorBrowser_1.MouseTargetType.TEXTAREA) {\n            anchor = { x: e.event.posx - 1, width: 2, y: e.event.posy - 1, height: 2 };\n        }\n        // Show the context menu\n        this.showContextMenu(anchor);\n    };\n    ContextMenuController.prototype.showContextMenu = function (anchor) {\n        if (!this._editor.getConfiguration().contribInfo.contextmenu) {\n            return; // Context menu is turned off through configuration\n        }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._contextMenuService) {\n            this._editor.focus();\n            return; // We need the context menu service to function\n        }\n        // Find actions available for menu\n        var menuActions = this._getMenuActions(this._editor.getModel());\n        // Show menu if we have actions to show\n        if (menuActions.length > 0) {\n            this._doShowContextMenu(menuActions, anchor);\n        }\n    };\n    ContextMenuController.prototype._getMenuActions = function (model) {\n        var result = [];\n        var contextMenu = this._menuService.createMenu(actions_1.MenuId.EditorContext, this._contextKeyService);\n        var groups = contextMenu.getActions({ arg: model.uri });\n        contextMenu.dispose();\n        for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\n            var group = groups_1[_i];\n            var actions = group[1];\n            result.push.apply(result, actions);\n            result.push(new actionbar_1.Separator());\n        }\n        result.pop(); // remove last separator\n        return result;\n    };\n    ContextMenuController.prototype._doShowContextMenu = function (actions, anchor) {\n        var _this = this;\n        if (anchor === void 0) { anchor = null; }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // Disable hover\n        var oldHoverSetting = this._editor.getConfiguration().contribInfo.hover;\n        this._editor.updateOptions({\n            hover: {\n                enabled: false\n            }\n        });\n        if (!anchor) {\n            // Ensure selection is visible\n            this._editor.revealPosition(this._editor.getPosition(), editorCommon_1.ScrollType.Immediate);\n            this._editor.render();\n            var cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\n            // Translate to absolute editor position\n            var editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\n            var posx = editorCoords.left + cursorCoords.left;\n            var posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\n            anchor = { x: posx, y: posy };\n        }\n        // Show menu\n        this._contextMenuIsBeingShownCount++;\n        this._contextMenuService.showContextMenu({\n            getAnchor: function () { return anchor; },\n            getActions: function () { return actions; },\n            getActionItem: function (action) {\n                var keybinding = _this._keybindingFor(action);\n                if (keybinding) {\n                    return new actionbar_1.ActionItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\n                }\n                var customActionItem = action;\n                if (typeof customActionItem.getActionItem === 'function') {\n                    return customActionItem.getActionItem();\n                }\n                return new actionbar_1.ActionItem(action, action, { icon: true, label: true, isMenu: true });\n            },\n            getKeyBinding: function (action) {\n                return _this._keybindingFor(action);\n            },\n            onHide: function (wasCancelled) {\n                _this._contextMenuIsBeingShownCount--;\n                _this._editor.focus();\n                _this._editor.updateOptions({\n                    hover: oldHoverSetting\n                });\n            }\n        });\n    };\n    ContextMenuController.prototype._keybindingFor = function (action) {\n        return this._keybindingService.lookupKeybinding(action.id);\n    };\n    ContextMenuController.prototype.getId = function () {\n        return ContextMenuController.ID;\n    };\n    ContextMenuController.prototype.dispose = function () {\n        if (this._contextMenuIsBeingShownCount > 0) {\n            this._contextViewService.hideContextView();\n        }\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n    };\n    ContextMenuController.ID = 'editor.contrib.contextmenu';\n    ContextMenuController = tslib_1.__decorate([\n        tslib_1.__param(1, contextView_1.IContextMenuService),\n        tslib_1.__param(2, contextView_1.IContextViewService),\n        tslib_1.__param(3, contextkey_1.IContextKeyService),\n        tslib_1.__param(4, keybinding_1.IKeybindingService),\n        tslib_1.__param(5, actions_1.IMenuService)\n    ], ContextMenuController);\n    return ContextMenuController;\n}());\nexports.ContextMenuController = ContextMenuController;\nvar ShowContextMenu = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowContextMenu, _super);\n    function ShowContextMenu() {\n        return _super.call(this, {\n            id: 'editor.action.showContextMenu',\n            label: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\n            alias: 'Show Editor Context Menu',\n            precondition: null,\n            kbOpts: {\n                kbExpr: editorContextKeys_1.EditorContextKeys.textInputFocus,\n                primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.F10,\n                weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib\n            }\n        }) || this;\n    }\n    ShowContextMenu.prototype.run = function (accessor, editor) {\n        var contribution = ContextMenuController.get(editor);\n        contribution.showContextMenu();\n    };\n    return ShowContextMenu;\n}(editorExtensions_1.EditorAction));\neditorExtensions_1.registerEditorContribution(ContextMenuController);\neditorExtensions_1.registerEditorAction(ShowContextMenu);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/contextmenu/contextmenu.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/contextmenu/contextmenu.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { ActionItem, Separator } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IAnchor } from 'vs/base/browser/ui/contextview/contextview';\nimport { IAction } from 'vs/base/common/actions';\nimport { KeyCode, KeyMod, ResolvedKeybinding } from 'vs/base/common/keyCodes';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { EditorAction, ServicesAccessor, registerEditorAction, registerEditorContribution } from 'vs/editor/browser/editorExtensions';\nimport { IEditorContribution, IScrollEvent, ScrollType } from 'vs/editor/common/editorCommon';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ITextModel } from 'vs/editor/common/model';\n\nexport class ContextMenuController implements IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.contextmenu';\n\n\tpublic static get(editor: ICodeEditor): ContextMenuController {\n\t\treturn editor.getContribution<ContextMenuController>(ContextMenuController.ID);\n\t}\n\n\tprivate _toDispose: IDisposable[] = [];\n\tprivate _contextMenuIsBeingShownCount: number = 0;\n\tprivate readonly _editor: ICodeEditor;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IContextViewService private readonly _contextViewService: IContextViewService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IMenuService private readonly _menuService: IMenuService\n\t) {\n\t\tthis._editor = editor;\n\n\t\tthis._toDispose.push(this._editor.onContextMenu((e: IEditorMouseEvent) => this._onContextMenu(e)));\n\t\tthis._toDispose.push(this._editor.onDidScrollChange((e: IScrollEvent) => {\n\t\t\tif (this._contextMenuIsBeingShownCount > 0 && e.scrollTopChanged) {\n\t\t\t\tthis._contextViewService.hideContextView();\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.push(this._editor.onKeyDown((e: IKeyboardEvent) => {\n\t\t\tif (e.keyCode === KeyCode.ContextMenu) {\n\t\t\t\t// Chrome is funny like that\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.showContextMenu();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onContextMenu(e: IEditorMouseEvent): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._editor.getConfiguration().contribInfo.contextmenu) {\n\t\t\tthis._editor.focus();\n\t\t\t// Ensure the cursor is at the position of the mouse click\n\t\t\tif (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\n\t\t\t\tthis._editor.setPosition(e.target.position);\n\t\t\t}\n\t\t\treturn; // Context menu is turned off through configuration\n\t\t}\n\n\t\tif (e.target.type === MouseTargetType.OVERLAY_WIDGET) {\n\t\t\treturn; // allow native menu on widgets to support right click on input field for example in find\n\t\t}\n\n\t\te.event.preventDefault();\n\n\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT && e.target.type !== MouseTargetType.CONTENT_EMPTY && e.target.type !== MouseTargetType.TEXTAREA) {\n\t\t\treturn; // only support mouse click into text or native context menu key for now\n\t\t}\n\n\t\t// Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\n\t\tthis._editor.focus();\n\n\t\t// Ensure the cursor is at the position of the mouse click\n\t\tif (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\n\t\t\tthis._editor.setPosition(e.target.position);\n\t\t}\n\n\t\t// Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\n\t\tlet anchor: IAnchor | null = null;\n\t\tif (e.target.type !== MouseTargetType.TEXTAREA) {\n\t\t\tanchor = { x: e.event.posx - 1, width: 2, y: e.event.posy - 1, height: 2 };\n\t\t}\n\n\t\t// Show the context menu\n\t\tthis.showContextMenu(anchor);\n\t}\n\n\tpublic showContextMenu(anchor?: IAnchor | null): void {\n\t\tif (!this._editor.getConfiguration().contribInfo.contextmenu) {\n\t\t\treturn; // Context menu is turned off through configuration\n\t\t}\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._contextMenuService) {\n\t\t\tthis._editor.focus();\n\t\t\treturn;\t// We need the context menu service to function\n\t\t}\n\n\t\t// Find actions available for menu\n\t\tconst menuActions = this._getMenuActions(this._editor.getModel());\n\n\t\t// Show menu if we have actions to show\n\t\tif (menuActions.length > 0) {\n\t\t\tthis._doShowContextMenu(menuActions, anchor);\n\t\t}\n\t}\n\n\tprivate _getMenuActions(model: ITextModel): IAction[] {\n\t\tconst result: IAction[] = [];\n\n\t\tlet contextMenu = this._menuService.createMenu(MenuId.EditorContext, this._contextKeyService);\n\t\tconst groups = contextMenu.getActions({ arg: model.uri });\n\t\tcontextMenu.dispose();\n\n\t\tfor (let group of groups) {\n\t\t\tconst [, actions] = group;\n\t\t\tresult.push(...actions);\n\t\t\tresult.push(new Separator());\n\t\t}\n\t\tresult.pop(); // remove last separator\n\t\treturn result;\n\t}\n\n\tprivate _doShowContextMenu(actions: IAction[], anchor: IAnchor | null = null): void {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Disable hover\n\t\tconst oldHoverSetting = this._editor.getConfiguration().contribInfo.hover;\n\t\tthis._editor.updateOptions({\n\t\t\thover: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t});\n\n\t\tif (!anchor) {\n\t\t\t// Ensure selection is visible\n\t\t\tthis._editor.revealPosition(this._editor.getPosition(), ScrollType.Immediate);\n\n\t\t\tthis._editor.render();\n\t\t\tconst cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\n\n\t\t\t// Translate to absolute editor position\n\t\t\tconst editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\n\t\t\tconst posx = editorCoords.left + cursorCoords.left;\n\t\t\tconst posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\n\n\t\t\tanchor = { x: posx, y: posy };\n\t\t}\n\n\t\t// Show menu\n\t\tthis._contextMenuIsBeingShownCount++;\n\t\tthis._contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => anchor!,\n\n\t\t\tgetActions: () => actions,\n\n\t\t\tgetActionItem: (action) => {\n\t\t\t\tconst keybinding = this._keybindingFor(action);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\treturn new ActionItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\n\t\t\t\t}\n\n\t\t\t\tconst customActionItem = <any>action;\n\t\t\t\tif (typeof customActionItem.getActionItem === 'function') {\n\t\t\t\t\treturn customActionItem.getActionItem();\n\t\t\t\t}\n\n\t\t\t\treturn new ActionItem(action, action, { icon: true, label: true, isMenu: true });\n\t\t\t},\n\n\t\t\tgetKeyBinding: (action): ResolvedKeybinding | undefined => {\n\t\t\t\treturn this._keybindingFor(action);\n\t\t\t},\n\n\t\t\tonHide: (wasCancelled: boolean) => {\n\t\t\t\tthis._contextMenuIsBeingShownCount--;\n\t\t\t\tthis._editor.focus();\n\t\t\t\tthis._editor.updateOptions({\n\t\t\t\t\thover: oldHoverSetting\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _keybindingFor(action: IAction): ResolvedKeybinding | undefined {\n\t\treturn this._keybindingService.lookupKeybinding(action.id);\n\t}\n\n\tpublic getId(): string {\n\t\treturn ContextMenuController.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._contextMenuIsBeingShownCount > 0) {\n\t\t\tthis._contextViewService.hideContextView();\n\t\t}\n\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n}\n\nclass ShowContextMenu extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.showContextMenu',\n\t\t\tlabel: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\n\t\t\talias: 'Show Editor Context Menu',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: {\n\t\t\t\tkbExpr: EditorContextKeys.textInputFocus,\n\t\t\t\tprimary: KeyMod.Shift | KeyCode.F10,\n\t\t\t\tweight: KeybindingWeight.EditorContrib\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic run(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tlet contribution = ContextMenuController.get(editor);\n\t\tcontribution.showContextMenu();\n\t}\n}\n\nregisterEditorContribution(ContextMenuController);\nregisterEditorAction(ShowContextMenu);\n"]}]}