{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/request/electron-main/requestService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/request/electron-main/requestService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/node/request\", \"vs/platform/request/node/requestService\", \"vs/base/common/objects\", \"electron\"], function (require, exports, request_1, requestService_1, objects_1, electron_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function getRawRequest(options) {\n        return electron_1.net.request;\n    }\n    class RequestService extends requestService_1.RequestService {\n        request(options, token) {\n            return super.request(options, token, options => request_1.request(objects_1.assign({}, options || {}, { getRawRequest }), token));\n        }\n    }\n    exports.RequestService = RequestService;\n});\n",null]}