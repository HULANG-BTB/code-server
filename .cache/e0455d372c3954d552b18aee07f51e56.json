{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/remoteFileService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/remoteFileService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar map_1 = require(\"vs/base/common/map\");\nvar network_1 = require(\"vs/base/common/network\");\nvar resources = require(\"vs/base/common/resources\");\nvar encoding_1 = require(\"vs/base/node/encoding\");\nvar resourceConfiguration_1 = require(\"vs/editor/common/services/resourceConfiguration\");\nvar nls_1 = require(\"vs/nls\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar lifecycle_2 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar fileService_1 = require(\"vs/workbench/services/files/node/fileService\");\nvar streams_1 = require(\"vs/workbench/services/files/node/streams\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar TypeOnlyStat = /** @class */ (function () {\n    function TypeOnlyStat(type) {\n        this.type = type;\n        // todo@remote -> make a getter and warn when\n        // being used in development.\n        this.mtime = 0;\n        this.ctime = 0;\n        this.size = 0;\n        //\n    }\n    return TypeOnlyStat;\n}());\nfunction toIFileStat(provider, tuple, recurse) {\n    var resource = tuple[0], stat = tuple[1];\n    var fileStat = {\n        resource: resource,\n        name: resources.basename(resource),\n        isDirectory: (stat.type & files_1.FileType.Directory) !== 0,\n        isSymbolicLink: (stat.type & files_1.FileType.SymbolicLink) !== 0,\n        isReadonly: !!(provider.capabilities & files_1.FileSystemProviderCapabilities.Readonly),\n        mtime: stat.mtime,\n        size: stat.size,\n        etag: files_1.etag(stat.mtime, stat.size),\n    };\n    if (fileStat.isDirectory) {\n        if (recurse && recurse([resource, stat])) {\n            // dir -> resolve\n            return provider.readdir(resource).then(function (entries) {\n                // resolve children if requested\n                return Promise.all(entries.map(function (tuple) {\n                    var name = tuple[0], type = tuple[1];\n                    var childResource = resources.joinPath(resource, name);\n                    return toIFileStat(provider, [childResource, new TypeOnlyStat(type)], recurse);\n                })).then(function (children) {\n                    fileStat.children = children;\n                    return fileStat;\n                });\n            });\n        }\n    }\n    // file or (un-resolved) dir\n    return Promise.resolve(fileStat);\n}\nfunction toDeepIFileStat(provider, tuple, to) {\n    var trie = map_1.TernarySearchTree.forPaths();\n    trie.set(tuple[0].toString(), true);\n    if (arrays_1.isNonEmptyArray(to)) {\n        to.forEach(function (uri) { return trie.set(uri.toString(), true); });\n    }\n    return toIFileStat(provider, tuple, function (candidate) {\n        return Boolean(trie.findSuperstr(candidate[0].toString()) || trie.get(candidate[0].toString()));\n    });\n}\nexports.toDeepIFileStat = toDeepIFileStat;\nvar WorkspaceWatchLogic = /** @class */ (function (_super) {\n    tslib_1.__extends(WorkspaceWatchLogic, _super);\n    function WorkspaceWatchLogic(_fileService, _configurationService, _contextService) {\n        var _this = _super.call(this) || this;\n        _this._fileService = _fileService;\n        _this._configurationService = _configurationService;\n        _this._contextService = _contextService;\n        _this._watches = new Map();\n        _this._refresh();\n        _this._register(_this._contextService.onDidChangeWorkspaceFolders(function (e) {\n            for (var _i = 0, _a = e.removed; _i < _a.length; _i++) {\n                var removed = _a[_i];\n                _this._unwatchWorkspace(removed.uri);\n            }\n            for (var _b = 0, _c = e.added; _b < _c.length; _b++) {\n                var added = _c[_b];\n                _this._watchWorkspace(added.uri);\n            }\n        }));\n        _this._register(_this._contextService.onDidChangeWorkbenchState(function (e) {\n            _this._refresh();\n        }));\n        _this._register(_this._configurationService.onDidChangeConfiguration(function (e) {\n            if (e.affectsConfiguration('files.watcherExclude')) {\n                _this._refresh();\n            }\n        }));\n        return _this;\n    }\n    WorkspaceWatchLogic.prototype.dispose = function () {\n        this._unwatchWorkspaces();\n        _super.prototype.dispose.call(this);\n    };\n    WorkspaceWatchLogic.prototype._refresh = function () {\n        this._unwatchWorkspaces();\n        for (var _i = 0, _a = this._contextService.getWorkspace().folders; _i < _a.length; _i++) {\n            var folder = _a[_i];\n            if (folder.uri.scheme !== network_1.Schemas.file) {\n                this._watchWorkspace(folder.uri);\n            }\n        }\n    };\n    WorkspaceWatchLogic.prototype._watchWorkspace = function (resource) {\n        var excludes = [];\n        var config = this._configurationService.getValue({ resource: resource });\n        if (config.files && config.files.watcherExclude) {\n            for (var key in config.files.watcherExclude) {\n                if (config.files.watcherExclude[key] === true) {\n                    excludes.push(key);\n                }\n            }\n        }\n        this._watches.set(resource.toString(), resource);\n        this._fileService.watchFileChanges(resource, { recursive: true, excludes: excludes });\n    };\n    WorkspaceWatchLogic.prototype._unwatchWorkspace = function (resource) {\n        if (this._watches.has(resource.toString())) {\n            this._fileService.unwatchFileChanges(resource);\n            this._watches.delete(resource.toString());\n        }\n    };\n    WorkspaceWatchLogic.prototype._unwatchWorkspaces = function () {\n        var _this = this;\n        this._watches.forEach(function (uri) { return _this._fileService.unwatchFileChanges(uri); });\n        this._watches.clear();\n    };\n    WorkspaceWatchLogic = tslib_1.__decorate([\n        tslib_1.__param(1, configuration_1.IConfigurationService),\n        tslib_1.__param(2, workspace_1.IWorkspaceContextService)\n    ], WorkspaceWatchLogic);\n    return WorkspaceWatchLogic;\n}(lifecycle_1.Disposable));\nvar RemoteFileService = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoteFileService, _super);\n    function RemoteFileService(_fileService, storageService, environmentService, configurationService, contextService, lifecycleService, notificationService, textResourceConfigurationService) {\n        var _this = _super.call(this, contextService, environmentService, textResourceConfigurationService, configurationService, lifecycleService, storageService, notificationService) || this;\n        _this._fileService = _fileService;\n        _this._activeWatches = new Map();\n        _this._provider = new Map();\n        _this._register(new WorkspaceWatchLogic(_this, configurationService, contextService));\n        return _this;\n    }\n    RemoteFileService.prototype.registerProvider = function (scheme, provider) {\n        var _this = this;\n        if (this._provider.has(scheme)) {\n            throw new Error('a provider for that scheme is already registered');\n        }\n        this._provider.set(scheme, provider);\n        return {\n            dispose: function () {\n                _this._provider.delete(scheme);\n            }\n        };\n    };\n    // --- stat\n    RemoteFileService.prototype._withProvider = function (resource) {\n        var _this = this;\n        if (!resources.isAbsolutePath(resource)) {\n            throw new files_1.FileOperationError(nls_1.localize('invalidPath', \"The path of resource '{0}' must be absolute\", resource.toString(true)), files_1.FileOperationResult.FILE_INVALID_PATH);\n        }\n        return Promise.all([\n            this._fileService.activateProvider(resource.scheme)\n        ]).then(function () {\n            var provider = _this._provider.get(resource.scheme);\n            if (!provider) {\n                var err = new Error();\n                err.name = 'ENOPRO';\n                err.message = \"no provider for \" + resource.toString();\n                throw err;\n            }\n            return provider;\n        });\n    };\n    RemoteFileService.prototype.resolveFile = function (resource, options) {\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.resolveFile.call(this, resource, options);\n        }\n        else {\n            return this._doResolveFiles([{ resource: resource, options: options }]).then(function (data) {\n                if (data.length !== 1 || !data[0].success) {\n                    throw new files_1.FileOperationError(nls_1.localize('fileNotFoundError', \"File not found ({0})\", resource.toString(true)), files_1.FileOperationResult.FILE_NOT_FOUND);\n                }\n                else {\n                    return data[0].stat;\n                }\n            });\n        }\n    };\n    RemoteFileService.prototype._doResolveFiles = function (toResolve) {\n        return this._withProvider(toResolve[0].resource).then(function (provider) {\n            var result = [];\n            var promises = toResolve.map(function (item, idx) {\n                return provider.stat(item.resource).then(function (stat) {\n                    return toDeepIFileStat(provider, [item.resource, stat], item.options && item.options.resolveTo).then(function (fileStat) {\n                        result[idx] = { stat: fileStat, success: true };\n                    });\n                }, function (_err) {\n                    result[idx] = { stat: undefined, success: false };\n                });\n            });\n            return Promise.all(promises).then(function () { return result; });\n        });\n    };\n    // --- resolve\n    RemoteFileService.prototype.resolveContent = function (resource, options) {\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.resolveContent.call(this, resource, options);\n        }\n        else {\n            return this._readFile(resource, options).then(RemoteFileService._asContent);\n        }\n    };\n    RemoteFileService.prototype.resolveStreamContent = function (resource, options) {\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.resolveStreamContent.call(this, resource, options);\n        }\n        else {\n            return this._readFile(resource, options);\n        }\n    };\n    RemoteFileService.prototype._readFile = function (resource, options) {\n        var _this = this;\n        if (options === void 0) { options = Object.create(null); }\n        return this._withProvider(resource).then(function (provider) {\n            return _this.resolveFile(resource).then(function (fileStat) {\n                if (fileStat.isDirectory) {\n                    // todo@joh cannot copy a folder\n                    // https://github.com/Microsoft/vscode/issues/41547\n                    throw new files_1.FileOperationError(nls_1.localize('fileIsDirectoryError', \"File is directory\"), files_1.FileOperationResult.FILE_IS_DIRECTORY, options);\n                }\n                if (typeof options.etag === 'string' && fileStat.etag === options.etag) {\n                    throw new files_1.FileOperationError(nls_1.localize('fileNotModifiedError', \"File not modified since\"), files_1.FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n                }\n                var decodeStreamOpts = {\n                    guessEncoding: options.autoGuessEncoding,\n                    overwriteEncoding: function (detected) {\n                        return _this.encoding.getReadEncoding(resource, options, { encoding: detected, seemsBinary: false });\n                    }\n                };\n                var readable = streams_1.createReadableOfProvider(provider, resource, options.position || 0);\n                return encoding_1.toDecodeStream(readable, decodeStreamOpts).then(function (data) {\n                    if (options.acceptTextOnly && data.detected.seemsBinary) {\n                        return Promise.reject(new files_1.FileOperationError(nls_1.localize('fileBinaryError', \"File seems to be binary and cannot be opened as text\"), files_1.FileOperationResult.FILE_IS_BINARY, options));\n                    }\n                    return {\n                        encoding: data.detected.encoding,\n                        value: data.stream,\n                        resource: fileStat.resource,\n                        name: fileStat.name,\n                        etag: fileStat.etag,\n                        mtime: fileStat.mtime,\n                        isReadonly: fileStat.isReadonly,\n                        size: fileStat.size\n                    };\n                });\n            });\n        });\n    };\n    // --- saving\n    RemoteFileService._mkdirp = function (provider, directory) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var basenames, stat, e_1, i;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        basenames = [];\n                        _a.label = 1;\n                    case 1:\n                        if (!(directory.path !== '/')) return [3 /*break*/, 6];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, provider.stat(directory)];\n                    case 3:\n                        stat = _a.sent();\n                        if ((stat.type & files_1.FileType.Directory) === 0) {\n                            throw new Error(directory.toString() + \" is not a directory\");\n                        }\n                        return [3 /*break*/, 6]; // we have hit a directory -> good\n                    case 4:\n                        e_1 = _a.sent();\n                        // ENOENT\n                        basenames.push(resources.basename(directory));\n                        directory = resources.dirname(directory);\n                        return [3 /*break*/, 5];\n                    case 5: return [3 /*break*/, 1];\n                    case 6:\n                        i = basenames.length - 1;\n                        _a.label = 7;\n                    case 7:\n                        if (!(i >= 0)) return [3 /*break*/, 10];\n                        directory = resources.joinPath(directory, basenames[i]);\n                        return [4 /*yield*/, provider.mkdir(directory)];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        i--;\n                        return [3 /*break*/, 7];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RemoteFileService._throwIfFileSystemIsReadonly = function (provider) {\n        if (provider.capabilities & files_1.FileSystemProviderCapabilities.Readonly) {\n            throw new files_1.FileOperationError(nls_1.localize('err.readonly', \"Resource can not be modified.\"), files_1.FileOperationResult.FILE_PERMISSION_DENIED);\n        }\n        return provider;\n    };\n    RemoteFileService.prototype.createFile = function (resource, content, options) {\n        var _this = this;\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.createFile.call(this, resource, content, options);\n        }\n        else {\n            return this._withProvider(resource).then(RemoteFileService._throwIfFileSystemIsReadonly).then(function (provider) {\n                return RemoteFileService._mkdirp(provider, resources.dirname(resource)).then(function () {\n                    var encoding = _this.encoding.getWriteEncoding(resource).encoding;\n                    return _this._writeFile(provider, resource, new files_1.StringSnapshot(content || ''), encoding, { create: true, overwrite: Boolean(options && options.overwrite) });\n                });\n            }).then(function (fileStat) {\n                _this._onAfterOperation.fire(new files_1.FileOperationEvent(resource, files_1.FileOperation.CREATE, fileStat));\n                return fileStat;\n            }, function (err) {\n                var message = nls_1.localize('err.create', \"Failed to create file {0}\", resource.toString(false));\n                var result = files_1.toFileOperationResult(err);\n                throw new files_1.FileOperationError(message, result, options);\n            });\n        }\n    };\n    RemoteFileService.prototype.updateContent = function (resource, value, options) {\n        var _this = this;\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.updateContent.call(this, resource, value, options);\n        }\n        else {\n            return this._withProvider(resource).then(RemoteFileService._throwIfFileSystemIsReadonly).then(function (provider) {\n                return RemoteFileService._mkdirp(provider, resources.dirname(resource)).then(function () {\n                    var snapshot = typeof value === 'string' ? new files_1.StringSnapshot(value) : value;\n                    return _this._writeFile(provider, resource, snapshot, options && options.encoding, { create: true, overwrite: true });\n                });\n            });\n        }\n    };\n    RemoteFileService.prototype._writeFile = function (provider, resource, snapshot, preferredEncoding, options) {\n        var _this = this;\n        if (preferredEncoding === void 0) { preferredEncoding = undefined; }\n        var readable = streams_1.createReadableOfSnapshot(snapshot);\n        var _a = this.encoding.getWriteEncoding(resource, preferredEncoding), encoding = _a.encoding, hasBOM = _a.hasBOM;\n        var encoder = encoding_1.encodeStream(encoding, { addBOM: hasBOM });\n        var target = streams_1.createWritableOfProvider(provider, resource, options);\n        return new Promise(function (resolve, reject) {\n            readable.pipe(encoder).pipe(target);\n            target.once('error', function (err) { return reject(err); });\n            target.once('finish', function (_) { return resolve(undefined); });\n        }).then(function (_) {\n            return _this.resolveFile(resource, { resolveMetadata: true });\n        });\n    };\n    RemoteFileService._asContent = function (content) {\n        return new Promise(function (resolve, reject) {\n            var result = {\n                value: '',\n                encoding: content.encoding,\n                etag: content.etag,\n                size: content.size,\n                mtime: content.mtime,\n                name: content.name,\n                resource: content.resource,\n                isReadonly: content.isReadonly\n            };\n            content.value.on('data', function (chunk) { return result.value += chunk; });\n            content.value.on('error', reject);\n            content.value.on('end', function () { return resolve(result); });\n        });\n    };\n    RemoteFileService.prototype.watchFileChanges = function (resource, opts) {\n        if (opts === void 0) { opts = { recursive: false, excludes: [] }; }\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.watchFileChanges.call(this, resource);\n        }\n        var key = resource.toString();\n        var entry = this._activeWatches.get(key);\n        if (entry) {\n            entry.count += 1;\n            return;\n        }\n        this._activeWatches.set(key, {\n            count: 1,\n            unwatch: this._withProvider(resource).then(function (provider) {\n                return provider.watch(resource, opts);\n            }, function (_err) {\n                return { dispose: function () { } };\n            })\n        });\n    };\n    RemoteFileService.prototype.unwatchFileChanges = function (resource) {\n        if (resource.scheme === network_1.Schemas.file) {\n            return _super.prototype.unwatchFileChanges.call(this, resource);\n        }\n        var entry = this._activeWatches.get(resource.toString());\n        if (entry && --entry.count === 0) {\n            entry.unwatch.then(lifecycle_1.dispose);\n            this._activeWatches.delete(resource.toString());\n        }\n    };\n    RemoteFileService = tslib_1.__decorate([\n        tslib_1.__param(0, files_1.IFileService),\n        tslib_1.__param(1, storage_1.IStorageService),\n        tslib_1.__param(2, environment_1.IEnvironmentService),\n        tslib_1.__param(3, configuration_1.IConfigurationService),\n        tslib_1.__param(4, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(5, lifecycle_2.ILifecycleService),\n        tslib_1.__param(6, notification_1.INotificationService),\n        tslib_1.__param(7, resourceConfiguration_1.ITextResourceConfigurationService)\n    ], RemoteFileService);\n    return RemoteFileService;\n}(fileService_1.FileService));\nexports.RemoteFileService = RemoteFileService;\nextensions_1.registerSingleton(files_1.ILegacyFileService, RemoteFileService);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/remoteFileService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/files/node/remoteFileService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { IDisposable, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport * as resources from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IDecodeStreamOptions, toDecodeStream, encodeStream } from 'vs/base/node/encoding';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/resourceConfiguration';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FileWriteOptions, FileSystemProviderCapabilities, IContent, ICreateFileOptions, IFileStat, IFileSystemProvider, IFilesConfiguration, IResolveContentOptions, IResolveFileOptions, IResolveFileResult, IStat, IStreamContent, ITextSnapshot, IUpdateContentOptions, StringSnapshot, IWatchOptions, FileType, ILegacyFileService, IFileService, toFileOperationResult, IFileStatWithMetadata, IResolveMetadataFileOptions, etag } from 'vs/platform/files/common/files';\nimport { ILifecycleService } from 'vs/platform/lifecycle/common/lifecycle';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { FileService } from 'vs/workbench/services/files/node/fileService';\nimport { createReadableOfProvider, createReadableOfSnapshot, createWritableOfProvider } from 'vs/workbench/services/files/node/streams';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nclass TypeOnlyStat implements IStat {\n\n\tconstructor(readonly type: FileType) {\n\t\t//\n\t}\n\n\t// todo@remote -> make a getter and warn when\n\t// being used in development.\n\tmtime: number = 0;\n\tctime: number = 0;\n\tsize: number = 0;\n}\n\nfunction toIFileStat(provider: IFileSystemProvider, tuple: [URI, IStat], recurse?: (tuple: [URI, IStat]) => boolean): Promise<IFileStat> {\n\tconst [resource, stat] = tuple;\n\tconst fileStat: IFileStat = {\n\t\tresource,\n\t\tname: resources.basename(resource),\n\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\tisReadonly: !!(provider.capabilities & FileSystemProviderCapabilities.Readonly),\n\t\tmtime: stat.mtime,\n\t\tsize: stat.size,\n\t\tetag: etag(stat.mtime, stat.size),\n\t};\n\n\tif (fileStat.isDirectory) {\n\t\tif (recurse && recurse([resource, stat])) {\n\t\t\t// dir -> resolve\n\t\t\treturn provider.readdir(resource).then(entries => {\n\t\t\t\t// resolve children if requested\n\t\t\t\treturn Promise.all(entries.map(tuple => {\n\t\t\t\t\tconst [name, type] = tuple;\n\t\t\t\t\tconst childResource = resources.joinPath(resource, name);\n\t\t\t\t\treturn toIFileStat(provider, [childResource, new TypeOnlyStat(type)], recurse);\n\t\t\t\t})).then(children => {\n\t\t\t\t\tfileStat.children = children;\n\t\t\t\t\treturn fileStat;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t// file or (un-resolved) dir\n\treturn Promise.resolve(fileStat);\n}\n\nexport function toDeepIFileStat(provider: IFileSystemProvider, tuple: [URI, IStat], to?: URI[]): Promise<IFileStat> {\n\n\tconst trie = TernarySearchTree.forPaths<true>();\n\ttrie.set(tuple[0].toString(), true);\n\n\tif (isNonEmptyArray(to)) {\n\t\tto.forEach(uri => trie.set(uri.toString(), true));\n\t}\n\n\treturn toIFileStat(provider, tuple, candidate => {\n\t\treturn Boolean(trie.findSuperstr(candidate[0].toString()) || trie.get(candidate[0].toString()));\n\t});\n}\n\nclass WorkspaceWatchLogic extends Disposable {\n\n\tprivate _watches = new Map<string, URI>();\n\n\tconstructor(\n\t\tprivate _fileService: RemoteFileService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._refresh();\n\n\t\tthis._register(this._contextService.onDidChangeWorkspaceFolders(e => {\n\t\t\tfor (const removed of e.removed) {\n\t\t\t\tthis._unwatchWorkspace(removed.uri);\n\t\t\t}\n\t\t\tfor (const added of e.added) {\n\t\t\t\tthis._watchWorkspace(added.uri);\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._contextService.onDidChangeWorkbenchState(e => {\n\t\t\tthis._refresh();\n\t\t}));\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('files.watcherExclude')) {\n\t\t\t\tthis._refresh();\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._unwatchWorkspaces();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _refresh(): void {\n\t\tthis._unwatchWorkspaces();\n\t\tfor (const folder of this._contextService.getWorkspace().folders) {\n\t\t\tif (folder.uri.scheme !== Schemas.file) {\n\t\t\t\tthis._watchWorkspace(folder.uri);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _watchWorkspace(resource: URI) {\n\t\tlet excludes: string[] = [];\n\t\tlet config = this._configurationService.getValue<IFilesConfiguration>({ resource });\n\t\tif (config.files && config.files.watcherExclude) {\n\t\t\tfor (const key in config.files.watcherExclude) {\n\t\t\t\tif (config.files.watcherExclude[key] === true) {\n\t\t\t\t\texcludes.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._watches.set(resource.toString(), resource);\n\t\tthis._fileService.watchFileChanges(resource, { recursive: true, excludes });\n\t}\n\n\tprivate _unwatchWorkspace(resource: URI) {\n\t\tif (this._watches.has(resource.toString())) {\n\t\t\tthis._fileService.unwatchFileChanges(resource);\n\t\t\tthis._watches.delete(resource.toString());\n\t\t}\n\t}\n\n\tprivate _unwatchWorkspaces() {\n\t\tthis._watches.forEach(uri => this._fileService.unwatchFileChanges(uri));\n\t\tthis._watches.clear();\n\t}\n}\n\nexport class RemoteFileService extends FileService {\n\n\tprivate readonly _provider: Map<string, IFileSystemProvider>;\n\n\tconstructor(\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t) {\n\t\tsuper(\n\t\t\tcontextService,\n\t\t\tenvironmentService,\n\t\t\ttextResourceConfigurationService,\n\t\t\tconfigurationService,\n\t\t\tlifecycleService,\n\t\t\tstorageService,\n\t\t\tnotificationService\n\t\t);\n\n\t\tthis._provider = new Map<string, IFileSystemProvider>();\n\t\tthis._register(new WorkspaceWatchLogic(this, configurationService, contextService));\n\t}\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this._provider.has(scheme)) {\n\t\t\tthrow new Error('a provider for that scheme is already registered');\n\t\t}\n\n\t\tthis._provider.set(scheme, provider);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._provider.delete(scheme);\n\t\t\t}\n\t\t};\n\t}\n\n\t// --- stat\n\n\tprivate _withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\tif (!resources.isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(\n\t\t\t\tlocalize('invalidPath', \"The path of resource '{0}' must be absolute\", resource.toString(true)),\n\t\t\t\tFileOperationResult.FILE_INVALID_PATH\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis._fileService.activateProvider(resource.scheme)\n\t\t]).then(() => {\n\t\t\tconst provider = this._provider.get(resource.scheme);\n\t\t\tif (!provider) {\n\t\t\t\tconst err = new Error();\n\t\t\t\terr.name = 'ENOPRO';\n\t\t\t\terr.message = `no provider for ${resource.toString()}`;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\treturn provider;\n\t\t});\n\t}\n\n\tresolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tresolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.resolveFile(resource, options);\n\t\t} else {\n\t\t\treturn this._doResolveFiles([{ resource, options }]).then(data => {\n\t\t\t\tif (data.length !== 1 || !data[0].success) {\n\t\t\t\t\tthrow new FileOperationError(\n\t\t\t\t\t\tlocalize('fileNotFoundError', \"File not found ({0})\", resource.toString(true)),\n\t\t\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn data[0].stat!;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _doResolveFiles(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn this._withProvider(toResolve[0].resource).then(provider => {\n\t\t\tlet result: IResolveFileResult[] = [];\n\t\t\tlet promises = toResolve.map((item, idx) => {\n\t\t\t\treturn provider.stat(item.resource).then(stat => {\n\t\t\t\t\treturn toDeepIFileStat(provider, [item.resource, stat], item.options && item.options.resolveTo).then(fileStat => {\n\t\t\t\t\t\tresult[idx] = { stat: fileStat, success: true };\n\t\t\t\t\t});\n\t\t\t\t}, _err => {\n\t\t\t\t\tresult[idx] = { stat: undefined, success: false };\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Promise.all(promises).then(() => result);\n\t\t});\n\t}\n\n\t// --- resolve\n\n\tresolveContent(resource: URI, options?: IResolveContentOptions): Promise<IContent> {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.resolveContent(resource, options);\n\t\t} else {\n\t\t\treturn this._readFile(resource, options).then(RemoteFileService._asContent);\n\t\t}\n\t}\n\n\tresolveStreamContent(resource: URI, options?: IResolveContentOptions): Promise<IStreamContent> {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.resolveStreamContent(resource, options);\n\t\t} else {\n\t\t\treturn this._readFile(resource, options);\n\t\t}\n\t}\n\n\tprivate _readFile(resource: URI, options: IResolveContentOptions = Object.create(null)): Promise<IStreamContent> {\n\t\treturn this._withProvider(resource).then(provider => {\n\n\t\t\treturn this.resolveFile(resource).then(fileStat => {\n\n\t\t\t\tif (fileStat.isDirectory) {\n\t\t\t\t\t// todo@joh cannot copy a folder\n\t\t\t\t\t// https://github.com/Microsoft/vscode/issues/41547\n\t\t\t\t\tthrow new FileOperationError(\n\t\t\t\t\t\tlocalize('fileIsDirectoryError', \"File is directory\"),\n\t\t\t\t\t\tFileOperationResult.FILE_IS_DIRECTORY,\n\t\t\t\t\t\toptions\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (typeof options.etag === 'string' && fileStat.etag === options.etag) {\n\t\t\t\t\tthrow new FileOperationError(\n\t\t\t\t\t\tlocalize('fileNotModifiedError', \"File not modified since\"),\n\t\t\t\t\t\tFileOperationResult.FILE_NOT_MODIFIED_SINCE,\n\t\t\t\t\t\toptions\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst decodeStreamOpts: IDecodeStreamOptions = {\n\t\t\t\t\tguessEncoding: options.autoGuessEncoding,\n\t\t\t\t\toverwriteEncoding: detected => {\n\t\t\t\t\t\treturn this.encoding.getReadEncoding(resource, options, { encoding: detected, seemsBinary: false });\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst readable = createReadableOfProvider(provider, resource, options.position || 0);\n\n\t\t\t\treturn toDecodeStream(readable, decodeStreamOpts).then(data => {\n\n\t\t\t\t\tif (options.acceptTextOnly && data.detected.seemsBinary) {\n\t\t\t\t\t\treturn Promise.reject<any>(new FileOperationError(\n\t\t\t\t\t\t\tlocalize('fileBinaryError', \"File seems to be binary and cannot be opened as text\"),\n\t\t\t\t\t\t\tFileOperationResult.FILE_IS_BINARY,\n\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <IStreamContent>{\n\t\t\t\t\t\tencoding: data.detected.encoding,\n\t\t\t\t\t\tvalue: data.stream,\n\t\t\t\t\t\tresource: fileStat.resource,\n\t\t\t\t\t\tname: fileStat.name,\n\t\t\t\t\t\tetag: fileStat.etag,\n\t\t\t\t\t\tmtime: fileStat.mtime,\n\t\t\t\t\t\tisReadonly: fileStat.isReadonly,\n\t\t\t\t\t\tsize: fileStat.size\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t// --- saving\n\n\tprivate static async _mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\n\t\tlet basenames: string[] = [];\n\t\twhile (directory.path !== '/') {\n\t\t\ttry {\n\t\t\t\tlet stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(`${directory.toString()} is not a directory`);\n\t\t\t\t}\n\t\t\t\tbreak; // we have hit a directory -> good\n\t\t\t} catch (e) {\n\t\t\t\t// ENOENT\n\t\t\t\tbasenames.push(resources.basename(directory));\n\t\t\t\tdirectory = resources.dirname(directory);\n\t\t\t}\n\t\t}\n\t\tfor (let i = basenames.length - 1; i >= 0; i--) {\n\t\t\tdirectory = resources.joinPath(directory, basenames[i]);\n\t\t\tawait provider.mkdir(directory);\n\t\t}\n\t}\n\n\tprivate static _throwIfFileSystemIsReadonly(provider: IFileSystemProvider): IFileSystemProvider {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Resource can not be modified.\"), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\t\treturn provider;\n\t}\n\n\tcreateFile(resource: URI, content?: string, options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.createFile(resource, content, options);\n\t\t} else {\n\n\t\t\treturn this._withProvider(resource).then(RemoteFileService._throwIfFileSystemIsReadonly).then(provider => {\n\n\t\t\t\treturn RemoteFileService._mkdirp(provider, resources.dirname(resource)).then(() => {\n\t\t\t\t\tconst { encoding } = this.encoding.getWriteEncoding(resource);\n\t\t\t\t\treturn this._writeFile(provider, resource, new StringSnapshot(content || ''), encoding, { create: true, overwrite: Boolean(options && options.overwrite) });\n\t\t\t\t});\n\n\t\t\t}).then(fileStat => {\n\t\t\t\tthis._onAfterOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\t\t\t\treturn fileStat;\n\t\t\t}, err => {\n\t\t\t\tconst message = localize('err.create', \"Failed to create file {0}\", resource.toString(false));\n\t\t\t\tconst result = toFileOperationResult(err);\n\t\t\t\tthrow new FileOperationError(message, result, options);\n\t\t\t});\n\t\t}\n\t}\n\n\tupdateContent(resource: URI, value: string | ITextSnapshot, options?: IUpdateContentOptions): Promise<IFileStatWithMetadata> {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.updateContent(resource, value, options);\n\t\t} else {\n\t\t\treturn this._withProvider(resource).then(RemoteFileService._throwIfFileSystemIsReadonly).then(provider => {\n\t\t\t\treturn RemoteFileService._mkdirp(provider, resources.dirname(resource)).then(() => {\n\t\t\t\t\tconst snapshot = typeof value === 'string' ? new StringSnapshot(value) : value;\n\t\t\t\t\treturn this._writeFile(provider, resource, snapshot, options && options.encoding, { create: true, overwrite: true });\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeFile(provider: IFileSystemProvider, resource: URI, snapshot: ITextSnapshot, preferredEncoding: string | undefined = undefined, options: FileWriteOptions): Promise<IFileStatWithMetadata> {\n\t\tconst readable = createReadableOfSnapshot(snapshot);\n\t\tconst { encoding, hasBOM } = this.encoding.getWriteEncoding(resource, preferredEncoding);\n\t\tconst encoder = encodeStream(encoding, { addBOM: hasBOM });\n\t\tconst target = createWritableOfProvider(provider, resource, options);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treadable.pipe(encoder).pipe(target);\n\t\t\ttarget.once('error', err => reject(err));\n\t\t\ttarget.once('finish', (_: unknown) => resolve(undefined));\n\t\t}).then(_ => {\n\t\t\treturn this.resolveFile(resource, { resolveMetadata: true }) as Promise<IFileStatWithMetadata>;\n\t\t});\n\t}\n\n\tprivate static _asContent(content: IStreamContent): Promise<IContent> {\n\t\treturn new Promise<IContent>((resolve, reject) => {\n\t\t\tlet result: IContent = {\n\t\t\t\tvalue: '',\n\t\t\t\tencoding: content.encoding,\n\t\t\t\tetag: content.etag,\n\t\t\t\tsize: content.size,\n\t\t\t\tmtime: content.mtime,\n\t\t\t\tname: content.name,\n\t\t\t\tresource: content.resource,\n\t\t\t\tisReadonly: content.isReadonly\n\t\t\t};\n\t\t\tcontent.value.on('data', chunk => result.value += chunk);\n\t\t\tcontent.value.on('error', reject);\n\t\t\tcontent.value.on('end', () => resolve(result));\n\t\t});\n\t}\n\n\tprivate _activeWatches = new Map<string, { unwatch: Promise<IDisposable>, count: number }>();\n\n\twatchFileChanges(resource: URI, opts: IWatchOptions = { recursive: false, excludes: [] }): void {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.watchFileChanges(resource);\n\t\t}\n\n\t\tconst key = resource.toString();\n\t\tconst entry = this._activeWatches.get(key);\n\t\tif (entry) {\n\t\t\tentry.count += 1;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._activeWatches.set(key, {\n\t\t\tcount: 1,\n\t\t\tunwatch: this._withProvider(resource).then(provider => {\n\t\t\t\treturn provider.watch(resource, opts);\n\t\t\t}, _err => {\n\t\t\t\treturn { dispose() { } };\n\t\t\t})\n\t\t});\n\t}\n\n\tunwatchFileChanges(resource: URI): void {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn super.unwatchFileChanges(resource);\n\t\t}\n\t\tlet entry = this._activeWatches.get(resource.toString());\n\t\tif (entry && --entry.count === 0) {\n\t\t\tentry.unwatch.then(dispose);\n\t\t\tthis._activeWatches.delete(resource.toString());\n\t\t}\n\t}\n}\n\nregisterSingleton(ILegacyFileService, RemoteFileService);"]}]}