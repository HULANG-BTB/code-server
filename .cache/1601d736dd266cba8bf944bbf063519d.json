{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/fileActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/fileActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/fileactions\");\nvar nls = require(\"vs/nls\");\nvar types = require(\"vs/base/common/types\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar extpath = require(\"vs/base/common/extpath\");\nvar resources = require(\"vs/base/common/resources\");\nvar errorMessage_1 = require(\"vs/base/common/errorMessage\");\nvar strings = require(\"vs/base/common/strings\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar files_1 = require(\"vs/workbench/contrib/files/common/files\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar files_2 = require(\"vs/platform/files/common/files\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar untitledEditorService_1 = require(\"vs/workbench/services/untitled/common/untitledEditorService\");\nvar quickOpen_1 = require(\"vs/platform/quickOpen/common/quickOpen\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar fileCommands_1 = require(\"vs/workbench/contrib/files/browser/fileCommands\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar clipboardService_1 = require(\"vs/platform/clipboard/common/clipboardService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar network_1 = require(\"vs/base/common/network\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar uint_1 = require(\"vs/editor/common/core/uint\");\nvar editorCommands_1 = require(\"vs/workbench/browser/parts/editor/editorCommands\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar explorerModel_1 = require(\"vs/workbench/contrib/files/common/explorerModel\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar async_1 = require(\"vs/base/common/async\");\nexports.NEW_FILE_COMMAND_ID = 'explorer.newFile';\nexports.NEW_FILE_LABEL = nls.localize('newFile', \"New File\");\nexports.NEW_FOLDER_COMMAND_ID = 'explorer.newFolder';\nexports.NEW_FOLDER_LABEL = nls.localize('newFolder', \"New Folder\");\nexports.TRIGGER_RENAME_LABEL = nls.localize('rename', \"Rename\");\nexports.MOVE_FILE_TO_TRASH_LABEL = nls.localize('delete', \"Delete\");\nexports.COPY_FILE_LABEL = nls.localize('copyFile', \"Copy\");\nexports.PASTE_FILE_LABEL = nls.localize('pasteFile', \"Paste\");\nexports.FileCopiedContext = new contextkey_1.RawContextKey('fileCopied', false);\nvar BaseErrorReportingAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseErrorReportingAction, _super);\n    function BaseErrorReportingAction(id, label, _notificationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this._notificationService = _notificationService;\n        return _this;\n    }\n    Object.defineProperty(BaseErrorReportingAction.prototype, \"notificationService\", {\n        get: function () {\n            return this._notificationService;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseErrorReportingAction.prototype.onError = function (error) {\n        if (error.message === 'string') {\n            error = error.message;\n        }\n        this._notificationService.error(errorMessage_1.toErrorMessage(error, false));\n    };\n    BaseErrorReportingAction.prototype.onErrorWithRetry = function (error, retry) {\n        this._notificationService.prompt(notification_1.Severity.Error, errorMessage_1.toErrorMessage(error, false), [{\n                label: nls.localize('retry', \"Retry\"),\n                run: function () { return retry(); }\n            }]);\n    };\n    return BaseErrorReportingAction;\n}(actions_1.Action));\nexports.BaseErrorReportingAction = BaseErrorReportingAction;\nfunction refreshIfSeparator(value, explorerService) {\n    if (value && ((value.indexOf('/') >= 0) || (value.indexOf('\\\\') >= 0))) {\n        // New input contains separator, multiple resources will get created workaround for #68204\n        explorerService.refresh();\n    }\n}\n/* New File */\nvar NewFileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewFileAction, _super);\n    function NewFileAction(getElement, notificationService, explorerService, fileService, editorService) {\n        var _this = _super.call(this, 'explorer.newFile', exports.NEW_FILE_LABEL, notificationService) || this;\n        _this.getElement = getElement;\n        _this.explorerService = explorerService;\n        _this.fileService = fileService;\n        _this.editorService = editorService;\n        _this.toDispose = [];\n        _this.class = 'explorer-action new-file';\n        _this.toDispose.push(_this.explorerService.onDidChangeEditable(function (e) {\n            var elementIsBeingEdited = _this.explorerService.isEditable(e);\n            _this.enabled = !elementIsBeingEdited;\n        }));\n        return _this;\n    }\n    NewFileAction.prototype.run = function () {\n        var _this = this;\n        var folder;\n        var element = this.getElement();\n        if (element) {\n            folder = element.isDirectory ? element : element.parent;\n        }\n        else {\n            folder = this.explorerService.roots[0];\n        }\n        if (folder.isReadonly) {\n            return Promise.reject(new Error('Parent folder is readonly.'));\n        }\n        var stat = new explorerModel_1.NewExplorerItem(folder, false);\n        return folder.fetchChildren(this.fileService, this.explorerService).then(function () {\n            folder.addChild(stat);\n            var onSuccess = function (value) {\n                return _this.fileService.createFile(resources.joinPath(folder.resource, value)).then(function (stat) {\n                    refreshIfSeparator(value, _this.explorerService);\n                    return _this.editorService.openEditor({ resource: stat.resource, options: { pinned: true } });\n                }, function (error) {\n                    _this.onErrorWithRetry(error, function () { return onSuccess(value); });\n                });\n            };\n            _this.explorerService.setEditable(stat, {\n                validationMessage: function (value) { return validateFileName(stat, value); },\n                onFinish: function (value, success) {\n                    folder.removeChild(stat);\n                    _this.explorerService.setEditable(stat, null);\n                    if (success) {\n                        onSuccess(value);\n                    }\n                    else {\n                        _this.explorerService.select(folder.resource).then(undefined, errors_1.onUnexpectedError);\n                    }\n                }\n            });\n        });\n    };\n    NewFileAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        lifecycle_1.dispose(this.toDispose);\n    };\n    NewFileAction.ID = 'workbench.files.action.createFileFromExplorer';\n    NewFileAction.LABEL = nls.localize('createNewFile', \"New File\");\n    NewFileAction = tslib_1.__decorate([\n        tslib_1.__param(1, notification_1.INotificationService),\n        tslib_1.__param(2, files_1.IExplorerService),\n        tslib_1.__param(3, files_2.IFileService),\n        tslib_1.__param(4, editorService_1.IEditorService)\n    ], NewFileAction);\n    return NewFileAction;\n}(BaseErrorReportingAction));\nexports.NewFileAction = NewFileAction;\n/* New Folder */\nvar NewFolderAction = /** @class */ (function (_super) {\n    tslib_1.__extends(NewFolderAction, _super);\n    function NewFolderAction(getElement, notificationService, fileService, explorerService) {\n        var _this = _super.call(this, 'explorer.newFolder', exports.NEW_FOLDER_LABEL, notificationService) || this;\n        _this.getElement = getElement;\n        _this.fileService = fileService;\n        _this.explorerService = explorerService;\n        _this.toDispose = [];\n        _this.class = 'explorer-action new-folder';\n        _this.toDispose.push(_this.explorerService.onDidChangeEditable(function (e) {\n            var elementIsBeingEdited = _this.explorerService.isEditable(e);\n            _this.enabled = !elementIsBeingEdited;\n        }));\n        return _this;\n    }\n    NewFolderAction.prototype.run = function () {\n        var _this = this;\n        var folder;\n        var element = this.getElement();\n        if (element) {\n            folder = element.isDirectory ? element : element.parent;\n        }\n        else {\n            folder = this.explorerService.roots[0];\n        }\n        if (folder.isReadonly) {\n            return Promise.reject(new Error('Parent folder is readonly.'));\n        }\n        var stat = new explorerModel_1.NewExplorerItem(folder, true);\n        return folder.fetchChildren(this.fileService, this.explorerService).then(function () {\n            folder.addChild(stat);\n            var onSuccess = function (value) {\n                return _this.fileService.createFolder(resources.joinPath(folder.resource, value)).then(function (stat) {\n                    refreshIfSeparator(value, _this.explorerService);\n                    return _this.explorerService.select(stat.resource, true);\n                }, function (error) {\n                    _this.onErrorWithRetry(error, function () { return onSuccess(value); });\n                });\n            };\n            _this.explorerService.setEditable(stat, {\n                validationMessage: function (value) { return validateFileName(stat, value); },\n                onFinish: function (value, success) {\n                    folder.removeChild(stat);\n                    _this.explorerService.setEditable(stat, null);\n                    if (success) {\n                        onSuccess(value);\n                    }\n                    else {\n                        _this.explorerService.select(folder.resource).then(undefined, errors_1.onUnexpectedError);\n                    }\n                }\n            });\n        });\n    };\n    NewFolderAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        lifecycle_1.dispose(this.toDispose);\n    };\n    NewFolderAction.ID = 'workbench.files.action.createFolderFromExplorer';\n    NewFolderAction.LABEL = nls.localize('createNewFolder', \"New Folder\");\n    NewFolderAction = tslib_1.__decorate([\n        tslib_1.__param(1, notification_1.INotificationService),\n        tslib_1.__param(2, files_2.IFileService),\n        tslib_1.__param(3, files_1.IExplorerService)\n    ], NewFolderAction);\n    return NewFolderAction;\n}(BaseErrorReportingAction));\nexports.NewFolderAction = NewFolderAction;\n/* Create new file from anywhere: Open untitled */\nvar GlobalNewUntitledFileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(GlobalNewUntitledFileAction, _super);\n    function GlobalNewUntitledFileAction(id, label, editorService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        return _this;\n    }\n    GlobalNewUntitledFileAction.prototype.run = function () {\n        return this.editorService.openEditor({ options: { pinned: true } }); // untitled are always pinned\n    };\n    GlobalNewUntitledFileAction.ID = 'workbench.action.files.newUntitledFile';\n    GlobalNewUntitledFileAction.LABEL = nls.localize('newUntitledFile', \"New Untitled File\");\n    GlobalNewUntitledFileAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService)\n    ], GlobalNewUntitledFileAction);\n    return GlobalNewUntitledFileAction;\n}(actions_1.Action));\nexports.GlobalNewUntitledFileAction = GlobalNewUntitledFileAction;\nvar BaseDeleteFileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseDeleteFileAction, _super);\n    function BaseDeleteFileAction(elements, useTrash, fileService, notificationService, dialogService, textFileService, configurationService) {\n        var _this = _super.call(this, 'moveFileToTrash', exports.MOVE_FILE_TO_TRASH_LABEL, notificationService) || this;\n        _this.elements = elements;\n        _this.useTrash = useTrash;\n        _this.fileService = fileService;\n        _this.dialogService = dialogService;\n        _this.textFileService = textFileService;\n        _this.configurationService = configurationService;\n        _this.useTrash = useTrash && elements.every(function (e) { return !extpath.isUNC(e.resource.fsPath); }); // on UNC shares there is no trash\n        _this.enabled = _this.elements && _this.elements.every(function (e) { return !e.isReadonly; });\n        return _this;\n    }\n    BaseDeleteFileAction.prototype.run = function () {\n        var _this = this;\n        var primaryButton;\n        if (this.useTrash) {\n            primaryButton = platform_1.isWindows ? nls.localize('deleteButtonLabelRecycleBin', \"&&Move to Recycle Bin\") : nls.localize({ key: 'deleteButtonLabelTrash', comment: ['&& denotes a mnemonic'] }, \"&&Move to Trash\");\n        }\n        else {\n            primaryButton = nls.localize({ key: 'deleteButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete\");\n        }\n        var distinctElements = resources.distinctParents(this.elements, function (e) { return e.resource; });\n        // Handle dirty\n        var confirmDirtyPromise = Promise.resolve(true);\n        var dirty = this.textFileService.getDirty().filter(function (d) { return distinctElements.some(function (e) { return resources.isEqualOrParent(d, e.resource, !platform_1.isLinux /* ignorecase */); }); });\n        if (dirty.length) {\n            var message = void 0;\n            if (distinctElements.length > 1) {\n                message = nls.localize('dirtyMessageFilesDelete', \"You are deleting files with unsaved changes. Do you want to continue?\");\n            }\n            else if (distinctElements[0].isDirectory) {\n                if (dirty.length === 1) {\n                    message = nls.localize('dirtyMessageFolderOneDelete', \"You are deleting a folder with unsaved changes in 1 file. Do you want to continue?\");\n                }\n                else {\n                    message = nls.localize('dirtyMessageFolderDelete', \"You are deleting a folder with unsaved changes in {0} files. Do you want to continue?\", dirty.length);\n                }\n            }\n            else {\n                message = nls.localize('dirtyMessageFileDelete', \"You are deleting a file with unsaved changes. Do you want to continue?\");\n            }\n            confirmDirtyPromise = this.dialogService.confirm({\n                message: message,\n                type: 'warning',\n                detail: nls.localize('dirtyWarning', \"Your changes will be lost if you don't save them.\"),\n                primaryButton: primaryButton\n            }).then(function (res) {\n                if (!res.confirmed) {\n                    return false;\n                }\n                _this.skipConfirm = true; // since we already asked for confirmation\n                return _this.textFileService.revertAll(dirty).then(function () { return true; });\n            });\n        }\n        // Check if file is dirty in editor and save it to avoid data loss\n        return confirmDirtyPromise.then(function (confirmed) {\n            if (!confirmed) {\n                return null;\n            }\n            var confirmDeletePromise;\n            // Check if we need to ask for confirmation at all\n            if (_this.skipConfirm || (_this.useTrash && _this.configurationService.getValue(BaseDeleteFileAction.CONFIRM_DELETE_SETTING_KEY) === false)) {\n                confirmDeletePromise = Promise.resolve({ confirmed: true });\n            }\n            // Confirm for moving to trash\n            else if (_this.useTrash) {\n                var message = _this.getMoveToTrashMessage(distinctElements);\n                confirmDeletePromise = _this.dialogService.confirm({\n                    message: message,\n                    detail: platform_1.isWindows ? nls.localize('undoBin', \"You can restore from the Recycle Bin.\") : nls.localize('undoTrash', \"You can restore from the Trash.\"),\n                    primaryButton: primaryButton,\n                    checkbox: {\n                        label: nls.localize('doNotAskAgain', \"Do not ask me again\")\n                    },\n                    type: 'question'\n                });\n            }\n            // Confirm for deleting permanently\n            else {\n                var message = _this.getDeleteMessage(distinctElements);\n                confirmDeletePromise = _this.dialogService.confirm({\n                    message: message,\n                    detail: nls.localize('irreversible', \"This action is irreversible!\"),\n                    primaryButton: primaryButton,\n                    type: 'warning'\n                });\n            }\n            return confirmDeletePromise.then(function (confirmation) {\n                // Check for confirmation checkbox\n                var updateConfirmSettingsPromise = Promise.resolve(undefined);\n                if (confirmation.confirmed && confirmation.checkboxChecked === true) {\n                    updateConfirmSettingsPromise = _this.configurationService.updateValue(BaseDeleteFileAction.CONFIRM_DELETE_SETTING_KEY, false, configuration_1.ConfigurationTarget.USER);\n                }\n                return updateConfirmSettingsPromise.then(function () {\n                    // Check for confirmation\n                    if (!confirmation.confirmed) {\n                        return Promise.resolve(null);\n                    }\n                    // Call function\n                    var servicePromise = Promise.all(distinctElements.map(function (e) { return _this.fileService.del(e.resource, { useTrash: _this.useTrash, recursive: true }); }))\n                        .then(undefined, function (error) {\n                        // Handle error to delete file(s) from a modal confirmation dialog\n                        var errorMessage;\n                        var detailMessage;\n                        var primaryButton;\n                        if (_this.useTrash) {\n                            errorMessage = platform_1.isWindows ? nls.localize('binFailed', \"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?\") : nls.localize('trashFailed', \"Failed to delete using the Trash. Do you want to permanently delete instead?\");\n                            detailMessage = nls.localize('irreversible', \"This action is irreversible!\");\n                            primaryButton = nls.localize({ key: 'deletePermanentlyButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete Permanently\");\n                        }\n                        else {\n                            errorMessage = errorMessage_1.toErrorMessage(error, false);\n                            primaryButton = nls.localize({ key: 'retryButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Retry\");\n                        }\n                        return _this.dialogService.confirm({\n                            message: errorMessage,\n                            detail: detailMessage,\n                            type: 'warning',\n                            primaryButton: primaryButton\n                        }).then(function (res) {\n                            if (res.confirmed) {\n                                if (_this.useTrash) {\n                                    _this.useTrash = false; // Delete Permanently\n                                }\n                                _this.skipConfirm = true;\n                                return _this.run();\n                            }\n                            return Promise.resolve(undefined);\n                        });\n                    });\n                    return servicePromise;\n                });\n            });\n        });\n    };\n    BaseDeleteFileAction.prototype.getMoveToTrashMessage = function (distinctElements) {\n        if (this.containsBothDirectoryAndFile(distinctElements)) {\n            return dialogs_1.getConfirmMessage(nls.localize('confirmMoveTrashMessageFilesAndDirectories', \"Are you sure you want to delete the following {0} files/directories and their contents?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n        }\n        if (distinctElements.length > 1) {\n            if (distinctElements[0].isDirectory) {\n                return dialogs_1.getConfirmMessage(nls.localize('confirmMoveTrashMessageMultipleDirectories', \"Are you sure you want to delete the following {0} directories and their contents?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n            }\n            return dialogs_1.getConfirmMessage(nls.localize('confirmMoveTrashMessageMultiple', \"Are you sure you want to delete the following {0} files?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n        }\n        if (distinctElements[0].isDirectory) {\n            return nls.localize('confirmMoveTrashMessageFolder', \"Are you sure you want to delete '{0}' and its contents?\", distinctElements[0].name);\n        }\n        return nls.localize('confirmMoveTrashMessageFile', \"Are you sure you want to delete '{0}'?\", distinctElements[0].name);\n    };\n    BaseDeleteFileAction.prototype.getDeleteMessage = function (distinctElements) {\n        if (this.containsBothDirectoryAndFile(distinctElements)) {\n            return dialogs_1.getConfirmMessage(nls.localize('confirmDeleteMessageFilesAndDirectories', \"Are you sure you want to permanently delete the following {0} files/directories and their contents?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n        }\n        if (distinctElements.length > 1) {\n            if (distinctElements[0].isDirectory) {\n                return dialogs_1.getConfirmMessage(nls.localize('confirmDeleteMessageMultipleDirectories', \"Are you sure you want to permanently delete the following {0} directories and their contents?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n            }\n            return dialogs_1.getConfirmMessage(nls.localize('confirmDeleteMessageMultiple', \"Are you sure you want to permanently delete the following {0} files?\", distinctElements.length), distinctElements.map(function (e) { return e.resource; }));\n        }\n        if (distinctElements[0].isDirectory) {\n            return nls.localize('confirmDeleteMessageFolder', \"Are you sure you want to permanently delete '{0}' and its contents?\", distinctElements[0].name);\n        }\n        return nls.localize('confirmDeleteMessageFile', \"Are you sure you want to permanently delete '{0}'?\", distinctElements[0].name);\n    };\n    BaseDeleteFileAction.prototype.containsBothDirectoryAndFile = function (distinctElements) {\n        var directories = distinctElements.filter(function (element) { return element.isDirectory; });\n        var files = distinctElements.filter(function (element) { return !element.isDirectory; });\n        return directories.length > 0 && files.length > 0;\n    };\n    BaseDeleteFileAction.CONFIRM_DELETE_SETTING_KEY = 'explorer.confirmDelete';\n    BaseDeleteFileAction = tslib_1.__decorate([\n        tslib_1.__param(2, files_2.IFileService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, dialogs_1.IDialogService),\n        tslib_1.__param(5, textfiles_1.ITextFileService),\n        tslib_1.__param(6, configuration_1.IConfigurationService)\n    ], BaseDeleteFileAction);\n    return BaseDeleteFileAction;\n}(BaseErrorReportingAction));\nvar pasteShouldMove = false;\n// Paste File/Folder\nvar PasteFileAction = /** @class */ (function (_super) {\n    tslib_1.__extends(PasteFileAction, _super);\n    function PasteFileAction(element, fileService, notificationService, editorService, explorerService) {\n        var _this = _super.call(this, PasteFileAction.ID, exports.PASTE_FILE_LABEL, notificationService) || this;\n        _this.element = element;\n        _this.fileService = fileService;\n        _this.editorService = editorService;\n        _this.explorerService = explorerService;\n        if (!_this.element) {\n            _this.element = _this.explorerService.roots[0];\n        }\n        return _this;\n    }\n    PasteFileAction.prototype.run = function (fileToPaste) {\n        var _this = this;\n        // Check if target is ancestor of pasted folder\n        if (this.element.resource.toString() !== fileToPaste.toString() && resources.isEqualOrParent(this.element.resource, fileToPaste, !platform_1.isLinux /* ignorecase */)) {\n            throw new Error(nls.localize('fileIsAncestor', \"File to paste is an ancestor of the destination folder\"));\n        }\n        return this.fileService.resolveFile(fileToPaste).then(function (fileToPasteStat) {\n            // Find target\n            var target;\n            if (_this.element.resource.toString() === fileToPaste.toString()) {\n                target = _this.element.parent;\n            }\n            else {\n                target = _this.element.isDirectory ? _this.element : _this.element.parent;\n            }\n            var targetFile = findValidPasteFileTarget(target, { resource: fileToPaste, isDirectory: fileToPasteStat.isDirectory, allowOverwirte: pasteShouldMove });\n            // Copy File\n            var promise = pasteShouldMove ? _this.fileService.moveFile(fileToPaste, targetFile) : _this.fileService.copyFile(fileToPaste, targetFile);\n            return promise.then(function (stat) {\n                if (pasteShouldMove) {\n                    // Cut is done. Make sure to clear cut state.\n                    _this.explorerService.setToCopy([], false);\n                }\n                if (!stat.isDirectory) {\n                    return _this.editorService.openEditor({ resource: stat.resource, options: { pinned: true, preserveFocus: true } })\n                        .then(types.withNullAsUndefined);\n                }\n                return undefined;\n            }, function (e) { return _this.onError(e); });\n        }, function (error) {\n            _this.onError(new Error(nls.localize('fileDeleted', \"File to paste was deleted or moved meanwhile\")));\n        });\n    };\n    PasteFileAction.ID = 'filesExplorer.paste';\n    PasteFileAction = tslib_1.__decorate([\n        tslib_1.__param(1, files_2.IFileService),\n        tslib_1.__param(2, notification_1.INotificationService),\n        tslib_1.__param(3, editorService_1.IEditorService),\n        tslib_1.__param(4, files_1.IExplorerService)\n    ], PasteFileAction);\n    return PasteFileAction;\n}(BaseErrorReportingAction));\nfunction findValidPasteFileTarget(targetFolder, fileToPaste) {\n    var name = resources.basenameOrAuthority(fileToPaste.resource);\n    var candidate = resources.joinPath(targetFolder.resource, name);\n    while (true && !fileToPaste.allowOverwirte) {\n        if (!targetFolder.root.find(candidate)) {\n            break;\n        }\n        name = incrementFileName(name, !!fileToPaste.isDirectory);\n        candidate = resources.joinPath(targetFolder.resource, name);\n    }\n    return candidate;\n}\nexports.findValidPasteFileTarget = findValidPasteFileTarget;\nfunction incrementFileName(name, isFolder) {\n    var separators = '[\\\\.\\\\-_]';\n    var maxNumber = uint_1.Constants.MAX_SAFE_SMALL_INTEGER;\n    // file.1.txt=>file.2.txt\n    var suffixFileRegex = RegExp('(.*' + separators + ')(\\\\d+)(\\\\..*)$');\n    if (!isFolder && name.match(suffixFileRegex)) {\n        return name.replace(suffixFileRegex, function (match, g1, g2, g3) {\n            var number = parseInt(g2);\n            return number < maxNumber\n                ? g1 + strings.pad(number + 1, g2.length) + g3\n                : strings.format('{0}{1}.1{2}', g1, g2, g3);\n        });\n    }\n    // 1.file.txt=>2.file.txt\n    var prefixFileRegex = RegExp('(\\\\d+)(' + separators + '.*)(\\\\..*)$');\n    if (!isFolder && name.match(prefixFileRegex)) {\n        return name.replace(prefixFileRegex, function (match, g1, g2, g3) {\n            var number = parseInt(g1);\n            return number < maxNumber\n                ? strings.pad(number + 1, g1.length) + g2 + g3\n                : strings.format('{0}{1}.1{2}', g1, g2, g3);\n        });\n    }\n    // 1.txt=>2.txt\n    var prefixFileNoNameRegex = RegExp('(\\\\d+)(\\\\..*)$');\n    if (!isFolder && name.match(prefixFileNoNameRegex)) {\n        return name.replace(prefixFileNoNameRegex, function (match, g1, g2) {\n            var number = parseInt(g1);\n            return number < maxNumber\n                ? strings.pad(number + 1, g1.length) + g2\n                : strings.format('{0}.1{1}', g1, g2);\n        });\n    }\n    // file.txt=>file.1.txt\n    var lastIndexOfDot = name.lastIndexOf('.');\n    if (!isFolder && lastIndexOfDot >= 0) {\n        return strings.format('{0}.1{1}', name.substr(0, lastIndexOfDot), name.substr(lastIndexOfDot));\n    }\n    // folder.1=>folder.2\n    if (isFolder && name.match(/(\\d+)$/)) {\n        return name.replace(/(\\d+)$/, function (match) {\n            var groups = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                groups[_i - 1] = arguments[_i];\n            }\n            var number = parseInt(groups[0]);\n            return number < maxNumber\n                ? strings.pad(number + 1, groups[0].length)\n                : strings.format('{0}.1', groups[0]);\n        });\n    }\n    // 1.folder=>2.folder\n    if (isFolder && name.match(/^(\\d+)/)) {\n        return name.replace(/^(\\d+)(.*)$/, function (match) {\n            var groups = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                groups[_i - 1] = arguments[_i];\n            }\n            var number = parseInt(groups[0]);\n            return number < maxNumber\n                ? strings.pad(number + 1, groups[0].length) + groups[1]\n                : strings.format('{0}{1}.1', groups[0], groups[1]);\n        });\n    }\n    // file/folder=>file.1/folder.1\n    return strings.format('{0}.1', name);\n}\nexports.incrementFileName = incrementFileName;\n// Global Compare with\nvar GlobalCompareResourcesAction = /** @class */ (function (_super) {\n    tslib_1.__extends(GlobalCompareResourcesAction, _super);\n    function GlobalCompareResourcesAction(id, label, quickOpenService, editorService, notificationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.quickOpenService = quickOpenService;\n        _this.editorService = editorService;\n        _this.notificationService = notificationService;\n        return _this;\n    }\n    GlobalCompareResourcesAction.prototype.run = function () {\n        var _this = this;\n        var activeInput = this.editorService.activeEditor;\n        var activeResource = activeInput ? activeInput.getResource() : undefined;\n        if (activeResource) {\n            // Compare with next editor that opens\n            var toDispose_1 = this.editorService.overrideOpenEditor(function (editor) {\n                // Only once!\n                toDispose_1.dispose();\n                // Open editor as diff\n                var resource = editor.getResource();\n                if (resource) {\n                    return {\n                        override: _this.editorService.openEditor({\n                            leftResource: activeResource,\n                            rightResource: resource\n                        }).then(function () { return null; })\n                    };\n                }\n                return undefined;\n            });\n            // Bring up quick open\n            this.quickOpenService.show('', { autoFocus: { autoFocusSecondEntry: true } }).then(function () {\n                toDispose_1.dispose(); // make sure to unbind if quick open is closing\n            });\n        }\n        else {\n            this.notificationService.info(nls.localize('openFileToCompare', \"Open a file first to compare it with another file.\"));\n        }\n        return Promise.resolve(true);\n    };\n    GlobalCompareResourcesAction.ID = 'workbench.files.action.compareFileWith';\n    GlobalCompareResourcesAction.LABEL = nls.localize('globalCompareFile', \"Compare Active File With...\");\n    GlobalCompareResourcesAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickOpen_1.IQuickOpenService),\n        tslib_1.__param(3, editorService_1.IEditorService),\n        tslib_1.__param(4, notification_1.INotificationService)\n    ], GlobalCompareResourcesAction);\n    return GlobalCompareResourcesAction;\n}(actions_1.Action));\nexports.GlobalCompareResourcesAction = GlobalCompareResourcesAction;\nvar ToggleAutoSaveAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleAutoSaveAction, _super);\n    function ToggleAutoSaveAction(id, label, configurationService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.configurationService = configurationService;\n        return _this;\n    }\n    ToggleAutoSaveAction.prototype.run = function () {\n        var setting = this.configurationService.inspect('files.autoSave');\n        var userAutoSaveConfig = setting.user;\n        if (types.isUndefinedOrNull(userAutoSaveConfig)) {\n            userAutoSaveConfig = setting.default; // use default if setting not defined\n        }\n        var newAutoSaveValue;\n        if ([files_2.AutoSaveConfiguration.AFTER_DELAY, files_2.AutoSaveConfiguration.ON_FOCUS_CHANGE, files_2.AutoSaveConfiguration.ON_WINDOW_CHANGE].some(function (s) { return s === userAutoSaveConfig; })) {\n            newAutoSaveValue = files_2.AutoSaveConfiguration.OFF;\n        }\n        else {\n            newAutoSaveValue = files_2.AutoSaveConfiguration.AFTER_DELAY;\n        }\n        return this.configurationService.updateValue('files.autoSave', newAutoSaveValue, configuration_1.ConfigurationTarget.USER);\n    };\n    ToggleAutoSaveAction.ID = 'workbench.action.toggleAutoSave';\n    ToggleAutoSaveAction.LABEL = nls.localize('toggleAutoSave', \"Toggle Auto Save\");\n    ToggleAutoSaveAction = tslib_1.__decorate([\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], ToggleAutoSaveAction);\n    return ToggleAutoSaveAction;\n}(actions_1.Action));\nexports.ToggleAutoSaveAction = ToggleAutoSaveAction;\nvar BaseSaveAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseSaveAllAction, _super);\n    function BaseSaveAllAction(id, label, textFileService, untitledEditorService, commandService, notificationService) {\n        var _this = _super.call(this, id, label, notificationService) || this;\n        _this.textFileService = textFileService;\n        _this.untitledEditorService = untitledEditorService;\n        _this.commandService = commandService;\n        _this.toDispose = [];\n        _this.lastIsDirty = _this.textFileService.isDirty();\n        _this.enabled = _this.lastIsDirty;\n        _this.registerListeners();\n        return _this;\n    }\n    BaseSaveAllAction.prototype.registerListeners = function () {\n        var _this = this;\n        // listen to files being changed locally\n        this.toDispose.push(this.textFileService.models.onModelsDirty(function (e) { return _this.updateEnablement(true); }));\n        this.toDispose.push(this.textFileService.models.onModelsSaved(function (e) { return _this.updateEnablement(false); }));\n        this.toDispose.push(this.textFileService.models.onModelsReverted(function (e) { return _this.updateEnablement(false); }));\n        this.toDispose.push(this.textFileService.models.onModelsSaveError(function (e) { return _this.updateEnablement(true); }));\n        if (this.includeUntitled()) {\n            this.toDispose.push(this.untitledEditorService.onDidChangeDirty(function (resource) { return _this.updateEnablement(_this.untitledEditorService.isDirty(resource)); }));\n        }\n    };\n    BaseSaveAllAction.prototype.updateEnablement = function (isDirty) {\n        if (this.lastIsDirty !== isDirty) {\n            this.enabled = this.textFileService.isDirty();\n            this.lastIsDirty = this.enabled;\n        }\n    };\n    BaseSaveAllAction.prototype.run = function (context) {\n        var _this = this;\n        return this.doRun(context).then(function () { return true; }, function (error) {\n            _this.onError(error);\n            return false;\n        });\n    };\n    BaseSaveAllAction.prototype.dispose = function () {\n        this.toDispose = lifecycle_1.dispose(this.toDispose);\n        _super.prototype.dispose.call(this);\n    };\n    BaseSaveAllAction = tslib_1.__decorate([\n        tslib_1.__param(2, textfiles_1.ITextFileService),\n        tslib_1.__param(3, untitledEditorService_1.IUntitledEditorService),\n        tslib_1.__param(4, commands_1.ICommandService),\n        tslib_1.__param(5, notification_1.INotificationService)\n    ], BaseSaveAllAction);\n    return BaseSaveAllAction;\n}(BaseErrorReportingAction));\nexports.BaseSaveAllAction = BaseSaveAllAction;\nvar SaveAllAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SaveAllAction, _super);\n    function SaveAllAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SaveAllAction.prototype, \"class\", {\n        get: function () {\n            return 'explorer-action save-all';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SaveAllAction.prototype.doRun = function (context) {\n        return this.commandService.executeCommand(fileCommands_1.SAVE_ALL_COMMAND_ID);\n    };\n    SaveAllAction.prototype.includeUntitled = function () {\n        return true;\n    };\n    SaveAllAction.ID = 'workbench.action.files.saveAll';\n    SaveAllAction.LABEL = fileCommands_1.SAVE_ALL_LABEL;\n    return SaveAllAction;\n}(BaseSaveAllAction));\nexports.SaveAllAction = SaveAllAction;\nvar SaveAllInGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SaveAllInGroupAction, _super);\n    function SaveAllInGroupAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SaveAllInGroupAction.prototype, \"class\", {\n        get: function () {\n            return 'explorer-action save-all';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SaveAllInGroupAction.prototype.doRun = function (context) {\n        return this.commandService.executeCommand(fileCommands_1.SAVE_ALL_IN_GROUP_COMMAND_ID, {}, context);\n    };\n    SaveAllInGroupAction.prototype.includeUntitled = function () {\n        return true;\n    };\n    SaveAllInGroupAction.ID = 'workbench.files.action.saveAllInGroup';\n    SaveAllInGroupAction.LABEL = nls.localize('saveAllInGroup', \"Save All in Group\");\n    return SaveAllInGroupAction;\n}(BaseSaveAllAction));\nexports.SaveAllInGroupAction = SaveAllInGroupAction;\nvar CloseGroupAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CloseGroupAction, _super);\n    function CloseGroupAction(id, label, commandService) {\n        var _this = _super.call(this, id, label, 'action-close-all-files') || this;\n        _this.commandService = commandService;\n        return _this;\n    }\n    CloseGroupAction.prototype.run = function (context) {\n        return this.commandService.executeCommand(editorCommands_1.CLOSE_EDITORS_AND_GROUP_COMMAND_ID, {}, context);\n    };\n    CloseGroupAction.ID = 'workbench.files.action.closeGroup';\n    CloseGroupAction.LABEL = nls.localize('closeGroup', \"Close Group\");\n    CloseGroupAction = tslib_1.__decorate([\n        tslib_1.__param(2, commands_1.ICommandService)\n    ], CloseGroupAction);\n    return CloseGroupAction;\n}(actions_1.Action));\nexports.CloseGroupAction = CloseGroupAction;\nvar FocusFilesExplorer = /** @class */ (function (_super) {\n    tslib_1.__extends(FocusFilesExplorer, _super);\n    function FocusFilesExplorer(id, label, viewletService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    FocusFilesExplorer.prototype.run = function () {\n        return this.viewletService.openViewlet(files_1.VIEWLET_ID, true);\n    };\n    FocusFilesExplorer.ID = 'workbench.files.action.focusFilesExplorer';\n    FocusFilesExplorer.LABEL = nls.localize('focusFilesExplorer', \"Focus on Files Explorer\");\n    FocusFilesExplorer = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService)\n    ], FocusFilesExplorer);\n    return FocusFilesExplorer;\n}(actions_1.Action));\nexports.FocusFilesExplorer = FocusFilesExplorer;\nvar ShowActiveFileInExplorer = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowActiveFileInExplorer, _super);\n    function ShowActiveFileInExplorer(id, label, editorService, notificationService, commandService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        _this.notificationService = notificationService;\n        _this.commandService = commandService;\n        return _this;\n    }\n    ShowActiveFileInExplorer.prototype.run = function () {\n        var resource = editor_1.toResource(this.editorService.activeEditor, { supportSideBySide: true });\n        if (resource) {\n            this.commandService.executeCommand(fileCommands_1.REVEAL_IN_EXPLORER_COMMAND_ID, resource);\n        }\n        else {\n            this.notificationService.info(nls.localize('openFileToShow', \"Open a file first to show it in the explorer\"));\n        }\n        return Promise.resolve(true);\n    };\n    ShowActiveFileInExplorer.ID = 'workbench.files.action.showActiveFileInExplorer';\n    ShowActiveFileInExplorer.LABEL = nls.localize('showInExplorer', \"Reveal Active File in Side Bar\");\n    ShowActiveFileInExplorer = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, notification_1.INotificationService),\n        tslib_1.__param(4, commands_1.ICommandService)\n    ], ShowActiveFileInExplorer);\n    return ShowActiveFileInExplorer;\n}(actions_1.Action));\nexports.ShowActiveFileInExplorer = ShowActiveFileInExplorer;\nvar CollapseExplorerView = /** @class */ (function (_super) {\n    tslib_1.__extends(CollapseExplorerView, _super);\n    function CollapseExplorerView(id, label, viewletService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.viewletService = viewletService;\n        return _this;\n    }\n    CollapseExplorerView.prototype.run = function () {\n        return this.viewletService.openViewlet(files_1.VIEWLET_ID).then(function (viewlet) {\n            var explorerView = viewlet.getExplorerView();\n            if (explorerView) {\n                explorerView.collapseAll();\n            }\n        });\n    };\n    CollapseExplorerView.ID = 'workbench.files.action.collapseExplorerFolders';\n    CollapseExplorerView.LABEL = nls.localize('collapseExplorerFolders', \"Collapse Folders in Explorer\");\n    CollapseExplorerView = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService)\n    ], CollapseExplorerView);\n    return CollapseExplorerView;\n}(actions_1.Action));\nexports.CollapseExplorerView = CollapseExplorerView;\nvar RefreshExplorerView = /** @class */ (function (_super) {\n    tslib_1.__extends(RefreshExplorerView, _super);\n    function RefreshExplorerView(id, label, viewletService, explorerService) {\n        var _this = _super.call(this, id, label, 'explorer-action refresh-explorer') || this;\n        _this.viewletService = viewletService;\n        _this.explorerService = explorerService;\n        return _this;\n    }\n    RefreshExplorerView.prototype.run = function () {\n        var _this = this;\n        return this.viewletService.openViewlet(files_1.VIEWLET_ID).then(function () {\n            return _this.explorerService.refresh();\n        });\n    };\n    RefreshExplorerView.ID = 'workbench.files.action.refreshFilesExplorer';\n    RefreshExplorerView.LABEL = nls.localize('refreshExplorer', \"Refresh Explorer\");\n    RefreshExplorerView = tslib_1.__decorate([\n        tslib_1.__param(2, viewlet_1.IViewletService),\n        tslib_1.__param(3, files_1.IExplorerService)\n    ], RefreshExplorerView);\n    return RefreshExplorerView;\n}(actions_1.Action));\nexports.RefreshExplorerView = RefreshExplorerView;\nvar ShowOpenedFileInNewWindow = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowOpenedFileInNewWindow, _super);\n    function ShowOpenedFileInNewWindow(id, label, editorService, windowService, notificationService, fileService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        _this.windowService = windowService;\n        _this.notificationService = notificationService;\n        _this.fileService = fileService;\n        return _this;\n    }\n    ShowOpenedFileInNewWindow.prototype.run = function () {\n        var fileResource = editor_1.toResource(this.editorService.activeEditor, { supportSideBySide: true });\n        if (fileResource) {\n            if (this.fileService.canHandleResource(fileResource)) {\n                this.windowService.openWindow([{ uri: fileResource, typeHint: 'file' }], { forceNewWindow: true, forceOpenWorkspaceAsFile: true });\n            }\n            else {\n                this.notificationService.info(nls.localize('openFileToShowInNewWindow.unsupportedschema', \"The active editor must contain an openable resource.\"));\n            }\n        }\n        else {\n            this.notificationService.info(nls.localize('openFileToShowInNewWindow.nofile', \"Open a file first to open in new window\"));\n        }\n        return Promise.resolve(true);\n    };\n    ShowOpenedFileInNewWindow.ID = 'workbench.action.files.showOpenedFileInNewWindow';\n    ShowOpenedFileInNewWindow.LABEL = nls.localize('openFileInNewWindow', \"Open Active File in New Window\");\n    ShowOpenedFileInNewWindow = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, windows_1.IWindowService),\n        tslib_1.__param(4, notification_1.INotificationService),\n        tslib_1.__param(5, files_2.IFileService)\n    ], ShowOpenedFileInNewWindow);\n    return ShowOpenedFileInNewWindow;\n}(actions_1.Action));\nexports.ShowOpenedFileInNewWindow = ShowOpenedFileInNewWindow;\nfunction validateFileName(item, name) {\n    // Produce a well formed file name\n    name = getWellFormedFileName(name);\n    // Name not provided\n    if (!name || name.length === 0 || /^\\s+$/.test(name)) {\n        return nls.localize('emptyFileNameError', \"A file or folder name must be provided.\");\n    }\n    // Relative paths only\n    if (name[0] === '/' || name[0] === '\\\\') {\n        return nls.localize('fileNameStartsWithSlashError', \"A file or folder name cannot start with a slash.\");\n    }\n    var names = arrays_1.coalesce(name.split(/[\\\\/]/));\n    var parent = item.parent;\n    if (name !== item.name) {\n        // Do not allow to overwrite existing file\n        var child = parent && parent.getChild(name);\n        if (child && child !== item) {\n            return nls.localize('fileNameExistsError', \"A file or folder **{0}** already exists at this location. Please choose a different name.\", name);\n        }\n    }\n    // Invalid File name\n    if (names.some(function (folderName) { return !extpath.isValidBasename(folderName); })) {\n        return nls.localize('invalidFileNameError', \"The name **{0}** is not valid as a file or folder name. Please choose a different name.\", trimLongName(name));\n    }\n    // Max length restriction (on Windows)\n    if (platform_1.isWindows) {\n        var fullPathLength = item.resource.fsPath.length + 1 /* path segment */;\n        if (fullPathLength > 255) {\n            return nls.localize('filePathTooLongError', \"The name **{0}** results in a path that is too long. Please choose a shorter name.\", trimLongName(name));\n        }\n    }\n    return null;\n}\nexports.validateFileName = validateFileName;\nfunction trimLongName(name) {\n    if (name && name.length > 255) {\n        return name.substr(0, 255) + \"...\";\n    }\n    return name;\n}\nfunction getWellFormedFileName(filename) {\n    if (!filename) {\n        return filename;\n    }\n    // Trim tabs\n    filename = strings.trim(filename, '\\t');\n    // Remove trailing dots, slashes, and spaces\n    filename = strings.rtrim(filename, '.');\n    filename = strings.rtrim(filename, '/');\n    filename = strings.rtrim(filename, '\\\\');\n    return filename;\n}\nexports.getWellFormedFileName = getWellFormedFileName;\nvar CompareWithClipboardAction = /** @class */ (function (_super) {\n    tslib_1.__extends(CompareWithClipboardAction, _super);\n    function CompareWithClipboardAction(id, label, editorService, instantiationService, textModelService, fileService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.editorService = editorService;\n        _this.instantiationService = instantiationService;\n        _this.textModelService = textModelService;\n        _this.fileService = fileService;\n        _this.enabled = true;\n        return _this;\n    }\n    CompareWithClipboardAction.prototype.run = function () {\n        var _this = this;\n        var resource = editor_1.toResource(this.editorService.activeEditor, { supportSideBySide: true });\n        if (resource && (this.fileService.canHandleResource(resource) || resource.scheme === network_1.Schemas.untitled)) {\n            if (!this.registrationDisposal) {\n                var provider = this.instantiationService.createInstance(ClipboardContentProvider);\n                this.registrationDisposal = this.textModelService.registerTextModelContentProvider(CompareWithClipboardAction.SCHEME, provider);\n            }\n            var name = resources.basename(resource);\n            var editorLabel = nls.localize('clipboardComparisonLabel', \"Clipboard ↔ {0}\", name);\n            return this.editorService.openEditor({ leftResource: resource.with({ scheme: CompareWithClipboardAction.SCHEME }), rightResource: resource, label: editorLabel }).finally(function () {\n                _this.registrationDisposal = lifecycle_1.dispose(_this.registrationDisposal);\n            });\n        }\n        return Promise.resolve(true);\n    };\n    CompareWithClipboardAction.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.registrationDisposal = lifecycle_1.dispose(this.registrationDisposal);\n    };\n    CompareWithClipboardAction.ID = 'workbench.files.action.compareWithClipboard';\n    CompareWithClipboardAction.LABEL = nls.localize('compareWithClipboard', \"Compare Active File with Clipboard\");\n    CompareWithClipboardAction.SCHEME = 'clipboardCompare';\n    CompareWithClipboardAction = tslib_1.__decorate([\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, resolverService_1.ITextModelService),\n        tslib_1.__param(5, files_2.IFileService)\n    ], CompareWithClipboardAction);\n    return CompareWithClipboardAction;\n}(actions_1.Action));\nexports.CompareWithClipboardAction = CompareWithClipboardAction;\nvar ClipboardContentProvider = /** @class */ (function () {\n    function ClipboardContentProvider(clipboardService, modeService, modelService) {\n        this.clipboardService = clipboardService;\n        this.modeService = modeService;\n        this.modelService = modelService;\n    }\n    ClipboardContentProvider.prototype.provideTextContent = function (resource) {\n        var model = this.modelService.createModel(this.clipboardService.readText(), this.modeService.create('text/plain'), resource);\n        return Promise.resolve(model);\n    };\n    ClipboardContentProvider = tslib_1.__decorate([\n        tslib_1.__param(0, clipboardService_1.IClipboardService),\n        tslib_1.__param(1, modeService_1.IModeService),\n        tslib_1.__param(2, modelService_1.IModelService)\n    ], ClipboardContentProvider);\n    return ClipboardContentProvider;\n}());\nfunction getContext(listWidget) {\n    // These commands can only be triggered when explorer viewlet is visible so get it using the active viewlet\n    var tree = listWidget;\n    var focus = tree.getFocus();\n    var stat = focus.length ? focus[0] : undefined;\n    var selection = tree.getSelection();\n    // Only respect the selection if user clicked inside it (focus belongs to it)\n    return { stat: stat, selection: selection && typeof stat !== 'undefined' && selection.indexOf(stat) >= 0 ? selection : [] };\n}\n// TODO@isidor these commands are calling into actions due to the complex inheritance action structure.\n// It should be the other way around, that actions call into commands.\nfunction openExplorerAndRunAction(accessor, constructor) {\n    var instantiationService = accessor.get(instantiation_1.IInstantiationService);\n    var listService = accessor.get(listService_1.IListService);\n    var viewletService = accessor.get(viewlet_1.IViewletService);\n    var activeViewlet = viewletService.getActiveViewlet();\n    var explorerPromise = Promise.resolve(activeViewlet);\n    if (!activeViewlet || activeViewlet.getId() !== files_1.VIEWLET_ID) {\n        explorerPromise = viewletService.openViewlet(files_1.VIEWLET_ID, true);\n    }\n    return explorerPromise.then(function (explorer) {\n        var explorerView = explorer.getExplorerView();\n        if (explorerView && explorerView.isBodyVisible() && listService.lastFocusedList) {\n            explorerView.focus();\n            var stat_1 = getContext(listService.lastFocusedList).stat;\n            var action = instantiationService.createInstance(constructor, function () { return stat_1; });\n            return action.run();\n        }\n        return undefined;\n    });\n}\ncommands_1.CommandsRegistry.registerCommand({\n    id: exports.NEW_FILE_COMMAND_ID,\n    handler: function (accessor) {\n        return openExplorerAndRunAction(accessor, NewFileAction);\n    }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: exports.NEW_FOLDER_COMMAND_ID,\n    handler: function (accessor) {\n        return openExplorerAndRunAction(accessor, NewFolderAction);\n    }\n});\nexports.renameHandler = function (accessor) {\n    var listService = accessor.get(listService_1.IListService);\n    var explorerService = accessor.get(files_1.IExplorerService);\n    var textFileService = accessor.get(textfiles_1.ITextFileService);\n    if (!listService.lastFocusedList) {\n        return;\n    }\n    var stat = getContext(listService.lastFocusedList).stat;\n    if (!stat) {\n        return;\n    }\n    explorerService.setEditable(stat, {\n        validationMessage: function (value) { return validateFileName(stat, value); },\n        onFinish: function (value, success) {\n            if (success) {\n                var parentResource = stat.parent.resource;\n                var targetResource = resources.joinPath(parentResource, value);\n                textFileService.move(stat.resource, targetResource).then(function () { return refreshIfSeparator(value, explorerService); }, errors_1.onUnexpectedError);\n            }\n            explorerService.setEditable(stat, null);\n        }\n    });\n};\nexports.moveFileToTrashHandler = function (accessor) {\n    var instantiationService = accessor.get(instantiation_1.IInstantiationService);\n    var listService = accessor.get(listService_1.IListService);\n    if (!listService.lastFocusedList) {\n        return Promise.resolve();\n    }\n    var explorerContext = getContext(listService.lastFocusedList);\n    var stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n    var moveFileToTrashAction = instantiationService.createInstance(BaseDeleteFileAction, stats, true);\n    return moveFileToTrashAction.run();\n};\nexports.deleteFileHandler = function (accessor) {\n    var instantiationService = accessor.get(instantiation_1.IInstantiationService);\n    var listService = accessor.get(listService_1.IListService);\n    if (!listService.lastFocusedList) {\n        return Promise.resolve();\n    }\n    var explorerContext = getContext(listService.lastFocusedList);\n    var stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n    var deleteFileAction = instantiationService.createInstance(BaseDeleteFileAction, stats, false);\n    return deleteFileAction.run();\n};\nexports.copyFileHandler = function (accessor) {\n    var listService = accessor.get(listService_1.IListService);\n    if (!listService.lastFocusedList) {\n        return;\n    }\n    var explorerContext = getContext(listService.lastFocusedList);\n    var explorerService = accessor.get(files_1.IExplorerService);\n    if (explorerContext.stat) {\n        var stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n        explorerService.setToCopy(stats, false);\n        pasteShouldMove = false;\n    }\n};\nexports.cutFileHandler = function (accessor) {\n    var listService = accessor.get(listService_1.IListService);\n    if (!listService.lastFocusedList) {\n        return;\n    }\n    var explorerContext = getContext(listService.lastFocusedList);\n    var explorerService = accessor.get(files_1.IExplorerService);\n    if (explorerContext.stat) {\n        var stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n        explorerService.setToCopy(stats, true);\n        pasteShouldMove = true;\n    }\n};\nexports.pasteFileHandler = function (accessor) {\n    var instantiationService = accessor.get(instantiation_1.IInstantiationService);\n    var listService = accessor.get(listService_1.IListService);\n    var clipboardService = accessor.get(clipboardService_1.IClipboardService);\n    if (!listService.lastFocusedList) {\n        return Promise.resolve();\n    }\n    var explorerContext = getContext(listService.lastFocusedList);\n    return async_1.sequence(resources.distinctParents(clipboardService.readResources(), function (r) { return r; }).map(function (toCopy) {\n        var pasteFileAction = instantiationService.createInstance(PasteFileAction, explorerContext.stat);\n        return function () { return pasteFileAction.run(toCopy); };\n    }));\n};\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/fileActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/files/browser/fileActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/fileactions';\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as resources from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport * as strings from 'vs/base/common/strings';\nimport { Action } from 'vs/base/common/actions';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { VIEWLET_ID, IExplorerService } from 'vs/workbench/contrib/files/common/files';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IFileService, AutoSaveConfiguration } from 'vs/platform/files/common/files';\nimport { toResource, IUntitledResourceInput, ITextEditor } from 'vs/workbench/common/editor';\nimport { ExplorerViewlet } from 'vs/workbench/contrib/files/browser/explorerViewlet';\nimport { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport { IQuickOpenService } from 'vs/platform/quickOpen/common/quickOpen';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { IInstantiationService, ServicesAccessor, IConstructorSignature1 } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IWindowService } from 'vs/platform/windows/common/windows';\nimport { REVEAL_IN_EXPLORER_COMMAND_ID, SAVE_ALL_COMMAND_ID, SAVE_ALL_LABEL, SAVE_ALL_IN_GROUP_COMMAND_ID } from 'vs/workbench/contrib/files/browser/fileCommands';\nimport { ITextModelService, ITextModelContentProvider } from 'vs/editor/common/services/resolverService';\nimport { IConfigurationService, ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\nimport { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { ICommandService, CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IListService, ListWidget } from 'vs/platform/list/browser/listService';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Schemas } from 'vs/base/common/network';\nimport { IDialogService, IConfirmationResult, getConfirmMessage } from 'vs/platform/dialogs/common/dialogs';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Constants } from 'vs/editor/common/core/uint';\nimport { CLOSE_EDITORS_AND_GROUP_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { AsyncDataTree } from 'vs/base/browser/ui/tree/asyncDataTree';\nimport { ExplorerItem, NewExplorerItem } from 'vs/workbench/contrib/files/common/explorerModel';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { sequence } from 'vs/base/common/async';\n\nexport const NEW_FILE_COMMAND_ID = 'explorer.newFile';\nexport const NEW_FILE_LABEL = nls.localize('newFile', \"New File\");\n\nexport const NEW_FOLDER_COMMAND_ID = 'explorer.newFolder';\nexport const NEW_FOLDER_LABEL = nls.localize('newFolder', \"New Folder\");\n\nexport const TRIGGER_RENAME_LABEL = nls.localize('rename', \"Rename\");\n\nexport const MOVE_FILE_TO_TRASH_LABEL = nls.localize('delete', \"Delete\");\n\nexport const COPY_FILE_LABEL = nls.localize('copyFile', \"Copy\");\n\nexport const PASTE_FILE_LABEL = nls.localize('pasteFile', \"Paste\");\n\nexport const FileCopiedContext = new RawContextKey<boolean>('fileCopied', false);\n\nexport class BaseErrorReportingAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\tprivate _notificationService: INotificationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic get notificationService() {\n\t\treturn this._notificationService;\n\t}\n\n\tprotected onError(error: any): void {\n\t\tif (error.message === 'string') {\n\t\t\terror = error.message;\n\t\t}\n\n\t\tthis._notificationService.error(toErrorMessage(error, false));\n\t}\n\n\tprotected onErrorWithRetry(error: any, retry: () => Promise<any>): void {\n\t\tthis._notificationService.prompt(Severity.Error, toErrorMessage(error, false),\n\t\t\t[{\n\t\t\t\tlabel: nls.localize('retry', \"Retry\"),\n\t\t\t\trun: () => retry()\n\t\t\t}]\n\t\t);\n\t}\n}\n\nfunction refreshIfSeparator(value: string, explorerService: IExplorerService): void {\n\tif (value && ((value.indexOf('/') >= 0) || (value.indexOf('\\\\') >= 0))) {\n\t\t// New input contains separator, multiple resources will get created workaround for #68204\n\t\texplorerService.refresh();\n\t}\n}\n\n/* New File */\nexport class NewFileAction extends BaseErrorReportingAction {\n\tstatic readonly ID = 'workbench.files.action.createFileFromExplorer';\n\tstatic readonly LABEL = nls.localize('createNewFile', \"New File\");\n\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate getElement: () => ExplorerItem,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IExplorerService private explorerService: IExplorerService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@IEditorService private editorService: IEditorService\n\t) {\n\t\tsuper('explorer.newFile', NEW_FILE_LABEL, notificationService);\n\t\tthis.class = 'explorer-action new-file';\n\t\tthis.toDispose.push(this.explorerService.onDidChangeEditable(e => {\n\t\t\tconst elementIsBeingEdited = this.explorerService.isEditable(e);\n\t\t\tthis.enabled = !elementIsBeingEdited;\n\t\t}));\n\t}\n\n\trun(): Promise<any> {\n\t\tlet folder: ExplorerItem;\n\t\tconst element = this.getElement();\n\t\tif (element) {\n\t\t\tfolder = element.isDirectory ? element : element.parent!;\n\t\t} else {\n\t\t\tfolder = this.explorerService.roots[0];\n\t\t}\n\n\t\tif (folder.isReadonly) {\n\t\t\treturn Promise.reject(new Error('Parent folder is readonly.'));\n\t\t}\n\n\t\tconst stat = new NewExplorerItem(folder, false);\n\t\treturn folder.fetchChildren(this.fileService, this.explorerService).then(() => {\n\t\t\tfolder.addChild(stat);\n\n\t\t\tconst onSuccess = (value: string) => {\n\t\t\t\treturn this.fileService.createFile(resources.joinPath(folder.resource, value)).then(stat => {\n\t\t\t\t\trefreshIfSeparator(value, this.explorerService);\n\t\t\t\t\treturn this.editorService.openEditor({ resource: stat.resource, options: { pinned: true } });\n\t\t\t\t}, (error) => {\n\t\t\t\t\tthis.onErrorWithRetry(error, () => onSuccess(value));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis.explorerService.setEditable(stat, {\n\t\t\t\tvalidationMessage: value => validateFileName(stat, value),\n\t\t\t\tonFinish: (value, success) => {\n\t\t\t\t\tfolder.removeChild(stat);\n\t\t\t\t\tthis.explorerService.setEditable(stat, null);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tonSuccess(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.explorerService.select(folder.resource).then(undefined, onUnexpectedError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tdispose(this.toDispose);\n\t}\n}\n\n/* New Folder */\nexport class NewFolderAction extends BaseErrorReportingAction {\n\tstatic readonly ID = 'workbench.files.action.createFolderFromExplorer';\n\tstatic readonly LABEL = nls.localize('createNewFolder', \"New Folder\");\n\n\tprivate toDispose: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate getElement: () => ExplorerItem,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@IExplorerService private explorerService: IExplorerService\n\t) {\n\t\tsuper('explorer.newFolder', NEW_FOLDER_LABEL, notificationService);\n\t\tthis.class = 'explorer-action new-folder';\n\t\tthis.toDispose.push(this.explorerService.onDidChangeEditable(e => {\n\t\t\tconst elementIsBeingEdited = this.explorerService.isEditable(e);\n\t\t\tthis.enabled = !elementIsBeingEdited;\n\t\t}));\n\t}\n\n\trun(): Promise<any> {\n\t\tlet folder: ExplorerItem;\n\t\tconst element = this.getElement();\n\t\tif (element) {\n\t\t\tfolder = element.isDirectory ? element : element.parent!;\n\t\t} else {\n\t\t\tfolder = this.explorerService.roots[0];\n\t\t}\n\n\t\tif (folder.isReadonly) {\n\t\t\treturn Promise.reject(new Error('Parent folder is readonly.'));\n\t\t}\n\n\t\tconst stat = new NewExplorerItem(folder, true);\n\t\treturn folder.fetchChildren(this.fileService, this.explorerService).then(() => {\n\t\t\tfolder.addChild(stat);\n\n\t\t\tconst onSuccess = (value: string) => {\n\t\t\t\treturn this.fileService.createFolder(resources.joinPath(folder.resource, value)).then(stat => {\n\t\t\t\t\trefreshIfSeparator(value, this.explorerService);\n\t\t\t\t\treturn this.explorerService.select(stat.resource, true);\n\t\t\t\t}, (error) => {\n\t\t\t\t\tthis.onErrorWithRetry(error, () => onSuccess(value));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis.explorerService.setEditable(stat, {\n\t\t\t\tvalidationMessage: value => validateFileName(stat, value),\n\t\t\t\tonFinish: (value, success) => {\n\t\t\t\t\tfolder.removeChild(stat);\n\t\t\t\t\tthis.explorerService.setEditable(stat, null);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tonSuccess(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.explorerService.select(folder.resource).then(undefined, onUnexpectedError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tdispose(this.toDispose);\n\t}\n}\n\n/* Create new file from anywhere: Open untitled */\nexport class GlobalNewUntitledFileAction extends Action {\n\tpublic static readonly ID = 'workbench.action.files.newUntitledFile';\n\tpublic static readonly LABEL = nls.localize('newUntitledFile', \"New Untitled File\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\treturn this.editorService.openEditor({ options: { pinned: true } } as IUntitledResourceInput); // untitled are always pinned\n\t}\n}\n\nclass BaseDeleteFileAction extends BaseErrorReportingAction {\n\n\tprivate static readonly CONFIRM_DELETE_SETTING_KEY = 'explorer.confirmDelete';\n\n\tprivate skipConfirm: boolean;\n\n\tconstructor(\n\t\tprivate elements: ExplorerItem[],\n\t\tprivate useTrash: boolean,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper('moveFileToTrash', MOVE_FILE_TO_TRASH_LABEL, notificationService);\n\n\t\tthis.useTrash = useTrash && elements.every(e => !extpath.isUNC(e.resource.fsPath)); // on UNC shares there is no trash\n\t\tthis.enabled = this.elements && this.elements.every(e => !e.isReadonly);\n\t}\n\n\tpublic run(): Promise<any> {\n\n\t\tlet primaryButton: string;\n\t\tif (this.useTrash) {\n\t\t\tprimaryButton = isWindows ? nls.localize('deleteButtonLabelRecycleBin', \"&&Move to Recycle Bin\") : nls.localize({ key: 'deleteButtonLabelTrash', comment: ['&& denotes a mnemonic'] }, \"&&Move to Trash\");\n\t\t} else {\n\t\t\tprimaryButton = nls.localize({ key: 'deleteButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete\");\n\t\t}\n\n\t\tconst distinctElements = resources.distinctParents(this.elements, e => e.resource);\n\n\t\t// Handle dirty\n\t\tlet confirmDirtyPromise: Promise<boolean> = Promise.resolve(true);\n\t\tconst dirty = this.textFileService.getDirty().filter(d => distinctElements.some(e => resources.isEqualOrParent(d, e.resource, !isLinux /* ignorecase */)));\n\t\tif (dirty.length) {\n\t\t\tlet message: string;\n\t\t\tif (distinctElements.length > 1) {\n\t\t\t\tmessage = nls.localize('dirtyMessageFilesDelete', \"You are deleting files with unsaved changes. Do you want to continue?\");\n\t\t\t} else if (distinctElements[0].isDirectory) {\n\t\t\t\tif (dirty.length === 1) {\n\t\t\t\t\tmessage = nls.localize('dirtyMessageFolderOneDelete', \"You are deleting a folder with unsaved changes in 1 file. Do you want to continue?\");\n\t\t\t\t} else {\n\t\t\t\t\tmessage = nls.localize('dirtyMessageFolderDelete', \"You are deleting a folder with unsaved changes in {0} files. Do you want to continue?\", dirty.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmessage = nls.localize('dirtyMessageFileDelete', \"You are deleting a file with unsaved changes. Do you want to continue?\");\n\t\t\t}\n\n\t\t\tconfirmDirtyPromise = this.dialogService.confirm({\n\t\t\t\tmessage,\n\t\t\t\ttype: 'warning',\n\t\t\t\tdetail: nls.localize('dirtyWarning', \"Your changes will be lost if you don't save them.\"),\n\t\t\t\tprimaryButton\n\t\t\t}).then(res => {\n\t\t\t\tif (!res.confirmed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.skipConfirm = true; // since we already asked for confirmation\n\t\t\t\treturn this.textFileService.revertAll(dirty).then(() => true);\n\t\t\t});\n\t\t}\n\n\t\t// Check if file is dirty in editor and save it to avoid data loss\n\t\treturn confirmDirtyPromise.then(confirmed => {\n\t\t\tif (!confirmed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet confirmDeletePromise: Promise<IConfirmationResult>;\n\n\t\t\t// Check if we need to ask for confirmation at all\n\t\t\tif (this.skipConfirm || (this.useTrash && this.configurationService.getValue<boolean>(BaseDeleteFileAction.CONFIRM_DELETE_SETTING_KEY) === false)) {\n\t\t\t\tconfirmDeletePromise = Promise.resolve({ confirmed: true } as IConfirmationResult);\n\t\t\t}\n\n\t\t\t// Confirm for moving to trash\n\t\t\telse if (this.useTrash) {\n\t\t\t\tconst message = this.getMoveToTrashMessage(distinctElements);\n\n\t\t\t\tconfirmDeletePromise = this.dialogService.confirm({\n\t\t\t\t\tmessage,\n\t\t\t\t\tdetail: isWindows ? nls.localize('undoBin', \"You can restore from the Recycle Bin.\") : nls.localize('undoTrash', \"You can restore from the Trash.\"),\n\t\t\t\t\tprimaryButton,\n\t\t\t\t\tcheckbox: {\n\t\t\t\t\t\tlabel: nls.localize('doNotAskAgain', \"Do not ask me again\")\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'question'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Confirm for deleting permanently\n\t\t\telse {\n\t\t\t\tconst message = this.getDeleteMessage(distinctElements);\n\t\t\t\tconfirmDeletePromise = this.dialogService.confirm({\n\t\t\t\t\tmessage,\n\t\t\t\t\tdetail: nls.localize('irreversible', \"This action is irreversible!\"),\n\t\t\t\t\tprimaryButton,\n\t\t\t\t\ttype: 'warning'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn confirmDeletePromise.then(confirmation => {\n\n\t\t\t\t// Check for confirmation checkbox\n\t\t\t\tlet updateConfirmSettingsPromise: Promise<void> = Promise.resolve(undefined);\n\t\t\t\tif (confirmation.confirmed && confirmation.checkboxChecked === true) {\n\t\t\t\t\tupdateConfirmSettingsPromise = this.configurationService.updateValue(BaseDeleteFileAction.CONFIRM_DELETE_SETTING_KEY, false, ConfigurationTarget.USER);\n\t\t\t\t}\n\n\t\t\t\treturn updateConfirmSettingsPromise.then(() => {\n\n\t\t\t\t\t// Check for confirmation\n\t\t\t\t\tif (!confirmation.confirmed) {\n\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Call function\n\t\t\t\t\tconst servicePromise = Promise.all(distinctElements.map(e => this.fileService.del(e.resource, { useTrash: this.useTrash, recursive: true })))\n\t\t\t\t\t\t.then(undefined, (error: any) => {\n\t\t\t\t\t\t\t// Handle error to delete file(s) from a modal confirmation dialog\n\t\t\t\t\t\t\tlet errorMessage: string;\n\t\t\t\t\t\t\tlet detailMessage: string | undefined;\n\t\t\t\t\t\t\tlet primaryButton: string;\n\t\t\t\t\t\t\tif (this.useTrash) {\n\t\t\t\t\t\t\t\terrorMessage = isWindows ? nls.localize('binFailed', \"Failed to delete using the Recycle Bin. Do you want to permanently delete instead?\") : nls.localize('trashFailed', \"Failed to delete using the Trash. Do you want to permanently delete instead?\");\n\t\t\t\t\t\t\t\tdetailMessage = nls.localize('irreversible', \"This action is irreversible!\");\n\t\t\t\t\t\t\t\tprimaryButton = nls.localize({ key: 'deletePermanentlyButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete Permanently\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\terrorMessage = toErrorMessage(error, false);\n\t\t\t\t\t\t\t\tprimaryButton = nls.localize({ key: 'retryButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Retry\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn this.dialogService.confirm({\n\t\t\t\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\t\t\t\tdetail: detailMessage,\n\t\t\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\t\t\tprimaryButton\n\t\t\t\t\t\t\t}).then(res => {\n\n\t\t\t\t\t\t\t\tif (res.confirmed) {\n\t\t\t\t\t\t\t\t\tif (this.useTrash) {\n\t\t\t\t\t\t\t\t\t\tthis.useTrash = false; // Delete Permanently\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.skipConfirm = true;\n\n\t\t\t\t\t\t\t\t\treturn this.run();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\treturn servicePromise;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getMoveToTrashMessage(distinctElements: ExplorerItem[]): string {\n\t\tif (this.containsBothDirectoryAndFile(distinctElements)) {\n\t\t\treturn getConfirmMessage(nls.localize('confirmMoveTrashMessageFilesAndDirectories', \"Are you sure you want to delete the following {0} files/directories and their contents?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t}\n\n\t\tif (distinctElements.length > 1) {\n\t\t\tif (distinctElements[0].isDirectory) {\n\t\t\t\treturn getConfirmMessage(nls.localize('confirmMoveTrashMessageMultipleDirectories', \"Are you sure you want to delete the following {0} directories and their contents?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t\t}\n\n\t\t\treturn getConfirmMessage(nls.localize('confirmMoveTrashMessageMultiple', \"Are you sure you want to delete the following {0} files?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t}\n\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn nls.localize('confirmMoveTrashMessageFolder', \"Are you sure you want to delete '{0}' and its contents?\", distinctElements[0].name);\n\t\t}\n\n\t\treturn nls.localize('confirmMoveTrashMessageFile', \"Are you sure you want to delete '{0}'?\", distinctElements[0].name);\n\t}\n\n\tprivate getDeleteMessage(distinctElements: ExplorerItem[]): string {\n\t\tif (this.containsBothDirectoryAndFile(distinctElements)) {\n\t\t\treturn getConfirmMessage(nls.localize('confirmDeleteMessageFilesAndDirectories', \"Are you sure you want to permanently delete the following {0} files/directories and their contents?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t}\n\n\t\tif (distinctElements.length > 1) {\n\t\t\tif (distinctElements[0].isDirectory) {\n\t\t\t\treturn getConfirmMessage(nls.localize('confirmDeleteMessageMultipleDirectories', \"Are you sure you want to permanently delete the following {0} directories and their contents?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t\t}\n\n\t\t\treturn getConfirmMessage(nls.localize('confirmDeleteMessageMultiple', \"Are you sure you want to permanently delete the following {0} files?\", distinctElements.length), distinctElements.map(e => e.resource));\n\t\t}\n\n\t\tif (distinctElements[0].isDirectory) {\n\t\t\treturn nls.localize('confirmDeleteMessageFolder', \"Are you sure you want to permanently delete '{0}' and its contents?\", distinctElements[0].name);\n\t\t}\n\n\t\treturn nls.localize('confirmDeleteMessageFile', \"Are you sure you want to permanently delete '{0}'?\", distinctElements[0].name);\n\t}\n\n\tprivate containsBothDirectoryAndFile(distinctElements: ExplorerItem[]): boolean {\n\t\tconst directories = distinctElements.filter(element => element.isDirectory);\n\t\tconst files = distinctElements.filter(element => !element.isDirectory);\n\n\t\treturn directories.length > 0 && files.length > 0;\n\t}\n}\n\nlet pasteShouldMove = false;\n// Paste File/Folder\nclass PasteFileAction extends BaseErrorReportingAction {\n\n\tpublic static readonly ID = 'filesExplorer.paste';\n\n\tconstructor(\n\t\tprivate element: ExplorerItem,\n\t\t@IFileService private fileService: IFileService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService\n\t) {\n\t\tsuper(PasteFileAction.ID, PASTE_FILE_LABEL, notificationService);\n\n\t\tif (!this.element) {\n\t\t\tthis.element = this.explorerService.roots[0];\n\t\t}\n\t}\n\n\tpublic run(fileToPaste: URI): Promise<any> {\n\n\t\t// Check if target is ancestor of pasted folder\n\t\tif (this.element.resource.toString() !== fileToPaste.toString() && resources.isEqualOrParent(this.element.resource, fileToPaste, !isLinux /* ignorecase */)) {\n\t\t\tthrow new Error(nls.localize('fileIsAncestor', \"File to paste is an ancestor of the destination folder\"));\n\t\t}\n\n\t\treturn this.fileService.resolveFile(fileToPaste).then(fileToPasteStat => {\n\n\t\t\t// Find target\n\t\t\tlet target: ExplorerItem;\n\t\t\tif (this.element.resource.toString() === fileToPaste.toString()) {\n\t\t\t\ttarget = this.element.parent!;\n\t\t\t} else {\n\t\t\t\ttarget = this.element.isDirectory ? this.element : this.element.parent!;\n\t\t\t}\n\n\t\t\tconst targetFile = findValidPasteFileTarget(target, { resource: fileToPaste, isDirectory: fileToPasteStat.isDirectory, allowOverwirte: pasteShouldMove });\n\n\t\t\t// Copy File\n\t\t\tconst promise = pasteShouldMove ? this.fileService.moveFile(fileToPaste, targetFile) : this.fileService.copyFile(fileToPaste, targetFile);\n\t\t\treturn promise.then<ITextEditor | undefined>(stat => {\n\t\t\t\tif (pasteShouldMove) {\n\t\t\t\t\t// Cut is done. Make sure to clear cut state.\n\t\t\t\t\tthis.explorerService.setToCopy([], false);\n\t\t\t\t}\n\t\t\t\tif (!stat.isDirectory) {\n\t\t\t\t\treturn this.editorService.openEditor({ resource: stat.resource, options: { pinned: true, preserveFocus: true } })\n\t\t\t\t\t\t.then(types.withNullAsUndefined);\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}, e => this.onError(e));\n\t\t}, error => {\n\t\t\tthis.onError(new Error(nls.localize('fileDeleted', \"File to paste was deleted or moved meanwhile\")));\n\t\t});\n\t}\n}\n\nexport function findValidPasteFileTarget(targetFolder: ExplorerItem, fileToPaste: { resource: URI, isDirectory?: boolean, allowOverwirte: boolean }): URI {\n\tlet name = resources.basenameOrAuthority(fileToPaste.resource);\n\n\tlet candidate = resources.joinPath(targetFolder.resource, name);\n\twhile (true && !fileToPaste.allowOverwirte) {\n\t\tif (!targetFolder.root.find(candidate)) {\n\t\t\tbreak;\n\t\t}\n\n\t\tname = incrementFileName(name, !!fileToPaste.isDirectory);\n\t\tcandidate = resources.joinPath(targetFolder.resource, name);\n\t}\n\n\treturn candidate;\n}\n\nexport function incrementFileName(name: string, isFolder: boolean): string {\n\tconst separators = '[\\\\.\\\\-_]';\n\tconst maxNumber = Constants.MAX_SAFE_SMALL_INTEGER;\n\n\t// file.1.txt=>file.2.txt\n\tlet suffixFileRegex = RegExp('(.*' + separators + ')(\\\\d+)(\\\\..*)$');\n\tif (!isFolder && name.match(suffixFileRegex)) {\n\t\treturn name.replace(suffixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tlet number = parseInt(g2);\n\t\t\treturn number < maxNumber\n\t\t\t\t? g1 + strings.pad(number + 1, g2.length) + g3\n\t\t\t\t: strings.format('{0}{1}.1{2}', g1, g2, g3);\n\t\t});\n\t}\n\n\t// 1.file.txt=>2.file.txt\n\tlet prefixFileRegex = RegExp('(\\\\d+)(' + separators + '.*)(\\\\..*)$');\n\tif (!isFolder && name.match(prefixFileRegex)) {\n\t\treturn name.replace(prefixFileRegex, (match, g1?, g2?, g3?) => {\n\t\t\tlet number = parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? strings.pad(number + 1, g1.length) + g2 + g3\n\t\t\t\t: strings.format('{0}{1}.1{2}', g1, g2, g3);\n\t\t});\n\t}\n\n\t// 1.txt=>2.txt\n\tlet prefixFileNoNameRegex = RegExp('(\\\\d+)(\\\\..*)$');\n\tif (!isFolder && name.match(prefixFileNoNameRegex)) {\n\t\treturn name.replace(prefixFileNoNameRegex, (match, g1?, g2?) => {\n\t\t\tlet number = parseInt(g1);\n\t\t\treturn number < maxNumber\n\t\t\t\t? strings.pad(number + 1, g1.length) + g2\n\t\t\t\t: strings.format('{0}.1{1}', g1, g2);\n\t\t});\n\t}\n\n\t// file.txt=>file.1.txt\n\tconst lastIndexOfDot = name.lastIndexOf('.');\n\tif (!isFolder && lastIndexOfDot >= 0) {\n\t\treturn strings.format('{0}.1{1}', name.substr(0, lastIndexOfDot), name.substr(lastIndexOfDot));\n\t}\n\n\t// folder.1=>folder.2\n\tif (isFolder && name.match(/(\\d+)$/)) {\n\t\treturn name.replace(/(\\d+)$/, (match: string, ...groups: any[]) => {\n\t\t\tlet number = parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? strings.pad(number + 1, groups[0].length)\n\t\t\t\t: strings.format('{0}.1', groups[0]);\n\t\t});\n\t}\n\n\t// 1.folder=>2.folder\n\tif (isFolder && name.match(/^(\\d+)/)) {\n\t\treturn name.replace(/^(\\d+)(.*)$/, (match: string, ...groups: any[]) => {\n\t\t\tlet number = parseInt(groups[0]);\n\t\t\treturn number < maxNumber\n\t\t\t\t? strings.pad(number + 1, groups[0].length) + groups[1]\n\t\t\t\t: strings.format('{0}{1}.1', groups[0], groups[1]);\n\t\t});\n\t}\n\n\t// file/folder=>file.1/folder.1\n\treturn strings.format('{0}.1', name);\n}\n\n// Global Compare with\nexport class GlobalCompareResourcesAction extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.compareFileWith';\n\tpublic static readonly LABEL = nls.localize('globalCompareFile', \"Compare Active File With...\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IQuickOpenService private readonly quickOpenService: IQuickOpenService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst activeInput = this.editorService.activeEditor;\n\t\tconst activeResource = activeInput ? activeInput.getResource() : undefined;\n\t\tif (activeResource) {\n\n\t\t\t// Compare with next editor that opens\n\t\t\tconst toDispose = this.editorService.overrideOpenEditor(editor => {\n\n\t\t\t\t// Only once!\n\t\t\t\ttoDispose.dispose();\n\n\t\t\t\t// Open editor as diff\n\t\t\t\tconst resource = editor.getResource();\n\t\t\t\tif (resource) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\toverride: this.editorService.openEditor({\n\t\t\t\t\t\t\tleftResource: activeResource,\n\t\t\t\t\t\t\trightResource: resource\n\t\t\t\t\t\t}).then(() => null)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\t// Bring up quick open\n\t\t\tthis.quickOpenService.show('', { autoFocus: { autoFocusSecondEntry: true } }).then(() => {\n\t\t\t\ttoDispose.dispose(); // make sure to unbind if quick open is closing\n\t\t\t});\n\t\t} else {\n\t\t\tthis.notificationService.info(nls.localize('openFileToCompare', \"Open a file first to compare it with another file.\"));\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class ToggleAutoSaveAction extends Action {\n\tpublic static readonly ID = 'workbench.action.toggleAutoSave';\n\tpublic static readonly LABEL = nls.localize('toggleAutoSave', \"Toggle Auto Save\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst setting = this.configurationService.inspect('files.autoSave');\n\t\tlet userAutoSaveConfig = setting.user;\n\t\tif (types.isUndefinedOrNull(userAutoSaveConfig)) {\n\t\t\tuserAutoSaveConfig = setting.default; // use default if setting not defined\n\t\t}\n\n\t\tlet newAutoSaveValue: string;\n\t\tif ([AutoSaveConfiguration.AFTER_DELAY, AutoSaveConfiguration.ON_FOCUS_CHANGE, AutoSaveConfiguration.ON_WINDOW_CHANGE].some(s => s === userAutoSaveConfig)) {\n\t\t\tnewAutoSaveValue = AutoSaveConfiguration.OFF;\n\t\t} else {\n\t\t\tnewAutoSaveValue = AutoSaveConfiguration.AFTER_DELAY;\n\t\t}\n\n\t\treturn this.configurationService.updateValue('files.autoSave', newAutoSaveValue, ConfigurationTarget.USER);\n\t}\n}\n\nexport abstract class BaseSaveAllAction extends BaseErrorReportingAction {\n\tprivate toDispose: IDisposable[];\n\tprivate lastIsDirty: boolean;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IUntitledEditorService private readonly untitledEditorService: IUntitledEditorService,\n\t\t@ICommandService protected commandService: ICommandService,\n\t\t@INotificationService notificationService: INotificationService,\n\t) {\n\t\tsuper(id, label, notificationService);\n\n\t\tthis.toDispose = [];\n\t\tthis.lastIsDirty = this.textFileService.isDirty();\n\t\tthis.enabled = this.lastIsDirty;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected abstract includeUntitled(): boolean;\n\tprotected abstract doRun(context: any): Promise<any>;\n\n\tprivate registerListeners(): void {\n\n\t\t// listen to files being changed locally\n\t\tthis.toDispose.push(this.textFileService.models.onModelsDirty(e => this.updateEnablement(true)));\n\t\tthis.toDispose.push(this.textFileService.models.onModelsSaved(e => this.updateEnablement(false)));\n\t\tthis.toDispose.push(this.textFileService.models.onModelsReverted(e => this.updateEnablement(false)));\n\t\tthis.toDispose.push(this.textFileService.models.onModelsSaveError(e => this.updateEnablement(true)));\n\n\t\tif (this.includeUntitled()) {\n\t\t\tthis.toDispose.push(this.untitledEditorService.onDidChangeDirty(resource => this.updateEnablement(this.untitledEditorService.isDirty(resource))));\n\t\t}\n\t}\n\n\tprivate updateEnablement(isDirty: boolean): void {\n\t\tif (this.lastIsDirty !== isDirty) {\n\t\t\tthis.enabled = this.textFileService.isDirty();\n\t\t\tthis.lastIsDirty = this.enabled;\n\t\t}\n\t}\n\n\tpublic run(context?: any): Promise<boolean> {\n\t\treturn this.doRun(context).then(() => true, error => {\n\t\t\tthis.onError(error);\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class SaveAllAction extends BaseSaveAllAction {\n\n\tpublic static readonly ID = 'workbench.action.files.saveAll';\n\tpublic static readonly LABEL = SAVE_ALL_LABEL;\n\n\tpublic get class(): string {\n\t\treturn 'explorer-action save-all';\n\t}\n\n\tprotected doRun(context: any): Promise<any> {\n\t\treturn this.commandService.executeCommand(SAVE_ALL_COMMAND_ID);\n\t}\n\n\tprotected includeUntitled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class SaveAllInGroupAction extends BaseSaveAllAction {\n\n\tpublic static readonly ID = 'workbench.files.action.saveAllInGroup';\n\tpublic static readonly LABEL = nls.localize('saveAllInGroup', \"Save All in Group\");\n\n\tpublic get class(): string {\n\t\treturn 'explorer-action save-all';\n\t}\n\n\tprotected doRun(context: any): Promise<any> {\n\t\treturn this.commandService.executeCommand(SAVE_ALL_IN_GROUP_COMMAND_ID, {}, context);\n\t}\n\n\tprotected includeUntitled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class CloseGroupAction extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.closeGroup';\n\tpublic static readonly LABEL = nls.localize('closeGroup', \"Close Group\");\n\n\tconstructor(id: string, label: string, @ICommandService private readonly commandService: ICommandService) {\n\t\tsuper(id, label, 'action-close-all-files');\n\t}\n\n\tpublic run(context?: any): Promise<any> {\n\t\treturn this.commandService.executeCommand(CLOSE_EDITORS_AND_GROUP_COMMAND_ID, {}, context);\n\t}\n}\n\nexport class FocusFilesExplorer extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.focusFilesExplorer';\n\tpublic static readonly LABEL = nls.localize('focusFilesExplorer', \"Focus on Files Explorer\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID, true);\n\t}\n}\n\nexport class ShowActiveFileInExplorer extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.showActiveFileInExplorer';\n\tpublic static readonly LABEL = nls.localize('showInExplorer', \"Reveal Active File in Side Bar\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ICommandService private readonly commandService: ICommandService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst resource = toResource(this.editorService.activeEditor, { supportSideBySide: true });\n\t\tif (resource) {\n\t\t\tthis.commandService.executeCommand(REVEAL_IN_EXPLORER_COMMAND_ID, resource);\n\t\t} else {\n\t\t\tthis.notificationService.info(nls.localize('openFileToShow', \"Open a file first to show it in the explorer\"));\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport class CollapseExplorerView extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.collapseExplorerFolders';\n\tpublic static readonly LABEL = nls.localize('collapseExplorerFolders', \"Collapse Folders in Explorer\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID).then((viewlet: ExplorerViewlet) => {\n\t\t\tconst explorerView = viewlet.getExplorerView();\n\t\t\tif (explorerView) {\n\t\t\t\texplorerView.collapseAll();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class RefreshExplorerView extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.refreshFilesExplorer';\n\tpublic static readonly LABEL = nls.localize('refreshExplorer', \"Refresh Explorer\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService private readonly viewletService: IViewletService,\n\t\t@IExplorerService private readonly explorerService: IExplorerService\n\t) {\n\t\tsuper(id, label, 'explorer-action refresh-explorer');\n\t}\n\n\tpublic run(): Promise<any> {\n\t\treturn this.viewletService.openViewlet(VIEWLET_ID).then(() =>\n\t\t\tthis.explorerService.refresh()\n\t\t);\n\t}\n}\n\nexport class ShowOpenedFileInNewWindow extends Action {\n\n\tpublic static readonly ID = 'workbench.action.files.showOpenedFileInNewWindow';\n\tpublic static readonly LABEL = nls.localize('openFileInNewWindow', \"Open Active File in New Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst fileResource = toResource(this.editorService.activeEditor, { supportSideBySide: true });\n\t\tif (fileResource) {\n\t\t\tif (this.fileService.canHandleResource(fileResource)) {\n\t\t\t\tthis.windowService.openWindow([{ uri: fileResource, typeHint: 'file' }], { forceNewWindow: true, forceOpenWorkspaceAsFile: true });\n\t\t\t} else {\n\t\t\t\tthis.notificationService.info(nls.localize('openFileToShowInNewWindow.unsupportedschema', \"The active editor must contain an openable resource.\"));\n\t\t\t}\n\t\t} else {\n\t\t\tthis.notificationService.info(nls.localize('openFileToShowInNewWindow.nofile', \"Open a file first to open in new window\"));\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport function validateFileName(item: ExplorerItem, name: string): string | null {\n\t// Produce a well formed file name\n\tname = getWellFormedFileName(name);\n\n\t// Name not provided\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn nls.localize('emptyFileNameError', \"A file or folder name must be provided.\");\n\t}\n\n\t// Relative paths only\n\tif (name[0] === '/' || name[0] === '\\\\') {\n\t\treturn nls.localize('fileNameStartsWithSlashError', \"A file or folder name cannot start with a slash.\");\n\t}\n\n\tconst names = coalesce(name.split(/[\\\\/]/));\n\tconst parent = item.parent;\n\n\tif (name !== item.name) {\n\t\t// Do not allow to overwrite existing file\n\t\tconst child = parent && parent.getChild(name);\n\t\tif (child && child !== item) {\n\t\t\treturn nls.localize('fileNameExistsError', \"A file or folder **{0}** already exists at this location. Please choose a different name.\", name);\n\t\t}\n\t}\n\n\t// Invalid File name\n\tif (names.some((folderName) => !extpath.isValidBasename(folderName))) {\n\t\treturn nls.localize('invalidFileNameError', \"The name **{0}** is not valid as a file or folder name. Please choose a different name.\", trimLongName(name));\n\t}\n\n\t// Max length restriction (on Windows)\n\tif (isWindows) {\n\t\tconst fullPathLength = item.resource.fsPath.length + 1 /* path segment */;\n\t\tif (fullPathLength > 255) {\n\t\t\treturn nls.localize('filePathTooLongError', \"The name **{0}** results in a path that is too long. Please choose a shorter name.\", trimLongName(name));\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction trimLongName(name: string): string {\n\tif (name && name.length > 255) {\n\t\treturn `${name.substr(0, 255)}...`;\n\t}\n\n\treturn name;\n}\n\nexport function getWellFormedFileName(filename: string): string {\n\tif (!filename) {\n\t\treturn filename;\n\t}\n\n\t// Trim tabs\n\tfilename = strings.trim(filename, '\\t');\n\n\t// Remove trailing dots, slashes, and spaces\n\tfilename = strings.rtrim(filename, '.');\n\tfilename = strings.rtrim(filename, '/');\n\tfilename = strings.rtrim(filename, '\\\\');\n\n\treturn filename;\n}\n\nexport class CompareWithClipboardAction extends Action {\n\n\tpublic static readonly ID = 'workbench.files.action.compareWithClipboard';\n\tpublic static readonly LABEL = nls.localize('compareWithClipboard', \"Compare Active File with Clipboard\");\n\n\tprivate static readonly SCHEME = 'clipboardCompare';\n\n\tprivate registrationDisposal: IDisposable;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.enabled = true;\n\t}\n\n\tpublic run(): Promise<any> {\n\t\tconst resource = toResource(this.editorService.activeEditor, { supportSideBySide: true });\n\t\tif (resource && (this.fileService.canHandleResource(resource) || resource.scheme === Schemas.untitled)) {\n\t\t\tif (!this.registrationDisposal) {\n\t\t\t\tconst provider = this.instantiationService.createInstance(ClipboardContentProvider);\n\t\t\t\tthis.registrationDisposal = this.textModelService.registerTextModelContentProvider(CompareWithClipboardAction.SCHEME, provider);\n\t\t\t}\n\n\t\t\tconst name = resources.basename(resource);\n\t\t\tconst editorLabel = nls.localize('clipboardComparisonLabel', \"Clipboard ↔ {0}\", name);\n\n\t\t\treturn this.editorService.openEditor({ leftResource: resource.with({ scheme: CompareWithClipboardAction.SCHEME }), rightResource: resource, label: editorLabel }).finally(() => {\n\t\t\t\tthis.registrationDisposal = dispose(this.registrationDisposal);\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.registrationDisposal = dispose(this.registrationDisposal);\n\t}\n}\n\nclass ClipboardContentProvider implements ITextModelContentProvider {\n\tconstructor(\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IModeService private readonly modeService: IModeService,\n\t\t@IModelService private readonly modelService: IModelService\n\t) { }\n\n\tprovideTextContent(resource: URI): Promise<ITextModel> {\n\t\tconst model = this.modelService.createModel(this.clipboardService.readText(), this.modeService.create('text/plain'), resource);\n\n\t\treturn Promise.resolve(model);\n\t}\n}\n\ninterface IExplorerContext {\n\tstat?: ExplorerItem;\n\tselection: ExplorerItem[];\n}\n\nfunction getContext(listWidget: ListWidget): IExplorerContext {\n\t// These commands can only be triggered when explorer viewlet is visible so get it using the active viewlet\n\tconst tree = <AsyncDataTree<null, ExplorerItem>>listWidget;\n\tconst focus = tree.getFocus();\n\tconst stat = focus.length ? focus[0] : undefined;\n\tconst selection = tree.getSelection();\n\n\t// Only respect the selection if user clicked inside it (focus belongs to it)\n\treturn { stat, selection: selection && typeof stat !== 'undefined' && selection.indexOf(stat) >= 0 ? selection : [] };\n}\n\n// TODO@isidor these commands are calling into actions due to the complex inheritance action structure.\n// It should be the other way around, that actions call into commands.\nfunction openExplorerAndRunAction(accessor: ServicesAccessor, constructor: IConstructorSignature1<() => ExplorerItem, Action>): Promise<any> {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst listService = accessor.get(IListService);\n\tconst viewletService = accessor.get(IViewletService);\n\tconst activeViewlet = viewletService.getActiveViewlet();\n\tlet explorerPromise = Promise.resolve(activeViewlet);\n\tif (!activeViewlet || activeViewlet.getId() !== VIEWLET_ID) {\n\t\texplorerPromise = viewletService.openViewlet(VIEWLET_ID, true);\n\t}\n\n\treturn explorerPromise.then((explorer: ExplorerViewlet) => {\n\t\tconst explorerView = explorer.getExplorerView();\n\t\tif (explorerView && explorerView.isBodyVisible() && listService.lastFocusedList) {\n\t\t\texplorerView.focus();\n\t\t\tconst { stat } = getContext(listService.lastFocusedList);\n\t\t\tconst action = instantiationService.createInstance(constructor, () => stat);\n\n\t\t\treturn action.run();\n\t\t}\n\n\t\treturn undefined;\n\t});\n}\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FILE_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn openExplorerAndRunAction(accessor, NewFileAction);\n\t}\n});\n\nCommandsRegistry.registerCommand({\n\tid: NEW_FOLDER_COMMAND_ID,\n\thandler: (accessor) => {\n\t\treturn openExplorerAndRunAction(accessor, NewFolderAction);\n\t}\n});\n\nexport const renameHandler = (accessor: ServicesAccessor) => {\n\tconst listService = accessor.get(IListService);\n\tconst explorerService = accessor.get(IExplorerService);\n\tconst textFileService = accessor.get(ITextFileService);\n\tif (!listService.lastFocusedList) {\n\t\treturn;\n\t}\n\n\tconst { stat } = getContext(listService.lastFocusedList);\n\tif (!stat) {\n\t\treturn;\n\t}\n\n\texplorerService.setEditable(stat, {\n\t\tvalidationMessage: value => validateFileName(stat, value),\n\t\tonFinish: (value, success) => {\n\t\t\tif (success) {\n\t\t\t\tconst parentResource = stat.parent!.resource;\n\t\t\t\tconst targetResource = resources.joinPath(parentResource, value);\n\t\t\t\ttextFileService.move(stat.resource, targetResource).then(() => refreshIfSeparator(value, explorerService), onUnexpectedError);\n\t\t\t}\n\t\t\texplorerService.setEditable(stat, null);\n\t\t}\n\t});\n};\n\nexport const moveFileToTrashHandler = (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst listService = accessor.get(IListService);\n\tif (!listService.lastFocusedList) {\n\t\treturn Promise.resolve();\n\t}\n\tconst explorerContext = getContext(listService.lastFocusedList);\n\tconst stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n\n\tconst moveFileToTrashAction = instantiationService.createInstance(BaseDeleteFileAction, stats, true);\n\treturn moveFileToTrashAction.run();\n};\n\nexport const deleteFileHandler = (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst listService = accessor.get(IListService);\n\tif (!listService.lastFocusedList) {\n\t\treturn Promise.resolve();\n\t}\n\tconst explorerContext = getContext(listService.lastFocusedList);\n\tconst stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n\n\tconst deleteFileAction = instantiationService.createInstance(BaseDeleteFileAction, stats, false);\n\treturn deleteFileAction.run();\n};\n\nexport const copyFileHandler = (accessor: ServicesAccessor) => {\n\tconst listService = accessor.get(IListService);\n\tif (!listService.lastFocusedList) {\n\t\treturn;\n\t}\n\tconst explorerContext = getContext(listService.lastFocusedList);\n\tconst explorerService = accessor.get(IExplorerService);\n\tif (explorerContext.stat) {\n\t\tconst stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n\t\texplorerService.setToCopy(stats, false);\n\t\tpasteShouldMove = false;\n\t}\n};\n\nexport const cutFileHandler = (accessor: ServicesAccessor) => {\n\tconst listService = accessor.get(IListService);\n\tif (!listService.lastFocusedList) {\n\t\treturn;\n\t}\n\tconst explorerContext = getContext(listService.lastFocusedList);\n\tconst explorerService = accessor.get(IExplorerService);\n\tif (explorerContext.stat) {\n\t\tconst stats = explorerContext.selection.length > 1 ? explorerContext.selection : [explorerContext.stat];\n\t\texplorerService.setToCopy(stats, true);\n\t\tpasteShouldMove = true;\n\t}\n};\n\nexport const pasteFileHandler = (accessor: ServicesAccessor) => {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst listService = accessor.get(IListService);\n\tconst clipboardService = accessor.get(IClipboardService);\n\tif (!listService.lastFocusedList) {\n\t\treturn Promise.resolve();\n\t}\n\tconst explorerContext = getContext(listService.lastFocusedList);\n\n\treturn sequence(resources.distinctParents(clipboardService.readResources(), r => r).map(toCopy => {\n\t\tconst pasteFileAction = instantiationService.createInstance(PasteFileAction, explorerContext.stat);\n\t\treturn () => pasteFileAction.run(toCopy);\n\t}));\n};\n"]}]}