{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/localizations/electron-browser/localizationsService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine([\"require\", \"exports\", \"vs/platform/ipc/electron-browser/sharedProcessService\"], function (require, exports, sharedProcessService_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    let LocalizationsService = class LocalizationsService {\n        constructor(sharedProcessService) {\n            this.channel = sharedProcessService.getChannel('localizations');\n        }\n        get onDidLanguagesChange() { return this.channel.listen('onDidLanguagesChange'); }\n        getLanguageIds(type) {\n            return this.channel.call('getLanguageIds', type);\n        }\n    };\n    LocalizationsService = __decorate([\n        __param(0, sharedProcessService_1.ISharedProcessService)\n    ], LocalizationsService);\n    exports.LocalizationsService = LocalizationsService;\n});\n",null]}