{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/browser/activityService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/browser/activityService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar panelService_1 = require(\"vs/workbench/services/panel/common/panelService\");\nvar activity_1 = require(\"vs/workbench/services/activity/common/activity\");\nvar activityBarService_1 = require(\"vs/workbench/services/activityBar/browser/activityBarService\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar ActivityService = /** @class */ (function () {\n    function ActivityService(panelService, activityBarService) {\n        this.panelService = panelService;\n        this.activityBarService = activityBarService;\n    }\n    ActivityService.prototype.showActivity = function (compositeOrActionId, badge, clazz, priority) {\n        if (this.panelService.getPanels().filter(function (p) { return p.id === compositeOrActionId; }).length) {\n            return this.panelService.showActivity(compositeOrActionId, badge, clazz);\n        }\n        return this.activityBarService.showActivity(compositeOrActionId, badge, clazz, priority);\n    };\n    ActivityService = tslib_1.__decorate([\n        tslib_1.__param(0, panelService_1.IPanelService),\n        tslib_1.__param(1, activityBarService_1.IActivityBarService)\n    ], ActivityService);\n    return ActivityService;\n}());\nexports.ActivityService = ActivityService;\nextensions_1.registerSingleton(activity_1.IActivityService, ActivityService, true);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/browser/activityService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/browser/activityService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,gFAAgF;AAChF,2EAA0F;AAE1F,mGAAmG;AACnG,0EAAgF;AAEhF;IAIC,yBACiC,YAA2B,EACrB,kBAAuC;QAD7C,iBAAY,GAAZ,YAAY,CAAe;QACrB,uBAAkB,GAAlB,kBAAkB,CAAqB;IAC1E,CAAC;IAEL,sCAAY,GAAZ,UAAa,mBAA2B,EAAE,KAAa,EAAE,KAAc,EAAE,QAAiB;QACzF,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,mBAAmB,EAA5B,CAA4B,CAAC,CAAC,MAAM,EAAE;YACnF,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1F,CAAC;IAfW,eAAe;QAKzB,mBAAA,4BAAa,CAAA;QACb,mBAAA,wCAAmB,CAAA;OANT,eAAe,CAgB3B;IAAD,sBAAC;CAAA,AAhBD,IAgBC;AAhBY,0CAAe;AAkB5B,8BAAiB,CAAC,2BAAgB,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPanelService } from 'vs/workbench/services/panel/common/panelService';\nimport { IActivityService, IBadge } from 'vs/workbench/services/activity/common/activity';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IActivityBarService } from 'vs/workbench/services/activityBar/browser/activityBarService';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nexport class ActivityService implements IActivityService {\n\n\tpublic _serviceBrand: any;\n\n\tconstructor(\n\t\t@IPanelService private readonly panelService: IPanelService,\n\t\t@IActivityBarService private readonly activityBarService: IActivityBarService\n\t) { }\n\n\tshowActivity(compositeOrActionId: string, badge: IBadge, clazz?: string, priority?: number): IDisposable {\n\t\tif (this.panelService.getPanels().filter(p => p.id === compositeOrActionId).length) {\n\t\t\treturn this.panelService.showActivity(compositeOrActionId, badge, clazz);\n\t\t}\n\n\t\treturn this.activityBarService.showActivity(compositeOrActionId, badge, clazz, priority);\n\t}\n}\n\nregisterSingleton(IActivityService, ActivityService, true);"]}]}