{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/update/node/update.config.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/update/node/update.config.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/registry/common/platform\", \"vs/platform/configuration/common/configurationRegistry\", \"vs/nls\"], function (require, exports, platform_1, configurationRegistry_1, nls_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const configurationRegistry = platform_1.Registry.as(configurationRegistry_1.Extensions.Configuration);\n    configurationRegistry.registerConfiguration({\n        id: 'update',\n        order: 15,\n        title: nls_1.localize('updateConfigurationTitle', \"Update\"),\n        type: 'object',\n        properties: {\n            'update.mode': {\n                type: 'string',\n                enum: ['none', 'manual', 'default'],\n                default: 'default',\n                scope: configurationRegistry_1.ConfigurationScope.APPLICATION,\n                description: nls_1.localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n                tags: ['usesOnlineServices'],\n                enumDescriptions: [\n                    nls_1.localize('none', \"Disable updates.\"),\n                    nls_1.localize('manual', \"Disable automatic background update checks. Updates will be available if you manually check for updates.\"),\n                    nls_1.localize('default', \"Enable automatic update checks. Code will check for updates automatically and periodically.\")\n                ]\n            },\n            'update.channel': {\n                type: 'string',\n                default: 'default',\n                scope: configurationRegistry_1.ConfigurationScope.APPLICATION,\n                description: nls_1.localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n                deprecationMessage: nls_1.localize('deprecated', \"This setting is deprecated, please use '{0}' instead.\", 'update.mode')\n            },\n            'update.enableWindowsBackgroundUpdates': {\n                type: 'boolean',\n                default: true,\n                scope: configurationRegistry_1.ConfigurationScope.APPLICATION,\n                description: nls_1.localize('enableWindowsBackgroundUpdates', \"Enables Windows background updates. The updates are fetched from a Microsoft online service.\"),\n                tags: ['usesOnlineServices']\n            },\n            'update.showReleaseNotes': {\n                type: 'boolean',\n                default: true,\n                description: nls_1.localize('showReleaseNotes', \"Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.\"),\n                tags: ['usesOnlineServices']\n            }\n        }\n    });\n});\n",null]}