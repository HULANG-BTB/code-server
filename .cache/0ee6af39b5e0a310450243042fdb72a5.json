{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/notifications/notificationsViewer.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/notifications/notificationsViewer.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar opener_1 = require(\"vs/platform/opener/common/opener\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar nls_1 = require(\"vs/nls\");\nvar button_1 = require(\"vs/base/browser/ui/button/button\");\nvar styler_1 = require(\"vs/platform/theme/common/styler\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar dropdown_1 = require(\"vs/base/browser/ui/dropdown/dropdown\");\nvar notifications_1 = require(\"vs/workbench/common/notifications\");\nvar notificationsActions_1 = require(\"vs/workbench/browser/parts/notifications/notificationsActions\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar progressbar_1 = require(\"vs/base/browser/ui/progressbar/progressbar\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar NotificationsListDelegate = /** @class */ (function () {\n    function NotificationsListDelegate(container) {\n        this.offsetHelper = this.createOffsetHelper(container);\n    }\n    NotificationsListDelegate.prototype.createOffsetHelper = function (container) {\n        var offsetHelper = document.createElement('div');\n        dom_1.addClass(offsetHelper, 'notification-offset-helper');\n        container.appendChild(offsetHelper);\n        return offsetHelper;\n    };\n    NotificationsListDelegate.prototype.getHeight = function (notification) {\n        // First row: message and actions\n        var expandedHeight = NotificationsListDelegate.ROW_HEIGHT;\n        if (!notification.expanded) {\n            return expandedHeight; // return early if there are no more rows to show\n        }\n        // Dynamic height: if message overflows\n        var preferredMessageHeight = this.computePreferredHeight(notification);\n        var messageOverflows = NotificationsListDelegate.LINE_HEIGHT < preferredMessageHeight;\n        if (messageOverflows) {\n            var overflow = preferredMessageHeight - NotificationsListDelegate.LINE_HEIGHT;\n            expandedHeight += overflow;\n        }\n        // Last row: source and buttons if we have any\n        if (notification.source || arrays_1.isNonEmptyArray(notification.actions.primary)) {\n            expandedHeight += NotificationsListDelegate.ROW_HEIGHT;\n        }\n        // If the expanded height is same as collapsed, unset the expanded state\n        // but skip events because there is no change that has visual impact\n        if (expandedHeight === NotificationsListDelegate.ROW_HEIGHT) {\n            notification.collapse(true /* skip events, no change in height */);\n        }\n        return expandedHeight;\n    };\n    NotificationsListDelegate.prototype.computePreferredHeight = function (notification) {\n        // Prepare offset helper depending on toolbar actions count\n        var actions = 1; // close\n        if (notification.canCollapse) {\n            actions++; // expand/collapse\n        }\n        if (arrays_1.isNonEmptyArray(notification.actions.secondary)) {\n            actions++; // secondary actions\n        }\n        this.offsetHelper.style.width = \"calc(100% - \" + (10 /* padding */ + 24 /* severity icon */ + (actions * 24) /* 24px per action */) + \"px)\";\n        // Render message into offset helper\n        var renderedMessage = NotificationMessageRenderer.render(notification.message);\n        this.offsetHelper.appendChild(renderedMessage);\n        // Compute height\n        var preferredHeight = Math.max(this.offsetHelper.offsetHeight, this.offsetHelper.scrollHeight);\n        // Always clear offset helper after use\n        dom_1.clearNode(this.offsetHelper);\n        return preferredHeight;\n    };\n    NotificationsListDelegate.prototype.getTemplateId = function (element) {\n        if (element instanceof notifications_1.NotificationViewItem) {\n            return NotificationRenderer.TEMPLATE_ID;\n        }\n        throw new Error('unknown element type: ' + element);\n    };\n    NotificationsListDelegate.ROW_HEIGHT = 42;\n    NotificationsListDelegate.LINE_HEIGHT = 22;\n    return NotificationsListDelegate;\n}());\nexports.NotificationsListDelegate = NotificationsListDelegate;\nvar NotificationMessageRenderer = /** @class */ (function () {\n    function NotificationMessageRenderer() {\n    }\n    NotificationMessageRenderer.render = function (message, actionHandler) {\n        var messageContainer = document.createElement('span');\n        // Message has no links\n        if (message.links.length === 0) {\n            messageContainer.textContent = message.value;\n        }\n        // Message has links\n        else {\n            var index = 0;\n            var _loop_1 = function (link) {\n                var textBefore = message.value.substring(index, link.offset);\n                if (textBefore) {\n                    messageContainer.appendChild(document.createTextNode(textBefore));\n                }\n                var anchor = document.createElement('a');\n                anchor.textContent = link.name;\n                anchor.title = link.href;\n                anchor.href = link.href;\n                if (actionHandler) {\n                    actionHandler.disposeables.push(dom_1.addDisposableListener(anchor, 'click', function () { return actionHandler.callback(link.href); }));\n                }\n                messageContainer.appendChild(anchor);\n                index = link.offset + link.length;\n            };\n            for (var _i = 0, _a = message.links; _i < _a.length; _i++) {\n                var link = _a[_i];\n                _loop_1(link);\n            }\n            // Add text after links if any\n            var textAfter = message.value.substring(index);\n            if (textAfter) {\n                messageContainer.appendChild(document.createTextNode(textAfter));\n            }\n        }\n        return messageContainer;\n    };\n    return NotificationMessageRenderer;\n}());\nvar NotificationRenderer = /** @class */ (function () {\n    function NotificationRenderer(actionRunner, themeService, contextMenuService, instantiationService) {\n        this.actionRunner = actionRunner;\n        this.themeService = themeService;\n        this.contextMenuService = contextMenuService;\n        this.instantiationService = instantiationService;\n    }\n    Object.defineProperty(NotificationRenderer.prototype, \"templateId\", {\n        get: function () {\n            return NotificationRenderer.TEMPLATE_ID;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NotificationRenderer.prototype.renderTemplate = function (container) {\n        var _this = this;\n        var data = Object.create(null);\n        data.toDispose = [];\n        // Container\n        data.container = document.createElement('div');\n        dom_1.addClass(data.container, 'notification-list-item');\n        // Main Row\n        data.mainRow = document.createElement('div');\n        dom_1.addClass(data.mainRow, 'notification-list-item-main-row');\n        // Icon\n        data.icon = document.createElement('div');\n        dom_1.addClass(data.icon, 'notification-list-item-icon');\n        // Message\n        data.message = document.createElement('div');\n        dom_1.addClass(data.message, 'notification-list-item-message');\n        // Toolbar\n        var toolbarContainer = document.createElement('div');\n        dom_1.addClass(toolbarContainer, 'notification-list-item-toolbar-container');\n        data.toolbar = new actionbar_1.ActionBar(toolbarContainer, {\n            ariaLabel: nls_1.localize('notificationActions', \"Notification Actions\"),\n            actionItemProvider: function (action) {\n                if (action && action instanceof notificationsActions_1.ConfigureNotificationAction) {\n                    var item = new dropdown_1.DropdownMenuActionItem(action, action.configurationActions, _this.contextMenuService, undefined, _this.actionRunner, undefined, action.class);\n                    data.toDispose.push(item);\n                    return item;\n                }\n                return undefined;\n            },\n            actionRunner: this.actionRunner\n        });\n        data.toDispose.push(data.toolbar);\n        // Details Row\n        data.detailsRow = document.createElement('div');\n        dom_1.addClass(data.detailsRow, 'notification-list-item-details-row');\n        // Source\n        data.source = document.createElement('div');\n        dom_1.addClass(data.source, 'notification-list-item-source');\n        // Buttons Container\n        data.buttonsContainer = document.createElement('div');\n        dom_1.addClass(data.buttonsContainer, 'notification-list-item-buttons-container');\n        container.appendChild(data.container);\n        // the details row appears first in order for better keyboard access to notification buttons\n        data.container.appendChild(data.detailsRow);\n        data.detailsRow.appendChild(data.source);\n        data.detailsRow.appendChild(data.buttonsContainer);\n        // main row\n        data.container.appendChild(data.mainRow);\n        data.mainRow.appendChild(data.icon);\n        data.mainRow.appendChild(data.message);\n        data.mainRow.appendChild(toolbarContainer);\n        // Progress: below the rows to span the entire width of the item\n        data.progress = new progressbar_1.ProgressBar(container);\n        data.toDispose.push(styler_1.attachProgressBarStyler(data.progress, this.themeService));\n        data.toDispose.push(data.progress);\n        // Renderer\n        data.renderer = this.instantiationService.createInstance(NotificationTemplateRenderer, data, this.actionRunner);\n        data.toDispose.push(data.renderer);\n        return data;\n    };\n    NotificationRenderer.prototype.renderElement = function (notification, index, data) {\n        data.renderer.setInput(notification);\n    };\n    NotificationRenderer.prototype.disposeTemplate = function (templateData) {\n        templateData.toDispose = lifecycle_1.dispose(templateData.toDispose);\n    };\n    NotificationRenderer.TEMPLATE_ID = 'notification';\n    NotificationRenderer = tslib_1.__decorate([\n        tslib_1.__param(1, themeService_1.IThemeService),\n        tslib_1.__param(2, contextView_1.IContextMenuService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService)\n    ], NotificationRenderer);\n    return NotificationRenderer;\n}());\nexports.NotificationRenderer = NotificationRenderer;\nvar NotificationTemplateRenderer = /** @class */ (function () {\n    function NotificationTemplateRenderer(template, actionRunner, openerService, instantiationService, themeService, keybindingService) {\n        this.template = template;\n        this.actionRunner = actionRunner;\n        this.openerService = openerService;\n        this.instantiationService = instantiationService;\n        this.themeService = themeService;\n        this.keybindingService = keybindingService;\n        this.inputDisposeables = [];\n        if (!NotificationTemplateRenderer.closeNotificationAction) {\n            NotificationTemplateRenderer.closeNotificationAction = instantiationService.createInstance(notificationsActions_1.ClearNotificationAction, notificationsActions_1.ClearNotificationAction.ID, notificationsActions_1.ClearNotificationAction.LABEL);\n            NotificationTemplateRenderer.expandNotificationAction = instantiationService.createInstance(notificationsActions_1.ExpandNotificationAction, notificationsActions_1.ExpandNotificationAction.ID, notificationsActions_1.ExpandNotificationAction.LABEL);\n            NotificationTemplateRenderer.collapseNotificationAction = instantiationService.createInstance(notificationsActions_1.CollapseNotificationAction, notificationsActions_1.CollapseNotificationAction.ID, notificationsActions_1.CollapseNotificationAction.LABEL);\n        }\n    }\n    NotificationTemplateRenderer.prototype.setInput = function (notification) {\n        this.inputDisposeables = lifecycle_1.dispose(this.inputDisposeables);\n        this.render(notification);\n    };\n    NotificationTemplateRenderer.prototype.render = function (notification) {\n        var _this = this;\n        // Container\n        dom_1.toggleClass(this.template.container, 'expanded', notification.expanded);\n        this.inputDisposeables.push(dom_1.addDisposableListener(this.template.container, dom_1.EventType.MOUSE_UP, function (e) {\n            if (e.button === 1 /* Middle Button */) {\n                dom_1.EventHelper.stop(e);\n                notification.close();\n            }\n        }));\n        // Severity Icon\n        this.renderSeverity(notification);\n        // Message\n        var messageOverflows = this.renderMessage(notification);\n        // Secondary Actions\n        this.renderSecondaryActions(notification, messageOverflows);\n        // Source\n        this.renderSource(notification);\n        // Buttons\n        this.renderButtons(notification);\n        // Progress\n        this.renderProgress(notification);\n        // Label Change Events\n        this.inputDisposeables.push(notification.onDidLabelChange(function (event) {\n            switch (event.kind) {\n                case notifications_1.NotificationViewItemLabelKind.SEVERITY:\n                    _this.renderSeverity(notification);\n                    break;\n                case notifications_1.NotificationViewItemLabelKind.PROGRESS:\n                    _this.renderProgress(notification);\n                    break;\n            }\n        }));\n    };\n    NotificationTemplateRenderer.prototype.renderSeverity = function (notification) {\n        var _this = this;\n        NotificationTemplateRenderer.SEVERITIES.forEach(function (severity) {\n            var domAction = notification.severity === _this.toSeverity(severity) ? dom_1.addClass : dom_1.removeClass;\n            domAction(_this.template.icon, \"icon-\" + severity);\n        });\n    };\n    NotificationTemplateRenderer.prototype.renderMessage = function (notification) {\n        var _this = this;\n        dom_1.clearNode(this.template.message);\n        this.template.message.appendChild(NotificationMessageRenderer.render(notification.message, {\n            callback: function (link) { return _this.openerService.open(uri_1.URI.parse(link)); },\n            disposeables: this.inputDisposeables\n        }));\n        var messageOverflows = notification.canCollapse && !notification.expanded && this.template.message.scrollWidth > this.template.message.clientWidth;\n        if (messageOverflows) {\n            this.template.message.title = this.template.message.textContent + '';\n        }\n        else {\n            this.template.message.removeAttribute('title');\n        }\n        var links = this.template.message.querySelectorAll('a');\n        for (var i = 0; i < links.length; i++) {\n            links.item(i).tabIndex = -1; // prevent keyboard navigation to links to allow for better keyboard support within a message\n        }\n        return messageOverflows;\n    };\n    NotificationTemplateRenderer.prototype.renderSecondaryActions = function (notification, messageOverflows) {\n        var _this = this;\n        var actions = [];\n        // Secondary Actions\n        if (arrays_1.isNonEmptyArray(notification.actions.secondary)) {\n            var configureNotificationAction = this.instantiationService.createInstance(notificationsActions_1.ConfigureNotificationAction, notificationsActions_1.ConfigureNotificationAction.ID, notificationsActions_1.ConfigureNotificationAction.LABEL, notification.actions.secondary);\n            actions.push(configureNotificationAction);\n            this.inputDisposeables.push(configureNotificationAction);\n        }\n        // Expand / Collapse\n        var showExpandCollapseAction = false;\n        if (notification.canCollapse) {\n            if (notification.expanded) {\n                showExpandCollapseAction = true; // allow to collapse an expanded message\n            }\n            else if (notification.source) {\n                showExpandCollapseAction = true; // allow to expand to details row\n            }\n            else if (messageOverflows) {\n                showExpandCollapseAction = true; // allow to expand if message overflows\n            }\n        }\n        if (showExpandCollapseAction) {\n            actions.push(notification.expanded ? NotificationTemplateRenderer.collapseNotificationAction : NotificationTemplateRenderer.expandNotificationAction);\n        }\n        // Close\n        actions.push(NotificationTemplateRenderer.closeNotificationAction);\n        this.template.toolbar.clear();\n        this.template.toolbar.context = notification;\n        actions.forEach(function (action) { return _this.template.toolbar.push(action, { icon: true, label: false, keybinding: _this.getKeybindingLabel(action) }); });\n    };\n    NotificationTemplateRenderer.prototype.renderSource = function (notification) {\n        if (notification.expanded && notification.source) {\n            this.template.source.textContent = nls_1.localize('notificationSource', \"Source: {0}\", notification.source);\n            this.template.source.title = notification.source;\n        }\n        else {\n            this.template.source.textContent = '';\n            this.template.source.removeAttribute('title');\n        }\n    };\n    NotificationTemplateRenderer.prototype.renderButtons = function (notification) {\n        var _this = this;\n        dom_1.clearNode(this.template.buttonsContainer);\n        if (notification.expanded && notification.actions.primary) {\n            var buttonGroup = new button_1.ButtonGroup(this.template.buttonsContainer, notification.actions.primary.length, { title: true /* assign titles to buttons in case they overflow */ });\n            buttonGroup.buttons.forEach(function (button, index) {\n                var action = notification.actions.primary[index];\n                button.label = action.label;\n                _this.inputDisposeables.push(button.onDidClick(function (e) {\n                    dom_1.EventHelper.stop(e, true);\n                    // Run action\n                    _this.actionRunner.run(action, notification);\n                    // Hide notification (unless explicitly prevented)\n                    if (!(action instanceof notifications_1.ChoiceAction) || !action.keepOpen) {\n                        notification.close();\n                    }\n                }));\n                _this.inputDisposeables.push(styler_1.attachButtonStyler(button, _this.themeService));\n            });\n            this.inputDisposeables.push(buttonGroup);\n        }\n    };\n    NotificationTemplateRenderer.prototype.renderProgress = function (notification) {\n        // Return early if the item has no progress\n        if (!notification.hasProgress()) {\n            this.template.progress.stop().hide();\n            return;\n        }\n        // Infinite\n        var state = notification.progress.state;\n        if (state.infinite) {\n            this.template.progress.infinite().show();\n        }\n        // Total / Worked\n        else if (typeof state.total === 'number' || typeof state.worked === 'number') {\n            if (typeof state.total === 'number' && !this.template.progress.hasTotal()) {\n                this.template.progress.total(state.total);\n            }\n            if (typeof state.worked === 'number') {\n                this.template.progress.setWorked(state.worked).show();\n            }\n        }\n        // Done\n        else {\n            this.template.progress.done().hide();\n        }\n    };\n    NotificationTemplateRenderer.prototype.toSeverity = function (severity) {\n        switch (severity) {\n            case 'info':\n                return notification_1.Severity.Info;\n            case 'warning':\n                return notification_1.Severity.Warning;\n            case 'error':\n                return notification_1.Severity.Error;\n        }\n    };\n    NotificationTemplateRenderer.prototype.getKeybindingLabel = function (action) {\n        var keybinding = this.keybindingService.lookupKeybinding(action.id);\n        return keybinding ? keybinding.getLabel() : null;\n    };\n    NotificationTemplateRenderer.prototype.dispose = function () {\n        this.inputDisposeables = lifecycle_1.dispose(this.inputDisposeables);\n    };\n    NotificationTemplateRenderer.SEVERITIES = ['info', 'warning', 'error'];\n    NotificationTemplateRenderer = tslib_1.__decorate([\n        tslib_1.__param(2, opener_1.IOpenerService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, themeService_1.IThemeService),\n        tslib_1.__param(5, keybinding_1.IKeybindingService)\n    ], NotificationTemplateRenderer);\n    return NotificationTemplateRenderer;\n}());\nexports.NotificationTemplateRenderer = NotificationTemplateRenderer;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/notifications/notificationsViewer.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/parts/notifications/notificationsViewer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListVirtualDelegate, IListRenderer } from 'vs/base/browser/ui/list/list';\nimport { clearNode, addClass, removeClass, toggleClass, addDisposableListener, EventType, EventHelper } from 'vs/base/browser/dom';\nimport { IOpenerService } from 'vs/platform/opener/common/opener';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ButtonGroup } from 'vs/base/browser/ui/button/button';\nimport { attachButtonStyler, attachProgressBarStyler } from 'vs/platform/theme/common/styler';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IAction, IActionRunner } from 'vs/base/common/actions';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { DropdownMenuActionItem, IContextMenuProvider } from 'vs/base/browser/ui/dropdown/dropdown';\nimport { INotificationViewItem, NotificationViewItem, NotificationViewItemLabelKind, INotificationMessage, ChoiceAction } from 'vs/workbench/common/notifications';\nimport { ClearNotificationAction, ExpandNotificationAction, CollapseNotificationAction, ConfigureNotificationAction } from 'vs/workbench/browser/parts/notifications/notificationsActions';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { ProgressBar } from 'vs/base/browser/ui/progressbar/progressbar';\nimport { Severity } from 'vs/platform/notification/common/notification';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\n\nexport class NotificationsListDelegate implements IListVirtualDelegate<INotificationViewItem> {\n\n\tprivate static readonly ROW_HEIGHT = 42;\n\tprivate static readonly LINE_HEIGHT = 22;\n\n\tprivate offsetHelper: HTMLElement;\n\n\tconstructor(container: HTMLElement) {\n\t\tthis.offsetHelper = this.createOffsetHelper(container);\n\t}\n\n\tprivate createOffsetHelper(container: HTMLElement): HTMLElement {\n\t\tconst offsetHelper = document.createElement('div');\n\t\taddClass(offsetHelper, 'notification-offset-helper');\n\n\t\tcontainer.appendChild(offsetHelper);\n\n\t\treturn offsetHelper;\n\t}\n\n\tgetHeight(notification: INotificationViewItem): number {\n\n\t\t// First row: message and actions\n\t\tlet expandedHeight = NotificationsListDelegate.ROW_HEIGHT;\n\n\t\tif (!notification.expanded) {\n\t\t\treturn expandedHeight; // return early if there are no more rows to show\n\t\t}\n\n\t\t// Dynamic height: if message overflows\n\t\tconst preferredMessageHeight = this.computePreferredHeight(notification);\n\t\tconst messageOverflows = NotificationsListDelegate.LINE_HEIGHT < preferredMessageHeight;\n\t\tif (messageOverflows) {\n\t\t\tconst overflow = preferredMessageHeight - NotificationsListDelegate.LINE_HEIGHT;\n\t\t\texpandedHeight += overflow;\n\t\t}\n\n\t\t// Last row: source and buttons if we have any\n\t\tif (notification.source || isNonEmptyArray(notification.actions.primary)) {\n\t\t\texpandedHeight += NotificationsListDelegate.ROW_HEIGHT;\n\t\t}\n\n\t\t// If the expanded height is same as collapsed, unset the expanded state\n\t\t// but skip events because there is no change that has visual impact\n\t\tif (expandedHeight === NotificationsListDelegate.ROW_HEIGHT) {\n\t\t\tnotification.collapse(true /* skip events, no change in height */);\n\t\t}\n\n\t\treturn expandedHeight;\n\t}\n\n\tprivate computePreferredHeight(notification: INotificationViewItem): number {\n\n\t\t// Prepare offset helper depending on toolbar actions count\n\t\tlet actions = 1; // close\n\t\tif (notification.canCollapse) {\n\t\t\tactions++; // expand/collapse\n\t\t}\n\t\tif (isNonEmptyArray(notification.actions.secondary)) {\n\t\t\tactions++; // secondary actions\n\t\t}\n\t\tthis.offsetHelper.style.width = `calc(100% - ${10 /* padding */ + 24 /* severity icon */ + (actions * 24) /* 24px per action */}px)`;\n\n\t\t// Render message into offset helper\n\t\tconst renderedMessage = NotificationMessageRenderer.render(notification.message);\n\t\tthis.offsetHelper.appendChild(renderedMessage);\n\n\t\t// Compute height\n\t\tconst preferredHeight = Math.max(this.offsetHelper.offsetHeight, this.offsetHelper.scrollHeight);\n\n\t\t// Always clear offset helper after use\n\t\tclearNode(this.offsetHelper);\n\n\t\treturn preferredHeight;\n\t}\n\n\tgetTemplateId(element: INotificationViewItem): string {\n\t\tif (element instanceof NotificationViewItem) {\n\t\t\treturn NotificationRenderer.TEMPLATE_ID;\n\t\t}\n\n\t\tthrow new Error('unknown element type: ' + element);\n\t}\n}\n\nexport interface INotificationTemplateData {\n\tcontainer: HTMLElement;\n\ttoDispose: IDisposable[];\n\n\tmainRow: HTMLElement;\n\ticon: HTMLElement;\n\tmessage: HTMLElement;\n\ttoolbar: ActionBar;\n\n\tdetailsRow: HTMLElement;\n\tsource: HTMLElement;\n\tbuttonsContainer: HTMLElement;\n\tprogress: ProgressBar;\n\n\trenderer: NotificationTemplateRenderer;\n}\n\ninterface IMessageActionHandler {\n\tcallback: (href: string) => void;\n\tdisposeables: IDisposable[];\n}\n\nclass NotificationMessageRenderer {\n\n\tstatic render(message: INotificationMessage, actionHandler?: IMessageActionHandler): HTMLElement {\n\t\tconst messageContainer = document.createElement('span');\n\n\t\t// Message has no links\n\t\tif (message.links.length === 0) {\n\t\t\tmessageContainer.textContent = message.value;\n\t\t}\n\n\t\t// Message has links\n\t\telse {\n\t\t\tlet index = 0;\n\t\t\tfor (const link of message.links) {\n\n\t\t\t\tconst textBefore = message.value.substring(index, link.offset);\n\t\t\t\tif (textBefore) {\n\t\t\t\t\tmessageContainer.appendChild(document.createTextNode(textBefore));\n\t\t\t\t}\n\n\t\t\t\tconst anchor = document.createElement('a');\n\t\t\t\tanchor.textContent = link.name;\n\t\t\t\tanchor.title = link.href;\n\t\t\t\tanchor.href = link.href;\n\n\t\t\t\tif (actionHandler) {\n\t\t\t\t\tactionHandler.disposeables.push(addDisposableListener(anchor, 'click', () => actionHandler.callback(link.href)));\n\t\t\t\t}\n\n\t\t\t\tmessageContainer.appendChild(anchor);\n\n\t\t\t\tindex = link.offset + link.length;\n\t\t\t}\n\n\t\t\t// Add text after links if any\n\t\t\tconst textAfter = message.value.substring(index);\n\t\t\tif (textAfter) {\n\t\t\t\tmessageContainer.appendChild(document.createTextNode(textAfter));\n\t\t\t}\n\t\t}\n\n\t\treturn messageContainer;\n\t}\n}\n\nexport class NotificationRenderer implements IListRenderer<INotificationViewItem, INotificationTemplateData> {\n\n\tstatic readonly TEMPLATE_ID = 'notification';\n\n\tconstructor(\n\t\tprivate actionRunner: IActionRunner,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t}\n\n\tget templateId() {\n\t\treturn NotificationRenderer.TEMPLATE_ID;\n\t}\n\n\trenderTemplate(container: HTMLElement): INotificationTemplateData {\n\t\tconst data: INotificationTemplateData = Object.create(null);\n\t\tdata.toDispose = [];\n\n\t\t// Container\n\t\tdata.container = document.createElement('div');\n\t\taddClass(data.container, 'notification-list-item');\n\n\t\t// Main Row\n\t\tdata.mainRow = document.createElement('div');\n\t\taddClass(data.mainRow, 'notification-list-item-main-row');\n\n\t\t// Icon\n\t\tdata.icon = document.createElement('div');\n\t\taddClass(data.icon, 'notification-list-item-icon');\n\n\t\t// Message\n\t\tdata.message = document.createElement('div');\n\t\taddClass(data.message, 'notification-list-item-message');\n\n\t\t// Toolbar\n\t\tconst toolbarContainer = document.createElement('div');\n\t\taddClass(toolbarContainer, 'notification-list-item-toolbar-container');\n\t\tdata.toolbar = new ActionBar(\n\t\t\ttoolbarContainer,\n\t\t\t{\n\t\t\t\tariaLabel: localize('notificationActions', \"Notification Actions\"),\n\t\t\t\tactionItemProvider: action => {\n\t\t\t\t\tif (action && action instanceof ConfigureNotificationAction) {\n\t\t\t\t\t\tconst item = new DropdownMenuActionItem(action, action.configurationActions, this.contextMenuService as IContextMenuProvider, undefined, this.actionRunner, undefined, action.class as string);\n\t\t\t\t\t\tdata.toDispose.push(item);\n\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tactionRunner: this.actionRunner\n\t\t\t}\n\t\t);\n\t\tdata.toDispose.push(data.toolbar);\n\n\t\t// Details Row\n\t\tdata.detailsRow = document.createElement('div');\n\t\taddClass(data.detailsRow, 'notification-list-item-details-row');\n\n\t\t// Source\n\t\tdata.source = document.createElement('div');\n\t\taddClass(data.source, 'notification-list-item-source');\n\n\t\t// Buttons Container\n\t\tdata.buttonsContainer = document.createElement('div');\n\t\taddClass(data.buttonsContainer, 'notification-list-item-buttons-container');\n\n\t\tcontainer.appendChild(data.container);\n\n\t\t// the details row appears first in order for better keyboard access to notification buttons\n\t\tdata.container.appendChild(data.detailsRow);\n\t\tdata.detailsRow.appendChild(data.source);\n\t\tdata.detailsRow.appendChild(data.buttonsContainer);\n\n\t\t// main row\n\t\tdata.container.appendChild(data.mainRow);\n\t\tdata.mainRow.appendChild(data.icon);\n\t\tdata.mainRow.appendChild(data.message);\n\t\tdata.mainRow.appendChild(toolbarContainer);\n\n\t\t// Progress: below the rows to span the entire width of the item\n\t\tdata.progress = new ProgressBar(container);\n\t\tdata.toDispose.push(attachProgressBarStyler(data.progress, this.themeService));\n\t\tdata.toDispose.push(data.progress);\n\n\t\t// Renderer\n\t\tdata.renderer = this.instantiationService.createInstance(NotificationTemplateRenderer, data, this.actionRunner);\n\t\tdata.toDispose.push(data.renderer);\n\n\t\treturn data;\n\t}\n\n\trenderElement(notification: INotificationViewItem, index: number, data: INotificationTemplateData): void {\n\t\tdata.renderer.setInput(notification);\n\t}\n\n\tdisposeTemplate(templateData: INotificationTemplateData): void {\n\t\ttemplateData.toDispose = dispose(templateData.toDispose);\n\t}\n}\n\nexport class NotificationTemplateRenderer {\n\n\tprivate static closeNotificationAction: ClearNotificationAction;\n\tprivate static expandNotificationAction: ExpandNotificationAction;\n\tprivate static collapseNotificationAction: CollapseNotificationAction;\n\n\tprivate static readonly SEVERITIES: Array<'info' | 'warning' | 'error'> = ['info', 'warning', 'error'];\n\n\tprivate inputDisposeables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate template: INotificationTemplateData,\n\t\tprivate actionRunner: IActionRunner,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) {\n\t\tif (!NotificationTemplateRenderer.closeNotificationAction) {\n\t\t\tNotificationTemplateRenderer.closeNotificationAction = instantiationService.createInstance(ClearNotificationAction, ClearNotificationAction.ID, ClearNotificationAction.LABEL);\n\t\t\tNotificationTemplateRenderer.expandNotificationAction = instantiationService.createInstance(ExpandNotificationAction, ExpandNotificationAction.ID, ExpandNotificationAction.LABEL);\n\t\t\tNotificationTemplateRenderer.collapseNotificationAction = instantiationService.createInstance(CollapseNotificationAction, CollapseNotificationAction.ID, CollapseNotificationAction.LABEL);\n\t\t}\n\t}\n\n\tsetInput(notification: INotificationViewItem): void {\n\t\tthis.inputDisposeables = dispose(this.inputDisposeables);\n\n\t\tthis.render(notification);\n\t}\n\n\tprivate render(notification: INotificationViewItem): void {\n\n\t\t// Container\n\t\ttoggleClass(this.template.container, 'expanded', notification.expanded);\n\t\tthis.inputDisposeables.push(addDisposableListener(this.template.container, EventType.MOUSE_UP, e => {\n\t\t\tif (e.button === 1 /* Middle Button */) {\n\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\tnotification.close();\n\t\t\t}\n\t\t}));\n\n\t\t// Severity Icon\n\t\tthis.renderSeverity(notification);\n\n\t\t// Message\n\t\tconst messageOverflows = this.renderMessage(notification);\n\n\t\t// Secondary Actions\n\t\tthis.renderSecondaryActions(notification, messageOverflows);\n\n\t\t// Source\n\t\tthis.renderSource(notification);\n\n\t\t// Buttons\n\t\tthis.renderButtons(notification);\n\n\t\t// Progress\n\t\tthis.renderProgress(notification);\n\n\t\t// Label Change Events\n\t\tthis.inputDisposeables.push(notification.onDidLabelChange(event => {\n\t\t\tswitch (event.kind) {\n\t\t\t\tcase NotificationViewItemLabelKind.SEVERITY:\n\t\t\t\t\tthis.renderSeverity(notification);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NotificationViewItemLabelKind.PROGRESS:\n\t\t\t\t\tthis.renderProgress(notification);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate renderSeverity(notification: INotificationViewItem): void {\n\t\tNotificationTemplateRenderer.SEVERITIES.forEach(severity => {\n\t\t\tconst domAction = notification.severity === this.toSeverity(severity) ? addClass : removeClass;\n\t\t\tdomAction(this.template.icon, `icon-${severity}`);\n\t\t});\n\t}\n\n\tprivate renderMessage(notification: INotificationViewItem): boolean {\n\t\tclearNode(this.template.message);\n\t\tthis.template.message.appendChild(NotificationMessageRenderer.render(notification.message, {\n\t\t\tcallback: link => this.openerService.open(URI.parse(link)),\n\t\t\tdisposeables: this.inputDisposeables\n\t\t}));\n\n\t\tconst messageOverflows = notification.canCollapse && !notification.expanded && this.template.message.scrollWidth > this.template.message.clientWidth;\n\t\tif (messageOverflows) {\n\t\t\tthis.template.message.title = this.template.message.textContent + '';\n\t\t} else {\n\t\t\tthis.template.message.removeAttribute('title');\n\t\t}\n\n\t\tconst links = this.template.message.querySelectorAll('a');\n\t\tfor (let i = 0; i < links.length; i++) {\n\t\t\tlinks.item(i).tabIndex = -1; // prevent keyboard navigation to links to allow for better keyboard support within a message\n\t\t}\n\n\t\treturn messageOverflows;\n\t}\n\n\tprivate renderSecondaryActions(notification: INotificationViewItem, messageOverflows: boolean): void {\n\t\tconst actions: IAction[] = [];\n\n\t\t// Secondary Actions\n\t\tif (isNonEmptyArray(notification.actions.secondary)) {\n\t\t\tconst configureNotificationAction = this.instantiationService.createInstance(ConfigureNotificationAction, ConfigureNotificationAction.ID, ConfigureNotificationAction.LABEL, notification.actions.secondary);\n\t\t\tactions.push(configureNotificationAction);\n\t\t\tthis.inputDisposeables.push(configureNotificationAction);\n\t\t}\n\n\t\t// Expand / Collapse\n\t\tlet showExpandCollapseAction = false;\n\t\tif (notification.canCollapse) {\n\t\t\tif (notification.expanded) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to collapse an expanded message\n\t\t\t} else if (notification.source) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to expand to details row\n\t\t\t} else if (messageOverflows) {\n\t\t\t\tshowExpandCollapseAction = true; // allow to expand if message overflows\n\t\t\t}\n\t\t}\n\n\t\tif (showExpandCollapseAction) {\n\t\t\tactions.push(notification.expanded ? NotificationTemplateRenderer.collapseNotificationAction : NotificationTemplateRenderer.expandNotificationAction);\n\t\t}\n\n\t\t// Close\n\t\tactions.push(NotificationTemplateRenderer.closeNotificationAction);\n\n\t\tthis.template.toolbar.clear();\n\t\tthis.template.toolbar.context = notification;\n\t\tactions.forEach(action => this.template.toolbar.push(action, { icon: true, label: false, keybinding: this.getKeybindingLabel(action) }));\n\t}\n\n\tprivate renderSource(notification: INotificationViewItem): void {\n\t\tif (notification.expanded && notification.source) {\n\t\t\tthis.template.source.textContent = localize('notificationSource', \"Source: {0}\", notification.source);\n\t\t\tthis.template.source.title = notification.source;\n\t\t} else {\n\t\t\tthis.template.source.textContent = '';\n\t\t\tthis.template.source.removeAttribute('title');\n\t\t}\n\t}\n\n\tprivate renderButtons(notification: INotificationViewItem): void {\n\t\tclearNode(this.template.buttonsContainer);\n\n\t\tif (notification.expanded && notification.actions.primary) {\n\t\t\tconst buttonGroup = new ButtonGroup(this.template.buttonsContainer, notification.actions.primary.length, { title: true /* assign titles to buttons in case they overflow */ });\n\t\t\tbuttonGroup.buttons.forEach((button, index) => {\n\t\t\t\tconst action = notification.actions.primary![index];\n\t\t\t\tbutton.label = action.label;\n\n\t\t\t\tthis.inputDisposeables.push(button.onDidClick(e => {\n\t\t\t\t\tEventHelper.stop(e, true);\n\n\t\t\t\t\t// Run action\n\t\t\t\t\tthis.actionRunner.run(action, notification);\n\n\t\t\t\t\t// Hide notification (unless explicitly prevented)\n\t\t\t\t\tif (!(action instanceof ChoiceAction) || !action.keepOpen) {\n\t\t\t\t\t\tnotification.close();\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.inputDisposeables.push(attachButtonStyler(button, this.themeService));\n\t\t\t});\n\n\t\t\tthis.inputDisposeables.push(buttonGroup);\n\t\t}\n\t}\n\n\tprivate renderProgress(notification: INotificationViewItem): void {\n\n\t\t// Return early if the item has no progress\n\t\tif (!notification.hasProgress()) {\n\t\t\tthis.template.progress.stop().hide();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Infinite\n\t\tconst state = notification.progress.state;\n\t\tif (state.infinite) {\n\t\t\tthis.template.progress.infinite().show();\n\t\t}\n\n\t\t// Total / Worked\n\t\telse if (typeof state.total === 'number' || typeof state.worked === 'number') {\n\t\t\tif (typeof state.total === 'number' && !this.template.progress.hasTotal()) {\n\t\t\t\tthis.template.progress.total(state.total);\n\t\t\t}\n\n\t\t\tif (typeof state.worked === 'number') {\n\t\t\t\tthis.template.progress.setWorked(state.worked).show();\n\t\t\t}\n\t\t}\n\n\t\t// Done\n\t\telse {\n\t\t\tthis.template.progress.done().hide();\n\t\t}\n\t}\n\n\tprivate toSeverity(severity: 'info' | 'warning' | 'error'): Severity {\n\t\tswitch (severity) {\n\t\t\tcase 'info':\n\t\t\t\treturn Severity.Info;\n\t\t\tcase 'warning':\n\t\t\t\treturn Severity.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn Severity.Error;\n\t\t}\n\t}\n\n\tprivate getKeybindingLabel(action: IAction): string | null {\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.id);\n\n\t\treturn keybinding ? keybinding.getLabel() : null;\n\t}\n\n\tdispose(): void {\n\t\tthis.inputDisposeables = dispose(this.inputDisposeables);\n\t}\n}\n"]}]}