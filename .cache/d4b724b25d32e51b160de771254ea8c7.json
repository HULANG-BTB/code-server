{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/issue/electron-browser/issueService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/issue/electron-browser/issueService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar mainProcessService_1 = require(\"vs/platform/ipc/electron-browser/mainProcessService\");\nvar IssueService = /** @class */ (function () {\n    function IssueService(mainProcessService) {\n        this.channel = mainProcessService.getChannel('issue');\n    }\n    IssueService.prototype.openReporter = function (data) {\n        return this.channel.call('openIssueReporter', data);\n    };\n    IssueService.prototype.openProcessExplorer = function (data) {\n        return this.channel.call('openProcessExplorer', data);\n    };\n    IssueService.prototype.getSystemStatus = function () {\n        return this.channel.call('getSystemStatus');\n    };\n    IssueService = tslib_1.__decorate([\n        tslib_1.__param(0, mainProcessService_1.IMainProcessService)\n    ], IssueService);\n    return IssueService;\n}());\nexports.IssueService = IssueService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/issue/electron-browser/issueService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/issue/electron-browser/issueService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAIhG,0FAA0F;AAG1F;IAMC,sBAAiC,kBAAuC;QACvE,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,mCAAY,GAAZ,UAAa,IAAuB;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,0CAAmB,GAAnB,UAAoB,IAAyB;QAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,sCAAe,GAAf;QACC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IApBW,YAAY;QAMX,mBAAA,wCAAmB,CAAA;OANpB,YAAY,CAqBxB;IAAD,mBAAC;CAAA,AArBD,IAqBC;AArBY,oCAAY","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IIssueService, IssueReporterData, ProcessExplorerData } from 'vs/platform/issue/common/issue';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport class IssueService implements IIssueService {\n\n\t_serviceBrand: ServiceIdentifier<any>;\n\n\tprivate channel: IChannel;\n\n\tconstructor(@IMainProcessService mainProcessService: IMainProcessService) {\n\t\tthis.channel = mainProcessService.getChannel('issue');\n\t}\n\n\topenReporter(data: IssueReporterData): Promise<void> {\n\t\treturn this.channel.call('openIssueReporter', data);\n\t}\n\n\topenProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\treturn this.channel.call('openProcessExplorer', data);\n\t}\n\n\tgetSystemStatus(): Promise<string> {\n\t\treturn this.channel.call('getSystemStatus');\n\t}\n}"]}]}