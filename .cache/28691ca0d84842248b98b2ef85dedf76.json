{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/workspaceCommands.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/workspaceCommands.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar workspaceEditing_1 = require(\"vs/workbench/services/workspace/common/workspaceEditing\");\nvar resources = require(\"vs/base/common/resources\");\nvar viewlet_1 = require(\"vs/workbench/services/viewlet/browser/viewlet\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar label_1 = require(\"vs/platform/label/common/label\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar getIconClasses_1 = require(\"vs/editor/common/services/getIconClasses\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nexports.ADD_ROOT_FOLDER_COMMAND_ID = 'addRootFolder';\nexports.ADD_ROOT_FOLDER_LABEL = nls.localize('addFolderToWorkspace', \"Add Folder to Workspace...\");\nexports.PICK_WORKSPACE_FOLDER_COMMAND_ID = '_workbench.pickWorkspaceFolder';\n// Command registration\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'workbench.action.files.openFileFolderInNewWindow',\n    handler: function (accessor) { return accessor.get(dialogs_1.IFileDialogService).pickFileFolderAndOpen({ forceNewWindow: true }); }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: '_files.pickFolderAndOpen',\n    handler: function (accessor, options) { return accessor.get(dialogs_1.IFileDialogService).pickFolderAndOpen(options); }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'workbench.action.files.openFolderInNewWindow',\n    handler: function (accessor) { return accessor.get(dialogs_1.IFileDialogService).pickFolderAndOpen({ forceNewWindow: true }); }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'workbench.action.files.openFileInNewWindow',\n    handler: function (accessor) { return accessor.get(dialogs_1.IFileDialogService).pickFileAndOpen({ forceNewWindow: true }); }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: 'workbench.action.openWorkspaceInNewWindow',\n    handler: function (accessor) { return accessor.get(dialogs_1.IFileDialogService).pickWorkspaceAndOpen({ forceNewWindow: true }); }\n});\ncommands_1.CommandsRegistry.registerCommand({\n    id: exports.ADD_ROOT_FOLDER_COMMAND_ID,\n    handler: function (accessor) {\n        var viewletService = accessor.get(viewlet_1.IViewletService);\n        var workspaceEditingService = accessor.get(workspaceEditing_1.IWorkspaceEditingService);\n        var dialogsService = accessor.get(dialogs_1.IFileDialogService);\n        return dialogsService.showOpenDialog({\n            openLabel: labels_1.mnemonicButtonLabel(nls.localize({ key: 'add', comment: ['&& denotes a mnemonic'] }, \"&&Add\")),\n            title: nls.localize('addFolderToWorkspaceTitle', \"Add Folder to Workspace\"),\n            canSelectFolders: true,\n            canSelectMany: true,\n            defaultUri: dialogsService.defaultFolderPath()\n        }).then(function (folders) {\n            if (!folders || !folders.length) {\n                return null;\n            }\n            // Add and show Files Explorer viewlet\n            return workspaceEditingService.addFolders(folders.map(function (folder) { return ({ uri: resources.removeTrailingPathSeparator(folder) }); }))\n                .then(function () { return viewletService.openViewlet(viewletService.getDefaultViewletId(), true); })\n                .then(function () { return undefined; });\n        });\n    }\n});\ncommands_1.CommandsRegistry.registerCommand(exports.PICK_WORKSPACE_FOLDER_COMMAND_ID, function (accessor, args) {\n    var quickInputService = accessor.get(quickInput_1.IQuickInputService);\n    var labelService = accessor.get(label_1.ILabelService);\n    var contextService = accessor.get(workspace_1.IWorkspaceContextService);\n    var modelService = accessor.get(modelService_1.IModelService);\n    var modeService = accessor.get(modeService_1.IModeService);\n    var folders = contextService.getWorkspace().folders;\n    if (!folders.length) {\n        return undefined;\n    }\n    var folderPicks = folders.map(function (folder) {\n        return {\n            label: folder.name,\n            description: labelService.getUriLabel(resources.dirname(folder.uri), { relative: true }),\n            folder: folder,\n            iconClasses: getIconClasses_1.getIconClasses(modelService, modeService, folder.uri, files_1.FileKind.ROOT_FOLDER)\n        };\n    });\n    var options = (args ? args[0] : undefined) || Object.create(null);\n    if (!options.activeItem) {\n        options.activeItem = folderPicks[0];\n    }\n    if (!options.placeHolder) {\n        options.placeHolder = nls.localize('workspaceFolderPickerPlaceholder', \"Select workspace folder\");\n    }\n    if (typeof options.matchOnDescription !== 'boolean') {\n        options.matchOnDescription = true;\n    }\n    var token = (args ? args[1] : undefined) || cancellation_1.CancellationToken.None;\n    return quickInputService.pick(folderPicks, options, token).then(function (pick) {\n        if (!pick) {\n            return undefined;\n        }\n        return folders[folderPicks.indexOf(pick)];\n    });\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/workspaceCommands.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/actions/workspaceCommands.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspace/common/workspaceEditing';\nimport * as resources from 'vs/base/common/resources';\nimport { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { FileKind } from 'vs/platform/files/common/files';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { IQuickInputService, IPickOptions, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IFileDialogService } from 'vs/platform/dialogs/common/dialogs';\n\nexport const ADD_ROOT_FOLDER_COMMAND_ID = 'addRootFolder';\nexport const ADD_ROOT_FOLDER_LABEL = nls.localize('addFolderToWorkspace', \"Add Folder to Workspace...\");\n\nexport const PICK_WORKSPACE_FOLDER_COMMAND_ID = '_workbench.pickWorkspaceFolder';\n\n// Command registration\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.action.files.openFileFolderInNewWindow',\n\thandler: (accessor: ServicesAccessor) => accessor.get(IFileDialogService).pickFileFolderAndOpen({ forceNewWindow: true })\n});\n\nCommandsRegistry.registerCommand({\n\tid: '_files.pickFolderAndOpen',\n\thandler: (accessor: ServicesAccessor, options: { forceNewWindow: boolean }) => accessor.get(IFileDialogService).pickFolderAndOpen(options)\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.action.files.openFolderInNewWindow',\n\thandler: (accessor: ServicesAccessor) => accessor.get(IFileDialogService).pickFolderAndOpen({ forceNewWindow: true })\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.action.files.openFileInNewWindow',\n\thandler: (accessor: ServicesAccessor) => accessor.get(IFileDialogService).pickFileAndOpen({ forceNewWindow: true })\n});\n\nCommandsRegistry.registerCommand({\n\tid: 'workbench.action.openWorkspaceInNewWindow',\n\thandler: (accessor: ServicesAccessor) => accessor.get(IFileDialogService).pickWorkspaceAndOpen({ forceNewWindow: true })\n});\n\nCommandsRegistry.registerCommand({\n\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\thandler: (accessor) => {\n\t\tconst viewletService = accessor.get(IViewletService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst dialogsService = accessor.get(IFileDialogService);\n\t\treturn dialogsService.showOpenDialog({\n\t\t\topenLabel: mnemonicButtonLabel(nls.localize({ key: 'add', comment: ['&& denotes a mnemonic'] }, \"&&Add\")),\n\t\t\ttitle: nls.localize('addFolderToWorkspaceTitle', \"Add Folder to Workspace\"),\n\t\t\tcanSelectFolders: true,\n\t\t\tcanSelectMany: true,\n\t\t\tdefaultUri: dialogsService.defaultFolderPath()\n\t\t}).then((folders): Promise<any> | null => {\n\t\t\tif (!folders || !folders.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Add and show Files Explorer viewlet\n\t\t\treturn workspaceEditingService.addFolders(folders.map(folder => ({ uri: resources.removeTrailingPathSeparator(folder) })))\n\t\t\t\t.then(() => viewletService.openViewlet(viewletService.getDefaultViewletId(), true))\n\t\t\t\t.then(() => undefined);\n\t\t});\n\t}\n});\n\nCommandsRegistry.registerCommand(PICK_WORKSPACE_FOLDER_COMMAND_ID, function (accessor, args?: [IPickOptions<IQuickPickItem>, CancellationToken]) {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\tconst labelService = accessor.get(ILabelService);\n\tconst contextService = accessor.get(IWorkspaceContextService);\n\tconst modelService = accessor.get(IModelService);\n\tconst modeService = accessor.get(IModeService);\n\n\tconst folders = contextService.getWorkspace().folders;\n\tif (!folders.length) {\n\t\treturn undefined;\n\t}\n\n\tconst folderPicks = folders.map(folder => {\n\t\treturn {\n\t\t\tlabel: folder.name,\n\t\t\tdescription: labelService.getUriLabel(resources.dirname(folder.uri), { relative: true }),\n\t\t\tfolder,\n\t\t\ticonClasses: getIconClasses(modelService, modeService, folder.uri, FileKind.ROOT_FOLDER)\n\t\t} as IQuickPickItem;\n\t});\n\n\tconst options: IPickOptions<IQuickPickItem> = (args ? args[0] : undefined) || Object.create(null);\n\n\tif (!options.activeItem) {\n\t\toptions.activeItem = folderPicks[0];\n\t}\n\n\tif (!options.placeHolder) {\n\t\toptions.placeHolder = nls.localize('workspaceFolderPickerPlaceholder', \"Select workspace folder\");\n\t}\n\n\tif (typeof options.matchOnDescription !== 'boolean') {\n\t\toptions.matchOnDescription = true;\n\t}\n\n\tconst token: CancellationToken = (args ? args[1] : undefined) || CancellationToken.None;\n\n\treturn quickInputService.pick(folderPicks, options, token).then(pick => {\n\t\tif (!pick) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn folders[folderPicks.indexOf(pick)];\n\t});\n});\n"]}]}