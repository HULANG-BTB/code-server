{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDocuments.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDocuments.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errorMessage_1 = require(\"vs/base/common/errorMessage\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar network_1 = require(\"vs/base/common/network\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar modeService_1 = require(\"vs/editor/common/services/modeService\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar untitledEditorService_1 = require(\"vs/workbench/services/untitled/common/untitledEditorService\");\nvar BoundModelReferenceCollection = /** @class */ (function () {\n    function BoundModelReferenceCollection(_maxAge, _maxLength) {\n        if (_maxAge === void 0) { _maxAge = 1000 * 60 * 3; }\n        if (_maxLength === void 0) { _maxLength = 1024 * 1024 * 80; }\n        this._maxAge = _maxAge;\n        this._maxLength = _maxLength;\n        this._data = new Array();\n        this._length = 0;\n        //\n    }\n    BoundModelReferenceCollection.prototype.dispose = function () {\n        this._data = lifecycle_1.dispose(this._data);\n    };\n    BoundModelReferenceCollection.prototype.add = function (ref) {\n        var _this = this;\n        var length = ref.object.textEditorModel.getValueLength();\n        var handle;\n        var entry;\n        var dispose = function () {\n            var idx = _this._data.indexOf(entry);\n            if (idx >= 0) {\n                _this._length -= length;\n                ref.dispose();\n                clearTimeout(handle);\n                _this._data.splice(idx, 1);\n            }\n        };\n        handle = setTimeout(dispose, this._maxAge);\n        entry = { length: length, dispose: dispose };\n        this._data.push(entry);\n        this._length += length;\n        this._cleanup();\n    };\n    BoundModelReferenceCollection.prototype._cleanup = function () {\n        while (this._length > this._maxLength) {\n            this._data[0].dispose();\n        }\n    };\n    return BoundModelReferenceCollection;\n}());\nexports.BoundModelReferenceCollection = BoundModelReferenceCollection;\nvar MainThreadDocuments = /** @class */ (function () {\n    function MainThreadDocuments(documentsAndEditors, extHostContext, modelService, modeService, textFileService, fileService, textModelResolverService, untitledEditorService) {\n        var _this = this;\n        this._modelReferenceCollection = new BoundModelReferenceCollection();\n        this._modelService = modelService;\n        this._textModelResolverService = textModelResolverService;\n        this._textFileService = textFileService;\n        this._fileService = fileService;\n        this._untitledEditorService = untitledEditorService;\n        this._proxy = extHostContext.getProxy(extHost_protocol_1.ExtHostContext.ExtHostDocuments);\n        this._modelIsSynced = {};\n        this._toDispose = [];\n        this._toDispose.push(documentsAndEditors.onDocumentAdd(function (models) { return models.forEach(_this._onModelAdded, _this); }));\n        this._toDispose.push(documentsAndEditors.onDocumentRemove(function (urls) { return urls.forEach(_this._onModelRemoved, _this); }));\n        this._toDispose.push(this._modelReferenceCollection);\n        this._toDispose.push(modelService.onModelModeChanged(this._onModelModeChanged, this));\n        this._toDispose.push(textFileService.models.onModelSaved(function (e) {\n            if (_this._shouldHandleFileEvent(e)) {\n                _this._proxy.$acceptModelSaved(e.resource);\n            }\n        }));\n        this._toDispose.push(textFileService.models.onModelReverted(function (e) {\n            if (_this._shouldHandleFileEvent(e)) {\n                _this._proxy.$acceptDirtyStateChanged(e.resource, false);\n            }\n        }));\n        this._toDispose.push(textFileService.models.onModelDirty(function (e) {\n            if (_this._shouldHandleFileEvent(e)) {\n                _this._proxy.$acceptDirtyStateChanged(e.resource, true);\n            }\n        }));\n        this._modelToDisposeMap = Object.create(null);\n    }\n    MainThreadDocuments.prototype.dispose = function () {\n        var _this = this;\n        Object.keys(this._modelToDisposeMap).forEach(function (modelUrl) {\n            _this._modelToDisposeMap[modelUrl].dispose();\n        });\n        this._modelToDisposeMap = Object.create(null);\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n    };\n    MainThreadDocuments.prototype._shouldHandleFileEvent = function (e) {\n        var model = this._modelService.getModel(e.resource);\n        return !!model && modelService_1.shouldSynchronizeModel(model);\n    };\n    MainThreadDocuments.prototype._onModelAdded = function (model) {\n        var _this = this;\n        // Same filter as in mainThreadEditorsTracker\n        if (!modelService_1.shouldSynchronizeModel(model)) {\n            // don't synchronize too large models\n            return;\n        }\n        var modelUrl = model.uri;\n        this._modelIsSynced[modelUrl.toString()] = true;\n        this._modelToDisposeMap[modelUrl.toString()] = model.onDidChangeContent(function (e) {\n            _this._proxy.$acceptModelChanged(modelUrl, e, _this._textFileService.isDirty(modelUrl));\n        });\n    };\n    MainThreadDocuments.prototype._onModelModeChanged = function (event) {\n        var model = event.model, oldModeId = event.oldModeId;\n        var modelUrl = model.uri;\n        if (!this._modelIsSynced[modelUrl.toString()]) {\n            return;\n        }\n        this._proxy.$acceptModelModeChanged(model.uri, oldModeId, model.getLanguageIdentifier().language);\n    };\n    MainThreadDocuments.prototype._onModelRemoved = function (modelUrl) {\n        var strModelUrl = modelUrl.toString();\n        if (!this._modelIsSynced[strModelUrl]) {\n            return;\n        }\n        delete this._modelIsSynced[strModelUrl];\n        this._modelToDisposeMap[strModelUrl].dispose();\n        delete this._modelToDisposeMap[strModelUrl];\n    };\n    // --- from extension host process\n    MainThreadDocuments.prototype.$trySaveDocument = function (uri) {\n        return this._textFileService.save(uri_1.URI.revive(uri));\n    };\n    MainThreadDocuments.prototype.$tryOpenDocument = function (_uri) {\n        var _this = this;\n        var uri = uri_1.URI.revive(_uri);\n        if (!uri.scheme || !(uri.fsPath || uri.authority)) {\n            return Promise.reject(new Error(\"Invalid uri. Scheme and authority or path must be set.\"));\n        }\n        var promise;\n        switch (uri.scheme) {\n            case network_1.Schemas.untitled:\n                promise = this._handleUntitledScheme(uri);\n                break;\n            case network_1.Schemas.file:\n            default:\n                promise = this._handleAsResourceInput(uri);\n                break;\n        }\n        return promise.then(function (success) {\n            if (!success) {\n                return Promise.reject(new Error('cannot open ' + uri.toString()));\n            }\n            else if (!_this._modelIsSynced[uri.toString()]) {\n                return Promise.reject(new Error('cannot open ' + uri.toString() + '. Detail: Files above 50MB cannot be synchronized with extensions.'));\n            }\n            else {\n                return undefined;\n            }\n        }, function (err) {\n            return Promise.reject(new Error('cannot open ' + uri.toString() + '. Detail: ' + errorMessage_1.toErrorMessage(err)));\n        });\n    };\n    MainThreadDocuments.prototype.$tryCreateDocument = function (options) {\n        return this._doCreateUntitled(undefined, options ? options.language : undefined, options ? options.content : undefined);\n    };\n    MainThreadDocuments.prototype._handleAsResourceInput = function (uri) {\n        var _this = this;\n        return this._textModelResolverService.createModelReference(uri).then(function (ref) {\n            _this._modelReferenceCollection.add(ref);\n            var result = !!ref.object;\n            return result;\n        });\n    };\n    MainThreadDocuments.prototype._handleUntitledScheme = function (uri) {\n        var _this = this;\n        var asFileUri = uri.with({ scheme: network_1.Schemas.file });\n        return this._fileService.resolveFile(asFileUri).then(function (stats) {\n            // don't create a new file ontop of an existing file\n            return Promise.reject(new Error('file already exists on disk'));\n        }, function (err) {\n            return _this._doCreateUntitled(uri).then(function (resource) { return !!resource; });\n        });\n    };\n    MainThreadDocuments.prototype._doCreateUntitled = function (resource, modeId, initialValue) {\n        var _this = this;\n        return this._untitledEditorService.loadOrCreate({\n            resource: resource,\n            modeId: modeId,\n            initialValue: initialValue,\n            useResourcePath: Boolean(resource && resource.path)\n        }).then(function (model) {\n            var resource = model.getResource();\n            if (!_this._modelIsSynced[resource.toString()]) {\n                throw new Error(\"expected URI \" + resource.toString() + \" to have come to LIFE\");\n            }\n            _this._proxy.$acceptDirtyStateChanged(resource, true); // mark as dirty\n            return resource;\n        });\n    };\n    MainThreadDocuments = tslib_1.__decorate([\n        tslib_1.__param(2, modelService_1.IModelService),\n        tslib_1.__param(3, modeService_1.IModeService),\n        tslib_1.__param(4, textfiles_1.ITextFileService),\n        tslib_1.__param(5, files_1.IFileService),\n        tslib_1.__param(6, resolverService_1.ITextModelService),\n        tslib_1.__param(7, untitledEditorService_1.IUntitledEditorService)\n    ], MainThreadDocuments);\n    return MainThreadDocuments;\n}());\nexports.MainThreadDocuments = MainThreadDocuments;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDocuments.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadDocuments.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { IDisposable, IReference, dispose } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelService, shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { MainThreadDocumentsAndEditors } from 'vs/workbench/api/browser/mainThreadDocumentsAndEditors';\nimport { ExtHostContext, ExtHostDocumentsShape, IExtHostContext, MainThreadDocumentsShape } from 'vs/workbench/api/common/extHost.protocol';\nimport { ITextEditorModel } from 'vs/workbench/common/editor';\nimport { ITextFileService, TextFileModelChangeEvent } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';\n\nexport class BoundModelReferenceCollection {\n\n\tprivate _data = new Array<{ length: number, dispose(): void }>();\n\tprivate _length = 0;\n\n\tconstructor(\n\t\tprivate readonly _maxAge: number = 1000 * 60 * 3,\n\t\tprivate readonly _maxLength: number = 1024 * 1024 * 80\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._data = dispose(this._data);\n\t}\n\n\tadd(ref: IReference<ITextEditorModel>): void {\n\t\tconst length = ref.object.textEditorModel.getValueLength();\n\t\tlet handle: any;\n\t\tlet entry: { length: number, dispose(): void };\n\t\tconst dispose = () => {\n\t\t\tconst idx = this._data.indexOf(entry);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._length -= length;\n\t\t\t\tref.dispose();\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tthis._data.splice(idx, 1);\n\t\t\t}\n\t\t};\n\t\thandle = setTimeout(dispose, this._maxAge);\n\t\tentry = { length, dispose };\n\n\t\tthis._data.push(entry);\n\t\tthis._length += length;\n\t\tthis._cleanup();\n\t}\n\n\tprivate _cleanup(): void {\n\t\twhile (this._length > this._maxLength) {\n\t\t\tthis._data[0].dispose();\n\t\t}\n\t}\n}\n\nexport class MainThreadDocuments implements MainThreadDocumentsShape {\n\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _textModelResolverService: ITextModelService;\n\tprivate readonly _textFileService: ITextFileService;\n\tprivate readonly _fileService: IFileService;\n\tprivate readonly _untitledEditorService: IUntitledEditorService;\n\n\tprivate _toDispose: IDisposable[];\n\tprivate _modelToDisposeMap: { [modelUrl: string]: IDisposable; };\n\tprivate readonly _proxy: ExtHostDocumentsShape;\n\tprivate readonly _modelIsSynced: { [modelId: string]: boolean; };\n\tprivate _modelReferenceCollection = new BoundModelReferenceCollection();\n\n\tconstructor(\n\t\tdocumentsAndEditors: MainThreadDocumentsAndEditors,\n\t\textHostContext: IExtHostContext,\n\t\t@IModelService modelService: IModelService,\n\t\t@IModeService modeService: IModeService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IUntitledEditorService untitledEditorService: IUntitledEditorService,\n\t) {\n\t\tthis._modelService = modelService;\n\t\tthis._textModelResolverService = textModelResolverService;\n\t\tthis._textFileService = textFileService;\n\t\tthis._fileService = fileService;\n\t\tthis._untitledEditorService = untitledEditorService;\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocuments);\n\t\tthis._modelIsSynced = {};\n\n\t\tthis._toDispose = [];\n\t\tthis._toDispose.push(documentsAndEditors.onDocumentAdd(models => models.forEach(this._onModelAdded, this)));\n\t\tthis._toDispose.push(documentsAndEditors.onDocumentRemove(urls => urls.forEach(this._onModelRemoved, this)));\n\t\tthis._toDispose.push(this._modelReferenceCollection);\n\t\tthis._toDispose.push(modelService.onModelModeChanged(this._onModelModeChanged, this));\n\n\t\tthis._toDispose.push(textFileService.models.onModelSaved(e => {\n\t\t\tif (this._shouldHandleFileEvent(e)) {\n\t\t\t\tthis._proxy.$acceptModelSaved(e.resource);\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.push(textFileService.models.onModelReverted(e => {\n\t\t\tif (this._shouldHandleFileEvent(e)) {\n\t\t\t\tthis._proxy.$acceptDirtyStateChanged(e.resource, false);\n\t\t\t}\n\t\t}));\n\t\tthis._toDispose.push(textFileService.models.onModelDirty(e => {\n\t\t\tif (this._shouldHandleFileEvent(e)) {\n\t\t\t\tthis._proxy.$acceptDirtyStateChanged(e.resource, true);\n\t\t\t}\n\t\t}));\n\n\t\tthis._modelToDisposeMap = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this._modelToDisposeMap).forEach((modelUrl) => {\n\t\t\tthis._modelToDisposeMap[modelUrl].dispose();\n\t\t});\n\t\tthis._modelToDisposeMap = Object.create(null);\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprivate _shouldHandleFileEvent(e: TextFileModelChangeEvent): boolean {\n\t\tconst model = this._modelService.getModel(e.resource);\n\t\treturn !!model && shouldSynchronizeModel(model);\n\t}\n\n\tprivate _onModelAdded(model: ITextModel): void {\n\t\t// Same filter as in mainThreadEditorsTracker\n\t\tif (!shouldSynchronizeModel(model)) {\n\t\t\t// don't synchronize too large models\n\t\t\treturn;\n\t\t}\n\t\tconst modelUrl = model.uri;\n\t\tthis._modelIsSynced[modelUrl.toString()] = true;\n\t\tthis._modelToDisposeMap[modelUrl.toString()] = model.onDidChangeContent((e) => {\n\t\t\tthis._proxy.$acceptModelChanged(modelUrl, e, this._textFileService.isDirty(modelUrl));\n\t\t});\n\t}\n\n\tprivate _onModelModeChanged(event: { model: ITextModel; oldModeId: string; }): void {\n\t\tlet { model, oldModeId } = event;\n\t\tconst modelUrl = model.uri;\n\t\tif (!this._modelIsSynced[modelUrl.toString()]) {\n\t\t\treturn;\n\t\t}\n\t\tthis._proxy.$acceptModelModeChanged(model.uri, oldModeId, model.getLanguageIdentifier().language);\n\t}\n\n\tprivate _onModelRemoved(modelUrl: URI): void {\n\t\tconst strModelUrl = modelUrl.toString();\n\t\tif (!this._modelIsSynced[strModelUrl]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._modelIsSynced[strModelUrl];\n\t\tthis._modelToDisposeMap[strModelUrl].dispose();\n\t\tdelete this._modelToDisposeMap[strModelUrl];\n\t}\n\n\t// --- from extension host process\n\n\t$trySaveDocument(uri: UriComponents): Promise<boolean> {\n\t\treturn this._textFileService.save(URI.revive(uri));\n\t}\n\n\t$tryOpenDocument(_uri: UriComponents): Promise<any> {\n\t\tconst uri = URI.revive(_uri);\n\t\tif (!uri.scheme || !(uri.fsPath || uri.authority)) {\n\t\t\treturn Promise.reject(new Error(`Invalid uri. Scheme and authority or path must be set.`));\n\t\t}\n\n\t\tlet promise: Promise<boolean>;\n\t\tswitch (uri.scheme) {\n\t\t\tcase Schemas.untitled:\n\t\t\t\tpromise = this._handleUntitledScheme(uri);\n\t\t\t\tbreak;\n\t\t\tcase Schemas.file:\n\t\t\tdefault:\n\t\t\t\tpromise = this._handleAsResourceInput(uri);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn promise.then(success => {\n\t\t\tif (!success) {\n\t\t\t\treturn Promise.reject(new Error('cannot open ' + uri.toString()));\n\t\t\t} else if (!this._modelIsSynced[uri.toString()]) {\n\t\t\t\treturn Promise.reject(new Error('cannot open ' + uri.toString() + '. Detail: Files above 50MB cannot be synchronized with extensions.'));\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}, err => {\n\t\t\treturn Promise.reject(new Error('cannot open ' + uri.toString() + '. Detail: ' + toErrorMessage(err)));\n\t\t});\n\t}\n\n\t$tryCreateDocument(options?: { language?: string, content?: string }): Promise<URI> {\n\t\treturn this._doCreateUntitled(undefined, options ? options.language : undefined, options ? options.content : undefined);\n\t}\n\n\tprivate _handleAsResourceInput(uri: URI): Promise<boolean> {\n\t\treturn this._textModelResolverService.createModelReference(uri).then(ref => {\n\t\t\tthis._modelReferenceCollection.add(ref);\n\t\t\tconst result = !!ref.object;\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate _handleUntitledScheme(uri: URI): Promise<boolean> {\n\t\tconst asFileUri = uri.with({ scheme: Schemas.file });\n\t\treturn this._fileService.resolveFile(asFileUri).then(stats => {\n\t\t\t// don't create a new file ontop of an existing file\n\t\t\treturn Promise.reject(new Error('file already exists on disk'));\n\t\t}, err => {\n\t\t\treturn this._doCreateUntitled(uri).then(resource => !!resource);\n\t\t});\n\t}\n\n\tprivate _doCreateUntitled(resource?: URI, modeId?: string, initialValue?: string): Promise<URI> {\n\t\treturn this._untitledEditorService.loadOrCreate({\n\t\t\tresource,\n\t\t\tmodeId,\n\t\t\tinitialValue,\n\t\t\tuseResourcePath: Boolean(resource && resource.path)\n\t\t}).then(model => {\n\t\t\tconst resource = model.getResource();\n\n\t\t\tif (!this._modelIsSynced[resource.toString()]) {\n\t\t\t\tthrow new Error(`expected URI ${resource.toString()} to have come to LIFE`);\n\t\t\t}\n\n\t\t\tthis._proxy.$acceptDirtyStateChanged(resource, true); // mark as dirty\n\n\t\t\treturn resource;\n\t\t});\n\t}\n}\n"]}]}