{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/experiments/electron-browser/experiments.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/experiments/electron-browser/experiments.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar experimentService_1 = require(\"vs/workbench/contrib/experiments/node/experimentService\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar experimentalPrompt_1 = require(\"vs/workbench/contrib/experiments/electron-browser/experimentalPrompt\");\nextensions_1.registerSingleton(experimentService_1.IExperimentService, experimentService_1.ExperimentService, true);\nplatform_1.Registry.as(contributions_1.Extensions.Workbench).registerWorkbenchContribution(experimentalPrompt_1.ExperimentalPrompts, lifecycle_1.LifecyclePhase.Eventually);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/experiments/electron-browser/experiments.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/experiments/electron-browser/experiments.contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,0EAAgF;AAChF,6FAAgH;AAChH,iEAAgE;AAChE,mEAAuH;AACvH,oEAAwE;AACxE,2GAA2G;AAE3G,8BAAiB,CAAC,sCAAkB,EAAE,qCAAiB,EAAE,IAAI,CAAC,CAAC;AAE/D,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC,CAAC,6BAA6B,CAAC,wCAAmB,EAAE,0BAAc,CAAC,UAAU,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IExperimentService, ExperimentService } from 'vs/workbench/contrib/experiments/node/experimentService';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\nimport { ExperimentalPrompts } from 'vs/workbench/contrib/experiments/electron-browser/experimentalPrompt';\n\nregisterSingleton(IExperimentService, ExperimentService, true);\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(ExperimentalPrompts, LifecyclePhase.Eventually);\n"]}]}