{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar theme_1 = require(\"vs/workbench/common/theme\");\n/**\n * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n * of the color in the terminal color table.\n */\nexports.ansiColorIdentifiers = [];\nexports.TERMINAL_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminal.background', {\n    dark: theme_1.PANEL_BACKGROUND,\n    light: theme_1.PANEL_BACKGROUND,\n    hc: theme_1.PANEL_BACKGROUND\n}, nls.localize('terminal.background', 'The background color of the terminal, this allows coloring the terminal differently to the panel.'));\nexports.TERMINAL_FOREGROUND_COLOR = colorRegistry_1.registerColor('terminal.foreground', {\n    light: '#333333',\n    dark: '#CCCCCC',\n    hc: '#FFFFFF'\n}, nls.localize('terminal.foreground', 'The foreground color of the terminal.'));\nexports.TERMINAL_CURSOR_FOREGROUND_COLOR = colorRegistry_1.registerColor('terminalCursor.foreground', null, nls.localize('terminalCursor.foreground', 'The foreground color of the terminal cursor.'));\nexports.TERMINAL_CURSOR_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminalCursor.background', null, nls.localize('terminalCursor.background', 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexports.TERMINAL_SELECTION_BACKGROUND_COLOR = colorRegistry_1.registerColor('terminal.selectionBackground', {\n    light: '#00000040',\n    dark: '#FFFFFF40',\n    hc: '#FFFFFF80'\n}, nls.localize('terminal.selectionBackground', 'The selection background color of the terminal.'));\nexports.TERMINAL_BORDER_COLOR = colorRegistry_1.registerColor('terminal.border', {\n    dark: theme_1.PANEL_BORDER,\n    light: theme_1.PANEL_BORDER,\n    hc: theme_1.PANEL_BORDER\n}, nls.localize('terminal.border', 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'));\nvar ansiColorMap = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hc: '#000000'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hc: '#cd0000'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hc: '#00cd00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hc: '#cdcd00'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hc: '#0000ee'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hc: '#cd00cd'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hc: '#00cdcd'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hc: '#e5e5e5'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hc: '#7f7f7f'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hc: '#ff0000'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hc: '#00ff00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hc: '#ffff00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hc: '#5c5cff'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hc: '#ff00ff'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hc: '#00ffff'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hc: '#ffffff'\n        }\n    }\n};\nfunction registerColors() {\n    for (var id in ansiColorMap) {\n        var entry = ansiColorMap[id];\n        var colorName = id.substring(13);\n        exports.ansiColorIdentifiers[entry.index] = colorRegistry_1.registerColor(id, entry.defaults, nls.localize('terminal.ansiColor', '\\'{0}\\' ANSI color in the terminal.', colorName));\n    }\n}\nexports.registerColors = registerColors;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport { registerColor, ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';\nimport { PANEL_BORDER, PANEL_BACKGROUND } from 'vs/workbench/common/theme';\n\n/**\n * The color identifiers for the terminal's ansi colors. The index in the array corresponds to the index\n * of the color in the terminal color table.\n */\nexport const ansiColorIdentifiers: ColorIdentifier[] = [];\n\nexport const TERMINAL_BACKGROUND_COLOR = registerColor('terminal.background', {\n\tdark: PANEL_BACKGROUND,\n\tlight: PANEL_BACKGROUND,\n\thc: PANEL_BACKGROUND\n}, nls.localize('terminal.background', 'The background color of the terminal, this allows coloring the terminal differently to the panel.'));\nexport const TERMINAL_FOREGROUND_COLOR = registerColor('terminal.foreground', {\n\tlight: '#333333',\n\tdark: '#CCCCCC',\n\thc: '#FFFFFF'\n}, nls.localize('terminal.foreground', 'The foreground color of the terminal.'));\nexport const TERMINAL_CURSOR_FOREGROUND_COLOR = registerColor('terminalCursor.foreground', null, nls.localize('terminalCursor.foreground', 'The foreground color of the terminal cursor.'));\nexport const TERMINAL_CURSOR_BACKGROUND_COLOR = registerColor('terminalCursor.background', null, nls.localize('terminalCursor.background', 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const TERMINAL_SELECTION_BACKGROUND_COLOR = registerColor('terminal.selectionBackground', {\n\tlight: '#00000040',\n\tdark: '#FFFFFF40',\n\thc: '#FFFFFF80'\n}, nls.localize('terminal.selectionBackground', 'The selection background color of the terminal.'));\nexport const TERMINAL_BORDER_COLOR = registerColor('terminal.border', {\n\tdark: PANEL_BORDER,\n\tlight: PANEL_BORDER,\n\thc: PANEL_BORDER\n}, nls.localize('terminal.border', 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'));\n\nconst ansiColorMap = {\n\t'terminal.ansiBlack': {\n\t\tindex: 0,\n\t\tdefaults: {\n\t\t\tlight: '#000000',\n\t\t\tdark: '#000000',\n\t\t\thc: '#000000'\n\t\t}\n\t},\n\t'terminal.ansiRed': {\n\t\tindex: 1,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#cd3131',\n\t\t\thc: '#cd0000'\n\t\t}\n\t},\n\t'terminal.ansiGreen': {\n\t\tindex: 2,\n\t\tdefaults: {\n\t\t\tlight: '#00BC00',\n\t\t\tdark: '#0DBC79',\n\t\t\thc: '#00cd00'\n\t\t}\n\t},\n\t'terminal.ansiYellow': {\n\t\tindex: 3,\n\t\tdefaults: {\n\t\t\tlight: '#949800',\n\t\t\tdark: '#e5e510',\n\t\t\thc: '#cdcd00'\n\t\t}\n\t},\n\t'terminal.ansiBlue': {\n\t\tindex: 4,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#2472c8',\n\t\t\thc: '#0000ee'\n\t\t}\n\t},\n\t'terminal.ansiMagenta': {\n\t\tindex: 5,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#bc3fbc',\n\t\t\thc: '#cd00cd'\n\t\t}\n\t},\n\t'terminal.ansiCyan': {\n\t\tindex: 6,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#11a8cd',\n\t\t\thc: '#00cdcd'\n\t\t}\n\t},\n\t'terminal.ansiWhite': {\n\t\tindex: 7,\n\t\tdefaults: {\n\t\t\tlight: '#555555',\n\t\t\tdark: '#e5e5e5',\n\t\t\thc: '#e5e5e5'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlack': {\n\t\tindex: 8,\n\t\tdefaults: {\n\t\t\tlight: '#666666',\n\t\t\tdark: '#666666',\n\t\t\thc: '#7f7f7f'\n\t\t}\n\t},\n\t'terminal.ansiBrightRed': {\n\t\tindex: 9,\n\t\tdefaults: {\n\t\t\tlight: '#cd3131',\n\t\t\tdark: '#f14c4c',\n\t\t\thc: '#ff0000'\n\t\t}\n\t},\n\t'terminal.ansiBrightGreen': {\n\t\tindex: 10,\n\t\tdefaults: {\n\t\t\tlight: '#14CE14',\n\t\t\tdark: '#23d18b',\n\t\t\thc: '#00ff00'\n\t\t}\n\t},\n\t'terminal.ansiBrightYellow': {\n\t\tindex: 11,\n\t\tdefaults: {\n\t\t\tlight: '#b5ba00',\n\t\t\tdark: '#f5f543',\n\t\t\thc: '#ffff00'\n\t\t}\n\t},\n\t'terminal.ansiBrightBlue': {\n\t\tindex: 12,\n\t\tdefaults: {\n\t\t\tlight: '#0451a5',\n\t\t\tdark: '#3b8eea',\n\t\t\thc: '#5c5cff'\n\t\t}\n\t},\n\t'terminal.ansiBrightMagenta': {\n\t\tindex: 13,\n\t\tdefaults: {\n\t\t\tlight: '#bc05bc',\n\t\t\tdark: '#d670d6',\n\t\t\thc: '#ff00ff'\n\t\t}\n\t},\n\t'terminal.ansiBrightCyan': {\n\t\tindex: 14,\n\t\tdefaults: {\n\t\t\tlight: '#0598bc',\n\t\t\tdark: '#29b8db',\n\t\t\thc: '#00ffff'\n\t\t}\n\t},\n\t'terminal.ansiBrightWhite': {\n\t\tindex: 15,\n\t\tdefaults: {\n\t\t\tlight: '#a5a5a5',\n\t\t\tdark: '#e5e5e5',\n\t\t\thc: '#ffffff'\n\t\t}\n\t}\n};\n\nexport function registerColors(): void {\n\tfor (const id in ansiColorMap) {\n\t\tconst entry = ansiColorMap[id];\n\t\tconst colorName = id.substring(13);\n\t\tansiColorIdentifiers[entry.index] = registerColor(id, entry.defaults, nls.localize('terminal.ansiColor', '\\'{0}\\' ANSI color in the terminal.', colorName));\n\t}\n}\n"]}]}