{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/packages/vscode/src/fill/product.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/product.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class Product {\n        constructor() {\n            this.nameShort = \"code-server\";\n            this.nameLong = \"code-server\";\n            this.documentationUrl = \"https://code.visualstudio.com/docs\";\n            this.keyboardShortcutsUrlMac = \"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf\";\n            this.keyboardShortcutsUrlLinux = \"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf\";\n            this.keyboardShortcutsUrlWin = \"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf\";\n            this.introductoryVideosUrl = \"https://code.visualstudio.com/docs/getstarted/introvideos\";\n            this.tipsAndTricksUrl = \"https://code.visualstudio.com/docs/getstarted/tips-and-tricks\";\n            this.twitterUrl = \"https://twitter.com/code\";\n            this.licenseUrl = \"https://github.com/codercom/code-server/blob/master/LICENSE\";\n            this.aiConfig = process.env.DISABLE_TELEMETRY ? undefined : {\n                // Only needed so vscode can see that content exists for this value.\n                // We override the application insights module.\n                asimovKey: \"content\",\n            };\n            this.enableTelemetry = process.env.DISABLE_TELEMETRY ? false : true;\n            this.extensionsGallery = {\n                serviceUrl: global && global.process && global.process.env.SERVICE_URL\n                    || process.env.SERVICE_URL\n                    || \"https://v1.extapi.coder.com\",\n            };\n            this.extensionExecutionEnvironments = {\n                \"wayou.vscode-todo-highlight\": \"worker\",\n                \"vscodevim.vim\": \"worker\",\n                \"coenraads.bracket-pair-colorizer\": \"worker\",\n            };\n            this.fetchUrl = \"\";\n        }\n        get dataFolderName() {\n            if (!this._dataFolderName) {\n                throw new Error(\"trying to access data folder name before it has been set\");\n            }\n            return this._dataFolderName;\n        }\n        initialize(_data) {\n            // Nothing at the moment; dataFolderName isn't used since we override the\n            // extension path.\n        }\n    }\n    exports.default = new Product();\n});\n",null]}