{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersFileDecorations.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersFileDecorations.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar markers_1 = require(\"vs/platform/markers/common/markers\");\nvar decorations_1 = require(\"vs/workbench/services/decorations/browser/decorations\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar nls_1 = require(\"vs/nls\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nvar lifecycle_2 = require(\"vs/platform/lifecycle/common/lifecycle\");\nvar MarkersDecorationsProvider = /** @class */ (function () {\n    function MarkersDecorationsProvider(_markerService) {\n        this._markerService = _markerService;\n        this.label = nls_1.localize('label', \"Problems\");\n        this.onDidChange = _markerService.onMarkerChanged;\n    }\n    MarkersDecorationsProvider.prototype.provideDecorations = function (resource) {\n        var markers = this._markerService.read({\n            resource: resource,\n            severities: markers_1.MarkerSeverity.Error | markers_1.MarkerSeverity.Warning\n        });\n        var first;\n        for (var _i = 0, markers_2 = markers; _i < markers_2.length; _i++) {\n            var marker = markers_2[_i];\n            if (!first || marker.severity > first.severity) {\n                first = marker;\n            }\n        }\n        if (!first) {\n            return undefined;\n        }\n        return {\n            weight: 100 * first.severity,\n            bubble: true,\n            tooltip: markers.length === 1 ? nls_1.localize('tooltip.1', \"1 problem in this file\") : nls_1.localize('tooltip.N', \"{0} problems in this file\", markers.length),\n            letter: markers.length < 10 ? markers.length.toString() : '9+',\n            color: first.severity === markers_1.MarkerSeverity.Error ? colorRegistry_1.listErrorForeground : colorRegistry_1.listWarningForeground,\n        };\n    };\n    return MarkersDecorationsProvider;\n}());\nvar MarkersFileDecorations = /** @class */ (function () {\n    function MarkersFileDecorations(_markerService, _decorationsService, _configurationService) {\n        this._markerService = _markerService;\n        this._decorationsService = _decorationsService;\n        this._configurationService = _configurationService;\n        //\n        this._disposables = [\n            this._configurationService.onDidChangeConfiguration(this._updateEnablement, this),\n        ];\n        this._updateEnablement();\n    }\n    MarkersFileDecorations.prototype.dispose = function () {\n        lifecycle_1.dispose(this._provider);\n        lifecycle_1.dispose(this._disposables);\n    };\n    MarkersFileDecorations.prototype._updateEnablement = function () {\n        var value = this._configurationService.getValue('problems');\n        if (value.decorations.enabled === this._enabled) {\n            return;\n        }\n        this._enabled = value.decorations.enabled;\n        if (this._enabled) {\n            var provider = new MarkersDecorationsProvider(this._markerService);\n            this._provider = this._decorationsService.registerDecorationsProvider(provider);\n        }\n        else if (this._provider) {\n            this._enabled = value.decorations.enabled;\n            this._provider.dispose();\n        }\n    };\n    MarkersFileDecorations = tslib_1.__decorate([\n        tslib_1.__param(0, markers_1.IMarkerService),\n        tslib_1.__param(1, decorations_1.IDecorationsService),\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], MarkersFileDecorations);\n    return MarkersFileDecorations;\n}());\nplatform_1.Registry.as(configurationRegistry_1.Extensions.Configuration).registerConfiguration({\n    'id': 'problems',\n    'order': 101,\n    'type': 'object',\n    'properties': {\n        'problems.decorations.enabled': {\n            'description': nls_1.localize('markers.showOnFile', \"Show Errors & Warnings on files and folder.\"),\n            'type': 'boolean',\n            'default': true\n        }\n    }\n});\n// register file decorations\nplatform_1.Registry.as(contributions_1.Extensions.Workbench)\n    .registerWorkbenchContribution(MarkersFileDecorations, lifecycle_2.LifecyclePhase.Restored);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersFileDecorations.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/markers/browser/markersFileDecorations.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchContribution, IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { IMarkerService, IMarker, MarkerSeverity } from 'vs/platform/markers/common/markers';\nimport { IDecorationsService, IDecorationsProvider, IDecorationData } from 'vs/workbench/services/decorations/browser/decorations';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { listErrorForeground, listWarningForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\n\nclass MarkersDecorationsProvider implements IDecorationsProvider {\n\n\treadonly label: string = localize('label', \"Problems\");\n\treadonly onDidChange: Event<URI[]>;\n\n\tconstructor(\n\t\tprivate readonly _markerService: IMarkerService\n\t) {\n\t\tthis.onDidChange = _markerService.onMarkerChanged;\n\t}\n\n\tprovideDecorations(resource: URI): IDecorationData | undefined {\n\t\tlet markers = this._markerService.read({\n\t\t\tresource,\n\t\t\tseverities: MarkerSeverity.Error | MarkerSeverity.Warning\n\t\t});\n\t\tlet first: IMarker | undefined;\n\t\tfor (const marker of markers) {\n\t\t\tif (!first || marker.severity > first.severity) {\n\t\t\t\tfirst = marker;\n\t\t\t}\n\t\t}\n\n\t\tif (!first) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tweight: 100 * first.severity,\n\t\t\tbubble: true,\n\t\t\ttooltip: markers.length === 1 ? localize('tooltip.1', \"1 problem in this file\") : localize('tooltip.N', \"{0} problems in this file\", markers.length),\n\t\t\tletter: markers.length < 10 ? markers.length.toString() : '9+',\n\t\t\tcolor: first.severity === MarkerSeverity.Error ? listErrorForeground : listWarningForeground,\n\t\t};\n\t}\n}\n\nclass MarkersFileDecorations implements IWorkbenchContribution {\n\n\tprivate readonly _disposables: IDisposable[];\n\tprivate _provider: IDisposable;\n\tprivate _enabled: boolean;\n\n\tconstructor(\n\t\t@IMarkerService private readonly _markerService: IMarkerService,\n\t\t@IDecorationsService private readonly _decorationsService: IDecorationsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\t//\n\t\tthis._disposables = [\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateEnablement, this),\n\t\t];\n\t\tthis._updateEnablement();\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._provider);\n\t\tdispose(this._disposables);\n\t}\n\n\tprivate _updateEnablement(): void {\n\t\tlet value = this._configurationService.getValue<{ decorations: { enabled: boolean } }>('problems');\n\t\tif (value.decorations.enabled === this._enabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._enabled = value.decorations.enabled;\n\t\tif (this._enabled) {\n\t\t\tconst provider = new MarkersDecorationsProvider(this._markerService);\n\t\t\tthis._provider = this._decorationsService.registerDecorationsProvider(provider);\n\t\t} else if (this._provider) {\n\t\t\tthis._enabled = value.decorations.enabled;\n\t\t\tthis._provider.dispose();\n\t\t}\n\t}\n}\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\t'id': 'problems',\n\t'order': 101,\n\t'type': 'object',\n\t'properties': {\n\t\t'problems.decorations.enabled': {\n\t\t\t'description': localize('markers.showOnFile', \"Show Errors & Warnings on files and folder.\"),\n\t\t\t'type': 'boolean',\n\t\t\t'default': true\n\t\t}\n\t}\n});\n\n// register file decorations\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(MarkersFileDecorations, LifecyclePhase.Restored);\n"]}]}