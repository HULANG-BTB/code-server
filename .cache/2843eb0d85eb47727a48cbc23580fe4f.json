{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchView.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchView.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom = require(\"vs/base/browser/dom\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar aria = require(\"vs/base/browser/ui/aria/aria\");\nvar inputBox_1 = require(\"vs/base/browser/ui/inputbox/inputBox\");\nvar async_1 = require(\"vs/base/common/async\");\nvar errors = require(\"vs/base/common/errors\");\nvar event_1 = require(\"vs/base/common/event\");\nvar iterator_1 = require(\"vs/base/common/iterator\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar env = require(\"vs/base/common/platform\");\nvar strings = require(\"vs/base/common/strings\");\nrequire(\"vs/css!./media/searchview\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar nls = require(\"vs/nls\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar actions_1 = require(\"vs/platform/actions/common/actions\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar dialogs_1 = require(\"vs/platform/dialogs/common/dialogs\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar listService_1 = require(\"vs/platform/list/browser/listService\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar progress_1 = require(\"vs/platform/progress/common/progress\");\nvar search_1 = require(\"vs/workbench/services/search/common/search\");\nvar searchHistoryService_1 = require(\"vs/workbench/contrib/search/common/searchHistoryService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar workspace_1 = require(\"vs/platform/workspace/common/workspace\");\nvar workspaceActions_1 = require(\"vs/workbench/browser/actions/workspaceActions\");\nvar labels_1 = require(\"vs/workbench/browser/labels\");\nvar patternInputWidget_1 = require(\"vs/workbench/contrib/search/browser/patternInputWidget\");\nvar searchActions_1 = require(\"vs/workbench/contrib/search/browser/searchActions\");\nvar searchResultsView_1 = require(\"vs/workbench/contrib/search/browser/searchResultsView\");\nvar searchWidget_1 = require(\"vs/workbench/contrib/search/browser/searchWidget\");\nvar Constants = require(\"vs/workbench/contrib/search/common/constants\");\nvar queryBuilder_1 = require(\"vs/workbench/contrib/search/common/queryBuilder\");\nvar replace_1 = require(\"vs/workbench/contrib/search/common/replace\");\nvar search_2 = require(\"vs/workbench/contrib/search/common/search\");\nvar searchModel_1 = require(\"vs/workbench/contrib/search/common/searchModel\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorGroupsService_1 = require(\"vs/workbench/services/editor/common/editorGroupsService\");\nvar preferences_1 = require(\"vs/workbench/services/preferences/common/preferences\");\nvar untitledEditorService_1 = require(\"vs/workbench/services/untitled/common/untitledEditorService\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar accessibility_1 = require(\"vs/platform/accessibility/common/accessibility\");\nvar panelViewlet_1 = require(\"vs/workbench/browser/parts/views/panelViewlet\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar memento_1 = require(\"vs/workbench/common/memento\");\nvar storage_1 = require(\"vs/platform/storage/common/storage\");\nvar $ = dom.$;\nvar SearchView = /** @class */ (function (_super) {\n    tslib_1.__extends(SearchView, _super);\n    function SearchView(options, fileService, editorService, progressService, notificationService, dialogService, contextViewService, instantiationService, configurationService, contextService, searchWorkbenchService, contextKeyService, replaceService, untitledEditorService, preferencesService, themeService, searchHistoryService, editorGroupsService, contextMenuService, menuService, accessibilityService, keybindingService, storageService) {\n        var _this = _super.call(this, tslib_1.__assign({}, options, { id: search_1.VIEW_ID, ariaHeaderLabel: nls.localize('searchView', \"Search\") }), keybindingService, contextMenuService, configurationService) || this;\n        _this.fileService = fileService;\n        _this.editorService = editorService;\n        _this.progressService = progressService;\n        _this.notificationService = notificationService;\n        _this.dialogService = dialogService;\n        _this.contextViewService = contextViewService;\n        _this.instantiationService = instantiationService;\n        _this.contextService = contextService;\n        _this.searchWorkbenchService = searchWorkbenchService;\n        _this.contextKeyService = contextKeyService;\n        _this.replaceService = replaceService;\n        _this.untitledEditorService = untitledEditorService;\n        _this.preferencesService = preferencesService;\n        _this.themeService = themeService;\n        _this.searchHistoryService = searchHistoryService;\n        _this.editorGroupsService = editorGroupsService;\n        _this.menuService = menuService;\n        _this.accessibilityService = accessibilityService;\n        _this.actions = [];\n        _this.messageDisposables = [];\n        _this.currentSearchQ = Promise.resolve();\n        _this.addClickEvents = function (element, handler) {\n            _this.messageDisposables.push(dom.addDisposableListener(element, dom.EventType.CLICK, handler));\n            _this.messageDisposables.push(dom.addDisposableListener(element, dom.EventType.KEY_DOWN, function (e) {\n                var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n                var eventHandled = true;\n                if (event.equals(keyCodes_1.KeyCode.Space) || event.equals(keyCodes_1.KeyCode.Enter)) {\n                    handler(e);\n                }\n                else {\n                    eventHandled = false;\n                }\n                if (eventHandled) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            }));\n        };\n        _this.onOpenSettings = function (e) {\n            dom.EventHelper.stop(e, false);\n            _this.openSettings('.exclude');\n        };\n        _this.onLearnMore = function (e) {\n            dom.EventHelper.stop(e, false);\n            window.open('https://go.microsoft.com/fwlink/?linkid=853977');\n        };\n        _this._toDispose = [];\n        _this.viewletVisible = Constants.SearchViewVisibleKey.bindTo(contextKeyService);\n        _this.viewletFocused = Constants.SearchViewFocusedKey.bindTo(contextKeyService);\n        _this.inputBoxFocused = Constants.InputBoxFocusedKey.bindTo(_this.contextKeyService);\n        _this.inputPatternIncludesFocused = Constants.PatternIncludesFocusedKey.bindTo(_this.contextKeyService);\n        _this.inputPatternExclusionsFocused = Constants.PatternExcludesFocusedKey.bindTo(_this.contextKeyService);\n        _this.firstMatchFocused = Constants.FirstMatchFocusKey.bindTo(contextKeyService);\n        _this.fileMatchOrMatchFocused = Constants.FileMatchOrMatchFocusKey.bindTo(contextKeyService);\n        _this.fileMatchOrFolderMatchFocus = Constants.FileMatchOrFolderMatchFocusKey.bindTo(contextKeyService);\n        _this.fileMatchFocused = Constants.FileFocusKey.bindTo(contextKeyService);\n        _this.folderMatchFocused = Constants.FolderFocusKey.bindTo(contextKeyService);\n        _this.matchFocused = Constants.MatchFocusKey.bindTo(_this.contextKeyService);\n        _this.hasSearchResultsKey = Constants.HasSearchResults.bindTo(_this.contextKeyService);\n        _this.queryBuilder = _this.instantiationService.createInstance(queryBuilder_1.QueryBuilder);\n        _this.memento = new memento_1.Memento(_this.id, storageService);\n        _this.viewletState = _this.memento.getMemento(storage_1.StorageScope.WORKSPACE);\n        _this.globalMemento = _this.memento.getMemento(storage_1.StorageScope.GLOBAL);\n        _this._register(_this.fileService.onFileChanges(function (e) { return _this.onFilesChanged(e); }));\n        _this._register(_this.untitledEditorService.onDidChangeDirty(function (e) { return _this.onUntitledDidChangeDirty(e); }));\n        _this._register(_this.contextService.onDidChangeWorkbenchState(function () { return _this.onDidChangeWorkbenchState(); }));\n        _this._register(_this.searchHistoryService.onDidClearHistory(function () { return _this.clearHistory(); }));\n        _this.selectCurrentMatchEmitter = _this._register(new event_1.Emitter());\n        _this._register(event_1.Event.debounce(_this.selectCurrentMatchEmitter.event, function (l, e) { return e; }, 100, /*leading=*/ true)(function () { return _this.selectCurrentMatch(); }));\n        _this.delayedRefresh = _this._register(new async_1.Delayer(250));\n        _this.actions = [\n            _this._register(_this.instantiationService.createInstance(searchActions_1.ClearSearchResultsAction, searchActions_1.ClearSearchResultsAction.ID, searchActions_1.ClearSearchResultsAction.LABEL)),\n            _this._register(_this.instantiationService.createInstance(searchActions_1.CollapseDeepestExpandedLevelAction, searchActions_1.CollapseDeepestExpandedLevelAction.ID, searchActions_1.CollapseDeepestExpandedLevelAction.LABEL))\n        ];\n        _this.refreshAction = _this._register(_this.instantiationService.createInstance(searchActions_1.RefreshAction, searchActions_1.RefreshAction.ID, searchActions_1.RefreshAction.LABEL));\n        _this.cancelAction = _this._register(_this.instantiationService.createInstance(searchActions_1.CancelSearchAction, searchActions_1.CancelSearchAction.ID, searchActions_1.CancelSearchAction.LABEL));\n        return _this;\n    }\n    SearchView.prototype.getContainer = function () {\n        return this.container;\n    };\n    Object.defineProperty(SearchView.prototype, \"searchResult\", {\n        get: function () {\n            return this.viewModel && this.viewModel.searchResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchView.prototype.onDidChangeWorkbenchState = function () {\n        if (this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY && this.searchWithoutFolderMessageElement) {\n            dom.hide(this.searchWithoutFolderMessageElement);\n        }\n    };\n    SearchView.prototype.renderBody = function (parent) {\n        var _this = this;\n        this.viewModel = this._register(this.searchWorkbenchService.searchModel);\n        this.container = dom.append(parent, dom.$('.search-view'));\n        this.searchWidgetsContainerElement = dom.append(this.container, $('.search-widgets-container'));\n        this.createSearchWidget(this.searchWidgetsContainerElement);\n        var history = this.searchHistoryService.load();\n        var filePatterns = this.viewletState['query.filePatterns'] || '';\n        var patternExclusions = this.viewletState['query.folderExclusions'] || '';\n        var patternExclusionsHistory = history.exclude || [];\n        var patternIncludes = this.viewletState['query.folderIncludes'] || '';\n        var patternIncludesHistory = history.include || [];\n        var queryDetailsExpanded = this.viewletState['query.queryDetailsExpanded'] || '';\n        var useExcludesAndIgnoreFiles = typeof this.viewletState['query.useExcludesAndIgnoreFiles'] === 'boolean' ?\n            this.viewletState['query.useExcludesAndIgnoreFiles'] : true;\n        this.queryDetails = dom.append(this.searchWidgetsContainerElement, $('.query-details'));\n        // Toggle query details button\n        this.toggleQueryDetailsButton = dom.append(this.queryDetails, $('.more', { tabindex: 0, role: 'button', title: nls.localize('moreSearch', \"Toggle Search Details\") }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.CLICK, function (e) {\n            dom.EventHelper.stop(e);\n            _this.toggleQueryDetails(!_this.isScreenReaderOptimized());\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_UP, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.equals(keyCodes_1.KeyCode.Enter) || event.equals(keyCodes_1.KeyCode.Space)) {\n                dom.EventHelper.stop(e);\n                _this.toggleQueryDetails(false);\n            }\n        }));\n        this._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_DOWN, function (e) {\n            var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n            if (event.equals(keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab)) {\n                if (_this.searchWidget.isReplaceActive()) {\n                    _this.searchWidget.focusReplaceAllAction();\n                }\n                else {\n                    _this.searchWidget.focusRegexAction();\n                }\n                dom.EventHelper.stop(e);\n            }\n        }));\n        // folder includes list\n        var folderIncludesList = dom.append(this.queryDetails, $('.file-types.includes'));\n        var filesToIncludeTitle = nls.localize('searchScope.includes', \"files to include\");\n        dom.append(folderIncludesList, $('h4', undefined, filesToIncludeTitle));\n        this.inputPatternIncludes = this._register(this.instantiationService.createInstance(patternInputWidget_1.PatternInputWidget, folderIncludesList, this.contextViewService, {\n            ariaLabel: nls.localize('label.includes', 'Search Include Patterns'),\n            history: patternIncludesHistory,\n        }));\n        this.inputPatternIncludes.setValue(patternIncludes);\n        this.inputPatternIncludes.onSubmit(function () { return _this.onQueryChanged(true); });\n        this.inputPatternIncludes.onCancel(function () { return _this.viewModel.cancelSearch(); }); // Cancel search without focusing the search widget\n        this.trackInputBox(this.inputPatternIncludes.inputFocusTracker, this.inputPatternIncludesFocused);\n        // excludes list\n        var excludesList = dom.append(this.queryDetails, $('.file-types.excludes'));\n        var excludesTitle = nls.localize('searchScope.excludes', \"files to exclude\");\n        dom.append(excludesList, $('h4', undefined, excludesTitle));\n        this.inputPatternExcludes = this._register(this.instantiationService.createInstance(patternInputWidget_1.ExcludePatternInputWidget, excludesList, this.contextViewService, {\n            ariaLabel: nls.localize('label.excludes', 'Search Exclude Patterns'),\n            history: patternExclusionsHistory,\n        }));\n        this.inputPatternExcludes.setValue(patternExclusions);\n        this.inputPatternExcludes.setUseExcludesAndIgnoreFiles(useExcludesAndIgnoreFiles);\n        this.inputPatternExcludes.onSubmit(function () { return _this.onQueryChanged(true); });\n        this.inputPatternExcludes.onCancel(function () { return _this.viewModel.cancelSearch(); }); // Cancel search without focusing the search widget\n        this.trackInputBox(this.inputPatternExcludes.inputFocusTracker, this.inputPatternExclusionsFocused);\n        this.messagesElement = dom.append(this.container, $('.messages'));\n        if (this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.EMPTY) {\n            this.showSearchWithoutFolderMessage();\n        }\n        this.createSearchResultsView(this.container);\n        if (filePatterns !== '' || patternExclusions !== '' || patternIncludes !== '' || queryDetailsExpanded !== '' || !useExcludesAndIgnoreFiles) {\n            this.toggleQueryDetails(true, true, true);\n        }\n        this._register(this.viewModel.searchResult.onChange(function (event) { return _this.onSearchResultsChanged(event); }));\n        this._register(this.searchWidget.searchInput.onInput(function () { return _this.updateActions(); }));\n        this._register(this.searchWidget.replaceInput.onDidChange(function () { return _this.updateActions(); }));\n        this._register(this.onDidFocus(function () { return _this.viewletFocused.set(true); }));\n        this._register(this.onDidBlur(function () { return _this.viewletFocused.set(false); }));\n        this._register(this.onDidChangeBodyVisibility(function (visible) { return _this.onVisibilityChanged(visible); }));\n    };\n    SearchView.prototype.onVisibilityChanged = function (visible) {\n        this.viewletVisible.set(visible);\n        if (visible) {\n            if (this.changedWhileHidden) {\n                // Render if results changed while viewlet was hidden - #37818\n                this.refreshAndUpdateCount();\n                this.changedWhileHidden = false;\n            }\n        }\n        // Enable highlights if there are searchresults\n        if (this.viewModel) {\n            this.viewModel.searchResult.toggleHighlights(visible);\n        }\n        // Open focused element from results in case the editor area is otherwise empty\n        if (visible && !this.editorService.activeEditor) {\n            var focus = this.tree.getFocus();\n            if (focus) {\n                this.onFocus(focus, true);\n            }\n        }\n    };\n    Object.defineProperty(SearchView.prototype, \"searchAndReplaceWidget\", {\n        get: function () {\n            return this.searchWidget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchView.prototype, \"searchIncludePattern\", {\n        get: function () {\n            return this.inputPatternIncludes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchView.prototype, \"searchExcludePattern\", {\n        get: function () {\n            return this.inputPatternExcludes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchView.prototype.updateActions = function () {\n        for (var _i = 0, _a = this.actions; _i < _a.length; _i++) {\n            var action = _a[_i];\n            action.update();\n            this.refreshAction.update();\n            this.cancelAction.update();\n        }\n        _super.prototype.updateActions.call(this);\n    };\n    SearchView.prototype.isScreenReaderOptimized = function () {\n        var detected = this.accessibilityService.getAccessibilitySupport() === accessibility_1.AccessibilitySupport.Enabled;\n        var config = this.configurationService.getValue('editor').accessibilitySupport;\n        return config === 'on' || (config === 'auto' && detected);\n    };\n    SearchView.prototype.createSearchWidget = function (container) {\n        var _this = this;\n        var contentPattern = this.viewletState['query.contentPattern'] || '';\n        var replaceText = this.viewletState['query.replaceText'] || '';\n        var isRegex = this.viewletState['query.regex'] === true;\n        var isWholeWords = this.viewletState['query.wholeWords'] === true;\n        var isCaseSensitive = this.viewletState['query.caseSensitive'] === true;\n        var history = this.searchHistoryService.load();\n        var searchHistory = history.search || this.viewletState['query.searchHistory'] || [];\n        var replaceHistory = history.replace || this.viewletState['query.replaceHistory'] || [];\n        var showReplace = typeof this.viewletState['view.showReplace'] === 'boolean' ? this.viewletState['view.showReplace'] : true;\n        this.searchWidget = this._register(this.instantiationService.createInstance(searchWidget_1.SearchWidget, container, {\n            value: contentPattern,\n            replaceValue: replaceText,\n            isRegex: isRegex,\n            isCaseSensitive: isCaseSensitive,\n            isWholeWords: isWholeWords,\n            searchHistory: searchHistory,\n            replaceHistory: replaceHistory\n        }));\n        if (showReplace) {\n            this.searchWidget.toggleReplace(true);\n        }\n        this._register(this.searchWidget.onSearchSubmit(function () { return _this.onQueryChanged(); }));\n        this._register(this.searchWidget.onSearchCancel(function () { return _this.cancelSearch(); }));\n        this._register(this.searchWidget.searchInput.onDidOptionChange(function () { return _this.onQueryChanged(true); }));\n        this._register(this.searchWidget.onDidHeightChange(function () { return _this.reLayout(); }));\n        this._register(this.searchWidget.onReplaceToggled(function () { return _this.reLayout(); }));\n        this._register(this.searchWidget.onReplaceStateChange(function (state) {\n            _this.viewModel.replaceActive = state;\n            _this.refreshTree();\n        }));\n        this._register(this.searchWidget.onReplaceValueChanged(function (value) {\n            _this.viewModel.replaceString = _this.searchWidget.getReplaceValue();\n            _this.delayedRefresh.trigger(function () { return _this.refreshTree(); });\n        }));\n        this._register(this.searchWidget.onBlur(function () {\n            _this.toggleQueryDetailsButton.focus();\n        }));\n        this._register(this.searchWidget.onReplaceAll(function () { return _this.replaceAll(); }));\n        this.trackInputBox(this.searchWidget.searchInputFocusTracker);\n        this.trackInputBox(this.searchWidget.replaceInputFocusTracker);\n    };\n    SearchView.prototype.trackInputBox = function (inputFocusTracker, contextKey) {\n        var _this = this;\n        this._register(inputFocusTracker.onDidFocus(function () {\n            _this.inputBoxFocused.set(true);\n            if (contextKey) {\n                contextKey.set(true);\n            }\n        }));\n        this._register(inputFocusTracker.onDidBlur(function () {\n            _this.inputBoxFocused.set(_this.searchWidget.searchInputHasFocus()\n                || _this.searchWidget.replaceInputHasFocus()\n                || _this.inputPatternIncludes.inputHasFocus()\n                || _this.inputPatternExcludes.inputHasFocus());\n            if (contextKey) {\n                contextKey.set(false);\n            }\n        }));\n    };\n    SearchView.prototype.onSearchResultsChanged = function (event) {\n        if (this.isVisible()) {\n            return this.refreshAndUpdateCount(event);\n        }\n        else {\n            this.changedWhileHidden = true;\n        }\n    };\n    SearchView.prototype.refreshAndUpdateCount = function (event) {\n        this.searchWidget.setReplaceAllActionState(!this.viewModel.searchResult.isEmpty());\n        this.updateSearchResultCount(this.viewModel.searchResult.query.userDisabledExcludesAndIgnoreFiles);\n        return this.refreshTree(event);\n    };\n    SearchView.prototype.refreshTree = function (event) {\n        var _this = this;\n        var collapseResults = this.configurationService.getValue('search').collapseResults;\n        if (!event || event.added || event.removed) {\n            this.tree.setChildren(null, this.createResultIterator(collapseResults));\n        }\n        else {\n            event.elements.forEach(function (element) {\n                if (element instanceof searchModel_1.BaseFolderMatch) {\n                    // The folder may or may not be in the tree. Refresh the whole thing.\n                    _this.tree.setChildren(null, _this.createResultIterator(collapseResults));\n                    return;\n                }\n                var root = element instanceof searchModel_1.SearchResult ? null : element;\n                _this.tree.setChildren(root, _this.createIterator(element, collapseResults));\n            });\n        }\n    };\n    SearchView.prototype.createResultIterator = function (collapseResults) {\n        var _this = this;\n        var folderMatches = this.searchResult.folderMatches()\n            .filter(function (fm) { return !fm.isEmpty(); })\n            .sort(searchModel_1.searchMatchComparer);\n        if (folderMatches.length === 1) {\n            return this.createFolderIterator(folderMatches[0], collapseResults);\n        }\n        var foldersIt = iterator_1.Iterator.fromArray(folderMatches);\n        return iterator_1.Iterator.map(foldersIt, function (folderMatch) {\n            var children = _this.createFolderIterator(folderMatch, collapseResults);\n            return { element: folderMatch, children: children };\n        });\n    };\n    SearchView.prototype.createFolderIterator = function (folderMatch, collapseResults) {\n        var _this = this;\n        var filesIt = iterator_1.Iterator.fromArray(folderMatch.matches()\n            .sort(searchModel_1.searchMatchComparer));\n        return iterator_1.Iterator.map(filesIt, function (fileMatch) {\n            var children = _this.createFileIterator(fileMatch);\n            var nodeExists = true;\n            try {\n                _this.tree.getNode(fileMatch);\n            }\n            catch (e) {\n                nodeExists = false;\n            }\n            var collapsed = nodeExists ? undefined :\n                (collapseResults === 'alwaysCollapse' || (fileMatch.matches().length > 10 && collapseResults !== 'alwaysExpand'));\n            return { element: fileMatch, children: children, collapsed: collapsed };\n        });\n    };\n    SearchView.prototype.createFileIterator = function (fileMatch) {\n        var matchesIt = iterator_1.Iterator.from(fileMatch.matches()\n            .sort(searchModel_1.searchMatchComparer));\n        return iterator_1.Iterator.map(matchesIt, function (r) { return ({ element: r }); });\n    };\n    SearchView.prototype.createIterator = function (match, collapseResults) {\n        return match instanceof searchModel_1.SearchResult ? this.createResultIterator(collapseResults) :\n            match instanceof searchModel_1.BaseFolderMatch ? this.createFolderIterator(match, collapseResults) :\n                this.createFileIterator(match);\n    };\n    SearchView.prototype.replaceAll = function () {\n        var _this = this;\n        if (this.viewModel.searchResult.count() === 0) {\n            return;\n        }\n        var progressRunner = this.progressService.show(100);\n        var occurrences = this.viewModel.searchResult.count();\n        var fileCount = this.viewModel.searchResult.fileCount();\n        var replaceValue = this.searchWidget.getReplaceValue() || '';\n        var afterReplaceAllMessage = this.buildAfterReplaceAllMessage(occurrences, fileCount, replaceValue);\n        var confirmation = {\n            title: nls.localize('replaceAll.confirmation.title', \"Replace All\"),\n            message: this.buildReplaceAllConfirmationMessage(occurrences, fileCount, replaceValue),\n            primaryButton: nls.localize('replaceAll.confirm.button', \"&&Replace\"),\n            type: 'question'\n        };\n        this.dialogService.confirm(confirmation).then(function (res) {\n            if (res.confirmed) {\n                _this.searchWidget.setReplaceAllActionState(false);\n                _this.viewModel.searchResult.replaceAll(progressRunner).then(function () {\n                    progressRunner.done();\n                    var messageEl = _this.clearMessage();\n                    dom.append(messageEl, $('p', undefined, afterReplaceAllMessage));\n                }, function (error) {\n                    progressRunner.done();\n                    errors.isPromiseCanceledError(error);\n                    _this.notificationService.error(error);\n                });\n            }\n        });\n    };\n    SearchView.prototype.buildAfterReplaceAllMessage = function (occurrences, fileCount, replaceValue) {\n        if (occurrences === 1) {\n            if (fileCount === 1) {\n                if (replaceValue) {\n                    return nls.localize('replaceAll.occurrence.file.message', \"Replaced {0} occurrence across {1} file with '{2}'.\", occurrences, fileCount, replaceValue);\n                }\n                return nls.localize('removeAll.occurrence.file.message', \"Replaced {0} occurrence across {1} file'.\", occurrences, fileCount);\n            }\n            if (replaceValue) {\n                return nls.localize('replaceAll.occurrence.files.message', \"Replaced {0} occurrence across {1} files with '{2}'.\", occurrences, fileCount, replaceValue);\n            }\n            return nls.localize('removeAll.occurrence.files.message', \"Replaced {0} occurrence across {1} files.\", occurrences, fileCount);\n        }\n        if (fileCount === 1) {\n            if (replaceValue) {\n                return nls.localize('replaceAll.occurrences.file.message', \"Replaced {0} occurrences across {1} file with '{2}'.\", occurrences, fileCount, replaceValue);\n            }\n            return nls.localize('removeAll.occurrences.file.message', \"Replaced {0} occurrences across {1} file'.\", occurrences, fileCount);\n        }\n        if (replaceValue) {\n            return nls.localize('replaceAll.occurrences.files.message', \"Replaced {0} occurrences across {1} files with '{2}'.\", occurrences, fileCount, replaceValue);\n        }\n        return nls.localize('removeAll.occurrences.files.message', \"Replaced {0} occurrences across {1} files.\", occurrences, fileCount);\n    };\n    SearchView.prototype.buildReplaceAllConfirmationMessage = function (occurrences, fileCount, replaceValue) {\n        if (occurrences === 1) {\n            if (fileCount === 1) {\n                if (replaceValue) {\n                    return nls.localize('removeAll.occurrence.file.confirmation.message', \"Replace {0} occurrence across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n                }\n                return nls.localize('replaceAll.occurrence.file.confirmation.message', \"Replace {0} occurrence across {1} file'?\", occurrences, fileCount);\n            }\n            if (replaceValue) {\n                return nls.localize('removeAll.occurrence.files.confirmation.message', \"Replace {0} occurrence across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n            }\n            return nls.localize('replaceAll.occurrence.files.confirmation.message', \"Replace {0} occurrence across {1} files?\", occurrences, fileCount);\n        }\n        if (fileCount === 1) {\n            if (replaceValue) {\n                return nls.localize('removeAll.occurrences.file.confirmation.message', \"Replace {0} occurrences across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n            }\n            return nls.localize('replaceAll.occurrences.file.confirmation.message', \"Replace {0} occurrences across {1} file'?\", occurrences, fileCount);\n        }\n        if (replaceValue) {\n            return nls.localize('removeAll.occurrences.files.confirmation.message', \"Replace {0} occurrences across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n        }\n        return nls.localize('replaceAll.occurrences.files.confirmation.message', \"Replace {0} occurrences across {1} files?\", occurrences, fileCount);\n    };\n    SearchView.prototype.clearMessage = function () {\n        this.searchWithoutFolderMessageElement = undefined;\n        dom.clearNode(this.messagesElement);\n        dom.show(this.messagesElement);\n        lifecycle_1.dispose(this.messageDisposables);\n        this.messageDisposables = [];\n        return dom.append(this.messagesElement, $('.message'));\n    };\n    SearchView.prototype.createSearchResultsView = function (container) {\n        var _this = this;\n        this.resultsElement = dom.append(container, $('.results.show-file-icons'));\n        var delegate = this.instantiationService.createInstance(searchResultsView_1.SearchDelegate);\n        var identityProvider = {\n            getId: function (element) {\n                return element.id();\n            }\n        };\n        this.treeLabels = this._register(this.instantiationService.createInstance(labels_1.ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility }));\n        this.tree = this._register(this.instantiationService.createInstance(listService_1.WorkbenchObjectTree, this.resultsElement, delegate, [\n            this._register(this.instantiationService.createInstance(searchResultsView_1.FolderMatchRenderer, this.viewModel, this, this.treeLabels)),\n            this._register(this.instantiationService.createInstance(searchResultsView_1.FileMatchRenderer, this.viewModel, this, this.treeLabels)),\n            this._register(this.instantiationService.createInstance(searchResultsView_1.MatchRenderer, this.viewModel, this)),\n        ], {\n            identityProvider: identityProvider,\n            accessibilityProvider: this.instantiationService.createInstance(searchResultsView_1.SearchAccessibilityProvider, this.viewModel),\n            dnd: this.instantiationService.createInstance(searchResultsView_1.SearchDND),\n            multipleSelectionSupport: false\n        }));\n        this._register(this.tree.onContextMenu(function (e) { return _this.onContextMenu(e); }));\n        var resourceNavigator = this._register(new listService_1.TreeResourceNavigator2(this.tree, { openOnFocus: true }));\n        this._register(event_1.Event.debounce(resourceNavigator.onDidOpenResource, function (last, event) { return event; }, 75, true)(function (options) {\n            if (options.element instanceof searchModel_1.Match) {\n                var selectedMatch = options.element;\n                if (_this.currentSelectedFileMatch) {\n                    _this.currentSelectedFileMatch.setSelectedMatch(null);\n                }\n                _this.currentSelectedFileMatch = selectedMatch.parent();\n                _this.currentSelectedFileMatch.setSelectedMatch(selectedMatch);\n                _this.onFocus(selectedMatch, options.editorOptions.preserveFocus, options.sideBySide, options.editorOptions.pinned);\n            }\n        }));\n        this._register(event_1.Event.any(this.tree.onDidFocus, this.tree.onDidChangeFocus)(function () {\n            if (_this.tree.isDOMFocused()) {\n                var focus = _this.tree.getFocus()[0];\n                _this.firstMatchFocused.set(_this.tree.navigate().first() === focus);\n                _this.fileMatchOrMatchFocused.set(!!focus);\n                _this.fileMatchFocused.set(focus instanceof searchModel_1.FileMatch);\n                _this.folderMatchFocused.set(focus instanceof searchModel_1.FolderMatch);\n                _this.matchFocused.set(focus instanceof searchModel_1.Match);\n                _this.fileMatchOrFolderMatchFocus.set(focus instanceof searchModel_1.FileMatch || focus instanceof searchModel_1.FolderMatch);\n            }\n        }));\n        this._register(this.tree.onDidBlur(function (e) {\n            _this.firstMatchFocused.reset();\n            _this.fileMatchOrMatchFocused.reset();\n            _this.fileMatchFocused.reset();\n            _this.folderMatchFocused.reset();\n            _this.matchFocused.reset();\n            _this.fileMatchOrFolderMatchFocus.reset();\n        }));\n    };\n    SearchView.prototype.onContextMenu = function (e) {\n        var _this = this;\n        if (!e.element) {\n            return;\n        }\n        if (!this.contextMenu) {\n            this.contextMenu = this._register(this.menuService.createMenu(actions_1.MenuId.SearchContext, this.contextKeyService));\n        }\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n        this.contextMenuService.showContextMenu({\n            getAnchor: function () { return e.anchor; },\n            getActions: function () {\n                var actions = [];\n                menuItemActionItem_1.fillInContextMenuActions(_this.contextMenu, { shouldForwardArgs: true }, actions, _this.contextMenuService);\n                return actions;\n            },\n            getActionsContext: function () { return e.element; }\n        });\n    };\n    SearchView.prototype.selectCurrentMatch = function () {\n        var focused = this.tree.getFocus()[0];\n        var fakeKeyboardEvent = listService_1.getSelectionKeyboardEvent(undefined, false);\n        this.tree.setSelection([focused], fakeKeyboardEvent);\n    };\n    SearchView.prototype.selectNextMatch = function () {\n        var selected = this.tree.getSelection()[0];\n        // Expand the initial selected node, if needed\n        if (selected instanceof searchModel_1.FileMatch) {\n            if (this.tree.isCollapsed(selected)) {\n                this.tree.expand(selected);\n            }\n        }\n        var navigator = this.tree.navigate(selected);\n        var next = navigator.next();\n        if (!next) {\n            // Reached the end - get a new navigator from the root.\n            navigator = this.tree.navigate();\n            next = navigator.first();\n        }\n        // Expand and go past FileMatch nodes\n        while (!(next instanceof searchModel_1.Match)) {\n            if (this.tree.isCollapsed(next)) {\n                this.tree.expand(next);\n            }\n            // Select the FileMatch's first child\n            next = navigator.next();\n        }\n        // Reveal the newly selected element\n        if (next) {\n            this.tree.setFocus([next], listService_1.getSelectionKeyboardEvent(undefined, false));\n            this.tree.reveal(next);\n            this.selectCurrentMatchEmitter.fire(undefined);\n        }\n    };\n    SearchView.prototype.selectPreviousMatch = function () {\n        var selected = this.tree.getSelection()[0];\n        var navigator = this.tree.navigate(selected);\n        var prev = navigator.previous();\n        // Expand and go past FileMatch nodes\n        if (!(prev instanceof searchModel_1.Match)) {\n            prev = navigator.previous();\n            if (!prev) {\n                // Wrap around\n                prev = navigator.last();\n                // This is complicated because .last will set the navigator to the last FileMatch,\n                // so expand it and FF to its last child\n                this.tree.expand(prev);\n                var tmp = void 0;\n                while (tmp = navigator.next()) {\n                    prev = tmp;\n                }\n            }\n            if (!(prev instanceof searchModel_1.Match)) {\n                // There is a second non-Match result, which must be a collapsed FileMatch.\n                // Expand it then select its last child.\n                var nextItem = navigator.next();\n                this.tree.expand(prev);\n                navigator = this.tree.navigate(nextItem); // recreate navigator because modifying the tree can invalidate it\n                prev = navigator.previous();\n            }\n        }\n        // Reveal the newly selected element\n        if (prev) {\n            this.tree.setFocus([prev], listService_1.getSelectionKeyboardEvent(undefined, false));\n            this.tree.reveal(prev);\n            this.selectCurrentMatchEmitter.fire(undefined);\n        }\n    };\n    SearchView.prototype.moveFocusToResults = function () {\n        this.tree.domFocus();\n    };\n    SearchView.prototype.focus = function () {\n        _super.prototype.focus.call(this);\n        var updatedText = this.updateTextFromSelection();\n        this.searchWidget.focus(undefined, undefined, updatedText);\n    };\n    SearchView.prototype.updateTextFromSelection = function (allowUnselectedWord) {\n        if (allowUnselectedWord === void 0) { allowUnselectedWord = true; }\n        var updatedText = false;\n        var seedSearchStringFromSelection = this.configurationService.getValue('editor').find.seedSearchStringFromSelection;\n        if (seedSearchStringFromSelection) {\n            var selectedText = this.getSearchTextFromEditor(allowUnselectedWord);\n            if (selectedText) {\n                if (this.searchWidget.searchInput.getRegex()) {\n                    selectedText = strings.escapeRegExpCharacters(selectedText);\n                }\n                this.searchWidget.searchInput.setValue(selectedText);\n                updatedText = true;\n            }\n        }\n        return updatedText;\n    };\n    SearchView.prototype.focusNextInputBox = function () {\n        if (this.searchWidget.searchInputHasFocus()) {\n            if (this.searchWidget.isReplaceShown()) {\n                this.searchWidget.focus(true, true);\n            }\n            else {\n                this.moveFocusFromSearchOrReplace();\n            }\n            return;\n        }\n        if (this.searchWidget.replaceInputHasFocus()) {\n            this.moveFocusFromSearchOrReplace();\n            return;\n        }\n        if (this.inputPatternIncludes.inputHasFocus()) {\n            this.inputPatternExcludes.focus();\n            this.inputPatternExcludes.select();\n            return;\n        }\n        if (this.inputPatternExcludes.inputHasFocus()) {\n            this.selectTreeIfNotSelected();\n            return;\n        }\n    };\n    SearchView.prototype.moveFocusFromSearchOrReplace = function () {\n        if (this.showsFileTypes()) {\n            this.toggleQueryDetails(true, this.showsFileTypes());\n        }\n        else {\n            this.selectTreeIfNotSelected();\n        }\n    };\n    SearchView.prototype.focusPreviousInputBox = function () {\n        if (this.searchWidget.searchInputHasFocus()) {\n            return;\n        }\n        if (this.searchWidget.replaceInputHasFocus()) {\n            this.searchWidget.focus(true);\n            return;\n        }\n        if (this.inputPatternIncludes.inputHasFocus()) {\n            this.searchWidget.focus(true, true);\n            return;\n        }\n        if (this.inputPatternExcludes.inputHasFocus()) {\n            this.inputPatternIncludes.focus();\n            this.inputPatternIncludes.select();\n            return;\n        }\n        if (this.tree.isDOMFocused()) {\n            this.moveFocusFromResults();\n            return;\n        }\n    };\n    SearchView.prototype.moveFocusFromResults = function () {\n        if (this.showsFileTypes()) {\n            this.toggleQueryDetails(true, true, false, true);\n        }\n        else {\n            this.searchWidget.focus(true, true);\n        }\n    };\n    SearchView.prototype.reLayout = function () {\n        if (this.isDisposed) {\n            return;\n        }\n        var actionsPosition = this.configurationService.getValue('search').actionsPosition;\n        dom.toggleClass(this.getContainer(), SearchView.ACTIONS_RIGHT_CLASS_NAME, actionsPosition === 'right');\n        dom.toggleClass(this.getContainer(), SearchView.WIDE_CLASS_NAME, this.size.width >= SearchView.WIDE_VIEW_SIZE);\n        this.searchWidget.setWidth(this.size.width - 28 /* container margin */);\n        this.inputPatternExcludes.setWidth(this.size.width - 28 /* container margin */);\n        this.inputPatternIncludes.setWidth(this.size.width - 28 /* container margin */);\n        var messagesSize = this.messagesElement.style.display === 'none' ?\n            0 :\n            dom.getTotalHeight(this.messagesElement);\n        var searchResultContainerSize = this.size.height -\n            messagesSize -\n            dom.getTotalHeight(this.searchWidgetsContainerElement);\n        this.resultsElement.style.height = searchResultContainerSize + 'px';\n        this.tree.layout(searchResultContainerSize, this.size.width);\n    };\n    SearchView.prototype.layoutBody = function (height, width) {\n        this.size = new dom.Dimension(width, height);\n        this.reLayout();\n    };\n    SearchView.prototype.getControl = function () {\n        return this.tree;\n    };\n    SearchView.prototype.isSearchSubmitted = function () {\n        return this.searchSubmitted;\n    };\n    SearchView.prototype.isSearching = function () {\n        return this.searching;\n    };\n    SearchView.prototype.allSearchFieldsClear = function () {\n        return this.searchWidget.getReplaceValue() === '' &&\n            this.searchWidget.searchInput.getValue() === '';\n    };\n    SearchView.prototype.hasSearchResults = function () {\n        return !this.viewModel.searchResult.isEmpty();\n    };\n    SearchView.prototype.clearSearchResults = function () {\n        this.viewModel.searchResult.clear();\n        this.showEmptyStage();\n        if (this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.EMPTY) {\n            this.showSearchWithoutFolderMessage();\n        }\n        this.searchWidget.clear();\n        this.viewModel.cancelSearch();\n        this.updateActions();\n    };\n    SearchView.prototype.cancelSearch = function () {\n        if (this.viewModel.cancelSearch()) {\n            this.searchWidget.focus();\n            return true;\n        }\n        return false;\n    };\n    SearchView.prototype.selectTreeIfNotSelected = function () {\n        if (this.tree.getNode(null)) {\n            this.tree.domFocus();\n            var selection = this.tree.getSelection();\n            if (selection.length === 0) {\n                this.tree.focusNext();\n            }\n        }\n    };\n    SearchView.prototype.getSearchTextFromEditor = function (allowUnselectedWord) {\n        if (!this.editorService.activeEditor) {\n            return null;\n        }\n        if (dom.isAncestor(document.activeElement, this.getContainer())) {\n            return null;\n        }\n        var activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n        if (editorBrowser_1.isDiffEditor(activeTextEditorWidget)) {\n            if (activeTextEditorWidget.getOriginalEditor().hasTextFocus()) {\n                activeTextEditorWidget = activeTextEditorWidget.getOriginalEditor();\n            }\n            else {\n                activeTextEditorWidget = activeTextEditorWidget.getModifiedEditor();\n            }\n        }\n        if (!editorBrowser_1.isCodeEditor(activeTextEditorWidget) || !activeTextEditorWidget.hasModel()) {\n            return null;\n        }\n        var range = activeTextEditorWidget.getSelection();\n        if (!range) {\n            return null;\n        }\n        if (range.isEmpty() && !this.searchWidget.searchInput.getValue() && allowUnselectedWord) {\n            var wordAtPosition = activeTextEditorWidget.getModel().getWordAtPosition(range.getStartPosition());\n            if (wordAtPosition) {\n                return wordAtPosition.word;\n            }\n        }\n        if (!range.isEmpty()) {\n            var searchText = '';\n            for (var i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                var lineText = activeTextEditorWidget.getModel().getLineContent(i);\n                if (i === range.endLineNumber) {\n                    lineText = lineText.substring(0, range.endColumn - 1);\n                }\n                if (i === range.startLineNumber) {\n                    lineText = lineText.substring(range.startColumn - 1);\n                }\n                if (i !== range.startLineNumber) {\n                    lineText = '\\n' + lineText;\n                }\n                searchText += lineText;\n            }\n            return searchText;\n        }\n        return null;\n    };\n    SearchView.prototype.showsFileTypes = function () {\n        return dom.hasClass(this.queryDetails, 'more');\n    };\n    SearchView.prototype.toggleCaseSensitive = function () {\n        this.searchWidget.searchInput.setCaseSensitive(!this.searchWidget.searchInput.getCaseSensitive());\n        this.onQueryChanged(true);\n    };\n    SearchView.prototype.toggleWholeWords = function () {\n        this.searchWidget.searchInput.setWholeWords(!this.searchWidget.searchInput.getWholeWords());\n        this.onQueryChanged(true);\n    };\n    SearchView.prototype.toggleRegex = function () {\n        this.searchWidget.searchInput.setRegex(!this.searchWidget.searchInput.getRegex());\n        this.onQueryChanged(true);\n    };\n    SearchView.prototype.toggleQueryDetails = function (moveFocus, show, skipLayout, reverse) {\n        if (moveFocus === void 0) { moveFocus = true; }\n        var cls = 'more';\n        show = typeof show === 'undefined' ? !dom.hasClass(this.queryDetails, cls) : Boolean(show);\n        this.viewletState['query.queryDetailsExpanded'] = show;\n        skipLayout = Boolean(skipLayout);\n        if (show) {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'true');\n            dom.addClass(this.queryDetails, cls);\n            if (moveFocus) {\n                if (reverse) {\n                    this.inputPatternExcludes.focus();\n                    this.inputPatternExcludes.select();\n                }\n                else {\n                    this.inputPatternIncludes.focus();\n                    this.inputPatternIncludes.select();\n                }\n            }\n        }\n        else {\n            this.toggleQueryDetailsButton.setAttribute('aria-expanded', 'false');\n            dom.removeClass(this.queryDetails, cls);\n            if (moveFocus) {\n                this.searchWidget.focus();\n            }\n        }\n        if (!skipLayout && this.size) {\n            this.layout(this.size.height);\n        }\n    };\n    SearchView.prototype.searchInFolders = function (resources) {\n        var _this = this;\n        var folderPaths = [];\n        var workspace = this.contextService.getWorkspace();\n        if (resources) {\n            resources.forEach(function (resource) {\n                var folderPath;\n                if (_this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.FOLDER) {\n                    // Show relative path from the root for single-root mode\n                    folderPath = resources_1.relativePath(workspace.folders[0].uri, resource); // always uses forward slashes\n                    if (folderPath && folderPath !== '.') {\n                        folderPath = './' + folderPath;\n                    }\n                }\n                else {\n                    var owningFolder = _this.contextService.getWorkspaceFolder(resource);\n                    if (owningFolder) {\n                        var owningRootName_1 = owningFolder.name;\n                        // If this root is the only one with its basename, use a relative ./ path. If there is another, use an absolute path\n                        var isUniqueFolder = workspace.folders.filter(function (folder) { return folder.name === owningRootName_1; }).length === 1;\n                        if (isUniqueFolder) {\n                            var relPath = resources_1.relativePath(owningFolder.uri, resource); // always uses forward slashes\n                            if (relPath === '') {\n                                folderPath = \"./\" + owningFolder.name;\n                            }\n                            else {\n                                folderPath = \"./\" + owningFolder.name + \"/\" + relPath;\n                            }\n                        }\n                        else {\n                            folderPath = resource.fsPath; // TODO rob: handle on-file URIs\n                        }\n                    }\n                }\n                if (folderPath) {\n                    folderPaths.push(folderPath);\n                }\n            });\n        }\n        if (!folderPaths.length || folderPaths.some(function (folderPath) { return folderPath === '.'; })) {\n            this.inputPatternIncludes.setValue('');\n            this.searchWidget.focus();\n            return;\n        }\n        // Show 'files to include' box\n        if (!this.showsFileTypes()) {\n            this.toggleQueryDetails(true, true);\n        }\n        this.inputPatternIncludes.setValue(folderPaths.join(', '));\n        this.searchWidget.focus(false);\n    };\n    SearchView.prototype.onQueryChanged = function (preserveFocus) {\n        var _this = this;\n        var isRegex = this.searchWidget.searchInput.getRegex();\n        var isWholeWords = this.searchWidget.searchInput.getWholeWords();\n        var isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n        var contentPattern = this.searchWidget.searchInput.getValue();\n        var excludePatternText = this.inputPatternExcludes.getValue().trim();\n        var includePatternText = this.inputPatternIncludes.getValue().trim();\n        var useExcludesAndIgnoreFiles = this.inputPatternExcludes.useExcludesAndIgnoreFiles();\n        if (contentPattern.length === 0) {\n            return;\n        }\n        var content = {\n            pattern: contentPattern,\n            isRegExp: isRegex,\n            isCaseSensitive: isCaseSensitive,\n            isWordMatch: isWholeWords\n        };\n        var excludePattern = this.inputPatternExcludes.getValue();\n        var includePattern = this.inputPatternIncludes.getValue();\n        // Need the full match line to correctly calculate replace text, if this is a search/replace with regex group references ($1, $2, ...).\n        // 10000 chars is enough to avoid sending huge amounts of text around, if you do a replace with a longer match, it may or may not resolve the group refs correctly.\n        // https://github.com/Microsoft/vscode/issues/58374\n        var charsPerLine = content.isRegExp ? 10000 :\n            250;\n        var options = {\n            _reason: 'searchView',\n            extraFileResources: search_2.getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n            maxResults: SearchView.MAX_TEXT_RESULTS,\n            disregardIgnoreFiles: !useExcludesAndIgnoreFiles || undefined,\n            disregardExcludeSettings: !useExcludesAndIgnoreFiles || undefined,\n            excludePattern: excludePattern,\n            includePattern: includePattern,\n            previewOptions: {\n                matchLines: 1,\n                charsPerLine: charsPerLine\n            },\n            isSmartCase: this.configurationService.getValue().search.smartCase,\n            expandPatterns: true\n        };\n        var folderResources = this.contextService.getWorkspace().folders;\n        var onQueryValidationError = function (err) {\n            _this.searchWidget.searchInput.showMessage({ content: err.message, type: inputBox_1.MessageType.ERROR });\n            _this.viewModel.searchResult.clear();\n        };\n        var query;\n        try {\n            query = this.queryBuilder.text(content, folderResources.map(function (folder) { return folder.uri; }), options);\n        }\n        catch (err) {\n            onQueryValidationError(err);\n            return;\n        }\n        this.validateQuery(query).then(function () {\n            _this.onQueryTriggered(query, options, excludePatternText, includePatternText);\n            if (!preserveFocus) {\n                _this.searchWidget.focus(false); // focus back to input field\n            }\n        }, onQueryValidationError);\n    };\n    SearchView.prototype.validateQuery = function (query) {\n        var _this = this;\n        // Validate folderQueries\n        var folderQueriesExistP = query.folderQueries.map(function (fq) {\n            return _this.fileService.existsFile(fq.folder);\n        });\n        return Promise.resolve(folderQueriesExistP).then(function (existResults) {\n            // If no folders exist, show an error message about the first one\n            var existingFolderQueries = query.folderQueries.filter(function (folderQuery, i) { return existResults[i]; });\n            if (!query.folderQueries.length || existingFolderQueries.length) {\n                query.folderQueries = existingFolderQueries;\n            }\n            else {\n                var nonExistantPath = query.folderQueries[0].folder.fsPath;\n                var searchPathNotFoundError = nls.localize('searchPathNotFoundError', \"Search path not found: {0}\", nonExistantPath);\n                return Promise.reject(new Error(searchPathNotFoundError));\n            }\n            return undefined;\n        });\n    };\n    SearchView.prototype.onQueryTriggered = function (query, options, excludePatternText, includePatternText) {\n        var _this = this;\n        this.searchWidget.searchInput.onSearchSubmit();\n        this.inputPatternExcludes.onSearchSubmit();\n        this.inputPatternIncludes.onSearchSubmit();\n        this.viewModel.cancelSearch();\n        this.currentSearchQ = this.currentSearchQ\n            .then(function () { return _this.doSearch(query, options, excludePatternText, includePatternText); })\n            .then(function () { return undefined; }, function () { return undefined; });\n    };\n    SearchView.prototype.doSearch = function (query, options, excludePatternText, includePatternText) {\n        var _this = this;\n        var progressRunner = this.progressService.show(/*infinite=*/ true);\n        this.searchWidget.searchInput.clearMessage();\n        this.searching = true;\n        setTimeout(function () {\n            if (_this.searching) {\n                _this.updateActions();\n            }\n        }, 2000);\n        this.showEmptyStage();\n        var onComplete = function (completed) {\n            _this.searching = false;\n            // Complete up to 100% as needed\n            progressRunner.done();\n            // Do final render, then expand if just 1 file with less than 50 matches\n            _this.onSearchResultsChanged();\n            var collapseResults = _this.configurationService.getValue('search').collapseResults;\n            if (collapseResults !== 'alwaysCollapse' && _this.viewModel.searchResult.matches().length === 1) {\n                var onlyMatch = _this.viewModel.searchResult.matches()[0];\n                if (onlyMatch.count() < 50) {\n                    _this.tree.expand(onlyMatch);\n                }\n            }\n            _this.viewModel.replaceString = _this.searchWidget.getReplaceValue();\n            _this.searchSubmitted = true;\n            _this.updateActions();\n            var hasResults = !_this.viewModel.searchResult.isEmpty();\n            if (completed && completed.limitHit) {\n                _this.searchWidget.searchInput.showMessage({\n                    content: nls.localize('searchMaxResultsWarning', \"The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.\"),\n                    type: inputBox_1.MessageType.WARNING\n                });\n            }\n            if (!hasResults) {\n                var hasExcludes = !!excludePatternText;\n                var hasIncludes = !!includePatternText;\n                var message = void 0;\n                if (!completed) {\n                    message = nls.localize('searchCanceled', \"Search was canceled before any results could be found - \");\n                }\n                else if (hasIncludes && hasExcludes) {\n                    message = nls.localize('noResultsIncludesExcludes', \"No results found in '{0}' excluding '{1}' - \", includePatternText, excludePatternText);\n                }\n                else if (hasIncludes) {\n                    message = nls.localize('noResultsIncludes', \"No results found in '{0}' - \", includePatternText);\n                }\n                else if (hasExcludes) {\n                    message = nls.localize('noResultsExcludes', \"No results found excluding '{0}' - \", excludePatternText);\n                }\n                else {\n                    message = nls.localize('noResultsFound', \"No results found. Review your settings for configured exclusions and check your gitignore files - \");\n                }\n                // Indicate as status to ARIA\n                aria.status(message);\n                dom.hide(_this.resultsElement);\n                var messageEl = _this.clearMessage();\n                var p = dom.append(messageEl, $('p', undefined, message));\n                if (!completed) {\n                    var searchAgainLink = dom.append(p, $('a.pointer.prominent', undefined, nls.localize('rerunSearch.message', \"Search again\")));\n                    _this.messageDisposables.push(dom.addDisposableListener(searchAgainLink, dom.EventType.CLICK, function (e) {\n                        dom.EventHelper.stop(e, false);\n                        _this.onQueryChanged();\n                    }));\n                }\n                else if (hasIncludes || hasExcludes) {\n                    var searchAgainLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('rerunSearchInAll.message', \"Search again in all files\")));\n                    _this.messageDisposables.push(dom.addDisposableListener(searchAgainLink, dom.EventType.CLICK, function (e) {\n                        dom.EventHelper.stop(e, false);\n                        _this.inputPatternExcludes.setValue('');\n                        _this.inputPatternIncludes.setValue('');\n                        _this.onQueryChanged();\n                    }));\n                }\n                else {\n                    var openSettingsLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('openSettings.message', \"Open Settings\")));\n                    _this.addClickEvents(openSettingsLink, _this.onOpenSettings);\n                }\n                if (completed) {\n                    dom.append(p, $('span', undefined, ' - '));\n                    var learnMoreLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('openSettings.learnMore', \"Learn More\")));\n                    _this.addClickEvents(learnMoreLink, _this.onLearnMore);\n                }\n                if (_this.contextService.getWorkbenchState() === workspace_1.WorkbenchState.EMPTY) {\n                    _this.showSearchWithoutFolderMessage();\n                }\n            }\n            else {\n                _this.viewModel.searchResult.toggleHighlights(_this.isVisible()); // show highlights\n                // Indicate final search result count for ARIA\n                aria.status(nls.localize('ariaSearchResultsStatus', \"Search returned {0} results in {1} files\", _this.viewModel.searchResult.count(), _this.viewModel.searchResult.fileCount()));\n            }\n        };\n        var onError = function (e) {\n            if (errors.isPromiseCanceledError(e)) {\n                return onComplete(undefined);\n            }\n            else {\n                _this.searching = false;\n                _this.updateActions();\n                progressRunner.done();\n                _this.searchWidget.searchInput.showMessage({ content: e.message, type: inputBox_1.MessageType.ERROR });\n                _this.viewModel.searchResult.clear();\n                if (e.code === search_1.SearchErrorCode.regexParseError && !_this.configurationService.getValue('search.usePCRE2')) {\n                    _this.showPcre2Hint();\n                }\n                return Promise.resolve();\n            }\n        };\n        var visibleMatches = 0;\n        // Handle UI updates in an interval to show frequent progress and results\n        var uiRefreshHandle = setInterval(function () {\n            if (!_this.searching) {\n                window.clearInterval(uiRefreshHandle);\n                return;\n            }\n            // Search result tree update\n            var fileCount = _this.viewModel.searchResult.fileCount();\n            if (visibleMatches !== fileCount) {\n                visibleMatches = fileCount;\n                _this.refreshAndUpdateCount();\n            }\n            if (fileCount > 0) {\n                _this.updateActions();\n            }\n        }, 100);\n        this.searchWidget.setReplaceAllActionState(false);\n        return this.viewModel.search(query)\n            .then(onComplete, onError);\n    };\n    SearchView.prototype.showPcre2Hint = function () {\n        var _this = this;\n        if (!this.globalMemento['disablePcre2Hint']) {\n            // If the regex parsed in JS but not rg, it likely uses features that are supported in JS and PCRE2 but not Rust\n            this.notificationService.prompt(notification_1.Severity.Info, nls.localize('rgRegexError', \"You can enable \\\"search.usePCRE2\\\" to enable some extra regex features like lookbehind and backreferences.\"), [\n                {\n                    label: nls.localize('neverAgain', \"Don't Show Again\"),\n                    run: function () { return _this.globalMemento['disablePcre2Hint'] = true; },\n                    isSecondary: true\n                },\n                {\n                    label: nls.localize('otherEncodingWarning.openSettingsLabel', \"Open Settings\"),\n                    run: function () { return _this.openSettings('search.usePCRE2'); }\n                }\n            ]);\n        }\n    };\n    SearchView.prototype.openSettings = function (query) {\n        var options = { query: query };\n        return this.contextService.getWorkbenchState() !== workspace_1.WorkbenchState.EMPTY ?\n            this.preferencesService.openWorkspaceSettings(undefined, options) :\n            this.preferencesService.openGlobalSettings(undefined, options);\n    };\n    SearchView.prototype.updateSearchResultCount = function (disregardExcludesAndIgnores) {\n        var fileCount = this.viewModel.searchResult.fileCount();\n        this.hasSearchResultsKey.set(fileCount > 0);\n        var msgWasHidden = this.messagesElement.style.display === 'none';\n        if (fileCount > 0) {\n            var messageEl = this.clearMessage();\n            var resultMsg = this.buildResultCountMessage(this.viewModel.searchResult.count(), fileCount);\n            if (disregardExcludesAndIgnores) {\n                resultMsg += nls.localize('useIgnoresAndExcludesDisabled', \" - exclude settings and ignore files are disabled\");\n            }\n            dom.append(messageEl, $('p', undefined, resultMsg));\n            this.reLayout();\n        }\n        else if (!msgWasHidden) {\n            dom.hide(this.messagesElement);\n        }\n    };\n    SearchView.prototype.buildResultCountMessage = function (resultCount, fileCount) {\n        if (resultCount === 1 && fileCount === 1) {\n            return nls.localize('search.file.result', \"{0} result in {1} file\", resultCount, fileCount);\n        }\n        else if (resultCount === 1) {\n            return nls.localize('search.files.result', \"{0} result in {1} files\", resultCount, fileCount);\n        }\n        else if (fileCount === 1) {\n            return nls.localize('search.file.results', \"{0} results in {1} file\", resultCount, fileCount);\n        }\n        else {\n            return nls.localize('search.files.results', \"{0} results in {1} files\", resultCount, fileCount);\n        }\n    };\n    SearchView.prototype.showSearchWithoutFolderMessage = function () {\n        var _this = this;\n        this.searchWithoutFolderMessageElement = this.clearMessage();\n        var textEl = dom.append(this.searchWithoutFolderMessageElement, $('p', undefined, nls.localize('searchWithoutFolder', \"You have not yet opened a folder. Only open files are currently searched - \")));\n        var openFolderLink = dom.append(textEl, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('openFolder', \"Open Folder\")));\n        this.messageDisposables.push(dom.addDisposableListener(openFolderLink, dom.EventType.CLICK, function (e) {\n            dom.EventHelper.stop(e, false);\n            var actionClass = env.isMacintosh ? workspaceActions_1.OpenFileFolderAction : workspaceActions_1.OpenFolderAction;\n            var action = _this.instantiationService.createInstance(actionClass, actionClass.ID, actionClass.LABEL);\n            _this.actionRunner.run(action).then(function () {\n                action.dispose();\n            }, function (err) {\n                action.dispose();\n                errors.onUnexpectedError(err);\n            });\n        }));\n    };\n    SearchView.prototype.showEmptyStage = function () {\n        // disable 'result'-actions\n        this.searchSubmitted = false;\n        this.updateActions();\n        // clean up ui\n        // this.replaceService.disposeAllReplacePreviews();\n        dom.hide(this.messagesElement);\n        dom.show(this.resultsElement);\n        this.currentSelectedFileMatch = undefined;\n    };\n    SearchView.prototype.onFocus = function (lineMatch, preserveFocus, sideBySide, pinned) {\n        if (!(lineMatch instanceof searchModel_1.Match)) {\n            this.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n            return Promise.resolve(true);\n        }\n        var useReplacePreview = this.configurationService.getValue().search.useReplacePreview;\n        return (useReplacePreview && this.viewModel.isReplaceActive() && !!this.viewModel.replaceString) ?\n            this.replaceService.openReplacePreview(lineMatch, preserveFocus, sideBySide, pinned) :\n            this.open(lineMatch, preserveFocus, sideBySide, pinned);\n    };\n    SearchView.prototype.open = function (element, preserveFocus, sideBySide, pinned) {\n        var _this = this;\n        var selection = this.getSelectionFrom(element);\n        var resource = element instanceof searchModel_1.Match ? element.parent().resource() : element.resource();\n        return this.editorService.openEditor({\n            resource: resource,\n            options: {\n                preserveFocus: preserveFocus,\n                pinned: pinned,\n                selection: selection,\n                revealIfVisible: true\n            }\n        }, sideBySide ? editorService_1.SIDE_GROUP : editorService_1.ACTIVE_GROUP).then(function (editor) {\n            if (editor && element instanceof searchModel_1.Match && preserveFocus) {\n                _this.viewModel.searchResult.rangeHighlightDecorations.highlightRange(editor.getControl().getModel(), element.range());\n            }\n            else {\n                _this.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n            }\n            if (editor) {\n                _this.editorGroupsService.activateGroup(editor.group);\n            }\n        }, errors.onUnexpectedError);\n    };\n    SearchView.prototype.getSelectionFrom = function (element) {\n        var match = null;\n        if (element instanceof searchModel_1.Match) {\n            match = element;\n        }\n        if (element instanceof searchModel_1.FileMatch && element.count() > 0) {\n            match = element.matches()[element.matches().length - 1];\n        }\n        if (match) {\n            var range = match.range();\n            if (this.viewModel.isReplaceActive() && !!this.viewModel.replaceString) {\n                var replaceString = match.replaceString;\n                return {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.startLineNumber,\n                    endColumn: range.startColumn + replaceString.length\n                };\n            }\n            return range;\n        }\n        return undefined;\n    };\n    SearchView.prototype.onUntitledDidChangeDirty = function (resource) {\n        if (!this.viewModel) {\n            return;\n        }\n        // remove search results from this resource as it got disposed\n        if (!this.untitledEditorService.isDirty(resource)) {\n            var matches = this.viewModel.searchResult.matches();\n            for (var i = 0, len = matches.length; i < len; i++) {\n                if (resource.toString() === matches[i].resource().toString()) {\n                    this.viewModel.searchResult.remove(matches[i]);\n                }\n            }\n        }\n    };\n    SearchView.prototype.onFilesChanged = function (e) {\n        if (!this.viewModel || !e.gotDeleted()) {\n            return;\n        }\n        var matches = this.viewModel.searchResult.matches();\n        for (var i = 0, len = matches.length; i < len; i++) {\n            if (e.contains(matches[i].resource(), files_1.FileChangeType.DELETED)) {\n                this.viewModel.searchResult.remove(matches[i]);\n            }\n        }\n    };\n    SearchView.prototype.getActions = function () {\n        return [\n            this.searching ?\n                this.cancelAction :\n                this.refreshAction\n        ].concat(this.actions);\n    };\n    SearchView.prototype.clearHistory = function () {\n        this.searchWidget.clearHistory();\n        this.inputPatternExcludes.clearHistory();\n        this.inputPatternIncludes.clearHistory();\n    };\n    SearchView.prototype.saveState = function () {\n        var isRegex = this.searchWidget.searchInput.getRegex();\n        var isWholeWords = this.searchWidget.searchInput.getWholeWords();\n        var isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n        var contentPattern = this.searchWidget.searchInput.getValue();\n        var patternExcludes = this.inputPatternExcludes.getValue().trim();\n        var patternIncludes = this.inputPatternIncludes.getValue().trim();\n        var useExcludesAndIgnoreFiles = this.inputPatternExcludes.useExcludesAndIgnoreFiles();\n        this.viewletState['query.contentPattern'] = contentPattern;\n        this.viewletState['query.regex'] = isRegex;\n        this.viewletState['query.wholeWords'] = isWholeWords;\n        this.viewletState['query.caseSensitive'] = isCaseSensitive;\n        this.viewletState['query.folderExclusions'] = patternExcludes;\n        this.viewletState['query.folderIncludes'] = patternIncludes;\n        this.viewletState['query.useExcludesAndIgnoreFiles'] = useExcludesAndIgnoreFiles;\n        var isReplaceShown = this.searchAndReplaceWidget.isReplaceShown();\n        this.viewletState['view.showReplace'] = isReplaceShown;\n        this.viewletState['query.replaceText'] = isReplaceShown && this.searchWidget.getReplaceValue();\n        var history = Object.create(null);\n        var searchHistory = this.searchWidget.getSearchHistory();\n        if (searchHistory && searchHistory.length) {\n            history.search = searchHistory;\n        }\n        var replaceHistory = this.searchWidget.getReplaceHistory();\n        if (replaceHistory && replaceHistory.length) {\n            history.replace = replaceHistory;\n        }\n        var patternExcludesHistory = this.inputPatternExcludes.getHistory();\n        if (patternExcludesHistory && patternExcludesHistory.length) {\n            history.exclude = patternExcludesHistory;\n        }\n        var patternIncludesHistory = this.inputPatternIncludes.getHistory();\n        if (patternIncludesHistory && patternIncludesHistory.length) {\n            history.include = patternIncludesHistory;\n        }\n        this.searchHistoryService.save(history);\n        _super.prototype.saveState.call(this);\n    };\n    SearchView.prototype._register = function (t) {\n        if (this.isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    SearchView.prototype.dispose = function () {\n        this.isDisposed = true;\n        this.saveState();\n        this._toDispose = lifecycle_1.dispose(this._toDispose);\n        _super.prototype.dispose.call(this);\n    };\n    SearchView.MAX_TEXT_RESULTS = 10000;\n    SearchView.WIDE_CLASS_NAME = 'wide';\n    SearchView.WIDE_VIEW_SIZE = 1000;\n    SearchView.ACTIONS_RIGHT_CLASS_NAME = 'actions-right';\n    SearchView = tslib_1.__decorate([\n        tslib_1.__param(1, files_1.IFileService),\n        tslib_1.__param(2, editorService_1.IEditorService),\n        tslib_1.__param(3, progress_1.IProgressService),\n        tslib_1.__param(4, notification_1.INotificationService),\n        tslib_1.__param(5, dialogs_1.IDialogService),\n        tslib_1.__param(6, contextView_1.IContextViewService),\n        tslib_1.__param(7, instantiation_1.IInstantiationService),\n        tslib_1.__param(8, configuration_1.IConfigurationService),\n        tslib_1.__param(9, workspace_1.IWorkspaceContextService),\n        tslib_1.__param(10, searchModel_1.ISearchWorkbenchService),\n        tslib_1.__param(11, contextkey_1.IContextKeyService),\n        tslib_1.__param(12, replace_1.IReplaceService),\n        tslib_1.__param(13, untitledEditorService_1.IUntitledEditorService),\n        tslib_1.__param(14, preferences_1.IPreferencesService),\n        tslib_1.__param(15, themeService_1.IThemeService),\n        tslib_1.__param(16, searchHistoryService_1.ISearchHistoryService),\n        tslib_1.__param(17, editorGroupsService_1.IEditorGroupsService),\n        tslib_1.__param(18, contextView_1.IContextMenuService),\n        tslib_1.__param(19, actions_1.IMenuService),\n        tslib_1.__param(20, accessibility_1.IAccessibilityService),\n        tslib_1.__param(21, keybinding_1.IKeybindingService),\n        tslib_1.__param(22, storage_1.IStorageService)\n    ], SearchView);\n    return SearchView;\n}(panelViewlet_1.ViewletPanel));\nexports.SearchView = SearchView;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var matchHighlightColor = theme.getColor(colorRegistry_1.editorFindMatchHighlight);\n    if (matchHighlightColor) {\n        collector.addRule(\".monaco-workbench .search-view .findInFileMatch { background-color: \" + matchHighlightColor + \"; }\");\n    }\n    var diffInsertedColor = theme.getColor(colorRegistry_1.diffInserted);\n    if (diffInsertedColor) {\n        collector.addRule(\".monaco-workbench .search-view .replaceMatch { background-color: \" + diffInsertedColor + \"; }\");\n    }\n    var diffRemovedColor = theme.getColor(colorRegistry_1.diffRemoved);\n    if (diffRemovedColor) {\n        collector.addRule(\".monaco-workbench .search-view .replace.findInFileMatch { background-color: \" + diffRemovedColor + \"; }\");\n    }\n    var diffInsertedOutlineColor = theme.getColor(colorRegistry_1.diffInsertedOutline);\n    if (diffInsertedOutlineColor) {\n        collector.addRule(\".monaco-workbench .search-view .replaceMatch:not(:empty) { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + diffInsertedOutlineColor + \"; }\");\n    }\n    var diffRemovedOutlineColor = theme.getColor(colorRegistry_1.diffRemovedOutline);\n    if (diffRemovedOutlineColor) {\n        collector.addRule(\".monaco-workbench .search-view .replace.findInFileMatch { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + diffRemovedOutlineColor + \"; }\");\n    }\n    var findMatchHighlightBorder = theme.getColor(colorRegistry_1.editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(\".monaco-workbench .search-view .findInFileMatch { border: 1px \" + (theme.type === 'hc' ? 'dashed' : 'solid') + \" \" + findMatchHighlightBorder + \"; }\");\n    }\n    var outlineSelectionColor = theme.getColor(colorRegistry_1.listActiveSelectionForeground);\n    if (outlineSelectionColor) {\n        collector.addRule(\".monaco-workbench .search-view .monaco-list.element-focused .monaco-list-row.focused.selected:not(.highlighted) .action-label:focus { outline-color: \" + outlineSelectionColor + \" }\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchView.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/search/browser/searchView.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from 'vs/base/browser/dom';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { MessageType } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { ITreeContextMenuEvent, ITreeElement } from 'vs/base/browser/ui/tree/tree';\nimport { IAction } from 'vs/base/common/actions';\nimport { Delayer } from 'vs/base/common/async';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Iterator } from 'vs/base/common/iterator';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport * as env from 'vs/base/common/platform';\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./media/searchview';\nimport { ICodeEditor, isCodeEditor, isDiffEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport * as nls from 'vs/nls';\nimport { fillInContextMenuActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { IMenu, IMenuService, MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IContextMenuService, IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IConfirmation, IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { FileChangesEvent, FileChangeType, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { TreeResourceNavigator2, WorkbenchObjectTree, getSelectionKeyboardEvent } from 'vs/platform/list/browser/listService';\nimport { INotificationService, Severity } from 'vs/platform/notification/common/notification';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { IPatternInfo, ISearchComplete, ISearchConfiguration, ISearchConfigurationProperties, ITextQuery, SearchErrorCode, VIEW_ID } from 'vs/workbench/services/search/common/search';\nimport { ISearchHistoryService, ISearchHistoryValues } from 'vs/workbench/contrib/search/common/searchHistoryService';\nimport { diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, editorFindMatchHighlight, editorFindMatchHighlightBorder, listActiveSelectionForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { ICssStyleCollector, ITheme, IThemeService, registerThemingParticipant } from 'vs/platform/theme/common/themeService';\nimport { IWorkspaceContextService, WorkbenchState } from 'vs/platform/workspace/common/workspace';\nimport { OpenFileFolderAction, OpenFolderAction } from 'vs/workbench/browser/actions/workspaceActions';\nimport { ResourceLabels, IResourceLabelsContainer } from 'vs/workbench/browser/labels';\nimport { IEditor } from 'vs/workbench/common/editor';\nimport { ExcludePatternInputWidget, PatternInputWidget } from 'vs/workbench/contrib/search/browser/patternInputWidget';\nimport { CancelSearchAction, ClearSearchResultsAction, CollapseDeepestExpandedLevelAction, RefreshAction } from 'vs/workbench/contrib/search/browser/searchActions';\nimport { FileMatchRenderer, FolderMatchRenderer, MatchRenderer, SearchAccessibilityProvider, SearchDelegate, SearchDND } from 'vs/workbench/contrib/search/browser/searchResultsView';\nimport { ISearchWidgetOptions, SearchWidget } from 'vs/workbench/contrib/search/browser/searchWidget';\nimport * as Constants from 'vs/workbench/contrib/search/common/constants';\nimport { ITextQueryBuilderOptions, QueryBuilder } from 'vs/workbench/contrib/search/common/queryBuilder';\nimport { IReplaceService } from 'vs/workbench/contrib/search/common/replace';\nimport { getOutOfWorkspaceEditorResources } from 'vs/workbench/contrib/search/common/search';\nimport { FileMatch, FileMatchOrMatch, FolderMatch, IChangeEvent, ISearchWorkbenchService, Match, RenderableMatch, searchMatchComparer, SearchModel, SearchResult, BaseFolderMatch } from 'vs/workbench/contrib/search/common/searchModel';\nimport { ACTIVE_GROUP, IEditorService, SIDE_GROUP } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IPreferencesService, ISettingsEditorOptions } from 'vs/workbench/services/preferences/common/preferences';\nimport { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport { relativePath } from 'vs/base/common/resources';\nimport { IAccessibilityService, AccessibilitySupport } from 'vs/platform/accessibility/common/accessibility';\nimport { ViewletPanel, IViewletPanelOptions } from 'vs/workbench/browser/parts/views/panelViewlet';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { Memento } from 'vs/workbench/common/memento';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\n\nconst $ = dom.$;\n\nexport class SearchView extends ViewletPanel {\n\n\tprivate static readonly MAX_TEXT_RESULTS = 10000;\n\n\tprivate static readonly WIDE_CLASS_NAME = 'wide';\n\tprivate static readonly WIDE_VIEW_SIZE = 1000;\n\tprivate static readonly ACTIONS_RIGHT_CLASS_NAME = 'actions-right';\n\n\tprivate isDisposed: boolean;\n\n\tprivate container: HTMLElement;\n\tprivate queryBuilder: QueryBuilder;\n\tprivate viewModel: SearchModel;\n\tprivate memento: Memento;\n\n\tprivate viewletVisible: IContextKey<boolean>;\n\tprivate viewletFocused: IContextKey<boolean>;\n\tprivate inputBoxFocused: IContextKey<boolean>;\n\tprivate inputPatternIncludesFocused: IContextKey<boolean>;\n\tprivate inputPatternExclusionsFocused: IContextKey<boolean>;\n\tprivate firstMatchFocused: IContextKey<boolean>;\n\tprivate fileMatchOrMatchFocused: IContextKey<boolean>;\n\tprivate fileMatchOrFolderMatchFocus: IContextKey<boolean>;\n\tprivate fileMatchFocused: IContextKey<boolean>;\n\tprivate folderMatchFocused: IContextKey<boolean>;\n\tprivate matchFocused: IContextKey<boolean>;\n\tprivate hasSearchResultsKey: IContextKey<boolean>;\n\n\tprivate searchSubmitted: boolean;\n\tprivate searching: boolean;\n\n\tprivate actions: Array<CollapseDeepestExpandedLevelAction | ClearSearchResultsAction> = [];\n\tprivate cancelAction: CancelSearchAction;\n\tprivate refreshAction: RefreshAction;\n\tprivate contextMenu: IMenu;\n\n\tprivate tree: WorkbenchObjectTree<RenderableMatch>;\n\tprivate treeLabels: ResourceLabels;\n\tprivate viewletState: object;\n\tprivate globalMemento: object;\n\tprivate messagesElement: HTMLElement;\n\tprivate messageDisposables: IDisposable[] = [];\n\tprivate searchWidgetsContainerElement: HTMLElement;\n\tprivate searchWidget: SearchWidget;\n\tprivate size: dom.Dimension;\n\tprivate queryDetails: HTMLElement;\n\tprivate toggleQueryDetailsButton: HTMLElement;\n\tprivate inputPatternExcludes: ExcludePatternInputWidget;\n\tprivate inputPatternIncludes: PatternInputWidget;\n\tprivate resultsElement: HTMLElement;\n\n\tprivate currentSelectedFileMatch: FileMatch | undefined;\n\n\tprivate readonly selectCurrentMatchEmitter: Emitter<string | undefined>;\n\tprivate delayedRefresh: Delayer<void>;\n\tprivate changedWhileHidden: boolean;\n\n\tprivate searchWithoutFolderMessageElement: HTMLElement | undefined;\n\n\tprivate currentSearchQ = Promise.resolve();\n\n\tconstructor(\n\t\toptions: IViewletPanelOptions,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IContextViewService private readonly contextViewService: IContextViewService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@ISearchWorkbenchService private readonly searchWorkbenchService: ISearchWorkbenchService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IReplaceService private readonly replaceService: IReplaceService,\n\t\t@IUntitledEditorService private readonly untitledEditorService: IUntitledEditorService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@ISearchHistoryService private readonly searchHistoryService: ISearchHistoryService,\n\t\t@IEditorGroupsService private readonly editorGroupsService: IEditorGroupsService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper({ ...(options as IViewletPanelOptions), id: VIEW_ID, ariaHeaderLabel: nls.localize('searchView', \"Search\") }, keybindingService, contextMenuService, configurationService);\n\n\t\tthis.viewletVisible = Constants.SearchViewVisibleKey.bindTo(contextKeyService);\n\t\tthis.viewletFocused = Constants.SearchViewFocusedKey.bindTo(contextKeyService);\n\t\tthis.inputBoxFocused = Constants.InputBoxFocusedKey.bindTo(this.contextKeyService);\n\t\tthis.inputPatternIncludesFocused = Constants.PatternIncludesFocusedKey.bindTo(this.contextKeyService);\n\t\tthis.inputPatternExclusionsFocused = Constants.PatternExcludesFocusedKey.bindTo(this.contextKeyService);\n\t\tthis.firstMatchFocused = Constants.FirstMatchFocusKey.bindTo(contextKeyService);\n\t\tthis.fileMatchOrMatchFocused = Constants.FileMatchOrMatchFocusKey.bindTo(contextKeyService);\n\t\tthis.fileMatchOrFolderMatchFocus = Constants.FileMatchOrFolderMatchFocusKey.bindTo(contextKeyService);\n\t\tthis.fileMatchFocused = Constants.FileFocusKey.bindTo(contextKeyService);\n\t\tthis.folderMatchFocused = Constants.FolderFocusKey.bindTo(contextKeyService);\n\t\tthis.matchFocused = Constants.MatchFocusKey.bindTo(this.contextKeyService);\n\t\tthis.hasSearchResultsKey = Constants.HasSearchResults.bindTo(this.contextKeyService);\n\n\t\tthis.queryBuilder = this.instantiationService.createInstance(QueryBuilder);\n\t\tthis.memento = new Memento(this.id, storageService);\n\t\tthis.viewletState = this.memento.getMemento(StorageScope.WORKSPACE);\n\t\tthis.globalMemento = this.memento.getMemento(StorageScope.GLOBAL);\n\n\t\tthis._register(this.fileService.onFileChanges(e => this.onFilesChanged(e)));\n\t\tthis._register(this.untitledEditorService.onDidChangeDirty(e => this.onUntitledDidChangeDirty(e)));\n\t\tthis._register(this.contextService.onDidChangeWorkbenchState(() => this.onDidChangeWorkbenchState()));\n\t\tthis._register(this.searchHistoryService.onDidClearHistory(() => this.clearHistory()));\n\n\t\tthis.selectCurrentMatchEmitter = this._register(new Emitter<string>());\n\t\tthis._register(Event.debounce(this.selectCurrentMatchEmitter.event, (l, e) => e, 100, /*leading=*/true)\n\t\t\t(() => this.selectCurrentMatch()));\n\n\t\tthis.delayedRefresh = this._register(new Delayer<void>(250));\n\n\t\tthis.actions = [\n\t\t\tthis._register(this.instantiationService.createInstance(ClearSearchResultsAction, ClearSearchResultsAction.ID, ClearSearchResultsAction.LABEL)),\n\t\t\tthis._register(this.instantiationService.createInstance(CollapseDeepestExpandedLevelAction, CollapseDeepestExpandedLevelAction.ID, CollapseDeepestExpandedLevelAction.LABEL))\n\t\t];\n\t\tthis.refreshAction = this._register(this.instantiationService.createInstance(RefreshAction, RefreshAction.ID, RefreshAction.LABEL));\n\t\tthis.cancelAction = this._register(this.instantiationService.createInstance(CancelSearchAction, CancelSearchAction.ID, CancelSearchAction.LABEL));\n\t}\n\n\tgetContainer(): HTMLElement {\n\t\treturn this.container;\n\t}\n\n\tget searchResult(): SearchResult {\n\t\treturn this.viewModel && this.viewModel.searchResult;\n\t}\n\n\tprivate onDidChangeWorkbenchState(): void {\n\t\tif (this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY && this.searchWithoutFolderMessageElement) {\n\t\t\tdom.hide(this.searchWithoutFolderMessageElement);\n\t\t}\n\t}\n\n\trenderBody(parent: HTMLElement): void {\n\t\tthis.viewModel = this._register(this.searchWorkbenchService.searchModel);\n\t\tthis.container = dom.append(parent, dom.$('.search-view'));\n\n\t\tthis.searchWidgetsContainerElement = dom.append(this.container, $('.search-widgets-container'));\n\t\tthis.createSearchWidget(this.searchWidgetsContainerElement);\n\n\t\tconst history = this.searchHistoryService.load();\n\t\tconst filePatterns = this.viewletState['query.filePatterns'] || '';\n\t\tconst patternExclusions = this.viewletState['query.folderExclusions'] || '';\n\t\tconst patternExclusionsHistory: string[] = history.exclude || [];\n\t\tconst patternIncludes = this.viewletState['query.folderIncludes'] || '';\n\t\tconst patternIncludesHistory: string[] = history.include || [];\n\t\tconst queryDetailsExpanded = this.viewletState['query.queryDetailsExpanded'] || '';\n\t\tconst useExcludesAndIgnoreFiles = typeof this.viewletState['query.useExcludesAndIgnoreFiles'] === 'boolean' ?\n\t\t\tthis.viewletState['query.useExcludesAndIgnoreFiles'] : true;\n\n\t\tthis.queryDetails = dom.append(this.searchWidgetsContainerElement, $('.query-details'));\n\n\t\t// Toggle query details button\n\t\tthis.toggleQueryDetailsButton = dom.append(this.queryDetails,\n\t\t\t$('.more', { tabindex: 0, role: 'button', title: nls.localize('moreSearch', \"Toggle Search Details\") }));\n\n\t\tthis._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.CLICK, e => {\n\t\t\tdom.EventHelper.stop(e);\n\t\t\tthis.toggleQueryDetails(!this.isScreenReaderOptimized());\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_UP, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\tif (event.equals(KeyCode.Enter) || event.equals(KeyCode.Space)) {\n\t\t\t\tdom.EventHelper.stop(e);\n\t\t\t\tthis.toggleQueryDetails(false);\n\t\t\t}\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(this.toggleQueryDetailsButton, dom.EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\tif (event.equals(KeyMod.Shift | KeyCode.Tab)) {\n\t\t\t\tif (this.searchWidget.isReplaceActive()) {\n\t\t\t\t\tthis.searchWidget.focusReplaceAllAction();\n\t\t\t\t} else {\n\t\t\t\t\tthis.searchWidget.focusRegexAction();\n\t\t\t\t}\n\t\t\t\tdom.EventHelper.stop(e);\n\t\t\t}\n\t\t}));\n\n\t\t// folder includes list\n\t\tconst folderIncludesList = dom.append(this.queryDetails,\n\t\t\t$('.file-types.includes'));\n\t\tconst filesToIncludeTitle = nls.localize('searchScope.includes', \"files to include\");\n\t\tdom.append(folderIncludesList, $('h4', undefined, filesToIncludeTitle));\n\n\t\tthis.inputPatternIncludes = this._register(this.instantiationService.createInstance(PatternInputWidget, folderIncludesList, this.contextViewService, {\n\t\t\tariaLabel: nls.localize('label.includes', 'Search Include Patterns'),\n\t\t\thistory: patternIncludesHistory,\n\t\t}));\n\n\t\tthis.inputPatternIncludes.setValue(patternIncludes);\n\n\t\tthis.inputPatternIncludes.onSubmit(() => this.onQueryChanged(true));\n\t\tthis.inputPatternIncludes.onCancel(() => this.viewModel.cancelSearch()); // Cancel search without focusing the search widget\n\t\tthis.trackInputBox(this.inputPatternIncludes.inputFocusTracker, this.inputPatternIncludesFocused);\n\n\t\t// excludes list\n\t\tconst excludesList = dom.append(this.queryDetails, $('.file-types.excludes'));\n\t\tconst excludesTitle = nls.localize('searchScope.excludes', \"files to exclude\");\n\t\tdom.append(excludesList, $('h4', undefined, excludesTitle));\n\t\tthis.inputPatternExcludes = this._register(this.instantiationService.createInstance(ExcludePatternInputWidget, excludesList, this.contextViewService, {\n\t\t\tariaLabel: nls.localize('label.excludes', 'Search Exclude Patterns'),\n\t\t\thistory: patternExclusionsHistory,\n\t\t}));\n\n\t\tthis.inputPatternExcludes.setValue(patternExclusions);\n\t\tthis.inputPatternExcludes.setUseExcludesAndIgnoreFiles(useExcludesAndIgnoreFiles);\n\n\t\tthis.inputPatternExcludes.onSubmit(() => this.onQueryChanged(true));\n\t\tthis.inputPatternExcludes.onCancel(() => this.viewModel.cancelSearch()); // Cancel search without focusing the search widget\n\t\tthis.trackInputBox(this.inputPatternExcludes.inputFocusTracker, this.inputPatternExclusionsFocused);\n\n\t\tthis.messagesElement = dom.append(this.container, $('.messages'));\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tthis.showSearchWithoutFolderMessage();\n\t\t}\n\n\t\tthis.createSearchResultsView(this.container);\n\n\t\tif (filePatterns !== '' || patternExclusions !== '' || patternIncludes !== '' || queryDetailsExpanded !== '' || !useExcludesAndIgnoreFiles) {\n\t\t\tthis.toggleQueryDetails(true, true, true);\n\t\t}\n\n\t\tthis._register(this.viewModel.searchResult.onChange((event) => this.onSearchResultsChanged(event)));\n\n\t\tthis._register(this.searchWidget.searchInput.onInput(() => this.updateActions()));\n\t\tthis._register(this.searchWidget.replaceInput.onDidChange(() => this.updateActions()));\n\n\t\tthis._register(this.onDidFocus(() => this.viewletFocused.set(true)));\n\t\tthis._register(this.onDidBlur(() => this.viewletFocused.set(false)));\n\n\t\tthis._register(this.onDidChangeBodyVisibility(visible => this.onVisibilityChanged(visible)));\n\t}\n\n\tprivate onVisibilityChanged(visible: boolean): void {\n\t\tthis.viewletVisible.set(visible);\n\t\tif (visible) {\n\t\t\tif (this.changedWhileHidden) {\n\t\t\t\t// Render if results changed while viewlet was hidden - #37818\n\t\t\t\tthis.refreshAndUpdateCount();\n\t\t\t\tthis.changedWhileHidden = false;\n\t\t\t}\n\t\t}\n\n\t\t// Enable highlights if there are searchresults\n\t\tif (this.viewModel) {\n\t\t\tthis.viewModel.searchResult.toggleHighlights(visible);\n\t\t}\n\n\t\t// Open focused element from results in case the editor area is otherwise empty\n\t\tif (visible && !this.editorService.activeEditor) {\n\t\t\tconst focus = this.tree.getFocus();\n\t\t\tif (focus) {\n\t\t\t\tthis.onFocus(focus, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tget searchAndReplaceWidget(): SearchWidget {\n\t\treturn this.searchWidget;\n\t}\n\n\tget searchIncludePattern(): PatternInputWidget {\n\t\treturn this.inputPatternIncludes;\n\t}\n\n\tget searchExcludePattern(): PatternInputWidget {\n\t\treturn this.inputPatternExcludes;\n\t}\n\n\tprotected updateActions(): void {\n\t\tfor (const action of this.actions) {\n\t\t\taction.update();\n\t\t\tthis.refreshAction.update();\n\t\t\tthis.cancelAction.update();\n\t\t}\n\t\tsuper.updateActions();\n\t}\n\n\tprivate isScreenReaderOptimized() {\n\t\tconst detected = this.accessibilityService.getAccessibilitySupport() === AccessibilitySupport.Enabled;\n\t\tconst config = this.configurationService.getValue<IEditorOptions>('editor').accessibilitySupport;\n\t\treturn config === 'on' || (config === 'auto' && detected);\n\t}\n\n\tprivate createSearchWidget(container: HTMLElement): void {\n\t\tconst contentPattern = this.viewletState['query.contentPattern'] || '';\n\t\tconst replaceText = this.viewletState['query.replaceText'] || '';\n\t\tconst isRegex = this.viewletState['query.regex'] === true;\n\t\tconst isWholeWords = this.viewletState['query.wholeWords'] === true;\n\t\tconst isCaseSensitive = this.viewletState['query.caseSensitive'] === true;\n\t\tconst history = this.searchHistoryService.load();\n\t\tconst searchHistory = history.search || this.viewletState['query.searchHistory'] || [];\n\t\tconst replaceHistory = history.replace || this.viewletState['query.replaceHistory'] || [];\n\t\tconst showReplace = typeof this.viewletState['view.showReplace'] === 'boolean' ? this.viewletState['view.showReplace'] : true;\n\n\t\tthis.searchWidget = this._register(this.instantiationService.createInstance(SearchWidget, container, <ISearchWidgetOptions>{\n\t\t\tvalue: contentPattern,\n\t\t\treplaceValue: replaceText,\n\t\t\tisRegex: isRegex,\n\t\t\tisCaseSensitive: isCaseSensitive,\n\t\t\tisWholeWords: isWholeWords,\n\t\t\tsearchHistory: searchHistory,\n\t\t\treplaceHistory: replaceHistory\n\t\t}));\n\n\t\tif (showReplace) {\n\t\t\tthis.searchWidget.toggleReplace(true);\n\t\t}\n\n\t\tthis._register(this.searchWidget.onSearchSubmit(() => this.onQueryChanged()));\n\t\tthis._register(this.searchWidget.onSearchCancel(() => this.cancelSearch()));\n\t\tthis._register(this.searchWidget.searchInput.onDidOptionChange(() => this.onQueryChanged(true)));\n\n\t\tthis._register(this.searchWidget.onDidHeightChange(() => this.reLayout()));\n\n\t\tthis._register(this.searchWidget.onReplaceToggled(() => this.reLayout()));\n\t\tthis._register(this.searchWidget.onReplaceStateChange((state) => {\n\t\t\tthis.viewModel.replaceActive = state;\n\t\t\tthis.refreshTree();\n\t\t}));\n\t\tthis._register(this.searchWidget.onReplaceValueChanged((value) => {\n\t\t\tthis.viewModel.replaceString = this.searchWidget.getReplaceValue();\n\t\t\tthis.delayedRefresh.trigger(() => this.refreshTree());\n\t\t}));\n\n\t\tthis._register(this.searchWidget.onBlur(() => {\n\t\t\tthis.toggleQueryDetailsButton.focus();\n\t\t}));\n\n\t\tthis._register(this.searchWidget.onReplaceAll(() => this.replaceAll()));\n\n\t\tthis.trackInputBox(this.searchWidget.searchInputFocusTracker);\n\t\tthis.trackInputBox(this.searchWidget.replaceInputFocusTracker);\n\t}\n\n\tprivate trackInputBox(inputFocusTracker: dom.IFocusTracker, contextKey?: IContextKey<boolean>): void {\n\t\tthis._register(inputFocusTracker.onDidFocus(() => {\n\t\t\tthis.inputBoxFocused.set(true);\n\t\t\tif (contextKey) {\n\t\t\t\tcontextKey.set(true);\n\t\t\t}\n\t\t}));\n\t\tthis._register(inputFocusTracker.onDidBlur(() => {\n\t\t\tthis.inputBoxFocused.set(this.searchWidget.searchInputHasFocus()\n\t\t\t\t|| this.searchWidget.replaceInputHasFocus()\n\t\t\t\t|| this.inputPatternIncludes.inputHasFocus()\n\t\t\t\t|| this.inputPatternExcludes.inputHasFocus());\n\t\t\tif (contextKey) {\n\t\t\t\tcontextKey.set(false);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onSearchResultsChanged(event?: IChangeEvent): void {\n\t\tif (this.isVisible()) {\n\t\t\treturn this.refreshAndUpdateCount(event);\n\t\t} else {\n\t\t\tthis.changedWhileHidden = true;\n\t\t}\n\t}\n\n\tprivate refreshAndUpdateCount(event?: IChangeEvent): void {\n\t\tthis.searchWidget.setReplaceAllActionState(!this.viewModel.searchResult.isEmpty());\n\t\tthis.updateSearchResultCount(this.viewModel.searchResult.query.userDisabledExcludesAndIgnoreFiles);\n\t\treturn this.refreshTree(event);\n\t}\n\n\trefreshTree(event?: IChangeEvent): void {\n\t\tconst collapseResults = this.configurationService.getValue<ISearchConfigurationProperties>('search').collapseResults;\n\t\tif (!event || event.added || event.removed) {\n\t\t\tthis.tree.setChildren(null, this.createResultIterator(collapseResults));\n\t\t} else {\n\t\t\tevent.elements.forEach(element => {\n\t\t\t\tif (element instanceof BaseFolderMatch) {\n\t\t\t\t\t// The folder may or may not be in the tree. Refresh the whole thing.\n\t\t\t\t\tthis.tree.setChildren(null, this.createResultIterator(collapseResults));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst root = element instanceof SearchResult ? null : element;\n\t\t\t\tthis.tree.setChildren(root, this.createIterator(element, collapseResults));\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate createResultIterator(collapseResults: ISearchConfigurationProperties['collapseResults']): Iterator<ITreeElement<RenderableMatch>> {\n\t\tconst folderMatches = this.searchResult.folderMatches()\n\t\t\t.filter(fm => !fm.isEmpty())\n\t\t\t.sort(searchMatchComparer);\n\n\t\tif (folderMatches.length === 1) {\n\t\t\treturn this.createFolderIterator(folderMatches[0], collapseResults);\n\t\t}\n\n\t\tconst foldersIt = Iterator.fromArray(folderMatches);\n\t\treturn Iterator.map(foldersIt, folderMatch => {\n\t\t\tconst children = this.createFolderIterator(folderMatch, collapseResults);\n\t\t\treturn <ITreeElement<RenderableMatch>>{ element: folderMatch, children };\n\t\t});\n\t}\n\n\tprivate createFolderIterator(folderMatch: BaseFolderMatch, collapseResults: ISearchConfigurationProperties['collapseResults']): Iterator<ITreeElement<RenderableMatch>> {\n\t\tconst filesIt = Iterator.fromArray(\n\t\t\tfolderMatch.matches()\n\t\t\t\t.sort(searchMatchComparer));\n\n\t\treturn Iterator.map(filesIt, fileMatch => {\n\t\t\tconst children = this.createFileIterator(fileMatch);\n\n\t\t\tlet nodeExists = true;\n\t\t\ttry { this.tree.getNode(fileMatch); } catch (e) { nodeExists = false; }\n\n\t\t\tconst collapsed = nodeExists ? undefined :\n\t\t\t\t(collapseResults === 'alwaysCollapse' || (fileMatch.matches().length > 10 && collapseResults !== 'alwaysExpand'));\n\n\t\t\treturn <ITreeElement<RenderableMatch>>{ element: fileMatch, children, collapsed };\n\t\t});\n\t}\n\n\tprivate createFileIterator(fileMatch: FileMatch): Iterator<ITreeElement<RenderableMatch>> {\n\t\tconst matchesIt = Iterator.from(\n\t\t\tfileMatch.matches()\n\t\t\t\t.sort(searchMatchComparer));\n\t\treturn Iterator.map(matchesIt, r => (<ITreeElement<RenderableMatch>>{ element: r }));\n\t}\n\n\tprivate createIterator(match: BaseFolderMatch | FileMatch | SearchResult, collapseResults: ISearchConfigurationProperties['collapseResults']): Iterator<ITreeElement<RenderableMatch>> {\n\t\treturn match instanceof SearchResult ? this.createResultIterator(collapseResults) :\n\t\t\tmatch instanceof BaseFolderMatch ? this.createFolderIterator(match, collapseResults) :\n\t\t\t\tthis.createFileIterator(match);\n\t}\n\n\tprivate replaceAll(): void {\n\t\tif (this.viewModel.searchResult.count() === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst progressRunner = this.progressService.show(100);\n\n\t\tconst occurrences = this.viewModel.searchResult.count();\n\t\tconst fileCount = this.viewModel.searchResult.fileCount();\n\t\tconst replaceValue = this.searchWidget.getReplaceValue() || '';\n\t\tconst afterReplaceAllMessage = this.buildAfterReplaceAllMessage(occurrences, fileCount, replaceValue);\n\n\t\tconst confirmation: IConfirmation = {\n\t\t\ttitle: nls.localize('replaceAll.confirmation.title', \"Replace All\"),\n\t\t\tmessage: this.buildReplaceAllConfirmationMessage(occurrences, fileCount, replaceValue),\n\t\t\tprimaryButton: nls.localize('replaceAll.confirm.button', \"&&Replace\"),\n\t\t\ttype: 'question'\n\t\t};\n\n\t\tthis.dialogService.confirm(confirmation).then(res => {\n\t\t\tif (res.confirmed) {\n\t\t\t\tthis.searchWidget.setReplaceAllActionState(false);\n\t\t\t\tthis.viewModel.searchResult.replaceAll(progressRunner).then(() => {\n\t\t\t\t\tprogressRunner.done();\n\t\t\t\t\tconst messageEl = this.clearMessage();\n\t\t\t\t\tdom.append(messageEl, $('p', undefined, afterReplaceAllMessage));\n\t\t\t\t}, (error) => {\n\t\t\t\t\tprogressRunner.done();\n\t\t\t\t\terrors.isPromiseCanceledError(error);\n\t\t\t\t\tthis.notificationService.error(error);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate buildAfterReplaceAllMessage(occurrences: number, fileCount: number, replaceValue?: string) {\n\t\tif (occurrences === 1) {\n\t\t\tif (fileCount === 1) {\n\t\t\t\tif (replaceValue) {\n\t\t\t\t\treturn nls.localize('replaceAll.occurrence.file.message', \"Replaced {0} occurrence across {1} file with '{2}'.\", occurrences, fileCount, replaceValue);\n\t\t\t\t}\n\n\t\t\t\treturn nls.localize('removeAll.occurrence.file.message', \"Replaced {0} occurrence across {1} file'.\", occurrences, fileCount);\n\t\t\t}\n\n\t\t\tif (replaceValue) {\n\t\t\t\treturn nls.localize('replaceAll.occurrence.files.message', \"Replaced {0} occurrence across {1} files with '{2}'.\", occurrences, fileCount, replaceValue);\n\t\t\t}\n\n\t\t\treturn nls.localize('removeAll.occurrence.files.message', \"Replaced {0} occurrence across {1} files.\", occurrences, fileCount);\n\t\t}\n\n\t\tif (fileCount === 1) {\n\t\t\tif (replaceValue) {\n\t\t\t\treturn nls.localize('replaceAll.occurrences.file.message', \"Replaced {0} occurrences across {1} file with '{2}'.\", occurrences, fileCount, replaceValue);\n\t\t\t}\n\n\t\t\treturn nls.localize('removeAll.occurrences.file.message', \"Replaced {0} occurrences across {1} file'.\", occurrences, fileCount);\n\t\t}\n\n\t\tif (replaceValue) {\n\t\t\treturn nls.localize('replaceAll.occurrences.files.message', \"Replaced {0} occurrences across {1} files with '{2}'.\", occurrences, fileCount, replaceValue);\n\t\t}\n\n\t\treturn nls.localize('removeAll.occurrences.files.message', \"Replaced {0} occurrences across {1} files.\", occurrences, fileCount);\n\t}\n\n\tprivate buildReplaceAllConfirmationMessage(occurrences: number, fileCount: number, replaceValue?: string) {\n\t\tif (occurrences === 1) {\n\t\t\tif (fileCount === 1) {\n\t\t\t\tif (replaceValue) {\n\t\t\t\t\treturn nls.localize('removeAll.occurrence.file.confirmation.message', \"Replace {0} occurrence across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n\t\t\t\t}\n\n\t\t\t\treturn nls.localize('replaceAll.occurrence.file.confirmation.message', \"Replace {0} occurrence across {1} file'?\", occurrences, fileCount);\n\t\t\t}\n\n\t\t\tif (replaceValue) {\n\t\t\t\treturn nls.localize('removeAll.occurrence.files.confirmation.message', \"Replace {0} occurrence across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n\t\t\t}\n\n\t\t\treturn nls.localize('replaceAll.occurrence.files.confirmation.message', \"Replace {0} occurrence across {1} files?\", occurrences, fileCount);\n\t\t}\n\n\t\tif (fileCount === 1) {\n\t\t\tif (replaceValue) {\n\t\t\t\treturn nls.localize('removeAll.occurrences.file.confirmation.message', \"Replace {0} occurrences across {1} file with '{2}'?\", occurrences, fileCount, replaceValue);\n\t\t\t}\n\n\t\t\treturn nls.localize('replaceAll.occurrences.file.confirmation.message', \"Replace {0} occurrences across {1} file'?\", occurrences, fileCount);\n\t\t}\n\n\t\tif (replaceValue) {\n\t\t\treturn nls.localize('removeAll.occurrences.files.confirmation.message', \"Replace {0} occurrences across {1} files with '{2}'?\", occurrences, fileCount, replaceValue);\n\t\t}\n\n\t\treturn nls.localize('replaceAll.occurrences.files.confirmation.message', \"Replace {0} occurrences across {1} files?\", occurrences, fileCount);\n\t}\n\n\tprivate clearMessage(): HTMLElement {\n\t\tthis.searchWithoutFolderMessageElement = undefined;\n\n\t\tdom.clearNode(this.messagesElement);\n\t\tdom.show(this.messagesElement);\n\t\tdispose(this.messageDisposables);\n\t\tthis.messageDisposables = [];\n\n\t\treturn dom.append(this.messagesElement, $('.message'));\n\t}\n\n\tprivate createSearchResultsView(container: HTMLElement): void {\n\t\tthis.resultsElement = dom.append(container, $('.results.show-file-icons'));\n\t\tconst delegate = this.instantiationService.createInstance(SearchDelegate);\n\n\t\tconst identityProvider: IIdentityProvider<RenderableMatch> = {\n\t\t\tgetId(element: RenderableMatch) {\n\t\t\t\treturn element.id();\n\t\t\t}\n\t\t};\n\n\t\tthis.treeLabels = this._register(this.instantiationService.createInstance(ResourceLabels, { onDidChangeVisibility: this.onDidChangeBodyVisibility } as IResourceLabelsContainer));\n\t\tthis.tree = this._register(<WorkbenchObjectTree<RenderableMatch, any>>this.instantiationService.createInstance(WorkbenchObjectTree,\n\t\t\tthis.resultsElement,\n\t\t\tdelegate,\n\t\t\t[\n\t\t\t\tthis._register(this.instantiationService.createInstance(FolderMatchRenderer, this.viewModel, this, this.treeLabels)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(FileMatchRenderer, this.viewModel, this, this.treeLabels)),\n\t\t\t\tthis._register(this.instantiationService.createInstance(MatchRenderer, this.viewModel, this)),\n\t\t\t],\n\t\t\t{\n\t\t\t\tidentityProvider,\n\t\t\t\taccessibilityProvider: this.instantiationService.createInstance(SearchAccessibilityProvider, this.viewModel),\n\t\t\t\tdnd: this.instantiationService.createInstance(SearchDND),\n\t\t\t\tmultipleSelectionSupport: false\n\t\t\t}));\n\t\tthis._register(this.tree.onContextMenu(e => this.onContextMenu(e)));\n\n\t\tconst resourceNavigator = this._register(new TreeResourceNavigator2(this.tree, { openOnFocus: true }));\n\t\tthis._register(Event.debounce(resourceNavigator.onDidOpenResource, (last, event) => event, 75, true)(options => {\n\t\t\tif (options.element instanceof Match) {\n\t\t\t\tconst selectedMatch: Match = options.element;\n\t\t\t\tif (this.currentSelectedFileMatch) {\n\t\t\t\t\tthis.currentSelectedFileMatch.setSelectedMatch(null);\n\t\t\t\t}\n\t\t\t\tthis.currentSelectedFileMatch = selectedMatch.parent();\n\t\t\t\tthis.currentSelectedFileMatch.setSelectedMatch(selectedMatch);\n\n\t\t\t\tthis.onFocus(selectedMatch, options.editorOptions.preserveFocus, options.sideBySide, options.editorOptions.pinned);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(Event.any<any>(this.tree.onDidFocus, this.tree.onDidChangeFocus)(() => {\n\t\t\tif (this.tree.isDOMFocused()) {\n\t\t\t\tconst focus = this.tree.getFocus()[0];\n\t\t\t\tthis.firstMatchFocused.set(this.tree.navigate().first() === focus);\n\t\t\t\tthis.fileMatchOrMatchFocused.set(!!focus);\n\t\t\t\tthis.fileMatchFocused.set(focus instanceof FileMatch);\n\t\t\t\tthis.folderMatchFocused.set(focus instanceof FolderMatch);\n\t\t\t\tthis.matchFocused.set(focus instanceof Match);\n\t\t\t\tthis.fileMatchOrFolderMatchFocus.set(focus instanceof FileMatch || focus instanceof FolderMatch);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.tree.onDidBlur(e => {\n\t\t\tthis.firstMatchFocused.reset();\n\t\t\tthis.fileMatchOrMatchFocused.reset();\n\t\t\tthis.fileMatchFocused.reset();\n\t\t\tthis.folderMatchFocused.reset();\n\t\t\tthis.matchFocused.reset();\n\t\t\tthis.fileMatchOrFolderMatchFocus.reset();\n\t\t}));\n\t}\n\n\tprivate onContextMenu(e: ITreeContextMenuEvent<RenderableMatch>): void {\n\t\tif (!e.element) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.contextMenu) {\n\t\t\tthis.contextMenu = this._register(this.menuService.createMenu(MenuId.SearchContext, this.contextKeyService));\n\t\t}\n\n\t\te.browserEvent.preventDefault();\n\t\te.browserEvent.stopPropagation();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => e.anchor,\n\t\t\tgetActions: () => {\n\t\t\t\tconst actions: IAction[] = [];\n\t\t\t\tfillInContextMenuActions(this.contextMenu, { shouldForwardArgs: true }, actions, this.contextMenuService);\n\t\t\t\treturn actions;\n\t\t\t},\n\t\t\tgetActionsContext: () => e.element\n\t\t});\n\t}\n\n\tselectCurrentMatch(): void {\n\t\tconst focused = this.tree.getFocus()[0];\n\t\tconst fakeKeyboardEvent = getSelectionKeyboardEvent(undefined, false);\n\t\tthis.tree.setSelection([focused], fakeKeyboardEvent);\n\t}\n\n\tselectNextMatch(): void {\n\t\tconst [selected] = this.tree.getSelection();\n\n\t\t// Expand the initial selected node, if needed\n\t\tif (selected instanceof FileMatch) {\n\t\t\tif (this.tree.isCollapsed(selected)) {\n\t\t\t\tthis.tree.expand(selected);\n\t\t\t}\n\t\t}\n\n\t\tlet navigator = this.tree.navigate(selected);\n\n\t\tlet next = navigator.next();\n\t\tif (!next) {\n\t\t\t// Reached the end - get a new navigator from the root.\n\t\t\tnavigator = this.tree.navigate();\n\t\t\tnext = navigator.first();\n\t\t}\n\n\t\t// Expand and go past FileMatch nodes\n\t\twhile (!(next instanceof Match)) {\n\t\t\tif (this.tree.isCollapsed(next)) {\n\t\t\t\tthis.tree.expand(next);\n\t\t\t}\n\n\t\t\t// Select the FileMatch's first child\n\t\t\tnext = navigator.next();\n\t\t}\n\n\t\t// Reveal the newly selected element\n\t\tif (next) {\n\t\t\tthis.tree.setFocus([next], getSelectionKeyboardEvent(undefined, false));\n\t\t\tthis.tree.reveal(next);\n\t\t\tthis.selectCurrentMatchEmitter.fire(undefined);\n\t\t}\n\t}\n\n\tselectPreviousMatch(): void {\n\t\tconst [selected] = this.tree.getSelection();\n\t\tlet navigator = this.tree.navigate(selected);\n\n\t\tlet prev = navigator.previous();\n\n\t\t// Expand and go past FileMatch nodes\n\t\tif (!(prev instanceof Match)) {\n\t\t\tprev = navigator.previous();\n\t\t\tif (!prev) {\n\t\t\t\t// Wrap around\n\t\t\t\tprev = navigator.last();\n\n\t\t\t\t// This is complicated because .last will set the navigator to the last FileMatch,\n\t\t\t\t// so expand it and FF to its last child\n\t\t\t\tthis.tree.expand(prev);\n\t\t\t\tlet tmp: RenderableMatch | null;\n\t\t\t\twhile (tmp = navigator.next()) {\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!(prev instanceof Match)) {\n\t\t\t\t// There is a second non-Match result, which must be a collapsed FileMatch.\n\t\t\t\t// Expand it then select its last child.\n\t\t\t\tconst nextItem = navigator.next();\n\t\t\t\tthis.tree.expand(prev);\n\t\t\t\tnavigator = this.tree.navigate(nextItem); // recreate navigator because modifying the tree can invalidate it\n\t\t\t\tprev = navigator.previous();\n\t\t\t}\n\t\t}\n\n\t\t// Reveal the newly selected element\n\t\tif (prev) {\n\t\t\tthis.tree.setFocus([prev], getSelectionKeyboardEvent(undefined, false));\n\t\t\tthis.tree.reveal(prev);\n\t\t\tthis.selectCurrentMatchEmitter.fire(undefined);\n\t\t}\n\t}\n\n\tmoveFocusToResults(): void {\n\t\tthis.tree.domFocus();\n\t}\n\n\tfocus(): void {\n\t\tsuper.focus();\n\n\t\tconst updatedText = this.updateTextFromSelection();\n\t\tthis.searchWidget.focus(undefined, undefined, updatedText);\n\t}\n\n\tupdateTextFromSelection(allowUnselectedWord = true): boolean {\n\t\tlet updatedText = false;\n\t\tconst seedSearchStringFromSelection = this.configurationService.getValue<IEditorOptions>('editor').find!.seedSearchStringFromSelection;\n\t\tif (seedSearchStringFromSelection) {\n\t\t\tlet selectedText = this.getSearchTextFromEditor(allowUnselectedWord);\n\t\t\tif (selectedText) {\n\t\t\t\tif (this.searchWidget.searchInput.getRegex()) {\n\t\t\t\t\tselectedText = strings.escapeRegExpCharacters(selectedText);\n\t\t\t\t}\n\n\t\t\t\tthis.searchWidget.searchInput.setValue(selectedText);\n\t\t\t\tupdatedText = true;\n\t\t\t}\n\t\t}\n\n\t\treturn updatedText;\n\t}\n\n\tfocusNextInputBox(): void {\n\t\tif (this.searchWidget.searchInputHasFocus()) {\n\t\t\tif (this.searchWidget.isReplaceShown()) {\n\t\t\t\tthis.searchWidget.focus(true, true);\n\t\t\t} else {\n\t\t\t\tthis.moveFocusFromSearchOrReplace();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.searchWidget.replaceInputHasFocus()) {\n\t\t\tthis.moveFocusFromSearchOrReplace();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.inputPatternIncludes.inputHasFocus()) {\n\t\t\tthis.inputPatternExcludes.focus();\n\t\t\tthis.inputPatternExcludes.select();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.inputPatternExcludes.inputHasFocus()) {\n\t\t\tthis.selectTreeIfNotSelected();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate moveFocusFromSearchOrReplace() {\n\t\tif (this.showsFileTypes()) {\n\t\t\tthis.toggleQueryDetails(true, this.showsFileTypes());\n\t\t} else {\n\t\t\tthis.selectTreeIfNotSelected();\n\t\t}\n\t}\n\n\tfocusPreviousInputBox(): void {\n\t\tif (this.searchWidget.searchInputHasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.searchWidget.replaceInputHasFocus()) {\n\t\t\tthis.searchWidget.focus(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.inputPatternIncludes.inputHasFocus()) {\n\t\t\tthis.searchWidget.focus(true, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.inputPatternExcludes.inputHasFocus()) {\n\t\t\tthis.inputPatternIncludes.focus();\n\t\t\tthis.inputPatternIncludes.select();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.tree.isDOMFocused()) {\n\t\t\tthis.moveFocusFromResults();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate moveFocusFromResults(): void {\n\t\tif (this.showsFileTypes()) {\n\t\t\tthis.toggleQueryDetails(true, true, false, true);\n\t\t} else {\n\t\t\tthis.searchWidget.focus(true, true);\n\t\t}\n\t}\n\n\tprivate reLayout(): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst actionsPosition = this.configurationService.getValue<ISearchConfigurationProperties>('search').actionsPosition;\n\t\tdom.toggleClass(this.getContainer(), SearchView.ACTIONS_RIGHT_CLASS_NAME, actionsPosition === 'right');\n\t\tdom.toggleClass(this.getContainer(), SearchView.WIDE_CLASS_NAME, this.size.width >= SearchView.WIDE_VIEW_SIZE);\n\n\t\tthis.searchWidget.setWidth(this.size.width - 28 /* container margin */);\n\n\t\tthis.inputPatternExcludes.setWidth(this.size.width - 28 /* container margin */);\n\t\tthis.inputPatternIncludes.setWidth(this.size.width - 28 /* container margin */);\n\n\t\tconst messagesSize = this.messagesElement.style.display === 'none' ?\n\t\t\t0 :\n\t\t\tdom.getTotalHeight(this.messagesElement);\n\n\t\tconst searchResultContainerSize = this.size.height -\n\t\t\tmessagesSize -\n\t\t\tdom.getTotalHeight(this.searchWidgetsContainerElement);\n\n\t\tthis.resultsElement.style.height = searchResultContainerSize + 'px';\n\n\t\tthis.tree.layout(searchResultContainerSize, this.size.width);\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis.size = new dom.Dimension(width, height);\n\t\tthis.reLayout();\n\t}\n\n\tgetControl() {\n\t\treturn this.tree;\n\t}\n\n\tisSearchSubmitted(): boolean {\n\t\treturn this.searchSubmitted;\n\t}\n\n\tisSearching(): boolean {\n\t\treturn this.searching;\n\t}\n\n\tallSearchFieldsClear(): boolean {\n\t\treturn this.searchWidget.getReplaceValue() === '' &&\n\t\t\tthis.searchWidget.searchInput.getValue() === '';\n\t}\n\n\thasSearchResults(): boolean {\n\t\treturn !this.viewModel.searchResult.isEmpty();\n\t}\n\n\tclearSearchResults(): void {\n\t\tthis.viewModel.searchResult.clear();\n\t\tthis.showEmptyStage();\n\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\tthis.showSearchWithoutFolderMessage();\n\t\t}\n\t\tthis.searchWidget.clear();\n\t\tthis.viewModel.cancelSearch();\n\t\tthis.updateActions();\n\t}\n\n\tcancelSearch(): boolean {\n\t\tif (this.viewModel.cancelSearch()) {\n\t\t\tthis.searchWidget.focus();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate selectTreeIfNotSelected(): void {\n\t\tif (this.tree.getNode(null)) {\n\t\t\tthis.tree.domFocus();\n\t\t\tconst selection = this.tree.getSelection();\n\t\t\tif (selection.length === 0) {\n\t\t\t\tthis.tree.focusNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getSearchTextFromEditor(allowUnselectedWord: boolean): string | null {\n\t\tif (!this.editorService.activeEditor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (dom.isAncestor(document.activeElement, this.getContainer())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet activeTextEditorWidget = this.editorService.activeTextEditorWidget;\n\t\tif (isDiffEditor(activeTextEditorWidget)) {\n\t\t\tif (activeTextEditorWidget.getOriginalEditor().hasTextFocus()) {\n\t\t\t\tactiveTextEditorWidget = activeTextEditorWidget.getOriginalEditor();\n\t\t\t} else {\n\t\t\t\tactiveTextEditorWidget = activeTextEditorWidget.getModifiedEditor();\n\t\t\t}\n\t\t}\n\n\t\tif (!isCodeEditor(activeTextEditorWidget) || !activeTextEditorWidget.hasModel()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = activeTextEditorWidget.getSelection();\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (range.isEmpty() && !this.searchWidget.searchInput.getValue() && allowUnselectedWord) {\n\t\t\tconst wordAtPosition = activeTextEditorWidget.getModel().getWordAtPosition(range.getStartPosition());\n\t\t\tif (wordAtPosition) {\n\t\t\t\treturn wordAtPosition.word;\n\t\t\t}\n\t\t}\n\n\t\tif (!range.isEmpty()) {\n\t\t\tlet searchText = '';\n\t\t\tfor (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n\t\t\t\tlet lineText = activeTextEditorWidget.getModel().getLineContent(i);\n\t\t\t\tif (i === range.endLineNumber) {\n\t\t\t\t\tlineText = lineText.substring(0, range.endColumn - 1);\n\t\t\t\t}\n\n\t\t\t\tif (i === range.startLineNumber) {\n\t\t\t\t\tlineText = lineText.substring(range.startColumn - 1);\n\t\t\t\t}\n\n\t\t\t\tif (i !== range.startLineNumber) {\n\t\t\t\t\tlineText = '\\n' + lineText;\n\t\t\t\t}\n\n\t\t\t\tsearchText += lineText;\n\t\t\t}\n\n\t\t\treturn searchText;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate showsFileTypes(): boolean {\n\t\treturn dom.hasClass(this.queryDetails, 'more');\n\t}\n\n\ttoggleCaseSensitive(): void {\n\t\tthis.searchWidget.searchInput.setCaseSensitive(!this.searchWidget.searchInput.getCaseSensitive());\n\t\tthis.onQueryChanged(true);\n\t}\n\n\ttoggleWholeWords(): void {\n\t\tthis.searchWidget.searchInput.setWholeWords(!this.searchWidget.searchInput.getWholeWords());\n\t\tthis.onQueryChanged(true);\n\t}\n\n\ttoggleRegex(): void {\n\t\tthis.searchWidget.searchInput.setRegex(!this.searchWidget.searchInput.getRegex());\n\t\tthis.onQueryChanged(true);\n\t}\n\n\ttoggleQueryDetails(moveFocus = true, show?: boolean, skipLayout?: boolean, reverse?: boolean): void {\n\t\tconst cls = 'more';\n\t\tshow = typeof show === 'undefined' ? !dom.hasClass(this.queryDetails, cls) : Boolean(show);\n\t\tthis.viewletState['query.queryDetailsExpanded'] = show;\n\t\tskipLayout = Boolean(skipLayout);\n\n\t\tif (show) {\n\t\t\tthis.toggleQueryDetailsButton.setAttribute('aria-expanded', 'true');\n\t\t\tdom.addClass(this.queryDetails, cls);\n\t\t\tif (moveFocus) {\n\t\t\t\tif (reverse) {\n\t\t\t\t\tthis.inputPatternExcludes.focus();\n\t\t\t\t\tthis.inputPatternExcludes.select();\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputPatternIncludes.focus();\n\t\t\t\t\tthis.inputPatternIncludes.select();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.toggleQueryDetailsButton.setAttribute('aria-expanded', 'false');\n\t\t\tdom.removeClass(this.queryDetails, cls);\n\t\t\tif (moveFocus) {\n\t\t\t\tthis.searchWidget.focus();\n\t\t\t}\n\t\t}\n\n\t\tif (!skipLayout && this.size) {\n\t\t\tthis.layout(this.size.height);\n\t\t}\n\t}\n\n\tsearchInFolders(resources?: URI[]): void {\n\t\tconst folderPaths: string[] = [];\n\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\tif (resources) {\n\t\t\tresources.forEach(resource => {\n\t\t\t\tlet folderPath: string | undefined;\n\t\t\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.FOLDER) {\n\t\t\t\t\t// Show relative path from the root for single-root mode\n\t\t\t\t\tfolderPath = relativePath(workspace.folders[0].uri, resource); // always uses forward slashes\n\t\t\t\t\tif (folderPath && folderPath !== '.') {\n\t\t\t\t\t\tfolderPath = './' + folderPath;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst owningFolder = this.contextService.getWorkspaceFolder(resource);\n\t\t\t\t\tif (owningFolder) {\n\t\t\t\t\t\tconst owningRootName = owningFolder.name;\n\n\t\t\t\t\t\t// If this root is the only one with its basename, use a relative ./ path. If there is another, use an absolute path\n\t\t\t\t\t\tconst isUniqueFolder = workspace.folders.filter(folder => folder.name === owningRootName).length === 1;\n\t\t\t\t\t\tif (isUniqueFolder) {\n\t\t\t\t\t\t\tconst relPath = relativePath(owningFolder.uri, resource); // always uses forward slashes\n\t\t\t\t\t\t\tif (relPath === '') {\n\t\t\t\t\t\t\t\tfolderPath = `./${owningFolder.name}`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderPath = `./${owningFolder.name}/${relPath}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderPath = resource.fsPath; // TODO rob: handle on-file URIs\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (folderPath) {\n\t\t\t\t\tfolderPaths.push(folderPath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!folderPaths.length || folderPaths.some(folderPath => folderPath === '.')) {\n\t\t\tthis.inputPatternIncludes.setValue('');\n\t\t\tthis.searchWidget.focus();\n\t\t\treturn;\n\t\t}\n\n\t\t// Show 'files to include' box\n\t\tif (!this.showsFileTypes()) {\n\t\t\tthis.toggleQueryDetails(true, true);\n\t\t}\n\n\t\tthis.inputPatternIncludes.setValue(folderPaths.join(', '));\n\t\tthis.searchWidget.focus(false);\n\t}\n\n\tonQueryChanged(preserveFocus?: boolean): void {\n\t\tconst isRegex = this.searchWidget.searchInput.getRegex();\n\t\tconst isWholeWords = this.searchWidget.searchInput.getWholeWords();\n\t\tconst isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n\t\tconst contentPattern = this.searchWidget.searchInput.getValue();\n\t\tconst excludePatternText = this.inputPatternExcludes.getValue().trim();\n\t\tconst includePatternText = this.inputPatternIncludes.getValue().trim();\n\t\tconst useExcludesAndIgnoreFiles = this.inputPatternExcludes.useExcludesAndIgnoreFiles();\n\n\t\tif (contentPattern.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content: IPatternInfo = {\n\t\t\tpattern: contentPattern,\n\t\t\tisRegExp: isRegex,\n\t\t\tisCaseSensitive: isCaseSensitive,\n\t\t\tisWordMatch: isWholeWords\n\t\t};\n\n\t\tconst excludePattern = this.inputPatternExcludes.getValue();\n\t\tconst includePattern = this.inputPatternIncludes.getValue();\n\n\t\t// Need the full match line to correctly calculate replace text, if this is a search/replace with regex group references ($1, $2, ...).\n\t\t// 10000 chars is enough to avoid sending huge amounts of text around, if you do a replace with a longer match, it may or may not resolve the group refs correctly.\n\t\t// https://github.com/Microsoft/vscode/issues/58374\n\t\tconst charsPerLine = content.isRegExp ? 10000 :\n\t\t\t250;\n\n\t\tconst options: ITextQueryBuilderOptions = {\n\t\t\t_reason: 'searchView',\n\t\t\textraFileResources: getOutOfWorkspaceEditorResources(this.editorService, this.contextService),\n\t\t\tmaxResults: SearchView.MAX_TEXT_RESULTS,\n\t\t\tdisregardIgnoreFiles: !useExcludesAndIgnoreFiles || undefined,\n\t\t\tdisregardExcludeSettings: !useExcludesAndIgnoreFiles || undefined,\n\t\t\texcludePattern,\n\t\t\tincludePattern,\n\t\t\tpreviewOptions: {\n\t\t\t\tmatchLines: 1,\n\t\t\t\tcharsPerLine\n\t\t\t},\n\t\t\tisSmartCase: this.configurationService.getValue<ISearchConfiguration>().search.smartCase,\n\t\t\texpandPatterns: true\n\t\t};\n\t\tconst folderResources = this.contextService.getWorkspace().folders;\n\n\t\tconst onQueryValidationError = (err: Error) => {\n\t\t\tthis.searchWidget.searchInput.showMessage({ content: err.message, type: MessageType.ERROR });\n\t\t\tthis.viewModel.searchResult.clear();\n\t\t};\n\n\t\tlet query: ITextQuery;\n\t\ttry {\n\t\t\tquery = this.queryBuilder.text(content, folderResources.map(folder => folder.uri), options);\n\t\t} catch (err) {\n\t\t\tonQueryValidationError(err);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.validateQuery(query).then(() => {\n\t\t\tthis.onQueryTriggered(query, options, excludePatternText, includePatternText);\n\n\t\t\tif (!preserveFocus) {\n\t\t\t\tthis.searchWidget.focus(false); // focus back to input field\n\t\t\t}\n\t\t}, onQueryValidationError);\n\t}\n\n\tprivate validateQuery(query: ITextQuery): Promise<void> {\n\t\t// Validate folderQueries\n\t\tconst folderQueriesExistP =\n\t\t\tquery.folderQueries.map(fq => {\n\t\t\t\treturn this.fileService.existsFile(fq.folder);\n\t\t\t});\n\n\t\treturn Promise.resolve(folderQueriesExistP).then(existResults => {\n\t\t\t// If no folders exist, show an error message about the first one\n\t\t\tconst existingFolderQueries = query.folderQueries.filter((folderQuery, i) => existResults[i]);\n\t\t\tif (!query.folderQueries.length || existingFolderQueries.length) {\n\t\t\t\tquery.folderQueries = existingFolderQueries;\n\t\t\t} else {\n\t\t\t\tconst nonExistantPath = query.folderQueries[0].folder.fsPath;\n\t\t\t\tconst searchPathNotFoundError = nls.localize('searchPathNotFoundError', \"Search path not found: {0}\", nonExistantPath);\n\t\t\t\treturn Promise.reject(new Error(searchPathNotFoundError));\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tprivate onQueryTriggered(query: ITextQuery, options: ITextQueryBuilderOptions, excludePatternText: string, includePatternText: string): void {\n\t\tthis.searchWidget.searchInput.onSearchSubmit();\n\t\tthis.inputPatternExcludes.onSearchSubmit();\n\t\tthis.inputPatternIncludes.onSearchSubmit();\n\n\t\tthis.viewModel.cancelSearch();\n\n\t\tthis.currentSearchQ = this.currentSearchQ\n\t\t\t.then(() => this.doSearch(query, options, excludePatternText, includePatternText))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tprivate doSearch(query: ITextQuery, options: ITextQueryBuilderOptions, excludePatternText: string, includePatternText: string): Thenable<void> {\n\t\tconst progressRunner = this.progressService.show(/*infinite=*/true);\n\n\t\tthis.searchWidget.searchInput.clearMessage();\n\t\tthis.searching = true;\n\t\tsetTimeout(() => {\n\t\t\tif (this.searching) {\n\t\t\t\tthis.updateActions();\n\t\t\t}\n\t\t}, 2000);\n\t\tthis.showEmptyStage();\n\n\t\tconst onComplete = (completed?: ISearchComplete) => {\n\t\t\tthis.searching = false;\n\n\t\t\t// Complete up to 100% as needed\n\t\t\tprogressRunner.done();\n\n\t\t\t// Do final render, then expand if just 1 file with less than 50 matches\n\t\t\tthis.onSearchResultsChanged();\n\n\t\t\tconst collapseResults = this.configurationService.getValue<ISearchConfigurationProperties>('search').collapseResults;\n\t\t\tif (collapseResults !== 'alwaysCollapse' && this.viewModel.searchResult.matches().length === 1) {\n\t\t\t\tconst onlyMatch = this.viewModel.searchResult.matches()[0];\n\t\t\t\tif (onlyMatch.count() < 50) {\n\t\t\t\t\tthis.tree.expand(onlyMatch);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.viewModel.replaceString = this.searchWidget.getReplaceValue();\n\n\t\t\tthis.searchSubmitted = true;\n\t\t\tthis.updateActions();\n\t\t\tconst hasResults = !this.viewModel.searchResult.isEmpty();\n\n\t\t\tif (completed && completed.limitHit) {\n\t\t\t\tthis.searchWidget.searchInput.showMessage({\n\t\t\t\t\tcontent: nls.localize('searchMaxResultsWarning', \"The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.\"),\n\t\t\t\t\ttype: MessageType.WARNING\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!hasResults) {\n\t\t\t\tconst hasExcludes = !!excludePatternText;\n\t\t\t\tconst hasIncludes = !!includePatternText;\n\t\t\t\tlet message: string;\n\n\t\t\t\tif (!completed) {\n\t\t\t\t\tmessage = nls.localize('searchCanceled', \"Search was canceled before any results could be found - \");\n\t\t\t\t} else if (hasIncludes && hasExcludes) {\n\t\t\t\t\tmessage = nls.localize('noResultsIncludesExcludes', \"No results found in '{0}' excluding '{1}' - \", includePatternText, excludePatternText);\n\t\t\t\t} else if (hasIncludes) {\n\t\t\t\t\tmessage = nls.localize('noResultsIncludes', \"No results found in '{0}' - \", includePatternText);\n\t\t\t\t} else if (hasExcludes) {\n\t\t\t\t\tmessage = nls.localize('noResultsExcludes', \"No results found excluding '{0}' - \", excludePatternText);\n\t\t\t\t} else {\n\t\t\t\t\tmessage = nls.localize('noResultsFound', \"No results found. Review your settings for configured exclusions and check your gitignore files - \");\n\t\t\t\t}\n\n\t\t\t\t// Indicate as status to ARIA\n\t\t\t\taria.status(message);\n\n\t\t\t\tdom.hide(this.resultsElement);\n\n\t\t\t\tconst messageEl = this.clearMessage();\n\t\t\t\tconst p = dom.append(messageEl, $('p', undefined, message));\n\n\t\t\t\tif (!completed) {\n\t\t\t\t\tconst searchAgainLink = dom.append(p, $('a.pointer.prominent', undefined, nls.localize('rerunSearch.message', \"Search again\")));\n\t\t\t\t\tthis.messageDisposables.push(dom.addDisposableListener(searchAgainLink, dom.EventType.CLICK, (e: MouseEvent) => {\n\t\t\t\t\t\tdom.EventHelper.stop(e, false);\n\t\t\t\t\t\tthis.onQueryChanged();\n\t\t\t\t\t}));\n\t\t\t\t} else if (hasIncludes || hasExcludes) {\n\t\t\t\t\tconst searchAgainLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('rerunSearchInAll.message', \"Search again in all files\")));\n\t\t\t\t\tthis.messageDisposables.push(dom.addDisposableListener(searchAgainLink, dom.EventType.CLICK, (e: MouseEvent) => {\n\t\t\t\t\t\tdom.EventHelper.stop(e, false);\n\n\t\t\t\t\t\tthis.inputPatternExcludes.setValue('');\n\t\t\t\t\t\tthis.inputPatternIncludes.setValue('');\n\n\t\t\t\t\t\tthis.onQueryChanged();\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tconst openSettingsLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('openSettings.message', \"Open Settings\")));\n\t\t\t\t\tthis.addClickEvents(openSettingsLink, this.onOpenSettings);\n\t\t\t\t}\n\n\t\t\t\tif (completed) {\n\t\t\t\t\tdom.append(p, $('span', undefined, ' - '));\n\n\t\t\t\t\tconst learnMoreLink = dom.append(p, $('a.pointer.prominent', { tabindex: 0 }, nls.localize('openSettings.learnMore', \"Learn More\")));\n\t\t\t\t\tthis.addClickEvents(learnMoreLink, this.onLearnMore);\n\t\t\t\t}\n\n\t\t\t\tif (this.contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\t\t\tthis.showSearchWithoutFolderMessage();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.viewModel.searchResult.toggleHighlights(this.isVisible()); // show highlights\n\n\t\t\t\t// Indicate final search result count for ARIA\n\t\t\t\taria.status(nls.localize('ariaSearchResultsStatus', \"Search returned {0} results in {1} files\", this.viewModel.searchResult.count(), this.viewModel.searchResult.fileCount()));\n\t\t\t}\n\t\t};\n\n\t\tconst onError = (e: any) => {\n\t\t\tif (errors.isPromiseCanceledError(e)) {\n\t\t\t\treturn onComplete(undefined);\n\t\t\t} else {\n\t\t\t\tthis.searching = false;\n\t\t\t\tthis.updateActions();\n\t\t\t\tprogressRunner.done();\n\t\t\t\tthis.searchWidget.searchInput.showMessage({ content: e.message, type: MessageType.ERROR });\n\t\t\t\tthis.viewModel.searchResult.clear();\n\n\t\t\t\tif (e.code === SearchErrorCode.regexParseError && !this.configurationService.getValue('search.usePCRE2')) {\n\t\t\t\t\tthis.showPcre2Hint();\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t};\n\n\t\tlet visibleMatches = 0;\n\n\t\t// Handle UI updates in an interval to show frequent progress and results\n\t\tconst uiRefreshHandle: any = setInterval(() => {\n\t\t\tif (!this.searching) {\n\t\t\t\twindow.clearInterval(uiRefreshHandle);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Search result tree update\n\t\t\tconst fileCount = this.viewModel.searchResult.fileCount();\n\t\t\tif (visibleMatches !== fileCount) {\n\t\t\t\tvisibleMatches = fileCount;\n\t\t\t\tthis.refreshAndUpdateCount();\n\t\t\t}\n\t\t\tif (fileCount > 0) {\n\t\t\t\tthis.updateActions();\n\t\t\t}\n\t\t}, 100);\n\n\t\tthis.searchWidget.setReplaceAllActionState(false);\n\n\t\treturn this.viewModel.search(query)\n\t\t\t.then(onComplete, onError);\n\t}\n\n\tprivate showPcre2Hint(): void {\n\t\tif (!this.globalMemento['disablePcre2Hint']) {\n\t\t\t// If the regex parsed in JS but not rg, it likely uses features that are supported in JS and PCRE2 but not Rust\n\t\t\tthis.notificationService.prompt(Severity.Info, nls.localize('rgRegexError', \"You can enable \\\"search.usePCRE2\\\" to enable some extra regex features like lookbehind and backreferences.\"), [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('neverAgain', \"Don't Show Again\"),\n\t\t\t\t\trun: () => this.globalMemento['disablePcre2Hint'] = true,\n\t\t\t\t\tisSecondary: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize('otherEncodingWarning.openSettingsLabel', \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings('search.usePCRE2')\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate addClickEvents = (element: HTMLElement, handler: (event: any) => void): void => {\n\t\tthis.messageDisposables.push(dom.addDisposableListener(element, dom.EventType.CLICK, handler));\n\t\tthis.messageDisposables.push(dom.addDisposableListener(element, dom.EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tlet eventHandled = true;\n\n\t\t\tif (event.equals(KeyCode.Space) || event.equals(KeyCode.Enter)) {\n\t\t\t\thandler(e);\n\t\t\t} else {\n\t\t\t\teventHandled = false;\n\t\t\t}\n\n\t\t\tif (eventHandled) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onOpenSettings = (e: dom.EventLike): void => {\n\t\tdom.EventHelper.stop(e, false);\n\n\t\tthis.openSettings('.exclude');\n\t}\n\n\tprivate openSettings(query: string): Promise<IEditor | null> {\n\t\tconst options: ISettingsEditorOptions = { query };\n\t\treturn this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY ?\n\t\t\tthis.preferencesService.openWorkspaceSettings(undefined, options) :\n\t\t\tthis.preferencesService.openGlobalSettings(undefined, options);\n\t}\n\n\tprivate onLearnMore = (e: MouseEvent): void => {\n\t\tdom.EventHelper.stop(e, false);\n\n\t\twindow.open('https://go.microsoft.com/fwlink/?linkid=853977');\n\t}\n\n\tprivate updateSearchResultCount(disregardExcludesAndIgnores?: boolean): void {\n\t\tconst fileCount = this.viewModel.searchResult.fileCount();\n\t\tthis.hasSearchResultsKey.set(fileCount > 0);\n\n\t\tconst msgWasHidden = this.messagesElement.style.display === 'none';\n\t\tif (fileCount > 0) {\n\t\t\tconst messageEl = this.clearMessage();\n\t\t\tlet resultMsg = this.buildResultCountMessage(this.viewModel.searchResult.count(), fileCount);\n\t\t\tif (disregardExcludesAndIgnores) {\n\t\t\t\tresultMsg += nls.localize('useIgnoresAndExcludesDisabled', \" - exclude settings and ignore files are disabled\");\n\t\t\t}\n\n\t\t\tdom.append(messageEl, $('p', undefined, resultMsg));\n\t\t\tthis.reLayout();\n\t\t} else if (!msgWasHidden) {\n\t\t\tdom.hide(this.messagesElement);\n\t\t}\n\t}\n\n\tprivate buildResultCountMessage(resultCount: number, fileCount: number): string {\n\t\tif (resultCount === 1 && fileCount === 1) {\n\t\t\treturn nls.localize('search.file.result', \"{0} result in {1} file\", resultCount, fileCount);\n\t\t} else if (resultCount === 1) {\n\t\t\treturn nls.localize('search.files.result', \"{0} result in {1} files\", resultCount, fileCount);\n\t\t} else if (fileCount === 1) {\n\t\t\treturn nls.localize('search.file.results', \"{0} results in {1} file\", resultCount, fileCount);\n\t\t} else {\n\t\t\treturn nls.localize('search.files.results', \"{0} results in {1} files\", resultCount, fileCount);\n\t\t}\n\t}\n\n\tprivate showSearchWithoutFolderMessage(): void {\n\t\tthis.searchWithoutFolderMessageElement = this.clearMessage();\n\n\t\tconst textEl = dom.append(this.searchWithoutFolderMessageElement,\n\t\t\t$('p', undefined, nls.localize('searchWithoutFolder', \"You have not yet opened a folder. Only open files are currently searched - \")));\n\n\t\tconst openFolderLink = dom.append(textEl,\n\t\t\t$('a.pointer.prominent', { tabindex: 0 }, nls.localize('openFolder', \"Open Folder\")));\n\n\t\tthis.messageDisposables.push(dom.addDisposableListener(openFolderLink, dom.EventType.CLICK, (e: MouseEvent) => {\n\t\t\tdom.EventHelper.stop(e, false);\n\n\t\t\tconst actionClass = env.isMacintosh ? OpenFileFolderAction : OpenFolderAction;\n\t\t\tconst action = this.instantiationService.createInstance<string, string, IAction>(actionClass, actionClass.ID, actionClass.LABEL);\n\t\t\tthis.actionRunner!.run(action).then(() => {\n\t\t\t\taction.dispose();\n\t\t\t}, err => {\n\t\t\t\taction.dispose();\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t});\n\t\t}));\n\t}\n\n\tprivate showEmptyStage(): void {\n\n\t\t// disable 'result'-actions\n\t\tthis.searchSubmitted = false;\n\t\tthis.updateActions();\n\n\t\t// clean up ui\n\t\t// this.replaceService.disposeAllReplacePreviews();\n\t\tdom.hide(this.messagesElement);\n\t\tdom.show(this.resultsElement);\n\t\tthis.currentSelectedFileMatch = undefined;\n\t}\n\n\tprivate onFocus(lineMatch: any, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<any> {\n\t\tif (!(lineMatch instanceof Match)) {\n\t\t\tthis.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tconst useReplacePreview = this.configurationService.getValue<ISearchConfiguration>().search.useReplacePreview;\n\t\treturn (useReplacePreview && this.viewModel.isReplaceActive() && !!this.viewModel.replaceString) ?\n\t\t\tthis.replaceService.openReplacePreview(lineMatch, preserveFocus, sideBySide, pinned) :\n\t\t\tthis.open(lineMatch, preserveFocus, sideBySide, pinned);\n\t}\n\n\topen(element: FileMatchOrMatch, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<void> {\n\t\tconst selection = this.getSelectionFrom(element);\n\t\tconst resource = element instanceof Match ? element.parent().resource() : (<FileMatch>element).resource();\n\t\treturn this.editorService.openEditor({\n\t\t\tresource: resource,\n\t\t\toptions: {\n\t\t\t\tpreserveFocus,\n\t\t\t\tpinned,\n\t\t\t\tselection,\n\t\t\t\trevealIfVisible: true\n\t\t\t}\n\t\t}, sideBySide ? SIDE_GROUP : ACTIVE_GROUP).then(editor => {\n\t\t\tif (editor && element instanceof Match && preserveFocus) {\n\t\t\t\tthis.viewModel.searchResult.rangeHighlightDecorations.highlightRange(\n\t\t\t\t\t(<ICodeEditor>editor.getControl()).getModel()!,\n\t\t\t\t\telement.range()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.viewModel.searchResult.rangeHighlightDecorations.removeHighlightRange();\n\t\t\t}\n\n\t\t\tif (editor) {\n\t\t\t\tthis.editorGroupsService.activateGroup(editor.group!);\n\t\t\t}\n\t\t}, errors.onUnexpectedError);\n\t}\n\n\tprivate getSelectionFrom(element: FileMatchOrMatch): any {\n\t\tlet match: Match | null = null;\n\t\tif (element instanceof Match) {\n\t\t\tmatch = element;\n\t\t}\n\t\tif (element instanceof FileMatch && element.count() > 0) {\n\t\t\tmatch = element.matches()[element.matches().length - 1];\n\t\t}\n\t\tif (match) {\n\t\t\tconst range = match.range();\n\t\t\tif (this.viewModel.isReplaceActive() && !!this.viewModel.replaceString) {\n\t\t\t\tconst replaceString = match.replaceString;\n\t\t\t\treturn {\n\t\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\t\tendLineNumber: range.startLineNumber,\n\t\t\t\t\tendColumn: range.startColumn + replaceString.length\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn range;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate onUntitledDidChangeDirty(resource: URI): void {\n\t\tif (!this.viewModel) {\n\t\t\treturn;\n\t\t}\n\n\t\t// remove search results from this resource as it got disposed\n\t\tif (!this.untitledEditorService.isDirty(resource)) {\n\t\t\tconst matches = this.viewModel.searchResult.matches();\n\t\t\tfor (let i = 0, len = matches.length; i < len; i++) {\n\t\t\t\tif (resource.toString() === matches[i].resource().toString()) {\n\t\t\t\t\tthis.viewModel.searchResult.remove(matches[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFilesChanged(e: FileChangesEvent): void {\n\t\tif (!this.viewModel || !e.gotDeleted()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matches = this.viewModel.searchResult.matches();\n\n\t\tfor (let i = 0, len = matches.length; i < len; i++) {\n\t\t\tif (e.contains(matches[i].resource(), FileChangeType.DELETED)) {\n\t\t\t\tthis.viewModel.searchResult.remove(matches[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn [\n\t\t\tthis.searching ?\n\t\t\t\tthis.cancelAction :\n\t\t\t\tthis.refreshAction,\n\t\t\t...this.actions\n\t\t];\n\t}\n\n\tprivate clearHistory(): void {\n\t\tthis.searchWidget.clearHistory();\n\t\tthis.inputPatternExcludes.clearHistory();\n\t\tthis.inputPatternIncludes.clearHistory();\n\t}\n\n\tpublic saveState(): void {\n\t\tconst isRegex = this.searchWidget.searchInput.getRegex();\n\t\tconst isWholeWords = this.searchWidget.searchInput.getWholeWords();\n\t\tconst isCaseSensitive = this.searchWidget.searchInput.getCaseSensitive();\n\t\tconst contentPattern = this.searchWidget.searchInput.getValue();\n\t\tconst patternExcludes = this.inputPatternExcludes.getValue().trim();\n\t\tconst patternIncludes = this.inputPatternIncludes.getValue().trim();\n\t\tconst useExcludesAndIgnoreFiles = this.inputPatternExcludes.useExcludesAndIgnoreFiles();\n\n\t\tthis.viewletState['query.contentPattern'] = contentPattern;\n\t\tthis.viewletState['query.regex'] = isRegex;\n\t\tthis.viewletState['query.wholeWords'] = isWholeWords;\n\t\tthis.viewletState['query.caseSensitive'] = isCaseSensitive;\n\t\tthis.viewletState['query.folderExclusions'] = patternExcludes;\n\t\tthis.viewletState['query.folderIncludes'] = patternIncludes;\n\t\tthis.viewletState['query.useExcludesAndIgnoreFiles'] = useExcludesAndIgnoreFiles;\n\n\t\tconst isReplaceShown = this.searchAndReplaceWidget.isReplaceShown();\n\t\tthis.viewletState['view.showReplace'] = isReplaceShown;\n\t\tthis.viewletState['query.replaceText'] = isReplaceShown && this.searchWidget.getReplaceValue();\n\n\t\tconst history: ISearchHistoryValues = Object.create(null);\n\n\t\tconst searchHistory = this.searchWidget.getSearchHistory();\n\t\tif (searchHistory && searchHistory.length) {\n\t\t\thistory.search = searchHistory;\n\t\t}\n\n\t\tconst replaceHistory = this.searchWidget.getReplaceHistory();\n\t\tif (replaceHistory && replaceHistory.length) {\n\t\t\thistory.replace = replaceHistory;\n\t\t}\n\n\t\tconst patternExcludesHistory = this.inputPatternExcludes.getHistory();\n\t\tif (patternExcludesHistory && patternExcludesHistory.length) {\n\t\t\thistory.exclude = patternExcludesHistory;\n\t\t}\n\n\t\tconst patternIncludesHistory = this.inputPatternIncludes.getHistory();\n\t\tif (patternIncludesHistory && patternIncludesHistory.length) {\n\t\t\thistory.include = patternIncludesHistory;\n\t\t}\n\n\t\tthis.searchHistoryService.save(history);\n\n\t\tsuper.saveState();\n\t}\n\n\tprivate _toDispose: IDisposable[] = [];\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif (this.isDisposed) {\n\t\t\tconsole.warn('Registering disposable on object that has already been disposed.');\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.push(t);\n\t\t}\n\t\treturn t;\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tthis.saveState();\n\t\tthis._toDispose = dispose(this._toDispose);\n\t\tsuper.dispose();\n\t}\n}\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst matchHighlightColor = theme.getColor(editorFindMatchHighlight);\n\tif (matchHighlightColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .findInFileMatch { background-color: ${matchHighlightColor}; }`);\n\t}\n\n\tconst diffInsertedColor = theme.getColor(diffInserted);\n\tif (diffInsertedColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .replaceMatch { background-color: ${diffInsertedColor}; }`);\n\t}\n\n\tconst diffRemovedColor = theme.getColor(diffRemoved);\n\tif (diffRemovedColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .replace.findInFileMatch { background-color: ${diffRemovedColor}; }`);\n\t}\n\n\tconst diffInsertedOutlineColor = theme.getColor(diffInsertedOutline);\n\tif (diffInsertedOutlineColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .replaceMatch:not(:empty) { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${diffInsertedOutlineColor}; }`);\n\t}\n\n\tconst diffRemovedOutlineColor = theme.getColor(diffRemovedOutline);\n\tif (diffRemovedOutlineColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .replace.findInFileMatch { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${diffRemovedOutlineColor}; }`);\n\t}\n\n\tconst findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n\tif (findMatchHighlightBorder) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .findInFileMatch { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findMatchHighlightBorder}; }`);\n\t}\n\n\tconst outlineSelectionColor = theme.getColor(listActiveSelectionForeground);\n\tif (outlineSelectionColor) {\n\t\tcollector.addRule(`.monaco-workbench .search-view .monaco-list.element-focused .monaco-list-row.focused.selected:not(.highlighted) .action-label:focus { outline-color: ${outlineSelectionColor} }`);\n\t}\n});\n"]}]}