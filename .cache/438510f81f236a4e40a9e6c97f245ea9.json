{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHostCustomers.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/common/extHostCustomers.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function extHostNamedCustomer(id) {\n        return function (ctor) {\n            ExtHostCustomersRegistryImpl.INSTANCE.registerNamedCustomer(id, ctor);\n        };\n    }\n    exports.extHostNamedCustomer = extHostNamedCustomer;\n    function extHostCustomer(ctor) {\n        ExtHostCustomersRegistryImpl.INSTANCE.registerCustomer(ctor);\n    }\n    exports.extHostCustomer = extHostCustomer;\n    var ExtHostCustomersRegistry;\n    (function (ExtHostCustomersRegistry) {\n        function getNamedCustomers() {\n            return ExtHostCustomersRegistryImpl.INSTANCE.getNamedCustomers();\n        }\n        ExtHostCustomersRegistry.getNamedCustomers = getNamedCustomers;\n        function getCustomers() {\n            return ExtHostCustomersRegistryImpl.INSTANCE.getCustomers();\n        }\n        ExtHostCustomersRegistry.getCustomers = getCustomers;\n    })(ExtHostCustomersRegistry = exports.ExtHostCustomersRegistry || (exports.ExtHostCustomersRegistry = {}));\n    class ExtHostCustomersRegistryImpl {\n        constructor() {\n            this._namedCustomers = [];\n            this._customers = [];\n        }\n        registerNamedCustomer(id, ctor) {\n            const entry = [id, ctor];\n            this._namedCustomers.push(entry);\n        }\n        getNamedCustomers() {\n            return this._namedCustomers;\n        }\n        registerCustomer(ctor) {\n            this._customers.push(ctor);\n        }\n        getCustomers() {\n            return this._customers;\n        }\n    }\n    ExtHostCustomersRegistryImpl.INSTANCE = new ExtHostCustomersRegistryImpl();\n});\n",null]}