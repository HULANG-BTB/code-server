{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls = require(\"vs/nls\");\nvar idDescription = nls.localize('JsonSchema.input.id', \"The input's id is used to associate an input with a variable of the form ${input:id}.\");\nvar typeDescription = nls.localize('JsonSchema.input.type', \"The type of user input prompt to use.\");\nvar descriptionDescription = nls.localize('JsonSchema.input.description', \"The description is shown when the user is prompted for input.\");\nvar defaultDescription = nls.localize('JsonSchema.input.default', \"The default value for the input.\");\nexports.inputsSchema = {\n    definitions: {\n        inputs: {\n            type: 'array',\n            description: nls.localize('JsonSchema.inputs', 'User inputs. Used for defining user input prompts, such as free string input or a choice from several options.'),\n            items: {\n                oneOf: [\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'description'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['promptString'],\n                                enumDescriptions: [\n                                    nls.localize('JsonSchema.input.type.promptString', \"The 'promptString' type opens an input box to ask the user for input.\"),\n                                ]\n                            },\n                            description: {\n                                type: 'string',\n                                description: descriptionDescription\n                            },\n                            default: {\n                                type: 'string',\n                                description: defaultDescription\n                            },\n                        }\n                    },\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'description', 'options'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['pickString'],\n                                enumDescriptions: [\n                                    nls.localize('JsonSchema.input.type.pickString', \"The 'pickString' type shows a selection list.\"),\n                                ]\n                            },\n                            description: {\n                                type: 'string',\n                                description: descriptionDescription\n                            },\n                            default: {\n                                type: 'string',\n                                description: defaultDescription\n                            },\n                            options: {\n                                type: 'array',\n                                description: nls.localize('JsonSchema.input.options', 'An array of strings that defines the options for a quick pick.'),\n                                items: {\n                                    type: 'string'\n                                }\n                            }\n                        }\n                    },\n                    {\n                        type: 'object',\n                        required: ['id', 'type', 'command'],\n                        additionalProperties: false,\n                        properties: {\n                            id: {\n                                type: 'string',\n                                description: idDescription\n                            },\n                            type: {\n                                type: 'string',\n                                description: typeDescription,\n                                enum: ['command'],\n                                enumDescriptions: [\n                                    nls.localize('JsonSchema.input.type.command', \"The 'command' type executes a command.\"),\n                                ]\n                            },\n                            command: {\n                                type: 'string',\n                                description: nls.localize('JsonSchema.input.command.command', \"The command to execute for this input variable.\")\n                            },\n                            args: {\n                                type: 'object',\n                                description: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    }\n};\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\nconst idDescription = nls.localize('JsonSchema.input.id', \"The input's id is used to associate an input with a variable of the form ${input:id}.\");\nconst typeDescription = nls.localize('JsonSchema.input.type', \"The type of user input prompt to use.\");\nconst descriptionDescription = nls.localize('JsonSchema.input.description', \"The description is shown when the user is prompted for input.\");\nconst defaultDescription = nls.localize('JsonSchema.input.default', \"The default value for the input.\");\n\n\nexport const inputsSchema: IJSONSchema = {\n\tdefinitions: {\n\t\tinputs: {\n\t\t\ttype: 'array',\n\t\t\tdescription: nls.localize('JsonSchema.inputs', 'User inputs. Used for defining user input prompts, such as free string input or a choice from several options.'),\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'description'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['promptString'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.promptString', \"The 'promptString' type opens an input box to ask the user for input.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: descriptionDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: defaultDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'description', 'options'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['pickString'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.pickString', \"The 'pickString' type shows a selection list.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: descriptionDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: defaultDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.options', 'An array of strings that defines the options for a quick pick.'),\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'command'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['command'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.command', \"The 'command' type executes a command.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.command', \"The command to execute for this input variable.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n};\n"]}]}