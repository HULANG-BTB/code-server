{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/actions/developerActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/actions/developerActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar nls = require(\"vs/nls\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar event_1 = require(\"vs/base/browser/event\");\nvar event_2 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar async_1 = require(\"vs/base/common/async\");\nvar layoutService_1 = require(\"vs/workbench/services/layout/browser/layoutService\");\nvar ToggleDevToolsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleDevToolsAction, _super);\n    function ToggleDevToolsAction(id, label, windowsService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.windowsService = windowsService;\n        return _this;\n    }\n    ToggleDevToolsAction.prototype.run = function () {\n        return this.windowsService.toggleDevTools();\n    };\n    ToggleDevToolsAction.ID = 'workbench.action.toggleDevTools';\n    ToggleDevToolsAction.LABEL = nls.localize('toggleDevTools', \"Toggle Developer Tools\");\n    ToggleDevToolsAction = tslib_1.__decorate([\n        tslib_1.__param(2, windows_1.IWindowService)\n    ], ToggleDevToolsAction);\n    return ToggleDevToolsAction;\n}(actions_1.Action));\nexports.ToggleDevToolsAction = ToggleDevToolsAction;\nvar ToggleSharedProcessAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleSharedProcessAction, _super);\n    function ToggleSharedProcessAction(id, label, windowsService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.windowsService = windowsService;\n        return _this;\n    }\n    ToggleSharedProcessAction.prototype.run = function () {\n        return this.windowsService.toggleSharedProcess();\n    };\n    ToggleSharedProcessAction.ID = 'workbench.action.toggleSharedProcess';\n    ToggleSharedProcessAction.LABEL = nls.localize('toggleSharedProcess', \"Toggle Shared Process\");\n    ToggleSharedProcessAction = tslib_1.__decorate([\n        tslib_1.__param(2, windows_1.IWindowsService)\n    ], ToggleSharedProcessAction);\n    return ToggleSharedProcessAction;\n}(actions_1.Action));\nexports.ToggleSharedProcessAction = ToggleSharedProcessAction;\nvar InspectContextKeysAction = /** @class */ (function (_super) {\n    tslib_1.__extends(InspectContextKeysAction, _super);\n    function InspectContextKeysAction(id, label, contextKeyService, windowService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.contextKeyService = contextKeyService;\n        _this.windowService = windowService;\n        return _this;\n    }\n    InspectContextKeysAction.prototype.run = function () {\n        var _this = this;\n        var disposables = [];\n        var stylesheet = dom_1.createStyleSheet();\n        disposables.push(lifecycle_1.toDisposable(function () {\n            if (stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        }));\n        dom_1.createCSSRule('*', 'cursor: crosshair !important;', stylesheet);\n        var hoverFeedback = document.createElement('div');\n        document.body.appendChild(hoverFeedback);\n        disposables.push(lifecycle_1.toDisposable(function () { return document.body.removeChild(hoverFeedback); }));\n        hoverFeedback.style.position = 'absolute';\n        hoverFeedback.style.pointerEvents = 'none';\n        hoverFeedback.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n        hoverFeedback.style.zIndex = '1000';\n        var onMouseMove = event_1.domEvent(document.body, 'mousemove', true);\n        disposables.push(onMouseMove(function (e) {\n            var target = e.target;\n            var position = dom_1.getDomNodePagePosition(target);\n            hoverFeedback.style.top = position.top + \"px\";\n            hoverFeedback.style.left = position.left + \"px\";\n            hoverFeedback.style.width = position.width + \"px\";\n            hoverFeedback.style.height = position.height + \"px\";\n        }));\n        var onMouseDown = event_2.Event.once(event_1.domEvent(document.body, 'mousedown', true));\n        onMouseDown(function (e) { e.preventDefault(); e.stopPropagation(); }, null, disposables);\n        var onMouseUp = event_2.Event.once(event_1.domEvent(document.body, 'mouseup', true));\n        onMouseUp(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var context = _this.contextKeyService.getContext(e.target);\n            console.log(context.collectAllValues());\n            _this.windowService.openDevTools();\n            lifecycle_1.dispose(disposables);\n        }, null, disposables);\n        return Promise.resolve();\n    };\n    InspectContextKeysAction.ID = 'workbench.action.inspectContextKeys';\n    InspectContextKeysAction.LABEL = nls.localize('inspect context keys', \"Inspect Context Keys\");\n    InspectContextKeysAction = tslib_1.__decorate([\n        tslib_1.__param(2, contextkey_1.IContextKeyService),\n        tslib_1.__param(3, windows_1.IWindowService)\n    ], InspectContextKeysAction);\n    return InspectContextKeysAction;\n}(actions_1.Action));\nexports.InspectContextKeysAction = InspectContextKeysAction;\nvar ToggleScreencastModeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleScreencastModeAction, _super);\n    function ToggleScreencastModeAction(id, label, keybindingService, layoutService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.keybindingService = keybindingService;\n        _this.layoutService = layoutService;\n        return _this;\n    }\n    ToggleScreencastModeAction.prototype.run = function () {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var container, mouseMarker, onMouseDown, onMouseUp, onMouseMove, mouseListener, keyboardMarker, onKeyDown, keyboardTimeout, keyboardListener;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                if (ToggleScreencastModeAction.disposable) {\n                    ToggleScreencastModeAction.disposable.dispose();\n                    ToggleScreencastModeAction.disposable = undefined;\n                    return [2 /*return*/];\n                }\n                container = this.layoutService.getWorkbenchElement();\n                mouseMarker = dom_1.append(container, dom_1.$('div'));\n                mouseMarker.style.position = 'absolute';\n                mouseMarker.style.border = '2px solid red';\n                mouseMarker.style.borderRadius = '20px';\n                mouseMarker.style.width = '20px';\n                mouseMarker.style.height = '20px';\n                mouseMarker.style.top = '0';\n                mouseMarker.style.left = '0';\n                mouseMarker.style.zIndex = '100000';\n                mouseMarker.style.content = ' ';\n                mouseMarker.style.pointerEvents = 'none';\n                mouseMarker.style.display = 'none';\n                onMouseDown = event_1.domEvent(container, 'mousedown', true);\n                onMouseUp = event_1.domEvent(container, 'mouseup', true);\n                onMouseMove = event_1.domEvent(container, 'mousemove', true);\n                mouseListener = onMouseDown(function (e) {\n                    mouseMarker.style.top = e.clientY - 10 + \"px\";\n                    mouseMarker.style.left = e.clientX - 10 + \"px\";\n                    mouseMarker.style.display = 'block';\n                    var mouseMoveListener = onMouseMove(function (e) {\n                        mouseMarker.style.top = e.clientY - 10 + \"px\";\n                        mouseMarker.style.left = e.clientX - 10 + \"px\";\n                    });\n                    event_2.Event.once(onMouseUp)(function () {\n                        mouseMarker.style.display = 'none';\n                        mouseMoveListener.dispose();\n                    });\n                });\n                keyboardMarker = dom_1.append(container, dom_1.$('div'));\n                keyboardMarker.style.position = 'absolute';\n                keyboardMarker.style.backgroundColor = 'rgba(0, 0, 0 ,0.5)';\n                keyboardMarker.style.width = '100%';\n                keyboardMarker.style.height = '100px';\n                keyboardMarker.style.bottom = '20%';\n                keyboardMarker.style.left = '0';\n                keyboardMarker.style.zIndex = '100000';\n                keyboardMarker.style.pointerEvents = 'none';\n                keyboardMarker.style.color = 'white';\n                keyboardMarker.style.lineHeight = '100px';\n                keyboardMarker.style.textAlign = 'center';\n                keyboardMarker.style.fontSize = '56px';\n                keyboardMarker.style.display = 'none';\n                onKeyDown = event_1.domEvent(container, 'keydown', true);\n                keyboardTimeout = lifecycle_1.Disposable.None;\n                keyboardListener = onKeyDown(function (e) {\n                    keyboardTimeout.dispose();\n                    var event = new keyboardEvent_1.StandardKeyboardEvent(e);\n                    var keybinding = _this.keybindingService.resolveKeyboardEvent(event);\n                    var label = keybinding.getLabel();\n                    if (!event.ctrlKey && !event.altKey && !event.metaKey && !event.shiftKey && _this.keybindingService.mightProducePrintableCharacter(event) && label) {\n                        keyboardMarker.textContent += ' ' + label;\n                    }\n                    else {\n                        keyboardMarker.textContent = label;\n                    }\n                    keyboardMarker.style.display = 'block';\n                    var promise = async_1.timeout(800);\n                    keyboardTimeout = lifecycle_1.toDisposable(function () { return promise.cancel(); });\n                    promise.then(function () {\n                        keyboardMarker.textContent = '';\n                        keyboardMarker.style.display = 'none';\n                    });\n                });\n                ToggleScreencastModeAction.disposable = lifecycle_1.toDisposable(function () {\n                    mouseListener.dispose();\n                    keyboardListener.dispose();\n                    mouseMarker.remove();\n                    keyboardMarker.remove();\n                });\n                return [2 /*return*/];\n            });\n        });\n    };\n    ToggleScreencastModeAction.ID = 'workbench.action.toggleScreencastMode';\n    ToggleScreencastModeAction.LABEL = nls.localize('toggle mouse clicks', \"Toggle Screencast Mode\");\n    ToggleScreencastModeAction = tslib_1.__decorate([\n        tslib_1.__param(2, keybinding_1.IKeybindingService),\n        tslib_1.__param(3, layoutService_1.IWorkbenchLayoutService)\n    ], ToggleScreencastModeAction);\n    return ToggleScreencastModeAction;\n}(actions_1.Action));\nexports.ToggleScreencastModeAction = ToggleScreencastModeAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/actions/developerActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/electron-browser/actions/developerActions.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,kDAAgD;AAChD,8DAAqF;AACrF,4BAA8B;AAC9B,uEAA8E;AAC9E,+CAAiD;AACjD,8CAA6C;AAC7C,sDAA0F;AAC1F,2CAAyG;AACzG,uEAA8E;AAE9E,+DAAsE;AACtE,8CAA+C;AAC/C,oFAA6F;AAE7F;IAA0C,gDAAM;IAK/C,8BAAY,EAAU,EAAE,KAAa,EAAmC,cAA8B;QAAtG,YACC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAFuE,oBAAc,GAAd,cAAc,CAAgB;;IAEtG,CAAC;IAED,kCAAG,GAAH;QACC,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IATe,uBAAE,GAAG,iCAAiC,CAAC;IAChD,0BAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,wBAAwB,CAAC,CAAC;IAH5D,oBAAoB;QAKQ,mBAAA,wBAAc,CAAA;OAL1C,oBAAoB,CAYhC;IAAD,2BAAC;CAAA,AAZD,CAA0C,gBAAM,GAY/C;AAZY,oDAAoB;AAcjC;IAA+C,qDAAM;IAKpD,mCAAY,EAAU,EAAE,KAAa,EAAoC,cAA+B;QAAxG,YACC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAFwE,oBAAc,GAAd,cAAc,CAAiB;;IAExG,CAAC;IAED,uCAAG,GAAH;QACC,OAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC;IAClD,CAAC;IATe,4BAAE,GAAG,sCAAsC,CAAC;IACrD,+BAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IAHhE,yBAAyB;QAKG,mBAAA,yBAAe,CAAA;OAL3C,yBAAyB,CAYrC;IAAD,gCAAC;CAAA,AAZD,CAA+C,gBAAM,GAYpD;AAZY,8DAAyB;AActC;IAA8C,oDAAM;IAKnD,kCACC,EAAU,EACV,KAAa,EACwB,iBAAqC,EACzC,aAA6B;QAJ/D,YAMC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAJqC,uBAAiB,GAAjB,iBAAiB,CAAoB;QACzC,mBAAa,GAAb,aAAa,CAAgB;;IAG/D,CAAC;IAED,sCAAG,GAAH;QAAA,iBA+CC;QA9CA,IAAM,WAAW,GAAkB,EAAE,CAAC;QAEtC,IAAM,UAAU,GAAG,sBAAgB,EAAE,CAAC;QACtC,WAAW,CAAC,IAAI,CAAC,wBAAY,CAAC;YAC7B,IAAI,UAAU,CAAC,UAAU,EAAE;gBAC1B,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;aAC9C;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,mBAAa,CAAC,GAAG,EAAE,+BAA+B,EAAE,UAAU,CAAC,CAAC;QAEhE,IAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACzC,WAAW,CAAC,IAAI,CAAC,wBAAY,CAAC,cAAM,OAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAxC,CAAwC,CAAC,CAAC,CAAC;QAE/E,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC1C,aAAa,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;QAC3C,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG,sBAAsB,CAAC;QAC7D,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAEpC,IAAM,WAAW,GAAG,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/D,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,UAAA,CAAC;YAC7B,IAAM,MAAM,GAAG,CAAC,CAAC,MAAqB,CAAC;YACvC,IAAM,QAAQ,GAAG,4BAAsB,CAAC,MAAM,CAAC,CAAC;YAEhD,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,QAAQ,CAAC,GAAG,OAAI,CAAC;YAC9C,aAAa,CAAC,KAAK,CAAC,IAAI,GAAM,QAAQ,CAAC,IAAI,OAAI,CAAC;YAChD,aAAa,CAAC,KAAK,CAAC,KAAK,GAAM,QAAQ,CAAC,KAAK,OAAI,CAAC;YAClD,aAAa,CAAC,KAAK,CAAC,MAAM,GAAM,QAAQ,CAAC,MAAM,OAAI,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAM,WAAW,GAAG,aAAK,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;QAC3E,WAAW,CAAC,UAAA,CAAC,IAAM,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAElF,IAAM,SAAS,GAAG,aAAK,CAAC,IAAI,CAAC,gBAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;QACvE,SAAS,CAAC,UAAA,CAAC;YACV,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,eAAe,EAAE,CAAC;YAEpB,IAAM,OAAO,GAAG,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,MAAqB,CAAY,CAAC;YACtF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACxC,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YAElC,mBAAO,CAAC,WAAW,CAAC,CAAC;QACtB,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAEtB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IA3De,2BAAE,GAAG,qCAAqC,CAAC;IACpD,8BAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,sBAAsB,EAAE,sBAAsB,CAAC,CAAC;IAHhE,wBAAwB;QAQlC,mBAAA,+BAAkB,CAAA;QAClB,mBAAA,wBAAc,CAAA;OATJ,wBAAwB,CA8DpC;IAAD,+BAAC;CAAA,AA9DD,CAA8C,gBAAM,GA8DnD;AA9DY,4DAAwB;AAgErC;IAAgD,sDAAM;IAOrD,oCACC,EAAU,EACV,KAAa,EACwB,iBAAqC,EAChC,aAAsC;QAJjF,YAMC,kBAAM,EAAE,EAAE,KAAK,CAAC,SAChB;QAJqC,uBAAiB,GAAjB,iBAAiB,CAAoB;QAChC,mBAAa,GAAb,aAAa,CAAyB;;IAGjF,CAAC;IAEK,wCAAG,GAAT;+CAAa,OAAO;;;;gBACnB,IAAI,0BAA0B,CAAC,UAAU,EAAE;oBAC1C,0BAA0B,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;oBAChD,0BAA0B,CAAC,UAAU,GAAG,SAAS,CAAC;oBAClD,sBAAO;iBACP;gBAEK,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;gBAErD,WAAW,GAAG,YAAM,CAAC,SAAS,EAAE,OAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChD,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;gBACxC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,eAAe,CAAC;gBAC3C,WAAW,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC;gBACxC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBACjC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAClC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;gBAC5B,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;gBAC7B,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACpC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;gBAChC,WAAW,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;gBACzC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBAE7B,WAAW,GAAG,gBAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;gBACrD,SAAS,GAAG,gBAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBACjD,WAAW,GAAG,gBAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;gBAErD,aAAa,GAAG,WAAW,CAAC,UAAA,CAAC;oBAClC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,CAAC,OAAO,GAAG,EAAE,OAAI,CAAC;oBAC9C,WAAW,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,CAAC,OAAO,GAAG,EAAE,OAAI,CAAC;oBAC/C,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBAEpC,IAAM,iBAAiB,GAAG,WAAW,CAAC,UAAA,CAAC;wBACtC,WAAW,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,CAAC,OAAO,GAAG,EAAE,OAAI,CAAC;wBAC9C,WAAW,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,CAAC,OAAO,GAAG,EAAE,OAAI,CAAC;oBAChD,CAAC,CAAC,CAAC;oBAEH,aAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACrB,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;wBACnC,iBAAiB,CAAC,OAAO,EAAE,CAAC;oBAC7B,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEG,cAAc,GAAG,YAAM,CAAC,SAAS,EAAE,OAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnD,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;gBAC3C,cAAc,CAAC,KAAK,CAAC,eAAe,GAAG,oBAAoB,CAAC;gBAC5D,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBACpC,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;gBACtC,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpC,cAAc,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;gBAChC,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvC,cAAc,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;gBAC5C,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;gBACrC,cAAc,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC1C,cAAc,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1C,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvC,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBAEhC,SAAS,GAAG,gBAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;gBACnD,eAAe,GAAgB,sBAAU,CAAC,IAAI,CAAC;gBAE7C,gBAAgB,GAAG,SAAS,CAAC,UAAA,CAAC;oBACnC,eAAe,CAAC,OAAO,EAAE,CAAC;oBAE1B,IAAM,KAAK,GAAG,IAAI,qCAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,IAAM,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;oBACtE,IAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;oBAEpC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAI,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE;wBAClJ,cAAc,CAAC,WAAW,IAAI,GAAG,GAAG,KAAK,CAAC;qBAC1C;yBAAM;wBACN,cAAc,CAAC,WAAW,GAAG,KAAK,CAAC;qBACnC;oBAED,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;oBAEvC,IAAM,OAAO,GAAG,eAAO,CAAC,GAAG,CAAC,CAAC;oBAC7B,eAAe,GAAG,wBAAY,CAAC,cAAM,OAAA,OAAO,CAAC,MAAM,EAAE,EAAhB,CAAgB,CAAC,CAAC;oBAEvD,OAAO,CAAC,IAAI,CAAC;wBACZ,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;wBAChC,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;oBACvC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,0BAA0B,CAAC,UAAU,GAAG,wBAAY,CAAC;oBACpD,aAAa,CAAC,OAAO,EAAE,CAAC;oBACxB,gBAAgB,CAAC,OAAO,EAAE,CAAC;oBAC3B,WAAW,CAAC,MAAM,EAAE,CAAC;oBACrB,cAAc,CAAC,MAAM,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;;;;KACH;IAxGe,6BAAE,GAAG,uCAAuC,CAAC;IACtD,gCAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,CAAC;IAHjE,0BAA0B;QAUpC,mBAAA,+BAAkB,CAAA;QAClB,mBAAA,uCAAuB,CAAA;OAXb,0BAA0B,CA2GtC;IAAD,iCAAC;CAAA,AA3GD,CAAgD,gBAAM,GA2GrD;AA3GY,gEAA0B","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from 'vs/base/common/actions';\nimport { IWindowService, IWindowsService } from 'vs/platform/windows/common/windows';\nimport * as nls from 'vs/nls';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { domEvent } from 'vs/base/browser/event';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, dispose, Disposable } from 'vs/base/common/lifecycle';\nimport { getDomNodePagePosition, createStyleSheet, createCSSRule, append, $ } from 'vs/base/browser/dom';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { Context } from 'vs/platform/contextkey/browser/contextKeyService';\nimport { StandardKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { timeout } from 'vs/base/common/async';\nimport { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';\n\nexport class ToggleDevToolsAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleDevTools';\n\tstatic LABEL = nls.localize('toggleDevTools', \"Toggle Developer Tools\");\n\n\tconstructor(id: string, label: string, @IWindowService private readonly windowsService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.windowsService.toggleDevTools();\n\t}\n}\n\nexport class ToggleSharedProcessAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleSharedProcess';\n\tstatic LABEL = nls.localize('toggleSharedProcess', \"Toggle Shared Process\");\n\n\tconstructor(id: string, label: string, @IWindowsService private readonly windowsService: IWindowsService) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.windowsService.toggleSharedProcess();\n\t}\n}\n\nexport class InspectContextKeysAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.inspectContextKeys';\n\tstatic LABEL = nls.localize('inspect context keys', \"Inspect Context Keys\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<void> {\n\t\tconst disposables: IDisposable[] = [];\n\n\t\tconst stylesheet = createStyleSheet();\n\t\tdisposables.push(toDisposable(() => {\n\t\t\tif (stylesheet.parentNode) {\n\t\t\t\tstylesheet.parentNode.removeChild(stylesheet);\n\t\t\t}\n\t\t}));\n\t\tcreateCSSRule('*', 'cursor: crosshair !important;', stylesheet);\n\n\t\tconst hoverFeedback = document.createElement('div');\n\t\tdocument.body.appendChild(hoverFeedback);\n\t\tdisposables.push(toDisposable(() => document.body.removeChild(hoverFeedback)));\n\n\t\thoverFeedback.style.position = 'absolute';\n\t\thoverFeedback.style.pointerEvents = 'none';\n\t\thoverFeedback.style.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n\t\thoverFeedback.style.zIndex = '1000';\n\n\t\tconst onMouseMove = domEvent(document.body, 'mousemove', true);\n\t\tdisposables.push(onMouseMove(e => {\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tconst position = getDomNodePagePosition(target);\n\n\t\t\thoverFeedback.style.top = `${position.top}px`;\n\t\t\thoverFeedback.style.left = `${position.left}px`;\n\t\t\thoverFeedback.style.width = `${position.width}px`;\n\t\t\thoverFeedback.style.height = `${position.height}px`;\n\t\t}));\n\n\t\tconst onMouseDown = Event.once(domEvent(document.body, 'mousedown', true));\n\t\tonMouseDown(e => { e.preventDefault(); e.stopPropagation(); }, null, disposables);\n\n\t\tconst onMouseUp = Event.once(domEvent(document.body, 'mouseup', true));\n\t\tonMouseUp(e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tconst context = this.contextKeyService.getContext(e.target as HTMLElement) as Context;\n\t\t\tconsole.log(context.collectAllValues());\n\t\t\tthis.windowService.openDevTools();\n\n\t\t\tdispose(disposables);\n\t\t}, null, disposables);\n\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class ToggleScreencastModeAction extends Action {\n\n\tstatic readonly ID = 'workbench.action.toggleScreencastMode';\n\tstatic LABEL = nls.localize('toggle mouse clicks', \"Toggle Screencast Mode\");\n\n\tstatic disposable: IDisposable | undefined;\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tasync run(): Promise<void> {\n\t\tif (ToggleScreencastModeAction.disposable) {\n\t\t\tToggleScreencastModeAction.disposable.dispose();\n\t\t\tToggleScreencastModeAction.disposable = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = this.layoutService.getWorkbenchElement();\n\n\t\tconst mouseMarker = append(container, $('div'));\n\t\tmouseMarker.style.position = 'absolute';\n\t\tmouseMarker.style.border = '2px solid red';\n\t\tmouseMarker.style.borderRadius = '20px';\n\t\tmouseMarker.style.width = '20px';\n\t\tmouseMarker.style.height = '20px';\n\t\tmouseMarker.style.top = '0';\n\t\tmouseMarker.style.left = '0';\n\t\tmouseMarker.style.zIndex = '100000';\n\t\tmouseMarker.style.content = ' ';\n\t\tmouseMarker.style.pointerEvents = 'none';\n\t\tmouseMarker.style.display = 'none';\n\n\t\tconst onMouseDown = domEvent(container, 'mousedown', true);\n\t\tconst onMouseUp = domEvent(container, 'mouseup', true);\n\t\tconst onMouseMove = domEvent(container, 'mousemove', true);\n\n\t\tconst mouseListener = onMouseDown(e => {\n\t\t\tmouseMarker.style.top = `${e.clientY - 10}px`;\n\t\t\tmouseMarker.style.left = `${e.clientX - 10}px`;\n\t\t\tmouseMarker.style.display = 'block';\n\n\t\t\tconst mouseMoveListener = onMouseMove(e => {\n\t\t\t\tmouseMarker.style.top = `${e.clientY - 10}px`;\n\t\t\t\tmouseMarker.style.left = `${e.clientX - 10}px`;\n\t\t\t});\n\n\t\t\tEvent.once(onMouseUp)(() => {\n\t\t\t\tmouseMarker.style.display = 'none';\n\t\t\t\tmouseMoveListener.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst keyboardMarker = append(container, $('div'));\n\t\tkeyboardMarker.style.position = 'absolute';\n\t\tkeyboardMarker.style.backgroundColor = 'rgba(0, 0, 0 ,0.5)';\n\t\tkeyboardMarker.style.width = '100%';\n\t\tkeyboardMarker.style.height = '100px';\n\t\tkeyboardMarker.style.bottom = '20%';\n\t\tkeyboardMarker.style.left = '0';\n\t\tkeyboardMarker.style.zIndex = '100000';\n\t\tkeyboardMarker.style.pointerEvents = 'none';\n\t\tkeyboardMarker.style.color = 'white';\n\t\tkeyboardMarker.style.lineHeight = '100px';\n\t\tkeyboardMarker.style.textAlign = 'center';\n\t\tkeyboardMarker.style.fontSize = '56px';\n\t\tkeyboardMarker.style.display = 'none';\n\n\t\tconst onKeyDown = domEvent(container, 'keydown', true);\n\t\tlet keyboardTimeout: IDisposable = Disposable.None;\n\n\t\tconst keyboardListener = onKeyDown(e => {\n\t\t\tkeyboardTimeout.dispose();\n\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tconst keybinding = this.keybindingService.resolveKeyboardEvent(event);\n\t\t\tconst label = keybinding.getLabel();\n\n\t\t\tif (!event.ctrlKey && !event.altKey && !event.metaKey && !event.shiftKey && this.keybindingService.mightProducePrintableCharacter(event) && label) {\n\t\t\t\tkeyboardMarker.textContent += ' ' + label;\n\t\t\t} else {\n\t\t\t\tkeyboardMarker.textContent = label;\n\t\t\t}\n\n\t\t\tkeyboardMarker.style.display = 'block';\n\n\t\t\tconst promise = timeout(800);\n\t\t\tkeyboardTimeout = toDisposable(() => promise.cancel());\n\n\t\t\tpromise.then(() => {\n\t\t\t\tkeyboardMarker.textContent = '';\n\t\t\t\tkeyboardMarker.style.display = 'none';\n\t\t\t});\n\t\t});\n\n\t\tToggleScreencastModeAction.disposable = toDisposable(() => {\n\t\t\tmouseListener.dispose();\n\t\t\tkeyboardListener.dispose();\n\t\t\tmouseMarker.remove();\n\t\t\tkeyboardMarker.remove();\n\t\t});\n\t}\n}\n"]}]}