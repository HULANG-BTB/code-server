{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/reactionsAction.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/reactionsAction.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar dom = require(\"vs/base/browser/dom\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar ToggleReactionsAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ToggleReactionsAction, _super);\n    function ToggleReactionsAction(toggleDropdownMenu, title) {\n        var _this = this;\n        title = title || nls.localize('pickReactions', \"Pick Reactions...\");\n        _this = _super.call(this, ToggleReactionsAction.ID, title, 'toggle-reactions', true) || this;\n        _this.toggleDropdownMenu = toggleDropdownMenu;\n        return _this;\n    }\n    ToggleReactionsAction.prototype.run = function () {\n        this.toggleDropdownMenu();\n        return Promise.resolve(true);\n    };\n    Object.defineProperty(ToggleReactionsAction.prototype, \"menuActions\", {\n        get: function () {\n            return this._menuActions;\n        },\n        set: function (actions) {\n            this._menuActions = actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ToggleReactionsAction.ID = 'toolbar.toggle.pickReactions';\n    return ToggleReactionsAction;\n}(actions_1.Action));\nexports.ToggleReactionsAction = ToggleReactionsAction;\nvar ReactionActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactionActionItem, _super);\n    function ReactionActionItem(action) {\n        return _super.call(this, null, action, {}) || this;\n    }\n    ReactionActionItem.prototype.updateLabel = function () {\n        var action = this.getAction();\n        if (action.class) {\n            this.label.classList.add(action.class);\n        }\n        if (!action.icon) {\n            var reactionLabel = dom.append(this.label, dom.$('span.reaction-label'));\n            reactionLabel.innerText = action.label;\n        }\n        else {\n            var reactionIcon = dom.append(this.label, dom.$('.reaction-icon'));\n            reactionIcon.style.display = '';\n            var uri = uri_1.URI.revive(action.icon);\n            reactionIcon.style.backgroundImage = \"url('\" + uri + \"')\";\n            reactionIcon.title = action.label;\n        }\n        if (action.count) {\n            var reactionCount = dom.append(this.label, dom.$('span.reaction-count'));\n            reactionCount.innerText = \"\" + action.count;\n        }\n    };\n    return ReactionActionItem;\n}(actionbar_1.ActionItem));\nexports.ReactionActionItem = ReactionActionItem;\nvar ReactionAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactionAction, _super);\n    function ReactionAction(id, label, cssClass, enabled, actionCallback, icon, count) {\n        if (label === void 0) { label = ''; }\n        if (cssClass === void 0) { cssClass = ''; }\n        if (enabled === void 0) { enabled = true; }\n        var _this = _super.call(this, ReactionAction.ID, label, cssClass, enabled, actionCallback) || this;\n        _this.icon = icon;\n        _this.count = count;\n        return _this;\n    }\n    ReactionAction.ID = 'toolbar.toggle.reaction';\n    return ReactionAction;\n}(actions_1.Action));\nexports.ReactionAction = ReactionAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/reactionsAction.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/reactionsAction.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as dom from 'vs/base/browser/dom';\nimport { ActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { Action, IAction } from 'vs/base/common/actions';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport class ToggleReactionsAction extends Action {\n\tstatic readonly ID = 'toolbar.toggle.pickReactions';\n\tprivate _menuActions: IAction[];\n\tprivate toggleDropdownMenu: () => void;\n\tconstructor(toggleDropdownMenu: () => void, title?: string) {\n\t\ttitle = title || nls.localize('pickReactions', \"Pick Reactions...\");\n\t\tsuper(ToggleReactionsAction.ID, title, 'toggle-reactions', true);\n\t\tthis.toggleDropdownMenu = toggleDropdownMenu;\n\t}\n\trun(): Promise<any> {\n\t\tthis.toggleDropdownMenu();\n\t\treturn Promise.resolve(true);\n\t}\n\tget menuActions() {\n\t\treturn this._menuActions;\n\t}\n\tset menuActions(actions: IAction[]) {\n\t\tthis._menuActions = actions;\n\t}\n}\nexport class ReactionActionItem extends ActionItem {\n\tconstructor(action: ReactionAction) {\n\t\tsuper(null, action, {});\n\t}\n\tupdateLabel(): void {\n\t\tlet action = this.getAction() as ReactionAction;\n\t\tif (action.class) {\n\t\t\tthis.label.classList.add(action.class);\n\t\t}\n\n\t\tif (!action.icon) {\n\t\t\tlet reactionLabel = dom.append(this.label, dom.$('span.reaction-label'));\n\t\t\treactionLabel.innerText = action.label;\n\t\t} else {\n\t\t\tlet reactionIcon = dom.append(this.label, dom.$('.reaction-icon'));\n\t\t\treactionIcon.style.display = '';\n\t\t\tlet uri = URI.revive(action.icon);\n\t\t\treactionIcon.style.backgroundImage = `url('${uri}')`;\n\t\t\treactionIcon.title = action.label;\n\t\t}\n\t\tif (action.count) {\n\t\t\tlet reactionCount = dom.append(this.label, dom.$('span.reaction-count'));\n\t\t\treactionCount.innerText = `${action.count}`;\n\t\t}\n\t}\n}\nexport class ReactionAction extends Action {\n\tstatic readonly ID = 'toolbar.toggle.reaction';\n\tconstructor(id: string, label: string = '', cssClass: string = '', enabled: boolean = true, actionCallback?: (event?: any) => Promise<any>, public icon?: UriComponents, public count?: number) {\n\t\tsuper(ReactionAction.ID, label, cssClass, enabled, actionCallback);\n\t}\n}\n"]}]}