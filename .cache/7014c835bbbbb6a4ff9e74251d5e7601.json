{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/platform/workspaces/node/workspacesIpc.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/workspaces/node/workspacesIpc.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uri_1 = require(\"vs/base/common/uri\");\nvar WorkspacesChannel = /** @class */ (function () {\n    function WorkspacesChannel(service) {\n        this.service = service;\n    }\n    WorkspacesChannel.prototype.listen = function (_, event) {\n        throw new Error(\"Event not found: \" + event);\n    };\n    WorkspacesChannel.prototype.call = function (_, command, arg) {\n        switch (command) {\n            case 'createUntitledWorkspace': {\n                var rawFolders = arg[0];\n                var remoteAuthority = arg[1];\n                var folders = undefined;\n                if (Array.isArray(rawFolders)) {\n                    folders = rawFolders.map(function (rawFolder) {\n                        return {\n                            uri: uri_1.URI.revive(rawFolder.uri),\n                            name: rawFolder.name\n                        };\n                    });\n                }\n                return this.service.createUntitledWorkspace(folders, remoteAuthority);\n            }\n            case 'deleteUntitledWorkspace': {\n                var w = arg;\n                return this.service.deleteUntitledWorkspace({ id: w.id, configPath: uri_1.URI.revive(w.configPath) });\n            }\n            case 'getWorkspaceIdentifier': {\n                return this.service.getWorkspaceIdentifier(uri_1.URI.revive(arg));\n            }\n        }\n        throw new Error(\"Call not found: \" + command);\n    };\n    return WorkspacesChannel;\n}());\nexports.WorkspacesChannel = WorkspacesChannel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/platform/workspaces/node/workspacesIpc.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/platform/workspaces/node/workspacesIpc.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAIhG,0CAAyC;AAGzC;IAEC,2BAAoB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;IAAI,CAAC;IAExD,kCAAM,GAAN,UAAU,CAAU,EAAE,KAAa;QAClC,MAAM,IAAI,KAAK,CAAC,sBAAoB,KAAO,CAAC,CAAC;IAC9C,CAAC;IAED,gCAAI,GAAJ,UAAK,CAAU,EAAE,OAAe,EAAE,GAAS;QAC1C,QAAQ,OAAO,EAAE;YAChB,KAAK,yBAAyB,CAAC,CAAC;gBAC/B,IAAM,UAAU,GAAmC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAM,eAAe,GAAW,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,OAAO,GAA+C,SAAS,CAAC;gBACpE,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBAC9B,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,UAAA,SAAS;wBACjC,OAAO;4BACN,GAAG,EAAE,SAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;4BAC9B,IAAI,EAAE,SAAS,CAAC,IAAI;yBACY,CAAC;oBACnC,CAAC,CAAC,CAAC;iBACH;gBAED,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;aACtE;YACD,KAAK,yBAAyB,CAAC,CAAC;gBAC/B,IAAM,CAAC,GAAyB,GAAG,CAAC;gBACpC,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,UAAU,EAAE,SAAG,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aAChG;YACD,KAAK,wBAAwB,CAAC,CAAC;gBAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,SAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5D;SACD;QAED,MAAM,IAAI,KAAK,CAAC,qBAAmB,OAAS,CAAC,CAAC;IAC/C,CAAC;IACF,wBAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,8CAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWorkspaceIdentifier, IWorkspaceFolderCreationData, IWorkspacesMainService } from 'vs/platform/workspaces/common/workspaces';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\n\nexport class WorkspacesChannel implements IServerChannel {\n\n\tconstructor(private service: IWorkspacesMainService) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createUntitledWorkspace': {\n\t\t\t\tconst rawFolders: IWorkspaceFolderCreationData[] = arg[0];\n\t\t\t\tconst remoteAuthority: string = arg[1];\n\t\t\t\tlet folders: IWorkspaceFolderCreationData[] | undefined = undefined;\n\t\t\t\tif (Array.isArray(rawFolders)) {\n\t\t\t\t\tfolders = rawFolders.map(rawFolder => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\turi: URI.revive(rawFolder.uri), // convert raw URI back to real URI\n\t\t\t\t\t\t\tname: rawFolder.name\n\t\t\t\t\t\t} as IWorkspaceFolderCreationData;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.service.createUntitledWorkspace(folders, remoteAuthority);\n\t\t\t}\n\t\t\tcase 'deleteUntitledWorkspace': {\n\t\t\t\tconst w: IWorkspaceIdentifier = arg;\n\t\t\t\treturn this.service.deleteUntitledWorkspace({ id: w.id, configPath: URI.revive(w.configPath) });\n\t\t\t}\n\t\t\tcase 'getWorkspaceIdentifier': {\n\t\t\t\treturn this.service.getWorkspaceIdentifier(URI.revive(arg));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n"]}]}