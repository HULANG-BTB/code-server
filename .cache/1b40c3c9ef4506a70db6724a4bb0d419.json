{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true}!/home/coding/workspace/packages/protocol/src/node/modules/stream.ts","dependencies":[{"path":"/home/coding/workspace/packages/protocol/src/node/modules/stream.ts","mtime":1555841535686},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable completed-docs\nclass WritableProxy {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    async destroy() {\n        this.stream.destroy();\n    }\n    // tslint:disable-next-line no-any\n    async end(data, encoding) {\n        return new Promise((resolve) => {\n            this.stream.end(data, encoding, () => {\n                resolve();\n            });\n        });\n    }\n    async setDefaultEncoding(encoding) {\n        this.stream.setDefaultEncoding(encoding);\n    }\n    // tslint:disable-next-line no-any\n    async write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            this.stream.write(data, encoding, (error) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    }\n    async dispose() {\n        this.stream.end();\n        this.stream.removeAllListeners();\n    }\n    async onDone(cb) {\n        this.stream.on(\"close\", cb);\n    }\n    // tslint:disable-next-line no-any\n    async onEvent(cb) {\n        // Sockets have an extra argument on \"close\".\n        // tslint:disable-next-line no-any\n        this.stream.on(\"close\", (...args) => cb(\"close\", ...args));\n        this.stream.on(\"drain\", () => cb(\"drain\"));\n        this.stream.on(\"error\", (error) => cb(\"error\", error));\n        this.stream.on(\"finish\", () => cb(\"finish\"));\n    }\n}\nexports.WritableProxy = WritableProxy;\nclass ReadableProxy {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    async destroy() {\n        this.stream.destroy();\n    }\n    async setEncoding(encoding) {\n        this.stream.setEncoding(encoding);\n    }\n    async dispose() {\n        this.stream.destroy();\n    }\n    async onDone(cb) {\n        this.stream.on(\"close\", cb);\n    }\n    // tslint:disable-next-line no-any\n    async onEvent(cb) {\n        this.stream.on(\"close\", () => cb(\"close\"));\n        this.stream.on(\"data\", (chunk) => cb(\"data\", chunk));\n        this.stream.on(\"end\", () => cb(\"end\"));\n        this.stream.on(\"error\", (error) => cb(\"error\", error));\n    }\n}\nexports.ReadableProxy = ReadableProxy;\nclass DuplexProxy extends WritableProxy {\n    async setEncoding(encoding) {\n        this.stream.setEncoding(encoding);\n    }\n    // tslint:disable-next-line no-any\n    async onEvent(cb) {\n        await super.onEvent(cb);\n        this.stream.on(\"data\", (chunk) => cb(\"data\", chunk));\n        this.stream.on(\"end\", () => cb(\"end\"));\n    }\n}\nexports.DuplexProxy = DuplexProxy;\n",{"version":3,"file":"/home/coding/workspace/packages/protocol/src/node/modules/stream.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/protocol/src/node/modules/stream.ts"],"names":[],"mappings":"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","sourcesContent":["import * as stream from \"stream\";\nimport { ServerProxy } from \"../../common/proxy\";\n\n// tslint:disable completed-docs\n\nexport class WritableProxy<T extends stream.Writable = stream.Writable> implements ServerProxy {\n\tpublic constructor(protected readonly stream: T) {}\n\n\tpublic async destroy(): Promise<void> {\n\t\tthis.stream.destroy();\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async end(data?: any, encoding?: string): Promise<void> {\n\t\treturn new Promise((resolve): void => {\n\t\t\tthis.stream.end(data, encoding, () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async setDefaultEncoding(encoding: string): Promise<void> {\n\t\tthis.stream.setDefaultEncoding(encoding);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async write(data: any, encoding?: string): Promise<void> {\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tthis.stream.write(data, encoding, (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\tthis.stream.end();\n\t\tthis.stream.removeAllListeners();\n\t}\n\n\tpublic async onDone(cb: () => void): Promise<void> {\n\t\tthis.stream.on(\"close\", cb);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async onEvent(cb: (event: string, ...args: any[]) => void): Promise<void> {\n\t\t// Sockets have an extra argument on \"close\".\n\t\t// tslint:disable-next-line no-any\n\t\tthis.stream.on(\"close\", (...args: any[]) => cb(\"close\", ...args));\n\t\tthis.stream.on(\"drain\", () => cb(\"drain\"));\n\t\tthis.stream.on(\"error\", (error) => cb(\"error\", error));\n\t\tthis.stream.on(\"finish\", () => cb(\"finish\"));\n\t}\n}\n\n/**\n * This noise is because we can't do multiple extends and we also can't seem to\n * do `extends WritableProxy<T> implement ReadableProxy<T>` (for `DuplexProxy`).\n */\nexport interface IReadableProxy extends ServerProxy {\n\tdestroy(): Promise<void>;\n\tsetEncoding(encoding: string): Promise<void>;\n\tdispose(): Promise<void>;\n\tonDone(cb: () => void): Promise<void>;\n}\n\nexport class ReadableProxy<T extends stream.Readable = stream.Readable> implements IReadableProxy {\n\tpublic constructor(protected readonly stream: T) {}\n\n\tpublic async destroy(): Promise<void> {\n\t\tthis.stream.destroy();\n\t}\n\n\tpublic async setEncoding(encoding: string): Promise<void> {\n\t\tthis.stream.setEncoding(encoding);\n\t}\n\n\tpublic async dispose(): Promise<void> {\n\t\tthis.stream.destroy();\n\t}\n\n\tpublic async onDone(cb: () => void): Promise<void> {\n\t\tthis.stream.on(\"close\", cb);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async onEvent(cb: (event: string, ...args: any[]) => void): Promise<void> {\n\t\tthis.stream.on(\"close\", () => cb(\"close\"));\n\t\tthis.stream.on(\"data\", (chunk) => cb(\"data\", chunk));\n\t\tthis.stream.on(\"end\", () => cb(\"end\"));\n\t\tthis.stream.on(\"error\", (error) => cb(\"error\", error));\n\t}\n}\n\nexport class DuplexProxy<T extends stream.Duplex = stream.Duplex> extends WritableProxy<T> implements IReadableProxy {\n\tpublic async setEncoding(encoding: string): Promise<void> {\n\t\tthis.stream.setEncoding(encoding);\n\t}\n\n\t// tslint:disable-next-line no-any\n\tpublic async onEvent(cb: (event: string, ...args: any[]) => void): Promise<void> {\n\t\tawait super.onEvent(cb);\n\t\tthis.stream.on(\"data\", (chunk) => cb(\"data\", chunk));\n\t\tthis.stream.on(\"end\", () => cb(\"end\"));\n\t}\n}\n"]}]}