{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/extensions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"./descriptors\"], function (require, exports, descriptors_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const _registry = [];\n    function registerSingleton(id, ctor, supportsDelayedInstantiation) {\n        _registry.push({ id, descriptor: new descriptors_1.SyncDescriptor(ctor, [], supportsDelayedInstantiation) });\n    }\n    exports.registerSingleton = registerSingleton;\n    function getServices() {\n        return _registry;\n    }\n    exports.getServices = getServices;\n});\n",null]}