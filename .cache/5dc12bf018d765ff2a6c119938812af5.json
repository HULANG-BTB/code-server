{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/provideSignatureHelp.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/parameterHints/provideSignatureHelp.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/common/async\", \"vs/base/common/errors\", \"vs/editor/browser/editorExtensions\", \"vs/editor/common/modes\", \"vs/platform/contextkey/common/contextkey\", \"vs/base/common/cancellation\"], function (require, exports, async_1, errors_1, editorExtensions_1, modes, contextkey_1, cancellation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Context = {\n        Visible: new contextkey_1.RawContextKey('parameterHintsVisible', false),\n        MultipleSignatures: new contextkey_1.RawContextKey('parameterHintsMultipleSignatures', false),\n    };\n    function provideSignatureHelp(model, position, context, token) {\n        const supports = modes.SignatureHelpProviderRegistry.ordered(model);\n        return async_1.first(supports.map(support => () => {\n            return Promise.resolve(support.provideSignatureHelp(model, position, token, context)).catch(errors_1.onUnexpectedExternalError);\n        }));\n    }\n    exports.provideSignatureHelp = provideSignatureHelp;\n    editorExtensions_1.registerDefaultLanguageCommand('_executeSignatureHelpProvider', (model, position, args) => provideSignatureHelp(model, position, {\n        triggerKind: modes.SignatureHelpTriggerKind.Invoke,\n        isRetrigger: false,\n        triggerCharacter: args['triggerCharacter']\n    }, cancellation_1.CancellationToken.None));\n});\n",null]}