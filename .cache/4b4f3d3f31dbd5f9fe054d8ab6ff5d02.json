{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsList.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsList.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar event_1 = require(\"vs/base/common/event\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar extensions_1 = require(\"vs/workbench/contrib/extensions/common/extensions\");\nvar extensionsActions_1 = require(\"vs/workbench/contrib/extensions/electron-browser/extensionsActions\");\nvar extensionManagementUtil_1 = require(\"vs/platform/extensionManagement/common/extensionManagementUtil\");\nvar extensionsWidgets_1 = require(\"vs/workbench/contrib/extensions/electron-browser/extensionsWidgets\");\nvar extensions_2 = require(\"vs/workbench/services/extensions/common/extensions\");\nvar extensionManagement_1 = require(\"vs/platform/extensionManagement/common/extensionManagement\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar Delegate = /** @class */ (function () {\n    function Delegate() {\n    }\n    Delegate.prototype.getHeight = function () { return 62; };\n    Delegate.prototype.getTemplateId = function () { return 'extension'; };\n    return Delegate;\n}());\nexports.Delegate = Delegate;\nvar actionOptions = { icon: true, label: true, tabOnlyOnFocus: true };\nvar Renderer = /** @class */ (function () {\n    function Renderer(extensionViewState, instantiationService, notificationService, extensionsWorkbenchService, extensionService, extensionManagementServerService) {\n        this.extensionViewState = extensionViewState;\n        this.instantiationService = instantiationService;\n        this.notificationService = notificationService;\n        this.extensionsWorkbenchService = extensionsWorkbenchService;\n        this.extensionService = extensionService;\n        this.extensionManagementServerService = extensionManagementServerService;\n    }\n    Object.defineProperty(Renderer.prototype, \"templateId\", {\n        get: function () { return 'extension'; },\n        enumerable: true,\n        configurable: true\n    });\n    Renderer.prototype.renderTemplate = function (root) {\n        var _this = this;\n        var recommendationWidget = this.instantiationService.createInstance(extensionsWidgets_1.RecommendationWidget, root);\n        var element = dom_1.append(root, dom_1.$('.extension'));\n        var iconContainer = dom_1.append(element, dom_1.$('.icon-container'));\n        var icon = dom_1.append(iconContainer, dom_1.$('img.icon'));\n        var badgeWidget = this.instantiationService.createInstance(extensionsWidgets_1.RemoteBadgeWidget, iconContainer);\n        var details = dom_1.append(element, dom_1.$('.details'));\n        var headerContainer = dom_1.append(details, dom_1.$('.header-container'));\n        var header = dom_1.append(headerContainer, dom_1.$('.header'));\n        var name = dom_1.append(header, dom_1.$('span.name'));\n        var version = dom_1.append(header, dom_1.$('span.version'));\n        var installCount = dom_1.append(header, dom_1.$('span.install-count'));\n        var ratings = dom_1.append(header, dom_1.$('span.ratings'));\n        var description = dom_1.append(details, dom_1.$('.description.ellipsis'));\n        var footer = dom_1.append(details, dom_1.$('.footer'));\n        var author = dom_1.append(footer, dom_1.$('.author.ellipsis'));\n        var actionbar = new actionbar_1.ActionBar(footer, {\n            animated: false,\n            actionItemProvider: function (action) {\n                if (action.id === extensionsActions_1.ManageExtensionAction.ID) {\n                    return action.createActionItem();\n                }\n                return new extensionsActions_1.ExtensionActionItem(null, action, actionOptions);\n            }\n        });\n        actionbar.onDidRun(function (_a) {\n            var error = _a.error;\n            return error && _this.notificationService.error(error);\n        });\n        var widgets = [\n            recommendationWidget,\n            badgeWidget,\n            this.instantiationService.createInstance(extensionsWidgets_1.Label, version, function (e) { return e.version; }),\n            this.instantiationService.createInstance(extensionsWidgets_1.InstallCountWidget, installCount, true),\n            this.instantiationService.createInstance(extensionsWidgets_1.RatingsWidget, ratings, true)\n        ];\n        var actions = [\n            this.instantiationService.createInstance(extensionsActions_1.StatusLabelAction),\n            this.instantiationService.createInstance(extensionsActions_1.UpdateAction),\n            this.instantiationService.createInstance(extensionsActions_1.ReloadAction),\n            this.instantiationService.createInstance(extensionsActions_1.InstallAction),\n            this.instantiationService.createInstance(extensionsActions_1.MaliciousStatusLabelAction, false),\n            this.instantiationService.createInstance(extensionsActions_1.ManageExtensionAction)\n        ];\n        var extensionContainers = this.instantiationService.createInstance(extensions_1.ExtensionContainers, actions.concat(widgets));\n        actionbar.push(actions, actionOptions);\n        var disposables = actions.concat(widgets, [actionbar, extensionContainers]);\n        return {\n            root: root, element: element, icon: icon, name: name, installCount: installCount, ratings: ratings, author: author, description: description, disposables: disposables, actionbar: actionbar,\n            extensionDisposables: [],\n            set extension(extension) {\n                extensionContainers.extension = extension;\n            }\n        };\n    };\n    Renderer.prototype.renderPlaceholder = function (index, data) {\n        dom_1.addClass(data.element, 'loading');\n        data.root.removeAttribute('aria-label');\n        data.extensionDisposables = lifecycle_1.dispose(data.extensionDisposables);\n        data.icon.src = '';\n        data.name.textContent = '';\n        data.author.textContent = '';\n        data.description.textContent = '';\n        data.installCount.style.display = 'none';\n        data.ratings.style.display = 'none';\n        data.extension = null;\n    };\n    Renderer.prototype.renderElement = function (extension, index, data) {\n        var _this = this;\n        dom_1.removeClass(data.element, 'loading');\n        data.extensionDisposables = lifecycle_1.dispose(data.extensionDisposables);\n        var updateEnablement = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var runningExtensions, installed, installedExtensionServer_1, isSameExtensionRunning;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extensionService.getExtensions()];\n                    case 1:\n                        runningExtensions = _a.sent();\n                        installed = this.extensionsWorkbenchService.local.filter(function (e) { return extensionManagementUtil_1.areSameExtensions(e.identifier, extension.identifier); })[0];\n                        if (installed && installed.local) {\n                            installedExtensionServer_1 = this.extensionManagementServerService.getExtensionManagementServer(installed.local.location);\n                            isSameExtensionRunning = runningExtensions.some(function (e) {\n                                if (!extensionManagementUtil_1.areSameExtensions({ id: e.identifier.value }, extension.identifier)) {\n                                    return false;\n                                }\n                                var runningExtensionServer = _this.extensionManagementServerService.getExtensionManagementServer(e.extensionLocation);\n                                if (!installedExtensionServer_1 || !runningExtensionServer) {\n                                    return false;\n                                }\n                                return installedExtensionServer_1.authority === runningExtensionServer.authority;\n                            });\n                            dom_1.toggleClass(data.root, 'disabled', !isSameExtensionRunning);\n                        }\n                        else {\n                            dom_1.removeClass(data.root, 'disabled');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        updateEnablement();\n        this.extensionService.onDidChangeExtensions(function () { return updateEnablement(); }, this, data.extensionDisposables);\n        var onError = event_1.Event.once(event_2.domEvent(data.icon, 'error'));\n        onError(function () { return data.icon.src = extension.iconUrlFallback; }, null, data.extensionDisposables);\n        data.icon.src = extension.iconUrl;\n        if (!data.icon.complete) {\n            data.icon.style.visibility = 'hidden';\n            data.icon.onload = function () { return data.icon.style.visibility = 'inherit'; };\n        }\n        else {\n            data.icon.style.visibility = 'inherit';\n        }\n        data.name.textContent = extension.displayName;\n        data.author.textContent = extension.publisherDisplayName;\n        data.description.textContent = extension.description;\n        data.installCount.style.display = '';\n        data.ratings.style.display = '';\n        data.extension = extension;\n        if (extension.gallery && extension.gallery.properties && extension.gallery.properties.localizedLanguages && extension.gallery.properties.localizedLanguages.length) {\n            data.description.textContent = extension.gallery.properties.localizedLanguages.map(function (name) { return name[0].toLocaleUpperCase() + name.slice(1); }).join(', ');\n        }\n        this.extensionViewState.onFocus(function (e) {\n            if (extensionManagementUtil_1.areSameExtensions(extension.identifier, e.identifier)) {\n                data.actionbar.items.forEach(function (item) { return item.setFocus(true); });\n            }\n        }, this, data.extensionDisposables);\n        this.extensionViewState.onBlur(function (e) {\n            if (extensionManagementUtil_1.areSameExtensions(extension.identifier, e.identifier)) {\n                data.actionbar.items.forEach(function (item) { return item.setFocus(false); });\n            }\n        }, this, data.extensionDisposables);\n    };\n    Renderer.prototype.disposeTemplate = function (data) {\n        data.disposables = lifecycle_1.dispose(data.disposables);\n    };\n    Renderer = tslib_1.__decorate([\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, notification_1.INotificationService),\n        tslib_1.__param(3, extensions_1.IExtensionsWorkbenchService),\n        tslib_1.__param(4, extensions_2.IExtensionService),\n        tslib_1.__param(5, extensionManagement_1.IExtensionManagementServerService)\n    ], Renderer);\n    return Renderer;\n}());\nexports.Renderer = Renderer;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsList.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/extensionsList.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { append, $, addClass, removeClass, toggleClass } from 'vs/base/browser/dom';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Action } from 'vs/base/common/actions';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IListVirtualDelegate } from 'vs/base/browser/ui/list/list';\nimport { IPagedRenderer } from 'vs/base/browser/ui/list/listPaging';\nimport { Event } from 'vs/base/common/event';\nimport { domEvent } from 'vs/base/browser/event';\nimport { IExtension, IExtensionsWorkbenchService, ExtensionContainers } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { InstallAction, UpdateAction, ManageExtensionAction, ReloadAction, MaliciousStatusLabelAction, ExtensionActionItem, StatusLabelAction } from 'vs/workbench/contrib/extensions/electron-browser/extensionsActions';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Label, RatingsWidget, InstallCountWidget, RecommendationWidget, RemoteBadgeWidget } from 'vs/workbench/contrib/extensions/electron-browser/extensionsWidgets';\nimport { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';\nimport { IExtensionManagementServerService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\n\nexport interface IExtensionsViewState {\n\tonFocus: Event<IExtension>;\n\tonBlur: Event<IExtension>;\n}\n\nexport interface ITemplateData {\n\troot: HTMLElement;\n\telement: HTMLElement;\n\ticon: HTMLImageElement;\n\tname: HTMLElement;\n\tinstallCount: HTMLElement;\n\tratings: HTMLElement;\n\tauthor: HTMLElement;\n\tdescription: HTMLElement;\n\textension: IExtension | null;\n\tdisposables: IDisposable[];\n\textensionDisposables: IDisposable[];\n\tactionbar: ActionBar;\n}\n\nexport class Delegate implements IListVirtualDelegate<IExtension> {\n\tgetHeight() { return 62; }\n\tgetTemplateId() { return 'extension'; }\n}\n\nconst actionOptions = { icon: true, label: true, tabOnlyOnFocus: true };\n\nexport class Renderer implements IPagedRenderer<IExtension, ITemplateData> {\n\n\tconstructor(\n\t\tprivate extensionViewState: IExtensionsViewState,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IExtensionsWorkbenchService private readonly extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService\n\t) { }\n\n\tget templateId() { return 'extension'; }\n\n\trenderTemplate(root: HTMLElement): ITemplateData {\n\t\tconst recommendationWidget = this.instantiationService.createInstance(RecommendationWidget, root);\n\t\tconst element = append(root, $('.extension'));\n\t\tconst iconContainer = append(element, $('.icon-container'));\n\t\tconst icon = append(iconContainer, $<HTMLImageElement>('img.icon'));\n\t\tconst badgeWidget = this.instantiationService.createInstance(RemoteBadgeWidget, iconContainer);\n\t\tconst details = append(element, $('.details'));\n\t\tconst headerContainer = append(details, $('.header-container'));\n\t\tconst header = append(headerContainer, $('.header'));\n\t\tconst name = append(header, $('span.name'));\n\t\tconst version = append(header, $('span.version'));\n\t\tconst installCount = append(header, $('span.install-count'));\n\t\tconst ratings = append(header, $('span.ratings'));\n\t\tconst description = append(details, $('.description.ellipsis'));\n\t\tconst footer = append(details, $('.footer'));\n\t\tconst author = append(footer, $('.author.ellipsis'));\n\t\tconst actionbar = new ActionBar(footer, {\n\t\t\tanimated: false,\n\t\t\tactionItemProvider: (action: Action) => {\n\t\t\t\tif (action.id === ManageExtensionAction.ID) {\n\t\t\t\t\treturn (<ManageExtensionAction>action).createActionItem();\n\t\t\t\t}\n\t\t\t\treturn new ExtensionActionItem(null, action, actionOptions);\n\t\t\t}\n\t\t});\n\t\tactionbar.onDidRun(({ error }) => error && this.notificationService.error(error));\n\n\t\tconst widgets = [\n\t\t\trecommendationWidget,\n\t\t\tbadgeWidget,\n\t\t\tthis.instantiationService.createInstance(Label, version, (e: IExtension) => e.version),\n\t\t\tthis.instantiationService.createInstance(InstallCountWidget, installCount, true),\n\t\t\tthis.instantiationService.createInstance(RatingsWidget, ratings, true)\n\t\t];\n\t\tconst actions = [\n\t\t\tthis.instantiationService.createInstance(StatusLabelAction),\n\t\t\tthis.instantiationService.createInstance(UpdateAction),\n\t\t\tthis.instantiationService.createInstance(ReloadAction),\n\t\t\tthis.instantiationService.createInstance(InstallAction),\n\t\t\tthis.instantiationService.createInstance(MaliciousStatusLabelAction, false),\n\t\t\tthis.instantiationService.createInstance(ManageExtensionAction)\n\t\t];\n\t\tconst extensionContainers: ExtensionContainers = this.instantiationService.createInstance(ExtensionContainers, [...actions, ...widgets]);\n\n\t\tactionbar.push(actions, actionOptions);\n\t\tconst disposables = [...actions, ...widgets, actionbar, extensionContainers];\n\n\t\treturn {\n\t\t\troot, element, icon, name, installCount, ratings, author, description, disposables, actionbar,\n\t\t\textensionDisposables: [],\n\t\t\tset extension(extension: IExtension) {\n\t\t\t\textensionContainers.extension = extension;\n\t\t\t}\n\t\t};\n\t}\n\n\trenderPlaceholder(index: number, data: ITemplateData): void {\n\t\taddClass(data.element, 'loading');\n\n\t\tdata.root.removeAttribute('aria-label');\n\t\tdata.extensionDisposables = dispose(data.extensionDisposables);\n\t\tdata.icon.src = '';\n\t\tdata.name.textContent = '';\n\t\tdata.author.textContent = '';\n\t\tdata.description.textContent = '';\n\t\tdata.installCount.style.display = 'none';\n\t\tdata.ratings.style.display = 'none';\n\t\tdata.extension = null;\n\t}\n\n\trenderElement(extension: IExtension, index: number, data: ITemplateData): void {\n\t\tremoveClass(data.element, 'loading');\n\n\t\tdata.extensionDisposables = dispose(data.extensionDisposables);\n\n\t\tconst updateEnablement = async () => {\n\t\t\tconst runningExtensions = await this.extensionService.getExtensions();\n\t\t\tconst installed = this.extensionsWorkbenchService.local.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\tif (installed && installed.local) {\n\t\t\t\tconst installedExtensionServer = this.extensionManagementServerService.getExtensionManagementServer(installed.local.location);\n\t\t\t\tconst isSameExtensionRunning = runningExtensions.some(e => {\n\t\t\t\t\tif (!areSameExtensions({ id: e.identifier.value }, extension.identifier)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst runningExtensionServer = this.extensionManagementServerService.getExtensionManagementServer(e.extensionLocation);\n\t\t\t\t\tif (!installedExtensionServer || !runningExtensionServer) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn installedExtensionServer.authority === runningExtensionServer.authority;\n\t\t\t\t});\n\t\t\t\ttoggleClass(data.root, 'disabled', !isSameExtensionRunning);\n\t\t\t} else {\n\t\t\t\tremoveClass(data.root, 'disabled');\n\t\t\t}\n\t\t};\n\t\tupdateEnablement();\n\t\tthis.extensionService.onDidChangeExtensions(() => updateEnablement(), this, data.extensionDisposables);\n\n\t\tconst onError = Event.once(domEvent(data.icon, 'error'));\n\t\tonError(() => data.icon.src = extension.iconUrlFallback, null, data.extensionDisposables);\n\t\tdata.icon.src = extension.iconUrl;\n\n\t\tif (!data.icon.complete) {\n\t\t\tdata.icon.style.visibility = 'hidden';\n\t\t\tdata.icon.onload = () => data.icon.style.visibility = 'inherit';\n\t\t} else {\n\t\t\tdata.icon.style.visibility = 'inherit';\n\t\t}\n\n\t\tdata.name.textContent = extension.displayName;\n\t\tdata.author.textContent = extension.publisherDisplayName;\n\t\tdata.description.textContent = extension.description;\n\t\tdata.installCount.style.display = '';\n\t\tdata.ratings.style.display = '';\n\t\tdata.extension = extension;\n\n\t\tif (extension.gallery && extension.gallery.properties && extension.gallery.properties.localizedLanguages && extension.gallery.properties.localizedLanguages.length) {\n\t\t\tdata.description.textContent = extension.gallery.properties.localizedLanguages.map(name => name[0].toLocaleUpperCase() + name.slice(1)).join(', ');\n\t\t}\n\n\t\tthis.extensionViewState.onFocus(e => {\n\t\t\tif (areSameExtensions(extension.identifier, e.identifier)) {\n\t\t\t\tdata.actionbar.items.forEach(item => (<ExtensionActionItem>item).setFocus(true));\n\t\t\t}\n\t\t}, this, data.extensionDisposables);\n\n\t\tthis.extensionViewState.onBlur(e => {\n\t\t\tif (areSameExtensions(extension.identifier, e.identifier)) {\n\t\t\t\tdata.actionbar.items.forEach(item => (<ExtensionActionItem>item).setFocus(false));\n\t\t\t}\n\t\t}, this, data.extensionDisposables);\n\t}\n\n\tdisposeTemplate(data: ITemplateData): void {\n\t\tdata.disposables = dispose(data.disposables);\n\t}\n}\n"]}]}