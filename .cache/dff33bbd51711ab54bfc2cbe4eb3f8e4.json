{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/browser/dnd.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/dnd.ts","mtime":1555846338036},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar workspaces_1 = require(\"vs/platform/workspaces/common/workspaces\");\nvar path_1 = require(\"vs/base/common/path\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar files_1 = require(\"vs/platform/files/common/files\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar textfiles_1 = require(\"vs/workbench/services/textfile/common/textfiles\");\nvar backup_1 = require(\"vs/workbench/services/backup/common/backup\");\nvar network_1 = require(\"vs/base/common/network\");\nvar untitledEditorService_1 = require(\"vs/workbench/services/untitled/common/untitledEditorService\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar dnd_1 = require(\"vs/base/browser/dnd\");\nvar labels_1 = require(\"vs/base/common/labels\");\nvar mime_1 = require(\"vs/base/common/mime\");\nvar platform_1 = require(\"vs/base/common/platform\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar workspaceEditing_1 = require(\"vs/workbench/services/workspace/common/workspaceEditing\");\nvar DraggedEditorIdentifier = /** @class */ (function () {\n    function DraggedEditorIdentifier(_identifier) {\n        this._identifier = _identifier;\n    }\n    Object.defineProperty(DraggedEditorIdentifier.prototype, \"identifier\", {\n        get: function () {\n            return this._identifier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DraggedEditorIdentifier;\n}());\nexports.DraggedEditorIdentifier = DraggedEditorIdentifier;\nvar DraggedEditorGroupIdentifier = /** @class */ (function () {\n    function DraggedEditorGroupIdentifier(_identifier) {\n        this._identifier = _identifier;\n    }\n    Object.defineProperty(DraggedEditorGroupIdentifier.prototype, \"identifier\", {\n        get: function () {\n            return this._identifier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DraggedEditorGroupIdentifier;\n}());\nexports.DraggedEditorGroupIdentifier = DraggedEditorGroupIdentifier;\nexports.CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nfunction extractResources(e, externalOnly) {\n    var resources = [];\n    if (e.dataTransfer && e.dataTransfer.types.length > 0) {\n        // Check for window-to-window DND\n        if (!externalOnly) {\n            // Data Transfer: Code Editors\n            var rawEditorsData = e.dataTransfer.getData(exports.CodeDataTransfers.EDITORS);\n            if (rawEditorsData) {\n                try {\n                    var draggedEditors = JSON.parse(rawEditorsData);\n                    draggedEditors.forEach(function (draggedEditor) {\n                        resources.push({ resource: uri_1.URI.parse(draggedEditor.resource), backupResource: draggedEditor.backupResource ? uri_1.URI.parse(draggedEditor.backupResource) : undefined, viewState: draggedEditor.viewState, isExternal: false });\n                    });\n                }\n                catch (error) {\n                    // Invalid transfer\n                }\n            }\n            // Data Transfer: Resources\n            else {\n                try {\n                    var rawResourcesData = e.dataTransfer.getData(dnd_1.DataTransfers.RESOURCES);\n                    if (rawResourcesData) {\n                        var uriStrArray = JSON.parse(rawResourcesData);\n                        resources.push.apply(resources, uriStrArray.map(function (uriStr) { return ({ resource: uri_1.URI.parse(uriStr), isExternal: false }); }));\n                    }\n                }\n                catch (error) {\n                    // Invalid transfer\n                }\n            }\n        }\n        // Check for native file transfer\n        if (e.dataTransfer && e.dataTransfer.files) {\n            var _loop_1 = function (i) {\n                var file = e.dataTransfer.files[i];\n                if (file && file.path && !resources.some(function (r) { return r.resource.fsPath === file.path; }) /* prevent duplicates */) {\n                    try {\n                        resources.push({ resource: uri_1.URI.file(file.path), isExternal: true });\n                    }\n                    catch (error) {\n                        // Invalid URI\n                    }\n                }\n            };\n            for (var i = 0; i < e.dataTransfer.files.length; i++) {\n                _loop_1(i);\n            }\n        }\n        // Check for CodeFiles transfer\n        var rawCodeFiles = e.dataTransfer.getData(exports.CodeDataTransfers.FILES);\n        if (rawCodeFiles) {\n            try {\n                var codeFiles = JSON.parse(rawCodeFiles);\n                codeFiles.forEach(function (codeFile) {\n                    if (!resources.some(function (r) { return r.resource.fsPath === codeFile; }) /* prevent duplicates */) {\n                        resources.push({ resource: uri_1.URI.file(codeFile), isExternal: true });\n                    }\n                });\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n    }\n    return resources;\n}\nexports.extractResources = extractResources;\n/**\n * Shared function across some components to handle drag & drop of resources. E.g. of folders and workspace files\n * to open them in the window instead of the editor or to handle dirty editors being dropped between instances of Code.\n */\nvar ResourcesDropHandler = /** @class */ (function () {\n    function ResourcesDropHandler(options, fileService, windowsService, windowService, textFileService, backupFileService, untitledEditorService, editorService, configurationService, workspaceEditingService) {\n        this.options = options;\n        this.fileService = fileService;\n        this.windowsService = windowsService;\n        this.windowService = windowService;\n        this.textFileService = textFileService;\n        this.backupFileService = backupFileService;\n        this.untitledEditorService = untitledEditorService;\n        this.editorService = editorService;\n        this.configurationService = configurationService;\n        this.workspaceEditingService = workspaceEditingService;\n    }\n    ResourcesDropHandler.prototype.handleDrop = function (event, resolveTargetGroup, afterDrop, targetIndex) {\n        var _this = this;\n        var untitledOrFileResources = extractResources(event).filter(function (r) { return _this.fileService.canHandleResource(r.resource) || r.resource.scheme === network_1.Schemas.untitled; });\n        if (!untitledOrFileResources.length) {\n            return require('vs/../../../../packages/vscode/src/workbench').workbench.handleDrop(event, resolveTargetGroup, afterDrop, targetIndex);\n        }\n        // Make the window active to handle the drop properly within\n        this.windowService.focusWindow().then(function () {\n            // Check for special things being dropped\n            return _this.doHandleDrop(untitledOrFileResources).then(function (isWorkspaceOpening) {\n                if (isWorkspaceOpening) {\n                    return undefined; // return early if the drop operation resulted in this window changing to a workspace\n                }\n                // Add external ones to recently open list unless dropped resource is a workspace\n                var recents = untitledOrFileResources.filter(function (d) { return d.isExternal && d.resource.scheme === network_1.Schemas.file; }).map(function (d) { return ({ fileUri: d.resource }); });\n                if (recents.length) {\n                    _this.windowsService.addRecentlyOpened(recents);\n                }\n                var editors = untitledOrFileResources.map(function (untitledOrFileResource) { return ({\n                    resource: untitledOrFileResource.resource,\n                    options: {\n                        pinned: true,\n                        index: targetIndex,\n                        viewState: untitledOrFileResource.viewState\n                    }\n                }); });\n                // Open in Editor\n                var targetGroup = resolveTargetGroup();\n                return _this.editorService.openEditors(editors, targetGroup).then(function () {\n                    // Finish with provided function\n                    afterDrop(targetGroup);\n                });\n            });\n        });\n    };\n    ResourcesDropHandler.prototype.doHandleDrop = function (untitledOrFileResources) {\n        var _this = this;\n        // Check for dirty editors being dropped\n        var resourcesWithBackups = untitledOrFileResources.filter(function (resource) { return !resource.isExternal && !!resource.backupResource; });\n        if (resourcesWithBackups.length > 0) {\n            return Promise.all(resourcesWithBackups.map(function (resourceWithBackup) { return _this.handleDirtyEditorDrop(resourceWithBackup); })).then(function () { return false; });\n        }\n        // Check for workspace file being dropped if we are allowed to do so\n        if (this.options.allowWorkspaceOpen) {\n            var externalFileOnDiskResources = untitledOrFileResources.filter(function (d) { return d.isExternal && d.resource.scheme === network_1.Schemas.file; }).map(function (d) { return d.resource; });\n            if (externalFileOnDiskResources.length > 0) {\n                return this.handleWorkspaceFileDrop(externalFileOnDiskResources);\n            }\n        }\n        return Promise.resolve(false);\n    };\n    ResourcesDropHandler.prototype.handleDirtyEditorDrop = function (droppedDirtyEditor) {\n        var _this = this;\n        // Untitled: always ensure that we open a new untitled for each file we drop\n        if (droppedDirtyEditor.resource.scheme === network_1.Schemas.untitled) {\n            droppedDirtyEditor.resource = this.untitledEditorService.createOrGet().getResource();\n        }\n        // Return early if the resource is already dirty in target or opened already\n        if (this.textFileService.isDirty(droppedDirtyEditor.resource) || this.editorService.isOpen({ resource: droppedDirtyEditor.resource })) {\n            return Promise.resolve(false);\n        }\n        // Resolve the contents of the dropped dirty resource from source\n        return this.backupFileService.resolveBackupContent(droppedDirtyEditor.backupResource).then(function (content) {\n            // Set the contents of to the resource to the target\n            return _this.backupFileService.backupResource(droppedDirtyEditor.resource, content.create(_this.getDefaultEOL()).createSnapshot(true));\n        }).then(function () { return false; }, function () { return false; } /* ignore any error */);\n    };\n    ResourcesDropHandler.prototype.getDefaultEOL = function () {\n        var eol = this.configurationService.getValue('files.eol');\n        if (eol === '\\r\\n') {\n            return model_1.DefaultEndOfLine.CRLF;\n        }\n        return model_1.DefaultEndOfLine.LF;\n    };\n    ResourcesDropHandler.prototype.handleWorkspaceFileDrop = function (fileOnDiskResources) {\n        var _this = this;\n        var workspaceResources = {\n            workspaces: [],\n            folders: []\n        };\n        return Promise.all(fileOnDiskResources.map(function (fileOnDiskResource) {\n            // Check for Workspace\n            if (workspaces_1.hasWorkspaceFileExtension(fileOnDiskResource.fsPath)) {\n                workspaceResources.workspaces.push({ uri: fileOnDiskResource, typeHint: 'file' });\n                return undefined;\n            }\n            // Check for Folder\n            return _this.fileService.resolveFile(fileOnDiskResource).then(function (stat) {\n                if (stat.isDirectory) {\n                    workspaceResources.folders.push({ uri: stat.resource, typeHint: 'folder' });\n                }\n            }, function (error) { return undefined; });\n        })).then(function (_) {\n            var workspaces = workspaceResources.workspaces, folders = workspaceResources.folders;\n            // Return early if no external resource is a folder or workspace\n            if (workspaces.length === 0 && folders.length === 0) {\n                return false;\n            }\n            // Pass focus to window\n            _this.windowService.focusWindow();\n            // Open in separate windows if we drop workspaces or just one folder\n            if (workspaces.length > 0 || folders.length === 1) {\n                return _this.windowService.openWindow(workspaces.concat(folders), { forceReuseWindow: true }).then(function (_) { return true; });\n            }\n            // folders.length > 1: Multiple folders: Create new workspace with folders and open\n            return _this.workspaceEditingService.createAndEnterWorkspace(folders).then(function (_) { return true; });\n        });\n    };\n    ResourcesDropHandler = tslib_1.__decorate([\n        tslib_1.__param(1, files_1.IFileService),\n        tslib_1.__param(2, windows_1.IWindowsService),\n        tslib_1.__param(3, windows_1.IWindowService),\n        tslib_1.__param(4, textfiles_1.ITextFileService),\n        tslib_1.__param(5, backup_1.IBackupFileService),\n        tslib_1.__param(6, untitledEditorService_1.IUntitledEditorService),\n        tslib_1.__param(7, editorService_1.IEditorService),\n        tslib_1.__param(8, configuration_1.IConfigurationService),\n        tslib_1.__param(9, workspaceEditing_1.IWorkspaceEditingService)\n    ], ResourcesDropHandler);\n    return ResourcesDropHandler;\n}());\nexports.ResourcesDropHandler = ResourcesDropHandler;\nfunction fillResourceDataTransfers(accessor, resources, event) {\n    if (resources.length === 0 || !event.dataTransfer) {\n        return;\n    }\n    var sources = resources.map(function (obj) {\n        if (uri_1.URI.isUri(obj)) {\n            return { resource: obj, isDirectory: false /* assume resource is not a directory */ };\n        }\n        return obj;\n    });\n    var firstSource = sources[0];\n    // Text: allows to paste into text-capable areas\n    var lineDelimiter = platform_1.isWindows ? '\\r\\n' : '\\n';\n    event.dataTransfer.setData(dnd_1.DataTransfers.TEXT, sources.map(function (source) { return source.resource.scheme === network_1.Schemas.file ? path_1.normalize(labels_1.normalizeDriveLetter(source.resource.fsPath)) : source.resource.toString(); }).join(lineDelimiter));\n    // Download URL: enables support to drag a tab as file to desktop (only single file supported)\n    if (firstSource.resource.scheme === network_1.Schemas.file) {\n        event.dataTransfer.setData(dnd_1.DataTransfers.DOWNLOAD_URL, [mime_1.MIME_BINARY, resources_1.basename(firstSource.resource), firstSource.resource.toString()].join(':'));\n    }\n    // Resource URLs: allows to drop multiple resources to a target in VS Code (not directories)\n    var files = sources.filter(function (s) { return !s.isDirectory; });\n    if (files.length) {\n        event.dataTransfer.setData(dnd_1.DataTransfers.RESOURCES, JSON.stringify(files.map(function (f) { return f.resource.toString(); })));\n    }\n    // Editors: enables cross window DND of tabs into the editor area\n    var textFileService = accessor.get(textfiles_1.ITextFileService);\n    var backupFileService = accessor.get(backup_1.IBackupFileService);\n    var editorService = accessor.get(editorService_1.IEditorService);\n    var draggedEditors = [];\n    files.forEach(function (file) {\n        // Try to find editor view state from the visible editors that match given resource\n        var viewState = null;\n        var textEditorWidgets = editorService.visibleTextEditorWidgets;\n        for (var _i = 0, textEditorWidgets_1 = textEditorWidgets; _i < textEditorWidgets_1.length; _i++) {\n            var textEditorWidget = textEditorWidgets_1[_i];\n            if (editorBrowser_1.isCodeEditor(textEditorWidget)) {\n                var model = textEditorWidget.getModel();\n                if (model && model.uri && model.uri.toString() === file.resource.toString()) {\n                    viewState = textEditorWidget.saveViewState();\n                    break;\n                }\n            }\n        }\n        // Add as dragged editor\n        draggedEditors.push({\n            resource: file.resource.toString(),\n            backupResource: textFileService.isDirty(file.resource) ? backupFileService.toBackupResource(file.resource).toString() : undefined,\n            viewState: viewState\n        });\n    });\n    if (draggedEditors.length) {\n        event.dataTransfer.setData(exports.CodeDataTransfers.EDITORS, JSON.stringify(draggedEditors));\n    }\n}\nexports.fillResourceDataTransfers = fillResourceDataTransfers;\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nvar LocalSelectionTransfer = /** @class */ (function () {\n    function LocalSelectionTransfer() {\n        // protect against external instantiation\n    }\n    LocalSelectionTransfer.getInstance = function () {\n        return LocalSelectionTransfer.INSTANCE;\n    };\n    LocalSelectionTransfer.prototype.hasData = function (proto) {\n        return proto && proto === this.proto;\n    };\n    LocalSelectionTransfer.prototype.clearData = function (proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    };\n    LocalSelectionTransfer.prototype.getData = function (proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    };\n    LocalSelectionTransfer.prototype.setData = function (data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    };\n    LocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n    return LocalSelectionTransfer;\n}());\nexports.LocalSelectionTransfer = LocalSelectionTransfer;\nvar DragAndDropObserver = /** @class */ (function (_super) {\n    tslib_1.__extends(DragAndDropObserver, _super);\n    function DragAndDropObserver(element, callbacks) {\n        var _this = _super.call(this) || this;\n        _this.element = element;\n        _this.callbacks = callbacks;\n        // A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\n        // calls see https://github.com/Microsoft/vscode/issues/14470\n        // when the element has child elements where the events are fired\n        // repeadedly.\n        _this.counter = 0;\n        _this.registerListeners();\n        return _this;\n    }\n    DragAndDropObserver.prototype.registerListeners = function () {\n        var _this = this;\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DRAG_ENTER, function (e) {\n            _this.counter++;\n            _this.callbacks.onDragEnter(e);\n        }));\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DRAG_OVER, function (e) {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            if (_this.callbacks.onDragOver) {\n                _this.callbacks.onDragOver(e);\n            }\n        }));\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DRAG_LEAVE, function (e) {\n            _this.counter--;\n            if (_this.counter === 0) {\n                _this.callbacks.onDragLeave(e);\n            }\n        }));\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DRAG_END, function (e) {\n            _this.counter = 0;\n            _this.callbacks.onDragEnd(e);\n        }));\n        this._register(dom_1.addDisposableListener(this.element, dom_1.EventType.DROP, function (e) {\n            _this.counter = 0;\n            _this.callbacks.onDrop(e);\n        }));\n    };\n    return DragAndDropObserver;\n}(lifecycle_1.Disposable));\nexports.DragAndDropObserver = DragAndDropObserver;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/browser/dnd.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/browser/dnd.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hasWorkspaceFileExtension } from 'vs/platform/workspaces/common/workspaces';\nimport { normalize } from 'vs/base/common/path';\nimport { basename } from 'vs/base/common/resources';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWindowsService, IWindowService, IURIToOpen } from 'vs/platform/windows/common/windows';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { IBackupFileService } from 'vs/workbench/services/backup/common/backup';\nimport { Schemas } from 'vs/base/common/network';\nimport { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport { DefaultEndOfLine } from 'vs/editor/common/model';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEditorViewState } from 'vs/editor/common/editorCommon';\nimport { DataTransfers } from 'vs/base/browser/dnd';\nimport { DragMouseEvent } from 'vs/base/browser/mouseEvent';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { MIME_BINARY } from 'vs/base/common/mime';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { isCodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { IEditorIdentifier, GroupIdentifier } from 'vs/workbench/common/editor';\nimport { IEditorService, IResourceEditor } from 'vs/workbench/services/editor/common/editorService';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { addDisposableListener, EventType } from 'vs/base/browser/dom';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IRecentFile } from 'vs/platform/history/common/history';\nimport { IWorkspaceEditingService } from 'vs/workbench/services/workspace/common/workspaceEditing';\n\nexport interface IDraggedResource {\n\tresource: URI;\n\tisExternal: boolean;\n}\n\nexport class DraggedEditorIdentifier {\n\tconstructor(private _identifier: IEditorIdentifier) { }\n\n\tget identifier(): IEditorIdentifier {\n\t\treturn this._identifier;\n\t}\n}\n\nexport class DraggedEditorGroupIdentifier {\n\tconstructor(private _identifier: GroupIdentifier) { }\n\n\tget identifier(): GroupIdentifier {\n\t\treturn this._identifier;\n\t}\n}\n\nexport interface IDraggedEditor extends IDraggedResource {\n\tbackupResource?: URI;\n\tviewState?: IEditorViewState;\n}\n\nexport interface ISerializedDraggedEditor {\n\tresource: string;\n\tbackupResource?: string;\n\tviewState: IEditorViewState | null;\n}\n\nexport const CodeDataTransfers = {\n\tEDITORS: 'CodeEditors',\n\tFILES: 'CodeFiles'\n};\n\nexport function extractResources(e: DragEvent, externalOnly?: boolean): Array<IDraggedResource | IDraggedEditor> {\n\tconst resources: Array<IDraggedResource | IDraggedEditor> = [];\n\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\n\t\t// Check for window-to-window DND\n\t\tif (!externalOnly) {\n\n\t\t\t// Data Transfer: Code Editors\n\t\t\tconst rawEditorsData = e.dataTransfer.getData(CodeDataTransfers.EDITORS);\n\t\t\tif (rawEditorsData) {\n\t\t\t\ttry {\n\t\t\t\t\tconst draggedEditors = JSON.parse(rawEditorsData) as ISerializedDraggedEditor[];\n\t\t\t\t\tdraggedEditors.forEach(draggedEditor => {\n\t\t\t\t\t\tresources.push({ resource: URI.parse(draggedEditor.resource), backupResource: draggedEditor.backupResource ? URI.parse(draggedEditor.backupResource) : undefined, viewState: draggedEditor.viewState, isExternal: false });\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Invalid transfer\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Data Transfer: Resources\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tconst rawResourcesData = e.dataTransfer.getData(DataTransfers.RESOURCES);\n\t\t\t\t\tif (rawResourcesData) {\n\t\t\t\t\t\tconst uriStrArray: string[] = JSON.parse(rawResourcesData);\n\t\t\t\t\t\tresources.push(...uriStrArray.map(uriStr => ({ resource: URI.parse(uriStr), isExternal: false })));\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Invalid transfer\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for native file transfer\n\t\tif (e.dataTransfer && e.dataTransfer.files) {\n\t\t\tfor (let i = 0; i < e.dataTransfer.files.length; i++) {\n\t\t\t\tconst file = e.dataTransfer.files[i] as { path: string };\n\t\t\t\tif (file && file.path && !resources.some(r => r.resource.fsPath === file.path) /* prevent duplicates */) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresources.push({ resource: URI.file(file.path), isExternal: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Invalid URI\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for CodeFiles transfer\n\t\tconst rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n\t\tif (rawCodeFiles) {\n\t\t\ttry {\n\t\t\t\tconst codeFiles = JSON.parse(rawCodeFiles) as string[];\n\t\t\t\tcodeFiles.forEach(codeFile => {\n\t\t\t\t\tif (!resources.some(r => r.resource.fsPath === codeFile) /* prevent duplicates */) {\n\t\t\t\t\t\tresources.push({ resource: URI.file(codeFile), isExternal: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\t}\n\n\treturn resources;\n}\n\nexport interface IResourcesDropHandlerOptions {\n\n\t/**\n\t * Wether to open the actual workspace when a workspace configuration file is dropped\n\t * or wether to open the configuration file within the editor as normal file.\n\t */\n\tallowWorkspaceOpen: boolean;\n}\n\n/**\n * Shared function across some components to handle drag & drop of resources. E.g. of folders and workspace files\n * to open them in the window instead of the editor or to handle dirty editors being dropped between instances of Code.\n */\nexport class ResourcesDropHandler {\n\n\tconstructor(\n\t\tprivate options: IResourcesDropHandlerOptions,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWindowsService private readonly windowsService: IWindowsService,\n\t\t@IWindowService private readonly windowService: IWindowService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IBackupFileService private readonly backupFileService: IBackupFileService,\n\t\t@IUntitledEditorService private readonly untitledEditorService: IUntitledEditorService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService\n\t) {\n\t}\n\n\thandleDrop(event: DragEvent, resolveTargetGroup: () => IEditorGroup | undefined, afterDrop: (targetGroup: IEditorGroup | undefined) => void, targetIndex?: number): void {\n\t\tconst untitledOrFileResources = extractResources(event).filter(r => this.fileService.canHandleResource(r.resource) || r.resource.scheme === Schemas.untitled);\n\t\tif (!untitledOrFileResources.length) {\n\t\t\treturn (require('vs/../../../../packages/vscode/src/workbench') as typeof import ('vs/../../../../packages/vscode/src/workbench')).workbench.handleDrop(event, resolveTargetGroup, afterDrop, targetIndex);\n\t\t}\n\n\t\t// Make the window active to handle the drop properly within\n\t\tthis.windowService.focusWindow().then(() => {\n\n\t\t\t// Check for special things being dropped\n\t\t\treturn this.doHandleDrop(untitledOrFileResources).then(isWorkspaceOpening => {\n\t\t\t\tif (isWorkspaceOpening) {\n\t\t\t\t\treturn undefined; // return early if the drop operation resulted in this window changing to a workspace\n\t\t\t\t}\n\n\t\t\t\t// Add external ones to recently open list unless dropped resource is a workspace\n\t\t\t\tconst recents: IRecentFile[] = untitledOrFileResources.filter(d => d.isExternal && d.resource.scheme === Schemas.file).map(d => ({ fileUri: d.resource }));\n\t\t\t\tif (recents.length) {\n\t\t\t\t\tthis.windowsService.addRecentlyOpened(recents);\n\t\t\t\t}\n\n\t\t\t\tconst editors: IResourceEditor[] = untitledOrFileResources.map(untitledOrFileResource => ({\n\t\t\t\t\tresource: untitledOrFileResource.resource,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\tindex: targetIndex,\n\t\t\t\t\t\tviewState: (untitledOrFileResource as IDraggedEditor).viewState\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// Open in Editor\n\t\t\t\tconst targetGroup = resolveTargetGroup();\n\t\t\t\treturn this.editorService.openEditors(editors, targetGroup).then(() => {\n\n\t\t\t\t\t// Finish with provided function\n\t\t\t\t\tafterDrop(targetGroup);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate doHandleDrop(untitledOrFileResources: Array<IDraggedResource | IDraggedEditor>): Promise<boolean> {\n\n\t\t// Check for dirty editors being dropped\n\t\tconst resourcesWithBackups: IDraggedEditor[] = untitledOrFileResources.filter(resource => !resource.isExternal && !!(resource as IDraggedEditor).backupResource);\n\t\tif (resourcesWithBackups.length > 0) {\n\t\t\treturn Promise.all(resourcesWithBackups.map(resourceWithBackup => this.handleDirtyEditorDrop(resourceWithBackup))).then(() => false);\n\t\t}\n\n\t\t// Check for workspace file being dropped if we are allowed to do so\n\t\tif (this.options.allowWorkspaceOpen) {\n\t\t\tconst externalFileOnDiskResources = untitledOrFileResources.filter(d => d.isExternal && d.resource.scheme === Schemas.file).map(d => d.resource);\n\t\t\tif (externalFileOnDiskResources.length > 0) {\n\t\t\t\treturn this.handleWorkspaceFileDrop(externalFileOnDiskResources);\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate handleDirtyEditorDrop(droppedDirtyEditor: IDraggedEditor): Promise<boolean> {\n\n\t\t// Untitled: always ensure that we open a new untitled for each file we drop\n\t\tif (droppedDirtyEditor.resource.scheme === Schemas.untitled) {\n\t\t\tdroppedDirtyEditor.resource = this.untitledEditorService.createOrGet().getResource();\n\t\t}\n\n\t\t// Return early if the resource is already dirty in target or opened already\n\t\tif (this.textFileService.isDirty(droppedDirtyEditor.resource) || this.editorService.isOpen({ resource: droppedDirtyEditor.resource })) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\t// Resolve the contents of the dropped dirty resource from source\n\t\treturn this.backupFileService.resolveBackupContent(droppedDirtyEditor.backupResource!).then(content => {\n\n\t\t\t// Set the contents of to the resource to the target\n\t\t\treturn this.backupFileService.backupResource(droppedDirtyEditor.resource, content!.create(this.getDefaultEOL()).createSnapshot(true));\n\t\t}).then(() => false, () => false /* ignore any error */);\n\t}\n\n\tprivate getDefaultEOL(): DefaultEndOfLine {\n\t\tconst eol = this.configurationService.getValue('files.eol');\n\t\tif (eol === '\\r\\n') {\n\t\t\treturn DefaultEndOfLine.CRLF;\n\t\t}\n\n\t\treturn DefaultEndOfLine.LF;\n\t}\n\n\tprivate handleWorkspaceFileDrop(fileOnDiskResources: URI[]): Promise<boolean> {\n\t\tconst workspaceResources: { workspaces: IURIToOpen[], folders: IURIToOpen[] } = {\n\t\t\tworkspaces: [],\n\t\t\tfolders: []\n\t\t};\n\n\t\treturn Promise.all(fileOnDiskResources.map(fileOnDiskResource => {\n\n\t\t\t// Check for Workspace\n\t\t\tif (hasWorkspaceFileExtension(fileOnDiskResource.fsPath)) {\n\t\t\t\tworkspaceResources.workspaces.push({ uri: fileOnDiskResource, typeHint: 'file' });\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t// Check for Folder\n\t\t\treturn this.fileService.resolveFile(fileOnDiskResource).then(stat => {\n\t\t\t\tif (stat.isDirectory) {\n\t\t\t\t\tworkspaceResources.folders.push({ uri: stat.resource, typeHint: 'folder' });\n\t\t\t\t}\n\t\t\t}, error => undefined);\n\t\t})).then(_ => {\n\t\t\tconst { workspaces, folders } = workspaceResources;\n\n\t\t\t// Return early if no external resource is a folder or workspace\n\t\t\tif (workspaces.length === 0 && folders.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Pass focus to window\n\t\t\tthis.windowService.focusWindow();\n\n\t\t\t// Open in separate windows if we drop workspaces or just one folder\n\t\t\tif (workspaces.length > 0 || folders.length === 1) {\n\t\t\t\treturn this.windowService.openWindow([...workspaces, ...folders], { forceReuseWindow: true }).then(_ => true);\n\t\t\t}\n\n\t\t\t// folders.length > 1: Multiple folders: Create new workspace with folders and open\n\t\t\treturn this.workspaceEditingService.createAndEnterWorkspace(folders).then(_ => true);\n\t\t});\n\t}\n}\n\nexport function fillResourceDataTransfers(accessor: ServicesAccessor, resources: (URI | { resource: URI, isDirectory: boolean })[], event: DragMouseEvent | DragEvent): void {\n\tif (resources.length === 0 || !event.dataTransfer) {\n\t\treturn;\n\t}\n\n\tconst sources = resources.map(obj => {\n\t\tif (URI.isUri(obj)) {\n\t\t\treturn { resource: obj, isDirectory: false /* assume resource is not a directory */ };\n\t\t}\n\n\t\treturn obj;\n\t});\n\n\tconst firstSource = sources[0];\n\n\t// Text: allows to paste into text-capable areas\n\tconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n\tevent.dataTransfer.setData(DataTransfers.TEXT, sources.map(source => source.resource.scheme === Schemas.file ? normalize(normalizeDriveLetter(source.resource.fsPath)) : source.resource.toString()).join(lineDelimiter));\n\n\t// Download URL: enables support to drag a tab as file to desktop (only single file supported)\n\tif (firstSource.resource.scheme === Schemas.file) {\n\t\tevent.dataTransfer.setData(DataTransfers.DOWNLOAD_URL, [MIME_BINARY, basename(firstSource.resource), firstSource.resource.toString()].join(':'));\n\t}\n\n\t// Resource URLs: allows to drop multiple resources to a target in VS Code (not directories)\n\tconst files = sources.filter(s => !s.isDirectory);\n\tif (files.length) {\n\t\tevent.dataTransfer.setData(DataTransfers.RESOURCES, JSON.stringify(files.map(f => f.resource.toString())));\n\t}\n\n\t// Editors: enables cross window DND of tabs into the editor area\n\tconst textFileService = accessor.get(ITextFileService);\n\tconst backupFileService = accessor.get(IBackupFileService);\n\tconst editorService = accessor.get(IEditorService);\n\n\tconst draggedEditors: ISerializedDraggedEditor[] = [];\n\tfiles.forEach(file => {\n\n\t\t// Try to find editor view state from the visible editors that match given resource\n\t\tlet viewState: IEditorViewState | null = null;\n\t\tconst textEditorWidgets = editorService.visibleTextEditorWidgets;\n\t\tfor (const textEditorWidget of textEditorWidgets) {\n\t\t\tif (isCodeEditor(textEditorWidget)) {\n\t\t\t\tconst model = textEditorWidget.getModel();\n\t\t\t\tif (model && model.uri && model.uri.toString() === file.resource.toString()) {\n\t\t\t\t\tviewState = textEditorWidget.saveViewState();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add as dragged editor\n\t\tdraggedEditors.push({\n\t\t\tresource: file.resource.toString(),\n\t\t\tbackupResource: textFileService.isDirty(file.resource) ? backupFileService.toBackupResource(file.resource).toString() : undefined,\n\t\t\tviewState\n\t\t});\n\t});\n\n\tif (draggedEditors.length) {\n\t\tevent.dataTransfer.setData(CodeDataTransfers.EDITORS, JSON.stringify(draggedEditors));\n\t}\n}\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n\n\tprivate static readonly INSTANCE = new LocalSelectionTransfer();\n\n\tprivate data?: T[];\n\tprivate proto?: T;\n\n\tprivate constructor() {\n\t\t// protect against external instantiation\n\t}\n\n\tstatic getInstance<T>(): LocalSelectionTransfer<T> {\n\t\treturn LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n\t}\n\n\thasData(proto: T): boolean {\n\t\treturn proto && proto === this.proto;\n\t}\n\n\tclearData(proto: T): void {\n\t\tif (this.hasData(proto)) {\n\t\t\tthis.proto = undefined;\n\t\t\tthis.data = undefined;\n\t\t}\n\t}\n\n\tgetData(proto: T): T[] | undefined {\n\t\tif (this.hasData(proto)) {\n\t\t\treturn this.data;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tsetData(data: T[], proto: T): void {\n\t\tif (proto) {\n\t\t\tthis.data = data;\n\t\t\tthis.proto = proto;\n\t\t}\n\t}\n}\n\nexport interface IDragAndDropObserverCallbacks {\n\tonDragEnter: (e: DragEvent) => void;\n\tonDragLeave: (e: DragEvent) => void;\n\tonDrop: (e: DragEvent) => void;\n\tonDragEnd: (e: DragEvent) => void;\n\n\tonDragOver?: (e: DragEvent) => void;\n}\n\nexport class DragAndDropObserver extends Disposable {\n\n\t// A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\n\t// calls see https://github.com/Microsoft/vscode/issues/14470\n\t// when the element has child elements where the events are fired\n\t// repeadedly.\n\tprivate counter: number = 0;\n\n\tconstructor(private element: HTMLElement, private callbacks: IDragAndDropObserverCallbacks) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(addDisposableListener(this.element, EventType.DRAG_ENTER, (e: DragEvent) => {\n\t\t\tthis.counter++;\n\n\t\t\tthis.callbacks.onDragEnter(e);\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.element, EventType.DRAG_OVER, (e: DragEvent) => {\n\t\t\te.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n\t\t\tif (this.callbacks.onDragOver) {\n\t\t\t\tthis.callbacks.onDragOver(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.element, EventType.DRAG_LEAVE, (e: DragEvent) => {\n\t\t\tthis.counter--;\n\n\t\t\tif (this.counter === 0) {\n\t\t\t\tthis.callbacks.onDragLeave(e);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.element, EventType.DRAG_END, (e: DragEvent) => {\n\t\t\tthis.counter = 0;\n\t\t\tthis.callbacks.onDragEnd(e);\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.element, EventType.DROP, (e: DragEvent) => {\n\t\t\tthis.counter = 0;\n\t\t\tthis.callbacks.onDrop(e);\n\t\t}));\n\t}\n}\n"]}]}