{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadErrors.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadErrors.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar extHostCustomers_1 = require(\"vs/workbench/api/common/extHostCustomers\");\nvar extHost_protocol_1 = require(\"vs/workbench/api/common/extHost.protocol\");\nvar MainThreadErrors = /** @class */ (function () {\n    function MainThreadErrors() {\n    }\n    MainThreadErrors.prototype.dispose = function () {\n        //\n    };\n    MainThreadErrors.prototype.$onUnexpectedError = function (err) {\n        if (err && err.$isError) {\n            var name = err.name, message = err.message, stack = err.stack;\n            err = new Error();\n            err.message = message;\n            err.name = name;\n            err.stack = stack;\n        }\n        errors_1.onUnexpectedError(err);\n    };\n    MainThreadErrors = tslib_1.__decorate([\n        extHostCustomers_1.extHostNamedCustomer(extHost_protocol_1.MainContext.MainThreadErrors)\n    ], MainThreadErrors);\n    return MainThreadErrors;\n}());\nexports.MainThreadErrors = MainThreadErrors;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadErrors.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/api/browser/mainThreadErrors.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAEhG,gDAA2E;AAC3E,6EAAgF;AAChF,6EAA8F;AAG9F;IAAA;IAgBA,CAAC;IAdA,kCAAO,GAAP;QACC,EAAE;IACH,CAAC;IAED,6CAAkB,GAAlB,UAAmB,GAA0B;QAC5C,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE;YAChB,IAAA,eAAI,EAAE,qBAAO,EAAE,iBAAK,CAAS;YACrC,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YAClB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YACtB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAChB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;SAClB;QACD,0BAAiB,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAfW,gBAAgB;QAD5B,uCAAoB,CAAC,8BAAW,CAAC,gBAAgB,CAAC;OACtC,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA,AAhBD,IAgBC;AAhBY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SerializedError, onUnexpectedError } from 'vs/base/common/errors';\nimport { extHostNamedCustomer } from 'vs/workbench/api/common/extHostCustomers';\nimport { MainContext, MainThreadErrorsShape } from 'vs/workbench/api/common/extHost.protocol';\n\n@extHostNamedCustomer(MainContext.MainThreadErrors)\nexport class MainThreadErrors implements MainThreadErrorsShape {\n\n\tdispose(): void {\n\t\t//\n\t}\n\n\t$onUnexpectedError(err: any | SerializedError): void {\n\t\tif (err && err.$isError) {\n\t\t\tconst { name, message, stack } = err;\n\t\t\terr = new Error();\n\t\t\terr.message = message;\n\t\t\terr.name = name;\n\t\t\terr.stack = stack;\n\t\t}\n\t\tonUnexpectedError(err);\n\t}\n}\n"]}]}