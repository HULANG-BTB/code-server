{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/viewModel/viewModelDecorations.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/viewModel/viewModelDecorations.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar viewModel_1 = require(\"vs/editor/common/viewModel/viewModel\");\nvar ViewModelDecorations = /** @class */ (function () {\n    function ViewModelDecorations(editorId, model, configuration, linesCollection, coordinatesConverter) {\n        this.editorId = editorId;\n        this.model = model;\n        this.configuration = configuration;\n        this._linesCollection = linesCollection;\n        this._coordinatesConverter = coordinatesConverter;\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    }\n    ViewModelDecorations.prototype._clearCachedModelDecorationsResolver = function () {\n        this._cachedModelDecorationsResolver = null;\n        this._cachedModelDecorationsResolverViewRange = null;\n    };\n    ViewModelDecorations.prototype.dispose = function () {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    };\n    ViewModelDecorations.prototype.reset = function () {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    };\n    ViewModelDecorations.prototype.onModelDecorationsChanged = function () {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    };\n    ViewModelDecorations.prototype.onLineMappingChanged = function () {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    };\n    ViewModelDecorations.prototype._getOrCreateViewModelDecoration = function (modelDecoration) {\n        var id = modelDecoration.id;\n        var r = this._decorationsCache[id];\n        if (!r) {\n            var modelRange = modelDecoration.range;\n            var options = modelDecoration.options;\n            var viewRange = void 0;\n            if (options.isWholeLine) {\n                var start = this._coordinatesConverter.convertModelPositionToViewPosition(new position_1.Position(modelRange.startLineNumber, 1));\n                var end = this._coordinatesConverter.convertModelPositionToViewPosition(new position_1.Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)));\n                viewRange = new range_1.Range(start.lineNumber, start.column, end.lineNumber, end.column);\n            }\n            else {\n                viewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange);\n            }\n            r = new viewModel_1.ViewModelDecoration(viewRange, options);\n            this._decorationsCache[id] = r;\n        }\n        return r;\n    };\n    ViewModelDecorations.prototype.getDecorationsViewportData = function (viewRange) {\n        var cacheIsValid = (this._cachedModelDecorationsResolver !== null);\n        cacheIsValid = cacheIsValid && (viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange));\n        if (!cacheIsValid) {\n            this._cachedModelDecorationsResolver = this._getDecorationsViewportData(viewRange);\n            this._cachedModelDecorationsResolverViewRange = viewRange;\n        }\n        return this._cachedModelDecorationsResolver;\n    };\n    ViewModelDecorations.prototype._getDecorationsViewportData = function (viewportRange) {\n        var modelDecorations = this._linesCollection.getDecorationsInRange(viewportRange, this.editorId, this.configuration.editor.readOnly);\n        var startLineNumber = viewportRange.startLineNumber;\n        var endLineNumber = viewportRange.endLineNumber;\n        var decorationsInViewport = [], decorationsInViewportLen = 0;\n        var inlineDecorations = [];\n        for (var j = startLineNumber; j <= endLineNumber; j++) {\n            inlineDecorations[j - startLineNumber] = [];\n        }\n        for (var i = 0, len = modelDecorations.length; i < len; i++) {\n            var modelDecoration = modelDecorations[i];\n            var decorationOptions = modelDecoration.options;\n            var viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n            var viewRange = viewModelDecoration.range;\n            decorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n            if (decorationOptions.inlineClassName) {\n                var inlineDecoration = new viewModel_1.InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? viewModel_1.InlineDecorationType.RegularAffectingLetterSpacing : viewModel_1.InlineDecorationType.Regular);\n                var intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\n                var intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\n                for (var j = intersectedStartLineNumber; j <= intersectedEndLineNumber; j++) {\n                    inlineDecorations[j - startLineNumber].push(inlineDecoration);\n                }\n            }\n            if (decorationOptions.beforeContentClassName) {\n                if (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\n                    var inlineDecoration = new viewModel_1.InlineDecoration(new range_1.Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn), decorationOptions.beforeContentClassName, viewModel_1.InlineDecorationType.Before);\n                    inlineDecorations[viewRange.startLineNumber - startLineNumber].push(inlineDecoration);\n                }\n            }\n            if (decorationOptions.afterContentClassName) {\n                if (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\n                    var inlineDecoration = new viewModel_1.InlineDecoration(new range_1.Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn), decorationOptions.afterContentClassName, viewModel_1.InlineDecorationType.After);\n                    inlineDecorations[viewRange.endLineNumber - startLineNumber].push(inlineDecoration);\n                }\n            }\n        }\n        return {\n            decorations: decorationsInViewport,\n            inlineDecorations: inlineDecorations\n        };\n    };\n    return ViewModelDecorations;\n}());\nexports.ViewModelDecorations = ViewModelDecorations;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/viewModel/viewModelDecorations.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/viewModel/viewModelDecorations.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { IModelDecoration, ITextModel } from 'vs/editor/common/model';\nimport { IViewModelLinesCollection } from 'vs/editor/common/viewModel/splitLinesCollection';\nimport { ICoordinatesConverter, InlineDecoration, InlineDecorationType, ViewModelDecoration } from 'vs/editor/common/viewModel/viewModel';\n\nexport interface IDecorationsViewportData {\n\t/**\n\t * decorations in the viewport.\n\t */\n\treadonly decorations: ViewModelDecoration[];\n\t/**\n\t * inline decorations grouped by each line in the viewport.\n\t */\n\treadonly inlineDecorations: InlineDecoration[][];\n}\n\nexport class ViewModelDecorations implements IDisposable {\n\n\tprivate readonly editorId: number;\n\tprivate readonly model: ITextModel;\n\tprivate readonly configuration: editorCommon.IConfiguration;\n\tprivate readonly _linesCollection: IViewModelLinesCollection;\n\tprivate readonly _coordinatesConverter: ICoordinatesConverter;\n\n\tprivate _decorationsCache: { [decorationId: string]: ViewModelDecoration; };\n\n\tprivate _cachedModelDecorationsResolver: IDecorationsViewportData | null;\n\tprivate _cachedModelDecorationsResolverViewRange: Range | null;\n\n\tconstructor(editorId: number, model: ITextModel, configuration: editorCommon.IConfiguration, linesCollection: IViewModelLinesCollection, coordinatesConverter: ICoordinatesConverter) {\n\t\tthis.editorId = editorId;\n\t\tthis.model = model;\n\t\tthis.configuration = configuration;\n\t\tthis._linesCollection = linesCollection;\n\t\tthis._coordinatesConverter = coordinatesConverter;\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tprivate _clearCachedModelDecorationsResolver(): void {\n\t\tthis._cachedModelDecorationsResolver = null;\n\t\tthis._cachedModelDecorationsResolverViewRange = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onModelDecorationsChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tpublic onLineMappingChanged(): void {\n\t\tthis._decorationsCache = Object.create(null);\n\n\t\tthis._clearCachedModelDecorationsResolver();\n\t}\n\n\tprivate _getOrCreateViewModelDecoration(modelDecoration: IModelDecoration): ViewModelDecoration {\n\t\tconst id = modelDecoration.id;\n\t\tlet r = this._decorationsCache[id];\n\t\tif (!r) {\n\t\t\tconst modelRange = modelDecoration.range;\n\t\t\tconst options = modelDecoration.options;\n\t\t\tlet viewRange: Range;\n\t\t\tif (options.isWholeLine) {\n\t\t\t\tconst start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1));\n\t\t\t\tconst end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)));\n\t\t\t\tviewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t\t\t} else {\n\t\t\t\tviewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange);\n\t\t\t}\n\t\t\tr = new ViewModelDecoration(viewRange, options);\n\t\t\tthis._decorationsCache[id] = r;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getDecorationsViewportData(viewRange: Range): IDecorationsViewportData {\n\t\tlet cacheIsValid = (this._cachedModelDecorationsResolver !== null);\n\t\tcacheIsValid = cacheIsValid && (viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange));\n\t\tif (!cacheIsValid) {\n\t\t\tthis._cachedModelDecorationsResolver = this._getDecorationsViewportData(viewRange);\n\t\t\tthis._cachedModelDecorationsResolverViewRange = viewRange;\n\t\t}\n\t\treturn this._cachedModelDecorationsResolver!;\n\t}\n\n\tprivate _getDecorationsViewportData(viewportRange: Range): IDecorationsViewportData {\n\t\tconst modelDecorations = this._linesCollection.getDecorationsInRange(viewportRange, this.editorId, this.configuration.editor.readOnly);\n\t\tconst startLineNumber = viewportRange.startLineNumber;\n\t\tconst endLineNumber = viewportRange.endLineNumber;\n\n\t\tlet decorationsInViewport: ViewModelDecoration[] = [], decorationsInViewportLen = 0;\n\t\tlet inlineDecorations: InlineDecoration[][] = [];\n\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\tinlineDecorations[j - startLineNumber] = [];\n\t\t}\n\n\t\tfor (let i = 0, len = modelDecorations.length; i < len; i++) {\n\t\t\tlet modelDecoration = modelDecorations[i];\n\t\t\tlet decorationOptions = modelDecoration.options;\n\n\t\t\tlet viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n\t\t\tlet viewRange = viewModelDecoration.range;\n\n\t\t\tdecorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n\n\t\t\tif (decorationOptions.inlineClassName) {\n\t\t\t\tlet inlineDecoration = new InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? InlineDecorationType.RegularAffectingLetterSpacing : InlineDecorationType.Regular);\n\t\t\t\tlet intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\n\t\t\t\tlet intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\n\t\t\t\tfor (let j = intersectedStartLineNumber; j <= intersectedEndLineNumber; j++) {\n\t\t\t\t\tinlineDecorations[j - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.beforeContentClassName) {\n\t\t\t\tif (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\n\t\t\t\t\tlet inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn),\n\t\t\t\t\t\tdecorationOptions.beforeContentClassName,\n\t\t\t\t\t\tInlineDecorationType.Before\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[viewRange.startLineNumber - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (decorationOptions.afterContentClassName) {\n\t\t\t\tif (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\n\t\t\t\t\tlet inlineDecoration = new InlineDecoration(\n\t\t\t\t\t\tnew Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn),\n\t\t\t\t\t\tdecorationOptions.afterContentClassName,\n\t\t\t\t\t\tInlineDecorationType.After\n\t\t\t\t\t);\n\t\t\t\t\tinlineDecorations[viewRange.endLineNumber - startLineNumber].push(inlineDecoration);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdecorations: decorationsInViewport,\n\t\t\tinlineDecorations: inlineDecorations\n\t\t};\n\t}\n}\n"]}]}