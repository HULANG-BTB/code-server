{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar actions = require(\"vs/platform/actions/common/actions\");\nvar workspaceActions_1 = require(\"vs/workbench/browser/actions/workspaceActions\");\nvar issueActions_1 = require(\"vs/workbench/contrib/issue/electron-browser/issueActions\");\nvar developerActions_1 = require(\"vs/workbench/electron-browser/actions/developerActions\");\nvar helpActions_1 = require(\"vs/workbench/electron-browser/actions/helpActions\");\nvar windowActions_1 = require(\"vs/workbench/electron-browser/actions/windowActions\");\nvar toSkip = [\n    developerActions_1.ToggleDevToolsAction.ID,\n    helpActions_1.OpenTwitterUrlAction.ID,\n    helpActions_1.OpenPrivacyStatementUrlAction.ID,\n    windowActions_1.ShowAboutDialogAction.ID,\n    issueActions_1.OpenProcessExplorer.ID,\n    helpActions_1.OpenRequestFeatureUrlAction.ID,\n    windowActions_1.NewWindowAction.ID,\n    windowActions_1.CloseCurrentWindowAction.ID,\n    workspaceActions_1.CloseWorkspaceAction.ID,\n    // Unfortunately referenced as a string\n    \"update.showCurrentReleaseNotes\",\n    \"workbench.action.openIssueReporter\",\n];\n// Intercept appending menu items so we can skip items that won't work.\nvar originalAppend = actions.MenuRegistry.appendMenuItem.bind(actions.MenuRegistry);\nactions.MenuRegistry.appendMenuItem = function (id, item) {\n    if (actions.isIMenuItem(item)) {\n        if (toSkip.indexOf(item.command.id) !== -1) {\n            // Skip instantiation\n            return {\n                dispose: function () { return undefined; },\n            };\n        }\n    }\n    return originalAppend(id, item);\n};\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/fill/menuRegistry.ts"],"names":[],"mappings":";;AACA,4DAA8D;AAC9D,kFAAqF;AACrF,yFAA+F;AAC/F,2FAA8F;AAC9F,iFAAqJ;AACrJ,qFAAuI;AAEvI,IAAM,MAAM,GAAG;IACd,uCAAoB,CAAC,EAAE;IACvB,kCAAoB,CAAC,EAAE;IACvB,2CAA6B,CAAC,EAAE;IAChC,qCAAqB,CAAC,EAAE;IACxB,kCAAmB,CAAC,EAAE;IACtB,yCAA2B,CAAC,EAAE;IAC9B,+BAAe,CAAC,EAAE;IAClB,wCAAwB,CAAC,EAAE;IAC3B,uCAAoB,CAAC,EAAE;IAEvB,uCAAuC;IACvC,gCAAgC;IAChC,oCAAoC;CACpC,CAAC;AAEF,uEAAuE;AACvE,IAAM,cAAc,GAAG,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACtF,OAAO,CAAC,YAAY,CAAC,cAAc,GAAG,UAAC,EAAkB,EAAE,IAA8C;IACxG,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;QAC9B,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;YAC3C,qBAAqB;YACrB,OAAO;gBACN,OAAO,EAAE,cAAY,OAAA,SAAS,EAAT,CAAS;aAC9B,CAAC;SACF;KACD;IAED,OAAO,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACjC,CAAC,CAAC","sourcesContent":["import { IDisposable } from \"vs/base/common/lifecycle\";\nimport * as actions from \"vs/platform/actions/common/actions\";\nimport { CloseWorkspaceAction } from \"vs/workbench/browser/actions/workspaceActions\";\nimport { OpenProcessExplorer } from \"vs/workbench/contrib/issue/electron-browser/issueActions\";\nimport { ToggleDevToolsAction } from \"vs/workbench/electron-browser/actions/developerActions\";\nimport { OpenPrivacyStatementUrlAction, OpenRequestFeatureUrlAction, OpenTwitterUrlAction } from \"vs/workbench/electron-browser/actions/helpActions\";\nimport { CloseCurrentWindowAction, NewWindowAction, ShowAboutDialogAction } from \"vs/workbench/electron-browser/actions/windowActions\";\n\nconst toSkip = [\n\tToggleDevToolsAction.ID,\n\tOpenTwitterUrlAction.ID,\n\tOpenPrivacyStatementUrlAction.ID,\n\tShowAboutDialogAction.ID,\n\tOpenProcessExplorer.ID,\n\tOpenRequestFeatureUrlAction.ID,\n\tNewWindowAction.ID,\n\tCloseCurrentWindowAction.ID,\n\tCloseWorkspaceAction.ID,\n\n\t// Unfortunately referenced as a string\n\t\"update.showCurrentReleaseNotes\",\n\t\"workbench.action.openIssueReporter\",\n];\n\n// Intercept appending menu items so we can skip items that won't work.\nconst originalAppend = actions.MenuRegistry.appendMenuItem.bind(actions.MenuRegistry);\nactions.MenuRegistry.appendMenuItem = (id: actions.MenuId, item: actions.IMenuItem | actions.ISubmenuItem): IDisposable => {\n\tif (actions.isIMenuItem(item)) {\n\t\tif (toSkip.indexOf(item.command.id) !== -1) {\n\t\t\t// Skip instantiation\n\t\t\treturn {\n\t\t\t\tdispose: (): void => undefined,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn originalAppend(id, item);\n};\n"]}]}