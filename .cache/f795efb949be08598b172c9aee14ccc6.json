{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/common/debugModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/common/debugModel.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar resources = require(\"vs/base/common/resources\");\nvar lifecycle = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar uuid_1 = require(\"vs/base/common/uuid\");\nvar async_1 = require(\"vs/base/common/async\");\nvar types_1 = require(\"vs/base/common/types\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar debug_1 = require(\"vs/workbench/contrib/debug/common/debug\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar path_1 = require(\"vs/base/common/path\");\nvar SimpleReplElement = /** @class */ (function () {\n    function SimpleReplElement(id, value, severity, sourceData) {\n        this.id = id;\n        this.value = value;\n        this.severity = severity;\n        this.sourceData = sourceData;\n    }\n    SimpleReplElement.prototype.toString = function () {\n        return this.value;\n    };\n    SimpleReplElement.prototype.getId = function () {\n        return this.id;\n    };\n    return SimpleReplElement;\n}());\nexports.SimpleReplElement = SimpleReplElement;\nvar RawObjectReplElement = /** @class */ (function () {\n    function RawObjectReplElement(id, name, valueObj, sourceData, annotation) {\n        this.id = id;\n        this.name = name;\n        this.valueObj = valueObj;\n        this.sourceData = sourceData;\n        this.annotation = annotation;\n    }\n    RawObjectReplElement.prototype.getId = function () {\n        return this.id;\n    };\n    Object.defineProperty(RawObjectReplElement.prototype, \"value\", {\n        get: function () {\n            if (this.valueObj === null) {\n                return 'null';\n            }\n            else if (Array.isArray(this.valueObj)) {\n                return \"Array[\" + this.valueObj.length + \"]\";\n            }\n            else if (types_1.isObject(this.valueObj)) {\n                return 'Object';\n            }\n            else if (types_1.isString(this.valueObj)) {\n                return \"\\\"\" + this.valueObj + \"\\\"\";\n            }\n            return String(this.valueObj) || '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RawObjectReplElement.prototype, \"hasChildren\", {\n        get: function () {\n            return (Array.isArray(this.valueObj) && this.valueObj.length > 0) || (types_1.isObject(this.valueObj) && Object.getOwnPropertyNames(this.valueObj).length > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RawObjectReplElement.prototype.getChildren = function () {\n        var _this = this;\n        var result = [];\n        if (Array.isArray(this.valueObj)) {\n            result = this.valueObj.slice(0, RawObjectReplElement.MAX_CHILDREN)\n                .map(function (v, index) { return new RawObjectReplElement(_this.id + \":\" + index, String(index), v); });\n        }\n        else if (types_1.isObject(this.valueObj)) {\n            result = Object.getOwnPropertyNames(this.valueObj).slice(0, RawObjectReplElement.MAX_CHILDREN)\n                .map(function (key, index) { return new RawObjectReplElement(_this.id + \":\" + index, key, _this.valueObj[key]); });\n        }\n        return Promise.resolve(result);\n    };\n    RawObjectReplElement.prototype.toString = function () {\n        return this.name + \"\\n\" + this.value;\n    };\n    RawObjectReplElement.MAX_CHILDREN = 1000; // upper bound of children per value\n    return RawObjectReplElement;\n}());\nexports.RawObjectReplElement = RawObjectReplElement;\nvar ExpressionContainer = /** @class */ (function () {\n    function ExpressionContainer(session, _reference, id, namedVariables, indexedVariables, startOfVariables) {\n        if (namedVariables === void 0) { namedVariables = 0; }\n        if (indexedVariables === void 0) { indexedVariables = 0; }\n        if (startOfVariables === void 0) { startOfVariables = 0; }\n        this.session = session;\n        this._reference = _reference;\n        this.id = id;\n        this.namedVariables = namedVariables;\n        this.indexedVariables = indexedVariables;\n        this.startOfVariables = startOfVariables;\n    }\n    Object.defineProperty(ExpressionContainer.prototype, \"reference\", {\n        get: function () {\n            return this._reference;\n        },\n        set: function (value) {\n            this._reference = value;\n            this.children = undefined; // invalidate children cache\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExpressionContainer.prototype.getChildren = function () {\n        if (!this.children) {\n            this.children = this.doGetChildren();\n        }\n        return this.children;\n    };\n    ExpressionContainer.prototype.doGetChildren = function () {\n        var _this = this;\n        if (!this.hasChildren) {\n            return Promise.resolve([]);\n        }\n        if (!this.getChildrenInChunks) {\n            return this.fetchVariables(undefined, undefined, undefined);\n        }\n        // Check if object has named variables, fetch them independent from indexed variables #9670\n        var childrenThenable = !!this.namedVariables ? this.fetchVariables(undefined, undefined, 'named') : Promise.resolve([]);\n        return childrenThenable.then(function (childrenArray) {\n            // Use a dynamic chunk size based on the number of elements #9774\n            var chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n            while (!!_this.indexedVariables && _this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n                chunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n            }\n            if (!!_this.indexedVariables && _this.indexedVariables > chunkSize) {\n                // There are a lot of children, create fake intermediate values that represent chunks #9537\n                var numberOfChunks = Math.ceil(_this.indexedVariables / chunkSize);\n                for (var i = 0; i < numberOfChunks; i++) {\n                    var start = (_this.startOfVariables || 0) + i * chunkSize;\n                    var count = Math.min(chunkSize, _this.indexedVariables - i * chunkSize);\n                    childrenArray.push(new Variable(_this.session, _this, _this.reference, \"[\" + start + \"..\" + (start + count - 1) + \"]\", '', '', undefined, count, { kind: 'virtual' }, undefined, true, start));\n                }\n                return childrenArray;\n            }\n            return _this.fetchVariables(_this.startOfVariables, _this.indexedVariables, 'indexed')\n                .then(function (variables) { return childrenArray.concat(variables); });\n        });\n    };\n    ExpressionContainer.prototype.getId = function () {\n        return this.id;\n    };\n    Object.defineProperty(ExpressionContainer.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            this._value = value;\n            this.valueChanged = !!ExpressionContainer.allValues.get(this.getId()) &&\n                ExpressionContainer.allValues.get(this.getId()) !== Expression.DEFAULT_VALUE && ExpressionContainer.allValues.get(this.getId()) !== value;\n            ExpressionContainer.allValues.set(this.getId(), value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ExpressionContainer.prototype, \"hasChildren\", {\n        get: function () {\n            // only variables with reference > 0 have children.\n            return !!this.reference && this.reference > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExpressionContainer.prototype.fetchVariables = function (start, count, filter) {\n        var _this = this;\n        return this.session.variables(this.reference || 0, filter, start, count).then(function (response) {\n            return response && response.body && response.body.variables\n                ? arrays_1.distinct(response.body.variables.filter(function (v) { return !!v && types_1.isString(v.name); }), function (v) { return v.name; }).map(function (v) {\n                    return new Variable(_this.session, _this, v.variablesReference, v.name, v.evaluateName, v.value, v.namedVariables, v.indexedVariables, v.presentationHint, v.type);\n                })\n                : [];\n        }, function (e) { return [new Variable(_this.session, _this, 0, e.message, e.message, '', 0, 0, { kind: 'virtual' }, undefined, false)]; });\n    };\n    Object.defineProperty(ExpressionContainer.prototype, \"getChildrenInChunks\", {\n        // The adapter explicitly sents the children count of an expression only if there are lots of children which should be chunked.\n        get: function () {\n            return !!this.indexedVariables;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExpressionContainer.prototype.toString = function () {\n        return this.value;\n    };\n    ExpressionContainer.allValues = new Map();\n    // Use chunks to support variable paging #9537\n    ExpressionContainer.BASE_CHUNK_SIZE = 100;\n    return ExpressionContainer;\n}());\nexports.ExpressionContainer = ExpressionContainer;\nvar Expression = /** @class */ (function (_super) {\n    tslib_1.__extends(Expression, _super);\n    function Expression(name, id) {\n        if (id === void 0) { id = uuid_1.generateUuid(); }\n        var _this = _super.call(this, undefined, 0, id) || this;\n        _this.name = name;\n        _this.available = false;\n        // name is not set if the expression is just being added\n        // in that case do not set default value to prevent flashing #14499\n        if (name) {\n            _this.value = Expression.DEFAULT_VALUE;\n        }\n        return _this;\n    }\n    Expression.prototype.evaluate = function (session, stackFrame, context) {\n        var _this = this;\n        if (!session || (!stackFrame && context !== 'repl')) {\n            this.value = context === 'repl' ? nls.localize('startDebugFirst', \"Please start a debug session to evaluate expressions\") : Expression.DEFAULT_VALUE;\n            this.available = false;\n            this.reference = 0;\n            return Promise.resolve(undefined);\n        }\n        this.session = session;\n        return session.evaluate(this.name, stackFrame ? stackFrame.frameId : undefined, context).then(function (response) {\n            _this.available = !!(response && response.body);\n            if (response && response.body) {\n                _this.value = response.body.result;\n                _this.reference = response.body.variablesReference;\n                _this.namedVariables = response.body.namedVariables;\n                _this.indexedVariables = response.body.indexedVariables;\n                _this.type = response.body.type || _this.type;\n            }\n        }, function (err) {\n            _this.value = err.message;\n            _this.available = false;\n            _this.reference = 0;\n        });\n    };\n    Expression.prototype.toString = function () {\n        return this.name + \"\\n\" + this.value;\n    };\n    Expression.DEFAULT_VALUE = nls.localize('notAvailable', \"not available\");\n    return Expression;\n}(ExpressionContainer));\nexports.Expression = Expression;\nvar Variable = /** @class */ (function (_super) {\n    tslib_1.__extends(Variable, _super);\n    function Variable(session, parent, reference, name, evaluateName, value, namedVariables, indexedVariables, presentationHint, type, available, startOfVariables) {\n        if (type === void 0) { type = undefined; }\n        if (available === void 0) { available = true; }\n        if (startOfVariables === void 0) { startOfVariables = 0; }\n        var _this = _super.call(this, session, reference, \"variable:\" + parent.getId() + \":\" + name, namedVariables, indexedVariables, startOfVariables) || this;\n        _this.parent = parent;\n        _this.name = name;\n        _this.evaluateName = evaluateName;\n        _this.presentationHint = presentationHint;\n        _this.type = type;\n        _this.available = available;\n        _this.value = value;\n        return _this;\n    }\n    Variable.prototype.setVariable = function (value) {\n        var _this = this;\n        if (!this.session) {\n            return Promise.resolve(undefined);\n        }\n        return this.session.setVariable(this.parent.reference, this.name, value).then(function (response) {\n            if (response && response.body) {\n                _this.value = response.body.value;\n                _this.type = response.body.type || _this.type;\n                _this.reference = response.body.variablesReference;\n                _this.namedVariables = response.body.namedVariables;\n                _this.indexedVariables = response.body.indexedVariables;\n            }\n        }, function (err) {\n            _this.errorMessage = err.message;\n        });\n    };\n    Variable.prototype.toString = function () {\n        return this.name + \": \" + this.value;\n    };\n    return Variable;\n}(ExpressionContainer));\nexports.Variable = Variable;\nvar Scope = /** @class */ (function (_super) {\n    tslib_1.__extends(Scope, _super);\n    function Scope(stackFrame, index, name, reference, expensive, namedVariables, indexedVariables, range) {\n        var _this = _super.call(this, stackFrame.thread.session, reference, \"scope:\" + stackFrame.getId() + \":\" + name + \":\" + index, namedVariables, indexedVariables) || this;\n        _this.name = name;\n        _this.expensive = expensive;\n        _this.range = range;\n        return _this;\n    }\n    Scope.prototype.toString = function () {\n        return this.name;\n    };\n    return Scope;\n}(ExpressionContainer));\nexports.Scope = Scope;\nvar StackFrame = /** @class */ (function () {\n    function StackFrame(thread, frameId, source, name, presentationHint, range, index) {\n        this.thread = thread;\n        this.frameId = frameId;\n        this.source = source;\n        this.name = name;\n        this.presentationHint = presentationHint;\n        this.range = range;\n        this.index = index;\n        this.scopes = null;\n    }\n    StackFrame.prototype.getId = function () {\n        return \"stackframe:\" + this.thread.getId() + \":\" + this.frameId + \":\" + this.index;\n    };\n    StackFrame.prototype.getScopes = function () {\n        var _this = this;\n        if (!this.scopes) {\n            this.scopes = this.thread.session.scopes(this.frameId).then(function (response) {\n                return response && response.body && response.body.scopes ?\n                    response.body.scopes.map(function (rs, index) { return new Scope(_this, index, rs.name, rs.variablesReference, rs.expensive, rs.namedVariables, rs.indexedVariables, rs.line && rs.column && rs.endLine && rs.endColumn ? new range_1.Range(rs.line, rs.column, rs.endLine, rs.endColumn) : undefined); }) : [];\n            }, function (err) { return []; });\n        }\n        return this.scopes;\n    };\n    StackFrame.prototype.getSpecificSourceName = function () {\n        var _this = this;\n        // To reduce flashing of the path name and the way we fetch stack frames\n        // We need to compute the source name based on the other frames in the stale call stack\n        var callStack = this.thread.getStaleCallStack();\n        callStack = callStack.length > 0 ? callStack : this.thread.getCallStack();\n        var otherSources = callStack.map(function (sf) { return sf.source; }).filter(function (s) { return s !== _this.source; });\n        var suffixLength = 0;\n        otherSources.forEach(function (s) {\n            if (s.name === _this.source.name) {\n                suffixLength = Math.max(suffixLength, strings_1.commonSuffixLength(_this.source.uri.path, s.uri.path));\n            }\n        });\n        if (suffixLength === 0) {\n            return this.source.name;\n        }\n        var from = Math.max(0, this.source.uri.path.lastIndexOf(path_1.posix.sep, this.source.uri.path.length - suffixLength - 1));\n        return (from > 0 ? '...' : '') + this.source.uri.path.substr(from);\n    };\n    StackFrame.prototype.getMostSpecificScopes = function (range) {\n        return this.getScopes().then(function (scopes) {\n            scopes = scopes.filter(function (s) { return !s.expensive; });\n            var haveRangeInfo = scopes.some(function (s) { return !!s.range; });\n            if (!haveRangeInfo) {\n                return scopes;\n            }\n            var scopesContainingRange = scopes.filter(function (scope) { return scope.range && range_1.Range.containsRange(scope.range, range); })\n                .sort(function (first, second) { return (first.range.endLineNumber - first.range.startLineNumber) - (second.range.endLineNumber - second.range.startLineNumber); });\n            return scopesContainingRange.length ? scopesContainingRange : scopes;\n        });\n    };\n    StackFrame.prototype.restart = function () {\n        return this.thread.session.restartFrame(this.frameId, this.thread.threadId);\n    };\n    StackFrame.prototype.toString = function () {\n        return this.name + \" (\" + (this.source.inMemory ? this.source.name : this.source.uri.fsPath) + \":\" + this.range.startLineNumber + \")\";\n    };\n    StackFrame.prototype.openInEditor = function (editorService, preserveFocus, sideBySide, pinned) {\n        return !this.source.available ? Promise.resolve(null) :\n            this.source.openInEditor(editorService, this.range, preserveFocus, sideBySide, pinned);\n    };\n    return StackFrame;\n}());\nexports.StackFrame = StackFrame;\nvar Thread = /** @class */ (function () {\n    function Thread(session, name, threadId) {\n        this.session = session;\n        this.name = name;\n        this.threadId = threadId;\n        this.callStack = [];\n        this.staleCallStack = [];\n        this.stopped = false;\n    }\n    Thread.prototype.getId = function () {\n        return \"thread:\" + this.session.getId() + \":\" + this.threadId;\n    };\n    Thread.prototype.clearCallStack = function () {\n        if (this.callStack.length) {\n            this.staleCallStack = this.callStack;\n        }\n        this.callStack = [];\n    };\n    Thread.prototype.getCallStack = function () {\n        return this.callStack;\n    };\n    Thread.prototype.getStaleCallStack = function () {\n        return this.staleCallStack;\n    };\n    Object.defineProperty(Thread.prototype, \"stateLabel\", {\n        get: function () {\n            if (this.stoppedDetails) {\n                return this.stoppedDetails.description ||\n                    this.stoppedDetails.reason ? nls.localize({ key: 'pausedOn', comment: ['indicates reason for program being paused'] }, \"Paused on {0}\", this.stoppedDetails.reason) : nls.localize('paused', \"Paused\");\n            }\n            return nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Queries the debug adapter for the callstack and returns a promise\n     * which completes once the call stack has been retrieved.\n     * If the thread is not stopped, it returns a promise to an empty array.\n     * Only fetches the first stack frame for performance reasons. Calling this method consecutive times\n     * gets the remainder of the call stack.\n     */\n    Thread.prototype.fetchCallStack = function (levels) {\n        var _this = this;\n        if (levels === void 0) { levels = 20; }\n        if (!this.stopped) {\n            return Promise.resolve(undefined);\n        }\n        var start = this.callStack.length;\n        return this.getCallStackImpl(start, levels).then(function (callStack) {\n            if (start < _this.callStack.length) {\n                // Set the stack frames for exact position we requested. To make sure no concurrent requests create duplicate stack frames #30660\n                _this.callStack.splice(start, _this.callStack.length - start);\n            }\n            _this.callStack = _this.callStack.concat(callStack || []);\n        });\n    };\n    Thread.prototype.getCallStackImpl = function (startFrame, levels) {\n        var _this = this;\n        return this.session.stackTrace(this.threadId, startFrame, levels).then(function (response) {\n            if (!response || !response.body) {\n                return [];\n            }\n            if (_this.stoppedDetails) {\n                _this.stoppedDetails.totalFrames = response.body.totalFrames;\n            }\n            return response.body.stackFrames.map(function (rsf, index) {\n                var source = _this.session.getSource(rsf.source);\n                return new StackFrame(_this, rsf.id, source, rsf.name, rsf.presentationHint, new range_1.Range(rsf.line, rsf.column, rsf.endLine || rsf.line, rsf.endColumn || rsf.column), startFrame + index);\n            });\n        }, function (err) {\n            if (_this.stoppedDetails) {\n                _this.stoppedDetails.framesErrorMessage = err.message;\n            }\n            return [];\n        });\n    };\n    Object.defineProperty(Thread.prototype, \"exceptionInfo\", {\n        /**\n         * Returns exception info promise if the exception was thrown, otherwise undefined\n         */\n        get: function () {\n            if (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n                if (this.session.capabilities.supportsExceptionInfoRequest) {\n                    return this.session.exceptionInfo(this.threadId);\n                }\n                return Promise.resolve({\n                    description: this.stoppedDetails.text,\n                    breakMode: null\n                });\n            }\n            return Promise.resolve(undefined);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Thread.prototype.next = function () {\n        return this.session.next(this.threadId);\n    };\n    Thread.prototype.stepIn = function () {\n        return this.session.stepIn(this.threadId);\n    };\n    Thread.prototype.stepOut = function () {\n        return this.session.stepOut(this.threadId);\n    };\n    Thread.prototype.stepBack = function () {\n        return this.session.stepBack(this.threadId);\n    };\n    Thread.prototype.continue = function () {\n        return this.session.continue(this.threadId);\n    };\n    Thread.prototype.pause = function () {\n        return this.session.pause(this.threadId);\n    };\n    Thread.prototype.terminate = function () {\n        return this.session.terminateThreads([this.threadId]);\n    };\n    Thread.prototype.reverseContinue = function () {\n        return this.session.reverseContinue(this.threadId);\n    };\n    return Thread;\n}());\nexports.Thread = Thread;\nvar Enablement = /** @class */ (function () {\n    function Enablement(enabled, id) {\n        this.enabled = enabled;\n        this.id = id;\n    }\n    Enablement.prototype.getId = function () {\n        return this.id;\n    };\n    return Enablement;\n}());\nexports.Enablement = Enablement;\nvar BaseBreakpoint = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseBreakpoint, _super);\n    function BaseBreakpoint(enabled, hitCondition, condition, logMessage, id) {\n        var _this = _super.call(this, enabled, id) || this;\n        _this.hitCondition = hitCondition;\n        _this.condition = condition;\n        _this.logMessage = logMessage;\n        _this.sessionData = new Map();\n        if (enabled === undefined) {\n            _this.enabled = true;\n        }\n        return _this;\n    }\n    BaseBreakpoint.prototype.getSessionData = function () {\n        return this.sessionId ? this.sessionData.get(this.sessionId) : undefined;\n    };\n    BaseBreakpoint.prototype.setSessionData = function (sessionId, data) {\n        this.sessionData.set(sessionId, data);\n    };\n    BaseBreakpoint.prototype.setSessionId = function (sessionId) {\n        this.sessionId = sessionId;\n    };\n    Object.defineProperty(BaseBreakpoint.prototype, \"verified\", {\n        get: function () {\n            var data = this.getSessionData();\n            return data ? data.verified : true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseBreakpoint.prototype, \"idFromAdapter\", {\n        get: function () {\n            var data = this.getSessionData();\n            return data ? data.id : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseBreakpoint.prototype.toJSON = function () {\n        var result = Object.create(null);\n        result.enabled = this.enabled;\n        result.condition = this.condition;\n        result.hitCondition = this.hitCondition;\n        result.logMessage = this.logMessage;\n        return result;\n    };\n    return BaseBreakpoint;\n}(Enablement));\nexports.BaseBreakpoint = BaseBreakpoint;\nvar Breakpoint = /** @class */ (function (_super) {\n    tslib_1.__extends(Breakpoint, _super);\n    function Breakpoint(uri, _lineNumber, _column, enabled, condition, hitCondition, logMessage, _adapterData, textFileService, id) {\n        if (id === void 0) { id = uuid_1.generateUuid(); }\n        var _this = _super.call(this, enabled, hitCondition, condition, logMessage, id) || this;\n        _this.uri = uri;\n        _this._lineNumber = _lineNumber;\n        _this._column = _column;\n        _this._adapterData = _adapterData;\n        _this.textFileService = textFileService;\n        return _this;\n    }\n    Object.defineProperty(Breakpoint.prototype, \"lineNumber\", {\n        get: function () {\n            var data = this.getSessionData();\n            return this.verified && data && typeof data.line === 'number' ? data.line : this._lineNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"verified\", {\n        get: function () {\n            var data = this.getSessionData();\n            if (data) {\n                return data.verified && !this.textFileService.isDirty(this.uri);\n            }\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"column\", {\n        get: function () {\n            var data = this.getSessionData();\n            // Only respect the column if the user explictly set the column to have an inline breakpoint\n            return data && typeof data.column === 'number' && typeof this._column === 'number' ? data.column : this._column;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"message\", {\n        get: function () {\n            var data = this.getSessionData();\n            if (!data) {\n                return undefined;\n            }\n            if (this.textFileService.isDirty(this.uri)) {\n                return nls.localize('breakpointDirtydHover', \"Unverified breakpoint. File is modified, please restart debug session.\");\n            }\n            return data.message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"adapterData\", {\n        get: function () {\n            var data = this.getSessionData();\n            return data && data.source && data.source.adapterData ? data.source.adapterData : this._adapterData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"endLineNumber\", {\n        get: function () {\n            var data = this.getSessionData();\n            return data ? data.endLine : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Breakpoint.prototype, \"endColumn\", {\n        get: function () {\n            var data = this.getSessionData();\n            return data ? data.endColumn : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Breakpoint.prototype.setSessionData = function (sessionId, data) {\n        _super.prototype.setSessionData.call(this, sessionId, data);\n        if (!this._adapterData) {\n            this._adapterData = this.adapterData;\n        }\n    };\n    Breakpoint.prototype.toJSON = function () {\n        var result = _super.prototype.toJSON.call(this);\n        result.uri = this.uri;\n        result.lineNumber = this._lineNumber;\n        result.column = this._column;\n        result.adapterData = this.adapterData;\n        return result;\n    };\n    Breakpoint.prototype.toString = function () {\n        return resources.basenameOrAuthority(this.uri);\n    };\n    Breakpoint.prototype.update = function (data) {\n        if (!types_1.isUndefinedOrNull(data.lineNumber)) {\n            this._lineNumber = data.lineNumber;\n        }\n        if (!types_1.isUndefinedOrNull(data.column)) {\n            this._column = data.column;\n        }\n        if (!types_1.isUndefinedOrNull(data.condition)) {\n            this.condition = data.condition;\n        }\n        if (!types_1.isUndefinedOrNull(data.hitCondition)) {\n            this.hitCondition = data.hitCondition;\n        }\n        if (!types_1.isUndefinedOrNull(data.logMessage)) {\n            this.logMessage = data.logMessage;\n        }\n    };\n    return Breakpoint;\n}(BaseBreakpoint));\nexports.Breakpoint = Breakpoint;\nvar FunctionBreakpoint = /** @class */ (function (_super) {\n    tslib_1.__extends(FunctionBreakpoint, _super);\n    function FunctionBreakpoint(name, enabled, hitCondition, condition, logMessage, id) {\n        if (id === void 0) { id = uuid_1.generateUuid(); }\n        var _this = _super.call(this, enabled, hitCondition, condition, logMessage, id) || this;\n        _this.name = name;\n        return _this;\n    }\n    FunctionBreakpoint.prototype.toJSON = function () {\n        var result = _super.prototype.toJSON.call(this);\n        result.name = this.name;\n        return result;\n    };\n    FunctionBreakpoint.prototype.toString = function () {\n        return this.name;\n    };\n    return FunctionBreakpoint;\n}(BaseBreakpoint));\nexports.FunctionBreakpoint = FunctionBreakpoint;\nvar ExceptionBreakpoint = /** @class */ (function (_super) {\n    tslib_1.__extends(ExceptionBreakpoint, _super);\n    function ExceptionBreakpoint(filter, label, enabled) {\n        var _this = _super.call(this, enabled, uuid_1.generateUuid()) || this;\n        _this.filter = filter;\n        _this.label = label;\n        return _this;\n    }\n    ExceptionBreakpoint.prototype.toJSON = function () {\n        var result = Object.create(null);\n        result.filter = this.filter;\n        result.label = this.label;\n        result.enabled = this.enabled;\n        return result;\n    };\n    ExceptionBreakpoint.prototype.toString = function () {\n        return this.label;\n    };\n    return ExceptionBreakpoint;\n}(Enablement));\nexports.ExceptionBreakpoint = ExceptionBreakpoint;\nvar ThreadAndSessionIds = /** @class */ (function () {\n    function ThreadAndSessionIds(sessionId, threadId) {\n        this.sessionId = sessionId;\n        this.threadId = threadId;\n    }\n    ThreadAndSessionIds.prototype.getId = function () {\n        return this.sessionId + \":\" + this.threadId;\n    };\n    return ThreadAndSessionIds;\n}());\nexports.ThreadAndSessionIds = ThreadAndSessionIds;\nvar DebugModel = /** @class */ (function () {\n    function DebugModel(breakpoints, breakpointsActivated, functionBreakpoints, exceptionBreakpoints, watchExpressions, textFileService) {\n        this.breakpoints = breakpoints;\n        this.breakpointsActivated = breakpointsActivated;\n        this.functionBreakpoints = functionBreakpoints;\n        this.exceptionBreakpoints = exceptionBreakpoints;\n        this.watchExpressions = watchExpressions;\n        this.textFileService = textFileService;\n        this.schedulers = new Map();\n        this.sessions = [];\n        this.toDispose = [];\n        this._onDidChangeBreakpoints = new event_1.Emitter();\n        this._onDidChangeCallStack = new event_1.Emitter();\n        this._onDidChangeWatchExpressions = new event_1.Emitter();\n    }\n    DebugModel.prototype.getId = function () {\n        return 'root';\n    };\n    DebugModel.prototype.getSession = function (sessionId, includeInactive) {\n        if (includeInactive === void 0) { includeInactive = false; }\n        if (sessionId) {\n            return this.getSessions(includeInactive).filter(function (s) { return s.getId() === sessionId; }).pop();\n        }\n        return undefined;\n    };\n    DebugModel.prototype.getSessions = function (includeInactive) {\n        if (includeInactive === void 0) { includeInactive = false; }\n        // By default do not return inactive sesions.\n        // However we are still holding onto inactive sessions due to repl and debug service session revival (eh scenario)\n        return this.sessions.filter(function (s) { return includeInactive || s.state !== debug_1.State.Inactive; });\n    };\n    DebugModel.prototype.addSession = function (session) {\n        this.sessions = this.sessions.filter(function (s) {\n            if (s.getId() === session.getId()) {\n                // Make sure to de-dupe if a session is re-intialized. In case of EH debugging we are adding a session again after an attach.\n                return false;\n            }\n            if (s.state === debug_1.State.Inactive && s.getLabel() === session.getLabel()) {\n                // Make sure to remove all inactive sessions that are using the same configuration as the new session\n                return false;\n            }\n            return true;\n        });\n        var index = -1;\n        if (session.parentSession) {\n            // Make sure that child sessions are placed after the parent session\n            index = arrays_1.lastIndex(this.sessions, function (s) { return s.parentSession === session.parentSession || s === session.parentSession; });\n        }\n        if (index >= 0) {\n            this.sessions.splice(index + 1, 0, session);\n        }\n        else {\n            this.sessions.push(session);\n        }\n        this._onDidChangeCallStack.fire(undefined);\n    };\n    Object.defineProperty(DebugModel.prototype, \"onDidChangeBreakpoints\", {\n        get: function () {\n            return this._onDidChangeBreakpoints.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugModel.prototype, \"onDidChangeCallStack\", {\n        get: function () {\n            return this._onDidChangeCallStack.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugModel.prototype, \"onDidChangeWatchExpressions\", {\n        get: function () {\n            return this._onDidChangeWatchExpressions.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugModel.prototype.rawUpdate = function (data) {\n        var session = this.sessions.filter(function (p) { return p.getId() === data.sessionId; }).pop();\n        if (session) {\n            session.rawUpdate(data);\n            this._onDidChangeCallStack.fire(undefined);\n        }\n    };\n    DebugModel.prototype.clearThreads = function (id, removeThreads, reference) {\n        if (reference === void 0) { reference = undefined; }\n        var session = this.sessions.filter(function (p) { return p.getId() === id; }).pop();\n        this.schedulers.forEach(function (scheduler) { return scheduler.dispose(); });\n        this.schedulers.clear();\n        if (session) {\n            session.clearThreads(removeThreads, reference);\n            this._onDidChangeCallStack.fire(undefined);\n        }\n    };\n    DebugModel.prototype.fetchCallStack = function (thread) {\n        var _this = this;\n        if (thread.session.capabilities.supportsDelayedStackTraceLoading) {\n            // For improved performance load the first stack frame and then load the rest async.\n            var topCallStack_1 = Promise.resolve();\n            var wholeCallStack_1 = new Promise(function (c, e) {\n                topCallStack_1 = thread.fetchCallStack(1).then(function () {\n                    if (!_this.schedulers.has(thread.getId())) {\n                        _this.schedulers.set(thread.getId(), new async_1.RunOnceScheduler(function () {\n                            thread.fetchCallStack(19).then(function () {\n                                _this._onDidChangeCallStack.fire();\n                                c();\n                            });\n                        }, 420));\n                    }\n                    _this.schedulers.get(thread.getId()).schedule();\n                });\n                _this._onDidChangeCallStack.fire();\n            });\n            return { topCallStack: topCallStack_1, wholeCallStack: wholeCallStack_1 };\n        }\n        var wholeCallStack = thread.fetchCallStack();\n        return { wholeCallStack: wholeCallStack, topCallStack: wholeCallStack };\n    };\n    DebugModel.prototype.getBreakpoints = function (filter) {\n        var _this = this;\n        if (filter) {\n            var uriStr_1 = filter.uri ? filter.uri.toString() : undefined;\n            return this.breakpoints.filter(function (bp) {\n                if (uriStr_1 && bp.uri.toString() !== uriStr_1) {\n                    return false;\n                }\n                if (filter.lineNumber && bp.lineNumber !== filter.lineNumber) {\n                    return false;\n                }\n                if (filter.column && bp.column !== filter.column) {\n                    return false;\n                }\n                if (filter.enabledOnly && (!_this.breakpointsActivated || !bp.enabled)) {\n                    return false;\n                }\n                return true;\n            });\n        }\n        return this.breakpoints;\n    };\n    DebugModel.prototype.getFunctionBreakpoints = function () {\n        return this.functionBreakpoints;\n    };\n    DebugModel.prototype.getExceptionBreakpoints = function () {\n        return this.exceptionBreakpoints;\n    };\n    DebugModel.prototype.setExceptionBreakpoints = function (data) {\n        var _this = this;\n        if (data) {\n            if (this.exceptionBreakpoints.length === data.length && this.exceptionBreakpoints.every(function (exbp, i) { return exbp.filter === data[i].filter && exbp.label === data[i].label; })) {\n                // No change\n                return;\n            }\n            this.exceptionBreakpoints = data.map(function (d) {\n                var ebp = _this.exceptionBreakpoints.filter(function (ebp) { return ebp.filter === d.filter; }).pop();\n                return new ExceptionBreakpoint(d.filter, d.label, ebp ? ebp.enabled : !!d.default);\n            });\n            this._onDidChangeBreakpoints.fire(undefined);\n        }\n    };\n    DebugModel.prototype.areBreakpointsActivated = function () {\n        return this.breakpointsActivated;\n    };\n    DebugModel.prototype.setBreakpointsActivated = function (activated) {\n        this.breakpointsActivated = activated;\n        this._onDidChangeBreakpoints.fire(undefined);\n    };\n    DebugModel.prototype.addBreakpoints = function (uri, rawData, fireEvent) {\n        var _this = this;\n        if (fireEvent === void 0) { fireEvent = true; }\n        var newBreakpoints = rawData.map(function (rawBp) { return new Breakpoint(uri, rawBp.lineNumber, rawBp.column, rawBp.enabled === false ? false : true, rawBp.condition, rawBp.hitCondition, rawBp.logMessage, undefined, _this.textFileService, rawBp.id); });\n        newBreakpoints.forEach(function (bp) { return bp.setSessionId(_this.breakpointsSessionId); });\n        this.breakpoints = this.breakpoints.concat(newBreakpoints);\n        this.breakpointsActivated = true;\n        this.sortAndDeDup();\n        if (fireEvent) {\n            this._onDidChangeBreakpoints.fire({ added: newBreakpoints });\n        }\n        return newBreakpoints;\n    };\n    DebugModel.prototype.removeBreakpoints = function (toRemove) {\n        this.breakpoints = this.breakpoints.filter(function (bp) { return !toRemove.some(function (toRemove) { return toRemove.getId() === bp.getId(); }); });\n        this._onDidChangeBreakpoints.fire({ removed: toRemove });\n    };\n    DebugModel.prototype.updateBreakpoints = function (data) {\n        var updated = [];\n        this.breakpoints.forEach(function (bp) {\n            var bpData = data[bp.getId()];\n            if (bpData) {\n                bp.update(bpData);\n                updated.push(bp);\n            }\n        });\n        this.sortAndDeDup();\n        this._onDidChangeBreakpoints.fire({ changed: updated });\n    };\n    DebugModel.prototype.setBreakpointSessionData = function (sessionId, data) {\n        this.breakpoints.forEach(function (bp) {\n            var bpData = data[bp.getId()];\n            if (bpData) {\n                bp.setSessionData(sessionId, bpData);\n            }\n        });\n        this.functionBreakpoints.forEach(function (fbp) {\n            var fbpData = data[fbp.getId()];\n            if (fbpData) {\n                fbp.setSessionData(sessionId, fbpData);\n            }\n        });\n        this._onDidChangeBreakpoints.fire({\n            sessionOnly: true\n        });\n    };\n    DebugModel.prototype.setBreakpointsSessionId = function (sessionId) {\n        this.breakpointsSessionId = sessionId;\n        this.breakpoints.forEach(function (bp) { return bp.setSessionId(sessionId); });\n        this.functionBreakpoints.forEach(function (fbp) { return fbp.setSessionId(sessionId); });\n        this._onDidChangeBreakpoints.fire({\n            sessionOnly: true\n        });\n    };\n    DebugModel.prototype.sortAndDeDup = function () {\n        this.breakpoints = this.breakpoints.sort(function (first, second) {\n            if (first.uri.toString() !== second.uri.toString()) {\n                return resources.basenameOrAuthority(first.uri).localeCompare(resources.basenameOrAuthority(second.uri));\n            }\n            if (first.lineNumber === second.lineNumber) {\n                if (first.column && second.column) {\n                    return first.column - second.column;\n                }\n                return -1;\n            }\n            return first.lineNumber - second.lineNumber;\n        });\n        this.breakpoints = arrays_1.distinct(this.breakpoints, function (bp) { return bp.uri.toString() + \":\" + bp.lineNumber + \":\" + bp.column; });\n    };\n    DebugModel.prototype.setEnablement = function (element, enable) {\n        if (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof ExceptionBreakpoint) {\n            var changed = [];\n            if (element.enabled !== enable && (element instanceof Breakpoint || element instanceof FunctionBreakpoint)) {\n                changed.push(element);\n            }\n            element.enabled = enable;\n            this._onDidChangeBreakpoints.fire({ changed: changed });\n        }\n    };\n    DebugModel.prototype.enableOrDisableAllBreakpoints = function (enable) {\n        var changed = [];\n        this.breakpoints.forEach(function (bp) {\n            if (bp.enabled !== enable) {\n                changed.push(bp);\n            }\n            bp.enabled = enable;\n        });\n        this.functionBreakpoints.forEach(function (fbp) {\n            if (fbp.enabled !== enable) {\n                changed.push(fbp);\n            }\n            fbp.enabled = enable;\n        });\n        this._onDidChangeBreakpoints.fire({ changed: changed });\n    };\n    DebugModel.prototype.addFunctionBreakpoint = function (functionName, id) {\n        var newFunctionBreakpoint = new FunctionBreakpoint(functionName, true, undefined, undefined, undefined, id);\n        this.functionBreakpoints.push(newFunctionBreakpoint);\n        this._onDidChangeBreakpoints.fire({ added: [newFunctionBreakpoint] });\n        return newFunctionBreakpoint;\n    };\n    DebugModel.prototype.renameFunctionBreakpoint = function (id, name) {\n        var functionBreakpoint = this.functionBreakpoints.filter(function (fbp) { return fbp.getId() === id; }).pop();\n        if (functionBreakpoint) {\n            functionBreakpoint.name = name;\n            this._onDidChangeBreakpoints.fire({ changed: [functionBreakpoint] });\n        }\n    };\n    DebugModel.prototype.removeFunctionBreakpoints = function (id) {\n        var removed;\n        if (id) {\n            removed = this.functionBreakpoints.filter(function (fbp) { return fbp.getId() === id; });\n            this.functionBreakpoints = this.functionBreakpoints.filter(function (fbp) { return fbp.getId() !== id; });\n        }\n        else {\n            removed = this.functionBreakpoints;\n            this.functionBreakpoints = [];\n        }\n        this._onDidChangeBreakpoints.fire({ removed: removed });\n    };\n    DebugModel.prototype.getWatchExpressions = function () {\n        return this.watchExpressions;\n    };\n    DebugModel.prototype.addWatchExpression = function (name) {\n        var we = new Expression(name);\n        this.watchExpressions.push(we);\n        this._onDidChangeWatchExpressions.fire(we);\n        return we;\n    };\n    DebugModel.prototype.renameWatchExpression = function (id, newName) {\n        var filtered = this.watchExpressions.filter(function (we) { return we.getId() === id; });\n        if (filtered.length === 1) {\n            filtered[0].name = newName;\n            this._onDidChangeWatchExpressions.fire(filtered[0]);\n        }\n    };\n    DebugModel.prototype.removeWatchExpressions = function (id) {\n        if (id === void 0) { id = null; }\n        this.watchExpressions = id ? this.watchExpressions.filter(function (we) { return we.getId() !== id; }) : [];\n        this._onDidChangeWatchExpressions.fire(undefined);\n    };\n    DebugModel.prototype.moveWatchExpression = function (id, position) {\n        var we = this.watchExpressions.filter(function (we) { return we.getId() === id; }).pop();\n        if (we) {\n            this.watchExpressions = this.watchExpressions.filter(function (we) { return we.getId() !== id; });\n            this.watchExpressions = this.watchExpressions.slice(0, position).concat(we, this.watchExpressions.slice(position));\n            this._onDidChangeWatchExpressions.fire(undefined);\n        }\n    };\n    DebugModel.prototype.sourceIsNotAvailable = function (uri) {\n        this.sessions.forEach(function (s) {\n            var source = s.getSourceForUri(uri);\n            if (source) {\n                source.available = false;\n            }\n        });\n        this._onDidChangeCallStack.fire(undefined);\n    };\n    DebugModel.prototype.dispose = function () {\n        // Make sure to shutdown each session, such that no debugged process is left laying around\n        this.sessions.forEach(function (s) { return s.shutdown(); });\n        this.toDispose = lifecycle.dispose(this.toDispose);\n    };\n    return DebugModel;\n}());\nexports.DebugModel = DebugModel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/common/debugModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/common/debugModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport * as lifecycle from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport severity from 'vs/base/common/severity';\nimport { isObject, isString, isUndefinedOrNull } from 'vs/base/common/types';\nimport { distinct, lastIndex } from 'vs/base/common/arrays';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport {\n\tITreeElement, IExpression, IExpressionContainer, IDebugSession, IStackFrame, IExceptionBreakpoint, IBreakpoint, IFunctionBreakpoint, IDebugModel, IReplElementSource,\n\tIThread, IRawModelUpdate, IScope, IRawStoppedDetails, IEnablement, IBreakpointData, IExceptionInfo, IReplElement, IBreakpointsChangeEvent, IBreakpointUpdateData, IBaseBreakpoint, State\n} from 'vs/workbench/contrib/debug/common/debug';\nimport { Source } from 'vs/workbench/contrib/debug/common/debugSource';\nimport { commonSuffixLength } from 'vs/base/common/strings';\nimport { posix } from 'vs/base/common/path';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\n\nexport class SimpleReplElement implements IReplElement {\n\tconstructor(\n\t\tprivate id: string,\n\t\tpublic value: string,\n\t\tpublic severity: severity,\n\t\tpublic sourceData?: IReplElementSource,\n\t) { }\n\n\ttoString(): string {\n\t\treturn this.value;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n\nexport class RawObjectReplElement implements IExpression {\n\n\tprivate static readonly MAX_CHILDREN = 1000; // upper bound of children per value\n\n\tconstructor(private id: string, public name: string, public valueObj: any, public sourceData?: IReplElementSource, public annotation?: string) { }\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tget value(): string {\n\t\tif (this.valueObj === null) {\n\t\t\treturn 'null';\n\t\t} else if (Array.isArray(this.valueObj)) {\n\t\t\treturn `Array[${this.valueObj.length}]`;\n\t\t} else if (isObject(this.valueObj)) {\n\t\t\treturn 'Object';\n\t\t} else if (isString(this.valueObj)) {\n\t\t\treturn `\"${this.valueObj}\"`;\n\t\t}\n\n\t\treturn String(this.valueObj) || '';\n\t}\n\n\tget hasChildren(): boolean {\n\t\treturn (Array.isArray(this.valueObj) && this.valueObj.length > 0) || (isObject(this.valueObj) && Object.getOwnPropertyNames(this.valueObj).length > 0);\n\t}\n\n\tgetChildren(): Promise<IExpression[]> {\n\t\tlet result: IExpression[] = [];\n\t\tif (Array.isArray(this.valueObj)) {\n\t\t\tresult = (<any[]>this.valueObj).slice(0, RawObjectReplElement.MAX_CHILDREN)\n\t\t\t\t.map((v, index) => new RawObjectReplElement(`${this.id}:${index}`, String(index), v));\n\t\t} else if (isObject(this.valueObj)) {\n\t\t\tresult = Object.getOwnPropertyNames(this.valueObj).slice(0, RawObjectReplElement.MAX_CHILDREN)\n\t\t\t\t.map((key, index) => new RawObjectReplElement(`${this.id}:${index}`, key, this.valueObj[key]));\n\t\t}\n\n\t\treturn Promise.resolve(result);\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.name}\\n${this.value}`;\n\t}\n}\n\nexport class ExpressionContainer implements IExpressionContainer {\n\n\tpublic static allValues: Map<string, string> = new Map<string, string>();\n\t// Use chunks to support variable paging #9537\n\tprivate static readonly BASE_CHUNK_SIZE = 100;\n\n\tpublic valueChanged: boolean;\n\tprivate _value: string;\n\tprotected children?: Promise<IExpression[]>;\n\n\tconstructor(\n\t\tprotected session: IDebugSession | undefined,\n\t\tprivate _reference: number | undefined,\n\t\tprivate id: string,\n\t\tpublic namedVariables: number | undefined = 0,\n\t\tpublic indexedVariables: number | undefined = 0,\n\t\tprivate startOfVariables: number | undefined = 0\n\t) { }\n\n\tget reference(): number | undefined {\n\t\treturn this._reference;\n\t}\n\n\tset reference(value: number | undefined) {\n\t\tthis._reference = value;\n\t\tthis.children = undefined; // invalidate children cache\n\t}\n\n\tgetChildren(): Promise<IExpression[]> {\n\t\tif (!this.children) {\n\t\t\tthis.children = this.doGetChildren();\n\t\t}\n\n\t\treturn this.children;\n\t}\n\n\tprivate doGetChildren(): Promise<IExpression[]> {\n\t\tif (!this.hasChildren) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tif (!this.getChildrenInChunks) {\n\t\t\treturn this.fetchVariables(undefined, undefined, undefined);\n\t\t}\n\n\t\t// Check if object has named variables, fetch them independent from indexed variables #9670\n\t\tconst childrenThenable = !!this.namedVariables ? this.fetchVariables(undefined, undefined, 'named') : Promise.resolve([]);\n\t\treturn childrenThenable.then(childrenArray => {\n\t\t\t// Use a dynamic chunk size based on the number of elements #9774\n\t\t\tlet chunkSize = ExpressionContainer.BASE_CHUNK_SIZE;\n\t\t\twhile (!!this.indexedVariables && this.indexedVariables > chunkSize * ExpressionContainer.BASE_CHUNK_SIZE) {\n\t\t\t\tchunkSize *= ExpressionContainer.BASE_CHUNK_SIZE;\n\t\t\t}\n\n\t\t\tif (!!this.indexedVariables && this.indexedVariables > chunkSize) {\n\t\t\t\t// There are a lot of children, create fake intermediate values that represent chunks #9537\n\t\t\t\tconst numberOfChunks = Math.ceil(this.indexedVariables / chunkSize);\n\t\t\t\tfor (let i = 0; i < numberOfChunks; i++) {\n\t\t\t\t\tconst start = (this.startOfVariables || 0) + i * chunkSize;\n\t\t\t\t\tconst count = Math.min(chunkSize, this.indexedVariables - i * chunkSize);\n\t\t\t\t\tchildrenArray.push(new Variable(this.session, this, this.reference, `[${start}..${start + count - 1}]`, '', '', undefined, count, { kind: 'virtual' }, undefined, true, start));\n\t\t\t\t}\n\n\t\t\t\treturn childrenArray;\n\t\t\t}\n\n\t\t\treturn this.fetchVariables(this.startOfVariables, this.indexedVariables, 'indexed')\n\t\t\t\t.then(variables => childrenArray.concat(variables));\n\t\t});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tget hasChildren(): boolean {\n\t\t// only variables with reference > 0 have children.\n\t\treturn !!this.reference && this.reference > 0;\n\t}\n\n\tprivate fetchVariables(start: number | undefined, count: number | undefined, filter: 'indexed' | 'named' | undefined): Promise<Variable[]> {\n\t\treturn this.session!.variables(this.reference || 0, filter, start, count).then(response => {\n\t\t\treturn response && response.body && response.body.variables\n\t\t\t\t? distinct(response.body.variables.filter(v => !!v && isString(v.name)), (v: DebugProtocol.Variable) => v.name).map((v: DebugProtocol.Variable) =>\n\t\t\t\t\tnew Variable(this.session, this, v.variablesReference, v.name, v.evaluateName, v.value, v.namedVariables, v.indexedVariables, v.presentationHint, v.type))\n\t\t\t\t: [];\n\t\t}, (e: Error) => [new Variable(this.session, this, 0, e.message, e.message, '', 0, 0, { kind: 'virtual' }, undefined, false)]);\n\t}\n\n\t// The adapter explicitly sents the children count of an expression only if there are lots of children which should be chunked.\n\tprivate get getChildrenInChunks(): boolean {\n\t\treturn !!this.indexedVariables;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value;\n\t\tthis.valueChanged = !!ExpressionContainer.allValues.get(this.getId()) &&\n\t\t\tExpressionContainer.allValues.get(this.getId()) !== Expression.DEFAULT_VALUE && ExpressionContainer.allValues.get(this.getId()) !== value;\n\t\tExpressionContainer.allValues.set(this.getId(), value);\n\t}\n\n\ttoString(): string {\n\t\treturn this.value;\n\t}\n}\n\nexport class Expression extends ExpressionContainer implements IExpression {\n\tstatic DEFAULT_VALUE = nls.localize('notAvailable', \"not available\");\n\n\tpublic available: boolean;\n\tpublic type: string;\n\n\tconstructor(public name: string, id = generateUuid()) {\n\t\tsuper(undefined, 0, id);\n\t\tthis.available = false;\n\t\t// name is not set if the expression is just being added\n\t\t// in that case do not set default value to prevent flashing #14499\n\t\tif (name) {\n\t\t\tthis.value = Expression.DEFAULT_VALUE;\n\t\t}\n\t}\n\n\tevaluate(session: IDebugSession | undefined, stackFrame: IStackFrame | undefined, context: string): Promise<void> {\n\t\tif (!session || (!stackFrame && context !== 'repl')) {\n\t\t\tthis.value = context === 'repl' ? nls.localize('startDebugFirst', \"Please start a debug session to evaluate expressions\") : Expression.DEFAULT_VALUE;\n\t\t\tthis.available = false;\n\t\t\tthis.reference = 0;\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.session = session;\n\t\treturn session.evaluate(this.name, stackFrame ? stackFrame.frameId : undefined, context).then(response => {\n\t\t\tthis.available = !!(response && response.body);\n\t\t\tif (response && response.body) {\n\t\t\t\tthis.value = response.body.result;\n\t\t\t\tthis.reference = response.body.variablesReference;\n\t\t\t\tthis.namedVariables = response.body.namedVariables;\n\t\t\t\tthis.indexedVariables = response.body.indexedVariables;\n\t\t\t\tthis.type = response.body.type || this.type;\n\t\t\t}\n\t\t}, err => {\n\t\t\tthis.value = err.message;\n\t\t\tthis.available = false;\n\t\t\tthis.reference = 0;\n\t\t});\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.name}\\n${this.value}`;\n\t}\n}\n\nexport class Variable extends ExpressionContainer implements IExpression {\n\n\t// Used to show the error message coming from the adapter when setting the value #7807\n\tpublic errorMessage: string | undefined;\n\n\tconstructor(\n\t\tsession: IDebugSession | undefined,\n\t\tpublic parent: IExpressionContainer,\n\t\treference: number | undefined,\n\t\tpublic name: string,\n\t\tpublic evaluateName: string | undefined,\n\t\tvalue: string,\n\t\tnamedVariables: number | undefined,\n\t\tindexedVariables: number | undefined,\n\t\tpublic presentationHint: DebugProtocol.VariablePresentationHint | undefined,\n\t\tpublic type: string | undefined = undefined,\n\t\tpublic available = true,\n\t\tstartOfVariables = 0\n\t) {\n\t\tsuper(session, reference, `variable:${parent.getId()}:${name}`, namedVariables, indexedVariables, startOfVariables);\n\t\tthis.value = value;\n\t}\n\n\tsetVariable(value: string): Promise<any> {\n\t\tif (!this.session) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.session.setVariable((<ExpressionContainer>this.parent).reference, this.name, value).then(response => {\n\t\t\tif (response && response.body) {\n\t\t\t\tthis.value = response.body.value;\n\t\t\t\tthis.type = response.body.type || this.type;\n\t\t\t\tthis.reference = response.body.variablesReference;\n\t\t\t\tthis.namedVariables = response.body.namedVariables;\n\t\t\t\tthis.indexedVariables = response.body.indexedVariables;\n\t\t\t}\n\t\t}, err => {\n\t\t\tthis.errorMessage = err.message;\n\t\t});\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.name}: ${this.value}`;\n\t}\n}\n\nexport class Scope extends ExpressionContainer implements IScope {\n\n\tconstructor(\n\t\tstackFrame: IStackFrame,\n\t\tindex: number,\n\t\tpublic name: string,\n\t\treference: number,\n\t\tpublic expensive: boolean,\n\t\tnamedVariables?: number,\n\t\tindexedVariables?: number,\n\t\tpublic range?: IRange\n\t) {\n\t\tsuper(stackFrame.thread.session, reference, `scope:${stackFrame.getId()}:${name}:${index}`, namedVariables, indexedVariables);\n\t}\n\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n\nexport class StackFrame implements IStackFrame {\n\n\tprivate scopes: Promise<Scope[]> | null;\n\n\tconstructor(\n\t\tpublic thread: IThread,\n\t\tpublic frameId: number,\n\t\tpublic source: Source,\n\t\tpublic name: string,\n\t\tpublic presentationHint: string | undefined,\n\t\tpublic range: IRange,\n\t\tprivate index: number\n\t) {\n\t\tthis.scopes = null;\n\t}\n\n\tgetId(): string {\n\t\treturn `stackframe:${this.thread.getId()}:${this.frameId}:${this.index}`;\n\t}\n\n\tgetScopes(): Promise<IScope[]> {\n\t\tif (!this.scopes) {\n\t\t\tthis.scopes = this.thread.session.scopes(this.frameId).then(response => {\n\t\t\t\treturn response && response.body && response.body.scopes ?\n\t\t\t\t\tresponse.body.scopes.map((rs, index) => new Scope(this, index, rs.name, rs.variablesReference, rs.expensive, rs.namedVariables, rs.indexedVariables,\n\t\t\t\t\t\trs.line && rs.column && rs.endLine && rs.endColumn ? new Range(rs.line, rs.column, rs.endLine, rs.endColumn) : undefined)) : [];\n\t\t\t}, err => []);\n\t\t}\n\n\t\treturn this.scopes;\n\t}\n\n\tgetSpecificSourceName(): string {\n\t\t// To reduce flashing of the path name and the way we fetch stack frames\n\t\t// We need to compute the source name based on the other frames in the stale call stack\n\t\tlet callStack = (<Thread>this.thread).getStaleCallStack();\n\t\tcallStack = callStack.length > 0 ? callStack : this.thread.getCallStack();\n\t\tconst otherSources = callStack.map(sf => sf.source).filter(s => s !== this.source);\n\t\tlet suffixLength = 0;\n\t\totherSources.forEach(s => {\n\t\t\tif (s.name === this.source.name) {\n\t\t\t\tsuffixLength = Math.max(suffixLength, commonSuffixLength(this.source.uri.path, s.uri.path));\n\t\t\t}\n\t\t});\n\t\tif (suffixLength === 0) {\n\t\t\treturn this.source.name;\n\t\t}\n\n\t\tconst from = Math.max(0, this.source.uri.path.lastIndexOf(posix.sep, this.source.uri.path.length - suffixLength - 1));\n\t\treturn (from > 0 ? '...' : '') + this.source.uri.path.substr(from);\n\t}\n\n\tgetMostSpecificScopes(range: IRange): Promise<IScope[]> {\n\t\treturn this.getScopes().then(scopes => {\n\t\t\tscopes = scopes.filter(s => !s.expensive);\n\t\t\tconst haveRangeInfo = scopes.some(s => !!s.range);\n\t\t\tif (!haveRangeInfo) {\n\t\t\t\treturn scopes;\n\t\t\t}\n\n\t\t\tconst scopesContainingRange = scopes.filter(scope => scope.range && Range.containsRange(scope.range, range))\n\t\t\t\t.sort((first, second) => (first.range!.endLineNumber - first.range!.startLineNumber) - (second.range!.endLineNumber - second.range!.startLineNumber));\n\t\t\treturn scopesContainingRange.length ? scopesContainingRange : scopes;\n\t\t});\n\t}\n\n\trestart(): Promise<void> {\n\t\treturn this.thread.session.restartFrame(this.frameId, this.thread.threadId);\n\t}\n\n\ttoString(): string {\n\t\treturn `${this.name} (${this.source.inMemory ? this.source.name : this.source.uri.fsPath}:${this.range.startLineNumber})`;\n\t}\n\n\topenInEditor(editorService: IEditorService, preserveFocus?: boolean, sideBySide?: boolean, pinned?: boolean): Promise<any> {\n\t\treturn !this.source.available ? Promise.resolve(null) :\n\t\t\tthis.source.openInEditor(editorService, this.range, preserveFocus, sideBySide, pinned);\n\t}\n}\n\nexport class Thread implements IThread {\n\tprivate callStack: IStackFrame[];\n\tprivate staleCallStack: IStackFrame[];\n\tpublic stoppedDetails: IRawStoppedDetails | undefined;\n\tpublic stopped: boolean;\n\n\tconstructor(public session: IDebugSession, public name: string, public threadId: number) {\n\t\tthis.callStack = [];\n\t\tthis.staleCallStack = [];\n\t\tthis.stopped = false;\n\t}\n\n\tgetId(): string {\n\t\treturn `thread:${this.session.getId()}:${this.threadId}`;\n\t}\n\n\tclearCallStack(): void {\n\t\tif (this.callStack.length) {\n\t\t\tthis.staleCallStack = this.callStack;\n\t\t}\n\t\tthis.callStack = [];\n\t}\n\n\tgetCallStack(): IStackFrame[] {\n\t\treturn this.callStack;\n\t}\n\n\tgetStaleCallStack(): ReadonlyArray<IStackFrame> {\n\t\treturn this.staleCallStack;\n\t}\n\n\tget stateLabel(): string {\n\t\tif (this.stoppedDetails) {\n\t\t\treturn this.stoppedDetails.description ||\n\t\t\t\tthis.stoppedDetails.reason ? nls.localize({ key: 'pausedOn', comment: ['indicates reason for program being paused'] }, \"Paused on {0}\", this.stoppedDetails.reason) : nls.localize('paused', \"Paused\");\n\t\t}\n\n\t\treturn nls.localize({ key: 'running', comment: ['indicates state'] }, \"Running\");\n\t}\n\n\t/**\n\t * Queries the debug adapter for the callstack and returns a promise\n\t * which completes once the call stack has been retrieved.\n\t * If the thread is not stopped, it returns a promise to an empty array.\n\t * Only fetches the first stack frame for performance reasons. Calling this method consecutive times\n\t * gets the remainder of the call stack.\n\t */\n\tfetchCallStack(levels = 20): Promise<void> {\n\t\tif (!this.stopped) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst start = this.callStack.length;\n\t\treturn this.getCallStackImpl(start, levels).then(callStack => {\n\t\t\tif (start < this.callStack.length) {\n\t\t\t\t// Set the stack frames for exact position we requested. To make sure no concurrent requests create duplicate stack frames #30660\n\t\t\t\tthis.callStack.splice(start, this.callStack.length - start);\n\t\t\t}\n\t\t\tthis.callStack = this.callStack.concat(callStack || []);\n\t\t});\n\t}\n\n\tprivate getCallStackImpl(startFrame: number, levels: number): Promise<IStackFrame[]> {\n\t\treturn this.session.stackTrace(this.threadId, startFrame, levels).then(response => {\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (this.stoppedDetails) {\n\t\t\t\tthis.stoppedDetails.totalFrames = response.body.totalFrames;\n\t\t\t}\n\n\t\t\treturn response.body.stackFrames.map((rsf, index) => {\n\t\t\t\tconst source = this.session.getSource(rsf.source);\n\n\t\t\t\treturn new StackFrame(this, rsf.id, source, rsf.name, rsf.presentationHint, new Range(\n\t\t\t\t\trsf.line,\n\t\t\t\t\trsf.column,\n\t\t\t\t\trsf.endLine || rsf.line,\n\t\t\t\t\trsf.endColumn || rsf.column\n\t\t\t\t), startFrame + index);\n\t\t\t});\n\t\t}, (err: Error) => {\n\t\t\tif (this.stoppedDetails) {\n\t\t\t\tthis.stoppedDetails.framesErrorMessage = err.message;\n\t\t\t}\n\n\t\t\treturn [];\n\t\t});\n\t}\n\n\t/**\n\t * Returns exception info promise if the exception was thrown, otherwise undefined\n\t */\n\tget exceptionInfo(): Promise<IExceptionInfo | undefined> {\n\t\tif (this.stoppedDetails && this.stoppedDetails.reason === 'exception') {\n\t\t\tif (this.session.capabilities.supportsExceptionInfoRequest) {\n\t\t\t\treturn this.session.exceptionInfo(this.threadId);\n\t\t\t}\n\t\t\treturn Promise.resolve({\n\t\t\t\tdescription: this.stoppedDetails.text,\n\t\t\t\tbreakMode: null\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tnext(): Promise<any> {\n\t\treturn this.session.next(this.threadId);\n\t}\n\n\tstepIn(): Promise<any> {\n\t\treturn this.session.stepIn(this.threadId);\n\t}\n\n\tstepOut(): Promise<any> {\n\t\treturn this.session.stepOut(this.threadId);\n\t}\n\n\tstepBack(): Promise<any> {\n\t\treturn this.session.stepBack(this.threadId);\n\t}\n\n\tcontinue(): Promise<any> {\n\t\treturn this.session.continue(this.threadId);\n\t}\n\n\tpause(): Promise<any> {\n\t\treturn this.session.pause(this.threadId);\n\t}\n\n\tterminate(): Promise<any> {\n\t\treturn this.session.terminateThreads([this.threadId]);\n\t}\n\n\treverseContinue(): Promise<any> {\n\t\treturn this.session.reverseContinue(this.threadId);\n\t}\n}\n\nexport class Enablement implements IEnablement {\n\tconstructor(\n\t\tpublic enabled: boolean,\n\t\tprivate id: string\n\t) { }\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n\nexport class BaseBreakpoint extends Enablement implements IBaseBreakpoint {\n\n\tprivate sessionData = new Map<string, DebugProtocol.Breakpoint>();\n\tprivate sessionId: string | undefined;\n\n\tconstructor(\n\t\tenabled: boolean,\n\t\tpublic hitCondition: string | undefined,\n\t\tpublic condition: string | undefined,\n\t\tpublic logMessage: string | undefined,\n\t\tid: string\n\t) {\n\t\tsuper(enabled, id);\n\t\tif (enabled === undefined) {\n\t\t\tthis.enabled = true;\n\t\t}\n\t}\n\n\tprotected getSessionData(): DebugProtocol.Breakpoint | undefined {\n\t\treturn this.sessionId ? this.sessionData.get(this.sessionId) : undefined;\n\t}\n\n\tsetSessionData(sessionId: string, data: DebugProtocol.Breakpoint): void {\n\t\tthis.sessionData.set(sessionId, data);\n\t}\n\n\tsetSessionId(sessionId: string | undefined): void {\n\t\tthis.sessionId = sessionId;\n\t}\n\n\tget verified(): boolean {\n\t\tconst data = this.getSessionData();\n\t\treturn data ? data.verified : true;\n\t}\n\n\tget idFromAdapter(): number | undefined {\n\t\tconst data = this.getSessionData();\n\t\treturn data ? data.id : undefined;\n\t}\n\n\ttoJSON(): any {\n\t\tconst result = Object.create(null);\n\t\tresult.enabled = this.enabled;\n\t\tresult.condition = this.condition;\n\t\tresult.hitCondition = this.hitCondition;\n\t\tresult.logMessage = this.logMessage;\n\n\t\treturn result;\n\t}\n}\n\nexport class Breakpoint extends BaseBreakpoint implements IBreakpoint {\n\n\tconstructor(\n\t\tpublic uri: uri,\n\t\tprivate _lineNumber: number,\n\t\tprivate _column: number | undefined,\n\t\tenabled: boolean,\n\t\tcondition: string | undefined,\n\t\thitCondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tprivate _adapterData: any,\n\t\tprivate textFileService: ITextFileService,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\tget lineNumber(): number {\n\t\tconst data = this.getSessionData();\n\t\treturn this.verified && data && typeof data.line === 'number' ? data.line : this._lineNumber;\n\t}\n\n\tget verified(): boolean {\n\t\tconst data = this.getSessionData();\n\t\tif (data) {\n\t\t\treturn data.verified && !this.textFileService.isDirty(this.uri);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tget column(): number | undefined {\n\t\tconst data = this.getSessionData();\n\t\t// Only respect the column if the user explictly set the column to have an inline breakpoint\n\t\treturn data && typeof data.column === 'number' && typeof this._column === 'number' ? data.column : this._column;\n\t}\n\n\tget message(): string | undefined {\n\t\tconst data = this.getSessionData();\n\t\tif (!data) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this.textFileService.isDirty(this.uri)) {\n\t\t\treturn nls.localize('breakpointDirtydHover', \"Unverified breakpoint. File is modified, please restart debug session.\");\n\t\t}\n\n\t\treturn data.message;\n\t}\n\n\tget adapterData(): any {\n\t\tconst data = this.getSessionData();\n\t\treturn data && data.source && data.source.adapterData ? data.source.adapterData : this._adapterData;\n\t}\n\n\tget endLineNumber(): number | undefined {\n\t\tconst data = this.getSessionData();\n\t\treturn data ? data.endLine : undefined;\n\t}\n\n\tget endColumn(): number | undefined {\n\t\tconst data = this.getSessionData();\n\t\treturn data ? data.endColumn : undefined;\n\t}\n\n\tsetSessionData(sessionId: string, data: DebugProtocol.Breakpoint): void {\n\t\tsuper.setSessionData(sessionId, data);\n\t\tif (!this._adapterData) {\n\t\t\tthis._adapterData = this.adapterData;\n\t\t}\n\t}\n\n\ttoJSON(): any {\n\t\tconst result = super.toJSON();\n\t\tresult.uri = this.uri;\n\t\tresult.lineNumber = this._lineNumber;\n\t\tresult.column = this._column;\n\t\tresult.adapterData = this.adapterData;\n\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\treturn resources.basenameOrAuthority(this.uri);\n\t}\n\n\tupdate(data: IBreakpointUpdateData): void {\n\t\tif (!isUndefinedOrNull(data.lineNumber)) {\n\t\t\tthis._lineNumber = data.lineNumber;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.column)) {\n\t\t\tthis._column = data.column;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.condition)) {\n\t\t\tthis.condition = data.condition;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.hitCondition)) {\n\t\t\tthis.hitCondition = data.hitCondition;\n\t\t}\n\t\tif (!isUndefinedOrNull(data.logMessage)) {\n\t\t\tthis.logMessage = data.logMessage;\n\t\t}\n\t}\n}\n\nexport class FunctionBreakpoint extends BaseBreakpoint implements IFunctionBreakpoint {\n\n\tconstructor(\n\t\tpublic name: string,\n\t\tenabled: boolean,\n\t\thitCondition: string | undefined,\n\t\tcondition: string | undefined,\n\t\tlogMessage: string | undefined,\n\t\tid = generateUuid()\n\t) {\n\t\tsuper(enabled, hitCondition, condition, logMessage, id);\n\t}\n\n\ttoJSON(): any {\n\t\tconst result = super.toJSON();\n\t\tresult.name = this.name;\n\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n\nexport class ExceptionBreakpoint extends Enablement implements IExceptionBreakpoint {\n\n\tconstructor(public filter: string, public label: string, enabled: boolean) {\n\t\tsuper(enabled, generateUuid());\n\t}\n\n\ttoJSON(): any {\n\t\tconst result = Object.create(null);\n\t\tresult.filter = this.filter;\n\t\tresult.label = this.label;\n\t\tresult.enabled = this.enabled;\n\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\treturn this.label;\n\t}\n}\n\nexport class ThreadAndSessionIds implements ITreeElement {\n\tconstructor(public sessionId: string, public threadId: number) { }\n\n\tgetId(): string {\n\t\treturn `${this.sessionId}:${this.threadId}`;\n\t}\n}\n\nexport class DebugModel implements IDebugModel {\n\n\tprivate sessions: IDebugSession[];\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate schedulers = new Map<string, RunOnceScheduler>();\n\tprivate breakpointsSessionId: string | undefined;\n\tprivate readonly _onDidChangeBreakpoints: Emitter<IBreakpointsChangeEvent | undefined>;\n\tprivate readonly _onDidChangeCallStack: Emitter<void>;\n\tprivate readonly _onDidChangeWatchExpressions: Emitter<IExpression | undefined>;\n\n\tconstructor(\n\t\tprivate breakpoints: Breakpoint[],\n\t\tprivate breakpointsActivated: boolean,\n\t\tprivate functionBreakpoints: FunctionBreakpoint[],\n\t\tprivate exceptionBreakpoints: ExceptionBreakpoint[],\n\t\tprivate watchExpressions: Expression[],\n\t\tprivate textFileService: ITextFileService\n\t) {\n\t\tthis.sessions = [];\n\t\tthis.toDispose = [];\n\t\tthis._onDidChangeBreakpoints = new Emitter<IBreakpointsChangeEvent>();\n\t\tthis._onDidChangeCallStack = new Emitter<void>();\n\t\tthis._onDidChangeWatchExpressions = new Emitter<IExpression>();\n\t}\n\n\tgetId(): string {\n\t\treturn 'root';\n\t}\n\n\tgetSession(sessionId: string | undefined, includeInactive = false): IDebugSession | undefined {\n\t\tif (sessionId) {\n\t\t\treturn this.getSessions(includeInactive).filter(s => s.getId() === sessionId).pop();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetSessions(includeInactive = false): IDebugSession[] {\n\t\t// By default do not return inactive sesions.\n\t\t// However we are still holding onto inactive sessions due to repl and debug service session revival (eh scenario)\n\t\treturn this.sessions.filter(s => includeInactive || s.state !== State.Inactive);\n\t}\n\n\taddSession(session: IDebugSession): void {\n\t\tthis.sessions = this.sessions.filter(s => {\n\t\t\tif (s.getId() === session.getId()) {\n\t\t\t\t// Make sure to de-dupe if a session is re-intialized. In case of EH debugging we are adding a session again after an attach.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (s.state === State.Inactive && s.getLabel() === session.getLabel()) {\n\t\t\t\t// Make sure to remove all inactive sessions that are using the same configuration as the new session\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tlet index = -1;\n\t\tif (session.parentSession) {\n\t\t\t// Make sure that child sessions are placed after the parent session\n\t\t\tindex = lastIndex(this.sessions, s => s.parentSession === session.parentSession || s === session.parentSession);\n\t\t}\n\t\tif (index >= 0) {\n\t\t\tthis.sessions.splice(index + 1, 0, session);\n\t\t} else {\n\t\t\tthis.sessions.push(session);\n\t\t}\n\t\tthis._onDidChangeCallStack.fire(undefined);\n\t}\n\n\tget onDidChangeBreakpoints(): Event<IBreakpointsChangeEvent | undefined> {\n\t\treturn this._onDidChangeBreakpoints.event;\n\t}\n\n\tget onDidChangeCallStack(): Event<void> {\n\t\treturn this._onDidChangeCallStack.event;\n\t}\n\n\tget onDidChangeWatchExpressions(): Event<IExpression | undefined> {\n\t\treturn this._onDidChangeWatchExpressions.event;\n\t}\n\n\trawUpdate(data: IRawModelUpdate): void {\n\t\tlet session = this.sessions.filter(p => p.getId() === data.sessionId).pop();\n\t\tif (session) {\n\t\t\tsession.rawUpdate(data);\n\t\t\tthis._onDidChangeCallStack.fire(undefined);\n\t\t}\n\t}\n\n\tclearThreads(id: string, removeThreads: boolean, reference: number | undefined = undefined): void {\n\t\tconst session = this.sessions.filter(p => p.getId() === id).pop();\n\t\tthis.schedulers.forEach(scheduler => scheduler.dispose());\n\t\tthis.schedulers.clear();\n\n\t\tif (session) {\n\t\t\tsession.clearThreads(removeThreads, reference);\n\t\t\tthis._onDidChangeCallStack.fire(undefined);\n\t\t}\n\t}\n\n\tfetchCallStack(thread: Thread): { topCallStack: Promise<void>, wholeCallStack: Promise<void> } {\n\t\tif (thread.session.capabilities.supportsDelayedStackTraceLoading) {\n\t\t\t// For improved performance load the first stack frame and then load the rest async.\n\t\t\tlet topCallStack = Promise.resolve();\n\t\t\tconst wholeCallStack = new Promise<void>((c, e) => {\n\t\t\t\ttopCallStack = thread.fetchCallStack(1).then(() => {\n\t\t\t\t\tif (!this.schedulers.has(thread.getId())) {\n\t\t\t\t\t\tthis.schedulers.set(thread.getId(), new RunOnceScheduler(() => {\n\t\t\t\t\t\t\tthread.fetchCallStack(19).then(() => {\n\t\t\t\t\t\t\t\tthis._onDidChangeCallStack.fire();\n\t\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 420));\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.schedulers.get(thread.getId())!.schedule();\n\t\t\t\t});\n\t\t\t\tthis._onDidChangeCallStack.fire();\n\t\t\t});\n\n\t\t\treturn { topCallStack, wholeCallStack };\n\t\t}\n\n\t\tconst wholeCallStack = thread.fetchCallStack();\n\t\treturn { wholeCallStack, topCallStack: wholeCallStack };\n\t}\n\n\tgetBreakpoints(filter?: { uri?: uri, lineNumber?: number, column?: number, enabledOnly?: boolean }): IBreakpoint[] {\n\t\tif (filter) {\n\t\t\tconst uriStr = filter.uri ? filter.uri.toString() : undefined;\n\t\t\treturn this.breakpoints.filter(bp => {\n\t\t\t\tif (uriStr && bp.uri.toString() !== uriStr) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.lineNumber && bp.lineNumber !== filter.lineNumber) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.column && bp.column !== filter.column) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (filter.enabledOnly && (!this.breakpointsActivated || !bp.enabled)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn this.breakpoints;\n\t}\n\n\tgetFunctionBreakpoints(): IFunctionBreakpoint[] {\n\t\treturn this.functionBreakpoints;\n\t}\n\n\tgetExceptionBreakpoints(): IExceptionBreakpoint[] {\n\t\treturn this.exceptionBreakpoints;\n\t}\n\n\tsetExceptionBreakpoints(data: DebugProtocol.ExceptionBreakpointsFilter[]): void {\n\t\tif (data) {\n\t\t\tif (this.exceptionBreakpoints.length === data.length && this.exceptionBreakpoints.every((exbp, i) => exbp.filter === data[i].filter && exbp.label === data[i].label)) {\n\t\t\t\t// No change\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.exceptionBreakpoints = data.map(d => {\n\t\t\t\tconst ebp = this.exceptionBreakpoints.filter(ebp => ebp.filter === d.filter).pop();\n\t\t\t\treturn new ExceptionBreakpoint(d.filter, d.label, ebp ? ebp.enabled : !!d.default);\n\t\t\t});\n\t\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t\t}\n\t}\n\n\tareBreakpointsActivated(): boolean {\n\t\treturn this.breakpointsActivated;\n\t}\n\n\tsetBreakpointsActivated(activated: boolean): void {\n\t\tthis.breakpointsActivated = activated;\n\t\tthis._onDidChangeBreakpoints.fire(undefined);\n\t}\n\n\taddBreakpoints(uri: uri, rawData: IBreakpointData[], fireEvent = true): IBreakpoint[] {\n\t\tconst newBreakpoints = rawData.map(rawBp => new Breakpoint(uri, rawBp.lineNumber, rawBp.column, rawBp.enabled === false ? false : true, rawBp.condition, rawBp.hitCondition, rawBp.logMessage, undefined, this.textFileService, rawBp.id));\n\t\tnewBreakpoints.forEach(bp => bp.setSessionId(this.breakpointsSessionId));\n\t\tthis.breakpoints = this.breakpoints.concat(newBreakpoints);\n\t\tthis.breakpointsActivated = true;\n\t\tthis.sortAndDeDup();\n\n\t\tif (fireEvent) {\n\t\t\tthis._onDidChangeBreakpoints.fire({ added: newBreakpoints });\n\t\t}\n\n\t\treturn newBreakpoints;\n\t}\n\n\tremoveBreakpoints(toRemove: IBreakpoint[]): void {\n\t\tthis.breakpoints = this.breakpoints.filter(bp => !toRemove.some(toRemove => toRemove.getId() === bp.getId()));\n\t\tthis._onDidChangeBreakpoints.fire({ removed: toRemove });\n\t}\n\n\tupdateBreakpoints(data: { [id: string]: IBreakpointUpdateData }): void {\n\t\tconst updated: IBreakpoint[] = [];\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tconst bpData = data[bp.getId()];\n\t\t\tif (bpData) {\n\t\t\t\tbp.update(bpData);\n\t\t\t\tupdated.push(bp);\n\t\t\t}\n\t\t});\n\t\tthis.sortAndDeDup();\n\t\tthis._onDidChangeBreakpoints.fire({ changed: updated });\n\t}\n\n\tsetBreakpointSessionData(sessionId: string, data: { [id: string]: DebugProtocol.Breakpoint }): void {\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tconst bpData = data[bp.getId()];\n\t\t\tif (bpData) {\n\t\t\t\tbp.setSessionData(sessionId, bpData);\n\t\t\t}\n\t\t});\n\t\tthis.functionBreakpoints.forEach(fbp => {\n\t\t\tconst fbpData = data[fbp.getId()];\n\t\t\tif (fbpData) {\n\t\t\t\tfbp.setSessionData(sessionId, fbpData);\n\t\t\t}\n\t\t});\n\n\t\tthis._onDidChangeBreakpoints.fire({\n\t\t\tsessionOnly: true\n\t\t});\n\t}\n\n\tsetBreakpointsSessionId(sessionId: string | undefined): void {\n\t\tthis.breakpointsSessionId = sessionId;\n\t\tthis.breakpoints.forEach(bp => bp.setSessionId(sessionId));\n\t\tthis.functionBreakpoints.forEach(fbp => fbp.setSessionId(sessionId));\n\n\t\tthis._onDidChangeBreakpoints.fire({\n\t\t\tsessionOnly: true\n\t\t});\n\t}\n\n\tprivate sortAndDeDup(): void {\n\t\tthis.breakpoints = this.breakpoints.sort((first, second) => {\n\t\t\tif (first.uri.toString() !== second.uri.toString()) {\n\t\t\t\treturn resources.basenameOrAuthority(first.uri).localeCompare(resources.basenameOrAuthority(second.uri));\n\t\t\t}\n\t\t\tif (first.lineNumber === second.lineNumber) {\n\t\t\t\tif (first.column && second.column) {\n\t\t\t\t\treturn first.column - second.column;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn first.lineNumber - second.lineNumber;\n\t\t});\n\t\tthis.breakpoints = distinct(this.breakpoints, bp => `${bp.uri.toString()}:${bp.lineNumber}:${bp.column}`);\n\t}\n\n\tsetEnablement(element: IEnablement, enable: boolean): void {\n\t\tif (element instanceof Breakpoint || element instanceof FunctionBreakpoint || element instanceof ExceptionBreakpoint) {\n\t\t\tconst changed: Array<IBreakpoint | IFunctionBreakpoint> = [];\n\t\t\tif (element.enabled !== enable && (element instanceof Breakpoint || element instanceof FunctionBreakpoint)) {\n\t\t\t\tchanged.push(element);\n\t\t\t}\n\n\t\t\telement.enabled = enable;\n\n\t\t\tthis._onDidChangeBreakpoints.fire({ changed: changed });\n\t\t}\n\t}\n\n\tenableOrDisableAllBreakpoints(enable: boolean): void {\n\t\tconst changed: Array<IBreakpoint | IFunctionBreakpoint> = [];\n\n\t\tthis.breakpoints.forEach(bp => {\n\t\t\tif (bp.enabled !== enable) {\n\t\t\t\tchanged.push(bp);\n\t\t\t}\n\t\t\tbp.enabled = enable;\n\t\t});\n\t\tthis.functionBreakpoints.forEach(fbp => {\n\t\t\tif (fbp.enabled !== enable) {\n\t\t\t\tchanged.push(fbp);\n\t\t\t}\n\t\t\tfbp.enabled = enable;\n\t\t});\n\n\t\tthis._onDidChangeBreakpoints.fire({ changed: changed });\n\t}\n\n\taddFunctionBreakpoint(functionName: string, id?: string): IFunctionBreakpoint {\n\t\tconst newFunctionBreakpoint = new FunctionBreakpoint(functionName, true, undefined, undefined, undefined, id);\n\t\tthis.functionBreakpoints.push(newFunctionBreakpoint);\n\t\tthis._onDidChangeBreakpoints.fire({ added: [newFunctionBreakpoint] });\n\n\t\treturn newFunctionBreakpoint;\n\t}\n\n\trenameFunctionBreakpoint(id: string, name: string): void {\n\t\tconst functionBreakpoint = this.functionBreakpoints.filter(fbp => fbp.getId() === id).pop();\n\t\tif (functionBreakpoint) {\n\t\t\tfunctionBreakpoint.name = name;\n\t\t\tthis._onDidChangeBreakpoints.fire({ changed: [functionBreakpoint] });\n\t\t}\n\t}\n\n\tremoveFunctionBreakpoints(id?: string): void {\n\n\t\tlet removed: FunctionBreakpoint[];\n\t\tif (id) {\n\t\t\tremoved = this.functionBreakpoints.filter(fbp => fbp.getId() === id);\n\t\t\tthis.functionBreakpoints = this.functionBreakpoints.filter(fbp => fbp.getId() !== id);\n\t\t} else {\n\t\t\tremoved = this.functionBreakpoints;\n\t\t\tthis.functionBreakpoints = [];\n\t\t}\n\t\tthis._onDidChangeBreakpoints.fire({ removed: removed });\n\t}\n\n\tgetWatchExpressions(): Expression[] {\n\t\treturn this.watchExpressions;\n\t}\n\n\taddWatchExpression(name: string): IExpression {\n\t\tconst we = new Expression(name);\n\t\tthis.watchExpressions.push(we);\n\t\tthis._onDidChangeWatchExpressions.fire(we);\n\n\t\treturn we;\n\t}\n\n\trenameWatchExpression(id: string, newName: string): void {\n\t\tconst filtered = this.watchExpressions.filter(we => we.getId() === id);\n\t\tif (filtered.length === 1) {\n\t\t\tfiltered[0].name = newName;\n\t\t\tthis._onDidChangeWatchExpressions.fire(filtered[0]);\n\t\t}\n\t}\n\n\tremoveWatchExpressions(id: string | null = null): void {\n\t\tthis.watchExpressions = id ? this.watchExpressions.filter(we => we.getId() !== id) : [];\n\t\tthis._onDidChangeWatchExpressions.fire(undefined);\n\t}\n\n\tmoveWatchExpression(id: string, position: number): void {\n\t\tconst we = this.watchExpressions.filter(we => we.getId() === id).pop();\n\t\tif (we) {\n\t\t\tthis.watchExpressions = this.watchExpressions.filter(we => we.getId() !== id);\n\t\t\tthis.watchExpressions = this.watchExpressions.slice(0, position).concat(we, this.watchExpressions.slice(position));\n\t\t\tthis._onDidChangeWatchExpressions.fire(undefined);\n\t\t}\n\t}\n\n\tsourceIsNotAvailable(uri: uri): void {\n\t\tthis.sessions.forEach(s => {\n\t\t\tconst source = s.getSourceForUri(uri);\n\t\t\tif (source) {\n\t\t\t\tsource.available = false;\n\t\t\t}\n\t\t});\n\t\tthis._onDidChangeCallStack.fire(undefined);\n\t}\n\n\tdispose(): void {\n\t\t// Make sure to shutdown each session, such that no debugged process is left laying around\n\t\tthis.sessions.forEach(s => s.shutdown());\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n"]}]}