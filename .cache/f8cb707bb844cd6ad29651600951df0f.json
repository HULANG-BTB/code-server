{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/node/telemetryApp.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/debug/node/telemetryApp.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/base/parts/ipc/node/ipc.cp\", \"vs/platform/telemetry/node/appInsightsAppender\", \"vs/platform/telemetry/node/telemetryIpc\"], function (require, exports, ipc_cp_1, appInsightsAppender_1, telemetryIpc_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const appender = new appInsightsAppender_1.AppInsightsAppender(process.argv[2], JSON.parse(process.argv[3]), process.argv[4]);\n    process.once('exit', () => appender.dispose());\n    const channel = new telemetryIpc_1.TelemetryAppenderChannel(appender);\n    const server = new ipc_cp_1.Server('telemetry');\n    server.registerChannel('telemetryAppender', channel);\n});\n",null]}