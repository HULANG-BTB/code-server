{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar map_1 = require(\"vs/base/common/map\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar objects_1 = require(\"vs/base/common/objects\");\nexports.ICommentService = instantiation_1.createDecorator('commentService');\nvar CommentService = /** @class */ (function (_super) {\n    tslib_1.__extends(CommentService, _super);\n    function CommentService() {\n        var _this = _super.call(this) || this;\n        _this._onDidSetDataProvider = _this._register(new event_1.Emitter());\n        _this.onDidSetDataProvider = _this._onDidSetDataProvider.event;\n        _this._onDidDeleteDataProvider = _this._register(new event_1.Emitter());\n        _this.onDidDeleteDataProvider = _this._onDidDeleteDataProvider.event;\n        _this._onDidSetResourceCommentInfos = _this._register(new event_1.Emitter());\n        _this.onDidSetResourceCommentInfos = _this._onDidSetResourceCommentInfos.event;\n        _this._onDidSetAllCommentThreads = _this._register(new event_1.Emitter());\n        _this.onDidSetAllCommentThreads = _this._onDidSetAllCommentThreads.event;\n        _this._onDidUpdateCommentThreads = _this._register(new event_1.Emitter());\n        _this.onDidUpdateCommentThreads = _this._onDidUpdateCommentThreads.event;\n        _this._onDidChangeActiveCommentThread = _this._register(new event_1.Emitter());\n        _this.onDidChangeActiveCommentThread = _this._onDidChangeActiveCommentThread.event;\n        _this._onDidChangeInput = _this._register(new event_1.Emitter());\n        _this.onDidChangeInput = _this._onDidChangeInput.event;\n        _this._onDidChangeActiveCommentingRange = _this._register(new event_1.Emitter());\n        _this.onDidChangeActiveCommentingRange = _this._onDidChangeActiveCommentingRange.event;\n        _this._commentProviders = new Map();\n        _this._commentControls = new Map();\n        return _this;\n    }\n    CommentService.prototype.setActiveCommentThread = function (commentThread) {\n        this._onDidChangeActiveCommentThread.fire(commentThread);\n    };\n    CommentService.prototype.setInput = function (input) {\n        this._onDidChangeInput.fire(input);\n    };\n    CommentService.prototype.setDocumentComments = function (resource, commentInfos) {\n        this._onDidSetResourceCommentInfos.fire({ resource: resource, commentInfos: commentInfos });\n    };\n    CommentService.prototype.setWorkspaceComments = function (owner, commentsByResource) {\n        this._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: commentsByResource });\n    };\n    CommentService.prototype.removeWorkspaceComments = function (owner) {\n        this._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: [] });\n    };\n    CommentService.prototype.registerCommentController = function (owner, commentControl) {\n        this._commentControls.set(owner, commentControl);\n        this._onDidSetDataProvider.fire();\n    };\n    CommentService.prototype.unregisterCommentController = function (owner) {\n        this._commentControls.delete(owner);\n        this._onDidDeleteDataProvider.fire(owner);\n    };\n    CommentService.prototype.registerDataProvider = function (owner, commentProvider) {\n        this._commentProviders.set(owner, commentProvider);\n        this._onDidSetDataProvider.fire();\n    };\n    CommentService.prototype.unregisterDataProvider = function (owner) {\n        this._commentProviders.delete(owner);\n        this._onDidDeleteDataProvider.fire(owner);\n    };\n    CommentService.prototype.updateComments = function (ownerId, event) {\n        var evt = objects_1.assign({}, event, { owner: ownerId });\n        this._onDidUpdateCommentThreads.fire(evt);\n    };\n    CommentService.prototype.createNewCommentThread = function (owner, resource, range, text) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        commentProvider = this._commentProviders.get(owner);\n                        if (!commentProvider) return [3 /*break*/, 2];\n                        return [4 /*yield*/, commentProvider.createNewCommentThread(resource, range, text, cancellation_1.CancellationToken.None)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    CommentService.prototype.replyToCommentThread = function (owner, resource, range, thread, text) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        commentProvider = this._commentProviders.get(owner);\n                        if (!commentProvider) return [3 /*break*/, 2];\n                        return [4 /*yield*/, commentProvider.replyToCommentThread(resource, range, thread, text, cancellation_1.CancellationToken.None)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    CommentService.prototype.editComment = function (owner, resource, comment, text) {\n        var commentProvider = this._commentProviders.get(owner);\n        if (commentProvider) {\n            return commentProvider.editComment(resource, comment, text, cancellation_1.CancellationToken.None);\n        }\n        return Promise.resolve(undefined);\n    };\n    CommentService.prototype.deleteComment = function (owner, resource, comment) {\n        var commentProvider = this._commentProviders.get(owner);\n        if (commentProvider) {\n            return commentProvider.deleteComment(resource, comment, cancellation_1.CancellationToken.None).then(function () { return true; });\n        }\n        return Promise.resolve(false);\n    };\n    CommentService.prototype.startDraft = function (owner, resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                commentProvider = this._commentProviders.get(owner);\n                if (commentProvider && commentProvider.startDraft) {\n                    return [2 /*return*/, commentProvider.startDraft(resource, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.deleteDraft = function (owner, resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                commentProvider = this._commentProviders.get(owner);\n                if (commentProvider && commentProvider.deleteDraft) {\n                    return [2 /*return*/, commentProvider.deleteDraft(resource, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.finishDraft = function (owner, resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                commentProvider = this._commentProviders.get(owner);\n                if (commentProvider && commentProvider.finishDraft) {\n                    return [2 /*return*/, commentProvider.finishDraft(resource, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.addReaction = function (owner, resource, comment, reaction) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                commentProvider = this._commentProviders.get(owner);\n                if (commentProvider && commentProvider.addReaction) {\n                    return [2 /*return*/, commentProvider.addReaction(resource, comment, reaction, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.deleteReaction = function (owner, resource, comment, reaction) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentProvider;\n            return tslib_1.__generator(this, function (_a) {\n                commentProvider = this._commentProviders.get(owner);\n                if (commentProvider && commentProvider.deleteReaction) {\n                    return [2 /*return*/, commentProvider.deleteReaction(resource, comment, reaction, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.toggleReaction = function (owner, resource, thread, comment, reaction) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentController;\n            return tslib_1.__generator(this, function (_a) {\n                commentController = this._commentControls.get(owner);\n                if (commentController) {\n                    return [2 /*return*/, commentController.toggleReaction(resource, thread, comment, reaction, cancellation_1.CancellationToken.None)];\n                }\n                else {\n                    throw new Error('Not supported');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    CommentService.prototype.getReactionGroup = function (owner) {\n        var commentProvider = this._commentControls.get(owner);\n        if (commentProvider) {\n            return commentProvider.getReactionGroup();\n        }\n        var commentController = this._commentControls.get(owner);\n        if (commentController) {\n            return commentController.getReactionGroup();\n        }\n        return undefined;\n    };\n    CommentService.prototype.getStartDraftLabel = function (owner) {\n        var commentProvider = this._commentProviders.get(owner);\n        if (commentProvider) {\n            return commentProvider.startDraftLabel;\n        }\n        return undefined;\n    };\n    CommentService.prototype.getDeleteDraftLabel = function (owner) {\n        var commentProvider = this._commentProviders.get(owner);\n        if (commentProvider) {\n            return commentProvider.deleteDraftLabel;\n        }\n        return undefined;\n    };\n    CommentService.prototype.getFinishDraftLabel = function (owner) {\n        var commentProvider = this._commentProviders.get(owner);\n        if (commentProvider) {\n            return commentProvider.finishDraftLabel;\n        }\n        return undefined;\n    };\n    CommentService.prototype.getComments = function (resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var result, _loop_1, this_1, _i, _a, owner, commentControlResult, ret, _b, _c;\n            return tslib_1.__generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        result = [];\n                        _loop_1 = function (owner) {\n                            var provider = this_1._commentProviders.get(owner);\n                            if (provider && provider.provideDocumentComments) {\n                                result.push(provider.provideDocumentComments(resource, cancellation_1.CancellationToken.None).then(function (commentInfo) {\n                                    if (commentInfo) {\n                                        return {\n                                            owner: owner,\n                                            threads: commentInfo.threads,\n                                            commentingRanges: commentInfo.commentingRanges,\n                                            reply: commentInfo.reply,\n                                            draftMode: commentInfo.draftMode\n                                        };\n                                    }\n                                    else {\n                                        return null;\n                                    }\n                                }));\n                            }\n                        };\n                        this_1 = this;\n                        for (_i = 0, _a = map_1.keys(this._commentProviders); _i < _a.length; _i++) {\n                            owner = _a[_i];\n                            _loop_1(owner);\n                        }\n                        commentControlResult = [];\n                        this._commentControls.forEach(function (control) {\n                            commentControlResult.push(control.getDocumentComments(resource, cancellation_1.CancellationToken.None));\n                        });\n                        return [4 /*yield*/, Promise.all(result)];\n                    case 1:\n                        _c = (_b = (_d.sent())).concat;\n                        return [4 /*yield*/, Promise.all(commentControlResult)];\n                    case 2:\n                        ret = _c.apply(_b, [_d.sent()]);\n                        return [2 /*return*/, ret];\n                }\n            });\n        });\n    };\n    CommentService.prototype.getCommentingRanges = function (resource) {\n        return tslib_1.__awaiter(this, void 0, Promise, function () {\n            var commentControlResult, ret;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        commentControlResult = [];\n                        this._commentControls.forEach(function (control) {\n                            commentControlResult.push(control.getCommentingRanges(resource, cancellation_1.CancellationToken.None));\n                        });\n                        return [4 /*yield*/, Promise.all(commentControlResult)];\n                    case 1:\n                        ret = _a.sent();\n                        return [2 /*return*/, ret.reduce(function (prev, curr) { prev.push.apply(prev, curr); return prev; }, [])];\n                }\n            });\n        });\n    };\n    return CommentService;\n}(lifecycle_1.Disposable));\nexports.CommentService = CommentService;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/comments/browser/commentService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;;AAGhG,gFAAiF;AACjF,8CAAsD;AACtD,sDAAsD;AAGtD,0CAA0C;AAC1C,4DAAgE;AAChE,kDAAgD;AAInC,QAAA,eAAe,GAAG,+BAAe,CAAkB,gBAAgB,CAAC,CAAC;AAsDlF;IAAoC,0CAAU;IAoC7C;QAAA,YACC,iBAAO,SACP;QAnCgB,2BAAqB,GAAkB,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAQ,CAAC,CAAC;QACnF,0BAAoB,GAAgB,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;QAE7D,8BAAwB,GAAoB,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAU,CAAC,CAAC;QAC1F,6BAAuB,GAAkB,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAErE,mCAA6B,GAAyC,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAA+B,CAAC,CAAC;QACzI,kCAA4B,GAAuC,KAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;QAEpG,gCAA0B,GAA2C,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAiC,CAAC,CAAC;QAC1I,+BAAyB,GAAyC,KAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAEhG,gCAA0B,GAAwC,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAA8B,CAAC,CAAC;QACpI,+BAAyB,GAAsC,KAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC;QAE7F,qCAA+B,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAwB,CAAC,CAAC;QAC9F,oCAA8B,GAAgC,KAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;QAEjG,uBAAiB,GAAoB,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAU,CAAC,CAAC;QACnF,sBAAgB,GAAkB,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACvD,uCAAiC,GAG7C,KAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAG3B,CAAC,CAAC;QACG,sCAAgC,GAAoE,KAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC;QAElJ,uBAAiB,GAAG,IAAI,GAAG,EAAmC,CAAC;QAE/D,sBAAgB,GAAG,IAAI,GAAG,EAAuC,CAAC;;IAI1E,CAAC;IAED,+CAAsB,GAAtB,UAAuB,aAAmC;QACzD,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1D,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAa;QACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,4CAAmB,GAAnB,UAAoB,QAAa,EAAE,YAA4B;QAC9D,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,6CAAoB,GAApB,UAAqB,KAAa,EAAE,kBAAmC;QACtE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,gDAAuB,GAAvB,UAAwB,KAAa;QACpC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,kDAAyB,GAAzB,UAA0B,KAAa,EAAE,cAA2C;QACnF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,oDAA2B,GAA3B,UAA4B,KAAa;QACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,6CAAoB,GAApB,UAAqB,KAAa,EAAE,eAAwC;QAC3E,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACnD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,+CAAsB,GAAtB,UAAuB,KAAa;QACnC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,uCAAc,GAAd,UAAe,OAAe,EAAE,KAAgC;QAC/D,IAAM,GAAG,GAA+B,gBAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAEK,+CAAsB,GAA5B,UAA6B,KAAa,EAAE,QAAa,EAAE,KAAY,EAAE,IAAY;+CAAG,OAAO;;;;;wBACxF,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;6BAEtD,eAAe,EAAf,wBAAe;wBACX,qBAAM,eAAe,CAAC,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAA;4BAAlG,sBAAO,SAA2F,EAAC;4BAGpG,sBAAO,IAAI,EAAC;;;;KACZ;IAEK,6CAAoB,GAA1B,UAA2B,KAAa,EAAE,QAAa,EAAE,KAAY,EAAE,MAAqB,EAAE,IAAY;+CAAG,OAAO;;;;;wBAC7G,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;6BAEtD,eAAe,EAAf,wBAAe;wBACX,qBAAM,eAAe,CAAC,oBAAoB,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAA;4BAAxG,sBAAO,SAAiG,EAAC;4BAG1G,sBAAO,IAAI,EAAC;;;;KACZ;IAED,oCAAW,GAAX,UAAY,KAAa,EAAE,QAAa,EAAE,OAAgB,EAAE,IAAY;QACvE,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;SACpF;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED,sCAAa,GAAb,UAAc,KAAa,EAAE,QAAa,EAAE,OAAgB;QAC3D,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;SACjG;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEK,mCAAU,GAAhB,UAAiB,KAAa,EAAE,QAAa;+CAAG,OAAO;;;gBAChD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,IAAI,eAAe,CAAC,UAAU,EAAE;oBAClD,sBAAO,eAAe,CAAC,UAAU,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBACpE;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAEK,oCAAW,GAAjB,UAAkB,KAAa,EAAE,QAAa;+CAAG,OAAO;;;gBACjD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,IAAI,eAAe,CAAC,WAAW,EAAE;oBACnD,sBAAO,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBACrE;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAEK,oCAAW,GAAjB,UAAkB,KAAa,EAAE,QAAa;+CAAG,OAAO;;;gBACjD,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,IAAI,eAAe,CAAC,WAAW,EAAE;oBACnD,sBAAO,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBACrE;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAEK,oCAAW,GAAjB,UAAkB,KAAa,EAAE,QAAa,EAAE,OAAgB,EAAE,QAAyB;+CAAG,OAAO;;;gBAC9F,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,IAAI,eAAe,CAAC,WAAW,EAAE;oBACnD,sBAAO,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBACxF;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAEK,uCAAc,GAApB,UAAqB,KAAa,EAAE,QAAa,EAAE,OAAgB,EAAE,QAAyB;+CAAG,OAAO;;;gBACjG,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1D,IAAI,eAAe,IAAI,eAAe,CAAC,cAAc,EAAE;oBACtD,sBAAO,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBAC3F;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAEK,uCAAc,GAApB,UAAqB,KAAa,EAAE,QAAa,EAAE,MAAsB,EAAE,OAAgB,EAAE,QAAyB;+CAAG,OAAO;;;gBACzH,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE3D,IAAI,iBAAiB,EAAE;oBACtB,sBAAO,iBAAiB,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,EAAC;iBACrG;qBAAM;oBACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBACjC;;;;KACD;IAED,yCAAgB,GAAhB,UAAiB,KAAa;QAC7B,IAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEzD,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,gBAAgB,EAAE,CAAC;SAC1C;QAED,IAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE3D,IAAI,iBAAiB,EAAE;YACtB,OAAO,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;SAC5C;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,2CAAkB,GAAlB,UAAmB,KAAa;QAC/B,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,eAAe,CAAC;SACvC;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,4CAAmB,GAAnB,UAAoB,KAAa;QAChC,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,gBAAgB,CAAC;SACxC;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,4CAAmB,GAAnB,UAAoB,KAAa;QAChC,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE1D,IAAI,eAAe,EAAE;YACpB,OAAO,eAAe,CAAC,gBAAgB,CAAC;SACxC;QAED,OAAO,SAAS,CAAC;IAClB,CAAC;IAEK,oCAAW,GAAjB,UAAkB,QAAa;+CAAG,OAAO;;;;;wBAClC,MAAM,GAAmC,EAAE,CAAC;4CACvC,KAAK;4BACf,IAAM,QAAQ,GAAG,OAAK,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACnD,IAAI,QAAQ,IAAI,QAAQ,CAAC,uBAAuB,EAAE;gCACjD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,WAAW;oCAC9F,IAAI,WAAW,EAAE;wCAChB,OAAqB;4CACpB,KAAK,EAAE,KAAK;4CACZ,OAAO,EAAE,WAAW,CAAC,OAAO;4CAC5B,gBAAgB,EAAE,WAAW,CAAC,gBAAgB;4CAC9C,KAAK,EAAE,WAAW,CAAC,KAAK;4CACxB,SAAS,EAAE,WAAW,CAAC,SAAS;yCAChC,CAAC;qCACF;yCAAM;wCACN,OAAO,IAAI,CAAC;qCACZ;gCACF,CAAC,CAAC,CAAC,CAAC;6BACJ;;;wBAhBF,WAAgD,EAA5B,KAAA,UAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAA5B,cAA4B,EAA5B,IAA4B;4BAArC,KAAK;oCAAL,KAAK;yBAiBf;wBAEG,oBAAoB,GAA4B,EAAE,CAAC;wBAEvD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAA,OAAO;4BACpC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC1F,CAAC,CAAC,CAAC;wBAEW,qBAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAA;;6BAAzB,CAAA,KAAA,CAAA,SAAyB,CAAA,CAAA;wBAAK,qBAAM,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAA;;wBAA/E,GAAG,iBAAqC,SAAuC,EAAC;wBAEpF,sBAAO,GAAG,EAAC;;;;KACX;IAEK,4CAAmB,GAAzB,UAA0B,QAAa;+CAAG,OAAO;;;;;wBAC5C,oBAAoB,GAAwB,EAAE,CAAC;wBAEnD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAA,OAAO;4BACpC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC1F,CAAC,CAAC,CAAC;wBAEO,qBAAM,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAA;;wBAA7C,GAAG,GAAG,SAAuC;wBACjD,sBAAO,GAAG,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,IAAO,IAAI,CAAC,IAAI,OAAT,IAAI,EAAS,IAAI,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC;;;;KAC5E;IACF,qBAAC;AAAD,CAAC,AAjRD,CAAoC,sBAAU,GAiR7C;AAjRY,wCAAc","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CommentThread, DocumentCommentProvider, CommentThreadChangedEvent, CommentInfo, Comment, CommentReaction, CommentingRanges, CommentThread2 } from 'vs/editor/common/modes';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { Range, IRange } from 'vs/editor/common/core/range';\nimport { keys } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { assign } from 'vs/base/common/objects';\nimport { ICommentThreadChangedEvent } from 'vs/workbench/contrib/comments/common/commentModel';\nimport { MainThreadCommentController } from 'vs/workbench/api/browser/mainThreadComments';\n\nexport const ICommentService = createDecorator<ICommentService>('commentService');\n\nexport interface IResourceCommentThreadEvent {\n\tresource: URI;\n\tcommentInfos: ICommentInfo[];\n}\n\nexport interface ICommentInfo extends CommentInfo {\n\towner: string;\n}\n\nexport interface IWorkspaceCommentThreadsEvent {\n\townerId: string;\n\tcommentThreads: CommentThread[];\n}\n\nexport interface ICommentService {\n\t_serviceBrand: any;\n\treadonly onDidSetResourceCommentInfos: Event<IResourceCommentThreadEvent>;\n\treadonly onDidSetAllCommentThreads: Event<IWorkspaceCommentThreadsEvent>;\n\treadonly onDidUpdateCommentThreads: Event<ICommentThreadChangedEvent>;\n\treadonly onDidChangeActiveCommentThread: Event<CommentThread | null>;\n\treadonly onDidChangeActiveCommentingRange: Event<{ range: Range, commentingRangesInfo: CommentingRanges }>;\n\treadonly onDidChangeInput: Event<string>;\n\treadonly onDidSetDataProvider: Event<void>;\n\treadonly onDidDeleteDataProvider: Event<string>;\n\tsetDocumentComments(resource: URI, commentInfos: ICommentInfo[]): void;\n\tsetWorkspaceComments(owner: string, commentsByResource: CommentThread[]): void;\n\tremoveWorkspaceComments(owner: string): void;\n\tregisterCommentController(owner: string, commentControl: MainThreadCommentController): void;\n\tunregisterCommentController(owner: string): void;\n\tregisterDataProvider(owner: string, commentProvider: DocumentCommentProvider): void;\n\tunregisterDataProvider(owner: string): void;\n\tupdateComments(ownerId: string, event: CommentThreadChangedEvent): void;\n\tcreateNewCommentThread(owner: string, resource: URI, range: Range, text: string): Promise<CommentThread | null>;\n\treplyToCommentThread(owner: string, resource: URI, range: Range, thread: CommentThread, text: string): Promise<CommentThread | null>;\n\teditComment(owner: string, resource: URI, comment: Comment, text: string): Promise<void>;\n\tdeleteComment(owner: string, resource: URI, comment: Comment): Promise<boolean>;\n\tgetComments(resource: URI): Promise<(ICommentInfo | null)[]>;\n\tgetCommentingRanges(resource: URI): Promise<IRange[]>;\n\tstartDraft(owner: string, resource: URI): void;\n\tdeleteDraft(owner: string, resource: URI): void;\n\tfinishDraft(owner: string, resource: URI): void;\n\tgetStartDraftLabel(owner: string): string | undefined;\n\tgetDeleteDraftLabel(owner: string): string | undefined;\n\tgetFinishDraftLabel(owner: string): string | undefined;\n\taddReaction(owner: string, resource: URI, comment: Comment, reaction: CommentReaction): Promise<void>;\n\tdeleteReaction(owner: string, resource: URI, comment: Comment, reaction: CommentReaction): Promise<void>;\n\tgetReactionGroup(owner: string): CommentReaction[] | undefined;\n\ttoggleReaction(owner: string, resource: URI, thread: CommentThread2, comment: Comment, reaction: CommentReaction): Promise<void>;\n\tsetActiveCommentThread(commentThread: CommentThread | null): void;\n\tsetInput(input: string): void;\n}\n\nexport class CommentService extends Disposable implements ICommentService {\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidSetDataProvider: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidSetDataProvider: Event<void> = this._onDidSetDataProvider.event;\n\n\tprivate readonly _onDidDeleteDataProvider: Emitter<string> = this._register(new Emitter<string>());\n\treadonly onDidDeleteDataProvider: Event<string> = this._onDidDeleteDataProvider.event;\n\n\tprivate readonly _onDidSetResourceCommentInfos: Emitter<IResourceCommentThreadEvent> = this._register(new Emitter<IResourceCommentThreadEvent>());\n\treadonly onDidSetResourceCommentInfos: Event<IResourceCommentThreadEvent> = this._onDidSetResourceCommentInfos.event;\n\n\tprivate readonly _onDidSetAllCommentThreads: Emitter<IWorkspaceCommentThreadsEvent> = this._register(new Emitter<IWorkspaceCommentThreadsEvent>());\n\treadonly onDidSetAllCommentThreads: Event<IWorkspaceCommentThreadsEvent> = this._onDidSetAllCommentThreads.event;\n\n\tprivate readonly _onDidUpdateCommentThreads: Emitter<ICommentThreadChangedEvent> = this._register(new Emitter<ICommentThreadChangedEvent>());\n\treadonly onDidUpdateCommentThreads: Event<ICommentThreadChangedEvent> = this._onDidUpdateCommentThreads.event;\n\n\tprivate readonly _onDidChangeActiveCommentThread = this._register(new Emitter<CommentThread | null>());\n\treadonly onDidChangeActiveCommentThread: Event<CommentThread | null> = this._onDidChangeActiveCommentThread.event;\n\n\tprivate readonly _onDidChangeInput: Emitter<string> = this._register(new Emitter<string>());\n\treadonly onDidChangeInput: Event<string> = this._onDidChangeInput.event;\n\tprivate readonly _onDidChangeActiveCommentingRange: Emitter<{\n\t\trange: Range, commentingRangesInfo:\n\t\tCommentingRanges\n\t}> = this._register(new Emitter<{\n\t\trange: Range, commentingRangesInfo:\n\t\tCommentingRanges\n\t}>());\n\treadonly onDidChangeActiveCommentingRange: Event<{ range: Range, commentingRangesInfo: CommentingRanges }> = this._onDidChangeActiveCommentingRange.event;\n\n\tprivate _commentProviders = new Map<string, DocumentCommentProvider>();\n\n\tprivate _commentControls = new Map<string, MainThreadCommentController>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetActiveCommentThread(commentThread: CommentThread | null) {\n\t\tthis._onDidChangeActiveCommentThread.fire(commentThread);\n\t}\n\n\tsetInput(input: string) {\n\t\tthis._onDidChangeInput.fire(input);\n\t}\n\n\tsetDocumentComments(resource: URI, commentInfos: ICommentInfo[]): void {\n\t\tthis._onDidSetResourceCommentInfos.fire({ resource, commentInfos });\n\t}\n\n\tsetWorkspaceComments(owner: string, commentsByResource: CommentThread[]): void {\n\t\tthis._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: commentsByResource });\n\t}\n\n\tremoveWorkspaceComments(owner: string): void {\n\t\tthis._onDidSetAllCommentThreads.fire({ ownerId: owner, commentThreads: [] });\n\t}\n\n\tregisterCommentController(owner: string, commentControl: MainThreadCommentController): void {\n\t\tthis._commentControls.set(owner, commentControl);\n\t\tthis._onDidSetDataProvider.fire();\n\t}\n\n\tunregisterCommentController(owner: string): void {\n\t\tthis._commentControls.delete(owner);\n\t\tthis._onDidDeleteDataProvider.fire(owner);\n\t}\n\n\tregisterDataProvider(owner: string, commentProvider: DocumentCommentProvider): void {\n\t\tthis._commentProviders.set(owner, commentProvider);\n\t\tthis._onDidSetDataProvider.fire();\n\t}\n\n\tunregisterDataProvider(owner: string): void {\n\t\tthis._commentProviders.delete(owner);\n\t\tthis._onDidDeleteDataProvider.fire(owner);\n\t}\n\n\tupdateComments(ownerId: string, event: CommentThreadChangedEvent): void {\n\t\tconst evt: ICommentThreadChangedEvent = assign({}, event, { owner: ownerId });\n\t\tthis._onDidUpdateCommentThreads.fire(evt);\n\t}\n\n\tasync createNewCommentThread(owner: string, resource: URI, range: Range, text: string): Promise<CommentThread | null> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn await commentProvider.createNewCommentThread(resource, range, text, CancellationToken.None);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync replyToCommentThread(owner: string, resource: URI, range: Range, thread: CommentThread, text: string): Promise<CommentThread | null> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn await commentProvider.replyToCommentThread(resource, range, thread, text, CancellationToken.None);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\teditComment(owner: string, resource: URI, comment: Comment, text: string): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.editComment(resource, comment, text, CancellationToken.None);\n\t\t}\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tdeleteComment(owner: string, resource: URI, comment: Comment): Promise<boolean> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.deleteComment(resource, comment, CancellationToken.None).then(() => true);\n\t\t}\n\n\t\treturn Promise.resolve(false);\n\t}\n\n\tasync startDraft(owner: string, resource: URI): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider && commentProvider.startDraft) {\n\t\t\treturn commentProvider.startDraft(resource, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tasync deleteDraft(owner: string, resource: URI): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider && commentProvider.deleteDraft) {\n\t\t\treturn commentProvider.deleteDraft(resource, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tasync finishDraft(owner: string, resource: URI): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider && commentProvider.finishDraft) {\n\t\t\treturn commentProvider.finishDraft(resource, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tasync addReaction(owner: string, resource: URI, comment: Comment, reaction: CommentReaction): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider && commentProvider.addReaction) {\n\t\t\treturn commentProvider.addReaction(resource, comment, reaction, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tasync deleteReaction(owner: string, resource: URI, comment: Comment, reaction: CommentReaction): Promise<void> {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider && commentProvider.deleteReaction) {\n\t\t\treturn commentProvider.deleteReaction(resource, comment, reaction, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tasync toggleReaction(owner: string, resource: URI, thread: CommentThread2, comment: Comment, reaction: CommentReaction): Promise<void> {\n\t\tconst commentController = this._commentControls.get(owner);\n\n\t\tif (commentController) {\n\t\t\treturn commentController.toggleReaction(resource, thread, comment, reaction, CancellationToken.None);\n\t\t} else {\n\t\t\tthrow new Error('Not supported');\n\t\t}\n\t}\n\n\tgetReactionGroup(owner: string): CommentReaction[] | undefined {\n\t\tconst commentProvider = this._commentControls.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.getReactionGroup();\n\t\t}\n\n\t\tconst commentController = this._commentControls.get(owner);\n\n\t\tif (commentController) {\n\t\t\treturn commentController.getReactionGroup();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetStartDraftLabel(owner: string): string | undefined {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.startDraftLabel;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetDeleteDraftLabel(owner: string): string | undefined {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.deleteDraftLabel;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetFinishDraftLabel(owner: string): string | undefined {\n\t\tconst commentProvider = this._commentProviders.get(owner);\n\n\t\tif (commentProvider) {\n\t\t\treturn commentProvider.finishDraftLabel;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync getComments(resource: URI): Promise<(ICommentInfo | null)[]> {\n\t\tconst result: Promise<ICommentInfo | null>[] = [];\n\t\tfor (const owner of keys(this._commentProviders)) {\n\t\t\tconst provider = this._commentProviders.get(owner);\n\t\t\tif (provider && provider.provideDocumentComments) {\n\t\t\t\tresult.push(provider.provideDocumentComments(resource, CancellationToken.None).then(commentInfo => {\n\t\t\t\t\tif (commentInfo) {\n\t\t\t\t\t\treturn <ICommentInfo>{\n\t\t\t\t\t\t\towner: owner,\n\t\t\t\t\t\t\tthreads: commentInfo.threads,\n\t\t\t\t\t\t\tcommentingRanges: commentInfo.commentingRanges,\n\t\t\t\t\t\t\treply: commentInfo.reply,\n\t\t\t\t\t\t\tdraftMode: commentInfo.draftMode\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tlet commentControlResult: Promise<ICommentInfo>[] = [];\n\n\t\tthis._commentControls.forEach(control => {\n\t\t\tcommentControlResult.push(control.getDocumentComments(resource, CancellationToken.None));\n\t\t});\n\n\t\tlet ret = [...await Promise.all(result), ...await Promise.all(commentControlResult)];\n\n\t\treturn ret;\n\t}\n\n\tasync getCommentingRanges(resource: URI): Promise<IRange[]> {\n\t\tlet commentControlResult: Promise<IRange[]>[] = [];\n\n\t\tthis._commentControls.forEach(control => {\n\t\t\tcommentControlResult.push(control.getCommentingRanges(resource, CancellationToken.None));\n\t\t});\n\n\t\tlet ret = await Promise.all(commentControlResult);\n\t\treturn ret.reduce((prev, curr) => { prev.push(...curr); return prev; }, []);\n\t}\n}\n"]}]}