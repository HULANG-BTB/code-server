{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/logs/common/logsActions.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/logs/common/logsActions.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar path_1 = require(\"vs/base/common/path\");\nvar environment_1 = require(\"vs/platform/environment/common/environment\");\nvar windows_1 = require(\"vs/platform/windows/common/windows\");\nvar log_1 = require(\"vs/platform/log/common/log\");\nvar quickInput_1 = require(\"vs/platform/quickinput/common/quickInput\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar OpenLogsFolderAction = /** @class */ (function (_super) {\n    tslib_1.__extends(OpenLogsFolderAction, _super);\n    function OpenLogsFolderAction(id, label, environmentService, windowsService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.environmentService = environmentService;\n        _this.windowsService = windowsService;\n        return _this;\n    }\n    OpenLogsFolderAction.prototype.run = function () {\n        return this.windowsService.showItemInFolder(uri_1.URI.file(path_1.join(this.environmentService.logsPath, 'main.log')));\n    };\n    OpenLogsFolderAction.ID = 'workbench.action.openLogsFolder';\n    OpenLogsFolderAction.LABEL = nls.localize('openLogsFolder', \"Open Logs Folder\");\n    OpenLogsFolderAction = tslib_1.__decorate([\n        tslib_1.__param(2, environment_1.IEnvironmentService),\n        tslib_1.__param(3, windows_1.IWindowsService)\n    ], OpenLogsFolderAction);\n    return OpenLogsFolderAction;\n}(actions_1.Action));\nexports.OpenLogsFolderAction = OpenLogsFolderAction;\nvar SetLogLevelAction = /** @class */ (function (_super) {\n    tslib_1.__extends(SetLogLevelAction, _super);\n    function SetLogLevelAction(id, label, quickInputService, logService) {\n        var _this = _super.call(this, id, label) || this;\n        _this.quickInputService = quickInputService;\n        _this.logService = logService;\n        return _this;\n    }\n    SetLogLevelAction.prototype.run = function () {\n        var _this = this;\n        var current = this.logService.getLevel();\n        var entries = [\n            { label: nls.localize('trace', \"Trace\"), level: log_1.LogLevel.Trace, description: this.getDescription(log_1.LogLevel.Trace, current) },\n            { label: nls.localize('debug', \"Debug\"), level: log_1.LogLevel.Debug, description: this.getDescription(log_1.LogLevel.Debug, current) },\n            { label: nls.localize('info', \"Info\"), level: log_1.LogLevel.Info, description: this.getDescription(log_1.LogLevel.Info, current) },\n            { label: nls.localize('warn', \"Warning\"), level: log_1.LogLevel.Warning, description: this.getDescription(log_1.LogLevel.Warning, current) },\n            { label: nls.localize('err', \"Error\"), level: log_1.LogLevel.Error, description: this.getDescription(log_1.LogLevel.Error, current) },\n            { label: nls.localize('critical', \"Critical\"), level: log_1.LogLevel.Critical, description: this.getDescription(log_1.LogLevel.Critical, current) },\n            { label: nls.localize('off', \"Off\"), level: log_1.LogLevel.Off, description: this.getDescription(log_1.LogLevel.Off, current) },\n        ];\n        return this.quickInputService.pick(entries, { placeHolder: nls.localize('selectLogLevel', \"Select log level\"), activeItem: entries[this.logService.getLevel()] }).then(function (entry) {\n            if (entry) {\n                _this.logService.setLevel(entry.level);\n            }\n        });\n    };\n    SetLogLevelAction.prototype.getDescription = function (level, current) {\n        if (log_1.DEFAULT_LOG_LEVEL === level && current === level) {\n            return nls.localize('default and current', \"Default & Current\");\n        }\n        if (log_1.DEFAULT_LOG_LEVEL === level) {\n            return nls.localize('default', \"Default\");\n        }\n        if (current === level) {\n            return nls.localize('current', \"Current\");\n        }\n        return undefined;\n    };\n    SetLogLevelAction.ID = 'workbench.action.setLogLevel';\n    SetLogLevelAction.LABEL = nls.localize('setLogLevel', \"Set Log Level...\");\n    SetLogLevelAction = tslib_1.__decorate([\n        tslib_1.__param(2, quickInput_1.IQuickInputService),\n        tslib_1.__param(3, log_1.ILogService)\n    ], SetLogLevelAction);\n    return SetLogLevelAction;\n}(actions_1.Action));\nexports.SetLogLevelAction = SetLogLevelAction;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/logs/common/logsActions.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/logs/common/logsActions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Action } from 'vs/base/common/actions';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IWindowsService } from 'vs/platform/windows/common/windows';\nimport { ILogService, LogLevel, DEFAULT_LOG_LEVEL } from 'vs/platform/log/common/log';\nimport { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';\nimport { URI } from 'vs/base/common/uri';\n\nexport class OpenLogsFolderAction extends Action {\n\n\tstatic ID = 'workbench.action.openLogsFolder';\n\tstatic LABEL = nls.localize('openLogsFolder', \"Open Logs Folder\");\n\n\tconstructor(id: string, label: string,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IWindowsService private readonly windowsService: IWindowsService,\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<void> {\n\t\treturn this.windowsService.showItemInFolder(URI.file(join(this.environmentService.logsPath, 'main.log')));\n\t}\n}\n\nexport class SetLogLevelAction extends Action {\n\n\tstatic ID = 'workbench.action.setLogLevel';\n\tstatic LABEL = nls.localize('setLogLevel', \"Set Log Level...\");\n\n\tconstructor(id: string, label: string,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\trun(): Promise<void> {\n\t\tconst current = this.logService.getLevel();\n\t\tconst entries = [\n\t\t\t{ label: nls.localize('trace', \"Trace\"), level: LogLevel.Trace, description: this.getDescription(LogLevel.Trace, current) },\n\t\t\t{ label: nls.localize('debug', \"Debug\"), level: LogLevel.Debug, description: this.getDescription(LogLevel.Debug, current) },\n\t\t\t{ label: nls.localize('info', \"Info\"), level: LogLevel.Info, description: this.getDescription(LogLevel.Info, current) },\n\t\t\t{ label: nls.localize('warn', \"Warning\"), level: LogLevel.Warning, description: this.getDescription(LogLevel.Warning, current) },\n\t\t\t{ label: nls.localize('err', \"Error\"), level: LogLevel.Error, description: this.getDescription(LogLevel.Error, current) },\n\t\t\t{ label: nls.localize('critical', \"Critical\"), level: LogLevel.Critical, description: this.getDescription(LogLevel.Critical, current) },\n\t\t\t{ label: nls.localize('off', \"Off\"), level: LogLevel.Off, description: this.getDescription(LogLevel.Off, current) },\n\t\t];\n\n\t\treturn this.quickInputService.pick(entries, { placeHolder: nls.localize('selectLogLevel', \"Select log level\"), activeItem: entries[this.logService.getLevel()] }).then(entry => {\n\t\t\tif (entry) {\n\t\t\t\tthis.logService.setLevel(entry.level);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getDescription(level: LogLevel, current: LogLevel): string | undefined {\n\t\tif (DEFAULT_LOG_LEVEL === level && current === level) {\n\t\t\treturn nls.localize('default and current', \"Default & Current\");\n\t\t}\n\t\tif (DEFAULT_LOG_LEVEL === level) {\n\t\t\treturn nls.localize('default', \"Default\");\n\t\t}\n\t\tif (current === level) {\n\t\t\treturn nls.localize('current', \"Current\");\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"]}]}