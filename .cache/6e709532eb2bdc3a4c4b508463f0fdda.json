{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar nls = require(\"vs/nls\");\nrequire(\"vs/css!./media/dirtydiffDecorator\");\nvar async_1 = require(\"vs/base/common/async\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar event_1 = require(\"vs/base/common/event\");\nvar codeEditorWidget_1 = require(\"vs/editor/browser/widget/codeEditorWidget\");\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nvar resolverService_1 = require(\"vs/editor/common/services/resolverService\");\nvar editorService_1 = require(\"vs/workbench/services/editor/common/editorService\");\nvar editorWorkerService_1 = require(\"vs/editor/common/services/editorWorkerService\");\nvar configuration_1 = require(\"vs/platform/configuration/common/configuration\");\nvar scm_1 = require(\"vs/workbench/contrib/scm/common/scm\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar color_1 = require(\"vs/base/common/color\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar editorExtensions_1 = require(\"vs/editor/browser/editorExtensions\");\nvar peekViewWidget_1 = require(\"vs/editor/contrib/referenceSearch/peekViewWidget\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar editorContextKeys_1 = require(\"vs/editor/common/editorContextKeys\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar numbers_1 = require(\"vs/base/common/numbers\");\nvar keybindingsRegistry_1 = require(\"vs/platform/keybinding/common/keybindingsRegistry\");\nvar referencesWidget_1 = require(\"vs/editor/contrib/referenceSearch/referencesWidget\");\nvar embeddedCodeEditorWidget_1 = require(\"vs/editor/browser/widget/embeddedCodeEditorWidget\");\nvar actions_1 = require(\"vs/base/common/actions\");\nvar actionbar_1 = require(\"vs/base/browser/ui/actionbar/actionbar\");\nvar keybinding_1 = require(\"vs/platform/keybinding/common/keybinding\");\nvar resources_1 = require(\"vs/base/common/resources\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar menuItemActionItem_1 = require(\"vs/platform/actions/browser/menuItemActionItem\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar model_1 = require(\"vs/editor/common/model\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar codeEditorService_1 = require(\"vs/editor/browser/services/codeEditorService\");\nvar contextView_1 = require(\"vs/platform/contextview/browser/contextView\");\nvar notification_1 = require(\"vs/platform/notification/common/notification\");\nvar dom_1 = require(\"vs/base/browser/dom\");\n// TODO@Joao\n// Need to subclass MenuItemActionItem in order to respect\n// the action context coming from any action bar, without breaking\n// existing users\nvar DiffMenuItemActionItem = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffMenuItemActionItem, _super);\n    function DiffMenuItemActionItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DiffMenuItemActionItem.prototype.onClick = function (event) {\n        var _this = this;\n        event.preventDefault();\n        event.stopPropagation();\n        this.actionRunner.run(this._commandAction, this._context)\n            .then(undefined, function (err) { return _this._notificationService.error(err); });\n    };\n    return DiffMenuItemActionItem;\n}(menuItemActionItem_1.MenuItemActionItem));\nvar DiffActionRunner = /** @class */ (function (_super) {\n    tslib_1.__extends(DiffActionRunner, _super);\n    function DiffActionRunner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DiffActionRunner.prototype.runAction = function (action, context) {\n        if (action instanceof actions_2.MenuItemAction) {\n            return action.run.apply(action, context);\n        }\n        return _super.prototype.runAction.call(this, action, context);\n    };\n    return DiffActionRunner;\n}(actions_1.ActionRunner));\nexports.isDirtyDiffVisible = new contextkey_1.RawContextKey('dirtyDiffVisible', false);\nfunction getChangeHeight(change) {\n    var modified = change.modifiedEndLineNumber - change.modifiedStartLineNumber + 1;\n    var original = change.originalEndLineNumber - change.originalStartLineNumber + 1;\n    if (change.originalEndLineNumber === 0) {\n        return modified;\n    }\n    else if (change.modifiedEndLineNumber === 0) {\n        return original;\n    }\n    else {\n        return modified + original;\n    }\n}\nfunction getModifiedEndLineNumber(change) {\n    if (change.modifiedEndLineNumber === 0) {\n        return change.modifiedStartLineNumber === 0 ? 1 : change.modifiedStartLineNumber;\n    }\n    else {\n        return change.modifiedEndLineNumber;\n    }\n}\nfunction lineIntersectsChange(lineNumber, change) {\n    // deletion at the beginning of the file\n    if (lineNumber === 1 && change.modifiedStartLineNumber === 0 && change.modifiedEndLineNumber === 0) {\n        return true;\n    }\n    return lineNumber >= change.modifiedStartLineNumber && lineNumber <= (change.modifiedEndLineNumber || change.modifiedStartLineNumber);\n}\nvar UIEditorAction = /** @class */ (function (_super) {\n    tslib_1.__extends(UIEditorAction, _super);\n    function UIEditorAction(editor, action, cssClass, keybindingService, instantiationService) {\n        var _this = this;\n        var keybinding = keybindingService.lookupKeybinding(action.id);\n        var label = action.label + (keybinding ? \" (\" + keybinding.getLabel() + \")\" : '');\n        _this = _super.call(this, action.id, label, cssClass) || this;\n        _this.instantiationService = instantiationService;\n        _this.action = action;\n        _this.editor = editor;\n        return _this;\n    }\n    UIEditorAction.prototype.run = function () {\n        var _this = this;\n        return Promise.resolve(this.instantiationService.invokeFunction(function (accessor) { return _this.action.run(accessor, _this.editor, null); }));\n    };\n    UIEditorAction = tslib_1.__decorate([\n        tslib_1.__param(3, keybinding_1.IKeybindingService),\n        tslib_1.__param(4, instantiation_1.IInstantiationService)\n    ], UIEditorAction);\n    return UIEditorAction;\n}(actions_1.Action));\nvar ChangeType;\n(function (ChangeType) {\n    ChangeType[ChangeType[\"Modify\"] = 0] = \"Modify\";\n    ChangeType[ChangeType[\"Add\"] = 1] = \"Add\";\n    ChangeType[ChangeType[\"Delete\"] = 2] = \"Delete\";\n})(ChangeType || (ChangeType = {}));\nfunction getChangeType(change) {\n    if (change.originalEndLineNumber === 0) {\n        return ChangeType.Add;\n    }\n    else if (change.modifiedEndLineNumber === 0) {\n        return ChangeType.Delete;\n    }\n    else {\n        return ChangeType.Modify;\n    }\n}\nfunction getChangeTypeColor(theme, changeType) {\n    switch (changeType) {\n        case ChangeType.Modify: return theme.getColor(exports.editorGutterModifiedBackground);\n        case ChangeType.Add: return theme.getColor(exports.editorGutterAddedBackground);\n        case ChangeType.Delete: return theme.getColor(exports.editorGutterDeletedBackground);\n    }\n}\nfunction getOuterEditorFromDiffEditor(accessor) {\n    var diffEditors = accessor.get(codeEditorService_1.ICodeEditorService).listDiffEditors();\n    for (var _i = 0, diffEditors_1 = diffEditors; _i < diffEditors_1.length; _i++) {\n        var diffEditor = diffEditors_1[_i];\n        if (diffEditor.hasTextFocus() && diffEditor instanceof embeddedCodeEditorWidget_1.EmbeddedDiffEditorWidget) {\n            return diffEditor.getParentEditor();\n        }\n    }\n    return peekViewWidget_1.getOuterEditor(accessor);\n}\nvar DirtyDiffWidget = /** @class */ (function (_super) {\n    tslib_1.__extends(DirtyDiffWidget, _super);\n    function DirtyDiffWidget(editor, model, themeService, instantiationService, menuService, keybindingService, notificationService, contextKeyService, contextMenuService) {\n        var _this = _super.call(this, editor, { isResizeable: true, frameWidth: 1, keepEditorSelection: true }) || this;\n        _this.model = model;\n        _this.themeService = themeService;\n        _this.instantiationService = instantiationService;\n        _this.keybindingService = keybindingService;\n        _this.notificationService = notificationService;\n        _this.contextMenuService = contextMenuService;\n        _this.height = undefined;\n        themeService.onThemeChange(_this._applyTheme, _this, _this._disposables);\n        _this._applyTheme(themeService.getTheme());\n        _this.contextKeyService = contextKeyService.createScoped();\n        _this.contextKeyService.createKey('originalResourceScheme', _this.model.original.uri.scheme);\n        _this.menu = menuService.createMenu(actions_2.MenuId.SCMChangeContext, _this.contextKeyService);\n        _this.create();\n        if (editor.hasModel()) {\n            _this.title = resources_1.basename(editor.getModel().uri);\n        }\n        else {\n            _this.title = '';\n        }\n        _this.setTitle(_this.title);\n        model.onDidChange(_this.renderTitle, _this, _this._disposables);\n        return _this;\n    }\n    DirtyDiffWidget.prototype.showChange = function (index) {\n        var _this = this;\n        var change = this.model.changes[index];\n        this.index = index;\n        this.change = change;\n        var originalModel = this.model.original;\n        if (!originalModel) {\n            return;\n        }\n        var onFirstDiffUpdate = event_1.Event.once(this.diffEditor.onDidUpdateDiff);\n        // TODO@joao TODO@alex need this setTimeout probably because the\n        // non-side-by-side diff still hasn't created the view zones\n        onFirstDiffUpdate(function () { return setTimeout(function () { return _this.revealChange(change); }, 0); });\n        this.diffEditor.setModel(this.model);\n        var position = new position_1.Position(getModifiedEndLineNumber(change), 1);\n        var lineHeight = this.editor.getConfiguration().lineHeight;\n        var editorHeight = this.editor.getLayoutInfo().height;\n        var editorHeightInLines = Math.floor(editorHeight / lineHeight);\n        var height = Math.min(getChangeHeight(change) + /* padding */ 8, Math.floor(editorHeightInLines / 3));\n        this.renderTitle();\n        var changeType = getChangeType(change);\n        var changeTypeColor = getChangeTypeColor(this.themeService.getTheme(), changeType);\n        this.style({ frameColor: changeTypeColor, arrowColor: changeTypeColor });\n        this._actionbarWidget.context = [this.model.modified.uri, this.model.changes, index];\n        this.show(position, height);\n        this.editor.focus();\n    };\n    DirtyDiffWidget.prototype.renderTitle = function () {\n        var detail = this.model.changes.length > 1\n            ? nls.localize('changes', \"{0} of {1} changes\", this.index + 1, this.model.changes.length)\n            : nls.localize('change', \"{0} of {1} change\", this.index + 1, this.model.changes.length);\n        this.setTitle(this.title, detail);\n    };\n    DirtyDiffWidget.prototype._fillHead = function (container) {\n        _super.prototype._fillHead.call(this, container);\n        var previous = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowPreviousChangeAction(), 'show-previous-change chevron-up');\n        var next = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowNextChangeAction(), 'show-next-change chevron-down');\n        this._disposables.push(previous);\n        this._disposables.push(next);\n        this._actionbarWidget.push([previous, next], { label: false, icon: true });\n        var actions = [];\n        menuItemActionItem_1.fillInActionBarActions(this.menu, { shouldForwardArgs: true }, actions);\n        this._actionbarWidget.push(actions, { label: false, icon: true });\n    };\n    DirtyDiffWidget.prototype._getActionBarOptions = function () {\n        var _this = this;\n        var actionRunner = new DiffActionRunner();\n        // close widget on successful action\n        actionRunner.onDidRun(function (e) {\n            if (!(e.action instanceof UIEditorAction) && !e.error) {\n                _this.dispose();\n            }\n        });\n        return {\n            actionRunner: actionRunner,\n            actionItemProvider: function (action) { return _this.getActionItem(action); },\n            orientation: actionbar_1.ActionsOrientation.HORIZONTAL_REVERSE\n        };\n    };\n    DirtyDiffWidget.prototype.getActionItem = function (action) {\n        if (!(action instanceof actions_2.MenuItemAction)) {\n            return undefined;\n        }\n        return new DiffMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n    };\n    DirtyDiffWidget.prototype._fillBody = function (container) {\n        var options = {\n            scrollBeyondLastLine: true,\n            scrollbar: {\n                verticalScrollbarSize: 14,\n                horizontal: 'auto',\n                useShadows: true,\n                verticalHasArrows: false,\n                horizontalHasArrows: false\n            },\n            overviewRulerLanes: 2,\n            fixedOverflowWidgets: true,\n            minimap: { enabled: false },\n            renderSideBySide: false,\n            readOnly: true,\n            ignoreTrimWhitespace: false\n        };\n        this.diffEditor = this.instantiationService.createInstance(embeddedCodeEditorWidget_1.EmbeddedDiffEditorWidget, container, options, this.editor);\n    };\n    DirtyDiffWidget.prototype._onWidth = function (width) {\n        if (typeof this.height === 'undefined') {\n            return;\n        }\n        this.diffEditor.layout({ height: this.height, width: width });\n    };\n    DirtyDiffWidget.prototype._doLayoutBody = function (height, width) {\n        _super.prototype._doLayoutBody.call(this, height, width);\n        this.diffEditor.layout({ height: height, width: width });\n        if (typeof this.height === 'undefined') {\n            this.revealChange(this.change);\n        }\n        this.height = height;\n    };\n    DirtyDiffWidget.prototype.revealChange = function (change) {\n        var start, end;\n        if (change.modifiedEndLineNumber === 0) { // deletion\n            start = change.modifiedStartLineNumber;\n            end = change.modifiedStartLineNumber + 1;\n        }\n        else if (change.originalEndLineNumber > 0) { // modification\n            start = change.modifiedStartLineNumber - 1;\n            end = change.modifiedEndLineNumber + 1;\n        }\n        else { // insertion\n            start = change.modifiedStartLineNumber;\n            end = change.modifiedEndLineNumber;\n        }\n        this.diffEditor.revealLinesInCenter(start, end, editorCommon_1.ScrollType.Immediate);\n    };\n    DirtyDiffWidget.prototype._applyTheme = function (theme) {\n        var borderColor = theme.getColor(referencesWidget_1.peekViewBorder) || color_1.Color.transparent;\n        this.style({\n            arrowColor: borderColor,\n            frameColor: borderColor,\n            headerBackgroundColor: theme.getColor(referencesWidget_1.peekViewTitleBackground) || color_1.Color.transparent,\n            primaryHeadingColor: theme.getColor(referencesWidget_1.peekViewTitleForeground),\n            secondaryHeadingColor: theme.getColor(referencesWidget_1.peekViewTitleInfoForeground)\n        });\n    };\n    DirtyDiffWidget.prototype.revealLine = function (lineNumber) {\n        this.editor.revealLineInCenterIfOutsideViewport(lineNumber, editorCommon_1.ScrollType.Smooth);\n    };\n    DirtyDiffWidget = tslib_1.__decorate([\n        tslib_1.__param(2, themeService_1.IThemeService),\n        tslib_1.__param(3, instantiation_1.IInstantiationService),\n        tslib_1.__param(4, actions_2.IMenuService),\n        tslib_1.__param(5, keybinding_1.IKeybindingService),\n        tslib_1.__param(6, notification_1.INotificationService),\n        tslib_1.__param(7, contextkey_1.IContextKeyService),\n        tslib_1.__param(8, contextView_1.IContextMenuService)\n    ], DirtyDiffWidget);\n    return DirtyDiffWidget;\n}(peekViewWidget_1.PeekViewWidget));\nvar ShowPreviousChangeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowPreviousChangeAction, _super);\n    function ShowPreviousChangeAction() {\n        return _super.call(this, {\n            id: 'editor.action.dirtydiff.previous',\n            label: nls.localize('show previous change', \"Show Previous Change\"),\n            alias: 'Show Previous Change',\n            precondition: null,\n            kbOpts: { kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus, primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.F3, weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib }\n        }) || this;\n    }\n    ShowPreviousChangeAction.prototype.run = function (accessor, editor) {\n        var outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        var controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        if (!controller.canNavigate()) {\n            return;\n        }\n        controller.previous();\n    };\n    return ShowPreviousChangeAction;\n}(editorExtensions_1.EditorAction));\nexports.ShowPreviousChangeAction = ShowPreviousChangeAction;\neditorExtensions_1.registerEditorAction(ShowPreviousChangeAction);\nvar ShowNextChangeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShowNextChangeAction, _super);\n    function ShowNextChangeAction() {\n        return _super.call(this, {\n            id: 'editor.action.dirtydiff.next',\n            label: nls.localize('show next change', \"Show Next Change\"),\n            alias: 'Show Next Change',\n            precondition: null,\n            kbOpts: { kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus, primary: keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.F3, weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib }\n        }) || this;\n    }\n    ShowNextChangeAction.prototype.run = function (accessor, editor) {\n        var outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        var controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        if (!controller.canNavigate()) {\n            return;\n        }\n        controller.next();\n    };\n    return ShowNextChangeAction;\n}(editorExtensions_1.EditorAction));\nexports.ShowNextChangeAction = ShowNextChangeAction;\neditorExtensions_1.registerEditorAction(ShowNextChangeAction);\n// Go to menu\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarGoMenu, {\n    group: '7_change_nav',\n    command: {\n        id: 'editor.action.dirtydiff.next',\n        title: nls.localize({ key: 'miGotoNextChange', comment: ['&& denotes a mnemonic'] }, \"Next &&Change\")\n    },\n    order: 1\n});\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarGoMenu, {\n    group: '7_change_nav',\n    command: {\n        id: 'editor.action.dirtydiff.previous',\n        title: nls.localize({ key: 'miGotoPreviousChange', comment: ['&& denotes a mnemonic'] }, \"Previous &&Change\")\n    },\n    order: 2\n});\nvar MoveToPreviousChangeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveToPreviousChangeAction, _super);\n    function MoveToPreviousChangeAction() {\n        return _super.call(this, {\n            id: 'workbench.action.editor.previousChange',\n            label: nls.localize('move to previous change', \"Move to Previous Change\"),\n            alias: 'Move to Previous Change',\n            precondition: null,\n            kbOpts: { kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus, primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.F5, weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib }\n        }) || this;\n    }\n    MoveToPreviousChangeAction.prototype.run = function (accessor, editor) {\n        var outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor || !outerEditor.hasModel()) {\n            return;\n        }\n        var controller = DirtyDiffController.get(outerEditor);\n        if (!controller || !controller.modelRegistry) {\n            return;\n        }\n        var lineNumber = outerEditor.getPosition().lineNumber;\n        var model = controller.modelRegistry.getModel(outerEditor.getModel());\n        if (!model || model.changes.length === 0) {\n            return;\n        }\n        var index = model.findPreviousClosestChange(lineNumber, false);\n        var change = model.changes[index];\n        var position = new position_1.Position(change.modifiedStartLineNumber, 1);\n        outerEditor.setPosition(position);\n        outerEditor.revealPositionInCenter(position);\n    };\n    return MoveToPreviousChangeAction;\n}(editorExtensions_1.EditorAction));\nexports.MoveToPreviousChangeAction = MoveToPreviousChangeAction;\neditorExtensions_1.registerEditorAction(MoveToPreviousChangeAction);\nvar MoveToNextChangeAction = /** @class */ (function (_super) {\n    tslib_1.__extends(MoveToNextChangeAction, _super);\n    function MoveToNextChangeAction() {\n        return _super.call(this, {\n            id: 'workbench.action.editor.nextChange',\n            label: nls.localize('move to next change', \"Move to Next Change\"),\n            alias: 'Move to Next Change',\n            precondition: null,\n            kbOpts: { kbExpr: editorContextKeys_1.EditorContextKeys.editorTextFocus, primary: keyCodes_1.KeyMod.Alt | keyCodes_1.KeyCode.F5, weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib }\n        }) || this;\n    }\n    MoveToNextChangeAction.prototype.run = function (accessor, editor) {\n        var outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor || !outerEditor.hasModel()) {\n            return;\n        }\n        var controller = DirtyDiffController.get(outerEditor);\n        if (!controller || !controller.modelRegistry) {\n            return;\n        }\n        var lineNumber = outerEditor.getPosition().lineNumber;\n        var model = controller.modelRegistry.getModel(outerEditor.getModel());\n        if (!model || model.changes.length === 0) {\n            return;\n        }\n        var index = model.findNextClosestChange(lineNumber, false);\n        var change = model.changes[index];\n        var position = new position_1.Position(change.modifiedStartLineNumber, 1);\n        outerEditor.setPosition(position);\n        outerEditor.revealPositionInCenter(position);\n    };\n    return MoveToNextChangeAction;\n}(editorExtensions_1.EditorAction));\nexports.MoveToNextChangeAction = MoveToNextChangeAction;\neditorExtensions_1.registerEditorAction(MoveToNextChangeAction);\nkeybindingsRegistry_1.KeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'closeDirtyDiff',\n    weight: keybindingsRegistry_1.KeybindingWeight.EditorContrib + 50,\n    primary: keyCodes_1.KeyCode.Escape,\n    secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Escape],\n    when: contextkey_1.ContextKeyExpr.and(exports.isDirtyDiffVisible),\n    handler: function (accessor) {\n        var outerEditor = getOuterEditorFromDiffEditor(accessor);\n        if (!outerEditor) {\n            return;\n        }\n        var controller = DirtyDiffController.get(outerEditor);\n        if (!controller) {\n            return;\n        }\n        controller.close();\n    }\n});\nvar DirtyDiffController = /** @class */ (function () {\n    function DirtyDiffController(editor, contextKeyService, instantiationService) {\n        var _this = this;\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.modelRegistry = null;\n        this.model = null;\n        this.widget = null;\n        this.currentIndex = -1;\n        this.session = lifecycle_1.Disposable.None;\n        this.mouseDownInfo = null;\n        this.enabled = false;\n        this.disposables = [];\n        this.enabled = !contextKeyService.getContextKeyValue('isInDiffEditor');\n        if (this.enabled) {\n            this.isDirtyDiffVisible = exports.isDirtyDiffVisible.bindTo(contextKeyService);\n            this.disposables.push(editor.onMouseDown(function (e) { return _this.onEditorMouseDown(e); }));\n            this.disposables.push(editor.onMouseUp(function (e) { return _this.onEditorMouseUp(e); }));\n            this.disposables.push(editor.onDidChangeModel(function () { return _this.close(); }));\n        }\n    }\n    DirtyDiffController.get = function (editor) {\n        return editor.getContribution(DirtyDiffController.ID);\n    };\n    DirtyDiffController.prototype.getId = function () {\n        return DirtyDiffController.ID;\n    };\n    DirtyDiffController.prototype.canNavigate = function () {\n        return this.currentIndex === -1 || (!!this.model && this.model.changes.length > 1);\n    };\n    DirtyDiffController.prototype.next = function (lineNumber) {\n        if (!this.assertWidget()) {\n            return;\n        }\n        if (!this.widget || !this.model) {\n            return;\n        }\n        if (this.editor.hasModel() && (typeof lineNumber === 'number' || this.currentIndex === -1)) {\n            this.currentIndex = this.model.findNextClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber);\n        }\n        else {\n            this.currentIndex = numbers_1.rot(this.currentIndex + 1, this.model.changes.length);\n        }\n        this.widget.showChange(this.currentIndex);\n    };\n    DirtyDiffController.prototype.previous = function (lineNumber) {\n        if (!this.assertWidget()) {\n            return;\n        }\n        if (!this.widget || !this.model) {\n            return;\n        }\n        if (this.editor.hasModel() && (typeof lineNumber === 'number' || this.currentIndex === -1)) {\n            this.currentIndex = this.model.findPreviousClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber);\n        }\n        else {\n            this.currentIndex = numbers_1.rot(this.currentIndex - 1, this.model.changes.length);\n        }\n        this.widget.showChange(this.currentIndex);\n    };\n    DirtyDiffController.prototype.close = function () {\n        this.session.dispose();\n        this.session = lifecycle_1.Disposable.None;\n    };\n    DirtyDiffController.prototype.assertWidget = function () {\n        var _this = this;\n        if (!this.enabled) {\n            return false;\n        }\n        if (this.widget) {\n            if (!this.model || this.model.changes.length === 0) {\n                this.close();\n                return false;\n            }\n            return true;\n        }\n        if (!this.modelRegistry) {\n            return false;\n        }\n        var editorModel = this.editor.getModel();\n        if (!editorModel) {\n            return false;\n        }\n        var model = this.modelRegistry.getModel(editorModel);\n        if (!model) {\n            return false;\n        }\n        if (model.changes.length === 0) {\n            return false;\n        }\n        this.currentIndex = -1;\n        this.model = model;\n        this.widget = this.instantiationService.createInstance(DirtyDiffWidget, this.editor, model);\n        this.isDirtyDiffVisible.set(true);\n        var disposables = [];\n        event_1.Event.once(this.widget.onDidClose)(this.close, this, disposables);\n        model.onDidChange(this.onDidModelChange, this, disposables);\n        disposables.push(this.widget, lifecycle_1.toDisposable(function () {\n            _this.model = null;\n            _this.widget = null;\n            _this.currentIndex = -1;\n            _this.isDirtyDiffVisible.set(false);\n            _this.editor.focus();\n        }));\n        this.session = lifecycle_1.combinedDisposable(disposables);\n        return true;\n    };\n    DirtyDiffController.prototype.onDidModelChange = function (splices) {\n        if (!this.model) {\n            return;\n        }\n        for (var _i = 0, splices_1 = splices; _i < splices_1.length; _i++) {\n            var splice = splices_1[_i];\n            if (splice.start <= this.currentIndex) {\n                if (this.currentIndex < splice.start + splice.deleteCount) {\n                    this.currentIndex = -1;\n                    this.next();\n                }\n                else {\n                    this.currentIndex = numbers_1.rot(this.currentIndex + splice.toInsert.length - splice.deleteCount - 1, this.model.changes.length);\n                    this.next();\n                }\n            }\n        }\n    };\n    DirtyDiffController.prototype.onEditorMouseDown = function (e) {\n        this.mouseDownInfo = null;\n        var range = e.target.range;\n        if (!range) {\n            return;\n        }\n        if (!e.event.leftButton) {\n            return;\n        }\n        if (e.target.type !== editorBrowser_1.MouseTargetType.GUTTER_LINE_DECORATIONS) {\n            return;\n        }\n        if (!e.target.element) {\n            return;\n        }\n        if (e.target.element.className.indexOf('dirty-diff-glyph') < 0) {\n            return;\n        }\n        var data = e.target.detail;\n        var offsetLeftInGutter = e.target.element.offsetLeft;\n        var gutterOffsetX = data.offsetX - offsetLeftInGutter;\n        // TODO@joao TODO@alex TODO@martin this is such that we don't collide with folding\n        if (gutterOffsetX < -3 || gutterOffsetX > 6) { // dirty diff decoration on hover is 9px wide\n            return;\n        }\n        this.mouseDownInfo = { lineNumber: range.startLineNumber };\n    };\n    DirtyDiffController.prototype.onEditorMouseUp = function (e) {\n        if (!this.mouseDownInfo) {\n            return;\n        }\n        var lineNumber = this.mouseDownInfo.lineNumber;\n        this.mouseDownInfo = null;\n        var range = e.target.range;\n        if (!range || range.startLineNumber !== lineNumber) {\n            return;\n        }\n        if (e.target.type !== editorBrowser_1.MouseTargetType.GUTTER_LINE_DECORATIONS) {\n            return;\n        }\n        if (!this.modelRegistry) {\n            return;\n        }\n        var editorModel = this.editor.getModel();\n        if (!editorModel) {\n            return;\n        }\n        var model = this.modelRegistry.getModel(editorModel);\n        if (!model) {\n            return;\n        }\n        var index = arrays_1.firstIndex(model.changes, function (change) { return lineIntersectsChange(lineNumber, change); });\n        if (index < 0) {\n            return;\n        }\n        if (index === this.currentIndex) {\n            this.close();\n        }\n        else {\n            this.next(lineNumber);\n        }\n    };\n    DirtyDiffController.prototype.getChanges = function () {\n        if (!this.modelRegistry) {\n            return [];\n        }\n        if (!this.editor.hasModel()) {\n            return [];\n        }\n        var model = this.modelRegistry.getModel(this.editor.getModel());\n        if (!model) {\n            return [];\n        }\n        return model.changes;\n    };\n    DirtyDiffController.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    DirtyDiffController.ID = 'editor.contrib.dirtydiff';\n    DirtyDiffController = tslib_1.__decorate([\n        tslib_1.__param(1, contextkey_1.IContextKeyService),\n        tslib_1.__param(2, instantiation_1.IInstantiationService)\n    ], DirtyDiffController);\n    return DirtyDiffController;\n}());\nexports.DirtyDiffController = DirtyDiffController;\nexports.editorGutterModifiedBackground = colorRegistry_1.registerColor('editorGutter.modifiedBackground', {\n    dark: new color_1.Color(new color_1.RGBA(12, 125, 157)),\n    light: new color_1.Color(new color_1.RGBA(102, 175, 224)),\n    hc: new color_1.Color(new color_1.RGBA(0, 73, 122))\n}, nls.localize('editorGutterModifiedBackground', \"Editor gutter background color for lines that are modified.\"));\nexports.editorGutterAddedBackground = colorRegistry_1.registerColor('editorGutter.addedBackground', {\n    dark: new color_1.Color(new color_1.RGBA(88, 124, 12)),\n    light: new color_1.Color(new color_1.RGBA(129, 184, 139)),\n    hc: new color_1.Color(new color_1.RGBA(27, 82, 37))\n}, nls.localize('editorGutterAddedBackground', \"Editor gutter background color for lines that are added.\"));\nexports.editorGutterDeletedBackground = colorRegistry_1.registerColor('editorGutter.deletedBackground', {\n    dark: new color_1.Color(new color_1.RGBA(148, 21, 27)),\n    light: new color_1.Color(new color_1.RGBA(202, 75, 81)),\n    hc: new color_1.Color(new color_1.RGBA(141, 14, 20))\n}, nls.localize('editorGutterDeletedBackground', \"Editor gutter background color for lines that are deleted.\"));\nvar overviewRulerDefault = new color_1.Color(new color_1.RGBA(0, 122, 204, 0.6));\nexports.overviewRulerModifiedForeground = colorRegistry_1.registerColor('editorOverviewRuler.modifiedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerModifiedForeground', 'Overview ruler marker color for modified content.'));\nexports.overviewRulerAddedForeground = colorRegistry_1.registerColor('editorOverviewRuler.addedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerAddedForeground', 'Overview ruler marker color for added content.'));\nexports.overviewRulerDeletedForeground = colorRegistry_1.registerColor('editorOverviewRuler.deletedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerDeletedForeground', 'Overview ruler marker color for deleted content.'));\nvar DirtyDiffDecorator = /** @class */ (function () {\n    function DirtyDiffDecorator(editorModel, model, configurationService) {\n        this.model = model;\n        this.decorations = [];\n        this.disposables = [];\n        this.editorModel = editorModel;\n        var decorations = configurationService.getValue('scm.diffDecorations');\n        var gutter = decorations === 'all' || decorations === 'gutter';\n        var overview = decorations === 'all' || decorations === 'overview';\n        var options = { gutter: gutter, overview: overview, isWholeLine: true };\n        this.modifiedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-modified', exports.overviewRulerModifiedForeground, options);\n        this.addedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-added', exports.overviewRulerAddedForeground, options);\n        this.deletedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-deleted', exports.overviewRulerDeletedForeground, tslib_1.__assign({}, options, { isWholeLine: false }));\n        model.onDidChange(this.onDidChange, this, this.disposables);\n    }\n    DirtyDiffDecorator.createDecoration = function (className, foregroundColor, options) {\n        var decorationOptions = {\n            isWholeLine: options.isWholeLine,\n        };\n        if (options.gutter) {\n            decorationOptions.linesDecorationsClassName = \"dirty-diff-glyph \" + className;\n        }\n        if (options.overview) {\n            decorationOptions.overviewRuler = {\n                color: themeService_1.themeColorFromId(foregroundColor),\n                position: model_1.OverviewRulerLane.Left\n            };\n        }\n        return textModel_1.ModelDecorationOptions.createDynamic(decorationOptions);\n    };\n    DirtyDiffDecorator.prototype.onDidChange = function () {\n        var _this = this;\n        if (!this.editorModel) {\n            return;\n        }\n        var decorations = this.model.changes.map(function (change) {\n            var changeType = getChangeType(change);\n            var startLineNumber = change.modifiedStartLineNumber;\n            var endLineNumber = change.modifiedEndLineNumber || startLineNumber;\n            switch (changeType) {\n                case ChangeType.Add:\n                    return {\n                        range: {\n                            startLineNumber: startLineNumber, startColumn: 1,\n                            endLineNumber: endLineNumber, endColumn: 1\n                        },\n                        options: _this.addedOptions\n                    };\n                case ChangeType.Delete:\n                    return {\n                        range: {\n                            startLineNumber: startLineNumber, startColumn: Number.MAX_VALUE,\n                            endLineNumber: startLineNumber, endColumn: Number.MAX_VALUE\n                        },\n                        options: _this.deletedOptions\n                    };\n                case ChangeType.Modify:\n                    return {\n                        range: {\n                            startLineNumber: startLineNumber, startColumn: 1,\n                            endLineNumber: endLineNumber, endColumn: 1\n                        },\n                        options: _this.modifiedOptions\n                    };\n            }\n        });\n        this.decorations = this.editorModel.deltaDecorations(this.decorations, decorations);\n    };\n    DirtyDiffDecorator.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        if (this.editorModel && !this.editorModel.isDisposed()) {\n            this.editorModel.deltaDecorations(this.decorations, []);\n        }\n        this.editorModel = null;\n        this.decorations = [];\n    };\n    DirtyDiffDecorator = tslib_1.__decorate([\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], DirtyDiffDecorator);\n    return DirtyDiffDecorator;\n}());\nfunction compareChanges(a, b) {\n    var result = a.modifiedStartLineNumber - b.modifiedStartLineNumber;\n    if (result !== 0) {\n        return result;\n    }\n    result = a.modifiedEndLineNumber - b.modifiedEndLineNumber;\n    if (result !== 0) {\n        return result;\n    }\n    result = a.originalStartLineNumber - b.originalStartLineNumber;\n    if (result !== 0) {\n        return result;\n    }\n    return a.originalEndLineNumber - b.originalEndLineNumber;\n}\nvar DirtyDiffModel = /** @class */ (function () {\n    function DirtyDiffModel(editorModel, scmService, editorWorkerService, textModelResolverService) {\n        var _this = this;\n        this.scmService = scmService;\n        this.editorWorkerService = editorWorkerService;\n        this.textModelResolverService = textModelResolverService;\n        this.repositoryDisposables = new Set();\n        this.originalModelDisposables = [];\n        this.disposables = [];\n        this._onDidChange = new event_1.Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._changes = [];\n        this._editorModel = editorModel;\n        this.diffDelayer = new async_1.ThrottledDelayer(200);\n        this.disposables.push(editorModel.onDidChangeContent(function () { return _this.triggerDiff(); }));\n        scmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n        scmService.repositories.forEach(function (r) { return _this.onDidAddRepository(r); });\n        this.triggerDiff();\n    }\n    Object.defineProperty(DirtyDiffModel.prototype, \"original\", {\n        get: function () { return this._originalModel; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirtyDiffModel.prototype, \"modified\", {\n        get: function () { return this._editorModel; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirtyDiffModel.prototype, \"changes\", {\n        get: function () {\n            return this._changes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DirtyDiffModel.prototype.onDidAddRepository = function (repository) {\n        var _this = this;\n        var disposables = [];\n        this.repositoryDisposables.add(disposables);\n        disposables.push(lifecycle_1.toDisposable(function () { return _this.repositoryDisposables.delete(disposables); }));\n        var onDidChange = event_1.Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n        onDidChange(this.triggerDiff, this, disposables);\n        var onDidRemoveThis = event_1.Event.filter(this.scmService.onDidRemoveRepository, function (r) { return r === repository; });\n        onDidRemoveThis(function () { return lifecycle_1.dispose(disposables); }, null, disposables);\n        this.triggerDiff();\n    };\n    DirtyDiffModel.prototype.triggerDiff = function () {\n        var _this = this;\n        if (!this.diffDelayer) {\n            return Promise.resolve(null);\n        }\n        return this.diffDelayer\n            .trigger(function () { return _this.diff(); })\n            .then(function (changes) {\n            if (!_this._editorModel || _this._editorModel.isDisposed() || !_this._originalModel || _this._originalModel.isDisposed()) {\n                return; // disposed\n            }\n            if (_this._originalModel.getValueLength() === 0) {\n                changes = [];\n            }\n            var diff = arrays_1.sortedDiff(_this._changes, changes, compareChanges);\n            _this._changes = changes;\n            if (diff.length > 0) {\n                _this._onDidChange.fire(diff);\n            }\n        });\n    };\n    DirtyDiffModel.prototype.diff = function () {\n        var _this = this;\n        return this.getOriginalURIPromise().then(function (originalURI) {\n            if (!_this._editorModel || _this._editorModel.isDisposed() || !originalURI) {\n                return Promise.resolve([]); // disposed\n            }\n            if (!_this.editorWorkerService.canComputeDirtyDiff(originalURI, _this._editorModel.uri)) {\n                return Promise.resolve([]); // Files too large\n            }\n            return _this.editorWorkerService.computeDirtyDiff(originalURI, _this._editorModel.uri, false);\n        });\n    };\n    DirtyDiffModel.prototype.getOriginalURIPromise = function () {\n        var _this = this;\n        if (this._originalURIPromise) {\n            return this._originalURIPromise;\n        }\n        this._originalURIPromise = this.getOriginalResource().then(function (originalUri) {\n            if (!_this._editorModel) { // disposed\n                return null;\n            }\n            if (!originalUri) {\n                _this._originalModel = null;\n                return null;\n            }\n            if (_this._originalModel && _this._originalModel.uri.toString() === originalUri.toString()) {\n                return originalUri;\n            }\n            return _this.textModelResolverService.createModelReference(originalUri).then(function (ref) {\n                if (!_this._editorModel) { // disposed\n                    return null;\n                }\n                _this._originalModel = ref.object.textEditorModel;\n                var originalModelDisposables = [];\n                originalModelDisposables.push(ref);\n                originalModelDisposables.push(ref.object.textEditorModel.onDidChangeContent(function () { return _this.triggerDiff(); }));\n                lifecycle_1.dispose(_this.originalModelDisposables);\n                _this.originalModelDisposables = originalModelDisposables;\n                return originalUri;\n            });\n        });\n        return this._originalURIPromise.finally(function () {\n            _this._originalURIPromise = undefined;\n        });\n    };\n    DirtyDiffModel.prototype.getOriginalResource = function () {\n        if (!this._editorModel) {\n            return Promise.resolve(null);\n        }\n        var uri = this._editorModel.uri;\n        return async_1.first(this.scmService.repositories.map(function (r) { return function () { return r.provider.getOriginalResource(uri); }; }));\n    };\n    DirtyDiffModel.prototype.findNextClosestChange = function (lineNumber, inclusive) {\n        if (inclusive === void 0) { inclusive = true; }\n        for (var i = 0; i < this.changes.length; i++) {\n            var change = this.changes[i];\n            if (inclusive) {\n                if (getModifiedEndLineNumber(change) >= lineNumber) {\n                    return i;\n                }\n            }\n            else {\n                if (change.modifiedStartLineNumber > lineNumber) {\n                    return i;\n                }\n            }\n        }\n        return 0;\n    };\n    DirtyDiffModel.prototype.findPreviousClosestChange = function (lineNumber, inclusive) {\n        if (inclusive === void 0) { inclusive = true; }\n        for (var i = this.changes.length - 1; i >= 0; i--) {\n            var change = this.changes[i];\n            if (inclusive) {\n                if (change.modifiedStartLineNumber <= lineNumber) {\n                    return i;\n                }\n            }\n            else {\n                if (getModifiedEndLineNumber(change) < lineNumber) {\n                    return i;\n                }\n            }\n        }\n        return this.changes.length - 1;\n    };\n    DirtyDiffModel.prototype.dispose = function () {\n        this.originalModelDisposables = lifecycle_1.dispose(this.originalModelDisposables);\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        this._editorModel = null;\n        this._originalModel = null;\n        if (this.diffDelayer) {\n            this.diffDelayer.cancel();\n            this.diffDelayer = null;\n        }\n        this.repositoryDisposables.forEach(function (d) { return lifecycle_1.dispose(d); });\n        this.repositoryDisposables.clear();\n    };\n    DirtyDiffModel = tslib_1.__decorate([\n        tslib_1.__param(1, scm_1.ISCMService),\n        tslib_1.__param(2, editorWorkerService_1.IEditorWorkerService),\n        tslib_1.__param(3, resolverService_1.ITextModelService)\n    ], DirtyDiffModel);\n    return DirtyDiffModel;\n}());\nexports.DirtyDiffModel = DirtyDiffModel;\nvar DirtyDiffItem = /** @class */ (function () {\n    function DirtyDiffItem(model, decorator) {\n        this.model = model;\n        this.decorator = decorator;\n    }\n    DirtyDiffItem.prototype.dispose = function () {\n        this.decorator.dispose();\n        this.model.dispose();\n    };\n    return DirtyDiffItem;\n}());\nvar DirtyDiffWorkbenchController = /** @class */ (function () {\n    function DirtyDiffWorkbenchController(editorService, instantiationService, configurationService) {\n        var _this = this;\n        this.editorService = editorService;\n        this.instantiationService = instantiationService;\n        this.configurationService = configurationService;\n        this.enabled = false;\n        this.models = [];\n        this.items = Object.create(null);\n        this.transientDisposables = [];\n        this.disposables = [];\n        this.stylesheet = dom_1.createStyleSheet();\n        this.disposables.push(lifecycle_1.toDisposable(function () { return _this.stylesheet.parentElement.removeChild(_this.stylesheet); }));\n        var onDidChangeConfiguration = event_1.Event.filter(configurationService.onDidChangeConfiguration, function (e) { return e.affectsConfiguration('scm.diffDecorations'); });\n        onDidChangeConfiguration(this.onDidChangeConfiguration, this, this.disposables);\n        this.onDidChangeConfiguration();\n        var onDidChangeDiffWidthConfiguration = event_1.Event.filter(configurationService.onDidChangeConfiguration, function (e) { return e.affectsConfiguration('scm.diffDecorationsGutterWidth'); });\n        onDidChangeDiffWidthConfiguration(this.onDidChangeDiffWidthConfiguration, this);\n        this.onDidChangeDiffWidthConfiguration();\n    }\n    DirtyDiffWorkbenchController.prototype.onDidChangeConfiguration = function () {\n        var enabled = this.configurationService.getValue('scm.diffDecorations') !== 'none';\n        if (enabled) {\n            this.enable();\n        }\n        else {\n            this.disable();\n        }\n    };\n    DirtyDiffWorkbenchController.prototype.onDidChangeDiffWidthConfiguration = function () {\n        var width = this.configurationService.getValue('scm.diffDecorationsGutterWidth');\n        if (isNaN(width) || width <= 0 || width > 5) {\n            width = 3;\n        }\n        this.stylesheet.innerHTML = \".monaco-editor .dirty-diff-modified,.monaco-editor .dirty-diff-added{border-left-width:\" + width + \"px;}\";\n    };\n    DirtyDiffWorkbenchController.prototype.enable = function () {\n        var _this = this;\n        if (this.enabled) {\n            this.disable();\n        }\n        this.transientDisposables.push(this.editorService.onDidVisibleEditorsChange(function () { return _this.onEditorsChanged(); }));\n        this.onEditorsChanged();\n        this.enabled = true;\n    };\n    DirtyDiffWorkbenchController.prototype.disable = function () {\n        var _this = this;\n        if (!this.enabled) {\n            return;\n        }\n        this.transientDisposables = lifecycle_1.dispose(this.transientDisposables);\n        this.models.forEach(function (m) { return _this.items[m.id].dispose(); });\n        this.models = [];\n        this.items = Object.create(null);\n        this.enabled = false;\n    };\n    // HACK: This is the best current way of figuring out whether to draw these decorations\n    // or not. Needs context from the editor, to know whether it is a diff editor, in place editor\n    // etc.\n    DirtyDiffWorkbenchController.prototype.onEditorsChanged = function () {\n        var _this = this;\n        var models = this.editorService.visibleTextEditorWidgets\n            // only interested in code editor widgets\n            .filter(function (c) { return c instanceof codeEditorWidget_1.CodeEditorWidget; })\n            // set model registry and map to models\n            .map(function (editor) {\n            var codeEditor = editor;\n            var controller = DirtyDiffController.get(codeEditor);\n            controller.modelRegistry = _this;\n            return codeEditor.getModel();\n        })\n            // remove nulls and duplicates\n            .filter(function (m, i, a) { return !!m && !!m.uri && a.indexOf(m, i + 1) === -1; });\n        var newModels = models.filter(function (o) { return _this.models.every(function (m) { return o !== m; }); });\n        var oldModels = this.models.filter(function (m) { return models.every(function (o) { return o !== m; }); });\n        oldModels.forEach(function (m) { return _this.onModelInvisible(m); });\n        newModels.forEach(function (m) { return _this.onModelVisible(m); });\n        this.models = models;\n    };\n    DirtyDiffWorkbenchController.prototype.onModelVisible = function (editorModel) {\n        var model = this.instantiationService.createInstance(DirtyDiffModel, editorModel);\n        var decorator = new DirtyDiffDecorator(editorModel, model, this.configurationService);\n        this.items[editorModel.id] = new DirtyDiffItem(model, decorator);\n    };\n    DirtyDiffWorkbenchController.prototype.onModelInvisible = function (editorModel) {\n        this.items[editorModel.id].dispose();\n        delete this.items[editorModel.id];\n    };\n    DirtyDiffWorkbenchController.prototype.getModel = function (editorModel) {\n        var item = this.items[editorModel.id];\n        if (!item) {\n            return null;\n        }\n        return item.model;\n    };\n    DirtyDiffWorkbenchController.prototype.dispose = function () {\n        this.disable();\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    DirtyDiffWorkbenchController = tslib_1.__decorate([\n        tslib_1.__param(0, editorService_1.IEditorService),\n        tslib_1.__param(1, instantiation_1.IInstantiationService),\n        tslib_1.__param(2, configuration_1.IConfigurationService)\n    ], DirtyDiffWorkbenchController);\n    return DirtyDiffWorkbenchController;\n}());\nexports.DirtyDiffWorkbenchController = DirtyDiffWorkbenchController;\neditorExtensions_1.registerEditorContribution(DirtyDiffController);\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var editorGutterModifiedBackgroundColor = theme.getColor(exports.editorGutterModifiedBackground);\n    if (editorGutterModifiedBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .dirty-diff-modified {\\n\\t\\t\\t\\tborder-left: 3px solid \" + editorGutterModifiedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .dirty-diff-modified:before {\\n\\t\\t\\t\\tbackground: \" + editorGutterModifiedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var editorGutterAddedBackgroundColor = theme.getColor(exports.editorGutterAddedBackground);\n    if (editorGutterAddedBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .dirty-diff-added {\\n\\t\\t\\t\\tborder-left: 3px solid \" + editorGutterAddedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .dirty-diff-added:before {\\n\\t\\t\\t\\tbackground: \" + editorGutterAddedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n    var editorGutteDeletedBackgroundColor = theme.getColor(exports.editorGutterDeletedBackground);\n    if (editorGutteDeletedBackgroundColor) {\n        collector.addRule(\"\\n\\t\\t\\t.monaco-editor .dirty-diff-deleted:after {\\n\\t\\t\\t\\tborder-left: 4px solid \" + editorGutteDeletedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.monaco-editor .dirty-diff-deleted:before {\\n\\t\\t\\t\\tbackground: \" + editorGutteDeletedBackgroundColor + \";\\n\\t\\t\\t}\\n\\t\\t\");\n    }\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nimport 'vs/css!./media/dirtydiffDecorator';\nimport { ThrottledDelayer, first } from 'vs/base/common/async';\nimport { IDisposable, dispose, toDisposable, Disposable, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as ext from 'vs/workbench/common/contributions';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorkerService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { URI } from 'vs/base/common/uri';\nimport { ISCMService, ISCMRepository } from 'vs/workbench/contrib/scm/common/scm';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { registerThemingParticipant, ITheme, ICssStyleCollector, themeColorFromId, IThemeService } from 'vs/platform/theme/common/themeService';\nimport { registerColor } from 'vs/platform/theme/common/colorRegistry';\nimport { Color, RGBA } from 'vs/base/common/color';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';\nimport { registerEditorAction, registerEditorContribution, ServicesAccessor, EditorAction } from 'vs/editor/browser/editorExtensions';\nimport { PeekViewWidget, getOuterEditor } from 'vs/editor/contrib/referenceSearch/peekViewWidget';\nimport { IContextKeyService, IContextKey, ContextKeyExpr, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { EditorContextKeys } from 'vs/editor/common/editorContextKeys';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { Position } from 'vs/editor/common/core/position';\nimport { rot } from 'vs/base/common/numbers';\nimport { KeybindingsRegistry, KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { peekViewBorder, peekViewTitleBackground, peekViewTitleForeground, peekViewTitleInfoForeground } from 'vs/editor/contrib/referenceSearch/referencesWidget';\nimport { EmbeddedDiffEditorWidget } from 'vs/editor/browser/widget/embeddedCodeEditorWidget';\nimport { IDiffEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { Action, IAction, ActionRunner } from 'vs/base/common/actions';\nimport { IActionBarOptions, ActionsOrientation, IActionItem } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';\nimport { basename } from 'vs/base/common/resources';\nimport { MenuId, IMenuService, IMenu, MenuItemAction, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { MenuItemActionItem, fillInActionBarActions } from 'vs/platform/actions/browser/menuItemActionItem';\nimport { IChange, IEditorModel, ScrollType, IEditorContribution, IDiffEditorModel } from 'vs/editor/common/editorCommon';\nimport { OverviewRulerLane, ITextModel, IModelDecorationOptions } from 'vs/editor/common/model';\nimport { sortedDiff, firstIndex } from 'vs/base/common/arrays';\nimport { IMarginData } from 'vs/editor/browser/controller/mouseTarget';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { createStyleSheet } from 'vs/base/browser/dom';\n\n// TODO@Joao\n// Need to subclass MenuItemActionItem in order to respect\n// the action context coming from any action bar, without breaking\n// existing users\nclass DiffMenuItemActionItem extends MenuItemActionItem {\n\n\tonClick(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.actionRunner.run(this._commandAction, this._context)\n\t\t\t.then(undefined, err => this._notificationService.error(err));\n\t}\n}\n\nclass DiffActionRunner extends ActionRunner {\n\n\trunAction(action: IAction, context: any): Promise<any> {\n\t\tif (action instanceof MenuItemAction) {\n\t\t\treturn action.run(...context);\n\t\t}\n\n\t\treturn super.runAction(action, context);\n\t}\n}\n\nexport interface IModelRegistry {\n\tgetModel(editorModel: IEditorModel): DirtyDiffModel | null;\n}\n\nexport const isDirtyDiffVisible = new RawContextKey<boolean>('dirtyDiffVisible', false);\n\nfunction getChangeHeight(change: IChange): number {\n\tconst modified = change.modifiedEndLineNumber - change.modifiedStartLineNumber + 1;\n\tconst original = change.originalEndLineNumber - change.originalStartLineNumber + 1;\n\n\tif (change.originalEndLineNumber === 0) {\n\t\treturn modified;\n\t} else if (change.modifiedEndLineNumber === 0) {\n\t\treturn original;\n\t} else {\n\t\treturn modified + original;\n\t}\n}\n\nfunction getModifiedEndLineNumber(change: IChange): number {\n\tif (change.modifiedEndLineNumber === 0) {\n\t\treturn change.modifiedStartLineNumber === 0 ? 1 : change.modifiedStartLineNumber;\n\t} else {\n\t\treturn change.modifiedEndLineNumber;\n\t}\n}\n\nfunction lineIntersectsChange(lineNumber: number, change: IChange): boolean {\n\t// deletion at the beginning of the file\n\tif (lineNumber === 1 && change.modifiedStartLineNumber === 0 && change.modifiedEndLineNumber === 0) {\n\t\treturn true;\n\t}\n\n\treturn lineNumber >= change.modifiedStartLineNumber && lineNumber <= (change.modifiedEndLineNumber || change.modifiedStartLineNumber);\n}\n\nclass UIEditorAction extends Action {\n\n\tprivate editor: ICodeEditor;\n\tprivate action: EditorAction;\n\tprivate instantiationService: IInstantiationService;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\taction: EditorAction,\n\t\tcssClass: string,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tconst keybinding = keybindingService.lookupKeybinding(action.id);\n\t\tconst label = action.label + (keybinding ? ` (${keybinding.getLabel()})` : '');\n\n\t\tsuper(action.id, label, cssClass);\n\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.action = action;\n\t\tthis.editor = editor;\n\t}\n\n\trun(): Promise<any> {\n\t\treturn Promise.resolve(this.instantiationService.invokeFunction(accessor => this.action.run(accessor, this.editor, null)));\n\t}\n}\n\nenum ChangeType {\n\tModify,\n\tAdd,\n\tDelete\n}\n\nfunction getChangeType(change: IChange): ChangeType {\n\tif (change.originalEndLineNumber === 0) {\n\t\treturn ChangeType.Add;\n\t} else if (change.modifiedEndLineNumber === 0) {\n\t\treturn ChangeType.Delete;\n\t} else {\n\t\treturn ChangeType.Modify;\n\t}\n}\n\nfunction getChangeTypeColor(theme: ITheme, changeType: ChangeType): Color | undefined {\n\tswitch (changeType) {\n\t\tcase ChangeType.Modify: return theme.getColor(editorGutterModifiedBackground);\n\t\tcase ChangeType.Add: return theme.getColor(editorGutterAddedBackground);\n\t\tcase ChangeType.Delete: return theme.getColor(editorGutterDeletedBackground);\n\t}\n}\n\nfunction getOuterEditorFromDiffEditor(accessor: ServicesAccessor): ICodeEditor | null {\n\tconst diffEditors = accessor.get(ICodeEditorService).listDiffEditors();\n\n\tfor (const diffEditor of diffEditors) {\n\t\tif (diffEditor.hasTextFocus() && diffEditor instanceof EmbeddedDiffEditorWidget) {\n\t\t\treturn diffEditor.getParentEditor();\n\t\t}\n\t}\n\n\treturn getOuterEditor(accessor);\n}\n\nclass DirtyDiffWidget extends PeekViewWidget {\n\n\tprivate diffEditor: EmbeddedDiffEditorWidget;\n\tprivate title: string;\n\tprivate menu: IMenu;\n\tprivate index: number;\n\tprivate change: IChange;\n\tprivate height: number | undefined = undefined;\n\tprivate contextKeyService: IContextKeyService;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tprivate model: DirtyDiffModel,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService\n\t) {\n\t\tsuper(editor, { isResizeable: true, frameWidth: 1, keepEditorSelection: true });\n\n\t\tthemeService.onThemeChange(this._applyTheme, this, this._disposables);\n\t\tthis._applyTheme(themeService.getTheme());\n\n\t\tthis.contextKeyService = contextKeyService.createScoped();\n\t\tthis.contextKeyService.createKey('originalResourceScheme', this.model.original!.uri.scheme);\n\t\tthis.menu = menuService.createMenu(MenuId.SCMChangeContext, this.contextKeyService);\n\n\t\tthis.create();\n\t\tif (editor.hasModel()) {\n\t\t\tthis.title = basename(editor.getModel().uri);\n\t\t} else {\n\t\t\tthis.title = '';\n\t\t}\n\t\tthis.setTitle(this.title);\n\n\t\tmodel.onDidChange(this.renderTitle, this, this._disposables);\n\t}\n\n\tshowChange(index: number): void {\n\t\tconst change = this.model.changes[index];\n\t\tthis.index = index;\n\t\tthis.change = change;\n\n\t\tconst originalModel = this.model.original;\n\n\t\tif (!originalModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onFirstDiffUpdate = Event.once(this.diffEditor.onDidUpdateDiff);\n\n\t\t// TODO@joao TODO@alex need this setTimeout probably because the\n\t\t// non-side-by-side diff still hasn't created the view zones\n\t\tonFirstDiffUpdate(() => setTimeout(() => this.revealChange(change), 0));\n\n\t\tthis.diffEditor.setModel(this.model as IDiffEditorModel);\n\n\t\tconst position = new Position(getModifiedEndLineNumber(change), 1);\n\n\t\tconst lineHeight = this.editor.getConfiguration().lineHeight;\n\t\tconst editorHeight = this.editor.getLayoutInfo().height;\n\t\tconst editorHeightInLines = Math.floor(editorHeight / lineHeight);\n\t\tconst height = Math.min(getChangeHeight(change) + /* padding */ 8, Math.floor(editorHeightInLines / 3));\n\n\t\tthis.renderTitle();\n\n\t\tconst changeType = getChangeType(change);\n\t\tconst changeTypeColor = getChangeTypeColor(this.themeService.getTheme(), changeType);\n\t\tthis.style({ frameColor: changeTypeColor, arrowColor: changeTypeColor });\n\n\t\tthis._actionbarWidget.context = [this.model.modified!.uri, this.model.changes, index];\n\t\tthis.show(position, height);\n\t\tthis.editor.focus();\n\t}\n\n\tprivate renderTitle(): void {\n\t\tconst detail = this.model.changes.length > 1\n\t\t\t? nls.localize('changes', \"{0} of {1} changes\", this.index + 1, this.model.changes.length)\n\t\t\t: nls.localize('change', \"{0} of {1} change\", this.index + 1, this.model.changes.length);\n\n\t\tthis.setTitle(this.title, detail);\n\t}\n\n\tprotected _fillHead(container: HTMLElement): void {\n\t\tsuper._fillHead(container);\n\n\t\tconst previous = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowPreviousChangeAction(), 'show-previous-change chevron-up');\n\t\tconst next = this.instantiationService.createInstance(UIEditorAction, this.editor, new ShowNextChangeAction(), 'show-next-change chevron-down');\n\n\t\tthis._disposables.push(previous);\n\t\tthis._disposables.push(next);\n\t\tthis._actionbarWidget.push([previous, next], { label: false, icon: true });\n\n\t\tconst actions: IAction[] = [];\n\t\tfillInActionBarActions(this.menu, { shouldForwardArgs: true }, actions);\n\t\tthis._actionbarWidget.push(actions, { label: false, icon: true });\n\t}\n\n\tprotected _getActionBarOptions(): IActionBarOptions {\n\t\tconst actionRunner = new DiffActionRunner();\n\n\t\t// close widget on successful action\n\t\tactionRunner.onDidRun(e => {\n\t\t\tif (!(e.action instanceof UIEditorAction) && !e.error) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tactionRunner,\n\t\t\tactionItemProvider: action => this.getActionItem(action),\n\t\t\torientation: ActionsOrientation.HORIZONTAL_REVERSE\n\t\t};\n\t}\n\n\tgetActionItem(action: IAction): IActionItem | undefined {\n\t\tif (!(action instanceof MenuItemAction)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new DiffMenuItemActionItem(action, this.keybindingService, this.notificationService, this.contextMenuService);\n\t}\n\n\tprotected _fillBody(container: HTMLElement): void {\n\t\tconst options: IDiffEditorOptions = {\n\t\t\tscrollBeyondLastLine: true,\n\t\t\tscrollbar: {\n\t\t\t\tverticalScrollbarSize: 14,\n\t\t\t\thorizontal: 'auto',\n\t\t\t\tuseShadows: true,\n\t\t\t\tverticalHasArrows: false,\n\t\t\t\thorizontalHasArrows: false\n\t\t\t},\n\t\t\toverviewRulerLanes: 2,\n\t\t\tfixedOverflowWidgets: true,\n\t\t\tminimap: { enabled: false },\n\t\t\trenderSideBySide: false,\n\t\t\treadOnly: true,\n\t\t\tignoreTrimWhitespace: false\n\t\t};\n\n\t\tthis.diffEditor = this.instantiationService.createInstance(EmbeddedDiffEditorWidget, container, options, this.editor);\n\t}\n\n\t_onWidth(width: number): void {\n\t\tif (typeof this.height === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.diffEditor.layout({ height: this.height, width });\n\t}\n\n\tprotected _doLayoutBody(height: number, width: number): void {\n\t\tsuper._doLayoutBody(height, width);\n\t\tthis.diffEditor.layout({ height, width });\n\n\t\tif (typeof this.height === 'undefined') {\n\t\t\tthis.revealChange(this.change);\n\t\t}\n\n\t\tthis.height = height;\n\t}\n\n\tprivate revealChange(change: IChange): void {\n\t\tlet start: number, end: number;\n\n\t\tif (change.modifiedEndLineNumber === 0) { // deletion\n\t\t\tstart = change.modifiedStartLineNumber;\n\t\t\tend = change.modifiedStartLineNumber + 1;\n\t\t} else if (change.originalEndLineNumber > 0) { // modification\n\t\t\tstart = change.modifiedStartLineNumber - 1;\n\t\t\tend = change.modifiedEndLineNumber + 1;\n\t\t} else { // insertion\n\t\t\tstart = change.modifiedStartLineNumber;\n\t\t\tend = change.modifiedEndLineNumber;\n\t\t}\n\n\t\tthis.diffEditor.revealLinesInCenter(start, end, ScrollType.Immediate);\n\t}\n\n\tprivate _applyTheme(theme: ITheme) {\n\t\tconst borderColor = theme.getColor(peekViewBorder) || Color.transparent;\n\t\tthis.style({\n\t\t\tarrowColor: borderColor,\n\t\t\tframeColor: borderColor,\n\t\t\theaderBackgroundColor: theme.getColor(peekViewTitleBackground) || Color.transparent,\n\t\t\tprimaryHeadingColor: theme.getColor(peekViewTitleForeground),\n\t\t\tsecondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\n\t\t});\n\t}\n\n\tprotected revealLine(lineNumber: number) {\n\t\tthis.editor.revealLineInCenterIfOutsideViewport(lineNumber, ScrollType.Smooth);\n\t}\n}\n\nexport class ShowPreviousChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.dirtydiff.previous',\n\t\t\tlabel: nls.localize('show previous change', \"Show Previous Change\"),\n\t\t\talias: 'Show Previous Change',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Shift | KeyMod.Alt | KeyCode.F3, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!controller.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.previous();\n\t}\n}\nregisterEditorAction(ShowPreviousChangeAction);\n\nexport class ShowNextChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.dirtydiff.next',\n\t\t\tlabel: nls.localize('show next change', \"Show Next Change\"),\n\t\t\talias: 'Show Next Change',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Alt | KeyCode.F3, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!controller.canNavigate()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.next();\n\t}\n}\nregisterEditorAction(ShowNextChangeAction);\n\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '7_change_nav',\n\tcommand: {\n\t\tid: 'editor.action.dirtydiff.next',\n\t\ttitle: nls.localize({ key: 'miGotoNextChange', comment: ['&& denotes a mnemonic'] }, \"Next &&Change\")\n\t},\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n\tgroup: '7_change_nav',\n\tcommand: {\n\t\tid: 'editor.action.dirtydiff.previous',\n\t\ttitle: nls.localize({ key: 'miGotoPreviousChange', comment: ['&& denotes a mnemonic'] }, \"Previous &&Change\")\n\t},\n\torder: 2\n});\n\nexport class MoveToPreviousChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.previousChange',\n\t\t\tlabel: nls.localize('move to previous change', \"Move to Previous Change\"),\n\t\t\talias: 'Move to Previous Change',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Shift | KeyMod.Alt | KeyCode.F5, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor || !outerEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller || !controller.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineNumber = outerEditor.getPosition().lineNumber;\n\t\tconst model = controller.modelRegistry.getModel(outerEditor.getModel());\n\n\t\tif (!model || model.changes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = model.findPreviousClosestChange(lineNumber, false);\n\t\tconst change = model.changes[index];\n\n\t\tconst position = new Position(change.modifiedStartLineNumber, 1);\n\t\touterEditor.setPosition(position);\n\t\touterEditor.revealPositionInCenter(position);\n\t}\n}\nregisterEditorAction(MoveToPreviousChangeAction);\n\nexport class MoveToNextChangeAction extends EditorAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.editor.nextChange',\n\t\t\tlabel: nls.localize('move to next change', \"Move to Next Change\"),\n\t\t\talias: 'Move to Next Change',\n\t\t\tprecondition: null,\n\t\t\tkbOpts: { kbExpr: EditorContextKeys.editorTextFocus, primary: KeyMod.Alt | KeyCode.F5, weight: KeybindingWeight.EditorContrib }\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, editor: ICodeEditor): void {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor || !outerEditor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller || !controller.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineNumber = outerEditor.getPosition().lineNumber;\n\t\tconst model = controller.modelRegistry.getModel(outerEditor.getModel());\n\n\t\tif (!model || model.changes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = model.findNextClosestChange(lineNumber, false);\n\t\tconst change = model.changes[index];\n\n\t\tconst position = new Position(change.modifiedStartLineNumber, 1);\n\t\touterEditor.setPosition(position);\n\t\touterEditor.revealPositionInCenter(position);\n\t}\n}\nregisterEditorAction(MoveToNextChangeAction);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'closeDirtyDiff',\n\tweight: KeybindingWeight.EditorContrib + 50,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(isDirtyDiffVisible),\n\thandler: (accessor: ServicesAccessor) => {\n\t\tconst outerEditor = getOuterEditorFromDiffEditor(accessor);\n\n\t\tif (!outerEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst controller = DirtyDiffController.get(outerEditor);\n\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontroller.close();\n\t}\n});\n\nexport class DirtyDiffController implements IEditorContribution {\n\n\tprivate static readonly ID = 'editor.contrib.dirtydiff';\n\n\tstatic get(editor: ICodeEditor): DirtyDiffController {\n\t\treturn editor.getContribution<DirtyDiffController>(DirtyDiffController.ID);\n\t}\n\n\tmodelRegistry: IModelRegistry | null = null;\n\n\tprivate model: DirtyDiffModel | null = null;\n\tprivate widget: DirtyDiffWidget | null = null;\n\tprivate currentIndex: number = -1;\n\tprivate readonly isDirtyDiffVisible: IContextKey<boolean>;\n\tprivate session: IDisposable = Disposable.None;\n\tprivate mouseDownInfo: { lineNumber: number } | null = null;\n\tprivate enabled = false;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate editor: ICodeEditor,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tthis.enabled = !contextKeyService.getContextKeyValue('isInDiffEditor');\n\n\t\tif (this.enabled) {\n\t\t\tthis.isDirtyDiffVisible = isDirtyDiffVisible.bindTo(contextKeyService);\n\t\t\tthis.disposables.push(editor.onMouseDown(e => this.onEditorMouseDown(e)));\n\t\t\tthis.disposables.push(editor.onMouseUp(e => this.onEditorMouseUp(e)));\n\t\t\tthis.disposables.push(editor.onDidChangeModel(() => this.close()));\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn DirtyDiffController.ID;\n\t}\n\n\tcanNavigate(): boolean {\n\t\treturn this.currentIndex === -1 || (!!this.model && this.model.changes.length > 1);\n\t}\n\n\tnext(lineNumber?: number): void {\n\t\tif (!this.assertWidget()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.widget || !this.model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.editor.hasModel() && (typeof lineNumber === 'number' || this.currentIndex === -1)) {\n\t\t\tthis.currentIndex = this.model.findNextClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber);\n\t\t} else {\n\t\t\tthis.currentIndex = rot(this.currentIndex + 1, this.model.changes.length);\n\t\t}\n\n\t\tthis.widget.showChange(this.currentIndex);\n\t}\n\n\tprevious(lineNumber?: number): void {\n\t\tif (!this.assertWidget()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.widget || !this.model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.editor.hasModel() && (typeof lineNumber === 'number' || this.currentIndex === -1)) {\n\t\t\tthis.currentIndex = this.model.findPreviousClosestChange(typeof lineNumber === 'number' ? lineNumber : this.editor.getPosition().lineNumber);\n\t\t} else {\n\t\t\tthis.currentIndex = rot(this.currentIndex - 1, this.model.changes.length);\n\t\t}\n\n\t\tthis.widget.showChange(this.currentIndex);\n\t}\n\n\tclose(): void {\n\t\tthis.session.dispose();\n\t\tthis.session = Disposable.None;\n\t}\n\n\tprivate assertWidget(): boolean {\n\t\tif (!this.enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.widget) {\n\t\t\tif (!this.model || this.model.changes.length === 0) {\n\t\t\t\tthis.close();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!this.modelRegistry) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst editorModel = this.editor.getModel();\n\n\t\tif (!editorModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(editorModel);\n\n\t\tif (!model) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (model.changes.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.currentIndex = -1;\n\t\tthis.model = model;\n\t\tthis.widget = this.instantiationService.createInstance(DirtyDiffWidget, this.editor, model);\n\t\tthis.isDirtyDiffVisible.set(true);\n\n\t\tconst disposables: IDisposable[] = [];\n\t\tEvent.once(this.widget.onDidClose)(this.close, this, disposables);\n\t\tmodel.onDidChange(this.onDidModelChange, this, disposables);\n\n\t\tdisposables.push(\n\t\t\tthis.widget,\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.model = null;\n\t\t\t\tthis.widget = null;\n\t\t\t\tthis.currentIndex = -1;\n\t\t\t\tthis.isDirtyDiffVisible.set(false);\n\t\t\t\tthis.editor.focus();\n\t\t\t})\n\t\t);\n\n\t\tthis.session = combinedDisposable(disposables);\n\t\treturn true;\n\t}\n\n\tprivate onDidModelChange(splices: ISplice<IChange>[]): void {\n\t\tif (!this.model) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const splice of splices) {\n\t\t\tif (splice.start <= this.currentIndex) {\n\t\t\t\tif (this.currentIndex < splice.start + splice.deleteCount) {\n\t\t\t\t\tthis.currentIndex = -1;\n\t\t\t\t\tthis.next();\n\t\t\t\t} else {\n\t\t\t\t\tthis.currentIndex = rot(this.currentIndex + splice.toInsert.length - splice.deleteCount - 1, this.model.changes.length);\n\t\t\t\t\tthis.next();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onEditorMouseDown(e: IEditorMouseEvent): void {\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e.event.leftButton) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\t\tif (!e.target.element) {\n\t\t\treturn;\n\t\t}\n\t\tif (e.target.element.className.indexOf('dirty-diff-glyph') < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = e.target.detail as IMarginData;\n\t\tconst offsetLeftInGutter = (e.target.element as HTMLElement).offsetLeft;\n\t\tconst gutterOffsetX = data.offsetX - offsetLeftInGutter;\n\n\t\t// TODO@joao TODO@alex TODO@martin this is such that we don't collide with folding\n\t\tif (gutterOffsetX < -3 || gutterOffsetX > 6) { // dirty diff decoration on hover is 9px wide\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mouseDownInfo = { lineNumber: range.startLineNumber };\n\t}\n\n\tprivate onEditorMouseUp(e: IEditorMouseEvent): void {\n\t\tif (!this.mouseDownInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { lineNumber } = this.mouseDownInfo;\n\t\tthis.mouseDownInfo = null;\n\n\t\tconst range = e.target.range;\n\n\t\tif (!range || range.startLineNumber !== lineNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.target.type !== MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.modelRegistry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorModel = this.editor.getModel();\n\n\t\tif (!editorModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(editorModel);\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = firstIndex(model.changes, change => lineIntersectsChange(lineNumber, change));\n\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (index === this.currentIndex) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.next(lineNumber);\n\t\t}\n\t}\n\n\tgetChanges(): IChange[] {\n\t\tif (!this.modelRegistry) {\n\t\t\treturn [];\n\t\t}\n\t\tif (!this.editor.hasModel()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst model = this.modelRegistry.getModel(this.editor.getModel());\n\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn model.changes;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nexport const editorGutterModifiedBackground = registerColor('editorGutter.modifiedBackground', {\n\tdark: new Color(new RGBA(12, 125, 157)),\n\tlight: new Color(new RGBA(102, 175, 224)),\n\thc: new Color(new RGBA(0, 73, 122))\n}, nls.localize('editorGutterModifiedBackground', \"Editor gutter background color for lines that are modified.\"));\n\nexport const editorGutterAddedBackground = registerColor('editorGutter.addedBackground', {\n\tdark: new Color(new RGBA(88, 124, 12)),\n\tlight: new Color(new RGBA(129, 184, 139)),\n\thc: new Color(new RGBA(27, 82, 37))\n}, nls.localize('editorGutterAddedBackground', \"Editor gutter background color for lines that are added.\"));\n\nexport const editorGutterDeletedBackground = registerColor('editorGutter.deletedBackground', {\n\tdark: new Color(new RGBA(148, 21, 27)),\n\tlight: new Color(new RGBA(202, 75, 81)),\n\thc: new Color(new RGBA(141, 14, 20))\n}, nls.localize('editorGutterDeletedBackground', \"Editor gutter background color for lines that are deleted.\"));\n\nconst overviewRulerDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerModifiedForeground = registerColor('editorOverviewRuler.modifiedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerModifiedForeground', 'Overview ruler marker color for modified content.'));\nexport const overviewRulerAddedForeground = registerColor('editorOverviewRuler.addedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerAddedForeground', 'Overview ruler marker color for added content.'));\nexport const overviewRulerDeletedForeground = registerColor('editorOverviewRuler.deletedForeground', { dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault }, nls.localize('overviewRulerDeletedForeground', 'Overview ruler marker color for deleted content.'));\n\nclass DirtyDiffDecorator {\n\n\tstatic createDecoration(className: string, foregroundColor: string, options: { gutter: boolean, overview: boolean, isWholeLine: boolean }): ModelDecorationOptions {\n\t\tconst decorationOptions: IModelDecorationOptions = {\n\t\t\tisWholeLine: options.isWholeLine,\n\t\t};\n\n\t\tif (options.gutter) {\n\t\t\tdecorationOptions.linesDecorationsClassName = `dirty-diff-glyph ${className}`;\n\t\t}\n\n\t\tif (options.overview) {\n\t\t\tdecorationOptions.overviewRuler = {\n\t\t\t\tcolor: themeColorFromId(foregroundColor),\n\t\t\t\tposition: OverviewRulerLane.Left\n\t\t\t};\n\t\t}\n\n\t\treturn ModelDecorationOptions.createDynamic(decorationOptions);\n\t}\n\n\tprivate modifiedOptions: ModelDecorationOptions;\n\tprivate addedOptions: ModelDecorationOptions;\n\tprivate deletedOptions: ModelDecorationOptions;\n\tprivate decorations: string[] = [];\n\tprivate disposables: IDisposable[] = [];\n\tprivate editorModel: ITextModel | null;\n\n\tconstructor(\n\t\teditorModel: ITextModel,\n\t\tprivate model: DirtyDiffModel,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tthis.editorModel = editorModel;\n\t\tconst decorations = configurationService.getValue<string>('scm.diffDecorations');\n\t\tconst gutter = decorations === 'all' || decorations === 'gutter';\n\t\tconst overview = decorations === 'all' || decorations === 'overview';\n\t\tconst options = { gutter, overview, isWholeLine: true };\n\n\t\tthis.modifiedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-modified', overviewRulerModifiedForeground, options);\n\t\tthis.addedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-added', overviewRulerAddedForeground, options);\n\t\tthis.deletedOptions = DirtyDiffDecorator.createDecoration('dirty-diff-deleted', overviewRulerDeletedForeground, { ...options, isWholeLine: false });\n\n\t\tmodel.onDidChange(this.onDidChange, this, this.disposables);\n\t}\n\n\tprivate onDidChange(): void {\n\t\tif (!this.editorModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst decorations = this.model.changes.map((change) => {\n\t\t\tconst changeType = getChangeType(change);\n\t\t\tconst startLineNumber = change.modifiedStartLineNumber;\n\t\t\tconst endLineNumber = change.modifiedEndLineNumber || startLineNumber;\n\n\t\t\tswitch (changeType) {\n\t\t\t\tcase ChangeType.Add:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: this.addedOptions\n\t\t\t\t\t};\n\t\t\t\tcase ChangeType.Delete:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: Number.MAX_VALUE,\n\t\t\t\t\t\t\tendLineNumber: startLineNumber, endColumn: Number.MAX_VALUE\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: this.deletedOptions\n\t\t\t\t\t};\n\t\t\t\tcase ChangeType.Modify:\n\t\t\t\t\treturn {\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: this.modifiedOptions\n\t\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tthis.decorations = this.editorModel.deltaDecorations(this.decorations, decorations);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\n\t\tif (this.editorModel && !this.editorModel.isDisposed()) {\n\t\t\tthis.editorModel.deltaDecorations(this.decorations, []);\n\t\t}\n\n\t\tthis.editorModel = null;\n\t\tthis.decorations = [];\n\t}\n}\n\nfunction compareChanges(a: IChange, b: IChange): number {\n\tlet result = a.modifiedStartLineNumber - b.modifiedStartLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tresult = a.modifiedEndLineNumber - b.modifiedEndLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tresult = a.originalStartLineNumber - b.originalStartLineNumber;\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\treturn a.originalEndLineNumber - b.originalEndLineNumber;\n}\n\nexport class DirtyDiffModel {\n\n\tprivate _originalModel: ITextModel | null;\n\tget original(): ITextModel | null { return this._originalModel; }\n\tget modified(): ITextModel | null { return this._editorModel; }\n\n\tprivate diffDelayer: ThrottledDelayer<IChange[] | null> | null;\n\tprivate _originalURIPromise?: Promise<URI | null>;\n\tprivate repositoryDisposables = new Set<IDisposable[]>();\n\tprivate originalModelDisposables: IDisposable[] = [];\n\tprivate disposables: IDisposable[] = [];\n\n\tprivate _onDidChange = new Emitter<ISplice<IChange>[]>();\n\treadonly onDidChange: Event<ISplice<IChange>[]> = this._onDidChange.event;\n\n\tprivate _changes: IChange[] = [];\n\tget changes(): IChange[] {\n\t\treturn this._changes;\n\t}\n\n\tprivate _editorModel: ITextModel | null;\n\n\tconstructor(\n\t\teditorModel: ITextModel,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService\n\t) {\n\t\tthis._editorModel = editorModel;\n\t\tthis.diffDelayer = new ThrottledDelayer<IChange[]>(200);\n\n\t\tthis.disposables.push(editorModel.onDidChangeContent(() => this.triggerDiff()));\n\t\tscmService.onDidAddRepository(this.onDidAddRepository, this, this.disposables);\n\t\tscmService.repositories.forEach(r => this.onDidAddRepository(r));\n\n\t\tthis.triggerDiff();\n\t}\n\n\tprivate onDidAddRepository(repository: ISCMRepository): void {\n\t\tconst disposables: IDisposable[] = [];\n\n\t\tthis.repositoryDisposables.add(disposables);\n\t\tdisposables.push(toDisposable(() => this.repositoryDisposables.delete(disposables)));\n\n\t\tconst onDidChange = Event.any(repository.provider.onDidChange, repository.provider.onDidChangeResources);\n\t\tonDidChange(this.triggerDiff, this, disposables);\n\n\t\tconst onDidRemoveThis = Event.filter(this.scmService.onDidRemoveRepository, r => r === repository);\n\t\tonDidRemoveThis(() => dispose(disposables), null, disposables);\n\n\t\tthis.triggerDiff();\n\t}\n\n\tprivate triggerDiff(): Promise<any> {\n\t\tif (!this.diffDelayer) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn this.diffDelayer\n\t\t\t.trigger(() => this.diff())\n\t\t\t.then((changes: IChange[]) => {\n\t\t\t\tif (!this._editorModel || this._editorModel.isDisposed() || !this._originalModel || this._originalModel.isDisposed()) {\n\t\t\t\t\treturn; // disposed\n\t\t\t\t}\n\n\t\t\t\tif (this._originalModel.getValueLength() === 0) {\n\t\t\t\t\tchanges = [];\n\t\t\t\t}\n\n\t\t\t\tconst diff = sortedDiff(this._changes, changes, compareChanges);\n\t\t\t\tthis._changes = changes;\n\n\t\t\t\tif (diff.length > 0) {\n\t\t\t\t\tthis._onDidChange.fire(diff);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate diff(): Promise<IChange[] | null> {\n\t\treturn this.getOriginalURIPromise().then(originalURI => {\n\t\t\tif (!this._editorModel || this._editorModel.isDisposed() || !originalURI) {\n\t\t\t\treturn Promise.resolve([]); // disposed\n\t\t\t}\n\n\t\t\tif (!this.editorWorkerService.canComputeDirtyDiff(originalURI, this._editorModel.uri)) {\n\t\t\t\treturn Promise.resolve([]); // Files too large\n\t\t\t}\n\n\t\t\treturn this.editorWorkerService.computeDirtyDiff(originalURI, this._editorModel.uri, false);\n\t\t});\n\t}\n\n\tprivate getOriginalURIPromise(): Promise<URI | null> {\n\t\tif (this._originalURIPromise) {\n\t\t\treturn this._originalURIPromise;\n\t\t}\n\n\t\tthis._originalURIPromise = this.getOriginalResource().then(originalUri => {\n\t\t\tif (!this._editorModel) { // disposed\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!originalUri) {\n\t\t\t\tthis._originalModel = null;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this._originalModel && this._originalModel.uri.toString() === originalUri.toString()) {\n\t\t\t\treturn originalUri;\n\t\t\t}\n\n\t\t\treturn this.textModelResolverService.createModelReference(originalUri).then(ref => {\n\t\t\t\tif (!this._editorModel) { // disposed\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tthis._originalModel = ref.object.textEditorModel;\n\n\t\t\t\tconst originalModelDisposables: IDisposable[] = [];\n\t\t\t\toriginalModelDisposables.push(ref);\n\t\t\t\toriginalModelDisposables.push(ref.object.textEditorModel.onDidChangeContent(() => this.triggerDiff()));\n\n\t\t\t\tdispose(this.originalModelDisposables);\n\t\t\t\tthis.originalModelDisposables = originalModelDisposables;\n\n\t\t\t\treturn originalUri;\n\t\t\t});\n\t\t});\n\n\t\treturn this._originalURIPromise.finally(() => {\n\t\t\tthis._originalURIPromise = undefined;\n\t\t});\n\t}\n\n\tprivate getOriginalResource(): Promise<URI | null> {\n\t\tif (!this._editorModel) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst uri = this._editorModel.uri;\n\t\treturn first(this.scmService.repositories.map(r => () => r.provider.getOriginalResource(uri)));\n\t}\n\n\tfindNextClosestChange(lineNumber: number, inclusive = true): number {\n\t\tfor (let i = 0; i < this.changes.length; i++) {\n\t\t\tconst change = this.changes[i];\n\n\t\t\tif (inclusive) {\n\t\t\t\tif (getModifiedEndLineNumber(change) >= lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (change.modifiedStartLineNumber > lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tfindPreviousClosestChange(lineNumber: number, inclusive = true): number {\n\t\tfor (let i = this.changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = this.changes[i];\n\n\t\t\tif (inclusive) {\n\t\t\t\tif (change.modifiedStartLineNumber <= lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (getModifiedEndLineNumber(change) < lineNumber) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.changes.length - 1;\n\t}\n\n\tdispose(): void {\n\t\tthis.originalModelDisposables = dispose(this.originalModelDisposables);\n\t\tthis.disposables = dispose(this.disposables);\n\n\t\tthis._editorModel = null;\n\t\tthis._originalModel = null;\n\n\t\tif (this.diffDelayer) {\n\t\t\tthis.diffDelayer.cancel();\n\t\t\tthis.diffDelayer = null;\n\t\t}\n\n\t\tthis.repositoryDisposables.forEach(d => dispose(d));\n\t\tthis.repositoryDisposables.clear();\n\t}\n}\n\nclass DirtyDiffItem {\n\n\tconstructor(readonly model: DirtyDiffModel, readonly decorator: DirtyDiffDecorator) { }\n\n\tdispose(): void {\n\t\tthis.decorator.dispose();\n\t\tthis.model.dispose();\n\t}\n}\n\nexport class DirtyDiffWorkbenchController implements ext.IWorkbenchContribution, IModelRegistry {\n\n\tprivate enabled = false;\n\tprivate models: ITextModel[] = [];\n\tprivate items: { [modelId: string]: DirtyDiffItem; } = Object.create(null);\n\tprivate transientDisposables: IDisposable[] = [];\n\tprivate stylesheet: HTMLStyleElement;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tthis.stylesheet = createStyleSheet();\n\t\tthis.disposables.push(toDisposable(() => this.stylesheet.parentElement!.removeChild(this.stylesheet)));\n\n\t\tconst onDidChangeConfiguration = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorations'));\n\t\tonDidChangeConfiguration(this.onDidChangeConfiguration, this, this.disposables);\n\t\tthis.onDidChangeConfiguration();\n\n\t\tconst onDidChangeDiffWidthConfiguration = Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('scm.diffDecorationsGutterWidth'));\n\t\tonDidChangeDiffWidthConfiguration(this.onDidChangeDiffWidthConfiguration, this);\n\t\tthis.onDidChangeDiffWidthConfiguration();\n\t}\n\n\tprivate onDidChangeConfiguration(): void {\n\t\tconst enabled = this.configurationService.getValue<string>('scm.diffDecorations') !== 'none';\n\n\t\tif (enabled) {\n\t\t\tthis.enable();\n\t\t} else {\n\t\t\tthis.disable();\n\t\t}\n\t}\n\n\tprivate onDidChangeDiffWidthConfiguration(): void {\n\t\tlet width = this.configurationService.getValue<number>('scm.diffDecorationsGutterWidth');\n\n\t\tif (isNaN(width) || width <= 0 || width > 5) {\n\t\t\twidth = 3;\n\t\t}\n\n\t\tthis.stylesheet.innerHTML = `.monaco-editor .dirty-diff-modified,.monaco-editor .dirty-diff-added{border-left-width:${width}px;}`;\n\t}\n\n\tprivate enable(): void {\n\t\tif (this.enabled) {\n\t\t\tthis.disable();\n\t\t}\n\n\t\tthis.transientDisposables.push(this.editorService.onDidVisibleEditorsChange(() => this.onEditorsChanged()));\n\t\tthis.onEditorsChanged();\n\t\tthis.enabled = true;\n\t}\n\n\tprivate disable(): void {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.transientDisposables = dispose(this.transientDisposables);\n\t\tthis.models.forEach(m => this.items[m.id].dispose());\n\t\tthis.models = [];\n\t\tthis.items = Object.create(null);\n\t\tthis.enabled = false;\n\t}\n\n\t// HACK: This is the best current way of figuring out whether to draw these decorations\n\t// or not. Needs context from the editor, to know whether it is a diff editor, in place editor\n\t// etc.\n\tprivate onEditorsChanged(): void {\n\t\tconst models = this.editorService.visibleTextEditorWidgets\n\n\t\t\t// only interested in code editor widgets\n\t\t\t.filter(c => c instanceof CodeEditorWidget)\n\n\t\t\t// set model registry and map to models\n\t\t\t.map(editor => {\n\t\t\t\tconst codeEditor = editor as CodeEditorWidget;\n\t\t\t\tconst controller = DirtyDiffController.get(codeEditor);\n\t\t\t\tcontroller.modelRegistry = this;\n\t\t\t\treturn codeEditor.getModel();\n\t\t\t})\n\n\t\t\t// remove nulls and duplicates\n\t\t\t.filter((m, i, a) => !!m && !!m.uri && a.indexOf(m, i + 1) === -1) as ITextModel[];\n\n\t\tconst newModels = models.filter(o => this.models.every(m => o !== m));\n\t\tconst oldModels = this.models.filter(m => models.every(o => o !== m));\n\n\t\toldModels.forEach(m => this.onModelInvisible(m));\n\t\tnewModels.forEach(m => this.onModelVisible(m));\n\n\t\tthis.models = models;\n\t}\n\n\tprivate onModelVisible(editorModel: ITextModel): void {\n\t\tconst model = this.instantiationService.createInstance(DirtyDiffModel, editorModel);\n\t\tconst decorator = new DirtyDiffDecorator(editorModel, model, this.configurationService);\n\n\t\tthis.items[editorModel.id] = new DirtyDiffItem(model, decorator);\n\t}\n\n\tprivate onModelInvisible(editorModel: ITextModel): void {\n\t\tthis.items[editorModel.id].dispose();\n\t\tdelete this.items[editorModel.id];\n\t}\n\n\tgetModel(editorModel: ITextModel): DirtyDiffModel | null {\n\t\tconst item = this.items[editorModel.id];\n\n\t\tif (!item) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn item.model;\n\t}\n\n\tdispose(): void {\n\t\tthis.disable();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nregisterEditorContribution(DirtyDiffController);\n\nregisterThemingParticipant((theme: ITheme, collector: ICssStyleCollector) => {\n\tconst editorGutterModifiedBackgroundColor = theme.getColor(editorGutterModifiedBackground);\n\tif (editorGutterModifiedBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .dirty-diff-modified {\n\t\t\t\tborder-left: 3px solid ${editorGutterModifiedBackgroundColor};\n\t\t\t}\n\t\t\t.monaco-editor .dirty-diff-modified:before {\n\t\t\t\tbackground: ${editorGutterModifiedBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst editorGutterAddedBackgroundColor = theme.getColor(editorGutterAddedBackground);\n\tif (editorGutterAddedBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .dirty-diff-added {\n\t\t\t\tborder-left: 3px solid ${editorGutterAddedBackgroundColor};\n\t\t\t}\n\t\t\t.monaco-editor .dirty-diff-added:before {\n\t\t\t\tbackground: ${editorGutterAddedBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n\n\tconst editorGutteDeletedBackgroundColor = theme.getColor(editorGutterDeletedBackground);\n\tif (editorGutteDeletedBackgroundColor) {\n\t\tcollector.addRule(`\n\t\t\t.monaco-editor .dirty-diff-deleted:after {\n\t\t\t\tborder-left: 4px solid ${editorGutteDeletedBackgroundColor};\n\t\t\t}\n\t\t\t.monaco-editor .dirty-diff-deleted:before {\n\t\t\t\tbackground: ${editorGutteDeletedBackgroundColor};\n\t\t\t}\n\t\t`);\n\t}\n});\n"]}]}