{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/common/services/markersDecorationService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/common/services/markersDecorationService.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar instantiation_1 = require(\"vs/platform/instantiation/common/instantiation\");\nexports.IMarkerDecorationsService = instantiation_1.createDecorator('markerDecorationsService');\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/common/services/markersDecorationService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/common/services/markersDecorationService.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAGhG,gFAAiF;AAKpE,QAAA,yBAAyB,GAAG,+BAAe,CAA4B,0BAA0B,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel, IModelDecoration } from 'vs/editor/common/model';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMarker } from 'vs/platform/markers/common/markers';\nimport { Event } from 'vs/base/common/event';\nimport { Range } from 'vs/editor/common/core/range';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\t_serviceBrand: any;\n\n\tonDidChangeMarker: Event<ITextModel>;\n\n\tgetMarker(model: ITextModel, decoration: IModelDecoration): IMarker | null;\n\n\tgetLiveMarkers(model: ITextModel): [Range, IMarker][];\n}\n"]}]}