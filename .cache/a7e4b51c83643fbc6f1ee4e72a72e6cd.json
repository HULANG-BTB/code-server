{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/page/browser/welcomePage.contribution.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/page/browser/welcomePage.contribution.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar nls_1 = require(\"vs/nls\");\nvar contributions_1 = require(\"vs/workbench/common/contributions\");\nvar platform_1 = require(\"vs/platform/registry/common/platform\");\nvar welcomePage_1 = require(\"vs/workbench/contrib/welcome/page/browser/welcomePage\");\nvar actions_1 = require(\"vs/workbench/common/actions\");\nvar actions_2 = require(\"vs/platform/actions/common/actions\");\nvar configurationRegistry_1 = require(\"vs/platform/configuration/common/configurationRegistry\");\nvar editor_1 = require(\"vs/workbench/common/editor\");\nvar lifecycle_1 = require(\"vs/platform/lifecycle/common/lifecycle\");\nplatform_1.Registry.as(configurationRegistry_1.Extensions.Configuration)\n    .registerConfiguration({\n    'id': 'workbench',\n    'order': 7,\n    'title': nls_1.localize('workbenchConfigurationTitle', \"Workbench\"),\n    'properties': {\n        'workbench.startupEditor': {\n            'scope': configurationRegistry_1.ConfigurationScope.APPLICATION,\n            'type': 'string',\n            'enum': ['none', 'welcomePage', 'readme', 'newUntitledFile', 'welcomePageInEmptyWorkbench'],\n            'enumDescriptions': [\n                nls_1.localize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.none' }, \"Start without an editor.\"),\n                nls_1.localize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePage' }, \"Open the Welcome page (default).\"),\n                nls_1.localize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.readme' }, \"Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise.\"),\n                nls_1.localize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.newUntitledFile' }, \"Open a new untitled file (only applies when opening an empty workspace).\"),\n                nls_1.localize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePageInEmptyWorkbench' }, \"Open the Welcome page when opening an empty workbench.\"),\n            ],\n            'default': 'welcomePage',\n            'description': nls_1.localize('workbench.startupEditor', \"Controls which editor is shown at startup, if none are restored from the previous session.\")\n        },\n    }\n});\nplatform_1.Registry.as(contributions_1.Extensions.Workbench)\n    .registerWorkbenchContribution(welcomePage_1.WelcomePageContribution, lifecycle_1.LifecyclePhase.Restored);\nplatform_1.Registry.as(actions_1.Extensions.WorkbenchActions)\n    .registerWorkbenchAction(new actions_2.SyncActionDescriptor(welcomePage_1.WelcomePageAction, welcomePage_1.WelcomePageAction.ID, welcomePage_1.WelcomePageAction.LABEL), 'Help: Welcome', nls_1.localize('help', \"Help\"));\nplatform_1.Registry.as(editor_1.Extensions.EditorInputFactories).registerEditorInputFactory(welcomePage_1.WelcomeInputFactory.ID, welcomePage_1.WelcomeInputFactory);\nactions_2.MenuRegistry.appendMenuItem(actions_2.MenuId.MenubarHelpMenu, {\n    group: '1_welcome',\n    command: {\n        id: 'workbench.action.showWelcomePage',\n        title: nls_1.localize({ key: 'miWelcome', comment: ['&& denotes a mnemonic'] }, \"&&Welcome\")\n    },\n    order: 1\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/page/browser/welcomePage.contribution.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/welcome/page/browser/welcomePage.contribution.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,8BAAkC;AAClC,mEAAuH;AACvH,iEAAgE;AAChE,qFAAwI;AACxI,uDAAuG;AACvG,8DAAgG;AAChG,gGAA2J;AAC3J,qDAAyG;AACzG,oEAAwE;AAExE,mBAAQ,CAAC,EAAE,CAAyB,kCAAuB,CAAC,aAAa,CAAC;KACxE,qBAAqB,CAAC;IACtB,IAAI,EAAE,WAAW;IACjB,OAAO,EAAE,CAAC;IACV,OAAO,EAAE,cAAQ,CAAC,6BAA6B,EAAE,WAAW,CAAC;IAC7D,YAAY,EAAE;QACb,yBAAyB,EAAE;YAC1B,OAAO,EAAE,0CAAkB,CAAC,WAAW;YACvC,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,iBAAiB,EAAE,6BAA6B,CAAC;YAC3F,kBAAkB,EAAE;gBACnB,cAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,qGAAqG,CAAC,EAAE,GAAG,EAAE,8BAA8B,EAAE,EAAE,0BAA0B,CAAC;gBAC/L,cAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,qGAAqG,CAAC,EAAE,GAAG,EAAE,qCAAqC,EAAE,EAAE,kCAAkC,CAAC;gBAC9M,cAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,qGAAqG,CAAC,EAAE,GAAG,EAAE,gCAAgC,EAAE,EAAE,+FAA+F,CAAC;gBACtQ,cAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,qGAAqG,CAAC,EAAE,GAAG,EAAE,yCAAyC,EAAE,EAAE,0EAA0E,CAAC;gBAC1P,cAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,qGAAqG,CAAC,EAAE,GAAG,EAAE,qDAAqD,EAAE,EAAE,wDAAwD,CAAC;aACpP;YACD,SAAS,EAAE,aAAa;YACxB,aAAa,EAAE,cAAQ,CAAC,yBAAyB,EAAE,4FAA4F,CAAC;SAChJ;KACD;CACD,CAAC,CAAC;AAEJ,mBAAQ,CAAC,EAAE,CAAkC,0BAAmB,CAAC,SAAS,CAAC;KACzE,6BAA6B,CAAC,qCAAuB,EAAE,0BAAc,CAAC,QAAQ,CAAC,CAAC;AAElF,mBAAQ,CAAC,EAAE,CAA2B,oBAAgB,CAAC,gBAAgB,CAAC;KACtE,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,+BAAiB,EAAE,+BAAiB,CAAC,EAAE,EAAE,+BAAiB,CAAC,KAAK,CAAC,EAAE,eAAe,EAAE,cAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAEjK,mBAAQ,CAAC,EAAE,CAA8B,mBAAgB,CAAC,oBAAoB,CAAC,CAAC,0BAA0B,CAAC,iCAAmB,CAAC,EAAE,EAAE,iCAAmB,CAAC,CAAC;AAExJ,sBAAY,CAAC,cAAc,CAAC,gBAAM,CAAC,eAAe,EAAE;IACnD,KAAK,EAAE,WAAW;IAClB,OAAO,EAAE;QACR,EAAE,EAAE,kCAAkC;QACtC,KAAK,EAAE,cAAQ,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,WAAW,CAAC;KACtF;IACD,KAAK,EAAE,CAAC;CACR,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { WelcomePageContribution, WelcomePageAction, WelcomeInputFactory } from 'vs/workbench/contrib/welcome/page/browser/welcomePage';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actions';\nimport { SyncActionDescriptor, MenuRegistry, MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IEditorInputFactoryRegistry, Extensions as EditorExtensions } from 'vs/workbench/common/editor';\nimport { LifecyclePhase } from 'vs/platform/lifecycle/common/lifecycle';\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration)\n\t.registerConfiguration({\n\t\t'id': 'workbench',\n\t\t'order': 7,\n\t\t'title': localize('workbenchConfigurationTitle', \"Workbench\"),\n\t\t'properties': {\n\t\t\t'workbench.startupEditor': {\n\t\t\t\t'scope': ConfigurationScope.APPLICATION, // Make sure repositories cannot trigger opening a README for tracking.\n\t\t\t\t'type': 'string',\n\t\t\t\t'enum': ['none', 'welcomePage', 'readme', 'newUntitledFile', 'welcomePageInEmptyWorkbench'],\n\t\t\t\t'enumDescriptions': [\n\t\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.none' }, \"Start without an editor.\"),\n\t\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePage' }, \"Open the Welcome page (default).\"),\n\t\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.readme' }, \"Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise.\"),\n\t\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.newUntitledFile' }, \"Open a new untitled file (only applies when opening an empty workspace).\"),\n\t\t\t\t\tlocalize({ comment: ['This is the description for a setting. Values surrounded by single quotes are not to be translated.'], key: 'workbench.startupEditor.welcomePageInEmptyWorkbench' }, \"Open the Welcome page when opening an empty workbench.\"),\n\t\t\t\t],\n\t\t\t\t'default': 'welcomePage',\n\t\t\t\t'description': localize('workbench.startupEditor', \"Controls which editor is shown at startup, if none are restored from the previous session.\")\n\t\t\t},\n\t\t}\n\t});\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench)\n\t.registerWorkbenchContribution(WelcomePageContribution, LifecyclePhase.Restored);\n\nRegistry.as<IWorkbenchActionRegistry>(ActionExtensions.WorkbenchActions)\n\t.registerWorkbenchAction(new SyncActionDescriptor(WelcomePageAction, WelcomePageAction.ID, WelcomePageAction.LABEL), 'Help: Welcome', localize('help', \"Help\"));\n\nRegistry.as<IEditorInputFactoryRegistry>(EditorExtensions.EditorInputFactories).registerEditorInputFactory(WelcomeInputFactory.ID, WelcomeInputFactory);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarHelpMenu, {\n\tgroup: '1_welcome',\n\tcommand: {\n\t\tid: 'workbench.action.showWelcomePage',\n\t\ttitle: localize({ key: 'miWelcome', comment: ['&& denotes a mnemonic'] }, \"&&Welcome\")\n\t},\n\torder: 1\n});\n"]}]}