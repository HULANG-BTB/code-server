{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/fill/labels.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/labels.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar labels = require(\"vs/base/common/labels\");\n// Disable all mnemonics for now until we implement it.\nvar target = labels;\ntarget.mnemonicMenuLabel = function (label, forceDisable) {\n    return label.replace(/\\(&&\\w\\)|&&/g, \"\");\n};\ntarget.mnemonicButtonLabel = function (label) {\n    return label.replace(/\\(&&\\w\\)|&&/g, \"\");\n};\ntarget.unmnemonicLabel = function (label) { return label; };\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/fill/labels.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/fill/labels.ts"],"names":[],"mappings":";;AAAA,8CAAgD;AAEhD,uDAAuD;AACvD,IAAM,MAAM,GAAG,MAAuB,CAAC;AACvC,MAAM,CAAC,iBAAiB,GAAG,UAAC,KAAa,EAAE,YAAsB;IAChE,OAAO,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC;AACF,MAAM,CAAC,mBAAmB,GAAG,UAAC,KAAc;IAC3C,OAAO,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC;AACF,MAAM,CAAC,eAAe,GAAG,UAAC,KAAc,IAAe,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import * as labels from \"vs/base/common/labels\";\n\n// Disable all mnemonics for now until we implement it.\nconst target = labels as typeof labels;\ntarget.mnemonicMenuLabel = (label: string, forceDisable?: boolean): string => {\n\treturn label.replace(/\\(&&\\w\\)|&&/g, \"\");\n};\ntarget.mnemonicButtonLabel = (label:  string): string => {\n\treturn label.replace(/\\(&&\\w\\)|&&/g, \"\");\n};\ntarget.unmnemonicLabel = (label:  string): string => { return label; };\n"]}]}