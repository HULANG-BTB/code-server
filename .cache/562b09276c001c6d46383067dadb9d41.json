{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/selections/selections.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/selections/selections.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./selections\");\nvar browser = require(\"vs/base/browser/browser\");\nvar dynamicViewOverlay_1 = require(\"vs/editor/browser/view/dynamicViewOverlay\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar CornerStyle;\n(function (CornerStyle) {\n    CornerStyle[CornerStyle[\"EXTERN\"] = 0] = \"EXTERN\";\n    CornerStyle[CornerStyle[\"INTERN\"] = 1] = \"INTERN\";\n    CornerStyle[CornerStyle[\"FLAT\"] = 2] = \"FLAT\";\n})(CornerStyle || (CornerStyle = {}));\nvar HorizontalRangeWithStyle = /** @class */ (function () {\n    function HorizontalRangeWithStyle(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n    return HorizontalRangeWithStyle;\n}());\nvar LineVisibleRangesWithStyle = /** @class */ (function () {\n    function LineVisibleRangesWithStyle(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n    return LineVisibleRangesWithStyle;\n}());\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n// TODO@Alex: Remove this once IE11 fixes Bug #524217\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\nvar isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeOrIE;\nvar SelectionsOverlay = /** @class */ (function (_super) {\n    tslib_1.__extends(SelectionsOverlay, _super);\n    function SelectionsOverlay(context) {\n        var _this = _super.call(this) || this;\n        _this._previousFrameVisibleRangesWithStyle = [];\n        _this._context = context;\n        _this._lineHeight = _this._context.configuration.editor.lineHeight;\n        _this._roundedSelection = _this._context.configuration.editor.viewInfo.roundedSelection;\n        _this._typicalHalfwidthCharacterWidth = _this._context.configuration.editor.fontInfo.typicalHalfwidthCharacterWidth;\n        _this._selections = [];\n        _this._renderResult = null;\n        _this._context.addEventHandler(_this);\n        return _this;\n    }\n    SelectionsOverlay.prototype.dispose = function () {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        _super.prototype.dispose.call(this);\n    };\n    // --- begin event handlers\n    SelectionsOverlay.prototype.onConfigurationChanged = function (e) {\n        if (e.lineHeight) {\n            this._lineHeight = this._context.configuration.editor.lineHeight;\n        }\n        if (e.viewInfo) {\n            this._roundedSelection = this._context.configuration.editor.viewInfo.roundedSelection;\n        }\n        if (e.fontInfo) {\n            this._typicalHalfwidthCharacterWidth = this._context.configuration.editor.fontInfo.typicalHalfwidthCharacterWidth;\n        }\n        return true;\n    };\n    SelectionsOverlay.prototype.onCursorStateChanged = function (e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    };\n    SelectionsOverlay.prototype.onDecorationsChanged = function (e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    };\n    SelectionsOverlay.prototype.onFlushed = function (e) {\n        return true;\n    };\n    SelectionsOverlay.prototype.onLinesChanged = function (e) {\n        return true;\n    };\n    SelectionsOverlay.prototype.onLinesDeleted = function (e) {\n        return true;\n    };\n    SelectionsOverlay.prototype.onLinesInserted = function (e) {\n        return true;\n    };\n    SelectionsOverlay.prototype.onScrollChanged = function (e) {\n        return e.scrollTopChanged;\n    };\n    SelectionsOverlay.prototype.onZonesChanged = function (e) {\n        return true;\n    };\n    // --- end event handlers\n    SelectionsOverlay.prototype._visibleRangesHaveGaps = function (linesVisibleRanges) {\n        for (var i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            var lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    };\n    SelectionsOverlay.prototype._enrichVisibleRangesWithStyle = function (viewport, linesVisibleRanges, previousFrame) {\n        var epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        var previousFrameTop = null;\n        var previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            var topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (var i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            var bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (var i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (var i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            var curLineRange = linesVisibleRanges[i].ranges[0];\n            var curLeft = curLineRange.left;\n            var curRight = curLineRange.left + curLineRange.width;\n            var startStyle = {\n                top: CornerStyle.EXTERN,\n                bottom: CornerStyle.EXTERN\n            };\n            var endStyle = {\n                top: CornerStyle.EXTERN,\n                bottom: CornerStyle.EXTERN\n            };\n            if (i > 0) {\n                // Look above\n                var prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                var prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = CornerStyle.FLAT;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = CornerStyle.INTERN;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = CornerStyle.FLAT;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = CornerStyle.INTERN;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hick-ups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                var nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                var nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = CornerStyle.FLAT;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = CornerStyle.INTERN;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = CornerStyle.FLAT;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = CornerStyle.INTERN;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hick-ups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    };\n    SelectionsOverlay.prototype._getVisibleRangesWithStyle = function (selection, ctx, previousFrame) {\n        var _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        var linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        var visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    };\n    SelectionsOverlay.prototype._createSelectionPiece = function (top, height, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"top:'\n            + top.toString()\n            + 'px;left:'\n            + left.toString()\n            + 'px;width:'\n            + width.toString()\n            + 'px;height:'\n            + height\n            + 'px;\"></div>');\n    };\n    SelectionsOverlay.prototype._actualRenderOneSelection = function (output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        var visibleRangesHaveStyle = (visibleRanges.length > 0 && visibleRanges[0].ranges[0].startStyle);\n        var fullLineHeight = (this._lineHeight).toString();\n        var reducedLineHeight = (this._lineHeight - 1).toString();\n        var firstLineNumber = (visibleRanges.length > 0 ? visibleRanges[0].lineNumber : 0);\n        var lastLineNumber = (visibleRanges.length > 0 ? visibleRanges[visibleRanges.length - 1].lineNumber : 0);\n        for (var i = 0, len = visibleRanges.length; i < len; i++) {\n            var lineVisibleRanges = visibleRanges[i];\n            var lineNumber = lineVisibleRanges.lineNumber;\n            var lineIndex = lineNumber - visibleStartLineNumber;\n            var lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\n            var top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            var lineOutput = '';\n            for (var j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                var visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    var startStyle = visibleRange.startStyle;\n                    var endStyle = visibleRange.endStyle;\n                    if (startStyle.top === CornerStyle.INTERN || startStyle.bottom === CornerStyle.INTERN) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        lineOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        var className_1 = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === CornerStyle.INTERN) {\n                            className_1 += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === CornerStyle.INTERN) {\n                            className_1 += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        lineOutput += this._createSelectionPiece(top, lineHeight, className_1, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === CornerStyle.INTERN || endStyle.bottom === CornerStyle.INTERN) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        lineOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        var className_2 = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === CornerStyle.INTERN) {\n                            className_2 += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === CornerStyle.INTERN) {\n                            className_2 += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        lineOutput += this._createSelectionPiece(top, lineHeight, className_2, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                var className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    var startStyle = visibleRange.startStyle;\n                    var endStyle = visibleRange.endStyle;\n                    if (startStyle.top === CornerStyle.EXTERN) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === CornerStyle.EXTERN) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === CornerStyle.EXTERN) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === CornerStyle.EXTERN) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                lineOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex] += lineOutput;\n        }\n    };\n    SelectionsOverlay.prototype.prepareRender = function (ctx) {\n        var output = [];\n        var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            var lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        var thisFrameVisibleRangesWithStyle = [];\n        for (var i = 0, len = this._selections.length; i < len; i++) {\n            var selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            var visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output;\n    };\n    SelectionsOverlay.prototype.render = function (startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        var lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    };\n    SelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\n    SelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\n    SelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n    SelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\n    SelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n    SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n    SelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\n    return SelectionsOverlay;\n}(dynamicViewOverlay_1.DynamicViewOverlay));\nexports.SelectionsOverlay = SelectionsOverlay;\nthemeService_1.registerThemingParticipant(function (theme, collector) {\n    var editorSelectionColor = theme.getColor(colorRegistry_1.editorSelectionBackground);\n    if (editorSelectionColor) {\n        collector.addRule(\".monaco-editor .focused .selected-text { background-color: \" + editorSelectionColor + \"; }\");\n    }\n    var editorInactiveSelectionColor = theme.getColor(colorRegistry_1.editorInactiveSelection);\n    if (editorInactiveSelectionColor) {\n        collector.addRule(\".monaco-editor .selected-text { background-color: \" + editorInactiveSelectionColor + \"; }\");\n    }\n    var editorSelectionForegroundColor = theme.getColor(colorRegistry_1.editorSelectionForeground);\n    if (editorSelectionForegroundColor) {\n        collector.addRule(\".monaco-editor .view-line span.inline-selected-text { color: \" + editorSelectionForegroundColor + \"; }\");\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/selections/selections.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/browser/viewParts/selections/selections.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./selections';\nimport * as browser from 'vs/base/browser/browser';\nimport { DynamicViewOverlay } from 'vs/editor/browser/view/dynamicViewOverlay';\nimport { Range } from 'vs/editor/common/core/range';\nimport { HorizontalRange, LineVisibleRanges, RenderingContext } from 'vs/editor/common/view/renderingContext';\nimport { ViewContext } from 'vs/editor/common/view/viewContext';\nimport * as viewEvents from 'vs/editor/common/view/viewEvents';\nimport { editorInactiveSelection, editorSelectionBackground, editorSelectionForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { registerThemingParticipant } from 'vs/platform/theme/common/themeService';\n\nconst enum CornerStyle {\n\tEXTERN,\n\tINTERN,\n\tFLAT\n}\n\ninterface IVisibleRangeEndPointStyle {\n\ttop: CornerStyle;\n\tbottom: CornerStyle;\n}\n\nclass HorizontalRangeWithStyle {\n\tpublic left: number;\n\tpublic width: number;\n\tpublic startStyle: IVisibleRangeEndPointStyle | null;\n\tpublic endStyle: IVisibleRangeEndPointStyle | null;\n\n\tconstructor(other: HorizontalRange) {\n\t\tthis.left = other.left;\n\t\tthis.width = other.width;\n\t\tthis.startStyle = null;\n\t\tthis.endStyle = null;\n\t}\n}\n\nclass LineVisibleRangesWithStyle {\n\tpublic lineNumber: number;\n\tpublic ranges: HorizontalRangeWithStyle[];\n\n\tconstructor(lineNumber: number, ranges: HorizontalRangeWithStyle[]) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.ranges = ranges;\n\t}\n}\n\nfunction toStyledRange(item: HorizontalRange): HorizontalRangeWithStyle {\n\treturn new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item: LineVisibleRanges): LineVisibleRangesWithStyle {\n\treturn new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n\n// TODO@Alex: Remove this once IE11 fixes Bug #524217\n// The problem in IE11 is that it does some sort of auto-zooming to accomodate for displays with different pixel density.\n// Unfortunately, this auto-zooming is buggy around dealing with rounded borders\nconst isIEWithZoomingIssuesNearRoundedBorders = browser.isEdgeOrIE;\n\n\nexport class SelectionsOverlay extends DynamicViewOverlay {\n\n\tprivate static readonly SELECTION_CLASS_NAME = 'selected-text';\n\tprivate static readonly SELECTION_TOP_LEFT = 'top-left-radius';\n\tprivate static readonly SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n\tprivate static readonly SELECTION_TOP_RIGHT = 'top-right-radius';\n\tprivate static readonly SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n\tprivate static readonly EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n\n\tprivate static readonly ROUNDED_PIECE_WIDTH = 10;\n\n\tprivate readonly _context: ViewContext;\n\tprivate _lineHeight: number;\n\tprivate _roundedSelection: boolean;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _selections: Range[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._lineHeight = this._context.configuration.editor.lineHeight;\n\t\tthis._roundedSelection = this._context.configuration.editor.viewInfo.roundedSelection;\n\t\tthis._typicalHalfwidthCharacterWidth = this._context.configuration.editor.fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._selections = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.lineHeight) {\n\t\t\tthis._lineHeight = this._context.configuration.editor.lineHeight;\n\t\t}\n\t\tif (e.viewInfo) {\n\t\t\tthis._roundedSelection = this._context.configuration.editor.viewInfo.roundedSelection;\n\t\t}\n\t\tif (e.fontInfo) {\n\t\t\tthis._typicalHalfwidthCharacterWidth = this._context.configuration.editor.fontInfo.typicalHalfwidthCharacterWidth;\n\t\t}\n\t\treturn true;\n\t}\n\tpublic onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\treturn true;\n\t}\n\tpublic onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;//e.inlineDecorationsChanged;\n\t}\n\tpublic onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _visibleRangesHaveGaps(linesVisibleRanges: LineVisibleRangesWithStyle[]): boolean {\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[i];\n\n\t\t\tif (lineVisibleRanges.ranges.length > 1) {\n\t\t\t\t// There are two ranges on the same line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _enrichVisibleRangesWithStyle(viewport: Range, linesVisibleRanges: LineVisibleRangesWithStyle[], previousFrame: LineVisibleRangesWithStyle[] | null): void {\n\t\tconst epsilon = this._typicalHalfwidthCharacterWidth / 4;\n\t\tlet previousFrameTop: HorizontalRangeWithStyle | null = null;\n\t\tlet previousFrameBottom: HorizontalRangeWithStyle | null = null;\n\n\t\tif (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n\n\t\t\tconst topLineNumber = linesVisibleRanges[0].lineNumber;\n\t\t\tif (topLineNumber === viewport.startLineNumber) {\n\t\t\t\tfor (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === topLineNumber) {\n\t\t\t\t\t\tpreviousFrameTop = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\t\t\tif (bottomLineNumber === viewport.endLineNumber) {\n\t\t\t\tfor (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === bottomLineNumber) {\n\t\t\t\t\t\tpreviousFrameBottom = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previousFrameTop && !previousFrameTop.startStyle) {\n\t\t\t\tpreviousFrameTop = null;\n\t\t\t}\n\t\t\tif (previousFrameBottom && !previousFrameBottom.startStyle) {\n\t\t\t\tpreviousFrameBottom = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\t// We know for a fact that there is precisely one range on each line\n\t\t\tconst curLineRange = linesVisibleRanges[i].ranges[0];\n\t\t\tconst curLeft = curLineRange.left;\n\t\t\tconst curRight = curLineRange.left + curLineRange.width;\n\n\t\t\tconst startStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tconst endStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tif (i > 0) {\n\t\t\t\t// Look above\n\t\t\t\tconst prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n\t\t\t\tconst prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - prevLeft) < epsilon) {\n\t\t\t\t\tstartStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (curLeft > prevLeft) {\n\t\t\t\t\tstartStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - prevRight) < epsilon) {\n\t\t\t\t\tendStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (prevLeft < curRight && curRight < prevRight) {\n\t\t\t\t\tendStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameTop) {\n\t\t\t\t// Accept some hick-ups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.top = previousFrameTop.startStyle!.top;\n\t\t\t\tendStyle.top = previousFrameTop.endStyle!.top;\n\t\t\t}\n\n\t\t\tif (i + 1 < len) {\n\t\t\t\t// Look below\n\t\t\t\tconst nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n\t\t\t\tconst nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - nextLeft) < epsilon) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (nextLeft < curLeft && curLeft < nextRight) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - nextRight) < epsilon) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (curRight < nextRight) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameBottom) {\n\t\t\t\t// Accept some hick-ups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.bottom = previousFrameBottom.startStyle!.bottom;\n\t\t\t\tendStyle.bottom = previousFrameBottom.endStyle!.bottom;\n\t\t\t}\n\n\t\t\tcurLineRange.startStyle = startStyle;\n\t\t\tcurLineRange.endStyle = endStyle;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesWithStyle(selection: Range, ctx: RenderingContext, previousFrame: LineVisibleRangesWithStyle[] | null): LineVisibleRangesWithStyle[] {\n\t\tconst _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n\t\tconst linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\t\tconst visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n\n\t\tif (!isIEWithZoomingIssuesNearRoundedBorders && !visibleRangesHaveGaps && this._roundedSelection) {\n\t\t\tthis._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n\t\t}\n\n\t\t// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\t\treturn linesVisibleRanges;\n\t}\n\n\tprivate _createSelectionPiece(top: number, height: string, className: string, left: number, width: number): string {\n\t\treturn (\n\t\t\t'<div class=\"cslr '\n\t\t\t+ className\n\t\t\t+ '\" style=\"top:'\n\t\t\t+ top.toString()\n\t\t\t+ 'px;left:'\n\t\t\t+ left.toString()\n\t\t\t+ 'px;width:'\n\t\t\t+ width.toString()\n\t\t\t+ 'px;height:'\n\t\t\t+ height\n\t\t\t+ 'px;\"></div>'\n\t\t);\n\t}\n\n\tprivate _actualRenderOneSelection(output2: string[], visibleStartLineNumber: number, hasMultipleSelections: boolean, visibleRanges: LineVisibleRangesWithStyle[]): void {\n\t\tconst visibleRangesHaveStyle = (visibleRanges.length > 0 && visibleRanges[0].ranges[0].startStyle);\n\t\tconst fullLineHeight = (this._lineHeight).toString();\n\t\tconst reducedLineHeight = (this._lineHeight - 1).toString();\n\n\t\tconst firstLineNumber = (visibleRanges.length > 0 ? visibleRanges[0].lineNumber : 0);\n\t\tconst lastLineNumber = (visibleRanges.length > 0 ? visibleRanges[visibleRanges.length - 1].lineNumber : 0);\n\n\t\tfor (let i = 0, len = visibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = visibleRanges[i];\n\t\t\tconst lineNumber = lineVisibleRanges.lineNumber;\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tconst lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\n\t\t\tconst top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n\n\t\t\tlet lineOutput = '';\n\n\t\t\tfor (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[j];\n\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN || startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the left\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tlineOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlineOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN || endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the right\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tlineOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlineOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (startStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlineOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n\t\t\t}\n\n\t\t\toutput2[lineIndex] += lineOutput;\n\t\t}\n\t}\n\n\tprivate _previousFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\tpublic prepareRender(ctx: RenderingContext): void {\n\n\t\tconst output: string[] = [];\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = '';\n\t\t}\n\n\t\tconst thisFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\t\tfor (let i = 0, len = this._selections.length; i < len; i++) {\n\t\t\tconst selection = this._selections[i];\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tthisFrameVisibleRangesWithStyle[i] = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n\t\t\tthisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\t\t\tthis._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n\t\t}\n\n\t\tthis._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorSelectionColor = theme.getColor(editorSelectionBackground);\n\tif (editorSelectionColor) {\n\t\tcollector.addRule(`.monaco-editor .focused .selected-text { background-color: ${editorSelectionColor}; }`);\n\t}\n\tconst editorInactiveSelectionColor = theme.getColor(editorInactiveSelection);\n\tif (editorInactiveSelectionColor) {\n\t\tcollector.addRule(`.monaco-editor .selected-text { background-color: ${editorInactiveSelectionColor}; }`);\n\t}\n\tconst editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n\tif (editorSelectionForegroundColor) {\n\t\tcollector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n\t}\n});\n\nfunction abs(n: number): number {\n\treturn n < 0 ? -n : n;\n}"]}]}