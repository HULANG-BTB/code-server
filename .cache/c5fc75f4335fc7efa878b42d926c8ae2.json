{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/ipc/electron-browser/mainProcessService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/ipc/electron-browser/mainProcessService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/instantiation/common/instantiation\", \"vs/base/parts/ipc/electron-browser/ipc.electron-browser\", \"vs/base/common/lifecycle\"], function (require, exports, instantiation_1, ipc_electron_browser_1, lifecycle_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.IMainProcessService = instantiation_1.createDecorator('mainProcessService');\n    class MainProcessService extends lifecycle_1.Disposable {\n        constructor(windowId) {\n            super();\n            this.mainProcessConnection = this._register(new ipc_electron_browser_1.Client(`window:${windowId}`));\n        }\n        getChannel(channelName) {\n            return this.mainProcessConnection.getChannel(channelName);\n        }\n        registerChannel(channelName, channel) {\n            this.mainProcessConnection.registerChannel(channelName, channel);\n        }\n    }\n    exports.MainProcessService = MainProcessService;\n});\n",null]}