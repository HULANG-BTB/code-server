{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/links/getLinks.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/links/getLinks.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar uri_1 = require(\"vs/base/common/uri\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar modelService_1 = require(\"vs/editor/common/services/modelService\");\nvar commands_1 = require(\"vs/platform/commands/common/commands\");\nvar Link = /** @class */ (function () {\n    function Link(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    Link.prototype.toJSON = function () {\n        return {\n            range: this.range,\n            url: this.url\n        };\n    };\n    Object.defineProperty(Link.prototype, \"range\", {\n        get: function () {\n            return this._link.range;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Link.prototype, \"url\", {\n        get: function () {\n            return this._link.url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Link.prototype.resolve = function (token) {\n        var _this = this;\n        if (this._link.url) {\n            try {\n                if (typeof this._link.url === 'string') {\n                    return Promise.resolve(uri_1.URI.parse(this._link.url));\n                }\n                else {\n                    return Promise.resolve(this._link.url);\n                }\n            }\n            catch (e) {\n                return Promise.reject(new Error('invalid'));\n            }\n        }\n        if (typeof this._provider.resolveLink === 'function') {\n            return Promise.resolve(this._provider.resolveLink(this._link, token)).then(function (value) {\n                _this._link = value || _this._link;\n                if (_this._link.url) {\n                    // recurse\n                    return _this.resolve(token);\n                }\n                return Promise.reject(new Error('missing'));\n            });\n        }\n        return Promise.reject(new Error('missing'));\n    };\n    return Link;\n}());\nexports.Link = Link;\nfunction getLinks(model, token) {\n    var links = [];\n    // ask all providers for links in parallel\n    var promises = modes_1.LinkProviderRegistry.ordered(model).reverse().map(function (provider) {\n        return Promise.resolve(provider.provideLinks(model, token)).then(function (result) {\n            if (Array.isArray(result)) {\n                var newLinks = result.map(function (link) { return new Link(link, provider); });\n                links = union(links, newLinks);\n            }\n        }, errors_1.onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(function () {\n        return links;\n    });\n}\nexports.getLinks = getLinks;\nfunction union(oldLinks, newLinks) {\n    // reunite oldLinks with newLinks and remove duplicates\n    var result = [];\n    var oldIndex;\n    var oldLen;\n    var newIndex;\n    var newLen;\n    for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n        var oldLink = oldLinks[oldIndex];\n        var newLink = newLinks[newIndex];\n        if (range_1.Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n            // Remove the oldLink\n            oldIndex++;\n            continue;\n        }\n        var comparisonResult = range_1.Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n        if (comparisonResult < 0) {\n            // oldLink is before\n            result.push(oldLink);\n            oldIndex++;\n        }\n        else {\n            // newLink is before\n            result.push(newLink);\n            newIndex++;\n        }\n    }\n    for (; oldIndex < oldLen; oldIndex++) {\n        result.push(oldLinks[oldIndex]);\n    }\n    for (; newIndex < newLen; newIndex++) {\n        result.push(newLinks[newIndex]);\n    }\n    return result;\n}\ncommands_1.CommandsRegistry.registerCommand('_executeLinkProvider', function (accessor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var uri = args[0];\n    if (!(uri instanceof uri_1.URI)) {\n        return undefined;\n    }\n    var model = accessor.get(modelService_1.IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    return getLinks(model, cancellation_1.CancellationToken.None);\n});\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/links/getLinks.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/links/getLinks.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedExternalError } from 'vs/base/common/errors';\nimport { URI } from 'vs/base/common/uri';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILink, LinkProvider, LinkProviderRegistry } from 'vs/editor/common/modes';\nimport { IModelService } from 'vs/editor/common/services/modelService';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\n\nexport class Link implements ILink {\n\n\tprivate _link: ILink;\n\tprivate readonly _provider: LinkProvider;\n\n\tconstructor(link: ILink, provider: LinkProvider) {\n\t\tthis._link = link;\n\t\tthis._provider = provider;\n\t}\n\n\ttoJSON(): ILink {\n\t\treturn {\n\t\t\trange: this.range,\n\t\t\turl: this.url\n\t\t};\n\t}\n\n\tget range(): IRange {\n\t\treturn this._link.range;\n\t}\n\n\tget url(): URI | string | undefined {\n\t\treturn this._link.url;\n\t}\n\n\tresolve(token: CancellationToken): Promise<URI> {\n\t\tif (this._link.url) {\n\t\t\ttry {\n\t\t\t\tif (typeof this._link.url === 'string') {\n\t\t\t\t\treturn Promise.resolve(URI.parse(this._link.url));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(this._link.url);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn Promise.reject(new Error('invalid'));\n\t\t\t}\n\t\t}\n\n\t\tif (typeof this._provider.resolveLink === 'function') {\n\t\t\treturn Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n\t\t\t\tthis._link = value || this._link;\n\t\t\t\tif (this._link.url) {\n\t\t\t\t\t// recurse\n\t\t\t\t\treturn this.resolve(token);\n\t\t\t\t}\n\n\t\t\t\treturn Promise.reject(new Error('missing'));\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.reject(new Error('missing'));\n\t}\n}\n\nexport function getLinks(model: ITextModel, token: CancellationToken): Promise<Link[]> {\n\n\tlet links: Link[] = [];\n\n\t// ask all providers for links in parallel\n\tconst promises = LinkProviderRegistry.ordered(model).reverse().map(provider => {\n\t\treturn Promise.resolve(provider.provideLinks(model, token)).then(result => {\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tconst newLinks = result.map(link => new Link(link, provider));\n\t\t\t\tlinks = union(links, newLinks);\n\t\t\t}\n\t\t}, onUnexpectedExternalError);\n\t});\n\n\treturn Promise.all(promises).then(() => {\n\t\treturn links;\n\t});\n}\n\nfunction union(oldLinks: Link[], newLinks: Link[]): Link[] {\n\t// reunite oldLinks with newLinks and remove duplicates\n\tlet result: Link[] = [];\n\tlet oldIndex: number;\n\tlet oldLen: number;\n\tlet newIndex: number;\n\tlet newLen: number;\n\n\tfor (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n\t\tconst oldLink = oldLinks[oldIndex];\n\t\tconst newLink = newLinks[newIndex];\n\n\t\tif (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n\t\t\t// Remove the oldLink\n\t\t\toldIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n\n\t\tif (comparisonResult < 0) {\n\t\t\t// oldLink is before\n\t\t\tresult.push(oldLink);\n\t\t\toldIndex++;\n\t\t} else {\n\t\t\t// newLink is before\n\t\t\tresult.push(newLink);\n\t\t\tnewIndex++;\n\t\t}\n\t}\n\n\tfor (; oldIndex < oldLen; oldIndex++) {\n\t\tresult.push(oldLinks[oldIndex]);\n\t}\n\tfor (; newIndex < newLen; newIndex++) {\n\t\tresult.push(newLinks[newIndex]);\n\t}\n\n\treturn result;\n}\n\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => {\n\n\tconst [uri] = args;\n\tif (!(uri instanceof URI)) {\n\t\treturn undefined;\n\t}\n\n\tconst model = accessor.get(IModelService).getModel(uri);\n\tif (!model) {\n\t\treturn undefined;\n\t}\n\n\treturn getLinks(model, CancellationToken.None);\n});\n"]}]}