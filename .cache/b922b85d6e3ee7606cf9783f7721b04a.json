{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/folding/foldingDecorations.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/folding/foldingDecorations.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar model_1 = require(\"vs/editor/common/model\");\nvar textModel_1 = require(\"vs/editor/common/model/textModel\");\nvar FoldingDecorationProvider = /** @class */ (function () {\n    function FoldingDecorationProvider(editor) {\n        this.editor = editor;\n        this.autoHideFoldingControls = true;\n    }\n    FoldingDecorationProvider.prototype.getDecorationOption = function (isCollapsed) {\n        if (isCollapsed) {\n            return FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION;\n        }\n        else if (this.autoHideFoldingControls) {\n            return FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\n        }\n        else {\n            return FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\n        }\n    };\n    FoldingDecorationProvider.prototype.deltaDecorations = function (oldDecorations, newDecorations) {\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\n    };\n    FoldingDecorationProvider.prototype.changeDecorations = function (callback) {\n        return this.editor.changeDecorations(callback);\n    };\n    FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        afterContentClassName: 'inline-folded',\n        linesDecorationsClassName: 'folding collapsed'\n    });\n    FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        linesDecorationsClassName: 'folding'\n    });\n    FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION = textModel_1.ModelDecorationOptions.register({\n        stickiness: model_1.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n        linesDecorationsClassName: 'folding alwaysShowFoldIcons'\n    });\n    return FoldingDecorationProvider;\n}());\nexports.FoldingDecorationProvider = FoldingDecorationProvider;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/folding/foldingDecorations.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/folding/foldingDecorations.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,gDAAwH;AACxH,8DAA0E;AAI1E;IAoBC,mCAA6B,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QAFzC,4BAAuB,GAAY,IAAI,CAAC;IAG/C,CAAC;IAED,uDAAmB,GAAnB,UAAoB,WAAoB;QACvC,IAAI,WAAW,EAAE;YAChB,OAAO,yBAAyB,CAAC,2BAA2B,CAAC;SAC7D;aAAM,IAAI,IAAI,CAAC,uBAAuB,EAAE;YACxC,OAAO,yBAAyB,CAAC,oCAAoC,CAAC;SACtE;aAAM;YACN,OAAO,yBAAyB,CAAC,0BAA0B,CAAC;SAC5D;IACF,CAAC;IAED,oDAAgB,GAAhB,UAAiB,cAAwB,EAAE,cAAuC;QACjF,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IACrE,CAAC;IAED,qDAAiB,GAAjB,UAAqB,QAAgE;QACpF,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IArCc,qDAA2B,GAAG,kCAAsB,CAAC,QAAQ,CAAC;QAC5E,UAAU,EAAE,8BAAsB,CAAC,2BAA2B;QAC9D,qBAAqB,EAAE,eAAe;QACtC,yBAAyB,EAAE,mBAAmB;KAC9C,CAAC,CAAC;IAEY,8DAAoC,GAAG,kCAAsB,CAAC,QAAQ,CAAC;QACrF,UAAU,EAAE,8BAAsB,CAAC,2BAA2B;QAC9D,yBAAyB,EAAE,SAAS;KACpC,CAAC,CAAC;IAEY,oDAA0B,GAAG,kCAAsB,CAAC,QAAQ,CAAC;QAC3E,UAAU,EAAE,8BAAsB,CAAC,2BAA2B;QAC9D,yBAAyB,EAAE,6BAA6B;KACxD,CAAC,CAAC;IAwBJ,gCAAC;CAAA,AAxCD,IAwCC;AAxCY,8DAAyB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TrackedRangeStickiness, IModelDeltaDecoration, IModelDecorationsChangeAccessor } from 'vs/editor/common/model';\nimport { ModelDecorationOptions } from 'vs/editor/common/model/textModel';\nimport { IDecorationProvider } from 'vs/editor/contrib/folding/foldingModel';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\n\nexport class FoldingDecorationProvider implements IDecorationProvider {\n\n\tprivate static COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tafterContentClassName: 'inline-folded',\n\t\tlinesDecorationsClassName: 'folding collapsed'\n\t});\n\n\tprivate static EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tlinesDecorationsClassName: 'folding'\n\t});\n\n\tprivate static EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\n\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\tlinesDecorationsClassName: 'folding alwaysShowFoldIcons'\n\t});\n\n\tpublic autoHideFoldingControls: boolean = true;\n\n\tconstructor(private readonly editor: ICodeEditor) {\n\t}\n\n\tgetDecorationOption(isCollapsed: boolean): ModelDecorationOptions {\n\t\tif (isCollapsed) {\n\t\t\treturn FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION;\n\t\t} else if (this.autoHideFoldingControls) {\n\t\t\treturn FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\n\t\t} else {\n\t\t\treturn FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\n\t\t}\n\t}\n\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[] {\n\t\treturn this.editor.deltaDecorations(oldDecorations, newDecorations);\n\t}\n\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T): T {\n\t\treturn this.editor.changeDecorations(callback);\n\t}\n}\n"]}]}