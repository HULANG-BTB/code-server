{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionModel.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionModel.ts","mtime":1555102316000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar async_1 = require(\"vs/base/common/async\");\nvar event_1 = require(\"vs/base/common/event\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar modes_1 = require(\"vs/editor/common/modes\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar codeAction_1 = require(\"./codeAction\");\nexports.SUPPORTED_CODE_ACTIONS = new contextkey_1.RawContextKey('supportedCodeAction', '');\nvar CodeActionOracle = /** @class */ (function () {\n    function CodeActionOracle(_editor, _markerService, _signalChange, _delay, _progressService) {\n        if (_delay === void 0) { _delay = 250; }\n        var _this = this;\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._signalChange = _signalChange;\n        this._delay = _delay;\n        this._progressService = _progressService;\n        this._disposables = [];\n        this._autoTriggerTimer = new async_1.TimeoutTimer();\n        this._disposables.push(this._markerService.onMarkerChanged(function (e) { return _this._onMarkerChanges(e); }), this._editor.onDidChangeCursorPosition(function () { return _this._onCursorChange(); }));\n    }\n    CodeActionOracle.prototype.dispose = function () {\n        this._disposables = lifecycle_1.dispose(this._disposables);\n        this._autoTriggerTimer.cancel();\n    };\n    CodeActionOracle.prototype.trigger = function (trigger) {\n        var selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n        return this._createEventAndSignalChange(trigger, selection);\n    };\n    CodeActionOracle.prototype._onMarkerChanges = function (resources) {\n        var _this = this;\n        var model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (resources.some(function (resource) { return resource.toString() === model.uri.toString(); })) {\n            this._autoTriggerTimer.cancelAndSet(function () {\n                _this.trigger({ type: 'auto' });\n            }, this._delay);\n        }\n    };\n    CodeActionOracle.prototype._onCursorChange = function () {\n        var _this = this;\n        this._autoTriggerTimer.cancelAndSet(function () {\n            _this.trigger({ type: 'auto' });\n        }, this._delay);\n    };\n    CodeActionOracle.prototype._getRangeOfMarker = function (selection) {\n        var model = this._editor.getModel();\n        if (!model) {\n            return undefined;\n        }\n        for (var _i = 0, _a = this._markerService.read({ resource: model.uri }); _i < _a.length; _i++) {\n            var marker = _a[_i];\n            if (range_1.Range.intersectRanges(marker, selection)) {\n                return range_1.Range.lift(marker);\n            }\n        }\n        return undefined;\n    };\n    CodeActionOracle.prototype._getRangeOfSelectionUnlessWhitespaceEnclosed = function (trigger) {\n        if (!this._editor.hasModel()) {\n            return undefined;\n        }\n        var model = this._editor.getModel();\n        var selection = this._editor.getSelection();\n        if (selection.isEmpty() && trigger.type === 'auto') {\n            var _a = selection.getPosition(), lineNumber = _a.lineNumber, column = _a.column;\n            var line = model.getLineContent(lineNumber);\n            if (line.length === 0) {\n                // empty line\n                return undefined;\n            }\n            else if (column === 1) {\n                // look only right\n                if (/\\s/.test(line[0])) {\n                    return undefined;\n                }\n            }\n            else if (column === model.getLineMaxColumn(lineNumber)) {\n                // look only left\n                if (/\\s/.test(line[line.length - 1])) {\n                    return undefined;\n                }\n            }\n            else {\n                // look left and right\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n                    return undefined;\n                }\n            }\n        }\n        return selection ? selection : undefined;\n    };\n    CodeActionOracle.prototype._createEventAndSignalChange = function (trigger, selection) {\n        if (!selection) {\n            // cancel\n            this._signalChange(CodeActionsState.Empty);\n            return Promise.resolve(undefined);\n        }\n        else {\n            var model_1 = this._editor.getModel();\n            if (!model_1) {\n                // cancel\n                this._signalChange(CodeActionsState.Empty);\n                return Promise.resolve(undefined);\n            }\n            var markerRange = this._getRangeOfMarker(selection);\n            var position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();\n            var actions = async_1.createCancelablePromise(function (token) { return codeAction_1.getCodeActions(model_1, selection, trigger, token); });\n            if (this._progressService && trigger.type === 'manual') {\n                this._progressService.showWhile(actions, 250);\n            }\n            this._signalChange(new CodeActionsState.Triggered(trigger, selection, position, actions));\n            return actions;\n        }\n    };\n    return CodeActionOracle;\n}());\nexports.CodeActionOracle = CodeActionOracle;\nvar CodeActionsState;\n(function (CodeActionsState) {\n    var Type;\n    (function (Type) {\n        Type[Type[\"Empty\"] = 0] = \"Empty\";\n        Type[Type[\"Triggered\"] = 1] = \"Triggered\";\n    })(Type = CodeActionsState.Type || (CodeActionsState.Type = {}));\n    CodeActionsState.Empty = new /** @class */ (function () {\n        function class_1() {\n            this.type = Type.Empty;\n        }\n        return class_1;\n    }());\n    var Triggered = /** @class */ (function () {\n        function Triggered(trigger, rangeOrSelection, position, actions) {\n            this.trigger = trigger;\n            this.rangeOrSelection = rangeOrSelection;\n            this.position = position;\n            this.actions = actions;\n            this.type = Type.Triggered;\n        }\n        return Triggered;\n    }());\n    CodeActionsState.Triggered = Triggered;\n})(CodeActionsState = exports.CodeActionsState || (exports.CodeActionsState = {}));\nvar CodeActionModel = /** @class */ (function () {\n    function CodeActionModel(_editor, _markerService, contextKeyService, _progressService) {\n        var _this = this;\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._progressService = _progressService;\n        this._state = CodeActionsState.Empty;\n        this._onDidChangeState = new event_1.Emitter();\n        this._disposables = [];\n        this._supportedCodeActions = exports.SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n        this._disposables.push(this._editor.onDidChangeModel(function () { return _this._update(); }));\n        this._disposables.push(this._editor.onDidChangeModelLanguage(function () { return _this._update(); }));\n        this._disposables.push(modes_1.CodeActionProviderRegistry.onDidChange(function () { return _this._update(); }));\n        this._update();\n    }\n    CodeActionModel.prototype.dispose = function () {\n        this._disposables = lifecycle_1.dispose(this._disposables);\n        lifecycle_1.dispose(this._codeActionOracle);\n    };\n    Object.defineProperty(CodeActionModel.prototype, \"onDidChangeState\", {\n        get: function () {\n            return this._onDidChangeState.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CodeActionModel.prototype._update = function () {\n        var _this = this;\n        if (this._codeActionOracle) {\n            this._codeActionOracle.dispose();\n            this._codeActionOracle = undefined;\n        }\n        if (this._state.type === CodeActionsState.Type.Triggered) {\n            this._state.actions.cancel();\n        }\n        this.setState(CodeActionsState.Empty);\n        var model = this._editor.getModel();\n        if (model\n            && modes_1.CodeActionProviderRegistry.has(model)\n            && !this._editor.getConfiguration().readOnly) {\n            var supportedActions = [];\n            for (var _i = 0, _a = modes_1.CodeActionProviderRegistry.all(model); _i < _a.length; _i++) {\n                var provider = _a[_i];\n                if (Array.isArray(provider.providedCodeActionKinds)) {\n                    supportedActions.push.apply(supportedActions, provider.providedCodeActionKinds);\n                }\n            }\n            this._supportedCodeActions.set(supportedActions.join(' '));\n            this._codeActionOracle = new CodeActionOracle(this._editor, this._markerService, function (newState) { return _this.setState(newState); }, undefined, this._progressService);\n            this._codeActionOracle.trigger({ type: 'auto' });\n        }\n        else {\n            this._supportedCodeActions.reset();\n        }\n    };\n    CodeActionModel.prototype.trigger = function (trigger) {\n        if (this._codeActionOracle) {\n            return this._codeActionOracle.trigger(trigger);\n        }\n        return Promise.resolve(undefined);\n    };\n    CodeActionModel.prototype.setState = function (newState) {\n        if (newState === this._state) {\n            return;\n        }\n        this._state = newState;\n        this._onDidChangeState.fire(newState);\n    };\n    return CodeActionModel;\n}());\nexports.CodeActionModel = CodeActionModel;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionModel.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/codeAction/codeActionModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, TimeoutTimer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeEditor } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CodeActionProviderRegistry } from 'vs/editor/common/modes';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IMarkerService } from 'vs/platform/markers/common/markers';\nimport { IProgressService } from 'vs/platform/progress/common/progress';\nimport { getCodeActions, CodeActionSet } from './codeAction';\nimport { CodeActionTrigger } from './codeActionTrigger';\n\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey<string>('supportedCodeAction', '');\n\nexport class CodeActionOracle {\n\n\tprivate _disposables: IDisposable[] = [];\n\tprivate readonly _autoTriggerTimer = new TimeoutTimer();\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _markerService: IMarkerService,\n\t\tprivate readonly _signalChange: (newState: CodeActionsState.State) => void,\n\t\tprivate readonly _delay: number = 250,\n\t\tprivate readonly _progressService?: IProgressService,\n\t) {\n\t\tthis._disposables.push(\n\t\t\tthis._markerService.onMarkerChanged(e => this._onMarkerChanges(e)),\n\t\t\tthis._editor.onDidChangeCursorPosition(() => this._onCursorChange()),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t\tthis._autoTriggerTimer.cancel();\n\t}\n\n\ttrigger(trigger: CodeActionTrigger) {\n\t\tconst selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n\t\treturn this._createEventAndSignalChange(trigger, selection);\n\t}\n\n\tprivate _onMarkerChanges(resources: URI[]): void {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (resources.some(resource => resource.toString() === model.uri.toString())) {\n\t\t\tthis._autoTriggerTimer.cancelAndSet(() => {\n\t\t\t\tthis.trigger({ type: 'auto' });\n\t\t\t}, this._delay);\n\t\t}\n\t}\n\n\tprivate _onCursorChange(): void {\n\t\tthis._autoTriggerTimer.cancelAndSet(() => {\n\t\t\tthis.trigger({ type: 'auto' });\n\t\t}, this._delay);\n\t}\n\n\tprivate _getRangeOfMarker(selection: Selection): Range | undefined {\n\t\tconst model = this._editor.getModel();\n\t\tif (!model) {\n\t\t\treturn undefined;\n\t\t}\n\t\tfor (const marker of this._markerService.read({ resource: model.uri })) {\n\t\t\tif (Range.intersectRanges(marker, selection)) {\n\t\t\t\treturn Range.lift(marker);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger: CodeActionTrigger): Selection | undefined {\n\t\tif (!this._editor.hasModel()) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst model = this._editor.getModel();\n\t\tconst selection = this._editor.getSelection();\n\t\tif (selection.isEmpty() && trigger.type === 'auto') {\n\t\t\tconst { lineNumber, column } = selection.getPosition();\n\t\t\tconst line = model.getLineContent(lineNumber);\n\t\t\tif (line.length === 0) {\n\t\t\t\t// empty line\n\t\t\t\treturn undefined;\n\t\t\t} else if (column === 1) {\n\t\t\t\t// look only right\n\t\t\t\tif (/\\s/.test(line[0])) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} else if (column === model.getLineMaxColumn(lineNumber)) {\n\t\t\t\t// look only left\n\t\t\t\tif (/\\s/.test(line[line.length - 1])) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// look left and right\n\t\t\t\tif (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn selection ? selection : undefined;\n\t}\n\n\tprivate _createEventAndSignalChange(trigger: CodeActionTrigger, selection: Selection | undefined): Promise<CodeActionSet | undefined> {\n\t\tif (!selection) {\n\t\t\t// cancel\n\t\t\tthis._signalChange(CodeActionsState.Empty);\n\t\t\treturn Promise.resolve(undefined);\n\t\t} else {\n\t\t\tconst model = this._editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\t// cancel\n\t\t\t\tthis._signalChange(CodeActionsState.Empty);\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\tconst markerRange = this._getRangeOfMarker(selection);\n\t\t\tconst position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();\n\t\t\tconst actions = createCancelablePromise(token => getCodeActions(model, selection, trigger, token));\n\n\t\t\tif (this._progressService && trigger.type === 'manual') {\n\t\t\t\tthis._progressService.showWhile(actions, 250);\n\t\t\t}\n\n\t\t\tthis._signalChange(new CodeActionsState.Triggered(\n\t\t\t\ttrigger,\n\t\t\t\tselection,\n\t\t\t\tposition,\n\t\t\t\tactions\n\t\t\t));\n\t\t\treturn actions;\n\t\t}\n\t}\n}\n\nexport namespace CodeActionsState {\n\n\texport const enum Type {\n\t\tEmpty,\n\t\tTriggered,\n\t}\n\n\texport const Empty = new class { readonly type = Type.Empty; };\n\n\texport class Triggered {\n\t\treadonly type = Type.Triggered;\n\n\t\tconstructor(\n\t\t\tpublic readonly trigger: CodeActionTrigger,\n\t\t\tpublic readonly rangeOrSelection: Range | Selection,\n\t\t\tpublic readonly position: Position,\n\t\t\tpublic readonly actions: CancelablePromise<CodeActionSet>,\n\t\t) { }\n\t}\n\n\texport type State = typeof Empty | Triggered;\n}\n\nexport class CodeActionModel {\n\n\tprivate _codeActionOracle?: CodeActionOracle;\n\tprivate _state: CodeActionsState.State = CodeActionsState.Empty;\n\tprivate _onDidChangeState = new Emitter<CodeActionsState.State>();\n\tprivate _disposables: IDisposable[] = [];\n\tprivate readonly _supportedCodeActions: IContextKey<string>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _markerService: IMarkerService,\n\t\tcontextKeyService: IContextKeyService,\n\t\tprivate readonly _progressService: IProgressService\n\t) {\n\t\tthis._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n\n\t\tthis._disposables.push(this._editor.onDidChangeModel(() => this._update()));\n\t\tthis._disposables.push(this._editor.onDidChangeModelLanguage(() => this._update()));\n\t\tthis._disposables.push(CodeActionProviderRegistry.onDidChange(() => this._update()));\n\n\t\tthis._update();\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t\tdispose(this._codeActionOracle);\n\t}\n\n\tget onDidChangeState(): Event<CodeActionsState.State> {\n\t\treturn this._onDidChangeState.event;\n\t}\n\n\tprivate _update(): void {\n\t\tif (this._codeActionOracle) {\n\t\t\tthis._codeActionOracle.dispose();\n\t\t\tthis._codeActionOracle = undefined;\n\t\t}\n\n\t\tif (this._state.type === CodeActionsState.Type.Triggered) {\n\t\t\tthis._state.actions.cancel();\n\t\t}\n\t\tthis.setState(CodeActionsState.Empty);\n\n\t\tconst model = this._editor.getModel();\n\t\tif (model\n\t\t\t&& CodeActionProviderRegistry.has(model)\n\t\t\t&& !this._editor.getConfiguration().readOnly\n\t\t) {\n\t\t\tconst supportedActions: string[] = [];\n\t\t\tfor (const provider of CodeActionProviderRegistry.all(model)) {\n\t\t\t\tif (Array.isArray(provider.providedCodeActionKinds)) {\n\t\t\t\t\tsupportedActions.push(...provider.providedCodeActionKinds);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._supportedCodeActions.set(supportedActions.join(' '));\n\n\t\t\tthis._codeActionOracle = new CodeActionOracle(this._editor, this._markerService, newState => this.setState(newState), undefined, this._progressService);\n\t\t\tthis._codeActionOracle.trigger({ type: 'auto' });\n\t\t} else {\n\t\t\tthis._supportedCodeActions.reset();\n\t\t}\n\t}\n\n\tpublic trigger(trigger: CodeActionTrigger): Promise<CodeActionSet | undefined> {\n\t\tif (this._codeActionOracle) {\n\t\t\treturn this._codeActionOracle.trigger(trigger);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate setState(newState: CodeActionsState.State) {\n\t\tif (newState === this._state) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = newState;\n\t\tthis._onDidChangeState.fire(newState);\n\t}\n}\n"]}]}