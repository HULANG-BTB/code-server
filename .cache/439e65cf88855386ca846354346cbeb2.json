{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/activity/common/activity.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/platform/instantiation/common/instantiation\"], function (require, exports, instantiation_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class BaseBadge {\n        constructor(descriptorFn) {\n            this.descriptorFn = descriptorFn;\n        }\n        getDescription() {\n            return this.descriptorFn(null);\n        }\n    }\n    exports.BaseBadge = BaseBadge;\n    class NumberBadge extends BaseBadge {\n        constructor(number, descriptorFn) {\n            super(descriptorFn);\n            this.number = number;\n        }\n        getDescription() {\n            return this.descriptorFn(this.number);\n        }\n    }\n    exports.NumberBadge = NumberBadge;\n    class TextBadge extends BaseBadge {\n        constructor(text, descriptorFn) {\n            super(descriptorFn);\n            this.text = text;\n        }\n    }\n    exports.TextBadge = TextBadge;\n    class IconBadge extends BaseBadge {\n        constructor(descriptorFn) {\n            super(descriptorFn);\n        }\n    }\n    exports.IconBadge = IconBadge;\n    class ProgressBadge extends BaseBadge {\n    }\n    exports.ProgressBadge = ProgressBadge;\n    exports.IActivityService = instantiation_1.createDecorator('activityService');\n});\n",null]}