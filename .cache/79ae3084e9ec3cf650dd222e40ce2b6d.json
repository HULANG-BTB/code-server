{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/tree/abstractTree.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/tree/abstractTree.ts","mtime":1555846338028},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"vs/css!./media/tree\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar listWidget_1 = require(\"vs/base/browser/ui/list/listWidget\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar event_1 = require(\"vs/base/common/event\");\nvar keyboardEvent_1 = require(\"vs/base/browser/keyboardEvent\");\nvar keyCodes_1 = require(\"vs/base/common/keyCodes\");\nvar tree_1 = require(\"vs/base/browser/ui/tree/tree\");\nvar dnd_1 = require(\"vs/base/browser/dnd\");\nvar arrays_1 = require(\"vs/base/common/arrays\");\nvar listView_1 = require(\"vs/base/browser/ui/list/listView\");\nvar event_2 = require(\"vs/base/browser/event\");\nvar filters_1 = require(\"vs/base/common/filters\");\nvar indexTreeModel_1 = require(\"vs/base/browser/ui/tree/indexTreeModel\");\nvar nls_1 = require(\"vs/nls\");\nvar async_1 = require(\"vs/base/common/async\");\nvar browser_1 = require(\"vs/base/browser/browser\");\nvar map_1 = require(\"vs/base/common/map\");\nvar numbers_1 = require(\"vs/base/common/numbers\");\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof listView_1.ElementsDragAndDropData) {\n        var nodes = data.elements;\n        return new listView_1.ElementsDragAndDropData(nodes.map(function (node) { return node.element; }));\n    }\n    return data;\n}\nvar TreeNodeListDragAndDrop = /** @class */ (function () {\n    function TreeNodeListDragAndDrop(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = lifecycle_1.Disposable.None;\n    }\n    TreeNodeListDragAndDrop.prototype.getDragURI = function (node) {\n        return this.dnd.getDragURI(node.element);\n    };\n    TreeNodeListDragAndDrop.prototype.getDragLabel = function (nodes) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(function (node) { return node.element; }));\n        }\n        return undefined;\n    };\n    TreeNodeListDragAndDrop.prototype.onDragStart = function (data, originalEvent) {\n        if (this.dnd.onDragStart) {\n            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\n        }\n    };\n    TreeNodeListDragAndDrop.prototype.onDragOver = function (data, targetNode, targetIndex, originalEvent, raw) {\n        var _this = this;\n        if (raw === void 0) { raw = true; }\n        var result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        var didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = async_1.disposableTimeout(function () {\n                var model = _this.modelProvider();\n                var ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                _this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined') {\n            if (!raw) {\n                var accept = typeof result === 'boolean' ? result : result.accept;\n                var effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept: accept, effect: effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === tree_1.TreeDragOverBubble.Up) {\n            var parentNode = targetNode.parent;\n            var model_1 = this.modelProvider();\n            var parentIndex = parentNode && model_1.getListIndex(model_1.getNodeLocation(parentNode));\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        var model = this.modelProvider();\n        var ref = model.getNodeLocation(targetNode);\n        var start = model.getListIndex(ref);\n        var length = model.getListRenderCount(ref);\n        return tslib_1.__assign({}, result, { feedback: arrays_1.range(start, start + length) });\n    };\n    TreeNodeListDragAndDrop.prototype.drop = function (data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    };\n    return TreeNodeListDragAndDrop;\n}());\nfunction asListOptions(modelProvider, options) {\n    return options && tslib_1.__assign({}, options, { identityProvider: options.identityProvider && {\n            getId: function (el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent: function (e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(tslib_1.__assign({}, e, { element: e.element }));\n            },\n            isSelectionRangeChangeEvent: function (e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(tslib_1.__assign({}, e, { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && {\n            getAriaLabel: function (e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getAriaLevel: function (node) {\n                return node.depth;\n            }\n        }, keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && tslib_1.__assign({}, options.keyboardNavigationLabelProvider, { getKeyboardNavigationLabel: function (node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation, ariaSetProvider: {\n            getSetSize: function (node) {\n                return node.parent.visibleChildrenCount;\n            },\n            getPosInSet: function (node) {\n                return node.visibleChildIndex + 1;\n            }\n        } });\n}\nvar ComposedTreeDelegate = /** @class */ (function () {\n    function ComposedTreeDelegate(delegate) {\n        this.delegate = delegate;\n    }\n    ComposedTreeDelegate.prototype.getHeight = function (element) {\n        return this.delegate.getHeight(element.element);\n    };\n    ComposedTreeDelegate.prototype.getTemplateId = function (element) {\n        return this.delegate.getTemplateId(element.element);\n    };\n    ComposedTreeDelegate.prototype.hasDynamicHeight = function (element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    };\n    ComposedTreeDelegate.prototype.setDynamicHeight = function (element, height) {\n        if (this.delegate.setDynamicHeight) {\n            this.delegate.setDynamicHeight(element.element, height);\n        }\n    };\n    return ComposedTreeDelegate;\n}());\nexports.ComposedTreeDelegate = ComposedTreeDelegate;\nvar TreeRenderer = /** @class */ (function () {\n    function TreeRenderer(renderer, onDidChangeCollapseState, options) {\n        if (options === void 0) { options = {}; }\n        this.renderer = renderer;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        event_1.Event.map(onDidChangeCollapseState, function (e) { return e.node; })(this.onDidChangeNodeTwistieState, this, this.disposables);\n        if (renderer.onDidChangeTwistieState) {\n            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\n        }\n    }\n    TreeRenderer.prototype.updateOptions = function (options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (typeof options.indent !== 'undefined') {\n            this.indent = numbers_1.clamp(options.indent, 0, 40);\n        }\n        this.renderedNodes.forEach(function (templateData, node) {\n            templateData.twistie.style.marginLeft = node.depth * _this.indent + \"px\";\n        });\n    };\n    TreeRenderer.prototype.renderTemplate = function (container) {\n        var el = dom_1.append(container, dom_1.$('.monaco-tl-row'));\n        var twistie = dom_1.append(el, dom_1.$('.monaco-tl-twistie'));\n        var contents = dom_1.append(el, dom_1.$('.monaco-tl-contents'));\n        var templateData = this.renderer.renderTemplate(contents);\n        return { container: container, twistie: twistie, templateData: templateData };\n    };\n    TreeRenderer.prototype.renderElement = function (node, index, templateData, dynamicHeightProbing) {\n        if (!dynamicHeightProbing) {\n            this.renderedNodes.set(node, templateData);\n            this.renderedElements.set(node.element, node);\n        }\n        var indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.marginLeft = indent + \"px\";\n        this.update(node, templateData);\n        this.renderer.renderElement(node, index, templateData.templateData, dynamicHeightProbing);\n    };\n    TreeRenderer.prototype.disposeElement = function (node, index, templateData, dynamicHeightProbing) {\n        if (this.renderer.disposeElement) {\n            this.renderer.disposeElement(node, index, templateData.templateData, dynamicHeightProbing);\n        }\n        if (!dynamicHeightProbing) {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    };\n    TreeRenderer.prototype.disposeTemplate = function (templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    };\n    TreeRenderer.prototype.onDidChangeTwistieState = function (element) {\n        var node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    };\n    TreeRenderer.prototype.onDidChangeNodeTwistieState = function (node) {\n        var templateData = this.renderedNodes.get(node);\n        if (!templateData) {\n            return;\n        }\n        this.update(node, templateData);\n    };\n    TreeRenderer.prototype.update = function (node, templateData) {\n        if (this.renderer.renderTwistie) {\n            this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        dom_1.toggleClass(templateData.twistie, 'collapsible', node.collapsible);\n        dom_1.toggleClass(templateData.twistie, 'collapsed', node.collapsible && node.collapsed);\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n    };\n    TreeRenderer.prototype.dispose = function () {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    TreeRenderer.DefaultIndent = 8;\n    return TreeRenderer;\n}());\nvar TypeFilter = /** @class */ (function () {\n    function TypeFilter(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this.disposables = [];\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    Object.defineProperty(TypeFilter.prototype, \"totalCount\", {\n        get: function () { return this._totalCount; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeFilter.prototype, \"matchCount\", {\n        get: function () { return this._matchCount; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeFilter.prototype, \"pattern\", {\n        set: function (pattern) {\n            this._pattern = pattern;\n            this._lowercasePattern = pattern.toLowerCase();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeFilter.prototype.filter = function (element, parentVisibility) {\n        if (this._filter) {\n            var result = this._filter.filter(element, parentVisibility);\n            if (this.tree.options.simpleKeyboardNavigation) {\n                return result;\n            }\n            var visibility = void 0;\n            if (typeof result === 'boolean') {\n                visibility = result ? tree_1.TreeVisibility.Visible : tree_1.TreeVisibility.Hidden;\n            }\n            else if (indexTreeModel_1.isFilterResult(result)) {\n                visibility = indexTreeModel_1.getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === tree_1.TreeVisibility.Hidden) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\n            this._matchCount++;\n            return { data: filters_1.FuzzyScore.Default, visibility: true };\n        }\n        var label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        var labelStr = label && label.toString();\n        if (typeof labelStr === 'undefined') {\n            return { data: filters_1.FuzzyScore.Default, visibility: true };\n        }\n        var score = filters_1.fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\n        if (!score) {\n            if (this.tree.options.filterOnType) {\n                return tree_1.TreeVisibility.Recurse;\n            }\n            else {\n                return { data: filters_1.FuzzyScore.Default, visibility: true };\n            }\n            // DEMO: smarter filter ?\n            // return parentVisibility === TreeVisibility.Visible ? true : TreeVisibility.Recurse;\n        }\n        this._matchCount++;\n        return { data: score, visibility: true };\n    };\n    TypeFilter.prototype.reset = function () {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    };\n    TypeFilter.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    return TypeFilter;\n}());\nvar TypeFilterController = /** @class */ (function () {\n    function TypeFilterController(tree, model, view, filter, keyboardNavigationLabelProvider) {\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._enabled = false;\n        this._pattern = '';\n        this._onDidChangeEmptyState = new event_1.Emitter();\n        this.onDidChangeEmptyState = event_1.Event.latch(this._onDidChangeEmptyState.event);\n        this.positionClassName = 'ne';\n        this.automaticKeyboardNavigation = true;\n        this.triggered = false;\n        this._onDidChangePattern = new event_1.Emitter();\n        this.onDidChangePattern = this._onDidChangePattern.event;\n        this.enabledDisposables = [];\n        this.disposables = [];\n        this.domNode = dom_1.$(\".monaco-list-type-filter.\" + this.positionClassName);\n        this.domNode.draggable = true;\n        event_2.domEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\n        this.messageDomNode = dom_1.append(view.getHTMLElement(), dom_1.$(\".monaco-list-type-filter-message\"));\n        this.labelDomNode = dom_1.append(this.domNode, dom_1.$('span.label'));\n        var controls = dom_1.append(this.domNode, dom_1.$('.controls'));\n        this._filterOnType = !!tree.options.filterOnType;\n        this.filterOnTypeDomNode = dom_1.append(controls, dom_1.$('input.filter'));\n        this.filterOnTypeDomNode.type = 'checkbox';\n        this.filterOnTypeDomNode.checked = this._filterOnType;\n        this.filterOnTypeDomNode.tabIndex = -1;\n        this.updateFilterOnTypeTitle();\n        event_2.domEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\n        this.clearDomNode = dom_1.append(controls, dom_1.$('button.clear'));\n        this.clearDomNode.tabIndex = -1;\n        this.clearDomNode.title = nls_1.localize('clear', \"Clear\");\n        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n        this.updateOptions(tree.options);\n    }\n    Object.defineProperty(TypeFilterController.prototype, \"enabled\", {\n        get: function () { return this._enabled; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeFilterController.prototype, \"pattern\", {\n        get: function () { return this._pattern; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeFilterController.prototype, \"filterOnType\", {\n        get: function () { return this._filterOnType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeFilterController.prototype, \"empty\", {\n        get: function () { return this._empty; },\n        enumerable: true,\n        configurable: true\n    });\n    TypeFilterController.prototype.updateOptions = function (options) {\n        if (options.simpleKeyboardNavigation) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n        if (typeof options.filterOnType !== 'undefined') {\n            this._filterOnType = !!options.filterOnType;\n            this.filterOnTypeDomNode.checked = this._filterOnType;\n        }\n        if (typeof options.automaticKeyboardNavigation !== 'undefined') {\n            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\n        }\n        this.tree.refilter();\n        this.render();\n        if (!this.automaticKeyboardNavigation) {\n            this.onEventOrInput('');\n        }\n    };\n    TypeFilterController.prototype.toggle = function () {\n        this.triggered = !this.triggered;\n        if (!this.triggered) {\n            this.onEventOrInput('');\n        }\n    };\n    TypeFilterController.prototype.enable = function () {\n        var _this = this;\n        if (this._enabled) {\n            return;\n        }\n        var isPrintableCharEvent = this.keyboardNavigationLabelProvider.mightProducePrintableCharacter ? function (e) { return _this.keyboardNavigationLabelProvider.mightProducePrintableCharacter(e); } : function (e) { return listWidget_1.mightProducePrintableCharacter(e); };\n        var onKeyDown = event_1.Event.chain(event_2.domEvent(this.view.getHTMLElement(), 'keydown'))\n            .filter(function (e) { return !isInputElement(e.target) || e.target === _this.filterOnTypeDomNode; })\n            .map(function (e) { return new keyboardEvent_1.StandardKeyboardEvent(e); })\n            .filter(this.keyboardNavigationEventFilter || (function () { return true; }))\n            .filter(function () { return _this.automaticKeyboardNavigation || _this.triggered; })\n            .filter(function (e) { return isPrintableCharEvent(e) || ((_this.pattern.length > 0 || _this.triggered) && ((e.keyCode === keyCodes_1.KeyCode.Escape || e.keyCode === keyCodes_1.KeyCode.Backspace) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === keyCodes_1.KeyCode.Backspace && (browser_1.isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)); })\n            .forEach(function (e) { e.stopPropagation(); e.preventDefault(); })\n            .event;\n        var onClear = event_2.domEvent(this.clearDomNode, 'click');\n        event_1.Event.chain(event_1.Event.any(onKeyDown, onClear))\n            .event(this.onEventOrInput, this, this.enabledDisposables);\n        this.filter.pattern = '';\n        this.tree.refilter();\n        this.render();\n        this._enabled = true;\n        this.triggered = false;\n    };\n    TypeFilterController.prototype.disable = function () {\n        if (!this._enabled) {\n            return;\n        }\n        this.domNode.remove();\n        this.enabledDisposables = lifecycle_1.dispose(this.enabledDisposables);\n        this.tree.refilter();\n        this.render();\n        this._enabled = false;\n        this.triggered = false;\n    };\n    TypeFilterController.prototype.onEventOrInput = function (e) {\n        if (typeof e === 'string') {\n            this.onInput(e);\n        }\n        else if (e instanceof MouseEvent || e.keyCode === keyCodes_1.KeyCode.Escape || (e.keyCode === keyCodes_1.KeyCode.Backspace && (browser_1.isMacintosh ? e.altKey : e.ctrlKey))) {\n            this.onInput('');\n        }\n        else if (e.keyCode === keyCodes_1.KeyCode.Backspace) {\n            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\n        }\n        else {\n            this.onInput(this.pattern + e.browserEvent.key);\n        }\n    };\n    TypeFilterController.prototype.onInput = function (pattern) {\n        var container = this.view.getHTMLElement();\n        if (pattern && !this.domNode.parentElement) {\n            container.append(this.domNode);\n        }\n        else if (!pattern && this.domNode.parentElement) {\n            this.domNode.remove();\n            this.tree.domFocus();\n        }\n        this._pattern = pattern;\n        this._onDidChangePattern.fire(pattern);\n        this.filter.pattern = pattern;\n        this.tree.refilter();\n        if (pattern) {\n            this.tree.focusNext(0, true, undefined, function (node) { return !filters_1.FuzzyScore.isDefault(node.filterData); });\n        }\n        var focus = this.tree.getFocus();\n        if (focus.length > 0) {\n            var element = focus[0];\n            if (this.tree.getRelativeTop(element) === null) {\n                this.tree.reveal(element, 0.5);\n            }\n        }\n        this.render();\n        if (!pattern) {\n            this.triggered = false;\n        }\n    };\n    TypeFilterController.prototype.onDragStart = function () {\n        var _this = this;\n        var container = this.view.getHTMLElement();\n        var left = dom_1.getDomNodePagePosition(container).left;\n        var containerWidth = container.clientWidth;\n        var midContainerWidth = containerWidth / 2;\n        var width = this.domNode.clientWidth;\n        var disposables = [];\n        var positionClassName = this.positionClassName;\n        var updatePosition = function () {\n            switch (positionClassName) {\n                case 'nw':\n                    _this.domNode.style.top = \"4px\";\n                    _this.domNode.style.left = \"4px\";\n                    break;\n                case 'ne':\n                    _this.domNode.style.top = \"4px\";\n                    _this.domNode.style.left = containerWidth - width - 6 + \"px\";\n                    break;\n            }\n        };\n        var onDragOver = function (event) {\n            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            var x = event.screenX - left;\n            if (event.dataTransfer) {\n                event.dataTransfer.dropEffect = 'none';\n            }\n            if (x < midContainerWidth) {\n                positionClassName = 'nw';\n            }\n            else {\n                positionClassName = 'ne';\n            }\n            updatePosition();\n        };\n        var onDragEnd = function () {\n            _this.positionClassName = positionClassName;\n            _this.domNode.className = \"monaco-list-type-filter \" + _this.positionClassName;\n            _this.domNode.style.top = null;\n            _this.domNode.style.left = null;\n            lifecycle_1.dispose(disposables);\n        };\n        updatePosition();\n        dom_1.removeClass(this.domNode, positionClassName);\n        dom_1.addClass(this.domNode, 'dragging');\n        disposables.push(lifecycle_1.toDisposable(function () { return dom_1.removeClass(_this.domNode, 'dragging'); }));\n        event_2.domEvent(document, 'dragover')(onDragOver, null, disposables);\n        event_2.domEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\n        dnd_1.StaticDND.CurrentDragAndDropData = new dnd_1.DragAndDropData('vscode-ui');\n        disposables.push(lifecycle_1.toDisposable(function () { return dnd_1.StaticDND.CurrentDragAndDropData = undefined; }));\n    };\n    TypeFilterController.prototype.onDidSpliceModel = function () {\n        if (!this._enabled || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    };\n    TypeFilterController.prototype.onDidChangeFilterOnType = function () {\n        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\n        this.tree.refilter();\n        this.tree.domFocus();\n        this.render();\n        this.updateFilterOnTypeTitle();\n    };\n    TypeFilterController.prototype.updateFilterOnTypeTitle = function () {\n        if (this.filterOnType) {\n            this.filterOnTypeDomNode.title = nls_1.localize('disable filter on type', \"Disable Filter on Type\");\n        }\n        else {\n            this.filterOnTypeDomNode.title = nls_1.localize('enable filter on type', \"Enable Filter on Type\");\n        }\n    };\n    TypeFilterController.prototype.render = function () {\n        var noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && this.tree.options.filterOnType && noMatches) {\n            this.messageDomNode.textContent = nls_1.localize('empty', \"No elements found\");\n            this._empty = true;\n        }\n        else {\n            this.messageDomNode.innerHTML = '';\n            this._empty = false;\n        }\n        dom_1.toggleClass(this.domNode, 'no-matches', noMatches);\n        this.domNode.title = nls_1.localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\n        this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\n        this._onDidChangeEmptyState.fire(this._empty);\n    };\n    TypeFilterController.prototype.shouldAllowFocus = function (node) {\n        if (!this.enabled || !this.pattern || this.filterOnType) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !filters_1.FuzzyScore.isDefault(node.filterData);\n    };\n    TypeFilterController.prototype.dispose = function () {\n        this.disable();\n        this._onDidChangePattern.dispose();\n        this.disposables = lifecycle_1.dispose(this.disposables);\n    };\n    return TypeFilterController;\n}());\nfunction isInputElement(e) {\n    return e.tagName === 'INPUT' || e.tagName === 'TEXTAREA';\n}\nfunction asTreeEvent(event) {\n    return {\n        elements: event.elements.map(function (node) { return node.element; }),\n        browserEvent: event.browserEvent\n    };\n}\nfunction asTreeMouseEvent(event) {\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null\n    };\n}\nfunction asTreeContextMenuEvent(event) {\n    return {\n        element: event.element ? event.element.element : null,\n        browserEvent: event.browserEvent,\n        anchor: event.anchor\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(function (child) { return dfs(child, fn); });\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nvar Trait = /** @class */ (function () {\n    function Trait(identityProvider) {\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new event_1.Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    Object.defineProperty(Trait.prototype, \"nodeSet\", {\n        get: function () {\n            if (!this._nodeSet) {\n                this._nodeSet = this.createNodeSet();\n            }\n            return this._nodeSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Trait.prototype.set = function (nodes, browserEvent) {\n        if (arrays_1.equals(this.nodes, nodes)) {\n            return;\n        }\n        this.nodes = nodes.slice();\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        var that = this;\n        this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent: browserEvent });\n    };\n    Trait.prototype.get = function () {\n        if (!this.elements) {\n            this.elements = this.nodes.map(function (node) { return node.element; });\n        }\n        return this.elements.slice();\n    };\n    Trait.prototype.has = function (node) {\n        return this.nodeSet.has(node);\n    };\n    Trait.prototype.onDidModelSplice = function (_a) {\n        var insertedNodes = _a.insertedNodes, deletedNodes = _a.deletedNodes;\n        if (!this.identityProvider) {\n            var set_1 = this.createNodeSet();\n            var visit_1 = function (node) { return set_1.delete(node); };\n            deletedNodes.forEach(function (node) { return dfs(node, visit_1); });\n            this.set(map_1.values(set_1));\n            return;\n        }\n        var identityProvider = this.identityProvider;\n        var nodesByIdentity = new Map();\n        this.nodes.forEach(function (node) { return nodesByIdentity.set(identityProvider.getId(node.element).toString(), node); });\n        var toDeleteByIdentity = new Map();\n        var toRemoveSetter = function (node) { return toDeleteByIdentity.set(identityProvider.getId(node.element).toString(), node); };\n        var toRemoveDeleter = function (node) { return toDeleteByIdentity.delete(identityProvider.getId(node.element).toString()); };\n        deletedNodes.forEach(function (node) { return dfs(node, toRemoveSetter); });\n        insertedNodes.forEach(function (node) { return dfs(node, toRemoveDeleter); });\n        toDeleteByIdentity.forEach(function (_, id) { return nodesByIdentity.delete(id); });\n        this.set(map_1.values(nodesByIdentity));\n    };\n    Trait.prototype.createNodeSet = function () {\n        var set = new Set();\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var node = _a[_i];\n            set.add(node);\n        }\n        return set;\n    };\n    return Trait;\n}());\nvar TreeNodeListMouseController = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeNodeListMouseController, _super);\n    function TreeNodeListMouseController(list, tree) {\n        var _this = _super.call(this, list) || this;\n        _this.tree = tree;\n        return _this;\n    }\n    TreeNodeListMouseController.prototype.onPointer = function (e) {\n        if (isInputElement(e.browserEvent.target)) {\n            return;\n        }\n        var node = e.element;\n        if (!node) {\n            return _super.prototype.onPointer.call(this, e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return _super.prototype.onPointer.call(this, e);\n        }\n        var onTwistie = dom_1.hasClass(e.browserEvent.target, 'monaco-tl-twistie');\n        if (!this.tree.openOnSingleClick && e.browserEvent.detail !== 2 && !onTwistie) {\n            return _super.prototype.onPointer.call(this, e);\n        }\n        var expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie) {\n            return _super.prototype.onPointer.call(this, e);\n        }\n        var model = this.tree.model; // internal\n        var location = model.getNodeLocation(node);\n        var recursive = e.browserEvent.altKey;\n        model.setCollapsed(location, undefined, recursive);\n        if (expandOnlyOnTwistieClick && onTwistie) {\n            return;\n        }\n        _super.prototype.onPointer.call(this, e);\n    };\n    return TreeNodeListMouseController;\n}(listWidget_1.MouseController));\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nvar TreeNodeList = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeNodeList, _super);\n    function TreeNodeList(container, virtualDelegate, renderers, focusTrait, selectionTrait, options) {\n        var _this = _super.call(this, container, virtualDelegate, renderers, options) || this;\n        _this.focusTrait = focusTrait;\n        _this.selectionTrait = selectionTrait;\n        return _this;\n    }\n    TreeNodeList.prototype.createMouseController = function (options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    };\n    TreeNodeList.prototype.splice = function (start, deleteCount, elements) {\n        var _this = this;\n        if (elements === void 0) { elements = []; }\n        _super.prototype.splice.call(this, start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        var additionalFocus = [];\n        var additionalSelection = [];\n        elements.forEach(function (node, index) {\n            if (_this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (_this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n        });\n        if (additionalFocus.length > 0) {\n            _super.prototype.setFocus.call(this, arrays_1.distinctES6(_super.prototype.getFocus.call(this).concat(additionalFocus)));\n        }\n        if (additionalSelection.length > 0) {\n            _super.prototype.setSelection.call(this, arrays_1.distinctES6(_super.prototype.getSelection.call(this).concat(additionalSelection)));\n        }\n    };\n    TreeNodeList.prototype.setFocus = function (indexes, browserEvent, fromAPI) {\n        var _this = this;\n        if (fromAPI === void 0) { fromAPI = false; }\n        _super.prototype.setFocus.call(this, indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(function (i) { return _this.element(i); }), browserEvent);\n        }\n    };\n    TreeNodeList.prototype.setSelection = function (indexes, browserEvent, fromAPI) {\n        var _this = this;\n        if (fromAPI === void 0) { fromAPI = false; }\n        _super.prototype.setSelection.call(this, indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(function (i) { return _this.element(i); }), browserEvent);\n        }\n    };\n    return TreeNodeList;\n}(listWidget_1.List));\nvar AbstractTree = /** @class */ (function () {\n    function AbstractTree(container, delegate, renderers, _options) {\n        var _a;\n        if (_options === void 0) { _options = {}; }\n        var _this = this;\n        this._options = _options;\n        this.eventBufferer = new event_1.EventBufferer();\n        this.disposables = [];\n        this._onWillRefilter = new event_1.Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new event_1.Emitter();\n        this.onDidUpdateOptions = this._onDidUpdateOptions.event;\n        var treeDelegate = new ComposedTreeDelegate(delegate);\n        var onDidChangeCollapseStateRelay = new event_1.Relay();\n        this.renderers = renderers.map(function (r) { return new TreeRenderer(r, onDidChangeCollapseStateRelay.event, _options); });\n        (_a = this.disposables).push.apply(_a, this.renderers);\n        var filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = tslib_1.__assign({}, _options, { filter: filter }); // TODO need typescript help here\n            this.disposables.push(filter);\n        }\n        this.focus = new Trait(_options.identityProvider);\n        this.selection = new Trait(_options.identityProvider);\n        this.view = new TreeNodeList(container, treeDelegate, this.renderers, this.focus, this.selection, tslib_1.__assign({}, asListOptions(function () { return _this.model; }, _options), { tree: this }));\n        this.model = this.createModel(this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        this.model.onDidSplice(function (e) {\n            _this.focus.onDidModelSplice(e);\n            _this.selection.onDidModelSplice(e);\n        }, null, this.disposables);\n        if (_options.keyboardSupport !== false) {\n            var onKeyDown = event_1.Event.chain(this.view.onKeyDown)\n                .filter(function (e) { return !isInputElement(e.target); })\n                .map(function (e) { return new keyboardEvent_1.StandardKeyboardEvent(e); });\n            onKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.LeftArrow; }).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.RightArrow; }).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(function (e) { return e.keyCode === keyCodes_1.KeyCode.Space; }).on(this.onSpace, this, this.disposables);\n        }\n        if (_options.keyboardNavigationLabelProvider) {\n            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, _options.keyboardNavigationLabelProvider);\n            this.focusNavigationFilter = function (node) { return _this.typeFilterController.shouldAllowFocus(node); };\n            this.disposables.push(this.typeFilterController);\n        }\n    }\n    Object.defineProperty(AbstractTree.prototype, \"onDidScroll\", {\n        get: function () { return this.view.onDidScroll; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeFocus\", {\n        get: function () { return this.eventBufferer.wrapEvent(this.focus.onDidChange); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeSelection\", {\n        get: function () { return this.eventBufferer.wrapEvent(this.selection.onDidChange); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidOpen\", {\n        get: function () { return event_1.Event.map(this.view.onDidOpen, asTreeEvent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onMouseClick\", {\n        get: function () { return event_1.Event.map(this.view.onMouseClick, asTreeMouseEvent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onMouseDblClick\", {\n        get: function () { return event_1.Event.map(this.view.onMouseDblClick, asTreeMouseEvent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onContextMenu\", {\n        get: function () { return event_1.Event.map(this.view.onContextMenu, asTreeContextMenuEvent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onKeyDown\", {\n        get: function () { return this.view.onKeyDown; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onKeyUp\", {\n        get: function () { return this.view.onKeyUp; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onKeyPress\", {\n        get: function () { return this.view.onKeyPress; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidFocus\", {\n        get: function () { return this.view.onDidFocus; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidBlur\", {\n        get: function () { return this.view.onDidBlur; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeCollapseState\", {\n        get: function () { return this.model.onDidChangeCollapseState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeRenderNodeCount\", {\n        get: function () { return this.model.onDidChangeRenderNodeCount; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"filterOnType\", {\n        get: function () { return !!this._options.filterOnType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeTypeFilterPattern\", {\n        get: function () { return this.typeFilterController ? this.typeFilterController.onDidChangePattern : event_1.Event.None; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"openOnSingleClick\", {\n        // Options TODO@joao expose options only, not Optional<>\n        get: function () { return typeof this._options.openOnSingleClick === 'undefined' ? true : this._options.openOnSingleClick; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"expandOnlyOnTwistieClick\", {\n        get: function () { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidDispose\", {\n        get: function () { return this.view.onDidDispose; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractTree.prototype.updateOptions = function (optionsUpdate) {\n        if (optionsUpdate === void 0) { optionsUpdate = {}; }\n        this._options = tslib_1.__assign({}, this._options, optionsUpdate);\n        for (var _i = 0, _a = this.renderers; _i < _a.length; _i++) {\n            var renderer = _a[_i];\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions({\n            enableKeyboardNavigation: this._options.simpleKeyboardNavigation,\n            automaticKeyboardNavigation: this._options.automaticKeyboardNavigation\n        });\n        if (this.typeFilterController) {\n            this.typeFilterController.updateOptions(this._options);\n        }\n        this._onDidUpdateOptions.fire(this._options);\n    };\n    Object.defineProperty(AbstractTree.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractTree.prototype.updateWidth = function (element) {\n        var index = this.model.getListIndex(element);\n        if (index === -1) {\n            return;\n        }\n        this.view.updateWidth(index);\n    };\n    // Widget\n    AbstractTree.prototype.getHTMLElement = function () {\n        return this.view.getHTMLElement();\n    };\n    Object.defineProperty(AbstractTree.prototype, \"contentHeight\", {\n        get: function () {\n            if (this.typeFilterController && this.typeFilterController.filterOnType && this.typeFilterController.empty) {\n                return 100;\n            }\n            return this.view.contentHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"onDidChangeContentHeight\", {\n        get: function () {\n            var _this = this;\n            var result = this.view.onDidChangeContentHeight;\n            if (this.typeFilterController) {\n                result = event_1.Event.any(result, event_1.Event.map(this.typeFilterController.onDidChangeEmptyState, function () { return _this.contentHeight; }));\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"scrollTop\", {\n        get: function () {\n            return this.view.scrollTop;\n        },\n        set: function (scrollTop) {\n            this.view.scrollTop = scrollTop;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"scrollHeight\", {\n        get: function () {\n            return this.view.scrollHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"renderHeight\", {\n        get: function () {\n            return this.view.renderHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"firstVisibleElement\", {\n        get: function () {\n            var index = this.view.firstVisibleIndex;\n            var node = this.view.element(index);\n            return node.element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTree.prototype, \"lastVisibleElement\", {\n        get: function () {\n            var index = this.view.lastVisibleIndex;\n            var node = this.view.element(index);\n            return node.element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractTree.prototype.domFocus = function () {\n        this.view.domFocus();\n    };\n    AbstractTree.prototype.isDOMFocused = function () {\n        return this.getHTMLElement() === document.activeElement;\n    };\n    AbstractTree.prototype.layout = function (height, width) {\n        this.view.layout(height, width);\n    };\n    AbstractTree.prototype.style = function (styles) {\n        this.view.style(styles);\n    };\n    // Tree navigation\n    AbstractTree.prototype.getParentElement = function (location) {\n        return this.model.getParentElement(location);\n    };\n    AbstractTree.prototype.getFirstElementChild = function (location) {\n        return this.model.getFirstElementChild(location);\n    };\n    // Tree\n    AbstractTree.prototype.getNode = function (location) {\n        return this.model.getNode(location);\n    };\n    AbstractTree.prototype.collapse = function (location, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.model.setCollapsed(location, true, recursive);\n    };\n    AbstractTree.prototype.expand = function (location, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.model.setCollapsed(location, false, recursive);\n    };\n    AbstractTree.prototype.toggleCollapsed = function (location, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return this.model.setCollapsed(location, undefined, recursive);\n    };\n    AbstractTree.prototype.expandAll = function () {\n        this.model.setCollapsed(this.model.rootRef, false, true);\n    };\n    AbstractTree.prototype.collapseAll = function () {\n        this.model.setCollapsed(this.model.rootRef, true, true);\n    };\n    AbstractTree.prototype.isCollapsible = function (location) {\n        return this.model.isCollapsible(location);\n    };\n    AbstractTree.prototype.isCollapsed = function (location) {\n        return this.model.isCollapsed(location);\n    };\n    AbstractTree.prototype.toggleKeyboardNavigation = function () {\n        this.view.toggleKeyboardNavigation();\n        if (this.typeFilterController) {\n            this.typeFilterController.toggle();\n        }\n    };\n    AbstractTree.prototype.refilter = function () {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    };\n    AbstractTree.prototype.setSelection = function (elements, browserEvent) {\n        var _this = this;\n        var nodes = elements.map(function (e) { return _this.model.getNode(e); });\n        this.selection.set(nodes, browserEvent);\n        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); }).filter(function (i) { return i > -1; });\n        this.view.setSelection(indexes, browserEvent, true);\n    };\n    AbstractTree.prototype.getSelection = function () {\n        return this.selection.get();\n    };\n    AbstractTree.prototype.setFocus = function (elements, browserEvent) {\n        var _this = this;\n        var nodes = elements.map(function (e) { return _this.model.getNode(e); });\n        this.focus.set(nodes, browserEvent);\n        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); }).filter(function (i) { return i > -1; });\n        this.view.setFocus(indexes, browserEvent, true);\n    };\n    AbstractTree.prototype.focusNext = function (n, loop, browserEvent, filter) {\n        if (n === void 0) { n = 1; }\n        if (loop === void 0) { loop = false; }\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusNext(n, loop, browserEvent, filter);\n    };\n    AbstractTree.prototype.focusPrevious = function (n, loop, browserEvent, filter) {\n        if (n === void 0) { n = 1; }\n        if (loop === void 0) { loop = false; }\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusPrevious(n, loop, browserEvent, filter);\n    };\n    AbstractTree.prototype.focusNextPage = function (browserEvent, filter) {\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusNextPage(browserEvent, filter);\n    };\n    AbstractTree.prototype.focusPreviousPage = function (browserEvent, filter) {\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusPreviousPage(browserEvent, filter);\n    };\n    AbstractTree.prototype.focusLast = function (browserEvent, filter) {\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusLast(browserEvent, filter);\n    };\n    AbstractTree.prototype.focusFirst = function (browserEvent, filter) {\n        if (filter === void 0) { filter = this.focusNavigationFilter; }\n        this.view.focusFirst(browserEvent, filter);\n    };\n    AbstractTree.prototype.getFocus = function () {\n        return this.focus.get();\n    };\n    AbstractTree.prototype.open = function (elements, browserEvent) {\n        var _this = this;\n        var indexes = elements.map(function (e) { return _this.model.getListIndex(e); });\n        this.view.open(indexes, browserEvent);\n    };\n    AbstractTree.prototype.reveal = function (location, relativeTop) {\n        this.model.expandTo(location);\n        var index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    };\n    /**\n     * Returns the relative position of an element rendered in the list.\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\n     */\n    AbstractTree.prototype.getRelativeTop = function (location) {\n        var index = this.model.getListIndex(location);\n        if (index === -1) {\n            return null;\n        }\n        return this.view.getRelativeTop(index);\n    };\n    // List\n    AbstractTree.prototype.onLeftArrow = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        var node = nodes[0];\n        var location = this.model.getNodeLocation(node);\n        var didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            var parentLocation = this.model.getParentNodeLocation(location);\n            if (parentLocation === null) {\n                return;\n            }\n            var parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    };\n    AbstractTree.prototype.onRightArrow = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        var node = nodes[0];\n        var location = this.model.getNodeLocation(node);\n        var didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(function (child) { return child.visible; })) {\n                return;\n            }\n            var focusedIndex = this.view.getFocus()[0];\n            var firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    };\n    AbstractTree.prototype.onSpace = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        var node = nodes[0];\n        var location = this.model.getNodeLocation(node);\n        var recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    };\n    AbstractTree.prototype.navigate = function (start) {\n        return new TreeNavigator(this.view, this.model, start);\n    };\n    AbstractTree.prototype.dispose = function () {\n        this.disposables = lifecycle_1.dispose(this.disposables);\n        this.view.dispose();\n    };\n    return AbstractTree;\n}());\nexports.AbstractTree = AbstractTree;\nvar TreeNavigator = /** @class */ (function () {\n    function TreeNavigator(view, model, start) {\n        this.view = view;\n        this.model = model;\n        if (start) {\n            this.index = this.model.getListIndex(start);\n        }\n        else {\n            this.index = -1;\n        }\n    }\n    TreeNavigator.prototype.current = function () {\n        if (this.index < 0 || this.index >= this.view.length) {\n            return null;\n        }\n        return this.view.element(this.index).element;\n    };\n    TreeNavigator.prototype.previous = function () {\n        this.index--;\n        return this.current();\n    };\n    TreeNavigator.prototype.next = function () {\n        this.index++;\n        return this.current();\n    };\n    TreeNavigator.prototype.parent = function () {\n        if (this.index < 0 || this.index >= this.view.length) {\n            return null;\n        }\n        var node = this.view.element(this.index);\n        if (!node.parent) {\n            this.index = -1;\n            return this.current();\n        }\n        this.index = this.model.getListIndex(this.model.getNodeLocation(node.parent));\n        return this.current();\n    };\n    TreeNavigator.prototype.first = function () {\n        this.index = 0;\n        return this.current();\n    };\n    TreeNavigator.prototype.last = function () {\n        this.index = this.view.length - 1;\n        return this.current();\n    };\n    return TreeNavigator;\n}());\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/tree/abstractTree.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/base/browser/ui/tree/abstractTree.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/tree';\nimport { IDisposable, dispose, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IListOptions, List, IListStyles, mightProducePrintableCharacter, MouseController } from 'vs/base/browser/ui/list/listWidget';\nimport { IListVirtualDelegate, IListRenderer, IListMouseEvent, IListEvent, IListContextMenuEvent, IListDragAndDrop, IListDragOverReaction, IKeyboardNavigationLabelProvider, IIdentityProvider } from 'vs/base/browser/ui/list/list';\nimport { append, $, toggleClass, getDomNodePagePosition, removeClass, addClass, hasClass } from 'vs/base/browser/dom';\nimport { Event, Relay, Emitter, EventBufferer } from 'vs/base/common/event';\nimport { StandardKeyboardEvent, IKeyboardEvent } from 'vs/base/browser/keyboardEvent';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { ITreeModel, ITreeNode, ITreeRenderer, ITreeEvent, ITreeMouseEvent, ITreeContextMenuEvent, ITreeFilter, ITreeNavigator, ICollapseStateChangeEvent, ITreeDragAndDrop, TreeDragOverBubble, TreeVisibility, TreeFilterResult, ITreeModelSpliceEvent } from 'vs/base/browser/ui/tree/tree';\nimport { ISpliceable } from 'vs/base/common/sequence';\nimport { IDragAndDropData, StaticDND, DragAndDropData } from 'vs/base/browser/dnd';\nimport { range, equals, distinctES6 } from 'vs/base/common/arrays';\nimport { ElementsDragAndDropData } from 'vs/base/browser/ui/list/listView';\nimport { domEvent } from 'vs/base/browser/event';\nimport { fuzzyScore, FuzzyScore } from 'vs/base/common/filters';\nimport { getVisibleState, isFilterResult } from 'vs/base/browser/ui/tree/indexTreeModel';\nimport { localize } from 'vs/nls';\nimport { disposableTimeout } from 'vs/base/common/async';\nimport { isMacintosh } from 'vs/base/browser/browser';\nimport { values } from 'vs/base/common/map';\nimport { clamp } from 'vs/base/common/numbers';\nimport { ScrollEvent } from 'vs/base/common/scrollable';\n\nfunction asTreeDragAndDropData<T, TFilterData>(data: IDragAndDropData): IDragAndDropData {\n\tif (data instanceof ElementsDragAndDropData) {\n\t\tconst nodes = (data as ElementsDragAndDropData<ITreeNode<T, TFilterData>>).elements;\n\t\treturn new ElementsDragAndDropData(nodes.map(node => node.element));\n\t}\n\n\treturn data;\n}\n\nclass TreeNodeListDragAndDrop<T, TFilterData, TRef> implements IListDragAndDrop<ITreeNode<T, TFilterData>> {\n\n\tprivate autoExpandNode: ITreeNode<T, TFilterData> | undefined;\n\tprivate autoExpandDisposable: IDisposable = Disposable.None;\n\n\tconstructor(private modelProvider: () => ITreeModel<T, TFilterData, TRef>, private dnd: ITreeDragAndDrop<T>) { }\n\n\tgetDragURI(node: ITreeNode<T, TFilterData>): string | null {\n\t\treturn this.dnd.getDragURI(node.element);\n\t}\n\n\tgetDragLabel(nodes: ITreeNode<T, TFilterData>[]): string | undefined {\n\t\tif (this.dnd.getDragLabel) {\n\t\t\treturn this.dnd.getDragLabel(nodes.map(node => node.element));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tif (this.dnd.onDragStart) {\n\t\t\tthis.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\n\t\t}\n\t}\n\n\tonDragOver(data: IDragAndDropData, targetNode: ITreeNode<T, TFilterData> | undefined, targetIndex: number | undefined, originalEvent: DragEvent, raw = true): boolean | IListDragOverReaction {\n\t\tconst result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n\t\tconst didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n\n\t\tif (didChangeAutoExpandNode) {\n\t\t\tthis.autoExpandDisposable.dispose();\n\t\t\tthis.autoExpandNode = targetNode;\n\t\t}\n\n\t\tif (typeof targetNode === 'undefined') {\n\t\t\treturn result;\n\t\t}\n\n\t\tif (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n\t\t\tthis.autoExpandDisposable = disposableTimeout(() => {\n\t\t\t\tconst model = this.modelProvider();\n\t\t\t\tconst ref = model.getNodeLocation(targetNode);\n\n\t\t\t\tif (model.isCollapsed(ref)) {\n\t\t\t\t\tmodel.setCollapsed(ref, false);\n\t\t\t\t}\n\n\t\t\t\tthis.autoExpandNode = undefined;\n\t\t\t}, 500);\n\t\t}\n\n\t\tif (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined') {\n\t\t\tif (!raw) {\n\t\t\t\tconst accept = typeof result === 'boolean' ? result : result.accept;\n\t\t\t\tconst effect = typeof result === 'boolean' ? undefined : result.effect;\n\t\t\t\treturn { accept, effect, feedback: [targetIndex!] };\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tif (result.bubble === TreeDragOverBubble.Up) {\n\t\t\tconst parentNode = targetNode.parent;\n\t\t\tconst model = this.modelProvider();\n\t\t\tconst parentIndex = parentNode && model.getListIndex(model.getNodeLocation(parentNode));\n\n\t\t\treturn this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n\t\t}\n\n\t\tconst model = this.modelProvider();\n\t\tconst ref = model.getNodeLocation(targetNode);\n\t\tconst start = model.getListIndex(ref);\n\t\tconst length = model.getListRenderCount(ref);\n\n\t\treturn { ...result, feedback: range(start, start + length) };\n\t}\n\n\tdrop(data: IDragAndDropData, targetNode: ITreeNode<T, TFilterData> | undefined, targetIndex: number | undefined, originalEvent: DragEvent): void {\n\t\tthis.autoExpandDisposable.dispose();\n\t\tthis.autoExpandNode = undefined;\n\n\t\tthis.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n\t}\n}\n\nfunction asListOptions<T, TFilterData, TRef>(modelProvider: () => ITreeModel<T, TFilterData, TRef>, options?: IAbstractTreeOptions<T, TFilterData>): IListOptions<ITreeNode<T, TFilterData>> | undefined {\n\treturn options && {\n\t\t...options,\n\t\tidentityProvider: options.identityProvider && {\n\t\t\tgetId(el) {\n\t\t\t\treturn options.identityProvider!.getId(el.element);\n\t\t\t}\n\t\t},\n\t\tdnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n\t\tmultipleSelectionController: options.multipleSelectionController && {\n\t\t\tisSelectionSingleChangeEvent(e) {\n\t\t\t\treturn options.multipleSelectionController!.isSelectionSingleChangeEvent({ ...e, element: e.element } as any);\n\t\t\t},\n\t\t\tisSelectionRangeChangeEvent(e) {\n\t\t\t\treturn options.multipleSelectionController!.isSelectionRangeChangeEvent({ ...e, element: e.element } as any);\n\t\t\t}\n\t\t},\n\t\taccessibilityProvider: options.accessibilityProvider && {\n\t\t\tgetAriaLabel(e) {\n\t\t\t\treturn options.accessibilityProvider!.getAriaLabel(e.element);\n\t\t\t},\n\t\t\tgetAriaLevel(node) {\n\t\t\t\treturn node.depth;\n\t\t\t}\n\t\t},\n\t\tkeyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n\t\t\t...options.keyboardNavigationLabelProvider,\n\t\t\tgetKeyboardNavigationLabel(node) {\n\t\t\t\treturn options.keyboardNavigationLabelProvider!.getKeyboardNavigationLabel(node.element);\n\t\t\t}\n\t\t},\n\t\tenableKeyboardNavigation: options.simpleKeyboardNavigation,\n\t\tariaSetProvider: {\n\t\t\tgetSetSize(node) {\n\t\t\t\treturn node.parent!.visibleChildrenCount;\n\t\t\t},\n\t\t\tgetPosInSet(node) {\n\t\t\t\treturn node.visibleChildIndex + 1;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport class ComposedTreeDelegate<T, N extends { element: T }> implements IListVirtualDelegate<N> {\n\n\tconstructor(private delegate: IListVirtualDelegate<T>) { }\n\n\tgetHeight(element: N): number {\n\t\treturn this.delegate.getHeight(element.element);\n\t}\n\n\tgetTemplateId(element: N): string {\n\t\treturn this.delegate.getTemplateId(element.element);\n\t}\n\n\thasDynamicHeight(element: N): boolean {\n\t\treturn !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n\t}\n\n\tsetDynamicHeight(element: N, height: number): void {\n\t\tif (this.delegate.setDynamicHeight) {\n\t\t\tthis.delegate.setDynamicHeight(element.element, height);\n\t\t}\n\t}\n}\n\ninterface ITreeListTemplateData<T> {\n\treadonly container: HTMLElement;\n\treadonly twistie: HTMLElement;\n\treadonly templateData: T;\n}\n\ninterface ITreeRendererOptions {\n\treadonly indent?: number;\n}\n\nclass TreeRenderer<T, TFilterData, TTemplateData> implements IListRenderer<ITreeNode<T, TFilterData>, ITreeListTemplateData<TTemplateData>> {\n\n\tprivate static DefaultIndent = 8;\n\n\treadonly templateId: string;\n\tprivate renderedElements = new Map<T, ITreeNode<T, TFilterData>>();\n\tprivate renderedNodes = new Map<ITreeNode<T, TFilterData>, ITreeListTemplateData<TTemplateData>>();\n\tprivate indent: number = TreeRenderer.DefaultIndent;\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate renderer: ITreeRenderer<T, TFilterData, TTemplateData>,\n\t\tonDidChangeCollapseState: Event<ICollapseStateChangeEvent<T, TFilterData>>,\n\t\toptions: ITreeRendererOptions = {}\n\t) {\n\t\tthis.templateId = renderer.templateId;\n\t\tthis.updateOptions(options);\n\n\t\tEvent.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n\n\t\tif (renderer.onDidChangeTwistieState) {\n\t\t\trenderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\n\t\t}\n\t}\n\n\tupdateOptions(options: ITreeRendererOptions = {}): void {\n\t\tif (typeof options.indent !== 'undefined') {\n\t\t\tthis.indent = clamp(options.indent, 0, 40);\n\t\t}\n\n\t\tthis.renderedNodes.forEach((templateData, node) => {\n\t\t\ttemplateData.twistie.style.marginLeft = `${node.depth * this.indent}px`;\n\t\t});\n\t}\n\n\trenderTemplate(container: HTMLElement): ITreeListTemplateData<TTemplateData> {\n\t\tconst el = append(container, $('.monaco-tl-row'));\n\t\tconst twistie = append(el, $('.monaco-tl-twistie'));\n\t\tconst contents = append(el, $('.monaco-tl-contents'));\n\t\tconst templateData = this.renderer.renderTemplate(contents);\n\n\t\treturn { container, twistie, templateData };\n\t}\n\n\trenderElement(node: ITreeNode<T, TFilterData>, index: number, templateData: ITreeListTemplateData<TTemplateData>, dynamicHeightProbing?: boolean): void {\n\t\tif (!dynamicHeightProbing) {\n\t\t\tthis.renderedNodes.set(node, templateData);\n\t\t\tthis.renderedElements.set(node.element, node);\n\t\t}\n\n\t\tconst indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n\t\ttemplateData.twistie.style.marginLeft = `${indent}px`;\n\t\tthis.update(node, templateData);\n\n\t\tthis.renderer.renderElement(node, index, templateData.templateData, dynamicHeightProbing);\n\t}\n\n\tdisposeElement(node: ITreeNode<T, TFilterData>, index: number, templateData: ITreeListTemplateData<TTemplateData>, dynamicHeightProbing?: boolean): void {\n\t\tif (this.renderer.disposeElement) {\n\t\t\tthis.renderer.disposeElement(node, index, templateData.templateData, dynamicHeightProbing);\n\t\t}\n\n\t\tif (!dynamicHeightProbing) {\n\t\t\tthis.renderedNodes.delete(node);\n\t\t\tthis.renderedElements.delete(node.element);\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: ITreeListTemplateData<TTemplateData>): void {\n\t\tthis.renderer.disposeTemplate(templateData.templateData);\n\t}\n\n\tprivate onDidChangeTwistieState(element: T): void {\n\t\tconst node = this.renderedElements.get(element);\n\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onDidChangeNodeTwistieState(node);\n\t}\n\n\tprivate onDidChangeNodeTwistieState(node: ITreeNode<T, TFilterData>): void {\n\t\tconst templateData = this.renderedNodes.get(node);\n\n\t\tif (!templateData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.update(node, templateData);\n\t}\n\n\tprivate update(node: ITreeNode<T, TFilterData>, templateData: ITreeListTemplateData<TTemplateData>) {\n\t\tif (this.renderer.renderTwistie) {\n\t\t\tthis.renderer.renderTwistie(node.element, templateData.twistie);\n\t\t}\n\n\t\ttoggleClass(templateData.twistie, 'collapsible', node.collapsible);\n\t\ttoggleClass(templateData.twistie, 'collapsed', node.collapsible && node.collapsed);\n\n\t\tif (node.collapsible) {\n\t\t\ttemplateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n\t\t} else {\n\t\t\ttemplateData.container.removeAttribute('aria-expanded');\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.renderedNodes.clear();\n\t\tthis.renderedElements.clear();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nclass TypeFilter<T> implements ITreeFilter<T, FuzzyScore>, IDisposable {\n\n\tprivate _totalCount = 0;\n\tget totalCount(): number { return this._totalCount; }\n\tprivate _matchCount = 0;\n\tget matchCount(): number { return this._matchCount; }\n\n\tprivate _pattern: string;\n\tprivate _lowercasePattern: string;\n\tprivate disposables: IDisposable[] = [];\n\n\tset pattern(pattern: string) {\n\t\tthis._pattern = pattern;\n\t\tthis._lowercasePattern = pattern.toLowerCase();\n\t}\n\n\tconstructor(\n\t\tprivate tree: AbstractTree<T, any, any>,\n\t\tprivate keyboardNavigationLabelProvider: IKeyboardNavigationLabelProvider<T>,\n\t\tprivate _filter?: ITreeFilter<T, FuzzyScore>\n\t) {\n\t\ttree.onWillRefilter(this.reset, this, this.disposables);\n\t}\n\n\tfilter(element: T, parentVisibility: TreeVisibility): TreeFilterResult<FuzzyScore> {\n\t\tif (this._filter) {\n\t\t\tconst result = this._filter.filter(element, parentVisibility);\n\n\t\t\tif (this.tree.options.simpleKeyboardNavigation) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tlet visibility: TreeVisibility;\n\n\t\t\tif (typeof result === 'boolean') {\n\t\t\t\tvisibility = result ? TreeVisibility.Visible : TreeVisibility.Hidden;\n\t\t\t} else if (isFilterResult(result)) {\n\t\t\t\tvisibility = getVisibleState(result.visibility);\n\t\t\t} else {\n\t\t\t\tvisibility = result;\n\t\t\t}\n\n\t\t\tif (visibility === TreeVisibility.Hidden) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis._totalCount++;\n\n\t\tif (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\n\t\t\tthis._matchCount++;\n\t\t\treturn { data: FuzzyScore.Default, visibility: true };\n\t\t}\n\n\t\tconst label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n\t\tconst labelStr = label && label.toString();\n\n\t\tif (typeof labelStr === 'undefined') {\n\t\t\treturn { data: FuzzyScore.Default, visibility: true };\n\t\t}\n\n\t\tconst score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\n\n\t\tif (!score) {\n\t\t\tif (this.tree.options.filterOnType) {\n\t\t\t\treturn TreeVisibility.Recurse;\n\t\t\t} else {\n\t\t\t\treturn { data: FuzzyScore.Default, visibility: true };\n\t\t\t}\n\n\t\t\t// DEMO: smarter filter ?\n\t\t\t// return parentVisibility === TreeVisibility.Visible ? true : TreeVisibility.Recurse;\n\t\t}\n\n\t\tthis._matchCount++;\n\t\treturn { data: score, visibility: true };\n\t}\n\n\tprivate reset(): void {\n\t\tthis._totalCount = 0;\n\t\tthis._matchCount = 0;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nclass TypeFilterController<T, TFilterData> implements IDisposable {\n\n\tprivate _enabled = false;\n\tget enabled(): boolean { return this._enabled; }\n\n\tprivate _pattern = '';\n\tget pattern(): string { return this._pattern; }\n\n\tprivate _filterOnType: boolean;\n\tget filterOnType(): boolean { return this._filterOnType; }\n\n\tprivate _empty: boolean;\n\tget empty(): boolean { return this._empty; }\n\n\tprivate _onDidChangeEmptyState = new Emitter<boolean>();\n\treadonly onDidChangeEmptyState: Event<boolean> = Event.latch(this._onDidChangeEmptyState.event);\n\n\tprivate positionClassName = 'ne';\n\tprivate domNode: HTMLElement;\n\tprivate messageDomNode: HTMLElement;\n\tprivate labelDomNode: HTMLElement;\n\tprivate filterOnTypeDomNode: HTMLInputElement;\n\tprivate clearDomNode: HTMLElement;\n\tprivate keyboardNavigationEventFilter?: IKeyboardNavigationEventFilter;\n\n\tprivate automaticKeyboardNavigation = true;\n\tprivate triggered = false;\n\n\tprivate _onDidChangePattern = new Emitter<string>();\n\treadonly onDidChangePattern = this._onDidChangePattern.event;\n\n\tprivate enabledDisposables: IDisposable[] = [];\n\tprivate disposables: IDisposable[] = [];\n\n\tconstructor(\n\t\tprivate tree: AbstractTree<T, TFilterData, any>,\n\t\tmodel: ITreeModel<T, TFilterData, any>,\n\t\tprivate view: List<ITreeNode<T, TFilterData>>,\n\t\tprivate filter: TypeFilter<T>,\n\t\tprivate keyboardNavigationLabelProvider: IKeyboardNavigationLabelProvider<T>\n\t) {\n\t\tthis.domNode = $(`.monaco-list-type-filter.${this.positionClassName}`);\n\t\tthis.domNode.draggable = true;\n\t\tdomEvent(this.domNode, 'dragstart')(this.onDragStart, this, this.disposables);\n\n\t\tthis.messageDomNode = append(view.getHTMLElement(), $(`.monaco-list-type-filter-message`));\n\n\t\tthis.labelDomNode = append(this.domNode, $('span.label'));\n\t\tconst controls = append(this.domNode, $('.controls'));\n\n\t\tthis._filterOnType = !!tree.options.filterOnType;\n\t\tthis.filterOnTypeDomNode = append(controls, $<HTMLInputElement>('input.filter'));\n\t\tthis.filterOnTypeDomNode.type = 'checkbox';\n\t\tthis.filterOnTypeDomNode.checked = this._filterOnType;\n\t\tthis.filterOnTypeDomNode.tabIndex = -1;\n\t\tthis.updateFilterOnTypeTitle();\n\t\tdomEvent(this.filterOnTypeDomNode, 'input')(this.onDidChangeFilterOnType, this, this.disposables);\n\n\t\tthis.clearDomNode = append(controls, $<HTMLInputElement>('button.clear'));\n\t\tthis.clearDomNode.tabIndex = -1;\n\t\tthis.clearDomNode.title = localize('clear', \"Clear\");\n\n\t\tthis.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\n\n\t\tmodel.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n\t\tthis.updateOptions(tree.options);\n\t}\n\n\tupdateOptions(options: IAbstractTreeOptions<T, TFilterData>): void {\n\t\tif (options.simpleKeyboardNavigation) {\n\t\t\tthis.disable();\n\t\t} else {\n\t\t\tthis.enable();\n\t\t}\n\n\t\tif (typeof options.filterOnType !== 'undefined') {\n\t\t\tthis._filterOnType = !!options.filterOnType;\n\t\t\tthis.filterOnTypeDomNode.checked = this._filterOnType;\n\t\t}\n\n\t\tif (typeof options.automaticKeyboardNavigation !== 'undefined') {\n\t\t\tthis.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\n\t\t}\n\n\t\tthis.tree.refilter();\n\t\tthis.render();\n\n\t\tif (!this.automaticKeyboardNavigation) {\n\t\t\tthis.onEventOrInput('');\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tthis.triggered = !this.triggered;\n\n\t\tif (!this.triggered) {\n\t\t\tthis.onEventOrInput('');\n\t\t}\n\t}\n\n\tprivate enable(): void {\n\t\tif (this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isPrintableCharEvent = this.keyboardNavigationLabelProvider.mightProducePrintableCharacter ? (e: IKeyboardEvent) => this.keyboardNavigationLabelProvider.mightProducePrintableCharacter!(e) : (e: IKeyboardEvent) => mightProducePrintableCharacter(e);\n\t\tconst onKeyDown = Event.chain(domEvent(this.view.getHTMLElement(), 'keydown'))\n\t\t\t.filter(e => !isInputElement(e.target as HTMLElement) || e.target === this.filterOnTypeDomNode)\n\t\t\t.map(e => new StandardKeyboardEvent(e))\n\t\t\t.filter(this.keyboardNavigationEventFilter || (() => true))\n\t\t\t.filter(() => this.automaticKeyboardNavigation || this.triggered)\n\t\t\t.filter(e => isPrintableCharEvent(e) || ((this.pattern.length > 0 || this.triggered) && ((e.keyCode === KeyCode.Escape || e.keyCode === KeyCode.Backspace) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === KeyCode.Backspace && (isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)))\n\t\t\t.forEach(e => { e.stopPropagation(); e.preventDefault(); })\n\t\t\t.event;\n\n\t\tconst onClear = domEvent(this.clearDomNode, 'click');\n\n\t\tEvent.chain(Event.any<MouseEvent | StandardKeyboardEvent>(onKeyDown, onClear))\n\t\t\t.event(this.onEventOrInput, this, this.enabledDisposables);\n\n\t\tthis.filter.pattern = '';\n\t\tthis.tree.refilter();\n\t\tthis.render();\n\t\tthis._enabled = true;\n\t\tthis.triggered = false;\n\t}\n\n\tprivate disable(): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNode.remove();\n\t\tthis.enabledDisposables = dispose(this.enabledDisposables);\n\t\tthis.tree.refilter();\n\t\tthis.render();\n\t\tthis._enabled = false;\n\t\tthis.triggered = false;\n\t}\n\n\tprivate onEventOrInput(e: MouseEvent | StandardKeyboardEvent | string): void {\n\t\tif (typeof e === 'string') {\n\t\t\tthis.onInput(e);\n\t\t} else if (e instanceof MouseEvent || e.keyCode === KeyCode.Escape || (e.keyCode === KeyCode.Backspace && (isMacintosh ? e.altKey : e.ctrlKey))) {\n\t\t\tthis.onInput('');\n\t\t} else if (e.keyCode === KeyCode.Backspace) {\n\t\t\tthis.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\n\t\t} else {\n\t\t\tthis.onInput(this.pattern + e.browserEvent.key);\n\t\t}\n\t}\n\n\tprivate onInput(pattern: string): void {\n\t\tconst container = this.view.getHTMLElement();\n\n\t\tif (pattern && !this.domNode.parentElement) {\n\t\t\tcontainer.append(this.domNode);\n\t\t} else if (!pattern && this.domNode.parentElement) {\n\t\t\tthis.domNode.remove();\n\t\t\tthis.tree.domFocus();\n\t\t}\n\n\t\tthis._pattern = pattern;\n\t\tthis._onDidChangePattern.fire(pattern);\n\n\t\tthis.filter.pattern = pattern;\n\t\tthis.tree.refilter();\n\n\t\tif (pattern) {\n\t\t\tthis.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData as any as FuzzyScore));\n\t\t}\n\n\t\tconst focus = this.tree.getFocus();\n\n\t\tif (focus.length > 0) {\n\t\t\tconst element = focus[0];\n\n\t\t\tif (this.tree.getRelativeTop(element) === null) {\n\t\t\t\tthis.tree.reveal(element, 0.5);\n\t\t\t}\n\t\t}\n\n\t\tthis.render();\n\n\t\tif (!pattern) {\n\t\t\tthis.triggered = false;\n\t\t}\n\t}\n\n\tprivate onDragStart(): void {\n\t\tconst container = this.view.getHTMLElement();\n\t\tconst { left } = getDomNodePagePosition(container);\n\t\tconst containerWidth = container.clientWidth;\n\t\tconst midContainerWidth = containerWidth / 2;\n\t\tconst width = this.domNode.clientWidth;\n\t\tconst disposables: IDisposable[] = [];\n\t\tlet positionClassName = this.positionClassName;\n\n\t\tconst updatePosition = () => {\n\t\t\tswitch (positionClassName) {\n\t\t\t\tcase 'nw':\n\t\t\t\t\tthis.domNode.style.top = `4px`;\n\t\t\t\t\tthis.domNode.style.left = `4px`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ne':\n\t\t\t\t\tthis.domNode.style.top = `4px`;\n\t\t\t\t\tthis.domNode.style.left = `${containerWidth - width - 6}px`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\tconst onDragOver = (event: DragEvent) => {\n\t\t\tevent.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n\t\t\tconst x = event.screenX - left;\n\t\t\tif (event.dataTransfer) {\n\t\t\t\tevent.dataTransfer.dropEffect = 'none';\n\t\t\t}\n\n\t\t\tif (x < midContainerWidth) {\n\t\t\t\tpositionClassName = 'nw';\n\t\t\t} else {\n\t\t\t\tpositionClassName = 'ne';\n\t\t\t}\n\n\t\t\tupdatePosition();\n\t\t};\n\n\t\tconst onDragEnd = () => {\n\t\t\tthis.positionClassName = positionClassName;\n\t\t\tthis.domNode.className = `monaco-list-type-filter ${this.positionClassName}`;\n\t\t\tthis.domNode.style.top = null;\n\t\t\tthis.domNode.style.left = null;\n\n\t\t\tdispose(disposables);\n\t\t};\n\n\t\tupdatePosition();\n\t\tremoveClass(this.domNode, positionClassName);\n\n\t\taddClass(this.domNode, 'dragging');\n\t\tdisposables.push(toDisposable(() => removeClass(this.domNode, 'dragging')));\n\n\t\tdomEvent(document, 'dragover')(onDragOver, null, disposables);\n\t\tdomEvent(this.domNode, 'dragend')(onDragEnd, null, disposables);\n\n\t\tStaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\n\t\tdisposables.push(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\n\t}\n\n\tprivate onDidSpliceModel(): void {\n\t\tif (!this._enabled || this.pattern.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tree.refilter();\n\t\tthis.render();\n\t}\n\n\tprivate onDidChangeFilterOnType(): void {\n\t\tthis.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\n\t\tthis.tree.refilter();\n\t\tthis.tree.domFocus();\n\t\tthis.render();\n\t\tthis.updateFilterOnTypeTitle();\n\t}\n\n\tprivate updateFilterOnTypeTitle(): void {\n\t\tif (this.filterOnType) {\n\t\t\tthis.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\n\t\t} else {\n\t\t\tthis.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\n\t\t}\n\t}\n\n\tprivate render(): void {\n\t\tconst noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n\n\t\tif (this.pattern && this.tree.options.filterOnType && noMatches) {\n\t\t\tthis.messageDomNode.textContent = localize('empty', \"No elements found\");\n\t\t\tthis._empty = true;\n\t\t} else {\n\t\t\tthis.messageDomNode.innerHTML = '';\n\t\t\tthis._empty = false;\n\t\t}\n\n\t\ttoggleClass(this.domNode, 'no-matches', noMatches);\n\t\tthis.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\n\t\tthis.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\n\n\t\tthis._onDidChangeEmptyState.fire(this._empty);\n\t}\n\n\tshouldAllowFocus(node: ITreeNode<T, TFilterData>): boolean {\n\t\tif (!this.enabled || !this.pattern || this.filterOnType) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !FuzzyScore.isDefault(node.filterData as any as FuzzyScore);\n\t}\n\n\tdispose() {\n\t\tthis.disable();\n\t\tthis._onDidChangePattern.dispose();\n\t\tthis.disposables = dispose(this.disposables);\n\t}\n}\n\nfunction isInputElement(e: HTMLElement): boolean {\n\treturn e.tagName === 'INPUT' || e.tagName === 'TEXTAREA';\n}\n\nfunction asTreeEvent<T>(event: IListEvent<ITreeNode<T, any>>): ITreeEvent<T> {\n\treturn {\n\t\telements: event.elements.map(node => node.element),\n\t\tbrowserEvent: event.browserEvent\n\t};\n}\n\nfunction asTreeMouseEvent<T>(event: IListMouseEvent<ITreeNode<T, any>>): ITreeMouseEvent<T> {\n\treturn {\n\t\tbrowserEvent: event.browserEvent,\n\t\telement: event.element ? event.element.element : null\n\t};\n}\n\nfunction asTreeContextMenuEvent<T>(event: IListContextMenuEvent<ITreeNode<T, any>>): ITreeContextMenuEvent<T> {\n\treturn {\n\t\telement: event.element ? event.element.element : null,\n\t\tbrowserEvent: event.browserEvent,\n\t\tanchor: event.anchor\n\t};\n}\n\nexport interface IKeyboardNavigationEventFilter {\n\t(e: StandardKeyboardEvent): boolean;\n}\n\nexport interface IAbstractTreeOptionsUpdate extends ITreeRendererOptions {\n\treadonly automaticKeyboardNavigation?: boolean;\n\treadonly simpleKeyboardNavigation?: boolean;\n\treadonly filterOnType?: boolean;\n\treadonly openOnSingleClick?: boolean;\n}\n\nexport interface IAbstractTreeOptions<T, TFilterData = void> extends IAbstractTreeOptionsUpdate, IListOptions<T> {\n\treadonly collapseByDefault?: boolean; // defaults to false\n\treadonly filter?: ITreeFilter<T, TFilterData>;\n\treadonly dnd?: ITreeDragAndDrop<T>;\n\treadonly autoExpandSingleChildren?: boolean;\n\treadonly keyboardNavigationEventFilter?: IKeyboardNavigationEventFilter;\n\treadonly expandOnlyOnTwistieClick?: boolean | ((e: T) => boolean);\n}\n\nfunction dfs<T, TFilterData>(node: ITreeNode<T, TFilterData>, fn: (node: ITreeNode<T, TFilterData>) => void): void {\n\tfn(node);\n\tnode.children.forEach(child => dfs(child, fn));\n}\n\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait<T> {\n\n\tprivate nodes: ITreeNode<T, any>[] = [];\n\tprivate elements: T[] | undefined;\n\n\tprivate _onDidChange = new Emitter<ITreeEvent<T>>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _nodeSet: Set<ITreeNode<T, any>> | undefined;\n\tprivate get nodeSet(): Set<ITreeNode<T, any>> {\n\t\tif (!this._nodeSet) {\n\t\t\tthis._nodeSet = this.createNodeSet();\n\t\t}\n\n\t\treturn this._nodeSet;\n\t}\n\n\tconstructor(private identityProvider?: IIdentityProvider<T>) { }\n\n\tset(nodes: ITreeNode<T, any>[], browserEvent?: UIEvent): void {\n\t\tif (equals(this.nodes, nodes)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nodes = [...nodes];\n\t\tthis.elements = undefined;\n\t\tthis._nodeSet = undefined;\n\n\t\tconst that = this;\n\t\tthis._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n\t}\n\n\tget(): T[] {\n\t\tif (!this.elements) {\n\t\t\tthis.elements = this.nodes.map(node => node.element);\n\t\t}\n\n\t\treturn [...this.elements];\n\t}\n\n\thas(node: ITreeNode<T, any>): boolean {\n\t\treturn this.nodeSet.has(node);\n\t}\n\n\tonDidModelSplice({ insertedNodes, deletedNodes }: ITreeModelSpliceEvent<T, any>): void {\n\t\tif (!this.identityProvider) {\n\t\t\tconst set = this.createNodeSet();\n\t\t\tconst visit = (node: ITreeNode<T, any>) => set.delete(node);\n\t\t\tdeletedNodes.forEach(node => dfs(node, visit));\n\t\t\tthis.set(values(set));\n\t\t\treturn;\n\t\t}\n\n\t\tconst identityProvider = this.identityProvider;\n\t\tconst nodesByIdentity = new Map<string, ITreeNode<T, any>>();\n\t\tthis.nodes.forEach(node => nodesByIdentity.set(identityProvider.getId(node.element).toString(), node));\n\n\t\tconst toDeleteByIdentity = new Map<string, ITreeNode<T, any>>();\n\t\tconst toRemoveSetter = (node: ITreeNode<T, any>) => toDeleteByIdentity.set(identityProvider.getId(node.element).toString(), node);\n\t\tconst toRemoveDeleter = (node: { element: T; }) => toDeleteByIdentity.delete(identityProvider.getId(node.element).toString());\n\t\tdeletedNodes.forEach(node => dfs(node, toRemoveSetter));\n\t\tinsertedNodes.forEach(node => dfs(node, toRemoveDeleter));\n\n\t\ttoDeleteByIdentity.forEach((_, id) => nodesByIdentity.delete(id));\n\t\tthis.set(values(nodesByIdentity));\n\t}\n\n\tprivate createNodeSet(): Set<ITreeNode<T, any>> {\n\t\tconst set = new Set<ITreeNode<T, any>>();\n\n\t\tfor (const node of this.nodes) {\n\t\t\tset.add(node);\n\t\t}\n\n\t\treturn set;\n\t}\n}\n\nclass TreeNodeListMouseController<T, TFilterData, TRef> extends MouseController<ITreeNode<T, TFilterData>> {\n\n\tconstructor(list: TreeNodeList<T, TFilterData, TRef>, private tree: AbstractTree<T, TFilterData, TRef>) {\n\t\tsuper(list);\n\t}\n\n\tprotected onPointer(e: IListMouseEvent<ITreeNode<T, TFilterData>>): void {\n\t\tif (isInputElement(e.browserEvent.target as HTMLElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = e.element;\n\n\t\tif (!node) {\n\t\t\treturn super.onPointer(e);\n\t\t}\n\n\t\tif (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n\t\t\treturn super.onPointer(e);\n\t\t}\n\n\t\tconst onTwistie = hasClass(e.browserEvent.target as HTMLElement, 'monaco-tl-twistie');\n\n\t\tif (!this.tree.openOnSingleClick && e.browserEvent.detail !== 2 && !onTwistie) {\n\t\t\treturn super.onPointer(e);\n\t\t}\n\n\t\tlet expandOnlyOnTwistieClick = false;\n\n\t\tif (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n\t\t\texpandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n\t\t} else {\n\t\t\texpandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n\t\t}\n\n\t\tif (expandOnlyOnTwistieClick && !onTwistie) {\n\t\t\treturn super.onPointer(e);\n\t\t}\n\n\t\tconst model = ((this.tree as any).model as ITreeModel<T, TFilterData, TRef>); // internal\n\t\tconst location = model.getNodeLocation(node);\n\t\tconst recursive = e.browserEvent.altKey;\n\t\tmodel.setCollapsed(location, undefined, recursive);\n\n\t\tif (expandOnlyOnTwistieClick && onTwistie) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.onPointer(e);\n\t}\n}\n\ninterface ITreeNodeListOptions<T, TFilterData, TRef> extends IListOptions<ITreeNode<T, TFilterData>> {\n\treadonly tree: AbstractTree<T, TFilterData, TRef>;\n}\n\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList<T, TFilterData, TRef> extends List<ITreeNode<T, TFilterData>> {\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tvirtualDelegate: IListVirtualDelegate<ITreeNode<T, TFilterData>>,\n\t\trenderers: IListRenderer<any /* TODO@joao */, any>[],\n\t\tprivate focusTrait: Trait<T>,\n\t\tprivate selectionTrait: Trait<T>,\n\t\toptions: ITreeNodeListOptions<T, TFilterData, TRef>\n\t) {\n\t\tsuper(container, virtualDelegate, renderers, options);\n\t}\n\n\tprotected createMouseController(options: ITreeNodeListOptions<T, TFilterData, TRef>): MouseController<ITreeNode<T, TFilterData>> {\n\t\treturn new TreeNodeListMouseController(this, options.tree);\n\t}\n\n\tsplice(start: number, deleteCount: number, elements: ITreeNode<T, TFilterData>[] = []): void {\n\t\tsuper.splice(start, deleteCount, elements);\n\n\t\tif (elements.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst additionalFocus: number[] = [];\n\t\tconst additionalSelection: number[] = [];\n\n\t\telements.forEach((node, index) => {\n\t\t\tif (this.focusTrait.has(node)) {\n\t\t\t\tadditionalFocus.push(start + index);\n\t\t\t}\n\n\t\t\tif (this.selectionTrait.has(node)) {\n\t\t\t\tadditionalSelection.push(start + index);\n\t\t\t}\n\t\t});\n\n\t\tif (additionalFocus.length > 0) {\n\t\t\tsuper.setFocus(distinctES6([...super.getFocus(), ...additionalFocus]));\n\t\t}\n\n\t\tif (additionalSelection.length > 0) {\n\t\t\tsuper.setSelection(distinctES6([...super.getSelection(), ...additionalSelection]));\n\t\t}\n\t}\n\n\tsetFocus(indexes: number[], browserEvent?: UIEvent, fromAPI = false): void {\n\t\tsuper.setFocus(indexes, browserEvent);\n\n\t\tif (!fromAPI) {\n\t\t\tthis.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n\t\t}\n\t}\n\n\tsetSelection(indexes: number[], browserEvent?: UIEvent, fromAPI = false): void {\n\t\tsuper.setSelection(indexes, browserEvent);\n\n\t\tif (!fromAPI) {\n\t\t\tthis.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n\t\t}\n\t}\n}\n\nexport abstract class AbstractTree<T, TFilterData, TRef> implements IDisposable {\n\n\tprotected view: TreeNodeList<T, TFilterData, TRef>;\n\tprivate renderers: TreeRenderer<T, TFilterData, any>[];\n\tprotected model: ITreeModel<T, TFilterData, TRef>;\n\tprivate focus: Trait<T>;\n\tprivate selection: Trait<T>;\n\tprivate eventBufferer = new EventBufferer();\n\tprivate typeFilterController?: TypeFilterController<T, TFilterData>;\n\tprivate focusNavigationFilter: ((node: ITreeNode<T, TFilterData>) => boolean) | undefined;\n\tprotected disposables: IDisposable[] = [];\n\n\tget onDidScroll(): Event<ScrollEvent> { return this.view.onDidScroll; }\n\n\tget onDidChangeFocus(): Event<ITreeEvent<T>> { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n\tget onDidChangeSelection(): Event<ITreeEvent<T>> { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n\tget onDidOpen(): Event<ITreeEvent<T>> { return Event.map(this.view.onDidOpen, asTreeEvent); }\n\n\tget onMouseClick(): Event<ITreeMouseEvent<T>> { return Event.map(this.view.onMouseClick, asTreeMouseEvent); }\n\tget onMouseDblClick(): Event<ITreeMouseEvent<T>> { return Event.map(this.view.onMouseDblClick, asTreeMouseEvent); }\n\tget onContextMenu(): Event<ITreeContextMenuEvent<T>> { return Event.map(this.view.onContextMenu, asTreeContextMenuEvent); }\n\n\tget onKeyDown(): Event<KeyboardEvent> { return this.view.onKeyDown; }\n\tget onKeyUp(): Event<KeyboardEvent> { return this.view.onKeyUp; }\n\tget onKeyPress(): Event<KeyboardEvent> { return this.view.onKeyPress; }\n\n\tget onDidFocus(): Event<void> { return this.view.onDidFocus; }\n\tget onDidBlur(): Event<void> { return this.view.onDidBlur; }\n\n\tget onDidChangeCollapseState(): Event<ICollapseStateChangeEvent<T, TFilterData>> { return this.model.onDidChangeCollapseState; }\n\tget onDidChangeRenderNodeCount(): Event<ITreeNode<T, TFilterData>> { return this.model.onDidChangeRenderNodeCount; }\n\n\tprivate _onWillRefilter = new Emitter<void>();\n\treadonly onWillRefilter: Event<void> = this._onWillRefilter.event;\n\n\tget filterOnType(): boolean { return !!this._options.filterOnType; }\n\tget onDidChangeTypeFilterPattern(): Event<string> { return this.typeFilterController ? this.typeFilterController.onDidChangePattern : Event.None; }\n\n\t// Options TODO@joao expose options only, not Optional<>\n\tget openOnSingleClick(): boolean { return typeof this._options.openOnSingleClick === 'undefined' ? true : this._options.openOnSingleClick; }\n\tget expandOnlyOnTwistieClick(): boolean | ((e: T) => boolean) { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? false : this._options.expandOnlyOnTwistieClick; }\n\n\tprivate _onDidUpdateOptions = new Emitter<IAbstractTreeOptions<T, TFilterData>>();\n\treadonly onDidUpdateOptions: Event<IAbstractTreeOptions<T, TFilterData>> = this._onDidUpdateOptions.event;\n\n\tget onDidDispose(): Event<void> { return this.view.onDidDispose; }\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tdelegate: IListVirtualDelegate<T>,\n\t\trenderers: ITreeRenderer<any /* TODO@joao */, TFilterData, any>[],\n\t\tprivate _options: IAbstractTreeOptions<T, TFilterData> = {}\n\t) {\n\t\tconst treeDelegate = new ComposedTreeDelegate<T, ITreeNode<T, TFilterData>>(delegate);\n\n\t\tconst onDidChangeCollapseStateRelay = new Relay<ICollapseStateChangeEvent<T, TFilterData>>();\n\t\tthis.renderers = renderers.map(r => new TreeRenderer<T, TFilterData, any>(r, onDidChangeCollapseStateRelay.event, _options));\n\t\tthis.disposables.push(...this.renderers);\n\n\t\tlet filter: TypeFilter<T> | undefined;\n\n\t\tif (_options.keyboardNavigationLabelProvider) {\n\t\t\tfilter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter as any as ITreeFilter<T, FuzzyScore>);\n\t\t\t_options = { ..._options, filter: filter as ITreeFilter<T, TFilterData> }; // TODO need typescript help here\n\t\t\tthis.disposables.push(filter);\n\t\t}\n\n\t\tthis.focus = new Trait(_options.identityProvider);\n\t\tthis.selection = new Trait(_options.identityProvider);\n\t\tthis.view = new TreeNodeList(container, treeDelegate, this.renderers, this.focus, this.selection, { ...asListOptions(() => this.model, _options), tree: this });\n\n\t\tthis.model = this.createModel(this.view, _options);\n\t\tonDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n\n\t\tthis.model.onDidSplice(e => {\n\t\t\tthis.focus.onDidModelSplice(e);\n\t\t\tthis.selection.onDidModelSplice(e);\n\t\t}, null, this.disposables);\n\n\t\tif (_options.keyboardSupport !== false) {\n\t\t\tconst onKeyDown = Event.chain(this.view.onKeyDown)\n\t\t\t\t.filter(e => !isInputElement(e.target as HTMLElement))\n\t\t\t\t.map(e => new StandardKeyboardEvent(e));\n\n\t\t\tonKeyDown.filter(e => e.keyCode === KeyCode.LeftArrow).on(this.onLeftArrow, this, this.disposables);\n\t\t\tonKeyDown.filter(e => e.keyCode === KeyCode.RightArrow).on(this.onRightArrow, this, this.disposables);\n\t\t\tonKeyDown.filter(e => e.keyCode === KeyCode.Space).on(this.onSpace, this, this.disposables);\n\t\t}\n\n\t\tif (_options.keyboardNavigationLabelProvider) {\n\t\t\tthis.typeFilterController = new TypeFilterController(this, this.model, this.view, filter!, _options.keyboardNavigationLabelProvider);\n\t\t\tthis.focusNavigationFilter = node => this.typeFilterController!.shouldAllowFocus(node);\n\t\t\tthis.disposables.push(this.typeFilterController!);\n\t\t}\n\t}\n\n\tupdateOptions(optionsUpdate: IAbstractTreeOptionsUpdate = {}): void {\n\t\tthis._options = { ...this._options, ...optionsUpdate };\n\n\t\tfor (const renderer of this.renderers) {\n\t\t\trenderer.updateOptions(optionsUpdate);\n\t\t}\n\n\t\tthis.view.updateOptions({\n\t\t\tenableKeyboardNavigation: this._options.simpleKeyboardNavigation,\n\t\t\tautomaticKeyboardNavigation: this._options.automaticKeyboardNavigation\n\t\t});\n\n\t\tif (this.typeFilterController) {\n\t\t\tthis.typeFilterController.updateOptions(this._options);\n\t\t}\n\n\t\tthis._onDidUpdateOptions.fire(this._options);\n\t}\n\n\tget options(): IAbstractTreeOptions<T, TFilterData> {\n\t\treturn this._options;\n\t}\n\n\tupdateWidth(element: TRef): void {\n\t\tconst index = this.model.getListIndex(element);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view.updateWidth(index);\n\t}\n\n\t// Widget\n\n\tgetHTMLElement(): HTMLElement {\n\t\treturn this.view.getHTMLElement();\n\t}\n\n\tget contentHeight(): number {\n\t\tif (this.typeFilterController && this.typeFilterController.filterOnType && this.typeFilterController.empty) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn this.view.contentHeight;\n\t}\n\n\tget onDidChangeContentHeight(): Event<number> {\n\t\tlet result = this.view.onDidChangeContentHeight;\n\n\t\tif (this.typeFilterController) {\n\t\t\tresult = Event.any(result, Event.map(this.typeFilterController.onDidChangeEmptyState, () => this.contentHeight));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tget scrollTop(): number {\n\t\treturn this.view.scrollTop;\n\t}\n\n\tset scrollTop(scrollTop: number) {\n\t\tthis.view.scrollTop = scrollTop;\n\t}\n\n\tget scrollHeight(): number {\n\t\treturn this.view.scrollHeight;\n\t}\n\n\tget renderHeight(): number {\n\t\treturn this.view.renderHeight;\n\t}\n\n\tget firstVisibleElement(): T {\n\t\tconst index = this.view.firstVisibleIndex;\n\t\tconst node = this.view.element(index);\n\t\treturn node.element;\n\t}\n\n\tget lastVisibleElement(): T {\n\t\tconst index = this.view.lastVisibleIndex;\n\t\tconst node = this.view.element(index);\n\t\treturn node.element;\n\t}\n\n\tdomFocus(): void {\n\t\tthis.view.domFocus();\n\t}\n\n\tisDOMFocused(): boolean {\n\t\treturn this.getHTMLElement() === document.activeElement;\n\t}\n\n\tlayout(height?: number, width?: number): void {\n\t\tthis.view.layout(height, width);\n\t}\n\n\tstyle(styles: IListStyles): void {\n\t\tthis.view.style(styles);\n\t}\n\n\t// Tree navigation\n\n\tgetParentElement(location: TRef): T {\n\t\treturn this.model.getParentElement(location);\n\t}\n\n\tgetFirstElementChild(location: TRef): T | undefined {\n\t\treturn this.model.getFirstElementChild(location);\n\t}\n\n\t// Tree\n\n\tgetNode(location?: TRef): ITreeNode<T, TFilterData> {\n\t\treturn this.model.getNode(location);\n\t}\n\n\tcollapse(location: TRef, recursive: boolean = false): boolean {\n\t\treturn this.model.setCollapsed(location, true, recursive);\n\t}\n\n\texpand(location: TRef, recursive: boolean = false): boolean {\n\t\treturn this.model.setCollapsed(location, false, recursive);\n\t}\n\n\ttoggleCollapsed(location: TRef, recursive: boolean = false): boolean {\n\t\treturn this.model.setCollapsed(location, undefined, recursive);\n\t}\n\n\texpandAll(): void {\n\t\tthis.model.setCollapsed(this.model.rootRef, false, true);\n\t}\n\n\tcollapseAll(): void {\n\t\tthis.model.setCollapsed(this.model.rootRef, true, true);\n\t}\n\n\tisCollapsible(location: TRef): boolean {\n\t\treturn this.model.isCollapsible(location);\n\t}\n\n\tisCollapsed(location: TRef): boolean {\n\t\treturn this.model.isCollapsed(location);\n\t}\n\n\ttoggleKeyboardNavigation(): void {\n\t\tthis.view.toggleKeyboardNavigation();\n\n\t\tif (this.typeFilterController) {\n\t\t\tthis.typeFilterController.toggle();\n\t\t}\n\t}\n\n\trefilter(): void {\n\t\tthis._onWillRefilter.fire(undefined);\n\t\tthis.model.refilter();\n\t}\n\n\tsetSelection(elements: TRef[], browserEvent?: UIEvent): void {\n\t\tconst nodes = elements.map(e => this.model.getNode(e));\n\t\tthis.selection.set(nodes, browserEvent);\n\n\t\tconst indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n\t\tthis.view.setSelection(indexes, browserEvent, true);\n\t}\n\n\tgetSelection(): T[] {\n\t\treturn this.selection.get();\n\t}\n\n\tsetFocus(elements: TRef[], browserEvent?: UIEvent): void {\n\t\tconst nodes = elements.map(e => this.model.getNode(e));\n\t\tthis.focus.set(nodes, browserEvent);\n\n\t\tconst indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n\t\tthis.view.setFocus(indexes, browserEvent, true);\n\t}\n\n\tfocusNext(n = 1, loop = false, browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusNext(n, loop, browserEvent, filter);\n\t}\n\n\tfocusPrevious(n = 1, loop = false, browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusPrevious(n, loop, browserEvent, filter);\n\t}\n\n\tfocusNextPage(browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusNextPage(browserEvent, filter);\n\t}\n\n\tfocusPreviousPage(browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusPreviousPage(browserEvent, filter);\n\t}\n\n\tfocusLast(browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusLast(browserEvent, filter);\n\t}\n\n\tfocusFirst(browserEvent?: UIEvent, filter = this.focusNavigationFilter): void {\n\t\tthis.view.focusFirst(browserEvent, filter);\n\t}\n\n\tgetFocus(): T[] {\n\t\treturn this.focus.get();\n\t}\n\n\topen(elements: TRef[], browserEvent?: UIEvent): void {\n\t\tconst indexes = elements.map(e => this.model.getListIndex(e));\n\t\tthis.view.open(indexes, browserEvent);\n\t}\n\n\treveal(location: TRef, relativeTop?: number): void {\n\t\tthis.model.expandTo(location);\n\n\t\tconst index = this.model.getListIndex(location);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view.reveal(index, relativeTop);\n\t}\n\n\t/**\n\t * Returns the relative position of an element rendered in the list.\n\t * Returns `null` if the element isn't *entirely* in the visible viewport.\n\t */\n\tgetRelativeTop(location: TRef): number | null {\n\t\tconst index = this.model.getListIndex(location);\n\n\t\tif (index === -1) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.view.getRelativeTop(index);\n\t}\n\n\t// List\n\n\tprivate onLeftArrow(e: StandardKeyboardEvent): void {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst nodes = this.view.getFocusedElements();\n\n\t\tif (nodes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tconst location = this.model.getNodeLocation(node);\n\t\tconst didChange = this.model.setCollapsed(location, true);\n\n\t\tif (!didChange) {\n\t\t\tconst parentLocation = this.model.getParentNodeLocation(location);\n\n\t\t\tif (parentLocation === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst parentListIndex = this.model.getListIndex(parentLocation);\n\n\t\t\tthis.view.reveal(parentListIndex);\n\t\t\tthis.view.setFocus([parentListIndex]);\n\t\t}\n\t}\n\n\tprivate onRightArrow(e: StandardKeyboardEvent): void {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst nodes = this.view.getFocusedElements();\n\n\t\tif (nodes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tconst location = this.model.getNodeLocation(node);\n\t\tconst didChange = this.model.setCollapsed(location, false);\n\n\t\tif (!didChange) {\n\t\t\tif (!node.children.some(child => child.visible)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [focusedIndex] = this.view.getFocus();\n\t\t\tconst firstChildIndex = focusedIndex + 1;\n\n\t\t\tthis.view.reveal(firstChildIndex);\n\t\t\tthis.view.setFocus([firstChildIndex]);\n\t\t}\n\t}\n\n\tprivate onSpace(e: StandardKeyboardEvent): void {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst nodes = this.view.getFocusedElements();\n\n\t\tif (nodes.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tconst location = this.model.getNodeLocation(node);\n\t\tconst recursive = e.browserEvent.altKey;\n\n\t\tthis.model.setCollapsed(location, undefined, recursive);\n\t}\n\n\tprotected abstract createModel(view: ISpliceable<ITreeNode<T, TFilterData>>, options: IAbstractTreeOptions<T, TFilterData>): ITreeModel<T, TFilterData, TRef>;\n\n\tnavigate(start?: TRef): ITreeNavigator<T> {\n\t\treturn new TreeNavigator(this.view, this.model, start);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables = dispose(this.disposables);\n\t\tthis.view.dispose();\n\t}\n}\n\ninterface ITreeNavigatorView<T extends NonNullable<any>, TFilterData> {\n\treadonly length: number;\n\telement(index: number): ITreeNode<T, TFilterData>;\n}\n\nclass TreeNavigator<T extends NonNullable<any>, TFilterData, TRef> implements ITreeNavigator<T> {\n\n\tprivate index: number;\n\n\tconstructor(private view: ITreeNavigatorView<T, TFilterData>, private model: ITreeModel<T, TFilterData, TRef>, start?: TRef) {\n\t\tif (start) {\n\t\t\tthis.index = this.model.getListIndex(start);\n\t\t} else {\n\t\t\tthis.index = -1;\n\t\t}\n\t}\n\n\tcurrent(): T | null {\n\t\tif (this.index < 0 || this.index >= this.view.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.view.element(this.index).element;\n\t}\n\n\tprevious(): T | null {\n\t\tthis.index--;\n\t\treturn this.current();\n\t}\n\n\tnext(): T | null {\n\t\tthis.index++;\n\t\treturn this.current();\n\t}\n\n\tparent(): T | null {\n\t\tif (this.index < 0 || this.index >= this.view.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst node = this.view.element(this.index);\n\n\t\tif (!node.parent) {\n\t\t\tthis.index = -1;\n\t\t\treturn this.current();\n\t\t}\n\n\t\tthis.index = this.model.getListIndex(this.model.getNodeLocation(node.parent));\n\t\treturn this.current();\n\t}\n\n\tfirst(): T | null {\n\t\tthis.index = 0;\n\t\treturn this.current();\n\t}\n\n\tlast(): T | null {\n\t\tthis.index = this.view.length - 1;\n\t\treturn this.current();\n\t}\n}\n"]}]}