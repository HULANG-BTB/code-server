{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class ServiceCollection {\n        constructor(...entries) {\n            this._entries = new Map();\n            for (let [id, service] of entries) {\n                this.set(id, service);\n            }\n        }\n        set(id, instanceOrDescriptor) {\n            const result = this._entries.get(id);\n            this._entries.set(id, instanceOrDescriptor);\n            return result;\n        }\n        forEach(callback) {\n            this._entries.forEach((value, key) => callback(key, value));\n        }\n        has(id) {\n            return this._entries.has(id);\n        }\n        get(id) {\n            return this._entries.get(id);\n        }\n    }\n    exports.ServiceCollection = ServiceCollection;\n});\n",null]}