{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/packages/vscode/src/fill/environmentService.ts","dependencies":[{"path":"/home/coding/workspace/packages/vscode/src/fill/environmentService.ts","mtime":1555841535694},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar paths = require(\"./paths\");\nvar environment = require(\"vs/platform/environment/node/environmentService\");\n/**\n * Customize paths using data received from the initialization message.\n */\nvar EnvironmentService = /** @class */ (function (_super) {\n    tslib_1.__extends(EnvironmentService, _super);\n    function EnvironmentService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(EnvironmentService.prototype, \"sharedIPCHandle\", {\n        get: function () {\n            return paths.getSocketPath() || _super.prototype.sharedIPCHandle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EnvironmentService.prototype, \"extensionsPath\", {\n        get: function () {\n            return paths.getExtensionsDirectory();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EnvironmentService;\n}(environment.EnvironmentService));\nexports.EnvironmentService = EnvironmentService;\nvar target = environment;\ntarget.EnvironmentService = EnvironmentService;\n",{"version":3,"file":"/home/coding/workspace/packages/vscode/src/fill/environmentService.ts","sourceRoot":"","sources":["/home/coding/workspace/packages/vscode/src/fill/environmentService.ts"],"names":[],"mappings":";;;AAAA,+BAAiC;AACjC,6EAA+E;AAE/E;;GAEG;AACH;IAAwC,8CAA8B;IAAtE;;IAQA,CAAC;IAPA,sBAAW,+CAAe;aAA1B;YACC,OAAO,KAAK,CAAC,aAAa,EAAE,IAAI,iBAAM,eAAe,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAW,8CAAc;aAAzB;YACC,OAAO,KAAK,CAAC,sBAAsB,EAAE,CAAC;QACvC,CAAC;;;OAAA;IACF,yBAAC;AAAD,CAAC,AARD,CAAwC,WAAW,CAAC,kBAAkB,GAQrE;AARY,gDAAkB;AAU/B,IAAM,MAAM,GAAG,WAAiC,CAAC;AACjD,MAAM,CAAC,kBAAkB,GAAG,kBAAkB,CAAC","sourcesContent":["import * as paths from \"./paths\";\nimport * as environment from \"vs/platform/environment/node/environmentService\";\n\n/**\n * Customize paths using data received from the initialization message.\n */\nexport class EnvironmentService extends environment.EnvironmentService {\n\tpublic get sharedIPCHandle(): string {\n\t\treturn paths.getSocketPath() || super.sharedIPCHandle;\n\t}\n\n\tpublic get extensionsPath(): string {\n\t\treturn paths.getExtensionsDirectory();\n\t}\n}\n\nconst target = environment as typeof environment;\ntarget.EnvironmentService = EnvironmentService;\n"]}]}