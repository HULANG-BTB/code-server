{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es6\"}}!/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsInput.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsInput.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine([\"require\", \"exports\", \"vs/nls\", \"vs/base/common/uri\", \"vs/workbench/common/editor\"], function (require, exports, nls, uri_1, editor_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class RuntimeExtensionsInput extends editor_1.EditorInput {\n        constructor() {\n            super();\n        }\n        getTypeId() {\n            return RuntimeExtensionsInput.ID;\n        }\n        getName() {\n            return nls.localize('extensionsInputName', \"Running Extensions\");\n        }\n        matches(other) {\n            if (!(other instanceof RuntimeExtensionsInput)) {\n                return false;\n            }\n            return true;\n        }\n        resolve() {\n            return Promise.resolve(null);\n        }\n        supportsSplitEditor() {\n            return false;\n        }\n        getResource() {\n            return uri_1.URI.from({\n                scheme: 'runtime-extensions',\n                path: 'default'\n            });\n        }\n    }\n    RuntimeExtensionsInput.ID = 'workbench.runtimeExtensions.input';\n    exports.RuntimeExtensionsInput = RuntimeExtensionsInput;\n});\n",null]}