{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/editor/contrib/rename/renameInputField.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/rename/renameInputField.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nrequire(\"vs/css!./renameInputField\");\nvar editorBrowser_1 = require(\"vs/editor/browser/editorBrowser\");\nvar position_1 = require(\"vs/editor/common/core/position\");\nvar range_1 = require(\"vs/editor/common/core/range\");\nvar editorCommon_1 = require(\"vs/editor/common/editorCommon\");\nvar nls_1 = require(\"vs/nls\");\nvar contextkey_1 = require(\"vs/platform/contextkey/common/contextkey\");\nvar colorRegistry_1 = require(\"vs/platform/theme/common/colorRegistry\");\nexports.CONTEXT_RENAME_INPUT_VISIBLE = new contextkey_1.RawContextKey('renameInputVisible', false);\nvar RenameInputField = /** @class */ (function () {\n    function RenameInputField(editor, themeService, contextKeyService) {\n        var _this = this;\n        this.themeService = themeService;\n        this._disposables = [];\n        // Editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = true;\n        this._currentAcceptInput = null;\n        this._currentCancelInput = null;\n        this._visibleContextKey = exports.CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._editor = editor;\n        this._editor.addContentWidget(this);\n        this._disposables.push(editor.onDidChangeConfiguration(function (e) {\n            if (e.fontInfo) {\n                _this.updateFont();\n            }\n        }));\n        this._disposables.push(themeService.onThemeChange(function (theme) { return _this.onThemeChange(theme); }));\n    }\n    RenameInputField.prototype.onThemeChange = function (theme) {\n        this.updateStyles(theme);\n    };\n    RenameInputField.prototype.dispose = function () {\n        this._disposables = lifecycle_1.dispose(this._disposables);\n        this._editor.removeContentWidget(this);\n    };\n    RenameInputField.prototype.getId = function () {\n        return '__renameInputWidget';\n    };\n    RenameInputField.prototype.getDomNode = function () {\n        if (!this._domNode) {\n            this._inputField = document.createElement('input');\n            this._inputField.className = 'rename-input';\n            this._inputField.type = 'text';\n            this._inputField.setAttribute('aria-label', nls_1.localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n            this._domNode = document.createElement('div');\n            this._domNode.style.height = this._editor.getConfiguration().lineHeight + \"px\";\n            this._domNode.className = 'monaco-editor rename-box';\n            this._domNode.appendChild(this._inputField);\n            this.updateFont();\n            this.updateStyles(this.themeService.getTheme());\n        }\n        return this._domNode;\n    };\n    RenameInputField.prototype.updateStyles = function (theme) {\n        if (!this._inputField) {\n            return;\n        }\n        var background = theme.getColor(colorRegistry_1.inputBackground);\n        var foreground = theme.getColor(colorRegistry_1.inputForeground);\n        var widgetShadowColor = theme.getColor(colorRegistry_1.widgetShadow);\n        var border = theme.getColor(colorRegistry_1.inputBorder);\n        this._inputField.style.backgroundColor = background ? background.toString() : null;\n        this._inputField.style.color = foreground ? foreground.toString() : null;\n        this._inputField.style.borderWidth = border ? '1px' : '0px';\n        this._inputField.style.borderStyle = border ? 'solid' : 'none';\n        this._inputField.style.borderColor = border ? border.toString() : 'none';\n        this._domNode.style.boxShadow = widgetShadowColor ? \" 0 2px 8px \" + widgetShadowColor : null;\n    };\n    RenameInputField.prototype.updateFont = function () {\n        if (!this._inputField) {\n            return;\n        }\n        var fontInfo = this._editor.getConfiguration().fontInfo;\n        this._inputField.style.fontFamily = fontInfo.fontFamily;\n        this._inputField.style.fontWeight = fontInfo.fontWeight;\n        this._inputField.style.fontSize = fontInfo.fontSize + \"px\";\n    };\n    RenameInputField.prototype.getPosition = function () {\n        return this._visible\n            ? { position: this._position, preference: [editorBrowser_1.ContentWidgetPositionPreference.BELOW, editorBrowser_1.ContentWidgetPositionPreference.ABOVE] }\n            : null;\n    };\n    RenameInputField.prototype.acceptInput = function () {\n        if (this._currentAcceptInput) {\n            this._currentAcceptInput();\n        }\n    };\n    RenameInputField.prototype.cancelInput = function (focusEditor) {\n        if (this._currentCancelInput) {\n            this._currentCancelInput(focusEditor);\n        }\n    };\n    RenameInputField.prototype.getInput = function (where, value, selectionStart, selectionEnd) {\n        var _this = this;\n        this._position = new position_1.Position(where.startLineNumber, where.startColumn);\n        this._inputField.value = value;\n        this._inputField.setAttribute('selectionStart', selectionStart.toString());\n        this._inputField.setAttribute('selectionEnd', selectionEnd.toString());\n        this._inputField.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\n        var disposeOnDone = [];\n        var always = function () {\n            lifecycle_1.dispose(disposeOnDone);\n            _this._hide();\n        };\n        return new Promise(function (resolve) {\n            _this._currentCancelInput = function (focusEditor) {\n                _this._currentAcceptInput = null;\n                _this._currentCancelInput = null;\n                resolve(focusEditor);\n                return true;\n            };\n            _this._currentAcceptInput = function () {\n                if (_this._inputField.value.trim().length === 0 || _this._inputField.value === value) {\n                    // empty or whitespace only or not changed\n                    _this.cancelInput(true);\n                    return;\n                }\n                _this._currentAcceptInput = null;\n                _this._currentCancelInput = null;\n                resolve(_this._inputField.value);\n            };\n            var onCursorChanged = function () {\n                var editorPosition = _this._editor.getPosition();\n                if (!editorPosition || !range_1.Range.containsPosition(where, editorPosition)) {\n                    _this.cancelInput(true);\n                }\n            };\n            disposeOnDone.push(_this._editor.onDidChangeCursorSelection(onCursorChanged));\n            disposeOnDone.push(_this._editor.onDidBlurEditorWidget(function () { return _this.cancelInput(false); }));\n            _this._show();\n        }).then(function (newValue) {\n            always();\n            return newValue;\n        }, function (err) {\n            always();\n            return Promise.reject(err);\n        });\n    };\n    RenameInputField.prototype._show = function () {\n        var _this = this;\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, editorCommon_1.ScrollType.Smooth);\n        this._visible = true;\n        this._visibleContextKey.set(true);\n        this._editor.layoutContentWidget(this);\n        setTimeout(function () {\n            _this._inputField.focus();\n            _this._inputField.setSelectionRange(parseInt(_this._inputField.getAttribute('selectionStart')), parseInt(_this._inputField.getAttribute('selectionEnd')));\n        }, 100);\n    };\n    RenameInputField.prototype._hide = function () {\n        this._visible = false;\n        this._visibleContextKey.reset();\n        this._editor.layoutContentWidget(this);\n    };\n    return RenameInputField;\n}());\nexports.RenameInputField = RenameInputField;\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/editor/contrib/rename/renameInputField.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/editor/contrib/rename/renameInputField.ts"],"names":[],"mappings":";AAAA;;;gGAGgG;;AAEhG,sDAAgE;AAChE,qCAAmC;AACnC,iEAAuI;AACvI,2DAA0D;AAC1D,qDAA4D;AAC5D,8DAA2D;AAC3D,8BAAkC;AAClC,uEAA0G;AAC1G,wEAAqH;AAGxG,QAAA,4BAA4B,GAAG,IAAI,0BAAa,CAAU,oBAAoB,EAAE,KAAK,CAAC,CAAC;AAEpG;IAaC,0BACC,MAAmB,EACF,YAA2B,EAC5C,iBAAqC;QAHtC,iBAiBC;QAfiB,iBAAY,GAAZ,YAAY,CAAe;QAPrC,iBAAY,GAAkB,EAAE,CAAC;QAEzC,4CAA4C;QACrC,wBAAmB,GAAY,IAAI,CAAC;QAwFnC,wBAAmB,GAAwB,IAAI,CAAC;QAChD,wBAAmB,GAA4C,IAAI,CAAC;QAlF3E,IAAI,CAAC,kBAAkB,GAAG,oCAA4B,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAEjF,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAEpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAA,CAAC;YACvD,IAAI,CAAC,CAAC,QAAQ,EAAE;gBACf,KAAI,CAAC,UAAU,EAAE,CAAC;aAClB;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;IACxF,CAAC;IAEO,wCAAa,GAArB,UAAsB,KAAa;QAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEM,kCAAO,GAAd;QACC,IAAI,CAAC,YAAY,GAAG,mBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEM,gCAAK,GAAZ;QACC,OAAO,qBAAqB,CAAC;IAC9B,CAAC;IAEM,qCAAU,GAAjB;QACC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,cAAc,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,EAAE,cAAQ,CAAC,iBAAiB,EAAE,wDAAwD,CAAC,CAAC,CAAC;YACnI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,UAAU,OAAI,CAAC;YAC/E,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,0BAA0B,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE5C,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChD;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEO,uCAAY,GAApB,UAAqB,KAAa;QACjC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,OAAO;SACP;QAED,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,+BAAe,CAAC,CAAC;QACnD,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,+BAAe,CAAC,CAAC;QACnD,IAAM,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,4BAAY,CAAC,CAAC;QACvD,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,2BAAW,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACnF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAEzE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;QAEzE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,CAAC,CAAC,CAAC,gBAAc,iBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9F,CAAC;IAEO,qCAAU,GAAlB;QACC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,OAAO;SACP;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,GAAM,QAAQ,CAAC,QAAQ,OAAI,CAAC;IAC5D,CAAC;IAEM,sCAAW,GAAlB;QACC,OAAO,IAAI,CAAC,QAAQ;YACnB,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,+CAA+B,CAAC,KAAK,EAAE,+CAA+B,CAAC,KAAK,CAAC,EAAE;YAC1H,CAAC,CAAC,IAAI,CAAC;IACT,CAAC;IAKM,sCAAW,GAAlB;QACC,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC3B;IACF,CAAC;IAEM,sCAAW,GAAlB,UAAmB,WAAoB;QACtC,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;SACtC;IACF,CAAC;IAEM,mCAAQ,GAAf,UAAgB,KAAa,EAAE,KAAa,EAAE,cAAsB,EAAE,YAAoB;QAA1F,iBAsDC;QApDA,IAAI,CAAC,SAAS,GAAG,IAAI,mBAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;QAElF,IAAM,aAAa,GAAkB,EAAE,CAAC;QACxC,IAAM,MAAM,GAAG;YACd,mBAAO,CAAC,aAAa,CAAC,CAAC;YACvB,KAAI,CAAC,KAAK,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,OAAO,IAAI,OAAO,CAAmB,UAAA,OAAO;YAE3C,KAAI,CAAC,mBAAmB,GAAG,UAAC,WAAW;gBACtC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACrB,OAAO,IAAI,CAAC;YACb,CAAC,CAAC;YAEF,KAAI,CAAC,mBAAmB,GAAG;gBAC1B,IAAI,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,KAAK,KAAK,KAAK,EAAE;oBACnF,0CAA0C;oBAC1C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvB,OAAO;iBACP;gBAED,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,CAAC;YAEF,IAAI,eAAe,GAAG;gBACrB,IAAM,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAClD,IAAI,CAAC,cAAc,IAAI,CAAC,aAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE;oBACtE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBACvB;YACF,CAAC,CAAC;YAEF,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC,CAAC;YAC7E,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAC;YAEtF,KAAI,CAAC,KAAK,EAAE,CAAC;QAEd,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;YACf,MAAM,EAAE,CAAC;YACT,OAAO,QAAQ,CAAC;QACjB,CAAC,EAAE,UAAA,GAAG;YACL,MAAM,EAAE,CAAC;YACT,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,gCAAK,GAAb;QAAA,iBAYC;QAXA,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,yBAAU,CAAC,MAAM,CAAC,CAAC;QAC/F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAEvC,UAAU,CAAC;YACV,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,iBAAiB,CACjC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAE,CAAC,EAC1D,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAE,CAAC,CAAC,CAAC;QAC5D,CAAC,EAAE,GAAG,CAAC,CAAC;IACT,CAAC;IAEO,gCAAK,GAAb;QACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACF,uBAAC;AAAD,CAAC,AA7LD,IA6LC;AA7LY,4CAAgB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport 'vs/css!./renameInputField';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { localize } from 'vs/nls';\nimport { IContextKey, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { inputBackground, inputBorder, inputForeground, widgetShadow } from 'vs/platform/theme/common/colorRegistry';\nimport { ITheme, IThemeService } from 'vs/platform/theme/common/themeService';\n\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey<boolean>('renameInputVisible', false);\n\nexport class RenameInputField implements IContentWidget, IDisposable {\n\n\tprivate _editor: ICodeEditor;\n\tprivate _position: Position;\n\tprivate _domNode: HTMLElement;\n\tprivate _inputField: HTMLInputElement;\n\tprivate _visible: boolean;\n\tprivate readonly _visibleContextKey: IContextKey<boolean>;\n\tprivate _disposables: IDisposable[] = [];\n\n\t// Editor.IContentWidget.allowEditorOverflow\n\tpublic allowEditorOverflow: boolean = true;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tprivate readonly themeService: IThemeService,\n\t\tcontextKeyService: IContextKeyService,\n\t) {\n\t\tthis._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n\n\t\tthis._editor = editor;\n\t\tthis._editor.addContentWidget(this);\n\n\t\tthis._disposables.push(editor.onDidChangeConfiguration(e => {\n\t\t\tif (e.fontInfo) {\n\t\t\t\tthis.updateFont();\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposables.push(themeService.onThemeChange(theme => this.onThemeChange(theme)));\n\t}\n\n\tprivate onThemeChange(theme: ITheme): void {\n\t\tthis.updateStyles(theme);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._disposables = dispose(this._disposables);\n\t\tthis._editor.removeContentWidget(this);\n\t}\n\n\tpublic getId(): string {\n\t\treturn '__renameInputWidget';\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\tif (!this._domNode) {\n\t\t\tthis._inputField = document.createElement('input');\n\t\t\tthis._inputField.className = 'rename-input';\n\t\t\tthis._inputField.type = 'text';\n\t\t\tthis._inputField.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n\t\t\tthis._domNode = document.createElement('div');\n\t\t\tthis._domNode.style.height = `${this._editor.getConfiguration().lineHeight}px`;\n\t\t\tthis._domNode.className = 'monaco-editor rename-box';\n\t\t\tthis._domNode.appendChild(this._inputField);\n\n\t\t\tthis.updateFont();\n\t\t\tthis.updateStyles(this.themeService.getTheme());\n\t\t}\n\t\treturn this._domNode;\n\t}\n\n\tprivate updateStyles(theme: ITheme): void {\n\t\tif (!this._inputField) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst background = theme.getColor(inputBackground);\n\t\tconst foreground = theme.getColor(inputForeground);\n\t\tconst widgetShadowColor = theme.getColor(widgetShadow);\n\t\tconst border = theme.getColor(inputBorder);\n\n\t\tthis._inputField.style.backgroundColor = background ? background.toString() : null;\n\t\tthis._inputField.style.color = foreground ? foreground.toString() : null;\n\n\t\tthis._inputField.style.borderWidth = border ? '1px' : '0px';\n\t\tthis._inputField.style.borderStyle = border ? 'solid' : 'none';\n\t\tthis._inputField.style.borderColor = border ? border.toString() : 'none';\n\n\t\tthis._domNode.style.boxShadow = widgetShadowColor ? ` 0 2px 8px ${widgetShadowColor}` : null;\n\t}\n\n\tprivate updateFont(): void {\n\t\tif (!this._inputField) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontInfo = this._editor.getConfiguration().fontInfo;\n\t\tthis._inputField.style.fontFamily = fontInfo.fontFamily;\n\t\tthis._inputField.style.fontWeight = fontInfo.fontWeight;\n\t\tthis._inputField.style.fontSize = `${fontInfo.fontSize}px`;\n\t}\n\n\tpublic getPosition(): IContentWidgetPosition | null {\n\t\treturn this._visible\n\t\t\t? { position: this._position, preference: [ContentWidgetPositionPreference.BELOW, ContentWidgetPositionPreference.ABOVE] }\n\t\t\t: null;\n\t}\n\n\tprivate _currentAcceptInput: (() => void) | null = null;\n\tprivate _currentCancelInput: ((focusEditor: boolean) => void) | null = null;\n\n\tpublic acceptInput(): void {\n\t\tif (this._currentAcceptInput) {\n\t\t\tthis._currentAcceptInput();\n\t\t}\n\t}\n\n\tpublic cancelInput(focusEditor: boolean): void {\n\t\tif (this._currentCancelInput) {\n\t\t\tthis._currentCancelInput(focusEditor);\n\t\t}\n\t}\n\n\tpublic getInput(where: IRange, value: string, selectionStart: number, selectionEnd: number): Promise<string | boolean> {\n\n\t\tthis._position = new Position(where.startLineNumber, where.startColumn);\n\t\tthis._inputField.value = value;\n\t\tthis._inputField.setAttribute('selectionStart', selectionStart.toString());\n\t\tthis._inputField.setAttribute('selectionEnd', selectionEnd.toString());\n\t\tthis._inputField.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\n\n\t\tconst disposeOnDone: IDisposable[] = [];\n\t\tconst always = () => {\n\t\t\tdispose(disposeOnDone);\n\t\t\tthis._hide();\n\t\t};\n\n\t\treturn new Promise<string | boolean>(resolve => {\n\n\t\t\tthis._currentCancelInput = (focusEditor) => {\n\t\t\t\tthis._currentAcceptInput = null;\n\t\t\t\tthis._currentCancelInput = null;\n\t\t\t\tresolve(focusEditor);\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\tthis._currentAcceptInput = () => {\n\t\t\t\tif (this._inputField.value.trim().length === 0 || this._inputField.value === value) {\n\t\t\t\t\t// empty or whitespace only or not changed\n\t\t\t\t\tthis.cancelInput(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._currentAcceptInput = null;\n\t\t\t\tthis._currentCancelInput = null;\n\t\t\t\tresolve(this._inputField.value);\n\t\t\t};\n\n\t\t\tlet onCursorChanged = () => {\n\t\t\t\tconst editorPosition = this._editor.getPosition();\n\t\t\t\tif (!editorPosition || !Range.containsPosition(where, editorPosition)) {\n\t\t\t\t\tthis.cancelInput(true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdisposeOnDone.push(this._editor.onDidChangeCursorSelection(onCursorChanged));\n\t\t\tdisposeOnDone.push(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\n\n\t\t\tthis._show();\n\n\t\t}).then(newValue => {\n\t\t\talways();\n\t\t\treturn newValue;\n\t\t}, err => {\n\t\t\talways();\n\t\t\treturn Promise.reject(err);\n\t\t});\n\t}\n\n\tprivate _show(): void {\n\t\tthis._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, ScrollType.Smooth);\n\t\tthis._visible = true;\n\t\tthis._visibleContextKey.set(true);\n\t\tthis._editor.layoutContentWidget(this);\n\n\t\tsetTimeout(() => {\n\t\t\tthis._inputField.focus();\n\t\t\tthis._inputField.setSelectionRange(\n\t\t\t\tparseInt(this._inputField.getAttribute('selectionStart')!),\n\t\t\t\tparseInt(this._inputField.getAttribute('selectionEnd')!));\n\t\t}, 100);\n\t}\n\n\tprivate _hide(): void {\n\t\tthis._visible = false;\n\t\tthis._visibleContextKey.reset();\n\t\tthis._editor.layoutContentWidget(this);\n\t}\n}\n"]}]}