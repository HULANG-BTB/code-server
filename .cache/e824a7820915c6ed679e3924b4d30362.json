{"remainingRequest":"/home/coding/workspace/node_modules/ts-loader/index.js?{\"happyPackMode\":true,\"compilerOptions\":{\"target\":\"es5\",\"lib\":[\"dom\",\"esnext\"]}}!/home/coding/workspace/lib/vscode/src/vs/workbench/services/decorations/browser/decorationsService.ts","dependencies":[{"path":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/decorations/browser/decorationsService.ts","mtime":1555102317000},{"path":"/home/coding/workspace/node_modules/cache-loader/dist/cjs.js","mtime":1555844183884},{"path":"/home/coding/workspace/node_modules/ts-loader/index.js","mtime":1555844217316}],"contextDependencies":[],"result":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"vs/base/common/event\");\nvar decorations_1 = require(\"./decorations\");\nvar map_1 = require(\"vs/base/common/map\");\nvar lifecycle_1 = require(\"vs/base/common/lifecycle\");\nvar async_1 = require(\"vs/base/common/async\");\nvar linkedList_1 = require(\"vs/base/common/linkedList\");\nvar dom_1 = require(\"vs/base/browser/dom\");\nvar themeService_1 = require(\"vs/platform/theme/common/themeService\");\nvar idGenerator_1 = require(\"vs/base/common/idGenerator\");\nvar strings_1 = require(\"vs/base/common/strings\");\nvar nls_1 = require(\"vs/nls\");\nvar errors_1 = require(\"vs/base/common/errors\");\nvar cancellation_1 = require(\"vs/base/common/cancellation\");\nvar extensions_1 = require(\"vs/platform/instantiation/common/extensions\");\nvar DecorationRule = /** @class */ (function () {\n    function DecorationRule(data) {\n        this.data = data;\n        this.itemColorClassName = DecorationRule._classNames.nextId();\n        this.itemBadgeClassName = DecorationRule._classNames.nextId();\n        this.bubbleBadgeClassName = DecorationRule._classNames.nextId();\n    }\n    DecorationRule.keyOf = function (data) {\n        if (Array.isArray(data)) {\n            return data.map(DecorationRule.keyOf).join(',');\n        }\n        else {\n            var color = data.color, letter = data.letter;\n            return color + \"/\" + letter;\n        }\n    };\n    DecorationRule.prototype.appendCSSRules = function (element, theme) {\n        if (!Array.isArray(this.data)) {\n            this._appendForOne(this.data, element, theme);\n        }\n        else {\n            this._appendForMany(this.data, element, theme);\n        }\n    };\n    DecorationRule.prototype._appendForOne = function (data, element, theme) {\n        var color = data.color, letter = data.letter;\n        // label\n        dom_1.createCSSRule(\".\" + this.itemColorClassName, \"color: \" + getColor(theme, color) + \";\", element);\n        // letter\n        if (letter) {\n            dom_1.createCSSRule(\".\" + this.itemBadgeClassName + \"::after\", \"content: \\\"\" + letter + \"\\\"; color: \" + getColor(theme, color) + \";\", element);\n        }\n    };\n    DecorationRule.prototype._appendForMany = function (data, element, theme) {\n        // label\n        var color = data[0].color;\n        dom_1.createCSSRule(\".\" + this.itemColorClassName, \"color: \" + getColor(theme, color) + \";\", element);\n        // badge\n        var letters = data.filter(function (d) { return !strings_1.isFalsyOrWhitespace(d.letter); }).map(function (d) { return d.letter; });\n        if (letters.length) {\n            dom_1.createCSSRule(\".\" + this.itemBadgeClassName + \"::after\", \"content: \\\"\" + letters.join(', ') + \"\\\"; color: \" + getColor(theme, color) + \";\", element);\n        }\n        // bubble badge\n        dom_1.createCSSRule(\".\" + this.bubbleBadgeClassName + \"::after\", \"content: \\\"\\uF052\\\"; color: \" + getColor(theme, color) + \"; font-family: octicons; font-size: 14px; padding-right: 14px; opacity: 0.4;\", element);\n    };\n    DecorationRule.prototype.removeCSSRules = function (element) {\n        dom_1.removeCSSRulesContainingSelector(this.itemColorClassName, element);\n        dom_1.removeCSSRulesContainingSelector(this.itemBadgeClassName, element);\n        dom_1.removeCSSRulesContainingSelector(this.bubbleBadgeClassName, element);\n    };\n    DecorationRule.prototype.isUnused = function () {\n        return !document.querySelector(\".\" + this.itemColorClassName)\n            && !document.querySelector(\".\" + this.itemBadgeClassName)\n            && !document.querySelector(\".\" + this.bubbleBadgeClassName);\n    };\n    DecorationRule._classNames = new idGenerator_1.IdGenerator('monaco-decorations-style-');\n    return DecorationRule;\n}());\nvar DecorationStyles = /** @class */ (function () {\n    function DecorationStyles(_themeService) {\n        this._themeService = _themeService;\n        this._styleElement = dom_1.createStyleSheet();\n        this._decorationRules = new Map();\n        this._disposables = [this._themeService.onThemeChange(this._onThemeChange, this)];\n    }\n    DecorationStyles.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        var parent = this._styleElement.parentElement;\n        if (parent) {\n            parent.removeChild(this._styleElement);\n        }\n    };\n    DecorationStyles.prototype.asDecoration = function (data, onlyChildren) {\n        var _this = this;\n        // sort by weight\n        data.sort(function (a, b) { return (b.weight || 0) - (a.weight || 0); });\n        var key = DecorationRule.keyOf(data);\n        var rule = this._decorationRules.get(key);\n        if (!rule) {\n            // new css rule\n            rule = new DecorationRule(data);\n            this._decorationRules.set(key, rule);\n            rule.appendCSSRules(this._styleElement, this._themeService.getTheme());\n        }\n        var labelClassName = rule.itemColorClassName;\n        var badgeClassName = rule.itemBadgeClassName;\n        var tooltip = data.filter(function (d) { return !strings_1.isFalsyOrWhitespace(d.tooltip); }).map(function (d) { return d.tooltip; }).join(' â€¢ ');\n        if (onlyChildren) {\n            // show items from its children only\n            badgeClassName = rule.bubbleBadgeClassName;\n            tooltip = nls_1.localize('bubbleTitle', \"Contains emphasized items\");\n        }\n        return {\n            labelClassName: labelClassName,\n            badgeClassName: badgeClassName,\n            tooltip: tooltip,\n            update: function (replace) {\n                var newData = data.slice();\n                for (var i = 0; i < newData.length; i++) {\n                    if (newData[i].source === replace.source) {\n                        // replace\n                        newData[i] = replace;\n                    }\n                }\n                return _this.asDecoration(newData, onlyChildren);\n            }\n        };\n    };\n    DecorationStyles.prototype._onThemeChange = function () {\n        var _this = this;\n        this._decorationRules.forEach(function (rule) {\n            rule.removeCSSRules(_this._styleElement);\n            rule.appendCSSRules(_this._styleElement, _this._themeService.getTheme());\n        });\n    };\n    DecorationStyles.prototype.cleanUp = function (iter) {\n        var _this = this;\n        // remove every rule for which no more\n        // decoration (data) is kept. this isn't cheap\n        var usedDecorations = new Set();\n        for (var e = iter.next(); !e.done; e = iter.next()) {\n            e.value.data.forEach(function (value, key) {\n                if (value && !(value instanceof DecorationDataRequest)) {\n                    usedDecorations.add(DecorationRule.keyOf(value));\n                }\n            });\n        }\n        this._decorationRules.forEach(function (value, index) {\n            var data = value.data;\n            if (value.isUnused()) {\n                var remove = false;\n                if (Array.isArray(data)) {\n                    remove = data.some(function (data) { return !usedDecorations.has(DecorationRule.keyOf(data)); });\n                }\n                else if (!usedDecorations.has(DecorationRule.keyOf(data))) {\n                    remove = true;\n                }\n                if (remove) {\n                    value.removeCSSRules(_this._styleElement);\n                    _this._decorationRules.delete(index);\n                }\n            }\n        });\n    };\n    return DecorationStyles;\n}());\nvar FileDecorationChangeEvent = /** @class */ (function () {\n    function FileDecorationChangeEvent() {\n        this._data = map_1.TernarySearchTree.forPaths();\n    }\n    FileDecorationChangeEvent.prototype.affectsResource = function (uri) {\n        return this._data.get(uri.toString()) || this._data.findSuperstr(uri.toString()) !== undefined;\n    };\n    FileDecorationChangeEvent.debouncer = function (last, current) {\n        if (!last) {\n            last = new FileDecorationChangeEvent();\n        }\n        if (Array.isArray(current)) {\n            // many\n            for (var _i = 0, current_1 = current; _i < current_1.length; _i++) {\n                var uri = current_1[_i];\n                last._data.set(uri.toString(), true);\n            }\n        }\n        else {\n            // one\n            last._data.set(current.toString(), true);\n        }\n        return last;\n    };\n    return FileDecorationChangeEvent;\n}());\nvar DecorationDataRequest = /** @class */ (function () {\n    function DecorationDataRequest(source, thenable) {\n        this.source = source;\n        this.thenable = thenable;\n    }\n    return DecorationDataRequest;\n}());\nvar DecorationProviderWrapper = /** @class */ (function () {\n    function DecorationProviderWrapper(_provider, _uriEmitter, _flushEmitter) {\n        var _this = this;\n        this._provider = _provider;\n        this._uriEmitter = _uriEmitter;\n        this._flushEmitter = _flushEmitter;\n        this.data = map_1.TernarySearchTree.forPaths();\n        this._dispoable = this._provider.onDidChange(function (uris) {\n            if (!uris) {\n                // flush event -> drop all data, can affect everything\n                _this.data.clear();\n                _this._flushEmitter.fire({ affectsResource: function () { return true; } });\n            }\n            else {\n                // selective changes -> drop for resource, fetch again, send event\n                // perf: the map stores thenables, decorations, or `null`-markers.\n                // we make us of that and ignore all uris in which we have never\n                // been interested.\n                for (var _i = 0, uris_1 = uris; _i < uris_1.length; _i++) {\n                    var uri = uris_1[_i];\n                    _this._fetchData(uri);\n                }\n            }\n        });\n    }\n    DecorationProviderWrapper.prototype.dispose = function () {\n        this._dispoable.dispose();\n        this.data.clear();\n    };\n    DecorationProviderWrapper.prototype.knowsAbout = function (uri) {\n        return Boolean(this.data.get(uri.toString())) || Boolean(this.data.findSuperstr(uri.toString()));\n    };\n    DecorationProviderWrapper.prototype.getOrRetrieve = function (uri, includeChildren, callback) {\n        var key = uri.toString();\n        var item = this.data.get(key);\n        if (item === undefined) {\n            // unknown -> trigger request\n            item = this._fetchData(uri);\n        }\n        if (item && !(item instanceof DecorationDataRequest)) {\n            // found something (which isn't pending anymore)\n            callback(item, false);\n        }\n        if (includeChildren) {\n            // (resolved) children\n            var iter = this.data.findSuperstr(key);\n            if (iter) {\n                for (var item_1 = iter.next(); !item_1.done; item_1 = iter.next()) {\n                    if (item_1.value && !(item_1.value instanceof DecorationDataRequest)) {\n                        callback(item_1.value, true);\n                    }\n                }\n            }\n        }\n    };\n    DecorationProviderWrapper.prototype._fetchData = function (uri) {\n        var _this = this;\n        // check for pending request and cancel it\n        var pendingRequest = this.data.get(uri.toString());\n        if (pendingRequest instanceof DecorationDataRequest) {\n            pendingRequest.source.cancel();\n            this.data.delete(uri.toString());\n        }\n        var source = new cancellation_1.CancellationTokenSource();\n        var dataOrThenable = this._provider.provideDecorations(uri, source.token);\n        if (!async_1.isThenable(dataOrThenable)) {\n            // sync -> we have a result now\n            return this._keepItem(uri, dataOrThenable);\n        }\n        else {\n            // async -> we have a result soon\n            var request_1 = new DecorationDataRequest(source, Promise.resolve(dataOrThenable).then(function (data) {\n                if (_this.data.get(uri.toString()) === request_1) {\n                    _this._keepItem(uri, data);\n                }\n            }).catch(function (err) {\n                if (!errors_1.isPromiseCanceledError(err) && _this.data.get(uri.toString()) === request_1) {\n                    _this.data.delete(uri.toString());\n                }\n            }));\n            this.data.set(uri.toString(), request_1);\n            return null;\n        }\n    };\n    DecorationProviderWrapper.prototype._keepItem = function (uri, data) {\n        var deco = data ? data : null;\n        var old = this.data.set(uri.toString(), deco);\n        if (deco || old) {\n            // only fire event when something changed\n            this._uriEmitter.fire(uri);\n        }\n        return deco;\n    };\n    return DecorationProviderWrapper;\n}());\nvar FileDecorationsService = /** @class */ (function () {\n    function FileDecorationsService(themeService) {\n        var _this = this;\n        this._data = new linkedList_1.LinkedList();\n        this._onDidChangeDecorationsDelayed = new event_1.Emitter();\n        this._onDidChangeDecorations = new event_1.Emitter();\n        this.onDidChangeDecorations = event_1.Event.any(this._onDidChangeDecorations.event, event_1.Event.debounce(this._onDidChangeDecorationsDelayed.event, FileDecorationChangeEvent.debouncer, undefined, undefined, 500));\n        this._decorationStyles = new DecorationStyles(themeService);\n        // every so many events we check if there are\n        // css styles that we don't need anymore\n        var count = 0;\n        var reg = this.onDidChangeDecorations(function () {\n            if (++count % 17 === 0) {\n                _this._decorationStyles.cleanUp(_this._data.iterator());\n            }\n        });\n        this._disposables = [\n            reg,\n            this._decorationStyles\n        ];\n    }\n    FileDecorationsService.prototype.dispose = function () {\n        lifecycle_1.dispose(this._disposables);\n        lifecycle_1.dispose(this._onDidChangeDecorations);\n        lifecycle_1.dispose(this._onDidChangeDecorationsDelayed);\n    };\n    FileDecorationsService.prototype.registerDecorationsProvider = function (provider) {\n        var _this = this;\n        var wrapper = new DecorationProviderWrapper(provider, this._onDidChangeDecorationsDelayed, this._onDidChangeDecorations);\n        var remove = this._data.push(wrapper);\n        this._onDidChangeDecorations.fire({\n            // everything might have changed\n            affectsResource: function () { return true; }\n        });\n        return lifecycle_1.toDisposable(function () {\n            // fire event that says 'yes' for any resource\n            // known to this provider. then dispose and remove it.\n            remove();\n            _this._onDidChangeDecorations.fire({ affectsResource: function (uri) { return wrapper.knowsAbout(uri); } });\n            wrapper.dispose();\n        });\n    };\n    FileDecorationsService.prototype.getDecoration = function (uri, includeChildren, overwrite) {\n        var data = [];\n        var containsChildren = false;\n        for (var iter = this._data.iterator(), next = iter.next(); !next.done; next = iter.next()) {\n            next.value.getOrRetrieve(uri, includeChildren, function (deco, isChild) {\n                if (!isChild || deco.bubble) {\n                    data.push(deco);\n                    containsChildren = isChild || containsChildren;\n                }\n            });\n        }\n        if (data.length === 0) {\n            // nothing, maybe overwrite data\n            if (overwrite) {\n                return this._decorationStyles.asDecoration([overwrite], containsChildren);\n            }\n            else {\n                return undefined;\n            }\n        }\n        else {\n            // result, maybe overwrite\n            var result = this._decorationStyles.asDecoration(data, containsChildren);\n            if (overwrite) {\n                return result.update(overwrite);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    FileDecorationsService = tslib_1.__decorate([\n        tslib_1.__param(0, themeService_1.IThemeService)\n    ], FileDecorationsService);\n    return FileDecorationsService;\n}());\nexports.FileDecorationsService = FileDecorationsService;\nfunction getColor(theme, color) {\n    if (color) {\n        var foundColor = theme.getColor(color);\n        if (foundColor) {\n            return foundColor;\n        }\n    }\n    return 'inherit';\n}\nextensions_1.registerSingleton(decorations_1.IDecorationsService, FileDecorationsService);\n",{"version":3,"file":"/home/coding/workspace/lib/vscode/src/vs/workbench/services/decorations/browser/decorationsService.ts","sourceRoot":"","sources":["/home/coding/workspace/lib/vscode/src/vs/workbench/services/decorations/browser/decorationsService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IDecorationsService, IDecoration, IResourceDecorationChangeEvent, IDecorationsProvider, IDecorationData } from './decorations';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { IDisposable, dispose, toDisposable } from 'vs/base/common/lifecycle';\nimport { isThenable } from 'vs/base/common/async';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { createStyleSheet, createCSSRule, removeCSSRulesContainingSelector } from 'vs/base/browser/dom';\nimport { IThemeService, ITheme } from 'vs/platform/theme/common/themeService';\nimport { IdGenerator } from 'vs/base/common/idGenerator';\nimport { Iterator } from 'vs/base/common/iterator';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\n\nclass DecorationRule {\n\n\tstatic keyOf(data: IDecorationData | IDecorationData[]): string {\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map(DecorationRule.keyOf).join(',');\n\t\t} else {\n\t\t\tconst { color, letter } = data;\n\t\t\treturn `${color}/${letter}`;\n\t\t}\n\t}\n\n\tprivate static readonly _classNames = new IdGenerator('monaco-decorations-style-');\n\n\treadonly data: IDecorationData | IDecorationData[];\n\treadonly itemColorClassName: string;\n\treadonly itemBadgeClassName: string;\n\treadonly bubbleBadgeClassName: string;\n\n\tconstructor(data: IDecorationData | IDecorationData[]) {\n\t\tthis.data = data;\n\t\tthis.itemColorClassName = DecorationRule._classNames.nextId();\n\t\tthis.itemBadgeClassName = DecorationRule._classNames.nextId();\n\t\tthis.bubbleBadgeClassName = DecorationRule._classNames.nextId();\n\t}\n\n\tappendCSSRules(element: HTMLStyleElement, theme: ITheme): void {\n\t\tif (!Array.isArray(this.data)) {\n\t\t\tthis._appendForOne(this.data, element, theme);\n\t\t} else {\n\t\t\tthis._appendForMany(this.data, element, theme);\n\t\t}\n\t}\n\n\tprivate _appendForOne(data: IDecorationData, element: HTMLStyleElement, theme: ITheme): void {\n\t\tconst { color, letter } = data;\n\t\t// label\n\t\tcreateCSSRule(`.${this.itemColorClassName}`, `color: ${getColor(theme, color)};`, element);\n\t\t// letter\n\t\tif (letter) {\n\t\t\tcreateCSSRule(`.${this.itemBadgeClassName}::after`, `content: \"${letter}\"; color: ${getColor(theme, color)};`, element);\n\t\t}\n\t}\n\n\tprivate _appendForMany(data: IDecorationData[], element: HTMLStyleElement, theme: ITheme): void {\n\t\t// label\n\t\tconst { color } = data[0];\n\t\tcreateCSSRule(`.${this.itemColorClassName}`, `color: ${getColor(theme, color)};`, element);\n\n\t\t// badge\n\t\tconst letters = data.filter(d => !isFalsyOrWhitespace(d.letter)).map(d => d.letter);\n\t\tif (letters.length) {\n\t\t\tcreateCSSRule(`.${this.itemBadgeClassName}::after`, `content: \"${letters.join(', ')}\"; color: ${getColor(theme, color)};`, element);\n\t\t}\n\n\t\t// bubble badge\n\t\tcreateCSSRule(\n\t\t\t`.${this.bubbleBadgeClassName}::after`,\n\t\t\t`content: \"\\uf052\"; color: ${getColor(theme, color)}; font-family: octicons; font-size: 14px; padding-right: 14px; opacity: 0.4;`,\n\t\t\telement\n\t\t);\n\t}\n\n\tremoveCSSRules(element: HTMLStyleElement): void {\n\t\tremoveCSSRulesContainingSelector(this.itemColorClassName, element);\n\t\tremoveCSSRulesContainingSelector(this.itemBadgeClassName, element);\n\t\tremoveCSSRulesContainingSelector(this.bubbleBadgeClassName, element);\n\t}\n\n\tisUnused(): boolean {\n\t\treturn !document.querySelector(`.${this.itemColorClassName}`)\n\t\t\t&& !document.querySelector(`.${this.itemBadgeClassName}`)\n\t\t\t&& !document.querySelector(`.${this.bubbleBadgeClassName}`);\n\t}\n}\n\nclass DecorationStyles {\n\n\tprivate readonly _disposables: IDisposable[];\n\tprivate readonly _styleElement = createStyleSheet();\n\tprivate readonly _decorationRules = new Map<string, DecorationRule>();\n\n\tconstructor(\n\t\tprivate _themeService: IThemeService,\n\t) {\n\t\tthis._disposables = [this._themeService.onThemeChange(this._onThemeChange, this)];\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\n\t\tconst parent = this._styleElement.parentElement;\n\t\tif (parent) {\n\t\t\tparent.removeChild(this._styleElement);\n\t\t}\n\t}\n\n\tasDecoration(data: IDecorationData[], onlyChildren: boolean): IDecoration {\n\n\t\t// sort by weight\n\t\tdata.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n\n\t\tlet key = DecorationRule.keyOf(data);\n\t\tlet rule = this._decorationRules.get(key);\n\n\t\tif (!rule) {\n\t\t\t// new css rule\n\t\t\trule = new DecorationRule(data);\n\t\t\tthis._decorationRules.set(key, rule);\n\t\t\trule.appendCSSRules(this._styleElement, this._themeService.getTheme());\n\t\t}\n\n\t\tlet labelClassName = rule.itemColorClassName;\n\t\tlet badgeClassName = rule.itemBadgeClassName;\n\t\tlet tooltip = data.filter(d => !isFalsyOrWhitespace(d.tooltip)).map(d => d.tooltip).join(' â€¢ ');\n\n\t\tif (onlyChildren) {\n\t\t\t// show items from its children only\n\t\t\tbadgeClassName = rule.bubbleBadgeClassName;\n\t\t\ttooltip = localize('bubbleTitle', \"Contains emphasized items\");\n\t\t}\n\n\t\treturn {\n\t\t\tlabelClassName,\n\t\t\tbadgeClassName,\n\t\t\ttooltip,\n\t\t\tupdate: (replace) => {\n\t\t\t\tlet newData = data.slice();\n\t\t\t\tfor (let i = 0; i < newData.length; i++) {\n\t\t\t\t\tif (newData[i].source === replace.source) {\n\t\t\t\t\t\t// replace\n\t\t\t\t\t\tnewData[i] = replace;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.asDecoration(newData, onlyChildren);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _onThemeChange(): void {\n\t\tthis._decorationRules.forEach(rule => {\n\t\t\trule.removeCSSRules(this._styleElement);\n\t\t\trule.appendCSSRules(this._styleElement, this._themeService.getTheme());\n\t\t});\n\t}\n\n\tcleanUp(iter: Iterator<DecorationProviderWrapper>): void {\n\t\t// remove every rule for which no more\n\t\t// decoration (data) is kept. this isn't cheap\n\t\tlet usedDecorations = new Set<string>();\n\t\tfor (let e = iter.next(); !e.done; e = iter.next()) {\n\t\t\te.value.data.forEach((value, key) => {\n\t\t\t\tif (value && !(value instanceof DecorationDataRequest)) {\n\t\t\t\t\tusedDecorations.add(DecorationRule.keyOf(value));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._decorationRules.forEach((value, index) => {\n\t\t\tconst { data } = value;\n\t\t\tif (value.isUnused()) {\n\t\t\t\tlet remove: boolean = false;\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\tremove = data.some(data => !usedDecorations.has(DecorationRule.keyOf(data)));\n\t\t\t\t} else if (!usedDecorations.has(DecorationRule.keyOf(data))) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t\tif (remove) {\n\t\t\t\t\tvalue.removeCSSRules(this._styleElement);\n\t\t\t\t\tthis._decorationRules.delete(index);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass FileDecorationChangeEvent implements IResourceDecorationChangeEvent {\n\n\tprivate readonly _data = TernarySearchTree.forPaths<boolean>();\n\n\taffectsResource(uri: URI): boolean {\n\t\treturn this._data.get(uri.toString()) || this._data.findSuperstr(uri.toString()) !== undefined;\n\t}\n\n\tstatic debouncer(last: FileDecorationChangeEvent, current: URI | URI[]) {\n\t\tif (!last) {\n\t\t\tlast = new FileDecorationChangeEvent();\n\t\t}\n\t\tif (Array.isArray(current)) {\n\t\t\t// many\n\t\t\tfor (const uri of current) {\n\t\t\t\tlast._data.set(uri.toString(), true);\n\t\t\t}\n\t\t} else {\n\t\t\t// one\n\t\t\tlast._data.set(current.toString(), true);\n\t\t}\n\n\t\treturn last;\n\t}\n}\n\nclass DecorationDataRequest {\n\tconstructor(\n\t\treadonly source: CancellationTokenSource,\n\t\treadonly thenable: Promise<void>,\n\t) { }\n}\n\nclass DecorationProviderWrapper {\n\n\treadonly data = TernarySearchTree.forPaths<DecorationDataRequest | IDecorationData | null>();\n\tprivate readonly _dispoable: IDisposable;\n\n\tconstructor(\n\t\tprivate readonly _provider: IDecorationsProvider,\n\t\tprivate readonly _uriEmitter: Emitter<URI | URI[]>,\n\t\tprivate readonly _flushEmitter: Emitter<IResourceDecorationChangeEvent>\n\t) {\n\t\tthis._dispoable = this._provider.onDidChange(uris => {\n\t\t\tif (!uris) {\n\t\t\t\t// flush event -> drop all data, can affect everything\n\t\t\t\tthis.data.clear();\n\t\t\t\tthis._flushEmitter.fire({ affectsResource() { return true; } });\n\n\t\t\t} else {\n\t\t\t\t// selective changes -> drop for resource, fetch again, send event\n\t\t\t\t// perf: the map stores thenables, decorations, or `null`-markers.\n\t\t\t\t// we make us of that and ignore all uris in which we have never\n\t\t\t\t// been interested.\n\t\t\t\tfor (const uri of uris) {\n\t\t\t\t\tthis._fetchData(uri);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis._dispoable.dispose();\n\t\tthis.data.clear();\n\t}\n\n\tknowsAbout(uri: URI): boolean {\n\t\treturn Boolean(this.data.get(uri.toString())) || Boolean(this.data.findSuperstr(uri.toString()));\n\t}\n\n\tgetOrRetrieve(uri: URI, includeChildren: boolean, callback: (data: IDecorationData, isChild: boolean) => void): void {\n\t\tconst key = uri.toString();\n\t\tlet item = this.data.get(key);\n\n\t\tif (item === undefined) {\n\t\t\t// unknown -> trigger request\n\t\t\titem = this._fetchData(uri);\n\t\t}\n\n\t\tif (item && !(item instanceof DecorationDataRequest)) {\n\t\t\t// found something (which isn't pending anymore)\n\t\t\tcallback(item, false);\n\t\t}\n\n\t\tif (includeChildren) {\n\t\t\t// (resolved) children\n\t\t\tconst iter = this.data.findSuperstr(key);\n\t\t\tif (iter) {\n\t\t\t\tfor (let item = iter.next(); !item.done; item = iter.next()) {\n\t\t\t\t\tif (item.value && !(item.value instanceof DecorationDataRequest)) {\n\t\t\t\t\t\tcallback(item.value, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _fetchData(uri: URI): IDecorationData | null {\n\n\t\t// check for pending request and cancel it\n\t\tconst pendingRequest = this.data.get(uri.toString());\n\t\tif (pendingRequest instanceof DecorationDataRequest) {\n\t\t\tpendingRequest.source.cancel();\n\t\t\tthis.data.delete(uri.toString());\n\t\t}\n\n\t\tconst source = new CancellationTokenSource();\n\t\tconst dataOrThenable = this._provider.provideDecorations(uri, source.token);\n\t\tif (!isThenable<IDecorationData | Promise<IDecorationData | undefined> | undefined>(dataOrThenable)) {\n\t\t\t// sync -> we have a result now\n\t\t\treturn this._keepItem(uri, dataOrThenable);\n\n\t\t} else {\n\t\t\t// async -> we have a result soon\n\t\t\tconst request = new DecorationDataRequest(source, Promise.resolve(dataOrThenable).then(data => {\n\t\t\t\tif (this.data.get(uri.toString()) === request) {\n\t\t\t\t\tthis._keepItem(uri, data);\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\tif (!isPromiseCanceledError(err) && this.data.get(uri.toString()) === request) {\n\t\t\t\t\tthis.data.delete(uri.toString());\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.data.set(uri.toString(), request);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate _keepItem(uri: URI, data: IDecorationData | undefined): IDecorationData | null {\n\t\tconst deco = data ? data : null;\n\t\tconst old = this.data.set(uri.toString(), deco);\n\t\tif (deco || old) {\n\t\t\t// only fire event when something changed\n\t\t\tthis._uriEmitter.fire(uri);\n\t\t}\n\t\treturn deco;\n\t}\n}\n\nexport class FileDecorationsService implements IDecorationsService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly _data = new LinkedList<DecorationProviderWrapper>();\n\tprivate readonly _onDidChangeDecorationsDelayed = new Emitter<URI | URI[]>();\n\tprivate readonly _onDidChangeDecorations = new Emitter<IResourceDecorationChangeEvent>();\n\tprivate readonly _decorationStyles: DecorationStyles;\n\tprivate readonly _disposables: IDisposable[];\n\n\treadonly onDidChangeDecorations: Event<IResourceDecorationChangeEvent> = Event.any(\n\t\tthis._onDidChangeDecorations.event,\n\t\tEvent.debounce<URI | URI[], FileDecorationChangeEvent>(\n\t\t\tthis._onDidChangeDecorationsDelayed.event,\n\t\t\tFileDecorationChangeEvent.debouncer,\n\t\t\tundefined, undefined, 500\n\t\t)\n\t);\n\n\tconstructor(\n\t\t@IThemeService themeService: IThemeService\n\t) {\n\t\tthis._decorationStyles = new DecorationStyles(themeService);\n\n\t\t// every so many events we check if there are\n\t\t// css styles that we don't need anymore\n\t\tlet count = 0;\n\t\tlet reg = this.onDidChangeDecorations(() => {\n\t\t\tif (++count % 17 === 0) {\n\t\t\t\tthis._decorationStyles.cleanUp(this._data.iterator());\n\t\t\t}\n\t\t});\n\n\t\tthis._disposables = [\n\t\t\treg,\n\t\t\tthis._decorationStyles\n\t\t];\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._disposables);\n\t\tdispose(this._onDidChangeDecorations);\n\t\tdispose(this._onDidChangeDecorationsDelayed);\n\t}\n\n\tregisterDecorationsProvider(provider: IDecorationsProvider): IDisposable {\n\n\t\tconst wrapper = new DecorationProviderWrapper(\n\t\t\tprovider,\n\t\t\tthis._onDidChangeDecorationsDelayed,\n\t\t\tthis._onDidChangeDecorations\n\t\t);\n\t\tconst remove = this._data.push(wrapper);\n\n\t\tthis._onDidChangeDecorations.fire({\n\t\t\t// everything might have changed\n\t\t\taffectsResource() { return true; }\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\t// fire event that says 'yes' for any resource\n\t\t\t// known to this provider. then dispose and remove it.\n\t\t\tremove();\n\t\t\tthis._onDidChangeDecorations.fire({ affectsResource: uri => wrapper.knowsAbout(uri) });\n\t\t\twrapper.dispose();\n\t\t});\n\t}\n\n\tgetDecoration(uri: URI, includeChildren: boolean, overwrite?: IDecorationData): IDecoration | undefined {\n\t\tlet data: IDecorationData[] = [];\n\t\tlet containsChildren: boolean = false;\n\t\tfor (let iter = this._data.iterator(), next = iter.next(); !next.done; next = iter.next()) {\n\t\t\tnext.value.getOrRetrieve(uri, includeChildren, (deco, isChild) => {\n\t\t\t\tif (!isChild || deco.bubble) {\n\t\t\t\t\tdata.push(deco);\n\t\t\t\t\tcontainsChildren = isChild || containsChildren;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (data.length === 0) {\n\t\t\t// nothing, maybe overwrite data\n\t\t\tif (overwrite) {\n\t\t\t\treturn this._decorationStyles.asDecoration([overwrite], containsChildren);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\t// result, maybe overwrite\n\t\t\tlet result = this._decorationStyles.asDecoration(data, containsChildren);\n\t\t\tif (overwrite) {\n\t\t\t\treturn result.update(overwrite);\n\t\t\t} else {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction getColor(theme: ITheme, color: string | undefined) {\n\tif (color) {\n\t\tconst foundColor = theme.getColor(color);\n\t\tif (foundColor) {\n\t\t\treturn foundColor;\n\t\t}\n\t}\n\treturn 'inherit';\n}\n\nregisterSingleton(IDecorationsService, FileDecorationsService);"]}]}