/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadUpdateChunk(chunkId) {
/******/ 		var script = document.createElement("script");
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		if (null) script.crossOrigin = null;
/******/ 		document.head.appendChild(script);
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadManifest(requestTimeout) {
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if (typeof XMLHttpRequest === "undefined") {
/******/ 				return reject(new Error("No browser support"));
/******/ 			}
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch (err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if (request.readyState !== 4) return;
/******/ 				if (request.status === 0) {
/******/ 					// timeout
/******/ 					reject(
/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
/******/ 					);
/******/ 				} else if (request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch (e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	var hotApplyOnUpdate = true;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentHash = "7a8783a27c3bcf2a5102";
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParents = [];
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = [];
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateRequire(moduleId) {
/******/ 		var me = installedModules[moduleId];
/******/ 		if (!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if (me.hot.active) {
/******/ 				if (installedModules[request]) {
/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					}
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if (me.children.indexOf(request) === -1) {
/******/ 					me.children.push(request);
/******/ 				}
/******/ 			} else {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" +
/******/ 						request +
/******/ 						") from disposed module " +
/******/ 						moduleId
/******/ 				);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for (var name in __webpack_require__) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
/******/ 				name !== "e" &&
/******/ 				name !== "t"
/******/ 			) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if (hotStatus === "prepare") {
/******/ 					if (!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		fn.t = function(value, mode) {
/******/ 			if (mode & 1) value = fn(value);
/******/ 			return __webpack_require__.t(value, mode & ~1);
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateModule(moduleId) {
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if (dep === undefined) hot._selfAccepted = true;
/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if (dep === undefined) hot._selfDeclined = true;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if (!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = +id + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/
/******/ 	function hotCheck(apply) {
/******/ 		if (hotStatus !== "idle") {
/******/ 			throw new Error("check() is only allowed in idle status");
/******/ 		}
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if (!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = "main";
/******/ 			// eslint-disable-next-line no-lone-blocks
/******/ 			{
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if (
/******/ 				hotStatus === "prepare" &&
/******/ 				hotChunksLoading === 0 &&
/******/ 				hotWaitingFiles === 0
/******/ 			) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for (var moduleId in moreModules) {
/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if (!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if (!deferred) return;
/******/ 		if (hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve()
/******/ 				.then(function() {
/******/ 					return hotApply(hotApplyOnUpdate);
/******/ 				})
/******/ 				.then(
/******/ 					function(result) {
/******/ 						deferred.resolve(result);
/******/ 					},
/******/ 					function(err) {
/******/ 						deferred.reject(err);
/******/ 					}
/******/ 				);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for (var id in hotUpdate) {
/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApply(options) {
/******/ 		if (hotStatus !== "ready")
/******/ 			throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/
/******/ 			var queue = outdatedModules.slice().map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while (queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if (!module || module.hot._selfAccepted) continue;
/******/ 				if (module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if (module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for (var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if (!parent) continue;
/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if (!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/
/******/ 		function addAllToSet(a, b) {
/******/ 			for (var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if (a.indexOf(item) === -1) a.push(item);
/******/ 			}
/******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn(
/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
/******/ 			);
/******/ 		};
/******/
/******/ 		for (var id in hotUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				/** @type {TODO} */
/******/ 				var result;
/******/ 				if (hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				/** @type {Error|false} */
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if (result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch (result.type) {
/******/ 					case "self-declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of self decline: " +
/******/ 									result.moduleId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of declined dependency: " +
/******/ 									result.moduleId +
/******/ 									" in " +
/******/ 									result.parentId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 						if (!options.ignoreUnaccepted)
/******/ 							abortError = new Error(
/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if (options.onAccepted) options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if (options.onDisposed) options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if (abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if (doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for (moduleId in result.outdatedDependencies) {
/******/ 						if (
/******/ 							Object.prototype.hasOwnProperty.call(
/******/ 								result.outdatedDependencies,
/******/ 								moduleId
/******/ 							)
/******/ 						) {
/******/ 							if (!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(
/******/ 								outdatedDependencies[moduleId],
/******/ 								result.outdatedDependencies[moduleId]
/******/ 							);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if (doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for (i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if (
/******/ 				installedModules[moduleId] &&
/******/ 				installedModules[moduleId].hot._selfAccepted
/******/ 			)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while (queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if (!module) continue;
/******/
/******/ 			var data = {};
/******/
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/
/******/ 			// remove "parents" references from all children
/******/ 			for (j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if (!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if (idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if (idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/
/******/ 		// insert new code
/******/ 		for (moduleId in appliedUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if (cb) {
/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for (i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch (err) {
/******/ 							if (options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if (!options.ignoreErrored) {
/******/ 								if (!error) error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Load self accepted modules
/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch (err) {
/******/ 				if (typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch (err2) {
/******/ 						if (options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if (!options.ignoreErrored) {
/******/ 							if (!error) error = err2;
/******/ 						}
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if (options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if (!options.ignoreErrored) {
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if (error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(0)(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/ansi-html/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ansi-html/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.5', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1odG1sL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Fuc2ktaHRtbC9pbmRleC5qcz9hMDEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFuc2lIVE1MXG5cbi8vIFJlZmVyZW5jZSB0byBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2Fuc2ktcmVnZXhcbnZhciBfcmVnQU5TSSA9IC8oPzooPzpcXHUwMDFiXFxbKXxcXHUwMDliKSg/Oig/OlswLTldezEsM30pPyg/Oig/OjtbMC05XXswLDN9KSopP1tBLU18Zi1tXSl8XFx1MDAxYltBLU1dL1xuXG52YXIgX2RlZkNvbG9ycyA9IHtcbiAgcmVzZXQ6IFsnZmZmJywgJzAwMCddLCAvLyBbRk9SRUdST1VEX0NPTE9SLCBCQUNLR1JPVU5EX0NPTE9SXVxuICBibGFjazogJzAwMCcsXG4gIHJlZDogJ2ZmMDAwMCcsXG4gIGdyZWVuOiAnMjA5ODA1JyxcbiAgeWVsbG93OiAnZThiZjAzJyxcbiAgYmx1ZTogJzAwMDBmZicsXG4gIG1hZ2VudGE6ICdmZjAwZmYnLFxuICBjeWFuOiAnMDBmZmVlJyxcbiAgbGlnaHRncmV5OiAnZjBmMGYwJyxcbiAgZGFya2dyZXk6ICc4ODgnXG59XG52YXIgX3N0eWxlcyA9IHtcbiAgMzA6ICdibGFjaycsXG4gIDMxOiAncmVkJyxcbiAgMzI6ICdncmVlbicsXG4gIDMzOiAneWVsbG93JyxcbiAgMzQ6ICdibHVlJyxcbiAgMzU6ICdtYWdlbnRhJyxcbiAgMzY6ICdjeWFuJyxcbiAgMzc6ICdsaWdodGdyZXknXG59XG52YXIgX29wZW5UYWdzID0ge1xuICAnMSc6ICdmb250LXdlaWdodDpib2xkJywgLy8gYm9sZFxuICAnMic6ICdvcGFjaXR5OjAuNScsIC8vIGRpbVxuICAnMyc6ICc8aT4nLCAvLyBpdGFsaWNcbiAgJzQnOiAnPHU+JywgLy8gdW5kZXJzY29yZVxuICAnOCc6ICdkaXNwbGF5Om5vbmUnLCAvLyBoaWRkZW5cbiAgJzknOiAnPGRlbD4nIC8vIGRlbGV0ZVxufVxudmFyIF9jbG9zZVRhZ3MgPSB7XG4gICcyMyc6ICc8L2k+JywgLy8gcmVzZXQgaXRhbGljXG4gICcyNCc6ICc8L3U+JywgLy8gcmVzZXQgdW5kZXJzY29yZVxuICAnMjknOiAnPC9kZWw+JyAvLyByZXNldCBkZWxldGVcbn1cblxuO1swLCAyMSwgMjIsIDI3LCAyOCwgMzksIDQ5XS5mb3JFYWNoKGZ1bmN0aW9uIChuKSB7XG4gIF9jbG9zZVRhZ3Nbbl0gPSAnPC9zcGFuPidcbn0pXG5cbi8qKlxuICogQ29udmVydHMgdGV4dCB3aXRoIEFOU0kgY29sb3IgY29kZXMgdG8gSFRNTCBtYXJrdXAuXG4gKiBAcGFyYW0ge1N0cmluZ30gdGV4dFxuICogQHJldHVybnMgeyp9XG4gKi9cbmZ1bmN0aW9uIGFuc2lIVE1MICh0ZXh0KSB7XG4gIC8vIFJldHVybnMgdGhlIHRleHQgaWYgdGhlIHN0cmluZyBoYXMgbm8gQU5TSSBlc2NhcGUgY29kZS5cbiAgaWYgKCFfcmVnQU5TSS50ZXN0KHRleHQpKSB7XG4gICAgcmV0dXJuIHRleHRcbiAgfVxuXG4gIC8vIENhY2hlIG9wZW5lZCBzZXF1ZW5jZS5cbiAgdmFyIGFuc2lDb2RlcyA9IFtdXG4gIC8vIFJlcGxhY2Ugd2l0aCBtYXJrdXAuXG4gIHZhciByZXQgPSB0ZXh0LnJlcGxhY2UoL1xcMDMzXFxbKFxcZCspKm0vZywgZnVuY3Rpb24gKG1hdGNoLCBzZXEpIHtcbiAgICB2YXIgb3QgPSBfb3BlblRhZ3Nbc2VxXVxuICAgIGlmIChvdCkge1xuICAgICAgLy8gSWYgY3VycmVudCBzZXF1ZW5jZSBoYXMgYmVlbiBvcGVuZWQsIGNsb3NlIGl0LlxuICAgICAgaWYgKCEhfmFuc2lDb2Rlcy5pbmRleE9mKHNlcSkpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1leHRyYS1ib29sZWFuLWNhc3RcbiAgICAgICAgYW5zaUNvZGVzLnBvcCgpXG4gICAgICAgIHJldHVybiAnPC9zcGFuPidcbiAgICAgIH1cbiAgICAgIC8vIE9wZW4gdGFnLlxuICAgICAgYW5zaUNvZGVzLnB1c2goc2VxKVxuICAgICAgcmV0dXJuIG90WzBdID09PSAnPCcgPyBvdCA6ICc8c3BhbiBzdHlsZT1cIicgKyBvdCArICc7XCI+J1xuICAgIH1cblxuICAgIHZhciBjdCA9IF9jbG9zZVRhZ3Nbc2VxXVxuICAgIGlmIChjdCkge1xuICAgICAgLy8gUG9wIHNlcXVlbmNlXG4gICAgICBhbnNpQ29kZXMucG9wKClcbiAgICAgIHJldHVybiBjdFxuICAgIH1cbiAgICByZXR1cm4gJydcbiAgfSlcblxuICAvLyBNYWtlIHN1cmUgdGFncyBhcmUgY2xvc2VkLlxuICB2YXIgbCA9IGFuc2lDb2Rlcy5sZW5ndGhcbiAgOyhsID4gMCkgJiYgKHJldCArPSBBcnJheShsICsgMSkuam9pbignPC9zcGFuPicpKVxuXG4gIHJldHVybiByZXRcbn1cblxuLyoqXG4gKiBDdXN0b21pemUgY29sb3JzLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbG9ycyByZWZlcmVuY2UgdG8gX2RlZkNvbG9yc1xuICovXG5hbnNpSFRNTC5zZXRDb2xvcnMgPSBmdW5jdGlvbiAoY29sb3JzKSB7XG4gIGlmICh0eXBlb2YgY29sb3JzICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBFcnJvcignYGNvbG9yc2AgcGFyYW1ldGVyIG11c3QgYmUgYW4gT2JqZWN0LicpXG4gIH1cblxuICB2YXIgX2ZpbmFsQ29sb3JzID0ge31cbiAgZm9yICh2YXIga2V5IGluIF9kZWZDb2xvcnMpIHtcbiAgICB2YXIgaGV4ID0gY29sb3JzLmhhc093blByb3BlcnR5KGtleSkgPyBjb2xvcnNba2V5XSA6IG51bGxcbiAgICBpZiAoIWhleCkge1xuICAgICAgX2ZpbmFsQ29sb3JzW2tleV0gPSBfZGVmQ29sb3JzW2tleV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuICAgIGlmICgncmVzZXQnID09PSBrZXkpIHtcbiAgICAgIGlmICh0eXBlb2YgaGV4ID09PSAnc3RyaW5nJykge1xuICAgICAgICBoZXggPSBbaGV4XVxuICAgICAgfVxuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGhleCkgfHwgaGV4Lmxlbmd0aCA9PT0gMCB8fCBoZXguc29tZShmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIGggIT09ICdzdHJpbmcnXG4gICAgICB9KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSB2YWx1ZSBvZiBgJyArIGtleSArICdgIHByb3BlcnR5IG11c3QgYmUgYW4gQXJyYXkgYW5kIGVhY2ggaXRlbSBjb3VsZCBvbmx5IGJlIGEgaGV4IHN0cmluZywgZS5nLjogRkYwMDAwJylcbiAgICAgIH1cbiAgICAgIHZhciBkZWZIZXhDb2xvciA9IF9kZWZDb2xvcnNba2V5XVxuICAgICAgaWYgKCFoZXhbMF0pIHtcbiAgICAgICAgaGV4WzBdID0gZGVmSGV4Q29sb3JbMF1cbiAgICAgIH1cbiAgICAgIGlmIChoZXgubGVuZ3RoID09PSAxIHx8ICFoZXhbMV0pIHtcbiAgICAgICAgaGV4ID0gW2hleFswXV1cbiAgICAgICAgaGV4LnB1c2goZGVmSGV4Q29sb3JbMV0pXG4gICAgICB9XG5cbiAgICAgIGhleCA9IGhleC5zbGljZSgwLCAyKVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGhleCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIHZhbHVlIG9mIGAnICsga2V5ICsgJ2AgcHJvcGVydHkgbXVzdCBiZSBhIGhleCBzdHJpbmcsIGUuZy46IEZGMDAwMCcpXG4gICAgfVxuICAgIF9maW5hbENvbG9yc1trZXldID0gaGV4XG4gIH1cbiAgX3NldFRhZ3MoX2ZpbmFsQ29sb3JzKVxufVxuXG4vKipcbiAqIFJlc2V0IGNvbG9ycy5cbiAqL1xuYW5zaUhUTUwucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gIF9zZXRUYWdzKF9kZWZDb2xvcnMpXG59XG5cbi8qKlxuICogRXhwb3NlIHRhZ3MsIGluY2x1ZGluZyBvcGVuIGFuZCBjbG9zZS5cbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbmFuc2lIVE1MLnRhZ3MgPSB7fVxuXG5pZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhbnNpSFRNTC50YWdzLCAnb3BlbicsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9vcGVuVGFncyB9XG4gIH0pXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhbnNpSFRNTC50YWdzLCAnY2xvc2UnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfY2xvc2VUYWdzIH1cbiAgfSlcbn0gZWxzZSB7XG4gIGFuc2lIVE1MLnRhZ3Mub3BlbiA9IF9vcGVuVGFnc1xuICBhbnNpSFRNTC50YWdzLmNsb3NlID0gX2Nsb3NlVGFnc1xufVxuXG5mdW5jdGlvbiBfc2V0VGFncyAoY29sb3JzKSB7XG4gIC8vIHJlc2V0IGFsbFxuICBfb3BlblRhZ3NbJzAnXSA9ICdmb250LXdlaWdodDpub3JtYWw7b3BhY2l0eToxO2NvbG9yOiMnICsgY29sb3JzLnJlc2V0WzBdICsgJztiYWNrZ3JvdW5kOiMnICsgY29sb3JzLnJlc2V0WzFdXG4gIC8vIGludmVyc2VcbiAgX29wZW5UYWdzWyc3J10gPSAnY29sb3I6IycgKyBjb2xvcnMucmVzZXRbMV0gKyAnO2JhY2tncm91bmQ6IycgKyBjb2xvcnMucmVzZXRbMF1cbiAgLy8gZGFyayBncmV5XG4gIF9vcGVuVGFnc1snOTAnXSA9ICdjb2xvcjojJyArIGNvbG9ycy5kYXJrZ3JleVxuXG4gIGZvciAodmFyIGNvZGUgaW4gX3N0eWxlcykge1xuICAgIHZhciBjb2xvciA9IF9zdHlsZXNbY29kZV1cbiAgICB2YXIgb3JpQ29sb3IgPSBjb2xvcnNbY29sb3JdIHx8ICcwMDAnXG4gICAgX29wZW5UYWdzW2NvZGVdID0gJ2NvbG9yOiMnICsgb3JpQ29sb3JcbiAgICBjb2RlID0gcGFyc2VJbnQoY29kZSlcbiAgICBfb3BlblRhZ3NbKGNvZGUgKyAxMCkudG9TdHJpbmcoKV0gPSAnYmFja2dyb3VuZDojJyArIG9yaUNvbG9yXG4gIH1cbn1cblxuYW5zaUhUTUwucmVzZXQoKVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ansi-html/index.js\n");

/***/ }),

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnNpLXJlZ2V4L2luZGV4LmpzPzRhMTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiAvW1xcdTAwMWJcXHUwMDliXVtbKCkjOz9dKig/OlswLTldezEsNH0oPzo7WzAtOV17MCw0fSkqKT9bMC05QS1QUlpjZi1ucXJ5PT48XS9nO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ansi-regex/index.js\n");

/***/ }),

/***/ "./node_modules/html-entities/index.js":
/*!*********************************************!*\
  !*** ./node_modules/html-entities/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  XmlEntities: __webpack_require__(/*! ./lib/xml-entities.js */ \"./node_modules/html-entities/lib/xml-entities.js\"),\n  Html4Entities: __webpack_require__(/*! ./lib/html4-entities.js */ \"./node_modules/html-entities/lib/html4-entities.js\"),\n  Html5Entities: __webpack_require__(/*! ./lib/html5-entities.js */ \"./node_modules/html-entities/lib/html5-entities.js\"),\n  AllHtmlEntities: __webpack_require__(/*! ./lib/html5-entities.js */ \"./node_modules/html-entities/lib/html5-entities.js\")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLWVudGl0aWVzL2luZGV4LmpzP2FlZGYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIFhtbEVudGl0aWVzOiByZXF1aXJlKCcuL2xpYi94bWwtZW50aXRpZXMuanMnKSxcbiAgSHRtbDRFbnRpdGllczogcmVxdWlyZSgnLi9saWIvaHRtbDQtZW50aXRpZXMuanMnKSxcbiAgSHRtbDVFbnRpdGllczogcmVxdWlyZSgnLi9saWIvaHRtbDUtZW50aXRpZXMuanMnKSxcbiAgQWxsSHRtbEVudGl0aWVzOiByZXF1aXJlKCcuL2xpYi9odG1sNS1lbnRpdGllcy5qcycpXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-entities/index.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/html4-entities.js":
/*!**********************************************************!*\
  !*** ./node_modules/html-entities/lib/html4-entities.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIvaHRtbDQtZW50aXRpZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIvaHRtbDQtZW50aXRpZXMuanM/OWY5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSFRNTF9BTFBIQSA9IFsnYXBvcycsICduYnNwJywgJ2lleGNsJywgJ2NlbnQnLCAncG91bmQnLCAnY3VycmVuJywgJ3llbicsICdicnZiYXInLCAnc2VjdCcsICd1bWwnLCAnY29weScsICdvcmRmJywgJ2xhcXVvJywgJ25vdCcsICdzaHknLCAncmVnJywgJ21hY3InLCAnZGVnJywgJ3BsdXNtbicsICdzdXAyJywgJ3N1cDMnLCAnYWN1dGUnLCAnbWljcm8nLCAncGFyYScsICdtaWRkb3QnLCAnY2VkaWwnLCAnc3VwMScsICdvcmRtJywgJ3JhcXVvJywgJ2ZyYWMxNCcsICdmcmFjMTInLCAnZnJhYzM0JywgJ2lxdWVzdCcsICdBZ3JhdmUnLCAnQWFjdXRlJywgJ0FjaXJjJywgJ0F0aWxkZScsICdBdW1sJywgJ0FyaW5nJywgJ0FlbGlnJywgJ0NjZWRpbCcsICdFZ3JhdmUnLCAnRWFjdXRlJywgJ0VjaXJjJywgJ0V1bWwnLCAnSWdyYXZlJywgJ0lhY3V0ZScsICdJY2lyYycsICdJdW1sJywgJ0VUSCcsICdOdGlsZGUnLCAnT2dyYXZlJywgJ09hY3V0ZScsICdPY2lyYycsICdPdGlsZGUnLCAnT3VtbCcsICd0aW1lcycsICdPc2xhc2gnLCAnVWdyYXZlJywgJ1VhY3V0ZScsICdVY2lyYycsICdVdW1sJywgJ1lhY3V0ZScsICdUSE9STicsICdzemxpZycsICdhZ3JhdmUnLCAnYWFjdXRlJywgJ2FjaXJjJywgJ2F0aWxkZScsICdhdW1sJywgJ2FyaW5nJywgJ2FlbGlnJywgJ2NjZWRpbCcsICdlZ3JhdmUnLCAnZWFjdXRlJywgJ2VjaXJjJywgJ2V1bWwnLCAnaWdyYXZlJywgJ2lhY3V0ZScsICdpY2lyYycsICdpdW1sJywgJ2V0aCcsICdudGlsZGUnLCAnb2dyYXZlJywgJ29hY3V0ZScsICdvY2lyYycsICdvdGlsZGUnLCAnb3VtbCcsICdkaXZpZGUnLCAnb3NsYXNoJywgJ3VncmF2ZScsICd1YWN1dGUnLCAndWNpcmMnLCAndXVtbCcsICd5YWN1dGUnLCAndGhvcm4nLCAneXVtbCcsICdxdW90JywgJ2FtcCcsICdsdCcsICdndCcsICdPRWxpZycsICdvZWxpZycsICdTY2Fyb24nLCAnc2Nhcm9uJywgJ1l1bWwnLCAnY2lyYycsICd0aWxkZScsICdlbnNwJywgJ2Vtc3AnLCAndGhpbnNwJywgJ3p3bmonLCAnendqJywgJ2xybScsICdybG0nLCAnbmRhc2gnLCAnbWRhc2gnLCAnbHNxdW8nLCAncnNxdW8nLCAnc2JxdW8nLCAnbGRxdW8nLCAncmRxdW8nLCAnYmRxdW8nLCAnZGFnZ2VyJywgJ0RhZ2dlcicsICdwZXJtaWwnLCAnbHNhcXVvJywgJ3JzYXF1bycsICdldXJvJywgJ2Zub2YnLCAnQWxwaGEnLCAnQmV0YScsICdHYW1tYScsICdEZWx0YScsICdFcHNpbG9uJywgJ1pldGEnLCAnRXRhJywgJ1RoZXRhJywgJ0lvdGEnLCAnS2FwcGEnLCAnTGFtYmRhJywgJ011JywgJ051JywgJ1hpJywgJ09taWNyb24nLCAnUGknLCAnUmhvJywgJ1NpZ21hJywgJ1RhdScsICdVcHNpbG9uJywgJ1BoaScsICdDaGknLCAnUHNpJywgJ09tZWdhJywgJ2FscGhhJywgJ2JldGEnLCAnZ2FtbWEnLCAnZGVsdGEnLCAnZXBzaWxvbicsICd6ZXRhJywgJ2V0YScsICd0aGV0YScsICdpb3RhJywgJ2thcHBhJywgJ2xhbWJkYScsICdtdScsICdudScsICd4aScsICdvbWljcm9uJywgJ3BpJywgJ3JobycsICdzaWdtYWYnLCAnc2lnbWEnLCAndGF1JywgJ3Vwc2lsb24nLCAncGhpJywgJ2NoaScsICdwc2knLCAnb21lZ2EnLCAndGhldGFzeW0nLCAndXBzaWgnLCAncGl2JywgJ2J1bGwnLCAnaGVsbGlwJywgJ3ByaW1lJywgJ1ByaW1lJywgJ29saW5lJywgJ2ZyYXNsJywgJ3dlaWVycCcsICdpbWFnZScsICdyZWFsJywgJ3RyYWRlJywgJ2FsZWZzeW0nLCAnbGFycicsICd1YXJyJywgJ3JhcnInLCAnZGFycicsICdoYXJyJywgJ2NyYXJyJywgJ2xBcnInLCAndUFycicsICdyQXJyJywgJ2RBcnInLCAnaEFycicsICdmb3JhbGwnLCAncGFydCcsICdleGlzdCcsICdlbXB0eScsICduYWJsYScsICdpc2luJywgJ25vdGluJywgJ25pJywgJ3Byb2QnLCAnc3VtJywgJ21pbnVzJywgJ2xvd2FzdCcsICdyYWRpYycsICdwcm9wJywgJ2luZmluJywgJ2FuZycsICdhbmQnLCAnb3InLCAnY2FwJywgJ2N1cCcsICdpbnQnLCAndGhlcmU0JywgJ3NpbScsICdjb25nJywgJ2FzeW1wJywgJ25lJywgJ2VxdWl2JywgJ2xlJywgJ2dlJywgJ3N1YicsICdzdXAnLCAnbnN1YicsICdzdWJlJywgJ3N1cGUnLCAnb3BsdXMnLCAnb3RpbWVzJywgJ3BlcnAnLCAnc2RvdCcsICdsY2VpbCcsICdyY2VpbCcsICdsZmxvb3InLCAncmZsb29yJywgJ2xhbmcnLCAncmFuZycsICdsb3onLCAnc3BhZGVzJywgJ2NsdWJzJywgJ2hlYXJ0cycsICdkaWFtcyddO1xudmFyIEhUTUxfQ09ERVMgPSBbMzksIDE2MCwgMTYxLCAxNjIsIDE2MywgMTY0LCAxNjUsIDE2NiwgMTY3LCAxNjgsIDE2OSwgMTcwLCAxNzEsIDE3MiwgMTczLCAxNzQsIDE3NSwgMTc2LCAxNzcsIDE3OCwgMTc5LCAxODAsIDE4MSwgMTgyLCAxODMsIDE4NCwgMTg1LCAxODYsIDE4NywgMTg4LCAxODksIDE5MCwgMTkxLCAxOTIsIDE5MywgMTk0LCAxOTUsIDE5NiwgMTk3LCAxOTgsIDE5OSwgMjAwLCAyMDEsIDIwMiwgMjAzLCAyMDQsIDIwNSwgMjA2LCAyMDcsIDIwOCwgMjA5LCAyMTAsIDIxMSwgMjEyLCAyMTMsIDIxNCwgMjE1LCAyMTYsIDIxNywgMjE4LCAyMTksIDIyMCwgMjIxLCAyMjIsIDIyMywgMjI0LCAyMjUsIDIyNiwgMjI3LCAyMjgsIDIyOSwgMjMwLCAyMzEsIDIzMiwgMjMzLCAyMzQsIDIzNSwgMjM2LCAyMzcsIDIzOCwgMjM5LCAyNDAsIDI0MSwgMjQyLCAyNDMsIDI0NCwgMjQ1LCAyNDYsIDI0NywgMjQ4LCAyNDksIDI1MCwgMjUxLCAyNTIsIDI1MywgMjU0LCAyNTUsIDM0LCAzOCwgNjAsIDYyLCAzMzgsIDMzOSwgMzUyLCAzNTMsIDM3NiwgNzEwLCA3MzIsIDgxOTQsIDgxOTUsIDgyMDEsIDgyMDQsIDgyMDUsIDgyMDYsIDgyMDcsIDgyMTEsIDgyMTIsIDgyMTYsIDgyMTcsIDgyMTgsIDgyMjAsIDgyMjEsIDgyMjIsIDgyMjQsIDgyMjUsIDgyNDAsIDgyNDksIDgyNTAsIDgzNjQsIDQwMiwgOTEzLCA5MTQsIDkxNSwgOTE2LCA5MTcsIDkxOCwgOTE5LCA5MjAsIDkyMSwgOTIyLCA5MjMsIDkyNCwgOTI1LCA5MjYsIDkyNywgOTI4LCA5MjksIDkzMSwgOTMyLCA5MzMsIDkzNCwgOTM1LCA5MzYsIDkzNywgOTQ1LCA5NDYsIDk0NywgOTQ4LCA5NDksIDk1MCwgOTUxLCA5NTIsIDk1MywgOTU0LCA5NTUsIDk1NiwgOTU3LCA5NTgsIDk1OSwgOTYwLCA5NjEsIDk2MiwgOTYzLCA5NjQsIDk2NSwgOTY2LCA5NjcsIDk2OCwgOTY5LCA5NzcsIDk3OCwgOTgyLCA4MjI2LCA4MjMwLCA4MjQyLCA4MjQzLCA4MjU0LCA4MjYwLCA4NDcyLCA4NDY1LCA4NDc2LCA4NDgyLCA4NTAxLCA4NTkyLCA4NTkzLCA4NTk0LCA4NTk1LCA4NTk2LCA4NjI5LCA4NjU2LCA4NjU3LCA4NjU4LCA4NjU5LCA4NjYwLCA4NzA0LCA4NzA2LCA4NzA3LCA4NzA5LCA4NzExLCA4NzEyLCA4NzEzLCA4NzE1LCA4NzE5LCA4NzIxLCA4NzIyLCA4NzI3LCA4NzMwLCA4NzMzLCA4NzM0LCA4NzM2LCA4NzQzLCA4NzQ0LCA4NzQ1LCA4NzQ2LCA4NzQ3LCA4NzU2LCA4NzY0LCA4NzczLCA4Nzc2LCA4ODAwLCA4ODAxLCA4ODA0LCA4ODA1LCA4ODM0LCA4ODM1LCA4ODM2LCA4ODM4LCA4ODM5LCA4ODUzLCA4ODU1LCA4ODY5LCA4OTAxLCA4OTY4LCA4OTY5LCA4OTcwLCA4OTcxLCA5MDAxLCA5MDAyLCA5Njc0LCA5ODI0LCA5ODI3LCA5ODI5LCA5ODMwXTtcblxudmFyIGFscGhhSW5kZXggPSB7fTtcbnZhciBudW1JbmRleCA9IHt9O1xuXG52YXIgaSA9IDA7XG52YXIgbGVuZ3RoID0gSFRNTF9BTFBIQS5sZW5ndGg7XG53aGlsZSAoaSA8IGxlbmd0aCkge1xuICAgIHZhciBhID0gSFRNTF9BTFBIQVtpXTtcbiAgICB2YXIgYyA9IEhUTUxfQ09ERVNbaV07XG4gICAgYWxwaGFJbmRleFthXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoYyk7XG4gICAgbnVtSW5kZXhbY10gPSBhO1xuICAgIGkrKztcbn1cblxuLyoqXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gSHRtbDRFbnRpdGllcygpIHt9XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5wcm90b3R5cGUuZGVjb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyYoIz9bXFx3XFxkXSspOz8vZywgZnVuY3Rpb24ocywgZW50aXR5KSB7XG4gICAgICAgIHZhciBjaHI7XG4gICAgICAgIGlmIChlbnRpdHkuY2hhckF0KDApID09PSBcIiNcIikge1xuICAgICAgICAgICAgdmFyIGNvZGUgPSBlbnRpdHkuY2hhckF0KDEpLnRvTG93ZXJDYXNlKCkgPT09ICd4JyA/XG4gICAgICAgICAgICAgICAgcGFyc2VJbnQoZW50aXR5LnN1YnN0cigyKSwgMTYpIDpcbiAgICAgICAgICAgICAgICBwYXJzZUludChlbnRpdHkuc3Vic3RyKDEpKTtcblxuICAgICAgICAgICAgaWYgKCEoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpKSB7XG4gICAgICAgICAgICAgICAgY2hyID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNociA9IGFscGhhSW5kZXhbZW50aXR5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2hyIHx8IHM7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbkh0bWw0RW50aXRpZXMuZGVjb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBIdG1sNEVudGl0aWVzKCkuZGVjb2RlKHN0cik7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbkh0bWw0RW50aXRpZXMucHJvdG90eXBlLmVuY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgdmFyIHN0ckxlbmd0aCA9IHN0ci5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IHN0ckxlbmd0aCkge1xuICAgICAgICB2YXIgYWxwaGEgPSBudW1JbmRleFtzdHIuY2hhckNvZGVBdChpKV07XG4gICAgICAgIHJlc3VsdCArPSBhbHBoYSA/IFwiJlwiICsgYWxwaGEgKyBcIjtcIiA6IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5lbmNvZGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gbmV3IEh0bWw0RW50aXRpZXMoKS5lbmNvZGUoc3RyKTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlTm9uVVRGID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICB2YXIgc3RyTGVuZ3RoID0gc3RyLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgc3RyTGVuZ3RoKSB7XG4gICAgICAgIHZhciBjYyA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgICAgICB2YXIgYWxwaGEgPSBudW1JbmRleFtjY107XG4gICAgICAgIGlmIChhbHBoYSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9IFwiJlwiICsgYWxwaGEgKyBcIjtcIjtcbiAgICAgICAgfSBlbHNlIGlmIChjYyA8IDMyIHx8IGNjID4gMTI2KSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gXCImI1wiICsgY2MgKyBcIjtcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBzdHIuY2hhckF0KGkpO1xuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gbmV3IEh0bWw0RW50aXRpZXMoKS5lbmNvZGVOb25VVEYoc3RyKTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlTm9uQVNDSUkgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHZhciBzdHJMZW5ndGggPSBzdHIubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBzdHJMZW5ndGgpIHtcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGMgPD0gMjU1KSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gc3RyW2krK107XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuSHRtbDRFbnRpdGllcy5lbmNvZGVOb25BU0NJSSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgSHRtbDRFbnRpdGllcygpLmVuY29kZU5vbkFTQ0lJKHN0cik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEh0bWw0RW50aXRpZXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/html4-entities.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/html5-entities.js":
/*!**********************************************************!*\
  !*** ./node_modules/html-entities/lib/html5-entities.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/html5-entities.js\n");

/***/ }),

/***/ "./node_modules/html-entities/lib/xml-entities.js":
/*!********************************************************!*\
  !*** ./node_modules/html-entities/lib/xml-entities.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1lbnRpdGllcy9saWIveG1sLWVudGl0aWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtZW50aXRpZXMvbGliL3htbC1lbnRpdGllcy5qcz8wMjEyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBBTFBIQV9JTkRFWCA9IHtcbiAgICAnJmx0JzogJzwnLFxuICAgICcmZ3QnOiAnPicsXG4gICAgJyZxdW90JzogJ1wiJyxcbiAgICAnJmFwb3MnOiAnXFwnJyxcbiAgICAnJmFtcCc6ICcmJyxcbiAgICAnJmx0Oyc6ICc8JyxcbiAgICAnJmd0Oyc6ICc+JyxcbiAgICAnJnF1b3Q7JzogJ1wiJyxcbiAgICAnJmFwb3M7JzogJ1xcJycsXG4gICAgJyZhbXA7JzogJyYnXG59O1xuXG52YXIgQ0hBUl9JTkRFWCA9IHtcbiAgICA2MDogJ2x0JyxcbiAgICA2MjogJ2d0JyxcbiAgICAzNDogJ3F1b3QnLFxuICAgIDM5OiAnYXBvcycsXG4gICAgMzg6ICdhbXAnXG59O1xuXG52YXIgQ0hBUl9TX0lOREVYID0ge1xuICAgICc8JzogJyZsdDsnLFxuICAgICc+JzogJyZndDsnLFxuICAgICdcIic6ICcmcXVvdDsnLFxuICAgICdcXCcnOiAnJmFwb3M7JyxcbiAgICAnJic6ICcmYW1wOydcbn07XG5cbi8qKlxuICogQGNvbnN0cnVjdG9yXG4gKi9cbmZ1bmN0aW9uIFhtbEVudGl0aWVzKCkge31cblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG5YbWxFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgaWYgKCFzdHIgfHwgIXN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoLzx8PnxcInwnfCYvZywgZnVuY3Rpb24ocykge1xuICAgICAgICByZXR1cm4gQ0hBUl9TX0lOREVYW3NdO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG4gWG1sRW50aXRpZXMuZW5jb2RlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZShzdHIpO1xuIH07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuWG1sRW50aXRpZXMucHJvdG90eXBlLmRlY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIGlmICghc3RyIHx8ICFzdHIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8mIz9bMC05YS16QS1aXSs7Py9nLCBmdW5jdGlvbihzKSB7XG4gICAgICAgIGlmIChzLmNoYXJBdCgxKSA9PT0gJyMnKSB7XG4gICAgICAgICAgICB2YXIgY29kZSA9IHMuY2hhckF0KDIpLnRvTG93ZXJDYXNlKCkgPT09ICd4JyA/XG4gICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMyksIDE2KSA6XG4gICAgICAgICAgICAgICAgcGFyc2VJbnQocy5zdWJzdHIoMikpO1xuXG4gICAgICAgICAgICBpZiAoaXNOYU4oY29kZSkgfHwgY29kZSA8IC0zMjc2OCB8fCBjb2RlID4gNjU1MzUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQUxQSEFfSU5ERVhbc10gfHwgcztcbiAgICB9KTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuIFhtbEVudGl0aWVzLmRlY29kZSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHJldHVybiBuZXcgWG1sRW50aXRpZXMoKS5kZWNvZGUoc3RyKTtcbiB9O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cblhtbEVudGl0aWVzLnByb3RvdHlwZS5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHZhciBzdHJMZW5ndGggPSBzdHIubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBzdHJMZW5ndGgpIHtcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgdmFyIGFscGhhID0gQ0hBUl9JTkRFWFtjXTtcbiAgICAgICAgaWYgKGFscGhhKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gXCImXCIgKyBhbHBoYSArIFwiO1wiO1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGMgPCAzMiB8fCBjID4gMTI2KSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gc3RyLmNoYXJBdChpKTtcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbiBYbWxFbnRpdGllcy5lbmNvZGVOb25VVEYgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gbmV3IFhtbEVudGl0aWVzKCkuZW5jb2RlTm9uVVRGKHN0cik7XG4gfTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG5YbWxFbnRpdGllcy5wcm90b3R5cGUuZW5jb2RlTm9uQVNDSUkgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIXN0ciB8fCAhc3RyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHZhciBzdHJMZW5naHQgPSBzdHIubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBzdHJMZW5naHQpIHtcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGMgPD0gMjU1KSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gc3RyW2krK107XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQgKz0gJyYjJyArIGMgKyAnOyc7XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuIFhtbEVudGl0aWVzLmVuY29kZU5vbkFTQ0lJID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIG5ldyBYbWxFbnRpdGllcygpLmVuY29kZU5vbkFTQ0lJKHN0cik7XG4gfTtcblxubW9kdWxlLmV4cG9ydHMgPSBYbWxFbnRpdGllcztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/html-entities/lib/xml-entities.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzPzFiNmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzPzBiYTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHN0cmluZ2lmeVByaW1pdGl2ZSA9IGZ1bmN0aW9uKHYpIHtcbiAgc3dpdGNoICh0eXBlb2Ygdikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gdjtcblxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIHYgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiBpc0Zpbml0ZSh2KSA/IHYgOiAnJztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJyc7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqLCBzZXAsIGVxLCBuYW1lKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICBpZiAob2JqID09PSBudWxsKSB7XG4gICAgb2JqID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIG1hcChvYmplY3RLZXlzKG9iaiksIGZ1bmN0aW9uKGspIHtcbiAgICAgIHZhciBrcyA9IGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoaykpICsgZXE7XG4gICAgICBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICAgIHJldHVybiBtYXAob2JqW2tdLCBmdW5jdGlvbih2KSB7XG4gICAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSk7XG4gICAgICAgIH0pLmpvaW4oc2VwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBrcyArIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUob2JqW2tdKSk7XG4gICAgICB9XG4gICAgfSkuam9pbihzZXApO1xuXG4gIH1cblxuICBpZiAoIW5hbWUpIHJldHVybiAnJztcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobmFtZSkpICsgZXEgK1xuICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5mdW5jdGlvbiBtYXAgKHhzLCBmKSB7XG4gIGlmICh4cy5tYXApIHJldHVybiB4cy5tYXAoZik7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7IGkrKykge1xuICAgIHJlcy5wdXNoKGYoeHNbaV0sIGkpKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHJlcy5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\n");

/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \"./node_modules/querystring-es3/decode.js\");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \"./node_modules/querystring-es3/encode.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcz9jMDM0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9kZWNvZGUnKTtcbmV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5zdHJpbmdpZnkgPSByZXF1aXJlKCcuL2VuY29kZScpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\n");

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\")();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJpcC1hbnNpL2luZGV4LmpzPzEzZWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFuc2lSZWdleCA9IHJlcXVpcmUoJ2Fuc2ktcmVnZXgnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcblx0cmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gc3RyLnJlcGxhY2UoYW5zaVJlZ2V4LCAnJykgOiBzdHI7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/strip-ansi/index.js\n");

/***/ }),

/***/ "./node_modules/webpack-hot-middleware/client-overlay.js":
/*!**************************************************!*\
  !*** (webpack)-hot-middleware/client-overlay.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*eslint-env browser*/\n\nvar clientOverlay = document.createElement('div');\nclientOverlay.id = 'webpack-hot-middleware-clientOverlay';\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#E8E8E8',\n  lineHeight: '1.2',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto',\n  dir: 'ltr',\n  textAlign: 'left'\n};\n\nvar ansiHTML = __webpack_require__(/*! ansi-html */ \"./node_modules/ansi-html/index.js\");\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'E36049',\n  green: 'B3CB74',\n  yellow: 'FFD080',\n  blue: '7CAFC2',\n  magenta: '7FACCA',\n  cyan: 'C3C2EF',\n  lightgrey: 'EBE7E3',\n  darkgrey: '6D7891'\n};\n\nvar Entities = __webpack_require__(/*! html-entities */ \"./node_modules/html-entities/index.js\").AllHtmlEntities;\nvar entities = new Entities();\n\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function(msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n}\n\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n}\n\nfunction problemType (type) {\n  var problemColors = {\n    errors: colors.red,\n    warnings: colors.yellow\n  };\n  var color = problemColors[type] || colors.red;\n  return (\n    '<span style=\"background-color:#' + color + '; color:#fff; padding:2px 4px; border-radius: 2px\">' +\n      type.slice(0, -1).toUpperCase() +\n    '</span>'\n  );\n}\n\nmodule.exports = function(options) {\n  for (var color in options.overlayColors) {\n    if (color in colors) {\n      colors[color] = options.overlayColors[color];\n    }\n    ansiHTML.setColors(colors);\n  }\n\n  for (var style in options.overlayStyles) {\n    styles[style] = options.overlayStyles[style];\n  }\n\n  for (var key in styles) {\n    clientOverlay.style[key] = styles[key];\n  }\n\n  return {\n    showProblems: showProblems,\n    clear: clear\n  }\n};\n\nmodule.exports.clear = clear;\nmodule.exports.showProblems = showProblems;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1ob3QtbWlkZGxld2FyZS9jbGllbnQtb3ZlcmxheS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjayktaG90LW1pZGRsZXdhcmUvY2xpZW50LW92ZXJsYXkuanM/Njk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKmVzbGludC1lbnYgYnJvd3NlciovXG5cbnZhciBjbGllbnRPdmVybGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5jbGllbnRPdmVybGF5LmlkID0gJ3dlYnBhY2staG90LW1pZGRsZXdhcmUtY2xpZW50T3ZlcmxheSc7XG52YXIgc3R5bGVzID0ge1xuICBiYWNrZ3JvdW5kOiAncmdiYSgwLDAsMCwwLjg1KScsXG4gIGNvbG9yOiAnI0U4RThFOCcsXG4gIGxpbmVIZWlnaHQ6ICcxLjInLFxuICB3aGl0ZVNwYWNlOiAncHJlJyxcbiAgZm9udEZhbWlseTogJ01lbmxvLCBDb25zb2xhcywgbW9ub3NwYWNlJyxcbiAgZm9udFNpemU6ICcxM3B4JyxcbiAgcG9zaXRpb246ICdmaXhlZCcsXG4gIHpJbmRleDogOTk5OSxcbiAgcGFkZGluZzogJzEwcHgnLFxuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgdG9wOiAwLFxuICBib3R0b206IDAsXG4gIG92ZXJmbG93OiAnYXV0bycsXG4gIGRpcjogJ2x0cicsXG4gIHRleHRBbGlnbjogJ2xlZnQnXG59O1xuXG52YXIgYW5zaUhUTUwgPSByZXF1aXJlKCdhbnNpLWh0bWwnKTtcbnZhciBjb2xvcnMgPSB7XG4gIHJlc2V0OiBbJ3RyYW5zcGFyZW50JywgJ3RyYW5zcGFyZW50J10sXG4gIGJsYWNrOiAnMTgxODE4JyxcbiAgcmVkOiAnRTM2MDQ5JyxcbiAgZ3JlZW46ICdCM0NCNzQnLFxuICB5ZWxsb3c6ICdGRkQwODAnLFxuICBibHVlOiAnN0NBRkMyJyxcbiAgbWFnZW50YTogJzdGQUNDQScsXG4gIGN5YW46ICdDM0MyRUYnLFxuICBsaWdodGdyZXk6ICdFQkU3RTMnLFxuICBkYXJrZ3JleTogJzZENzg5MSdcbn07XG5cbnZhciBFbnRpdGllcyA9IHJlcXVpcmUoJ2h0bWwtZW50aXRpZXMnKS5BbGxIdG1sRW50aXRpZXM7XG52YXIgZW50aXRpZXMgPSBuZXcgRW50aXRpZXMoKTtcblxuZnVuY3Rpb24gc2hvd1Byb2JsZW1zKHR5cGUsIGxpbmVzKSB7XG4gIGNsaWVudE92ZXJsYXkuaW5uZXJIVE1MID0gJyc7XG4gIGxpbmVzLmZvckVhY2goZnVuY3Rpb24obXNnKSB7XG4gICAgbXNnID0gYW5zaUhUTUwoZW50aXRpZXMuZW5jb2RlKG1zZykpO1xuICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkaXYuc3R5bGUubWFyZ2luQm90dG9tID0gJzI2cHgnO1xuICAgIGRpdi5pbm5lckhUTUwgPSBwcm9ibGVtVHlwZSh0eXBlKSArICcgaW4gJyArIG1zZztcbiAgICBjbGllbnRPdmVybGF5LmFwcGVuZENoaWxkKGRpdik7XG4gIH0pO1xuICBpZiAoZG9jdW1lbnQuYm9keSkge1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY2xpZW50T3ZlcmxheSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xlYXIoKSB7XG4gIGlmIChkb2N1bWVudC5ib2R5ICYmIGNsaWVudE92ZXJsYXkucGFyZW50Tm9kZSkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoY2xpZW50T3ZlcmxheSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvYmxlbVR5cGUgKHR5cGUpIHtcbiAgdmFyIHByb2JsZW1Db2xvcnMgPSB7XG4gICAgZXJyb3JzOiBjb2xvcnMucmVkLFxuICAgIHdhcm5pbmdzOiBjb2xvcnMueWVsbG93XG4gIH07XG4gIHZhciBjb2xvciA9IHByb2JsZW1Db2xvcnNbdHlwZV0gfHwgY29sb3JzLnJlZDtcbiAgcmV0dXJuIChcbiAgICAnPHNwYW4gc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiMnICsgY29sb3IgKyAnOyBjb2xvcjojZmZmOyBwYWRkaW5nOjJweCA0cHg7IGJvcmRlci1yYWRpdXM6IDJweFwiPicgK1xuICAgICAgdHlwZS5zbGljZSgwLCAtMSkudG9VcHBlckNhc2UoKSArXG4gICAgJzwvc3Bhbj4nXG4gICk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBmb3IgKHZhciBjb2xvciBpbiBvcHRpb25zLm92ZXJsYXlDb2xvcnMpIHtcbiAgICBpZiAoY29sb3IgaW4gY29sb3JzKSB7XG4gICAgICBjb2xvcnNbY29sb3JdID0gb3B0aW9ucy5vdmVybGF5Q29sb3JzW2NvbG9yXTtcbiAgICB9XG4gICAgYW5zaUhUTUwuc2V0Q29sb3JzKGNvbG9ycyk7XG4gIH1cblxuICBmb3IgKHZhciBzdHlsZSBpbiBvcHRpb25zLm92ZXJsYXlTdHlsZXMpIHtcbiAgICBzdHlsZXNbc3R5bGVdID0gb3B0aW9ucy5vdmVybGF5U3R5bGVzW3N0eWxlXTtcbiAgfVxuXG4gIGZvciAodmFyIGtleSBpbiBzdHlsZXMpIHtcbiAgICBjbGllbnRPdmVybGF5LnN0eWxlW2tleV0gPSBzdHlsZXNba2V5XTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2hvd1Byb2JsZW1zOiBzaG93UHJvYmxlbXMsXG4gICAgY2xlYXI6IGNsZWFyXG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmNsZWFyID0gY2xlYXI7XG5tb2R1bGUuZXhwb3J0cy5zaG93UHJvYmxlbXMgPSBzaG93UHJvYmxlbXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack-hot-middleware/client-overlay.js\n");

/***/ }),

/***/ "./node_modules/webpack-hot-middleware/client.js?reload=true&quiet=true":
/*!*****************************************************************!*\
  !*** (webpack)-hot-middleware/client.js?reload=true&quiet=true ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__resourceQuery, module) {/*eslint-env browser*/\n/*global __resourceQuery __webpack_public_path__*/\n\nvar options = {\n  path: \"/__webpack_hmr\",\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true,\n  name: '',\n  autoConnect: true,\n  overlayStyles: {},\n  overlayWarnings: false,\n  ansiColors: {}\n};\nif (true) {\n  var querystring = __webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\");\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  setOverrides(overrides);\n}\n\nif (typeof window === 'undefined') {\n  // do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\n    \"webpack-hot-middleware's client requires EventSource to work. \" +\n    \"You should include a polyfill if you want to support this browser: \" +\n    \"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools\"\n  );\n} else {\n  if (options.autoConnect) {\n    connect();\n  }\n}\n\n/* istanbul ignore next */\nfunction setOptionsAndConnect(overrides) {\n  setOverrides(overrides);\n  connect();\n}\n\nfunction setOverrides(overrides) {\n  if (overrides.autoConnect) options.autoConnect = overrides.autoConnect == 'true';\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n  if (overrides.name) {\n    options.name = overrides.name;\n  }\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n\n  if (overrides.dynamicPublicPath) {\n    options.path = __webpack_require__.p + options.path;\n  }\n\n  if (overrides.ansiColors) options.ansiColors = JSON.parse(overrides.ansiColors);\n  if (overrides.overlayStyles) options.overlayStyles = JSON.parse(overrides.overlayStyles);\n\n  if (overrides.overlayWarnings) {\n    options.overlayWarnings = overrides.overlayWarnings == 'true';\n  }\n}\n\nfunction EventSourceWrapper() {\n  var source;\n  var lastActivity = new Date();\n  var listeners = [];\n\n  init();\n  var timer = setInterval(function() {\n    if ((new Date() - lastActivity) > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function init() {\n    source = new window.EventSource(options.path);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  function handleOnline() {\n    if (options.log) console.log(\"[HMR] connected\");\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](event);\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(init, options.timeout);\n  }\n\n  return {\n    addMessageListener: function(fn) {\n      listeners.push(fn);\n    }\n  };\n}\n\nfunction getEventSourceWrapper() {\n  if (!window.__whmEventSourceWrapper) {\n    window.__whmEventSourceWrapper = {};\n  }\n  if (!window.__whmEventSourceWrapper[options.path]) {\n    // cache the wrapper for other entries loaded on\n    // the same page with the same options.path\n    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();\n  }\n  return window.__whmEventSourceWrapper[options.path];\n}\n\nfunction connect() {\n  getEventSourceWrapper().addMessageListener(handleMessage);\n\n  function handleMessage(event) {\n    if (event.data == \"\\uD83D\\uDC93\") {\n      return;\n    }\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn(\"Invalid HMR message: \" + event.data + \"\\n\" + ex);\n      }\n    }\n  }\n}\n\n// the reporter needs to be a singleton on the page\n// in case the client is being used by multiple bundles\n// we only want to report once.\n// all the errors will go to all clients\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nvar reporter;\nif (typeof window !== 'undefined') {\n  if (!window[singletonKey]) {\n    window[singletonKey] = createReporter();\n  }\n  reporter = window[singletonKey];\n}\n\nfunction createReporter() {\n  var strip = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\n\n  var overlay;\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = __webpack_require__(/*! ./client-overlay */ \"./node_modules/webpack-hot-middleware/client-overlay.js\")({\n      ansiColors: options.ansiColors,\n      overlayStyles: options.overlayStyles\n    });\n  }\n\n  var styles = {\n    errors: \"color: #ff0000;\",\n    warnings: \"color: #999933;\"\n  };\n  var previousProblems = null;\n  function log(type, obj) {\n    var newProblems = obj[type].map(function(msg) { return strip(msg); }).join('\\n');\n    if (previousProblems == newProblems) {\n      return;\n    } else {\n      previousProblems = newProblems;\n    }\n\n    var style = styles[type];\n    var name = obj.name ? \"'\" + obj.name + \"' \" : \"\";\n    var title = \"[HMR] bundle \" + name + \"has \" + obj[type].length + \" \" + type;\n    // NOTE: console.warn or console.error will print the stack trace\n    // which isn't helpful here, so using console.log to escape it.\n    if (console.group && console.groupEnd) {\n      console.group(\"%c\" + title, style);\n      console.log(\"%c\" + newProblems, style);\n      console.groupEnd();\n    } else {\n      console.log(\n        \"%c\" + title + \"\\n\\t%c\" + newProblems.replace(/\\n/g, \"\\n\\t\"),\n        style + \"font-weight: bold;\",\n        style + \"font-weight: normal;\"\n      );\n    }\n  }\n\n  return {\n    cleanProblemsCache: function () {\n      previousProblems = null;\n    },\n    problems: function(type, obj) {\n      if (options.warn) {\n        log(type, obj);\n      }\n      if (overlay) {\n        if (options.overlayWarnings || type === 'errors') {\n          overlay.showProblems(type, obj[type]);\n          return false;\n        }\n        overlay.clear();\n      }\n      return true;\n    },\n    success: function() {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function(customOverlay) {\n      overlay = customOverlay;\n    }\n  };\n}\n\nvar processUpdate = __webpack_require__(/*! ./process-update */ \"./node_modules/webpack-hot-middleware/process-update.js\");\n\nvar customHandler;\nvar subscribeAllHandler;\nfunction processMessage(obj) {\n  switch(obj.action) {\n    case \"building\":\n      if (options.log) {\n        console.log(\n          \"[HMR] bundle \" + (obj.name ? \"'\" + obj.name + \"' \" : \"\") +\n          \"rebuilding\"\n        );\n      }\n      break;\n    case \"built\":\n      if (options.log) {\n        console.log(\n          \"[HMR] bundle \" + (obj.name ? \"'\" + obj.name + \"' \" : \"\") +\n          \"rebuilt in \" + obj.time + \"ms\"\n        );\n      }\n      // fall through\n    case \"sync\":\n      if (obj.name && options.name && obj.name !== options.name) {\n        return;\n      }\n      var applyUpdate = true;\n      if (obj.errors.length > 0) {\n        if (reporter) reporter.problems('errors', obj);\n        applyUpdate = false;\n      } else if (obj.warnings.length > 0) {\n        if (reporter) {\n          var overlayShown = reporter.problems('warnings', obj);\n          applyUpdate = overlayShown;\n        }\n      } else {\n        if (reporter) {\n          reporter.cleanProblemsCache();\n          reporter.success();\n        }\n      }\n      if (applyUpdate) {\n        processUpdate(obj.hash, obj.modules, options);\n      }\n      break;\n    default:\n      if (customHandler) {\n        customHandler(obj);\n      }\n  }\n\n  if (subscribeAllHandler) {\n    subscribeAllHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribeAll: function subscribeAll(handler) {\n      subscribeAllHandler = handler;\n    },\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    },\n    setOptionsAndConnect: setOptionsAndConnect\n  };\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, \"?reload=true&quiet=true\", __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/webpack-hot-middleware/client.js?reload=true&quiet=true\n");

/***/ }),

/***/ "./node_modules/webpack-hot-middleware/process-update.js":
/*!**************************************************!*\
  !*** (webpack)-hot-middleware/process-update.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Based heavily on https://github.com/webpack/webpack/blob/\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\n * Original copyright Tobias Koppers @sokra (MIT license)\n */\n\n/* global window __webpack_hash__ */\n\nif (false) {}\n\nvar hmrDocsUrl = \"https://webpack.js.org/concepts/hot-module-replacement/\"; // eslint-disable-line max-len\n\nvar lastHash;\nvar failureStatuses = { abort: 1, fail: 1 };\nvar applyOptions = { \t\t\t\t\n  ignoreUnaccepted: true,\n  ignoreDeclined: true,\n  ignoreErrored: true,\n  onUnaccepted: function(data) {\n    console.warn(\"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\n  },\n  onDeclined: function(data) {\n    console.warn(\"Ignored an update to declined module \" + data.chain.join(\" -> \"));\n  },\n  onErrored: function(data) {\n    console.error(data.error);\n    console.warn(\"Ignored an error while updating module \" + data.moduleId + \" (\" + data.type + \")\");\n  } \n}\n\nfunction upToDate(hash) {\n  if (hash) lastHash = hash;\n  return lastHash == __webpack_require__.h();\n}\n\nmodule.exports = function(hash, moduleMap, options) {\n  var reload = options.reload;\n  if (!upToDate(hash) && module.hot.status() == \"idle\") {\n    if (options.log) console.log(\"[HMR] Checking for updates on the server...\");\n    check();\n  }\n\n  function check() {\n    var cb = function(err, updatedModules) {\n      if (err) return handleError(err);\n\n      if(!updatedModules) {\n        if (options.warn) {\n          console.warn(\"[HMR] Cannot find update (Full reload needed)\");\n          console.warn(\"[HMR] (Probably because of restarting the server)\");\n        }\n        performReload();\n        return null;\n      }\n\n      var applyCallback = function(applyErr, renewedModules) {\n        if (applyErr) return handleError(applyErr);\n\n        if (!upToDate()) check();\n\n        logUpdates(updatedModules, renewedModules);\n      };\n\n      var applyResult = module.hot.apply(applyOptions, applyCallback);\n      // webpack 2 promise\n      if (applyResult && applyResult.then) {\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\n        applyResult.then(function(outdatedModules) {\n          applyCallback(null, outdatedModules);\n        });\n        applyResult.catch(applyCallback);\n      }\n\n    };\n\n    var result = module.hot.check(false, cb);\n    // webpack 2 promise\n    if (result && result.then) {\n        result.then(function(updatedModules) {\n            cb(null, updatedModules);\n        });\n        result.catch(cb);\n    }\n  }\n\n  function logUpdates(updatedModules, renewedModules) {\n    var unacceptedModules = updatedModules.filter(function(moduleId) {\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\n    });\n\n    if(unacceptedModules.length > 0) {\n      if (options.warn) {\n        console.warn(\n          \"[HMR] The following modules couldn't be hot updated: \" +\n          \"(Full reload needed)\\n\" +\n          \"This is usually because the modules which have changed \" +\n          \"(and their parents) do not know how to hot reload themselves. \" +\n          \"See \" + hmrDocsUrl + \" for more details.\"\n        );\n        unacceptedModules.forEach(function(moduleId) {\n          console.warn(\"[HMR]  - \" + (moduleMap[moduleId] || moduleId));\n        });\n      }\n      performReload();\n      return;\n    }\n\n    if (options.log) {\n      if(!renewedModules || renewedModules.length === 0) {\n        console.log(\"[HMR] Nothing hot updated.\");\n      } else {\n        console.log(\"[HMR] Updated modules:\");\n        renewedModules.forEach(function(moduleId) {\n          console.log(\"[HMR]  - \" + (moduleMap[moduleId] || moduleId));\n        });\n      }\n\n      if (upToDate()) {\n        console.log(\"[HMR] App is up to date.\");\n      }\n    }\n  }\n\n  function handleError(err) {\n    if (module.hot.status() in failureStatuses) {\n      if (options.warn) {\n        console.warn(\"[HMR] Cannot check for update (Full reload needed)\");\n        console.warn(\"[HMR] \" + (err.stack || err.message));\n      }\n      performReload();\n      return;\n    }\n    if (options.warn) {\n      console.warn(\"[HMR] Update check failed: \" + (err.stack || err.message));\n    }\n  }\n\n  function performReload() {\n    if (reload) {\n      if (options.warn) console.warn(\"[HMR] Reloading page\");\n      window.location.reload();\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1ob3QtbWlkZGxld2FyZS9wcm9jZXNzLXVwZGF0ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjayktaG90LW1pZGRsZXdhcmUvcHJvY2Vzcy11cGRhdGUuanM/M2IzNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJhc2VkIGhlYXZpbHkgb24gaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjay9ibG9iL1xuICogIGMwYWZkZjljNmFiYzFkZDcwNzA3YzU5NGU0NzM4MDJhNTY2ZjdiNmUvaG90L29ubHktZGV2LXNlcnZlci5qc1xuICogT3JpZ2luYWwgY29weXJpZ2h0IFRvYmlhcyBLb3BwZXJzIEBzb2tyYSAoTUlUIGxpY2Vuc2UpXG4gKi9cblxuLyogZ2xvYmFsIHdpbmRvdyBfX3dlYnBhY2tfaGFzaF9fICovXG5cbmlmICghbW9kdWxlLmhvdCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJbSE1SXSBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGlzIGRpc2FibGVkLlwiKTtcbn1cblxudmFyIGhtckRvY3NVcmwgPSBcImh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvaG90LW1vZHVsZS1yZXBsYWNlbWVudC9cIjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBtYXgtbGVuXG5cbnZhciBsYXN0SGFzaDtcbnZhciBmYWlsdXJlU3RhdHVzZXMgPSB7IGFib3J0OiAxLCBmYWlsOiAxIH07XG52YXIgYXBwbHlPcHRpb25zID0geyBcdFx0XHRcdFxuICBpZ25vcmVVbmFjY2VwdGVkOiB0cnVlLFxuICBpZ25vcmVEZWNsaW5lZDogdHJ1ZSxcbiAgaWdub3JlRXJyb3JlZDogdHJ1ZSxcbiAgb25VbmFjY2VwdGVkOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgY29uc29sZS53YXJuKFwiSWdub3JlZCBhbiB1cGRhdGUgdG8gdW5hY2NlcHRlZCBtb2R1bGUgXCIgKyBkYXRhLmNoYWluLmpvaW4oXCIgLT4gXCIpKTtcbiAgfSxcbiAgb25EZWNsaW5lZDogZnVuY3Rpb24oZGF0YSkge1xuICAgIGNvbnNvbGUud2FybihcIklnbm9yZWQgYW4gdXBkYXRlIHRvIGRlY2xpbmVkIG1vZHVsZSBcIiArIGRhdGEuY2hhaW4uam9pbihcIiAtPiBcIikpO1xuICB9LFxuICBvbkVycm9yZWQ6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBjb25zb2xlLmVycm9yKGRhdGEuZXJyb3IpO1xuICAgIGNvbnNvbGUud2FybihcIklnbm9yZWQgYW4gZXJyb3Igd2hpbGUgdXBkYXRpbmcgbW9kdWxlIFwiICsgZGF0YS5tb2R1bGVJZCArIFwiIChcIiArIGRhdGEudHlwZSArIFwiKVwiKTtcbiAgfSBcbn1cblxuZnVuY3Rpb24gdXBUb0RhdGUoaGFzaCkge1xuICBpZiAoaGFzaCkgbGFzdEhhc2ggPSBoYXNoO1xuICByZXR1cm4gbGFzdEhhc2ggPT0gX193ZWJwYWNrX2hhc2hfXztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihoYXNoLCBtb2R1bGVNYXAsIG9wdGlvbnMpIHtcbiAgdmFyIHJlbG9hZCA9IG9wdGlvbnMucmVsb2FkO1xuICBpZiAoIXVwVG9EYXRlKGhhc2gpICYmIG1vZHVsZS5ob3Quc3RhdHVzKCkgPT0gXCJpZGxlXCIpIHtcbiAgICBpZiAob3B0aW9ucy5sb2cpIGNvbnNvbGUubG9nKFwiW0hNUl0gQ2hlY2tpbmcgZm9yIHVwZGF0ZXMgb24gdGhlIHNlcnZlci4uLlwiKTtcbiAgICBjaGVjaygpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2soKSB7XG4gICAgdmFyIGNiID0gZnVuY3Rpb24oZXJyLCB1cGRhdGVkTW9kdWxlcykge1xuICAgICAgaWYgKGVycikgcmV0dXJuIGhhbmRsZUVycm9yKGVycik7XG5cbiAgICAgIGlmKCF1cGRhdGVkTW9kdWxlcykge1xuICAgICAgICBpZiAob3B0aW9ucy53YXJuKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGZpbmQgdXBkYXRlIChGdWxsIHJlbG9hZCBuZWVkZWQpXCIpO1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIltITVJdIChQcm9iYWJseSBiZWNhdXNlIG9mIHJlc3RhcnRpbmcgdGhlIHNlcnZlcilcIik7XG4gICAgICAgIH1cbiAgICAgICAgcGVyZm9ybVJlbG9hZCgpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIGFwcGx5Q2FsbGJhY2sgPSBmdW5jdGlvbihhcHBseUVyciwgcmVuZXdlZE1vZHVsZXMpIHtcbiAgICAgICAgaWYgKGFwcGx5RXJyKSByZXR1cm4gaGFuZGxlRXJyb3IoYXBwbHlFcnIpO1xuXG4gICAgICAgIGlmICghdXBUb0RhdGUoKSkgY2hlY2soKTtcblxuICAgICAgICBsb2dVcGRhdGVzKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcyk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgYXBwbHlSZXN1bHQgPSBtb2R1bGUuaG90LmFwcGx5KGFwcGx5T3B0aW9ucywgYXBwbHlDYWxsYmFjayk7XG4gICAgICAvLyB3ZWJwYWNrIDIgcHJvbWlzZVxuICAgICAgaWYgKGFwcGx5UmVzdWx0ICYmIGFwcGx5UmVzdWx0LnRoZW4pIHtcbiAgICAgICAgLy8gSG90TW9kdWxlUmVwbGFjZW1lbnQucnVudGltZS5qcyByZWZlcnMgdG8gdGhlIHJlc3VsdCBhcyBgb3V0ZGF0ZWRNb2R1bGVzYFxuICAgICAgICBhcHBseVJlc3VsdC50aGVuKGZ1bmN0aW9uKG91dGRhdGVkTW9kdWxlcykge1xuICAgICAgICAgIGFwcGx5Q2FsbGJhY2sobnVsbCwgb3V0ZGF0ZWRNb2R1bGVzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGFwcGx5UmVzdWx0LmNhdGNoKGFwcGx5Q2FsbGJhY2spO1xuICAgICAgfVxuXG4gICAgfTtcblxuICAgIHZhciByZXN1bHQgPSBtb2R1bGUuaG90LmNoZWNrKGZhbHNlLCBjYik7XG4gICAgLy8gd2VicGFjayAyIHByb21pc2VcbiAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC50aGVuKSB7XG4gICAgICAgIHJlc3VsdC50aGVuKGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzKSB7XG4gICAgICAgICAgICBjYihudWxsLCB1cGRhdGVkTW9kdWxlcyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXN1bHQuY2F0Y2goY2IpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvZ1VwZGF0ZXModXBkYXRlZE1vZHVsZXMsIHJlbmV3ZWRNb2R1bGVzKSB7XG4gICAgdmFyIHVuYWNjZXB0ZWRNb2R1bGVzID0gdXBkYXRlZE1vZHVsZXMuZmlsdGVyKGZ1bmN0aW9uKG1vZHVsZUlkKSB7XG4gICAgICByZXR1cm4gcmVuZXdlZE1vZHVsZXMgJiYgcmVuZXdlZE1vZHVsZXMuaW5kZXhPZihtb2R1bGVJZCkgPCAwO1xuICAgIH0pO1xuXG4gICAgaWYodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKG9wdGlvbnMud2Fybikge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgXCJbSE1SXSBUaGUgZm9sbG93aW5nIG1vZHVsZXMgY291bGRuJ3QgYmUgaG90IHVwZGF0ZWQ6IFwiICtcbiAgICAgICAgICBcIihGdWxsIHJlbG9hZCBuZWVkZWQpXFxuXCIgK1xuICAgICAgICAgIFwiVGhpcyBpcyB1c3VhbGx5IGJlY2F1c2UgdGhlIG1vZHVsZXMgd2hpY2ggaGF2ZSBjaGFuZ2VkIFwiICtcbiAgICAgICAgICBcIihhbmQgdGhlaXIgcGFyZW50cykgZG8gbm90IGtub3cgaG93IHRvIGhvdCByZWxvYWQgdGhlbXNlbHZlcy4gXCIgK1xuICAgICAgICAgIFwiU2VlIFwiICsgaG1yRG9jc1VybCArIFwiIGZvciBtb3JlIGRldGFpbHMuXCJcbiAgICAgICAgKTtcbiAgICAgICAgdW5hY2NlcHRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbihtb2R1bGVJZCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIltITVJdICAtIFwiICsgKG1vZHVsZU1hcFttb2R1bGVJZF0gfHwgbW9kdWxlSWQpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBwZXJmb3JtUmVsb2FkKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMubG9nKSB7XG4gICAgICBpZighcmVuZXdlZE1vZHVsZXMgfHwgcmVuZXdlZE1vZHVsZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiW0hNUl0gTm90aGluZyBob3QgdXBkYXRlZC5cIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIltITVJdIFVwZGF0ZWQgbW9kdWxlczpcIik7XG4gICAgICAgIHJlbmV3ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIltITVJdICAtIFwiICsgKG1vZHVsZU1hcFttb2R1bGVJZF0gfHwgbW9kdWxlSWQpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh1cFRvRGF0ZSgpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiW0hNUl0gQXBwIGlzIHVwIHRvIGRhdGUuXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycikge1xuICAgIGlmIChtb2R1bGUuaG90LnN0YXR1cygpIGluIGZhaWx1cmVTdGF0dXNlcykge1xuICAgICAgaWYgKG9wdGlvbnMud2Fybikge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbSE1SXSBDYW5ub3QgY2hlY2sgZm9yIHVwZGF0ZSAoRnVsbCByZWxvYWQgbmVlZGVkKVwiKTtcbiAgICAgICAgY29uc29sZS53YXJuKFwiW0hNUl0gXCIgKyAoZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKSk7XG4gICAgICB9XG4gICAgICBwZXJmb3JtUmVsb2FkKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcHRpb25zLndhcm4pIHtcbiAgICAgIGNvbnNvbGUud2FybihcIltITVJdIFVwZGF0ZSBjaGVjayBmYWlsZWQ6IFwiICsgKGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSkpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBlcmZvcm1SZWxvYWQoKSB7XG4gICAgaWYgKHJlbG9hZCkge1xuICAgICAgaWYgKG9wdGlvbnMud2FybikgY29uc29sZS53YXJuKFwiW0hNUl0gUmVsb2FkaW5nIHBhZ2VcIik7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack-hot-middleware/process-update.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/ZDQyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./packages/app/browser/node_modules/@material/checkbox/dist/mdc.checkbox.js":
/*!***********************************************************************************!*\
  !*** ./packages/app/browser/node_modules/@material/checkbox/dist/mdc.checkbox.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n Material Components for the Web\n Copyright (c) 2019 Google Inc.\n License: MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 90);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nvar MDCFoundation = function () {\n  _createClass(MDCFoundation, null, [{\n    key: \"cssClasses\",\n\n    /** @return enum{cssClasses} */\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports every\n      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n      return {};\n    }\n\n    /** @return enum{strings} */\n\n  }, {\n    key: \"strings\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n      return {};\n    }\n\n    /** @return enum{numbers} */\n\n  }, {\n    key: \"numbers\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n      return {};\n    }\n\n    /** @return {!Object} */\n\n  }, {\n    key: \"defaultAdapter\",\n    get: function get() {\n      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n      // validation.\n      return {};\n    }\n\n    /**\n     * @param {A=} adapter\n     */\n\n  }]);\n\n  function MDCFoundation() {\n    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, MDCFoundation);\n\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  _createClass(MDCFoundation, [{\n    key: \"init\",\n    value: function init() {\n      // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    }\n  }]);\n\n  return MDCFoundation;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCFoundation);\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n/**\n * @template F\n */\n\nvar MDCComponent = function () {\n  _createClass(MDCComponent, null, [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCComponent}\n     */\n    value: function attachTo(root) {\n      // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n      // returns an instantiated component with its root set to that element. Also note that in the cases of\n      // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n      // from getDefaultFoundation().\n      return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\" /* default */]());\n    }\n\n    /**\n     * @param {!Element} root\n     * @param {F=} foundation\n     * @param {...?} args\n     */\n\n  }]);\n\n  function MDCComponent(root) {\n    var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, MDCComponent);\n\n    /** @protected {!Element} */\n    this.root_ = root;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    this.initialize.apply(this, args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  _createClass(MDCComponent, [{\n    key: 'initialize',\n    value: function initialize() /* ...args */{}\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n\n    /**\n     * @return {!F} foundation\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      // Subclasses must override this method to return a properly configured foundation class for the\n      // component.\n      throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n    }\n  }, {\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n      // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n      // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n      // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      // Subclasses may implement this method to release any resources / deregister any listeners they have\n      // attached. An example of this might be deregistering a resize event from the window object.\n      this.foundation_.destroy();\n    }\n\n    /**\n     * Wrapper method to add an event listener to the component's root element. This is most useful when\n     * listening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(evtType, handler) {\n      this.root_.addEventListener(evtType, handler);\n    }\n\n    /**\n     * Wrapper method to remove an event listener to the component's root element. This is most useful when\n     * unlistening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(evtType, handler) {\n      this.root_.removeEventListener(evtType, handler);\n    }\n\n    /**\n     * Fires a cross-browser-compatible custom event from the component root of the given type,\n     * with the given data.\n     * @param {string} evtType\n     * @param {!Object} evtData\n     * @param {boolean=} shouldBubble\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(evtType, evtData) {\n      var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var evt = void 0;\n      if (typeof CustomEvent === 'function') {\n        evt = new CustomEvent(evtType, {\n          detail: evtData,\n          bubbles: shouldBubble\n        });\n      } else {\n        evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n      }\n\n      this.root_.dispatchEvent(evt);\n    }\n  }]);\n\n  return MDCComponent;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCComponent);\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformStyleProperties\", function() { return transformStyleProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCorrectEventName\", function() { return getCorrectEventName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCorrectPropertyName\", function() { return getCorrectPropertyName; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nvar VendorPropertyMapType = void 0;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nvar eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation'\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation'\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation'\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition'\n  }\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nvar cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation'\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform'\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition'\n  }\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return eventType in eventTypeMap || eventType in cssPropertyMap;\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  var map = /** @type {!Object<string, !VendorPropertyMapType>} */eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;\n  var el = windowObj['document']['createElement']('div');\n  var eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nvar transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportsCssVariables\", function() { return supportsCssVariables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyPassive\", function() { return applyPassive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMatchesProperty\", function() { return getMatchesProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNormalizedEventCoords\", function() { return getNormalizedEventCoords; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nvar supportsCssVariables_ = void 0;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nvar supportsPassive_ = void 0;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  var document = windowObj.document;\n  var node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  var computedStyle = windowObj.getComputedStyle(node);\n  var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj) {\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive() {\n  var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (supportsPassive_ === undefined || forceRefresh) {\n    var isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, { get passive() {\n          isSupported = true;\n          return isSupported;\n        } });\n    } catch (e) {}\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? /** @type {!EventListenerOptions} */{ passive: true } : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  var method = 'matches';\n  for (var i = 0; i < matchesMethods.length; i++) {\n    var matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  var x = pageOffset.x,\n      y = pageOffset.y;\n\n  var documentX = x + clientRect.left;\n  var documentY = y + clientRect.top;\n\n  var normalizedX = void 0;\n  var normalizedY = void 0;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ev;\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ev;\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return { x: normalizedX, y: normalizedY };\n}\n\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nvar MDCRippleAdapter = function () {\n  function MDCRippleAdapter() {\n    _classCallCheck(this, MDCRippleAdapter);\n  }\n\n  _createClass(MDCRippleAdapter, [{\n    key: \"browserSupportsCssVars\",\n\n    /** @return {boolean} */\n    value: function browserSupportsCssVars() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isUnbounded\",\n    value: function isUnbounded() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isSurfaceActive\",\n    value: function isSurfaceActive() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isSurfaceDisabled\",\n    value: function isSurfaceDisabled() {}\n\n    /** @param {string} className */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {}\n\n    /** @param {string} className */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /** @param {!EventTarget} target */\n\n  }, {\n    key: \"containsEventTarget\",\n    value: function containsEventTarget(target) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerDocumentInteractionHandler\",\n    value: function registerDocumentInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterDocumentInteractionHandler\",\n    value: function deregisterDocumentInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerResizeHandler\",\n    value: function registerResizeHandler(handler) {}\n\n    /**\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterResizeHandler\",\n    value: function deregisterResizeHandler(handler) {}\n\n    /**\n     * @param {string} varName\n     * @param {?number|string} value\n     */\n\n  }, {\n    key: \"updateCssVariable\",\n    value: function updateCssVariable(varName, value) {}\n\n    /** @return {!ClientRect} */\n\n  }, {\n    key: \"computeBoundingRect\",\n    value: function computeBoundingRect() {}\n\n    /** @return {{x: number, y: number}} */\n\n  }, {\n    key: \"getWindowPageOffset\",\n    value: function getWindowPageOffset() {}\n  }]);\n\n  return MDCRippleAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCRippleAdapter);\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCRipple\", function() { return MDCRipple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RippleCapableSurface\", function() { return RippleCapableSurface; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCRippleFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"util\", function() { return __WEBPACK_IMPORTED_MODULE_3__util__; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\n\nvar MDCRipple = function (_MDCComponent) {\n  _inherits(MDCRipple, _MDCComponent);\n\n  /** @param {...?} args */\n  function MDCRipple() {\n    var _ref;\n\n    _classCallCheck(this, MDCRipple);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @type {boolean} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));\n\n    _this.disabled = false;\n\n    /** @private {boolean} */\n    _this.unbounded_;\n    return _this;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n\n\n  _createClass(MDCRipple, [{\n    key: 'setUnbounded_',\n\n\n    /**\n     * Closure Compiler throws an access control error when directly accessing a\n     * protected or private property inside a getter/setter, like unbounded above.\n     * By accessing the protected property inside a method, we solve that problem.\n     * That's why this function exists.\n     * @private\n     */\n    value: function setUnbounded_() {\n      this.foundation_.setUnbounded(this.unbounded_);\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this.foundation_.activate();\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.foundation_.deactivate();\n    }\n  }, {\n    key: 'layout',\n    value: function layout() {\n      this.foundation_.layout();\n    }\n\n    /**\n     * @return {!MDCRippleFoundation}\n     * @override\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */](MDCRipple.createAdapter(this));\n    }\n\n    /** @override */\n\n  }, {\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n    }\n  }, {\n    key: 'unbounded',\n\n\n    /** @return {boolean} */\n    get: function get() {\n      return this.unbounded_;\n    }\n\n    /** @param {boolean} unbounded */\n    ,\n    set: function set(unbounded) {\n      this.unbounded_ = Boolean(unbounded);\n      this.setUnbounded_();\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$isUnbounded = _ref2.isUnbounded,\n          isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;\n\n      var ripple = new MDCRipple(root);\n      // Only override unbounded behavior if option is explicitly specified\n      if (isUnbounded !== undefined) {\n        ripple.unbounded = /** @type {boolean} */isUnbounded;\n      }\n      return ripple;\n    }\n\n    /**\n     * @param {!RippleCapableSurface} instance\n     * @return {!MDCRippleAdapter}\n     */\n\n  }, {\n    key: 'createAdapter',\n    value: function createAdapter(instance) {\n      var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__[\"getMatchesProperty\"](HTMLElement.prototype);\n\n      return {\n        browserSupportsCssVars: function browserSupportsCssVars() {\n          return __WEBPACK_IMPORTED_MODULE_3__util__[\"supportsCssVariables\"](window);\n        },\n        isUnbounded: function isUnbounded() {\n          return instance.unbounded;\n        },\n        isSurfaceActive: function isSurfaceActive() {\n          return instance.root_[MATCHES](':active');\n        },\n        isSurfaceDisabled: function isSurfaceDisabled() {\n          return instance.disabled;\n        },\n        addClass: function addClass(className) {\n          return instance.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return instance.root_.classList.remove(className);\n        },\n        containsEventTarget: function containsEventTarget(target) {\n          return instance.root_.contains(target);\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {\n          return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {\n          return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        registerResizeHandler: function registerResizeHandler(handler) {\n          return window.addEventListener('resize', handler);\n        },\n        deregisterResizeHandler: function deregisterResizeHandler(handler) {\n          return window.removeEventListener('resize', handler);\n        },\n        updateCssVariable: function updateCssVariable(varName, value) {\n          return instance.root_.style.setProperty(varName, value);\n        },\n        computeBoundingRect: function computeBoundingRect() {\n          return instance.root_.getBoundingClientRect();\n        },\n        getWindowPageOffset: function getWindowPageOffset() {\n          return { x: window.pageXOffset, y: window.pageYOffset };\n        }\n      };\n    }\n  }]);\n\n  return MDCRipple;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\n\n\nvar RippleCapableSurface = function RippleCapableSurface() {\n  _classCallCheck(this, RippleCapableSurface);\n};\n\n/** @protected {!Element} */\n\n\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\n\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nvar ActivationStateType = void 0;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nvar ListenerInfoType = void 0;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nvar ListenersType = void 0;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nvar PointType = void 0;\n\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nvar activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\n\nvar MDCRippleFoundation = function (_MDCFoundation) {\n  _inherits(MDCRippleFoundation, _MDCFoundation);\n\n  _createClass(MDCRippleFoundation, null, [{\n    key: 'cssClasses',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\" /* strings */];\n    }\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */];\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return {\n        browserSupportsCssVars: function browserSupportsCssVars() /* boolean - cached */{},\n        isUnbounded: function isUnbounded() /* boolean */{},\n        isSurfaceActive: function isSurfaceActive() /* boolean */{},\n        isSurfaceDisabled: function isSurfaceDisabled() /* boolean */{},\n        addClass: function addClass() /* className: string */{},\n        removeClass: function removeClass() /* className: string */{},\n        containsEventTarget: function containsEventTarget() /* target: !EventTarget */{},\n        registerInteractionHandler: function registerInteractionHandler() /* evtType: string, handler: EventListener */{},\n        deregisterInteractionHandler: function deregisterInteractionHandler() /* evtType: string, handler: EventListener */{},\n        registerDocumentInteractionHandler: function registerDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},\n        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},\n        registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},\n        deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},\n        updateCssVariable: function updateCssVariable() /* varName: string, value: string */{},\n        computeBoundingRect: function computeBoundingRect() /* ClientRect */{},\n        getWindowPageOffset: function getWindowPageOffset() /* {x: number, y: number} */{}\n      };\n    }\n  }]);\n\n  function MDCRippleFoundation(adapter) {\n    _classCallCheck(this, MDCRippleFoundation);\n\n    /** @private {number} */\n    var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));\n\n    _this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    _this.frame_ = /** @type {!ClientRect} */{ width: 0, height: 0 };\n\n    /** @private {!ActivationStateType} */\n    _this.activationState_ = _this.defaultActivationState_();\n\n    /** @private {number} */\n    _this.initialSize_ = 0;\n\n    /** @private {number} */\n    _this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    _this.activateHandler_ = function (e) {\n      return _this.activate_(e);\n    };\n\n    /** @private {function(!Event=)} */\n    _this.deactivateHandler_ = function () {\n      return _this.deactivate_();\n    };\n\n    /** @private {function(!Event=)} */\n    _this.focusHandler_ = function () {\n      return _this.handleFocus();\n    };\n\n    /** @private {function(!Event=)} */\n    _this.blurHandler_ = function () {\n      return _this.handleBlur();\n    };\n\n    /** @private {!Function} */\n    _this.resizeHandler_ = function () {\n      return _this.layout();\n    };\n\n    /** @private {{left: number, top:number}} */\n    _this.unboundedCoords_ = {\n      left: 0,\n      top: 0\n    };\n\n    /** @private {number} */\n    _this.fgScale_ = 0;\n\n    /** @private {number} */\n    _this.activationTimer_ = 0;\n\n    /** @private {number} */\n    _this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    _this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    _this.activationTimerCallback_ = function () {\n      _this.activationAnimationHasEnded_ = true;\n      _this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    _this.previousActivationEvent_;\n    return _this;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n\n\n  _createClass(MDCRippleFoundation, [{\n    key: 'supportsPressRipple_',\n    value: function supportsPressRipple_() {\n      return this.adapter_.browserSupportsCssVars();\n    }\n\n    /**\n     * @return {!ActivationStateType}\n     */\n\n  }, {\n    key: 'defaultActivationState_',\n    value: function defaultActivationState_() {\n      return {\n        isActivated: false,\n        hasDeactivationUXRun: false,\n        wasActivatedByPointer: false,\n        wasElementMadeActive: false,\n        activationEvent: undefined,\n        isProgrammatic: false\n      };\n    }\n\n    /** @override */\n\n  }, {\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      var supportsPressRipple = this.supportsPressRipple_();\n\n      this.registerRootHandlers_(supportsPressRipple);\n\n      if (supportsPressRipple) {\n        var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,\n            ROOT = _MDCRippleFoundation$.ROOT,\n            UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;\n\n        requestAnimationFrame(function () {\n          _this2.adapter_.addClass(ROOT);\n          if (_this2.adapter_.isUnbounded()) {\n            _this2.adapter_.addClass(UNBOUNDED);\n            // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n            _this2.layoutInternal_();\n          }\n        });\n      }\n    }\n\n    /** @override */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      if (this.supportsPressRipple_()) {\n        if (this.activationTimer_) {\n          clearTimeout(this.activationTimer_);\n          this.activationTimer_ = 0;\n          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n        }\n\n        if (this.fgDeactivationRemovalTimer_) {\n          clearTimeout(this.fgDeactivationRemovalTimer_);\n          this.fgDeactivationRemovalTimer_ = 0;\n          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n        }\n\n        var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,\n            ROOT = _MDCRippleFoundation$2.ROOT,\n            UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;\n\n        requestAnimationFrame(function () {\n          _this3.adapter_.removeClass(ROOT);\n          _this3.adapter_.removeClass(UNBOUNDED);\n          _this3.removeCssVars_();\n        });\n      }\n\n      this.deregisterRootHandlers_();\n      this.deregisterDeactivationHandlers_();\n    }\n\n    /**\n     * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n     * @private\n     */\n\n  }, {\n    key: 'registerRootHandlers_',\n    value: function registerRootHandlers_(supportsPressRipple) {\n      var _this4 = this;\n\n      if (supportsPressRipple) {\n        ACTIVATION_EVENT_TYPES.forEach(function (type) {\n          _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);\n        });\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.registerResizeHandler(this.resizeHandler_);\n        }\n      }\n\n      this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n      this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    }\n\n    /**\n     * @param {!Event} e\n     * @private\n     */\n\n  }, {\n    key: 'registerDeactivationHandlers_',\n    value: function registerDeactivationHandlers_(e) {\n      var _this5 = this;\n\n      if (e.type === 'keydown') {\n        this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n      } else {\n        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {\n          _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);\n        });\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'deregisterRootHandlers_',\n    value: function deregisterRootHandlers_() {\n      var _this6 = this;\n\n      ACTIVATION_EVENT_TYPES.forEach(function (type) {\n        _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);\n      });\n      this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n      this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'deregisterDeactivationHandlers_',\n    value: function deregisterDeactivationHandlers_() {\n      var _this7 = this;\n\n      this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {\n        _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);\n      });\n    }\n\n    /** @private */\n\n  }, {\n    key: 'removeCssVars_',\n    value: function removeCssVars_() {\n      var _this8 = this;\n\n      var strings = MDCRippleFoundation.strings;\n\n      Object.keys(strings).forEach(function (k) {\n        if (k.indexOf('VAR_') === 0) {\n          _this8.adapter_.updateCssVariable(strings[k], null);\n        }\n      });\n    }\n\n    /**\n     * @param {!Event=} e\n     * @private\n     */\n\n  }, {\n    key: 'activate_',\n    value: function activate_(e) {\n      var _this9 = this;\n\n      if (this.adapter_.isSurfaceDisabled()) {\n        return;\n      }\n\n      var activationState = this.activationState_;\n      if (activationState.isActivated) {\n        return;\n      }\n\n      // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n      var previousActivationEvent = this.previousActivationEvent_;\n      var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n      if (isSameInteraction) {\n        return;\n      }\n\n      activationState.isActivated = true;\n      activationState.isProgrammatic = e === undefined;\n      activationState.activationEvent = e;\n      activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');\n\n      var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {\n        return _this9.adapter_.containsEventTarget(target);\n      });\n      if (hasActivatedChild) {\n        // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n        this.resetActivationState_();\n        return;\n      }\n\n      if (e !== undefined) {\n        activatedTargets.push( /** @type {!EventTarget} */e.target);\n        this.registerDeactivationHandlers_(e);\n      }\n\n      activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      }\n\n      requestAnimationFrame(function () {\n        // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n        activatedTargets = [];\n\n        if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n          // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n          // active states inconsistently when they're called within event handling code:\n          // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n          // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n          // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n          // variable is set within a rAF callback for a submit button interaction (#2241).\n          activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);\n          if (activationState.wasElementMadeActive) {\n            _this9.animateActivation_();\n          }\n        }\n\n        if (!activationState.wasElementMadeActive) {\n          // Reset activation state immediately if element was not made active.\n          _this9.activationState_ = _this9.defaultActivationState_();\n        }\n      });\n    }\n\n    /**\n     * @param {!Event=} e\n     * @private\n     */\n\n  }, {\n    key: 'checkElementMadeActive_',\n    value: function checkElementMadeActive_(e) {\n      return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;\n    }\n\n    /**\n     * @param {!Event=} event Optional event containing position information.\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate(event) {\n      this.activate_(event);\n    }\n\n    /** @private */\n\n  }, {\n    key: 'animateActivation_',\n    value: function animateActivation_() {\n      var _this10 = this;\n\n      var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,\n          VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,\n          VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;\n      var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,\n          FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,\n          FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;\n      var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n\n\n      this.layoutInternal_();\n\n      var translateStart = '';\n      var translateEnd = '';\n\n      if (!this.adapter_.isUnbounded()) {\n        var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),\n            startPoint = _getFgTranslationCoor.startPoint,\n            endPoint = _getFgTranslationCoor.endPoint;\n\n        translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';\n        translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';\n      }\n\n      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n      // Cancel any ongoing activation/deactivation animations\n      clearTimeout(this.activationTimer_);\n      clearTimeout(this.fgDeactivationRemovalTimer_);\n      this.rmBoundedActivationClasses_();\n      this.adapter_.removeClass(FG_DEACTIVATION);\n\n      // Force layout in order to re-trigger the animation.\n      this.adapter_.computeBoundingRect();\n      this.adapter_.addClass(FG_ACTIVATION);\n      this.activationTimer_ = setTimeout(function () {\n        return _this10.activationTimerCallback_();\n      }, DEACTIVATION_TIMEOUT_MS);\n    }\n\n    /**\n     * @private\n     * @return {{startPoint: PointType, endPoint: PointType}}\n     */\n\n  }, {\n    key: 'getFgTranslationCoordinates_',\n    value: function getFgTranslationCoordinates_() {\n      var _activationState_ = this.activationState_,\n          activationEvent = _activationState_.activationEvent,\n          wasActivatedByPointer = _activationState_.wasActivatedByPointer;\n\n\n      var startPoint = void 0;\n      if (wasActivatedByPointer) {\n        startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"getNormalizedEventCoords\"])(\n        /** @type {!Event} */activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());\n      } else {\n        startPoint = {\n          x: this.frame_.width / 2,\n          y: this.frame_.height / 2\n        };\n      }\n      // Center the element around the start point.\n      startPoint = {\n        x: startPoint.x - this.initialSize_ / 2,\n        y: startPoint.y - this.initialSize_ / 2\n      };\n\n      var endPoint = {\n        x: this.frame_.width / 2 - this.initialSize_ / 2,\n        y: this.frame_.height / 2 - this.initialSize_ / 2\n      };\n\n      return { startPoint: startPoint, endPoint: endPoint };\n    }\n\n    /** @private */\n\n  }, {\n    key: 'runDeactivationUXLogicIfReady_',\n    value: function runDeactivationUXLogicIfReady_() {\n      var _this11 = this;\n\n      // This method is called both when a pointing device is released, and when the activation animation ends.\n      // The deactivation animation should only run after both of those occur.\n      var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n      var _activationState_2 = this.activationState_,\n          hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,\n          isActivated = _activationState_2.isActivated;\n\n      var activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n      if (activationHasEnded && this.activationAnimationHasEnded_) {\n        this.rmBoundedActivationClasses_();\n        this.adapter_.addClass(FG_DEACTIVATION);\n        this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n          _this11.adapter_.removeClass(FG_DEACTIVATION);\n        }, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */].FG_DEACTIVATION_MS);\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'rmBoundedActivationClasses_',\n    value: function rmBoundedActivationClasses_() {\n      var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n\n      this.adapter_.removeClass(FG_ACTIVATION);\n      this.activationAnimationHasEnded_ = false;\n      this.adapter_.computeBoundingRect();\n    }\n  }, {\n    key: 'resetActivationState_',\n    value: function resetActivationState_() {\n      var _this12 = this;\n\n      this.previousActivationEvent_ = this.activationState_.activationEvent;\n      this.activationState_ = this.defaultActivationState_();\n      // Touch devices may fire additional events for the same interaction within a short time.\n      // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n      setTimeout(function () {\n        return _this12.previousActivationEvent_ = undefined;\n      }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: 'deactivate_',\n    value: function deactivate_() {\n      var _this13 = this;\n\n      var activationState = this.activationState_;\n      // This can happen in scenarios such as when you have a keyup event that blurs the element.\n      if (!activationState.isActivated) {\n        return;\n      }\n\n      var state = /** @type {!ActivationStateType} */_extends({}, activationState);\n\n      if (activationState.isProgrammatic) {\n        requestAnimationFrame(function () {\n          return _this13.animateDeactivation_(state);\n        });\n        this.resetActivationState_();\n      } else {\n        this.deregisterDeactivationHandlers_();\n        requestAnimationFrame(function () {\n          _this13.activationState_.hasDeactivationUXRun = true;\n          _this13.animateDeactivation_(state);\n          _this13.resetActivationState_();\n        });\n      }\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.deactivate_();\n    }\n\n    /**\n     * @param {!ActivationStateType} options\n     * @private\n     */\n\n  }, {\n    key: 'animateDeactivation_',\n    value: function animateDeactivation_(_ref) {\n      var wasActivatedByPointer = _ref.wasActivatedByPointer,\n          wasElementMadeActive = _ref.wasElementMadeActive;\n\n      if (wasActivatedByPointer || wasElementMadeActive) {\n        this.runDeactivationUXLogicIfReady_();\n      }\n    }\n  }, {\n    key: 'layout',\n    value: function layout() {\n      var _this14 = this;\n\n      if (this.layoutFrame_) {\n        cancelAnimationFrame(this.layoutFrame_);\n      }\n      this.layoutFrame_ = requestAnimationFrame(function () {\n        _this14.layoutInternal_();\n        _this14.layoutFrame_ = 0;\n      });\n    }\n\n    /** @private */\n\n  }, {\n    key: 'layoutInternal_',\n    value: function layoutInternal_() {\n      var _this15 = this;\n\n      this.frame_ = this.adapter_.computeBoundingRect();\n      var maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n      // Surface diameter is treated differently for unbounded vs. bounded ripples.\n      // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n      // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n      // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n      // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n      // `overflow: hidden`.\n      var getBoundedRadius = function getBoundedRadius() {\n        var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));\n        return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n      };\n\n      this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n      // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n      this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n      this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n      this.updateLayoutCssVars_();\n    }\n\n    /** @private */\n\n  }, {\n    key: 'updateLayoutCssVars_',\n    value: function updateLayoutCssVars_() {\n      var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,\n          VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,\n          VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,\n          VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,\n          VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;\n\n\n      this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');\n      this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n      if (this.adapter_.isUnbounded()) {\n        this.unboundedCoords_ = {\n          left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),\n          top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)\n        };\n\n        this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');\n        this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');\n      }\n    }\n\n    /** @param {boolean} unbounded */\n\n  }, {\n    key: 'setUnbounded',\n    value: function setUnbounded(unbounded) {\n      var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n\n      if (unbounded) {\n        this.adapter_.addClass(UNBOUNDED);\n      } else {\n        this.adapter_.removeClass(UNBOUNDED);\n      }\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      var _this16 = this;\n\n      requestAnimationFrame(function () {\n        return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n      });\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur() {\n      var _this17 = this;\n\n      requestAnimationFrame(function () {\n        return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n      });\n    }\n  }]);\n\n  return MDCRippleFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCRippleFoundation);\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return numbers; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'\n};\n\nvar strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'\n};\n\nvar numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300 };\n\n\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCSelectionControlState\", function() { return MDCSelectionControlState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCSelectionControl\", function() { return MDCSelectionControl; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_ripple_index__ = __webpack_require__(4);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {{\n *   checked: boolean,\n *   indeterminate: boolean,\n *   disabled: boolean,\n *   value: ?string\n * }}\n */\nvar MDCSelectionControlState = void 0;\n\n/**\n * @record\n */\n\nvar MDCSelectionControl = function () {\n  function MDCSelectionControl() {\n    _classCallCheck(this, MDCSelectionControl);\n  }\n\n  _createClass(MDCSelectionControl, [{\n    key: 'ripple',\n\n    /** @return {?MDCRipple} */\n    get: function get() {}\n  }]);\n\n  return MDCSelectionControl;\n}();\n\n\n\n/***/ }),\n\n/***/ 90:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCCheckbox\", function() { return MDCCheckbox; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_animation_index__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_selection_control_index__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__material_ripple_util__ = __webpack_require__(2);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCCheckboxFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_3__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\n\n\n/** @const {!Array<string>} */\nvar CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends MDCComponent<!MDCCheckboxFoundation>\n * @implements {MDCSelectionControl}\n */\n\nvar MDCCheckbox = function (_MDCComponent) {\n  _inherits(MDCCheckbox, _MDCComponent);\n\n  _createClass(MDCCheckbox, [{\n    key: 'nativeCb_',\n\n\n    /**\n     * Returns the state of the native control element, or null if the native control element is not present.\n     * @return {!MDCSelectionControlState}\n     * @private\n     */\n    get: function get() {\n      var NATIVE_CONTROL_SELECTOR = __WEBPACK_IMPORTED_MODULE_3__foundation__[\"a\" /* default */].strings.NATIVE_CONTROL_SELECTOR;\n\n      var cbEl = /** @type {!MDCSelectionControlState} */this.root_.querySelector(NATIVE_CONTROL_SELECTOR);\n      return cbEl;\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new MDCCheckbox(root);\n    }\n  }]);\n\n  function MDCCheckbox() {\n    var _ref;\n\n    _classCallCheck(this, MDCCheckbox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {!MDCRipple} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCCheckbox.__proto__ || Object.getPrototypeOf(MDCCheckbox)).call.apply(_ref, [this].concat(args)));\n\n    _this.ripple_ = _this.initRipple_();\n    /** @private {!Function} */\n    _this.handleChange_;\n    /** @private {!Function} */\n    _this.handleAnimationEnd_;\n    return _this;\n  }\n\n  _createClass(MDCCheckbox, [{\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      var _this2 = this;\n\n      this.handleChange_ = function () {\n        return _this2.foundation_.handleChange();\n      };\n      this.handleAnimationEnd_ = function () {\n        return _this2.foundation_.handleAnimationEnd();\n      };\n      this.nativeCb_.addEventListener('change', this.handleChange_);\n      this.listen(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__[\"getCorrectEventName\"])(window, 'animationend'), this.handleAnimationEnd_);\n      this.installPropertyChangeHooks_();\n    }\n\n    /**\n     * @return {!MDCRipple}\n     * @private\n     */\n\n  }, {\n    key: 'initRipple_',\n    value: function initRipple_() {\n      var _this3 = this;\n\n      var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_5__material_ripple_util__[\"getMatchesProperty\"])(HTMLElement.prototype);\n      var adapter = _extends(__WEBPACK_IMPORTED_MODULE_4__material_ripple_index__[\"MDCRipple\"].createAdapter(this), {\n        isUnbounded: function isUnbounded() {\n          return true;\n        },\n        isSurfaceActive: function isSurfaceActive() {\n          return _this3.nativeCb_[MATCHES](':active');\n        },\n        registerInteractionHandler: function registerInteractionHandler(type, handler) {\n          return _this3.nativeCb_.addEventListener(type, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n          return _this3.nativeCb_.removeEventListener(type, handler);\n        }\n      });\n      var foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__[\"MDCRippleFoundation\"](adapter);\n      return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__[\"MDCRipple\"](this.root_, foundation);\n    }\n\n    /** @private */\n\n  }, {\n    key: 'installPropertyChangeHooks_',\n    value: function installPropertyChangeHooks_() {\n      var _this4 = this;\n\n      var nativeCb = this.nativeCb_;\n      var cbProto = Object.getPrototypeOf(nativeCb);\n\n      CB_PROTO_PROPS.forEach(function (controlState) {\n        var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n        // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n        // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n        if (validDescriptor(desc)) {\n          var nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */{\n            get: desc.get,\n            set: function set(state) {\n              desc.set.call(nativeCb, state);\n              _this4.foundation_.handleChange();\n            },\n            configurable: desc.configurable,\n            enumerable: desc.enumerable\n          };\n          Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n        }\n      });\n    }\n\n    /** @private */\n\n  }, {\n    key: 'uninstallPropertyChangeHooks_',\n    value: function uninstallPropertyChangeHooks_() {\n      var nativeCb = this.nativeCb_;\n      var cbProto = Object.getPrototypeOf(nativeCb);\n\n      CB_PROTO_PROPS.forEach(function (controlState) {\n        var desc = /** @type {!ObjectPropertyDescriptor} */Object.getOwnPropertyDescriptor(cbProto, controlState);\n        if (validDescriptor(desc)) {\n          Object.defineProperty(nativeCb, controlState, desc);\n        }\n      });\n    }\n\n    /** @return {!MDCCheckboxFoundation} */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this5 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_3__foundation__[\"a\" /* default */]({\n        addClass: function addClass(className) {\n          return _this5.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this5.root_.classList.remove(className);\n        },\n        setNativeControlAttr: function setNativeControlAttr(attr, value) {\n          return _this5.nativeCb_.setAttribute(attr, value);\n        },\n        removeNativeControlAttr: function removeNativeControlAttr(attr) {\n          return _this5.nativeCb_.removeAttribute(attr);\n        },\n        isIndeterminate: function isIndeterminate() {\n          return _this5.indeterminate;\n        },\n        isChecked: function isChecked() {\n          return _this5.checked;\n        },\n        hasNativeControl: function hasNativeControl() {\n          return !!_this5.nativeCb_;\n        },\n        setNativeControlDisabled: function setNativeControlDisabled(disabled) {\n          return _this5.nativeCb_.disabled = disabled;\n        },\n        forceLayout: function forceLayout() {\n          return _this5.root_.offsetWidth;\n        },\n        isAttachedToDOM: function isAttachedToDOM() {\n          return Boolean(_this5.root_.parentNode);\n        }\n      });\n    }\n\n    /** @return {!MDCRipple} */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.ripple_.destroy();\n      this.nativeCb_.removeEventListener('change', this.handleChange_);\n      this.unlisten(Object(__WEBPACK_IMPORTED_MODULE_0__material_animation_index__[\"getCorrectEventName\"])(window, 'animationend'), this.handleAnimationEnd_);\n      this.uninstallPropertyChangeHooks_();\n      _get(MDCCheckbox.prototype.__proto__ || Object.getPrototypeOf(MDCCheckbox.prototype), 'destroy', this).call(this);\n    }\n  }, {\n    key: 'ripple',\n    get: function get() {\n      return this.ripple_;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'checked',\n    get: function get() {\n      return this.nativeCb_.checked;\n    }\n\n    /** @param {boolean} checked */\n    ,\n    set: function set(checked) {\n      this.nativeCb_.checked = checked;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'indeterminate',\n    get: function get() {\n      return this.nativeCb_.indeterminate;\n    }\n\n    /** @param {boolean} indeterminate */\n    ,\n    set: function set(indeterminate) {\n      this.nativeCb_.indeterminate = indeterminate;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.nativeCb_.disabled;\n    }\n\n    /** @param {boolean} disabled */\n    ,\n    set: function set(disabled) {\n      this.foundation_.setDisabled(disabled);\n    }\n\n    /** @return {?string} */\n\n  }, {\n    key: 'value',\n    get: function get() {\n      return this.nativeCb_.value;\n    }\n\n    /** @param {?string} value */\n    ,\n    set: function set(value) {\n      this.nativeCb_.value = value;\n    }\n  }]);\n\n  return MDCCheckbox;\n}(__WEBPACK_IMPORTED_MODULE_1__material_base_component__[\"a\" /* default */]);\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\n\n\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\n\n\n/***/ }),\n\n/***/ 91:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_selection_control_index__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(92);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(93);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n\n/* eslint-enable no-unused-vars */\n\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\n\nvar MDCCheckboxFoundation = function (_MDCFoundation) {\n  _inherits(MDCCheckboxFoundation, _MDCFoundation);\n\n  _createClass(MDCCheckboxFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {cssClasses} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_3__constants__[\"a\" /* cssClasses */];\n    }\n\n    /** @return enum {strings} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */];\n    }\n\n    /** @return enum {numbers} */\n\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_3__constants__[\"b\" /* numbers */];\n    }\n\n    /** @return {!MDCCheckboxAdapter} */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCCheckboxAdapter} */{\n          addClass: function addClass() /* className: string */{},\n          removeClass: function removeClass() /* className: string */{},\n          setNativeControlAttr: function setNativeControlAttr() /* attr: string, value: string */{},\n          removeNativeControlAttr: function removeNativeControlAttr() /* attr: string */{},\n          forceLayout: function forceLayout() {},\n          isAttachedToDOM: function isAttachedToDOM() /* boolean */{},\n          isIndeterminate: function isIndeterminate() /* boolean */{},\n          isChecked: function isChecked() /* boolean */{},\n          hasNativeControl: function hasNativeControl() /* boolean */{},\n          setNativeControlDisabled: function setNativeControlDisabled() /* disabled: boolean */{}\n        }\n      );\n    }\n  }]);\n\n  function MDCCheckboxFoundation(adapter) {\n    _classCallCheck(this, MDCCheckboxFoundation);\n\n    /** @private {string} */\n    var _this = _possibleConstructorReturn(this, (MDCCheckboxFoundation.__proto__ || Object.getPrototypeOf(MDCCheckboxFoundation)).call(this, _extends(MDCCheckboxFoundation.defaultAdapter, adapter)));\n\n    _this.currentCheckState_ = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    _this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    _this.animEndLatchTimer_ = 0;\n\n    /** @private {boolean} */\n    _this.enableAnimationEndHandler_ = false;\n    return _this;\n  }\n\n  /** @override */\n\n\n  _createClass(MDCCheckboxFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.currentCheckState_ = this.determineCheckState_();\n      this.updateAriaChecked_();\n      this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__[\"a\" /* cssClasses */].UPGRADED);\n    }\n\n    /** @override */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      clearTimeout(this.animEndLatchTimer_);\n    }\n\n    /** @param {boolean} disabled */\n\n  }, {\n    key: 'setDisabled',\n    value: function setDisabled(disabled) {\n      this.adapter_.setNativeControlDisabled(disabled);\n      if (disabled) {\n        this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_3__constants__[\"a\" /* cssClasses */].DISABLED);\n      } else {\n        this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_3__constants__[\"a\" /* cssClasses */].DISABLED);\n      }\n    }\n\n    /**\n     * Handles the animationend event for the checkbox\n     */\n\n  }, {\n    key: 'handleAnimationEnd',\n    value: function handleAnimationEnd() {\n      var _this2 = this;\n\n      if (!this.enableAnimationEndHandler_) return;\n\n      clearTimeout(this.animEndLatchTimer_);\n\n      this.animEndLatchTimer_ = setTimeout(function () {\n        _this2.adapter_.removeClass(_this2.currentAnimationClass_);\n        _this2.enableAnimationEndHandler_ = false;\n      }, __WEBPACK_IMPORTED_MODULE_3__constants__[\"b\" /* numbers */].ANIM_END_LATCH_MS);\n    }\n\n    /**\n     * Handles the change event for the checkbox\n     */\n\n  }, {\n    key: 'handleChange',\n    value: function handleChange() {\n      this.transitionCheckState_();\n    }\n\n    /** @private */\n\n  }, {\n    key: 'transitionCheckState_',\n    value: function transitionCheckState_() {\n      if (!this.adapter_.hasNativeControl()) {\n        return;\n      }\n      var oldState = this.currentCheckState_;\n      var newState = this.determineCheckState_();\n\n      if (oldState === newState) {\n        return;\n      }\n\n      this.updateAriaChecked_();\n\n      // Check to ensure that there isn't a previously existing animation class, in case for example\n      // the user interacted with the checkbox before the animation was finished.\n      if (this.currentAnimationClass_.length > 0) {\n        clearTimeout(this.animEndLatchTimer_);\n        this.adapter_.forceLayout();\n        this.adapter_.removeClass(this.currentAnimationClass_);\n      }\n\n      this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n      this.currentCheckState_ = newState;\n\n      // Check for parentNode so that animations are only run when the element is attached\n      // to the DOM.\n      if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n        this.adapter_.addClass(this.currentAnimationClass_);\n        this.enableAnimationEndHandler_ = true;\n      }\n    }\n\n    /**\n     * @return {string}\n     * @private\n     */\n\n  }, {\n    key: 'determineCheckState_',\n    value: function determineCheckState_() {\n      var TRANSITION_STATE_INDETERMINATE = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_INDETERMINATE,\n          TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_CHECKED,\n          TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_UNCHECKED;\n\n\n      if (this.adapter_.isIndeterminate()) {\n        return TRANSITION_STATE_INDETERMINATE;\n      }\n      return this.adapter_.isChecked() ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n    }\n\n    /**\n     * @param {string} oldState\n     * @param {string} newState\n     * @return {string}\n     */\n\n  }, {\n    key: 'getTransitionAnimationClass_',\n    value: function getTransitionAnimationClass_(oldState, newState) {\n      var TRANSITION_STATE_INIT = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_INIT,\n          TRANSITION_STATE_CHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_CHECKED,\n          TRANSITION_STATE_UNCHECKED = __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].TRANSITION_STATE_UNCHECKED;\n      var _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,\n          ANIM_UNCHECKED_CHECKED = _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,\n          ANIM_UNCHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,\n          ANIM_CHECKED_UNCHECKED = _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,\n          ANIM_CHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,\n          ANIM_INDETERMINATE_CHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,\n          ANIM_INDETERMINATE_UNCHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;\n\n\n      switch (oldState) {\n        case TRANSITION_STATE_INIT:\n          if (newState === TRANSITION_STATE_UNCHECKED) {\n            return '';\n          }\n        // fallthrough\n        case TRANSITION_STATE_UNCHECKED:\n          return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n        case TRANSITION_STATE_CHECKED:\n          return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n        // TRANSITION_STATE_INDETERMINATE\n        default:\n          return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n      }\n    }\n  }, {\n    key: 'updateAriaChecked_',\n    value: function updateAriaChecked_() {\n      // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n      if (this.adapter_.isIndeterminate()) {\n        this.adapter_.setNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].ARIA_CHECKED_ATTR, __WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].ARIA_CHECKED_INDETERMINATE_VALUE);\n      } else {\n        // The on/off state does not need to keep track of aria-checked, since\n        // the screenreader uses the checked property on the checkbox element.\n        this.adapter_.removeNativeControlAttr(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* strings */].ARIA_CHECKED_ATTR);\n      }\n    }\n  }]);\n\n  return MDCCheckboxFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCCheckboxFoundation);\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_selection_control_index__ = __webpack_require__(7);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\n\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nvar MDCCheckboxAdapter = function () {\n  function MDCCheckboxAdapter() {\n    _classCallCheck(this, MDCCheckboxAdapter);\n  }\n\n  _createClass(MDCCheckboxAdapter, [{\n    key: 'addClass',\n\n    /** @param {string} className */\n    value: function addClass(className) {}\n\n    /** @param {string} className */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(className) {}\n\n    /**\n     * Sets an attribute with a given value on the input element.\n     * @param {string} attr\n     * @param {string} value\n     */\n\n  }, {\n    key: 'setNativeControlAttr',\n    value: function setNativeControlAttr(attr, value) {}\n\n    /**\n     * Removes an attribute from the input element.\n     * @param {string} attr\n     */\n\n  }, {\n    key: 'removeNativeControlAttr',\n    value: function removeNativeControlAttr(attr) {}\n  }, {\n    key: 'forceLayout',\n    value: function forceLayout() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'isAttachedToDOM',\n    value: function isAttachedToDOM() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'isIndeterminate',\n    value: function isIndeterminate() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'isChecked',\n    value: function isChecked() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'hasNativeControl',\n    value: function hasNativeControl() {}\n\n    /** @param {boolean} disabled */\n\n  }, {\n    key: 'setNativeControlDisabled',\n    value: function setNativeControlDisabled(disabled) {}\n  }]);\n\n  return MDCCheckboxAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCCheckboxAdapter);\n\n/***/ }),\n\n/***/ 93:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return numbers; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @const {string} */\nvar ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nvar cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'\n};\n\n/** @enum {string} */\nvar strings = {\n  NATIVE_CONTROL_SELECTOR: '.' + ROOT + '__native-control',\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed'\n};\n\n/** @enum {number} */\nvar numbers = {\n  ANIM_END_LATCH_MS: 250\n};\n\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=mdc.checkbox.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/app/browser/node_modules/@material/checkbox/dist/mdc.checkbox.js\n");

/***/ }),

/***/ "./packages/app/browser/node_modules/@material/textfield/dist/mdc.textfield.js":
/*!*************************************************************************************!*\
  !*** ./packages/app/browser/node_modules/@material/textfield/dist/mdc.textfield.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n Material Components for the Web\n Copyright (c) 2019 Google Inc.\n License: MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 159);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @template A\n */\nvar MDCFoundation = function () {\n  _createClass(MDCFoundation, null, [{\n    key: \"cssClasses\",\n\n    /** @return enum{cssClasses} */\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports every\n      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n      return {};\n    }\n\n    /** @return enum{strings} */\n\n  }, {\n    key: \"strings\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n      return {};\n    }\n\n    /** @return enum{numbers} */\n\n  }, {\n    key: \"numbers\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n      return {};\n    }\n\n    /** @return {!Object} */\n\n  }, {\n    key: \"defaultAdapter\",\n    get: function get() {\n      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n      // validation.\n      return {};\n    }\n\n    /**\n     * @param {A=} adapter\n     */\n\n  }]);\n\n  function MDCFoundation() {\n    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, MDCFoundation);\n\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  _createClass(MDCFoundation, [{\n    key: \"init\",\n    value: function init() {\n      // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    }\n  }]);\n\n  return MDCFoundation;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCFoundation);\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n/**\n * @template F\n */\n\nvar MDCComponent = function () {\n  _createClass(MDCComponent, null, [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCComponent}\n     */\n    value: function attachTo(root) {\n      // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n      // returns an instantiated component with its root set to that element. Also note that in the cases of\n      // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n      // from getDefaultFoundation().\n      return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\" /* default */]());\n    }\n\n    /**\n     * @param {!Element} root\n     * @param {F=} foundation\n     * @param {...?} args\n     */\n\n  }]);\n\n  function MDCComponent(root) {\n    var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, MDCComponent);\n\n    /** @protected {!Element} */\n    this.root_ = root;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    this.initialize.apply(this, args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  _createClass(MDCComponent, [{\n    key: 'initialize',\n    value: function initialize() /* ...args */{}\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n\n    /**\n     * @return {!F} foundation\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      // Subclasses must override this method to return a properly configured foundation class for the\n      // component.\n      throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n    }\n  }, {\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n      // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n      // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n      // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      // Subclasses may implement this method to release any resources / deregister any listeners they have\n      // attached. An example of this might be deregistering a resize event from the window object.\n      this.foundation_.destroy();\n    }\n\n    /**\n     * Wrapper method to add an event listener to the component's root element. This is most useful when\n     * listening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(evtType, handler) {\n      this.root_.addEventListener(evtType, handler);\n    }\n\n    /**\n     * Wrapper method to remove an event listener to the component's root element. This is most useful when\n     * unlistening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(evtType, handler) {\n      this.root_.removeEventListener(evtType, handler);\n    }\n\n    /**\n     * Fires a cross-browser-compatible custom event from the component root of the given type,\n     * with the given data.\n     * @param {string} evtType\n     * @param {!Object} evtData\n     * @param {boolean=} shouldBubble\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(evtType, evtData) {\n      var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var evt = void 0;\n      if (typeof CustomEvent === 'function') {\n        evt = new CustomEvent(evtType, {\n          detail: evtData,\n          bubbles: shouldBubble\n        });\n      } else {\n        evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n      }\n\n      this.root_.dispatchEvent(evt);\n    }\n  }]);\n\n  return MDCComponent;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCComponent);\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCFloatingLabelAdapter = function () {\n  function MDCFloatingLabelAdapter() {\n    _classCallCheck(this, MDCFloatingLabelAdapter);\n  }\n\n  _createClass(MDCFloatingLabelAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the label element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the label element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Returns the width of the label element.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {}\n\n    /**\n     * Registers an event listener on the root element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the root element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n  }]);\n\n  return MDCFloatingLabelAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCFloatingLabelAdapter);\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextField\", function() { return MDCTextField; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__adapter__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__foundation__ = __webpack_require__(163);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__helper_text_index__ = __webpack_require__(164);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__character_counter_index__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__icon_index__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__material_floating_label_index__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__material_notched_outline_index__ = __webpack_require__(35);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_5__foundation__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldHelperText\", function() { return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldHelperTextFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldCharacterCounter\", function() { return __WEBPACK_IMPORTED_MODULE_8__character_counter_index__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldCharacterCounterFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_8__character_counter_index__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldIcon\", function() { return __WEBPACK_IMPORTED_MODULE_9__icon_index__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCTextFieldIconFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_9__icon_index__[\"b\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\n\n\n\n/* eslint-disable no-unused-vars */\n\n\n\n\n\n\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCComponent<!MDCTextFieldFoundation>}\n * @final\n */\n\nvar MDCTextField = function (_MDCComponent) {\n  _inherits(MDCTextField, _MDCComponent);\n\n  /**\n   * @param {...?} args\n   */\n  function MDCTextField() {\n    var _ref;\n\n    _classCallCheck(this, MDCTextField);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {?Element} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCTextField.__proto__ || Object.getPrototypeOf(MDCTextField)).call.apply(_ref, [this].concat(args)));\n\n    _this.input_;\n    /** @type {?MDCRipple} */\n    _this.ripple;\n    /** @private {?MDCLineRipple} */\n    _this.lineRipple_;\n    /** @private {?MDCTextFieldHelperText} */\n    _this.helperText_;\n    /** @private {?MDCTextFieldCharacterCounter} */\n    _this.characterCounter_;\n    /** @private {?MDCTextFieldIcon} */\n    _this.leadingIcon_;\n    /** @private {?MDCTextFieldIcon} */\n    _this.trailingIcon_;\n    /** @private {?MDCFloatingLabel} */\n    _this.label_;\n    /** @private {?MDCNotchedOutline} */\n    _this.outline_;\n    return _this;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextField}\n   */\n\n\n  _createClass(MDCTextField, [{\n    key: 'initialize',\n\n\n    /**\n     * @param {(function(!Element, MDCRippleFoundation): !MDCRipple)=} rippleFactory A function which\n     * creates a new MDCRipple.\n     * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which\n     * creates a new MDCLineRipple.\n     * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which\n     * creates a new MDCTextFieldHelperText.\n     * @param {(function(!Element): !MDCTextFieldCharacterCounter)=} characterCounterFactory A function which\n     * creates a new MDCTextFieldCharacterCounter.\n     * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which\n     * creates a new MDCTextFieldIcon.\n     * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which\n     * creates a new MDCFloatingLabel.\n     * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which\n     * creates a new MDCNotchedOutline.\n     */\n    value: function initialize() {\n      var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {\n        return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRipple\"](el, foundation);\n      };\n      var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__[\"MDCLineRipple\"](el);\n      };\n      var helperTextFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"a\" /* MDCTextFieldHelperText */](el);\n      };\n      var characterCounterFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_8__character_counter_index__[\"a\" /* MDCTextFieldCharacterCounter */](el);\n      };\n      var iconFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_9__icon_index__[\"a\" /* MDCTextFieldIcon */](el);\n      };\n\n      var _this2 = this;\n\n      var labelFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_10__material_floating_label_index__[\"MDCFloatingLabel\"](el);\n      };\n      var outlineFactory = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function (el) {\n        return new __WEBPACK_IMPORTED_MODULE_11__material_notched_outline_index__[\"MDCNotchedOutline\"](el);\n      };\n\n      this.input_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].INPUT_SELECTOR);\n      var labelElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].LABEL_SELECTOR);\n      if (labelElement) {\n        this.label_ = labelFactory(labelElement);\n      }\n      var lineRippleElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].LINE_RIPPLE_SELECTOR);\n      if (lineRippleElement) {\n        this.lineRipple_ = lineRippleFactory(lineRippleElement);\n      }\n      var outlineElement = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].OUTLINE_SELECTOR);\n      if (outlineElement) {\n        this.outline_ = outlineFactory(outlineElement);\n      }\n\n      // Helper text\n      var helperTextStrings = __WEBPACK_IMPORTED_MODULE_7__helper_text_index__[\"b\" /* MDCTextFieldHelperTextFoundation */].strings;\n      var nextElementSibling = this.root_.nextElementSibling;\n      var hasHelperLine = nextElementSibling && nextElementSibling.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* cssClasses */].HELPER_LINE);\n      var helperTextEl = hasHelperLine && nextElementSibling.querySelector(helperTextStrings.ROOT_SELECTOR);\n      if (helperTextEl) {\n        this.helperText_ = helperTextFactory(helperTextEl);\n      }\n\n      // Character counter\n      var characterCounterStrings = __WEBPACK_IMPORTED_MODULE_8__character_counter_index__[\"b\" /* MDCTextFieldCharacterCounterFoundation */].strings;\n      var characterCounterEl = this.root_.querySelector(characterCounterStrings.ROOT_SELECTOR);\n      // If character counter is not found in root element search in sibling element.\n      if (!characterCounterEl && hasHelperLine) {\n        characterCounterEl = nextElementSibling.querySelector(characterCounterStrings.ROOT_SELECTOR);\n      }\n\n      if (characterCounterEl) {\n        this.characterCounter_ = characterCounterFactory(characterCounterEl);\n      }\n\n      var iconElements = this.root_.querySelectorAll(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].ICON_SELECTOR);\n      if (iconElements.length > 0) {\n        if (iconElements.length > 1) {\n          // Has both icons.\n          this.leadingIcon_ = iconFactory(iconElements[0]);\n          this.trailingIcon_ = iconFactory(iconElements[1]);\n        } else {\n          if (this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* cssClasses */].WITH_LEADING_ICON)) {\n            this.leadingIcon_ = iconFactory(iconElements[0]);\n          } else {\n            this.trailingIcon_ = iconFactory(iconElements[0]);\n          }\n        }\n      }\n\n      this.ripple = null;\n      if (!this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* cssClasses */].TEXTAREA) && !this.root_.classList.contains(__WEBPACK_IMPORTED_MODULE_3__constants__[\"c\" /* cssClasses */].OUTLINED)) {\n        var MATCHES = Object(__WEBPACK_IMPORTED_MODULE_2__material_ripple_util__[\"getMatchesProperty\"])(HTMLElement.prototype);\n        var adapter = _extends(__WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRipple\"].createAdapter( /** @type {!RippleCapableSurface} */this), {\n          isSurfaceActive: function isSurfaceActive() {\n            return _this2.input_[MATCHES](':active');\n          },\n          registerInteractionHandler: function registerInteractionHandler(type, handler) {\n            return _this2.input_.addEventListener(type, handler);\n          },\n          deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n            return _this2.input_.removeEventListener(type, handler);\n          }\n        });\n        var foundation = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__[\"MDCRippleFoundation\"](adapter);\n        this.ripple = rippleFactory(this.root_, foundation);\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.ripple) {\n        this.ripple.destroy();\n      }\n      if (this.lineRipple_) {\n        this.lineRipple_.destroy();\n      }\n      if (this.helperText_) {\n        this.helperText_.destroy();\n      }\n      if (this.characterCounter_) {\n        this.characterCounter_.destroy();\n      }\n      if (this.leadingIcon_) {\n        this.leadingIcon_.destroy();\n      }\n      if (this.trailingIcon_) {\n        this.trailingIcon_.destroy();\n      }\n      if (this.label_) {\n        this.label_.destroy();\n      }\n      if (this.outline_) {\n        this.outline_.destroy();\n      }\n      _get(MDCTextField.prototype.__proto__ || Object.getPrototypeOf(MDCTextField.prototype), 'destroy', this).call(this);\n    }\n\n    /**\n     * Initiliazes the Text Field's internal state based on the environment's\n     * state.\n     */\n\n  }, {\n    key: 'initialSyncWithDom',\n    value: function initialSyncWithDom() {\n      this.disabled = this.input_.disabled;\n    }\n\n    /**\n     * @return {string} The value of the input.\n     */\n\n  }, {\n    key: 'focus',\n\n\n    /**\n     * Focuses the input element.\n     */\n    value: function focus() {\n      this.input_.focus();\n    }\n\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n\n  }, {\n    key: 'layout',\n    value: function layout() {\n      var openNotch = this.foundation_.shouldFloat;\n      this.foundation_.notchOutline(openNotch);\n    }\n\n    /**\n     * @return {!MDCTextFieldFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this3 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_5__foundation__[\"a\" /* default */](\n      /** @type {!MDCTextFieldAdapter} */_extends({\n        addClass: function addClass(className) {\n          return _this3.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this3.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this3.root_.classList.contains(className);\n        },\n        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {\n          return _this3.root_.addEventListener(evtType, handler);\n        },\n        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {\n          return _this3.root_.removeEventListener(evtType, handler);\n        },\n        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {\n          var getAttributesList = function getAttributesList(mutationsList) {\n            return mutationsList.map(function (mutation) {\n              return mutation.attributeName;\n            });\n          };\n          var observer = new MutationObserver(function (mutationsList) {\n            return handler(getAttributesList(mutationsList));\n          });\n          var targetNode = _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].INPUT_SELECTOR);\n          var config = { attributes: true };\n          observer.observe(targetNode, config);\n          return observer;\n        },\n        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {\n          return observer.disconnect();\n        },\n        isFocused: function isFocused() {\n          return document.activeElement === _this3.root_.querySelector(__WEBPACK_IMPORTED_MODULE_3__constants__[\"e\" /* strings */].INPUT_SELECTOR);\n        }\n      }, this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_()), this.getFoundationMap_());\n    }\n\n    /**\n     * @return {!{\n     *   shakeLabel: function(boolean): undefined,\n     *   floatLabel: function(boolean): undefined,\n     *   hasLabel: function(): boolean,\n     *   getLabelWidth: function(): number,\n     * }}\n     */\n\n  }, {\n    key: 'getLabelAdapterMethods_',\n    value: function getLabelAdapterMethods_() {\n      var _this4 = this;\n\n      return {\n        shakeLabel: function shakeLabel(shouldShake) {\n          return _this4.label_.shake(shouldShake);\n        },\n        floatLabel: function floatLabel(shouldFloat) {\n          return _this4.label_.float(shouldFloat);\n        },\n        hasLabel: function hasLabel() {\n          return !!_this4.label_;\n        },\n        getLabelWidth: function getLabelWidth() {\n          return _this4.label_ ? _this4.label_.getWidth() : 0;\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   activateLineRipple: function(): undefined,\n     *   deactivateLineRipple: function(): undefined,\n     *   setLineRippleTransformOrigin: function(number): undefined,\n     * }}\n     */\n\n  }, {\n    key: 'getLineRippleAdapterMethods_',\n    value: function getLineRippleAdapterMethods_() {\n      var _this5 = this;\n\n      return {\n        activateLineRipple: function activateLineRipple() {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.activate();\n          }\n        },\n        deactivateLineRipple: function deactivateLineRipple() {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.deactivate();\n          }\n        },\n        setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.setRippleCenter(normalizedX);\n          }\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   notchOutline: function(number, boolean): undefined,\n     *   hasOutline: function(): boolean,\n     * }}\n     */\n\n  }, {\n    key: 'getOutlineAdapterMethods_',\n    value: function getOutlineAdapterMethods_() {\n      var _this6 = this;\n\n      return {\n        notchOutline: function notchOutline(labelWidth) {\n          return _this6.outline_.notch(labelWidth);\n        },\n        closeOutline: function closeOutline() {\n          return _this6.outline_.closeNotch();\n        },\n        hasOutline: function hasOutline() {\n          return !!_this6.outline_;\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   registerInputInteractionHandler: function(string, function()): undefined,\n     *   deregisterInputInteractionHandler: function(string, function()): undefined,\n     *   getNativeInput: function(): ?Element,\n     * }}\n     */\n\n  }, {\n    key: 'getInputAdapterMethods_',\n    value: function getInputAdapterMethods_() {\n      var _this7 = this;\n\n      return {\n        registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {\n          return _this7.input_.addEventListener(evtType, handler);\n        },\n        deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {\n          return _this7.input_.removeEventListener(evtType, handler);\n        },\n        getNativeInput: function getNativeInput() {\n          return _this7.input_;\n        }\n      };\n    }\n\n    /**\n     * Returns a map of all subcomponents to subfoundations.\n     * @return {!FoundationMapType}\n     */\n\n  }, {\n    key: 'getFoundationMap_',\n    value: function getFoundationMap_() {\n      return {\n        helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n        characterCounter: this.characterCounter_ ? this.characterCounter_.foundation : undefined,\n        leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,\n        trailingIcon: this.trailingIcon_ ? this.trailingIcon_.foundation : undefined\n      };\n    }\n  }, {\n    key: 'value',\n    get: function get() {\n      return this.foundation_.getValue();\n    }\n\n    /**\n     * @param {string} value The value to set on the input.\n     */\n    ,\n    set: function set(value) {\n      this.foundation_.setValue(value);\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is disabled.\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.foundation_.isDisabled();\n    }\n\n    /**\n     * @param {boolean} disabled Sets the Text Field disabled or enabled.\n     */\n    ,\n    set: function set(disabled) {\n      this.foundation_.setDisabled(disabled);\n    }\n\n    /**\n     * @return {boolean} valid True if the Text Field is valid.\n     */\n\n  }, {\n    key: 'valid',\n    get: function get() {\n      return this.foundation_.isValid();\n    }\n\n    /**\n     * @param {boolean} valid Sets the Text Field valid or invalid.\n     */\n    ,\n    set: function set(valid) {\n      this.foundation_.setValid(valid);\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is required.\n     */\n\n  }, {\n    key: 'required',\n    get: function get() {\n      return this.input_.required;\n    }\n\n    /**\n     * @param {boolean} required Sets the Text Field to required.\n     */\n    ,\n    set: function set(required) {\n      this.input_.required = required;\n    }\n\n    /**\n     * @return {string} The input element's validation pattern.\n     */\n\n  }, {\n    key: 'pattern',\n    get: function get() {\n      return this.input_.pattern;\n    }\n\n    /**\n     * @param {string} pattern Sets the input element's validation pattern.\n     */\n    ,\n    set: function set(pattern) {\n      this.input_.pattern = pattern;\n    }\n\n    /**\n     * @return {number} The input element's minLength.\n     */\n\n  }, {\n    key: 'minLength',\n    get: function get() {\n      return this.input_.minLength;\n    }\n\n    /**\n     * @param {number} minLength Sets the input element's minLength.\n     */\n    ,\n    set: function set(minLength) {\n      this.input_.minLength = minLength;\n    }\n\n    /**\n     * @return {number} The input element's maxLength.\n     */\n\n  }, {\n    key: 'maxLength',\n    get: function get() {\n      return this.input_.maxLength;\n    }\n\n    /**\n     * @param {number} maxLength Sets the input element's maxLength.\n     */\n    ,\n    set: function set(maxLength) {\n      // Chrome throws exception if maxLength is set < 0\n      if (maxLength < 0) {\n        this.input_.removeAttribute('maxLength');\n      } else {\n        this.input_.maxLength = maxLength;\n      }\n    }\n\n    /**\n     * @return {string} The input element's min.\n     */\n\n  }, {\n    key: 'min',\n    get: function get() {\n      return this.input_.min;\n    }\n\n    /**\n     * @param {string} min Sets the input element's min.\n     */\n    ,\n    set: function set(min) {\n      this.input_.min = min;\n    }\n\n    /**\n     * @return {string} The input element's max.\n     */\n\n  }, {\n    key: 'max',\n    get: function get() {\n      return this.input_.max;\n    }\n\n    /**\n     * @param {string} max Sets the input element's max.\n     */\n    ,\n    set: function set(max) {\n      this.input_.max = max;\n    }\n\n    /**\n     * @return {string} The input element's step.\n     */\n\n  }, {\n    key: 'step',\n    get: function get() {\n      return this.input_.step;\n    }\n\n    /**\n     * @param {string} step Sets the input element's step.\n     */\n    ,\n    set: function set(step) {\n      this.input_.step = step;\n    }\n\n    /**\n     * Sets the helper text element content.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'helperTextContent',\n    set: function set(content) {\n      this.foundation_.setHelperTextContent(content);\n    }\n\n    /**\n     * Sets the aria label of the leading icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'leadingIconAriaLabel',\n    set: function set(label) {\n      this.foundation_.setLeadingIconAriaLabel(label);\n    }\n\n    /**\n     * Sets the text content of the leading icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'leadingIconContent',\n    set: function set(content) {\n      this.foundation_.setLeadingIconContent(content);\n    }\n\n    /**\n     * Sets the aria label of the trailing icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'trailingIconAriaLabel',\n    set: function set(label) {\n      this.foundation_.setTrailingIconAriaLabel(label);\n    }\n\n    /**\n     * Sets the text content of the trailing icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'trailingIconContent',\n    set: function set(content) {\n      this.foundation_.setTrailingIconContent(content);\n    }\n\n    /**\n     * Enables or disables the use of native validation. Use this for custom validation.\n     * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n     */\n\n  }, {\n    key: 'useNativeValidation',\n    set: function set(useNativeValidation) {\n      this.foundation_.setUseNativeValidation(useNativeValidation);\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new MDCTextField(root);\n    }\n  }]);\n\n  return MDCTextField;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCFloatingLabel\", function() { return MDCFloatingLabel; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(26);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCFloatingLabelFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCFloatingLabelFoundation>}\n * @final\n */\n\nvar MDCFloatingLabel = function (_MDCComponent) {\n  _inherits(MDCFloatingLabel, _MDCComponent);\n\n  function MDCFloatingLabel() {\n    _classCallCheck(this, MDCFloatingLabel);\n\n    return _possibleConstructorReturn(this, (MDCFloatingLabel.__proto__ || Object.getPrototypeOf(MDCFloatingLabel)).apply(this, arguments));\n  }\n\n  _createClass(MDCFloatingLabel, [{\n    key: 'shake',\n\n\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param {boolean} shouldShake styles the label to shake by adding shake class\n     * if true, otherwise will stop shaking by removing shake class.\n     */\n    value: function shake(shouldShake) {\n      this.foundation_.shake(shouldShake);\n    }\n\n    /**\n     * Styles label to float/dock.\n     * @param {boolean} shouldFloat styles the label to float by adding float class\n     * if true, otherwise docks the label by removing the float class.\n     */\n\n  }, {\n    key: 'float',\n    value: function float(shouldFloat) {\n      this.foundation_.float(shouldFloat);\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this.foundation_.getWidth();\n    }\n\n    /**\n     * @return {!MDCFloatingLabelFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */]({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        getWidth: function getWidth() {\n          return _this2.root_.scrollWidth;\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        }\n      });\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCFloatingLabel}\n     */\n    value: function attachTo(root) {\n      return new MDCFloatingLabel(root);\n    }\n  }]);\n\n  return MDCFloatingLabel;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 160:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  ROOT: 'mdc-text-field-helper-text',\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg'\n};\n\n/** @enum {string} */\nvar strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n  ROOT_SELECTOR: '.' + cssClasses.ROOT\n};\n\n\n\n/***/ }),\n\n/***/ 161:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  ROOT: 'mdc-text-field-character-counter'\n};\n\n/** @enum {string} */\nvar strings = {\n  ROOT_SELECTOR: '.' + cssClasses.ROOT\n};\n\n\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return strings; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button'\n};\n\n\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helper_text_foundation__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__character_counter_foundation__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icon_foundation__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__adapter__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__constants__ = __webpack_require__(83);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n\n\n/* eslint-enable no-unused-vars */\n\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\n\nvar MDCTextFieldFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldFoundation, [{\n    key: 'shouldShake',\n\n\n    /** @return {boolean} */\n    get: function get() {\n      return !this.isValid() && !this.isFocused_ && !!this.getValue();\n    }\n\n    /**\n     * @return {boolean}\n     * @private\n     */\n\n  }, {\n    key: 'shouldAlwaysFloat_',\n    get: function get() {\n      var type = this.getNativeInput_().type;\n      return __WEBPACK_IMPORTED_MODULE_5__constants__[\"a\" /* ALWAYS_FLOAT_TYPES */].indexOf(type) >= 0;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'shouldFloat',\n    get: function get() {\n      return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n    }\n\n    /**\n     * {@see MDCTextFieldAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldAdapter}\n     */\n\n  }], [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_5__constants__[\"c\" /* cssClasses */];\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_5__constants__[\"e\" /* strings */];\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_5__constants__[\"d\" /* numbers */];\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {},\n          deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {},\n          registerInputInteractionHandler: function registerInputInteractionHandler() {},\n          deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {},\n          registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {},\n          deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {},\n          getNativeInput: function getNativeInput() {},\n          isFocused: function isFocused() {},\n          activateLineRipple: function activateLineRipple() {},\n          deactivateLineRipple: function deactivateLineRipple() {},\n          setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {},\n          shakeLabel: function shakeLabel() {},\n          floatLabel: function floatLabel() {},\n          hasLabel: function hasLabel() {},\n          getLabelWidth: function getLabelWidth() {},\n          hasOutline: function hasOutline() {},\n          notchOutline: function notchOutline() {},\n          closeOutline: function closeOutline() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldAdapter} adapter\n     * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n     */\n\n  }]);\n\n  function MDCTextFieldFoundation(adapter) {\n    var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /** @type {!FoundationMapType} */{};\n\n    _classCallCheck(this, MDCTextFieldFoundation);\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCTextFieldFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldFoundation)).call(this, _extends(MDCTextFieldFoundation.defaultAdapter, adapter)));\n\n    _this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldCharacterCounterFoundation|undefined} */\n    _this.characterCounter_ = foundationMap.characterCounter;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    _this.leadingIcon_ = foundationMap.leadingIcon;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    _this.trailingIcon_ = foundationMap.trailingIcon;\n\n    /** @private {boolean} */\n    _this.isFocused_ = false;\n    /** @private {boolean} */\n    _this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    _this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    _this.isValid_ = true;\n\n    /** @private {boolean} */\n    _this.useNativeValidation_ = true;\n\n    /** @private {function(): undefined} */\n    _this.inputFocusHandler_ = function () {\n      return _this.activateFocus();\n    };\n    /** @private {function(): undefined} */\n    _this.inputBlurHandler_ = function () {\n      return _this.deactivateFocus();\n    };\n    /** @private {function(): undefined} */\n    _this.inputInputHandler_ = function () {\n      return _this.handleInput();\n    };\n    /** @private {function(!Event): undefined} */\n    _this.setPointerXOffset_ = function (evt) {\n      return _this.setTransformOrigin(evt);\n    };\n    /** @private {function(!Event): undefined} */\n    _this.textFieldInteractionHandler_ = function () {\n      return _this.handleTextFieldInteraction();\n    };\n    /** @private {function(!Array): undefined} */\n    _this.validationAttributeChangeHandler_ = function (attributesList) {\n      return _this.handleValidationAttributeChange(attributesList);\n    };\n\n    /** @private {!MutationObserver} */\n    _this.validationObserver_;\n    return _this;\n  }\n\n  _createClass(MDCTextFieldFoundation, [{\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      if (this.adapter_.isFocused()) {\n        this.inputFocusHandler_();\n      } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n        this.notchOutline(true);\n        this.adapter_.floatLabel(true);\n      }\n\n      this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n      this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n      this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n      ['mousedown', 'touchstart'].forEach(function (evtType) {\n        _this2.adapter_.registerInputInteractionHandler(evtType, _this2.setPointerXOffset_);\n      });\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this2.adapter_.registerTextFieldInteractionHandler(evtType, _this2.textFieldInteractionHandler_);\n      });\n      this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n      this.setCharacterCounter_(this.getValue().length);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n      this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n      this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n      ['mousedown', 'touchstart'].forEach(function (evtType) {\n        _this3.adapter_.deregisterInputInteractionHandler(evtType, _this3.setPointerXOffset_);\n      });\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this3.adapter_.deregisterTextFieldInteractionHandler(evtType, _this3.textFieldInteractionHandler_);\n      });\n      this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n    }\n\n    /**\n     * Handles user interactions with the Text Field.\n     */\n\n  }, {\n    key: 'handleTextFieldInteraction',\n    value: function handleTextFieldInteraction() {\n      if (this.adapter_.getNativeInput().disabled) {\n        return;\n      }\n      this.receivedUserInput_ = true;\n    }\n\n    /**\n     * Handles validation attribute changes\n     * @param {!Array<string>} attributesList\n     */\n\n  }, {\n    key: 'handleValidationAttributeChange',\n    value: function handleValidationAttributeChange(attributesList) {\n      var _this4 = this;\n\n      attributesList.some(function (attributeName) {\n        if (__WEBPACK_IMPORTED_MODULE_5__constants__[\"b\" /* VALIDATION_ATTR_WHITELIST */].indexOf(attributeName) > -1) {\n          _this4.styleValidity_(true);\n          return true;\n        }\n      });\n\n      if (attributesList.indexOf('maxlength') > -1) {\n        this.setCharacterCounter_(this.getValue().length);\n      }\n    }\n\n    /**\n     * Opens/closes the notched outline.\n     * @param {boolean} openNotch\n     */\n\n  }, {\n    key: 'notchOutline',\n    value: function notchOutline(openNotch) {\n      if (!this.adapter_.hasOutline()) {\n        return;\n      }\n\n      if (openNotch) {\n        var isDense = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_5__constants__[\"c\" /* cssClasses */].DENSE);\n        var labelScale = isDense ? __WEBPACK_IMPORTED_MODULE_5__constants__[\"d\" /* numbers */].DENSE_LABEL_SCALE : __WEBPACK_IMPORTED_MODULE_5__constants__[\"d\" /* numbers */].LABEL_SCALE;\n        var labelWidth = this.adapter_.getLabelWidth() * labelScale;\n        this.adapter_.notchOutline(labelWidth);\n      } else {\n        this.adapter_.closeOutline();\n      }\n    }\n\n    /**\n     * Activates the text field focus state.\n     */\n\n  }, {\n    key: 'activateFocus',\n    value: function activateFocus() {\n      this.isFocused_ = true;\n      this.styleFocused_(this.isFocused_);\n      this.adapter_.activateLineRipple();\n      if (this.adapter_.hasLabel()) {\n        this.notchOutline(this.shouldFloat);\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.adapter_.shakeLabel(this.shouldShake);\n      }\n      if (this.helperText_) {\n        this.helperText_.showToScreenReader();\n      }\n    }\n\n    /**\n     * Sets the line ripple's transform origin, so that the line ripple activate\n     * animation will animate out from the user's click location.\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'setTransformOrigin',\n    value: function setTransformOrigin(evt) {\n      var targetEvent = void 0;\n      if (evt.touches) {\n        targetEvent = evt.touches[0];\n      } else {\n        targetEvent = evt;\n      }\n      var targetClientRect = targetEvent.target.getBoundingClientRect();\n      var normalizedX = targetEvent.clientX - targetClientRect.left;\n      this.adapter_.setLineRippleTransformOrigin(normalizedX);\n    }\n\n    /**\n     * Handles input change of text input and text area.\n     */\n\n  }, {\n    key: 'handleInput',\n    value: function handleInput() {\n      this.autoCompleteFocus();\n      this.setCharacterCounter_(this.getValue().length);\n    }\n\n    /**\n     * Activates the Text Field's focus state in cases when the input value\n     * changes without user input (e.g. programatically).\n     */\n\n  }, {\n    key: 'autoCompleteFocus',\n    value: function autoCompleteFocus() {\n      if (!this.receivedUserInput_) {\n        this.activateFocus();\n      }\n    }\n\n    /**\n     * Deactivates the Text Field's focus state.\n     */\n\n  }, {\n    key: 'deactivateFocus',\n    value: function deactivateFocus() {\n      this.isFocused_ = false;\n      this.adapter_.deactivateLineRipple();\n      var isValid = this.isValid();\n      this.styleValidity_(isValid);\n      this.styleFocused_(this.isFocused_);\n      if (this.adapter_.hasLabel()) {\n        this.notchOutline(this.shouldFloat);\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.adapter_.shakeLabel(this.shouldShake);\n      }\n      if (!this.shouldFloat) {\n        this.receivedUserInput_ = false;\n      }\n    }\n\n    /**\n     * @return {string} The value of the input Element.\n     */\n\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      return this.getNativeInput_().value;\n    }\n\n    /**\n     * @param {string} value The value to set on the input Element.\n     */\n\n  }, {\n    key: 'setValue',\n    value: function setValue(value) {\n      // Prevent Safari from moving the caret to the end of the input when the value has not changed.\n      if (this.getValue() !== value) {\n        this.getNativeInput_().value = value;\n      }\n      var isValid = this.isValid();\n      this.styleValidity_(isValid);\n      if (this.adapter_.hasLabel()) {\n        this.notchOutline(this.shouldFloat);\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.adapter_.shakeLabel(this.shouldShake);\n      }\n    }\n\n    /**\n     * @return {boolean} If a custom validity is set, returns that value.\n     *     Otherwise, returns the result of native validity checks.\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      return this.useNativeValidation_ ? this.isNativeInputValid_() : this.isValid_;\n    }\n\n    /**\n     * @param {boolean} isValid Sets the validity state of the Text Field.\n     */\n\n  }, {\n    key: 'setValid',\n    value: function setValid(isValid) {\n      this.isValid_ = isValid;\n      this.styleValidity_(isValid);\n\n      var shouldShake = !isValid && !this.isFocused_;\n      if (this.adapter_.hasLabel()) {\n        this.adapter_.shakeLabel(shouldShake);\n      }\n    }\n\n    /**\n     * Enables or disables the use of native validation. Use this for custom validation.\n     * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n     */\n\n  }, {\n    key: 'setUseNativeValidation',\n    value: function setUseNativeValidation(useNativeValidation) {\n      this.useNativeValidation_ = useNativeValidation;\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is disabled.\n     */\n\n  }, {\n    key: 'isDisabled',\n    value: function isDisabled() {\n      return this.getNativeInput_().disabled;\n    }\n\n    /**\n     * @param {boolean} disabled Sets the text-field disabled or enabled.\n     */\n\n  }, {\n    key: 'setDisabled',\n    value: function setDisabled(disabled) {\n      this.getNativeInput_().disabled = disabled;\n      this.styleDisabled_(disabled);\n    }\n\n    /**\n     * @param {string} content Sets the content of the helper text.\n     */\n\n  }, {\n    key: 'setHelperTextContent',\n    value: function setHelperTextContent(content) {\n      if (this.helperText_) {\n        this.helperText_.setContent(content);\n      }\n    }\n\n    /**\n     * Sets character counter values that shows characters used and the total character limit.\n     * @param {number} currentLength\n     * @private\n     */\n\n  }, {\n    key: 'setCharacterCounter_',\n    value: function setCharacterCounter_(currentLength) {\n      if (!this.characterCounter_) return;\n\n      var maxLength = this.getNativeInput_().maxLength;\n      if (maxLength === -1) {\n        throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n      }\n\n      this.characterCounter_.setCounterValue(currentLength, maxLength);\n    }\n\n    /**\n     * Sets the aria label of the leading icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'setLeadingIconAriaLabel',\n    value: function setLeadingIconAriaLabel(label) {\n      if (this.leadingIcon_) {\n        this.leadingIcon_.setAriaLabel(label);\n      }\n    }\n\n    /**\n     * Sets the text content of the leading icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'setLeadingIconContent',\n    value: function setLeadingIconContent(content) {\n      if (this.leadingIcon_) {\n        this.leadingIcon_.setContent(content);\n      }\n    }\n\n    /**\n     * Sets the aria label of the trailing icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'setTrailingIconAriaLabel',\n    value: function setTrailingIconAriaLabel(label) {\n      if (this.trailingIcon_) {\n        this.trailingIcon_.setAriaLabel(label);\n      }\n    }\n\n    /**\n     * Sets the text content of the trailing icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'setTrailingIconContent',\n    value: function setTrailingIconContent(content) {\n      if (this.trailingIcon_) {\n        this.trailingIcon_.setContent(content);\n      }\n    }\n\n    /**\n     * @return {boolean} True if the Text Field input fails in converting the\n     *     user-supplied value.\n     * @private\n     */\n\n  }, {\n    key: 'isBadInput_',\n    value: function isBadInput_() {\n      return this.getNativeInput_().validity.badInput;\n    }\n\n    /**\n     * @return {boolean} The result of native validity checking\n     *     (ValidityState.valid).\n     */\n\n  }, {\n    key: 'isNativeInputValid_',\n    value: function isNativeInputValid_() {\n      return this.getNativeInput_().validity.valid;\n    }\n\n    /**\n     * Styles the component based on the validity state.\n     * @param {boolean} isValid\n     * @private\n     */\n\n  }, {\n    key: 'styleValidity_',\n    value: function styleValidity_(isValid) {\n      var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n\n      if (isValid) {\n        this.adapter_.removeClass(INVALID);\n      } else {\n        this.adapter_.addClass(INVALID);\n      }\n      if (this.helperText_) {\n        this.helperText_.setValidity(isValid);\n      }\n    }\n\n    /**\n     * Styles the component based on the focused state.\n     * @param {boolean} isFocused\n     * @private\n     */\n\n  }, {\n    key: 'styleFocused_',\n    value: function styleFocused_(isFocused) {\n      var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n\n      if (isFocused) {\n        this.adapter_.addClass(FOCUSED);\n      } else {\n        this.adapter_.removeClass(FOCUSED);\n      }\n    }\n\n    /**\n     * Styles the component based on the disabled state.\n     * @param {boolean} isDisabled\n     * @private\n     */\n\n  }, {\n    key: 'styleDisabled_',\n    value: function styleDisabled_(isDisabled) {\n      var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,\n          DISABLED = _MDCTextFieldFoundati.DISABLED,\n          INVALID = _MDCTextFieldFoundati.INVALID;\n\n      if (isDisabled) {\n        this.adapter_.addClass(DISABLED);\n        this.adapter_.removeClass(INVALID);\n      } else {\n        this.adapter_.removeClass(DISABLED);\n      }\n\n      if (this.leadingIcon_) {\n        this.leadingIcon_.setDisabled(isDisabled);\n      }\n\n      if (this.trailingIcon_) {\n        this.trailingIcon_.setDisabled(isDisabled);\n      }\n    }\n\n    /**\n     * @return {!Element|!NativeInputType} The native text input from the\n     * host environment, or a dummy if none exists.\n     * @private\n     */\n\n  }, {\n    key: 'getNativeInput_',\n    value: function getNativeInput_() {\n      return this.adapter_.getNativeInput() ||\n      /** @type {!NativeInputType} */{\n        value: '',\n        disabled: false,\n        validity: {\n          badInput: false,\n          valid: true\n        }\n      };\n    }\n  }]);\n\n  return MDCTextFieldFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCTextFieldFoundation);\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDCTextFieldHelperText; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(60);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}\n * @final\n */\n\nvar MDCTextFieldHelperText = function (_MDCComponent) {\n  _inherits(MDCTextFieldHelperText, _MDCComponent);\n\n  function MDCTextFieldHelperText() {\n    _classCallCheck(this, MDCTextFieldHelperText);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldHelperText.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperText)).apply(this, arguments));\n  }\n\n  _createClass(MDCTextFieldHelperText, [{\n    key: 'getDefaultFoundation',\n\n\n    /**\n     * @return {!MDCTextFieldHelperTextFoundation}\n     */\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */]( /** @type {!MDCTextFieldHelperTextAdapter} */_extends({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this2.root_.classList.contains(className);\n        },\n        setAttr: function setAttr(attr, value) {\n          return _this2.root_.setAttribute(attr, value);\n        },\n        removeAttr: function removeAttr(attr) {\n          return _this2.root_.removeAttribute(attr);\n        },\n        setContent: function setContent(content) {\n          _this2.root_.textContent = content;\n        }\n      }));\n    }\n  }, {\n    key: 'foundation',\n\n\n    /**\n     * @return {!MDCTextFieldHelperTextFoundation}\n     */\n    get: function get() {\n      return this.foundation_;\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCTextFieldHelperText}\n     */\n    value: function attachTo(root) {\n      return new MDCTextFieldHelperText(root);\n    }\n  }]);\n\n  return MDCTextFieldHelperText;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDCTextFieldCharacterCounter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(61);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCTextFieldCharacterCounterFoundation>}\n * @final\n */\n\nvar MDCTextFieldCharacterCounter = function (_MDCComponent) {\n  _inherits(MDCTextFieldCharacterCounter, _MDCComponent);\n\n  function MDCTextFieldCharacterCounter() {\n    _classCallCheck(this, MDCTextFieldCharacterCounter);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldCharacterCounter.__proto__ || Object.getPrototypeOf(MDCTextFieldCharacterCounter)).apply(this, arguments));\n  }\n\n  _createClass(MDCTextFieldCharacterCounter, [{\n    key: 'getDefaultFoundation',\n\n\n    /**\n     * @return {!MDCTextFieldCharacterCounterFoundation}\n     */\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */](\n      /** @type {!MDCTextFieldCharacterCounterAdapter} */_extends({\n        setContent: function setContent(content) {\n          _this2.root_.textContent = content;\n        }\n      }));\n    }\n  }, {\n    key: 'foundation',\n\n\n    /**\n     * @return {!MDCTextFieldCharacterCounterFoundation}\n     */\n    get: function get() {\n      return this.foundation_;\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCTextFieldCharacterCounter}\n     */\n    value: function attachTo(root) {\n      return new MDCTextFieldCharacterCounter(root);\n    }\n  }]);\n\n  return MDCTextFieldCharacterCounter;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDCTextFieldIcon; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(62);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCTextFieldIconFoundation>}\n * @final\n */\n\nvar MDCTextFieldIcon = function (_MDCComponent) {\n  _inherits(MDCTextFieldIcon, _MDCComponent);\n\n  function MDCTextFieldIcon() {\n    _classCallCheck(this, MDCTextFieldIcon);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldIcon.__proto__ || Object.getPrototypeOf(MDCTextFieldIcon)).apply(this, arguments));\n  }\n\n  _createClass(MDCTextFieldIcon, [{\n    key: 'getDefaultFoundation',\n\n\n    /**\n     * @return {!MDCTextFieldIconFoundation}\n     */\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */]( /** @type {!MDCTextFieldIconAdapter} */_extends({\n        getAttr: function getAttr(attr) {\n          return _this2.root_.getAttribute(attr);\n        },\n        setAttr: function setAttr(attr, value) {\n          return _this2.root_.setAttribute(attr, value);\n        },\n        removeAttr: function removeAttr(attr) {\n          return _this2.root_.removeAttribute(attr);\n        },\n        setContent: function setContent(content) {\n          _this2.root_.textContent = content;\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        },\n        notifyIconAction: function notifyIconAction() {\n          return _this2.emit(__WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */].strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */);\n        }\n      }));\n    }\n  }, {\n    key: 'foundation',\n\n\n    /**\n     * @return {!MDCTextFieldIconFoundation}\n     */\n    get: function get() {\n      return this.foundation_;\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCTextFieldIcon}\n     */\n    value: function attachTo(root) {\n      return new MDCTextFieldIcon(root);\n    }\n  }]);\n\n  return MDCTextFieldIcon;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportsCssVariables\", function() { return supportsCssVariables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyPassive\", function() { return applyPassive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMatchesProperty\", function() { return getMatchesProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNormalizedEventCoords\", function() { return getNormalizedEventCoords; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nvar supportsCssVariables_ = void 0;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nvar supportsPassive_ = void 0;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  var document = windowObj.document;\n  var node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  var computedStyle = windowObj.getComputedStyle(node);\n  var hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj) {\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  var supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  var explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  var weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|!EventListenerOptions}\n */\nfunction applyPassive() {\n  var globalObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n  var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (supportsPassive_ === undefined || forceRefresh) {\n    var isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, { get passive() {\n          isSupported = true;\n          return isSupported;\n        } });\n    } catch (e) {}\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? /** @type {!EventListenerOptions} */{ passive: true } : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {string}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  /**\n   * Order is important because we return the first existing method we find.\n   * Do not change the order of the items in the below array.\n   */\n  var matchesMethods = ['matches', 'webkitMatchesSelector', 'msMatchesSelector'];\n  var method = 'matches';\n  for (var i = 0; i < matchesMethods.length; i++) {\n    var matchesMethod = matchesMethods[i];\n    if (matchesMethod in HTMLElementPrototype) {\n      method = matchesMethod;\n      break;\n    }\n  }\n\n  return method;\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  var x = pageOffset.x,\n      y = pageOffset.y;\n\n  var documentX = x + clientRect.left;\n  var documentY = y + clientRect.top;\n\n  var normalizedX = void 0;\n  var normalizedY = void 0;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    ev = /** @type {!TouchEvent} */ev;\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    ev = /** @type {!MouseEvent} */ev;\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return { x: normalizedX, y: normalizedY };\n}\n\n\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCLineRippleAdapter = function () {\n  function MDCLineRippleAdapter() {\n    _classCallCheck(this, MDCLineRippleAdapter);\n  }\n\n  _createClass(MDCLineRippleAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the line ripple element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the line ripple element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(className) {}\n\n    /**\n     * Sets the style property with propertyName to value on the root element.\n     * @param {string} propertyName\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(propertyName, value) {}\n\n    /**\n     * Registers an event listener on the line ripple element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the line ripple element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterEventHandler\",\n    value: function deregisterEventHandler(evtType, handler) {}\n  }]);\n\n  return MDCLineRippleAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCLineRippleAdapter);\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCNotchedOutlineAdapter = function () {\n  function MDCNotchedOutlineAdapter() {\n    _classCallCheck(this, MDCNotchedOutlineAdapter);\n  }\n\n  _createClass(MDCNotchedOutlineAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the root element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the root element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Sets the width style property of the notch element.\n     * @param {number} width\n     */\n\n  }, {\n    key: \"setNotchWidthProperty\",\n    value: function setNotchWidthProperty(width) {}\n\n    /**\n     * Removes the width style property from the notch element.\n     */\n\n  }, {\n    key: \"removeNotchWidthProperty\",\n    value: function removeNotchWidthProperty() {}\n  }]);\n\n  return MDCNotchedOutlineAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCNotchedOutlineAdapter);\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return numbers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return strings; });\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar strings = {\n  NOTCH_ELEMENT_SELECTOR: '.mdc-notched-outline__notch'\n};\n\n/** @enum {number} */\nvar numbers = {\n  // This should stay in sync with $mdc-notched-outline-padding * 2.\n  NOTCH_ELEMENT_PADDING: 8\n};\n\n/** @enum {string} */\nvar cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n  OUTLINE_UPGRADED: 'mdc-notched-outline--upgraded',\n  NO_LABEL: 'mdc-notched-outline--no-label'\n};\n\n\n\n/***/ }),\n\n/***/ 26:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(27);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\n\nvar MDCFloatingLabelFoundation = function (_MDCFoundation) {\n  _inherits(MDCFloatingLabelFoundation, _MDCFoundation);\n\n  _createClass(MDCFloatingLabelFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n\n    /**\n     * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCFloatingLabelAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCFloatingLabelAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          getWidth: function getWidth() {},\n          registerInteractionHandler: function registerInteractionHandler() {},\n          deregisterInteractionHandler: function deregisterInteractionHandler() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCFloatingLabelAdapter} adapter\n     */\n\n  }]);\n\n  function MDCFloatingLabelFoundation(adapter) {\n    _classCallCheck(this, MDCFloatingLabelFoundation);\n\n    /** @private {function(!Event): undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, _extends(MDCFloatingLabelFoundation.defaultAdapter, adapter)));\n\n    _this.shakeAnimationEndHandler_ = function () {\n      return _this.handleShakeAnimationEnd_();\n    };\n    return _this;\n  }\n\n  _createClass(MDCFloatingLabelFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    }\n\n    /**\n     * Returns the width of the label element.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this.adapter_.getWidth();\n    }\n\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param {boolean} shouldShake adds shake class if true,\n     * otherwise removes shake class.\n     */\n\n  }, {\n    key: 'shake',\n    value: function shake(shouldShake) {\n      var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n\n      if (shouldShake) {\n        this.adapter_.addClass(LABEL_SHAKE);\n      } else {\n        this.adapter_.removeClass(LABEL_SHAKE);\n      }\n    }\n\n    /**\n     * Styles the label to float or dock.\n     * @param {boolean} shouldFloat adds float class if true, otherwise remove\n     * float and shake class to dock label.\n     */\n\n  }, {\n    key: 'float',\n    value: function float(shouldFloat) {\n      var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,\n          LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,\n          LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;\n\n      if (shouldFloat) {\n        this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n      } else {\n        this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n        this.adapter_.removeClass(LABEL_SHAKE);\n      }\n    }\n\n    /**\n     * Handles an interaction event on the root element.\n     */\n\n  }, {\n    key: 'handleShakeAnimationEnd_',\n    value: function handleShakeAnimationEnd_() {\n      var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }]);\n\n  return MDCFloatingLabelFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCFloatingLabelFoundation);\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n  ROOT: 'mdc-floating-label'\n};\n\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nvar MDCRippleAdapter = function () {\n  function MDCRippleAdapter() {\n    _classCallCheck(this, MDCRippleAdapter);\n  }\n\n  _createClass(MDCRippleAdapter, [{\n    key: \"browserSupportsCssVars\",\n\n    /** @return {boolean} */\n    value: function browserSupportsCssVars() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isUnbounded\",\n    value: function isUnbounded() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isSurfaceActive\",\n    value: function isSurfaceActive() {}\n\n    /** @return {boolean} */\n\n  }, {\n    key: \"isSurfaceDisabled\",\n    value: function isSurfaceDisabled() {}\n\n    /** @param {string} className */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {}\n\n    /** @param {string} className */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /** @param {!EventTarget} target */\n\n  }, {\n    key: \"containsEventTarget\",\n    value: function containsEventTarget(target) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerDocumentInteractionHandler\",\n    value: function registerDocumentInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterDocumentInteractionHandler\",\n    value: function deregisterDocumentInteractionHandler(evtType, handler) {}\n\n    /**\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"registerResizeHandler\",\n    value: function registerResizeHandler(handler) {}\n\n    /**\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: \"deregisterResizeHandler\",\n    value: function deregisterResizeHandler(handler) {}\n\n    /**\n     * @param {string} varName\n     * @param {?number|string} value\n     */\n\n  }, {\n    key: \"updateCssVariable\",\n    value: function updateCssVariable(varName, value) {}\n\n    /** @return {!ClientRect} */\n\n  }, {\n    key: \"computeBoundingRect\",\n    value: function computeBoundingRect() {}\n\n    /** @return {{x: number, y: number}} */\n\n  }, {\n    key: \"getWindowPageOffset\",\n    value: function getWindowPageOffset() {}\n  }]);\n\n  return MDCRippleAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCRippleAdapter);\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCLineRipple\", function() { return MDCLineRipple; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(31);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCLineRippleFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCLineRippleFoundation>}\n * @final\n */\n\nvar MDCLineRipple = function (_MDCComponent) {\n  _inherits(MDCLineRipple, _MDCComponent);\n\n  function MDCLineRipple() {\n    _classCallCheck(this, MDCLineRipple);\n\n    return _possibleConstructorReturn(this, (MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)).apply(this, arguments));\n  }\n\n  _createClass(MDCLineRipple, [{\n    key: 'activate',\n\n\n    /**\n     * Activates the line ripple\n     */\n    value: function activate() {\n      this.foundation_.activate();\n    }\n\n    /**\n     * Deactivates the line ripple\n     */\n\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.foundation_.deactivate();\n    }\n\n    /**\n     * Sets the transform origin given a user's click location. The `rippleCenter` is the\n     * x-coordinate of the middle of the ripple.\n     * @param {number} xCoordinate\n     */\n\n  }, {\n    key: 'setRippleCenter',\n    value: function setRippleCenter(xCoordinate) {\n      this.foundation_.setRippleCenter(xCoordinate);\n    }\n\n    /**\n     * @return {!MDCLineRippleFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */]( /** @type {!MDCLineRippleAdapter} */_extends({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this2.root_.classList.contains(className);\n        },\n        setStyle: function setStyle(propertyName, value) {\n          return _this2.root_.style[propertyName] = value;\n        },\n        registerEventHandler: function registerEventHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterEventHandler: function deregisterEventHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        }\n      }));\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCLineRipple}\n     */\n    value: function attachTo(root) {\n      return new MDCLineRipple(root);\n    }\n  }]);\n\n  return MDCLineRipple;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(32);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\n\nvar MDCLineRippleFoundation = function (_MDCFoundation) {\n  _inherits(MDCLineRippleFoundation, _MDCFoundation);\n\n  _createClass(MDCLineRippleFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n\n    /**\n     * {@see MDCLineRippleAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCLineRippleAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCLineRippleAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          setStyle: function setStyle() {},\n          registerEventHandler: function registerEventHandler() {},\n          deregisterEventHandler: function deregisterEventHandler() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCLineRippleAdapter=} adapter\n     */\n\n  }]);\n\n  function MDCLineRippleFoundation(adapter) {\n    _classCallCheck(this, MDCLineRippleFoundation);\n\n    /** @private {function(!Event): undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, _extends(MDCLineRippleFoundation.defaultAdapter, adapter)));\n\n    _this.transitionEndHandler_ = function (evt) {\n      return _this.handleTransitionEnd(evt);\n    };\n    return _this;\n  }\n\n  _createClass(MDCLineRippleFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    }\n\n    /**\n     * Activates the line ripple\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_DEACTIVATING);\n      this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_ACTIVE);\n    }\n\n    /**\n     * Sets the center of the ripple animation to the given X coordinate.\n     * @param {number} xCoordinate\n     */\n\n  }, {\n    key: 'setRippleCenter',\n    value: function setRippleCenter(xCoordinate) {\n      this.adapter_.setStyle('transform-origin', xCoordinate + 'px center');\n    }\n\n    /**\n     * Deactivates the line ripple\n     */\n\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_DEACTIVATING);\n    }\n\n    /**\n     * Handles a transition end event\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'handleTransitionEnd',\n    value: function handleTransitionEnd(evt) {\n      // Wait for the line ripple to be either transparent or opaque\n      // before emitting the animation end event\n      var isDeactivating = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_DEACTIVATING);\n\n      if (evt.propertyName === 'opacity') {\n        if (isDeactivating) {\n          this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_ACTIVE);\n          this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].LINE_RIPPLE_DEACTIVATING);\n        }\n      }\n    }\n  }]);\n\n  return MDCLineRippleFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCLineRippleFoundation);\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'\n};\n\n\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCNotchedOutline\", function() { return MDCNotchedOutline; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(23);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCNotchedOutlineFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}\n * @final\n */\n\nvar MDCNotchedOutline = function (_MDCComponent) {\n  _inherits(MDCNotchedOutline, _MDCComponent);\n\n  _createClass(MDCNotchedOutline, null, [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCNotchedOutline}\n     */\n    value: function attachTo(root) {\n      return new MDCNotchedOutline(root);\n    }\n    /** @param {...?} args */\n\n  }]);\n\n  function MDCNotchedOutline() {\n    var _ref;\n\n    _classCallCheck(this, MDCNotchedOutline);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {Element} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCNotchedOutline.__proto__ || Object.getPrototypeOf(MDCNotchedOutline)).call.apply(_ref, [this].concat(args)));\n\n    _this.notchElement_;\n    return _this;\n  }\n\n  _createClass(MDCNotchedOutline, [{\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      var label = this.root_.querySelector('.' + __WEBPACK_IMPORTED_MODULE_3__material_floating_label_index__[\"MDCFloatingLabelFoundation\"].cssClasses.ROOT);\n      this.notchElement_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_4__constants__[\"c\" /* strings */].NOTCH_ELEMENT_SELECTOR);\n\n      if (label) {\n        label.style.transitionDuration = '0s';\n        this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\" /* cssClasses */].OUTLINE_UPGRADED);\n        requestAnimationFrame(function () {\n          label.style.transitionDuration = '';\n        });\n      } else {\n        this.root_.classList.add(__WEBPACK_IMPORTED_MODULE_4__constants__[\"a\" /* cssClasses */].NO_LABEL);\n      }\n    }\n\n    /**\n      * Updates classes and styles to open the notch to the specified width.\n      * @param {number} notchWidth The notch width in the outline.\n      */\n\n  }, {\n    key: 'notch',\n    value: function notch(notchWidth) {\n      this.foundation_.notch(notchWidth);\n    }\n\n    /**\n     * Updates classes and styles to close the notch.\n     */\n\n  }, {\n    key: 'closeNotch',\n    value: function closeNotch() {\n      this.foundation_.closeNotch();\n    }\n\n    /**\n     * @return {!MDCNotchedOutlineFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */](\n      /** @type {!MDCNotchedOutlineAdapter} */_extends({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        setNotchWidthProperty: function setNotchWidthProperty(width) {\n          return _this2.notchElement_.style.setProperty('width', width + 'px');\n        },\n        removeNotchWidthProperty: function removeNotchWidthProperty() {\n          return _this2.notchElement_.style.removeProperty('width');\n        }\n      }));\n    }\n  }]);\n\n  return MDCNotchedOutline;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(23);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\n\nvar MDCNotchedOutlineFoundation = function (_MDCFoundation) {\n  _inherits(MDCNotchedOutlineFoundation, _MDCFoundation);\n\n  _createClass(MDCNotchedOutlineFoundation, null, [{\n    key: 'strings',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\" /* strings */];\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'cssClasses',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n\n    /** @return enum {number} */\n\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */];\n    }\n\n    /**\n     * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCNotchedOutlineAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCNotchedOutlineAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          setNotchWidthProperty: function setNotchWidthProperty() {},\n          removeNotchWidthProperty: function removeNotchWidthProperty() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCNotchedOutlineAdapter} adapter\n     */\n\n  }]);\n\n  function MDCNotchedOutlineFoundation(adapter) {\n    _classCallCheck(this, MDCNotchedOutlineFoundation);\n\n    return _possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, _extends(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth.\n   * @param {number} notchWidth\n   */\n\n\n  _createClass(MDCNotchedOutlineFoundation, [{\n    key: 'notch',\n    value: function notch(notchWidth) {\n      var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n\n\n      if (notchWidth > 0) {\n        notchWidth += __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */].NOTCH_ELEMENT_PADDING; // Add padding from left/right.\n      }\n\n      this.adapter_.setNotchWidthProperty(notchWidth);\n      this.adapter_.addClass(OUTLINE_NOTCHED);\n    }\n\n    /**\n     * Removes notched outline selector to close the notch in the outline.\n     */\n\n  }, {\n    key: 'closeNotch',\n    value: function closeNotch() {\n      var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n\n      this.adapter_.removeClass(OUTLINE_NOTCHED);\n      this.adapter_.removeNotchWidthProperty();\n    }\n  }]);\n\n  return MDCNotchedOutlineFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCNotchedOutlineFoundation);\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCRipple\", function() { return MDCRipple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RippleCapableSurface\", function() { return RippleCapableSurface; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCRippleFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"]; });\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"util\", function() { return __WEBPACK_IMPORTED_MODULE_3__util__; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\n\nvar MDCRipple = function (_MDCComponent) {\n  _inherits(MDCRipple, _MDCComponent);\n\n  /** @param {...?} args */\n  function MDCRipple() {\n    var _ref;\n\n    _classCallCheck(this, MDCRipple);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @type {boolean} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCRipple.__proto__ || Object.getPrototypeOf(MDCRipple)).call.apply(_ref, [this].concat(args)));\n\n    _this.disabled = false;\n\n    /** @private {boolean} */\n    _this.unbounded_;\n    return _this;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n\n\n  _createClass(MDCRipple, [{\n    key: 'setUnbounded_',\n\n\n    /**\n     * Closure Compiler throws an access control error when directly accessing a\n     * protected or private property inside a getter/setter, like unbounded above.\n     * By accessing the protected property inside a method, we solve that problem.\n     * That's why this function exists.\n     * @private\n     */\n    value: function setUnbounded_() {\n      this.foundation_.setUnbounded(this.unbounded_);\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this.foundation_.activate();\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.foundation_.deactivate();\n    }\n  }, {\n    key: 'layout',\n    value: function layout() {\n      this.foundation_.layout();\n    }\n\n    /**\n     * @return {!MDCRippleFoundation}\n     * @override\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\" /* default */](MDCRipple.createAdapter(this));\n    }\n\n    /** @override */\n\n  }, {\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n    }\n  }, {\n    key: 'unbounded',\n\n\n    /** @return {boolean} */\n    get: function get() {\n      return this.unbounded_;\n    }\n\n    /** @param {boolean} unbounded */\n    ,\n    set: function set(unbounded) {\n      this.unbounded_ = Boolean(unbounded);\n      this.setUnbounded_();\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$isUnbounded = _ref2.isUnbounded,\n          isUnbounded = _ref2$isUnbounded === undefined ? undefined : _ref2$isUnbounded;\n\n      var ripple = new MDCRipple(root);\n      // Only override unbounded behavior if option is explicitly specified\n      if (isUnbounded !== undefined) {\n        ripple.unbounded = /** @type {boolean} */isUnbounded;\n      }\n      return ripple;\n    }\n\n    /**\n     * @param {!RippleCapableSurface} instance\n     * @return {!MDCRippleAdapter}\n     */\n\n  }, {\n    key: 'createAdapter',\n    value: function createAdapter(instance) {\n      var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__[\"getMatchesProperty\"](HTMLElement.prototype);\n\n      return {\n        browserSupportsCssVars: function browserSupportsCssVars() {\n          return __WEBPACK_IMPORTED_MODULE_3__util__[\"supportsCssVariables\"](window);\n        },\n        isUnbounded: function isUnbounded() {\n          return instance.unbounded;\n        },\n        isSurfaceActive: function isSurfaceActive() {\n          return instance.root_[MATCHES](':active');\n        },\n        isSurfaceDisabled: function isSurfaceDisabled() {\n          return instance.disabled;\n        },\n        addClass: function addClass(className) {\n          return instance.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return instance.root_.classList.remove(className);\n        },\n        containsEventTarget: function containsEventTarget(target) {\n          return instance.root_.contains(target);\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return instance.root_.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return instance.root_.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        registerDocumentInteractionHandler: function registerDocumentInteractionHandler(evtType, handler) {\n          return document.documentElement.addEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler(evtType, handler) {\n          return document.documentElement.removeEventListener(evtType, handler, __WEBPACK_IMPORTED_MODULE_3__util__[\"applyPassive\"]());\n        },\n        registerResizeHandler: function registerResizeHandler(handler) {\n          return window.addEventListener('resize', handler);\n        },\n        deregisterResizeHandler: function deregisterResizeHandler(handler) {\n          return window.removeEventListener('resize', handler);\n        },\n        updateCssVariable: function updateCssVariable(varName, value) {\n          return instance.root_.style.setProperty(varName, value);\n        },\n        computeBoundingRect: function computeBoundingRect() {\n          return instance.root_.getBoundingClientRect();\n        },\n        getWindowPageOffset: function getWindowPageOffset() {\n          return { x: window.pageXOffset, y: window.pageYOffset };\n        }\n      };\n    }\n  }]);\n\n  return MDCRipple;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\" /* default */]);\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\n\n\nvar RippleCapableSurface = function RippleCapableSurface() {\n  _classCallCheck(this, RippleCapableSurface);\n};\n\n/** @protected {!Element} */\n\n\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\n\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(2);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: (!Event|undefined),\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nvar ActivationStateType = void 0;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nvar ListenerInfoType = void 0;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event=),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nvar ListenersType = void 0;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nvar PointType = void 0;\n\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nvar activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\n\nvar MDCRippleFoundation = function (_MDCFoundation) {\n  _inherits(MDCRippleFoundation, _MDCFoundation);\n\n  _createClass(MDCRippleFoundation, null, [{\n    key: 'cssClasses',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"c\" /* strings */];\n    }\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */];\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return {\n        browserSupportsCssVars: function browserSupportsCssVars() /* boolean - cached */{},\n        isUnbounded: function isUnbounded() /* boolean */{},\n        isSurfaceActive: function isSurfaceActive() /* boolean */{},\n        isSurfaceDisabled: function isSurfaceDisabled() /* boolean */{},\n        addClass: function addClass() /* className: string */{},\n        removeClass: function removeClass() /* className: string */{},\n        containsEventTarget: function containsEventTarget() /* target: !EventTarget */{},\n        registerInteractionHandler: function registerInteractionHandler() /* evtType: string, handler: EventListener */{},\n        deregisterInteractionHandler: function deregisterInteractionHandler() /* evtType: string, handler: EventListener */{},\n        registerDocumentInteractionHandler: function registerDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},\n        deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler() /* evtType: string, handler: EventListener */{},\n        registerResizeHandler: function registerResizeHandler() /* handler: EventListener */{},\n        deregisterResizeHandler: function deregisterResizeHandler() /* handler: EventListener */{},\n        updateCssVariable: function updateCssVariable() /* varName: string, value: string */{},\n        computeBoundingRect: function computeBoundingRect() /* ClientRect */{},\n        getWindowPageOffset: function getWindowPageOffset() /* {x: number, y: number} */{}\n      };\n    }\n  }]);\n\n  function MDCRippleFoundation(adapter) {\n    _classCallCheck(this, MDCRippleFoundation);\n\n    /** @private {number} */\n    var _this = _possibleConstructorReturn(this, (MDCRippleFoundation.__proto__ || Object.getPrototypeOf(MDCRippleFoundation)).call(this, _extends(MDCRippleFoundation.defaultAdapter, adapter)));\n\n    _this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    _this.frame_ = /** @type {!ClientRect} */{ width: 0, height: 0 };\n\n    /** @private {!ActivationStateType} */\n    _this.activationState_ = _this.defaultActivationState_();\n\n    /** @private {number} */\n    _this.initialSize_ = 0;\n\n    /** @private {number} */\n    _this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    _this.activateHandler_ = function (e) {\n      return _this.activate_(e);\n    };\n\n    /** @private {function(!Event=)} */\n    _this.deactivateHandler_ = function () {\n      return _this.deactivate_();\n    };\n\n    /** @private {function(!Event=)} */\n    _this.focusHandler_ = function () {\n      return _this.handleFocus();\n    };\n\n    /** @private {function(!Event=)} */\n    _this.blurHandler_ = function () {\n      return _this.handleBlur();\n    };\n\n    /** @private {!Function} */\n    _this.resizeHandler_ = function () {\n      return _this.layout();\n    };\n\n    /** @private {{left: number, top:number}} */\n    _this.unboundedCoords_ = {\n      left: 0,\n      top: 0\n    };\n\n    /** @private {number} */\n    _this.fgScale_ = 0;\n\n    /** @private {number} */\n    _this.activationTimer_ = 0;\n\n    /** @private {number} */\n    _this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    _this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    _this.activationTimerCallback_ = function () {\n      _this.activationAnimationHasEnded_ = true;\n      _this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {!Event|undefined} */\n    _this.previousActivationEvent_;\n    return _this;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n\n\n  _createClass(MDCRippleFoundation, [{\n    key: 'supportsPressRipple_',\n    value: function supportsPressRipple_() {\n      return this.adapter_.browserSupportsCssVars();\n    }\n\n    /**\n     * @return {!ActivationStateType}\n     */\n\n  }, {\n    key: 'defaultActivationState_',\n    value: function defaultActivationState_() {\n      return {\n        isActivated: false,\n        hasDeactivationUXRun: false,\n        wasActivatedByPointer: false,\n        wasElementMadeActive: false,\n        activationEvent: undefined,\n        isProgrammatic: false\n      };\n    }\n\n    /** @override */\n\n  }, {\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      var supportsPressRipple = this.supportsPressRipple_();\n\n      this.registerRootHandlers_(supportsPressRipple);\n\n      if (supportsPressRipple) {\n        var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,\n            ROOT = _MDCRippleFoundation$.ROOT,\n            UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;\n\n        requestAnimationFrame(function () {\n          _this2.adapter_.addClass(ROOT);\n          if (_this2.adapter_.isUnbounded()) {\n            _this2.adapter_.addClass(UNBOUNDED);\n            // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n            _this2.layoutInternal_();\n          }\n        });\n      }\n    }\n\n    /** @override */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      if (this.supportsPressRipple_()) {\n        if (this.activationTimer_) {\n          clearTimeout(this.activationTimer_);\n          this.activationTimer_ = 0;\n          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n        }\n\n        if (this.fgDeactivationRemovalTimer_) {\n          clearTimeout(this.fgDeactivationRemovalTimer_);\n          this.fgDeactivationRemovalTimer_ = 0;\n          this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n        }\n\n        var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,\n            ROOT = _MDCRippleFoundation$2.ROOT,\n            UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;\n\n        requestAnimationFrame(function () {\n          _this3.adapter_.removeClass(ROOT);\n          _this3.adapter_.removeClass(UNBOUNDED);\n          _this3.removeCssVars_();\n        });\n      }\n\n      this.deregisterRootHandlers_();\n      this.deregisterDeactivationHandlers_();\n    }\n\n    /**\n     * @param {boolean} supportsPressRipple Passed from init to save a redundant function call\n     * @private\n     */\n\n  }, {\n    key: 'registerRootHandlers_',\n    value: function registerRootHandlers_(supportsPressRipple) {\n      var _this4 = this;\n\n      if (supportsPressRipple) {\n        ACTIVATION_EVENT_TYPES.forEach(function (type) {\n          _this4.adapter_.registerInteractionHandler(type, _this4.activateHandler_);\n        });\n        if (this.adapter_.isUnbounded()) {\n          this.adapter_.registerResizeHandler(this.resizeHandler_);\n        }\n      }\n\n      this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n      this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    }\n\n    /**\n     * @param {!Event} e\n     * @private\n     */\n\n  }, {\n    key: 'registerDeactivationHandlers_',\n    value: function registerDeactivationHandlers_(e) {\n      var _this5 = this;\n\n      if (e.type === 'keydown') {\n        this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n      } else {\n        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {\n          _this5.adapter_.registerDocumentInteractionHandler(type, _this5.deactivateHandler_);\n        });\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'deregisterRootHandlers_',\n    value: function deregisterRootHandlers_() {\n      var _this6 = this;\n\n      ACTIVATION_EVENT_TYPES.forEach(function (type) {\n        _this6.adapter_.deregisterInteractionHandler(type, _this6.activateHandler_);\n      });\n      this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n      this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'deregisterDeactivationHandlers_',\n    value: function deregisterDeactivationHandlers_() {\n      var _this7 = this;\n\n      this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (type) {\n        _this7.adapter_.deregisterDocumentInteractionHandler(type, _this7.deactivateHandler_);\n      });\n    }\n\n    /** @private */\n\n  }, {\n    key: 'removeCssVars_',\n    value: function removeCssVars_() {\n      var _this8 = this;\n\n      var strings = MDCRippleFoundation.strings;\n\n      Object.keys(strings).forEach(function (k) {\n        if (k.indexOf('VAR_') === 0) {\n          _this8.adapter_.updateCssVariable(strings[k], null);\n        }\n      });\n    }\n\n    /**\n     * @param {!Event=} e\n     * @private\n     */\n\n  }, {\n    key: 'activate_',\n    value: function activate_(e) {\n      var _this9 = this;\n\n      if (this.adapter_.isSurfaceDisabled()) {\n        return;\n      }\n\n      var activationState = this.activationState_;\n      if (activationState.isActivated) {\n        return;\n      }\n\n      // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n      var previousActivationEvent = this.previousActivationEvent_;\n      var isSameInteraction = previousActivationEvent && e !== undefined && previousActivationEvent.type !== e.type;\n      if (isSameInteraction) {\n        return;\n      }\n\n      activationState.isActivated = true;\n      activationState.isProgrammatic = e === undefined;\n      activationState.activationEvent = e;\n      activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e !== undefined && (e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown');\n\n      var hasActivatedChild = e !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {\n        return _this9.adapter_.containsEventTarget(target);\n      });\n      if (hasActivatedChild) {\n        // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n        this.resetActivationState_();\n        return;\n      }\n\n      if (e !== undefined) {\n        activatedTargets.push( /** @type {!EventTarget} */e.target);\n        this.registerDeactivationHandlers_(e);\n      }\n\n      activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      }\n\n      requestAnimationFrame(function () {\n        // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n        activatedTargets = [];\n\n        if (!activationState.wasElementMadeActive && e !== undefined && (e.key === ' ' || e.keyCode === 32)) {\n          // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n          // active states inconsistently when they're called within event handling code:\n          // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n          // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n          // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n          // variable is set within a rAF callback for a submit button interaction (#2241).\n          activationState.wasElementMadeActive = _this9.checkElementMadeActive_(e);\n          if (activationState.wasElementMadeActive) {\n            _this9.animateActivation_();\n          }\n        }\n\n        if (!activationState.wasElementMadeActive) {\n          // Reset activation state immediately if element was not made active.\n          _this9.activationState_ = _this9.defaultActivationState_();\n        }\n      });\n    }\n\n    /**\n     * @param {!Event=} e\n     * @private\n     */\n\n  }, {\n    key: 'checkElementMadeActive_',\n    value: function checkElementMadeActive_(e) {\n      return e !== undefined && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;\n    }\n\n    /**\n     * @param {!Event=} event Optional event containing position information.\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate(event) {\n      this.activate_(event);\n    }\n\n    /** @private */\n\n  }, {\n    key: 'animateActivation_',\n    value: function animateActivation_() {\n      var _this10 = this;\n\n      var _MDCRippleFoundation$3 = MDCRippleFoundation.strings,\n          VAR_FG_TRANSLATE_START = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,\n          VAR_FG_TRANSLATE_END = _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END;\n      var _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,\n          FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,\n          FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION;\n      var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n\n\n      this.layoutInternal_();\n\n      var translateStart = '';\n      var translateEnd = '';\n\n      if (!this.adapter_.isUnbounded()) {\n        var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),\n            startPoint = _getFgTranslationCoor.startPoint,\n            endPoint = _getFgTranslationCoor.endPoint;\n\n        translateStart = startPoint.x + 'px, ' + startPoint.y + 'px';\n        translateEnd = endPoint.x + 'px, ' + endPoint.y + 'px';\n      }\n\n      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n      this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n      // Cancel any ongoing activation/deactivation animations\n      clearTimeout(this.activationTimer_);\n      clearTimeout(this.fgDeactivationRemovalTimer_);\n      this.rmBoundedActivationClasses_();\n      this.adapter_.removeClass(FG_DEACTIVATION);\n\n      // Force layout in order to re-trigger the animation.\n      this.adapter_.computeBoundingRect();\n      this.adapter_.addClass(FG_ACTIVATION);\n      this.activationTimer_ = setTimeout(function () {\n        return _this10.activationTimerCallback_();\n      }, DEACTIVATION_TIMEOUT_MS);\n    }\n\n    /**\n     * @private\n     * @return {{startPoint: PointType, endPoint: PointType}}\n     */\n\n  }, {\n    key: 'getFgTranslationCoordinates_',\n    value: function getFgTranslationCoordinates_() {\n      var _activationState_ = this.activationState_,\n          activationEvent = _activationState_.activationEvent,\n          wasActivatedByPointer = _activationState_.wasActivatedByPointer;\n\n\n      var startPoint = void 0;\n      if (wasActivatedByPointer) {\n        startPoint = Object(__WEBPACK_IMPORTED_MODULE_3__util__[\"getNormalizedEventCoords\"])(\n        /** @type {!Event} */activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());\n      } else {\n        startPoint = {\n          x: this.frame_.width / 2,\n          y: this.frame_.height / 2\n        };\n      }\n      // Center the element around the start point.\n      startPoint = {\n        x: startPoint.x - this.initialSize_ / 2,\n        y: startPoint.y - this.initialSize_ / 2\n      };\n\n      var endPoint = {\n        x: this.frame_.width / 2 - this.initialSize_ / 2,\n        y: this.frame_.height / 2 - this.initialSize_ / 2\n      };\n\n      return { startPoint: startPoint, endPoint: endPoint };\n    }\n\n    /** @private */\n\n  }, {\n    key: 'runDeactivationUXLogicIfReady_',\n    value: function runDeactivationUXLogicIfReady_() {\n      var _this11 = this;\n\n      // This method is called both when a pointing device is released, and when the activation animation ends.\n      // The deactivation animation should only run after both of those occur.\n      var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n      var _activationState_2 = this.activationState_,\n          hasDeactivationUXRun = _activationState_2.hasDeactivationUXRun,\n          isActivated = _activationState_2.isActivated;\n\n      var activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n      if (activationHasEnded && this.activationAnimationHasEnded_) {\n        this.rmBoundedActivationClasses_();\n        this.adapter_.addClass(FG_DEACTIVATION);\n        this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n          _this11.adapter_.removeClass(FG_DEACTIVATION);\n        }, __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* numbers */].FG_DEACTIVATION_MS);\n      }\n    }\n\n    /** @private */\n\n  }, {\n    key: 'rmBoundedActivationClasses_',\n    value: function rmBoundedActivationClasses_() {\n      var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n\n      this.adapter_.removeClass(FG_ACTIVATION);\n      this.activationAnimationHasEnded_ = false;\n      this.adapter_.computeBoundingRect();\n    }\n  }, {\n    key: 'resetActivationState_',\n    value: function resetActivationState_() {\n      var _this12 = this;\n\n      this.previousActivationEvent_ = this.activationState_.activationEvent;\n      this.activationState_ = this.defaultActivationState_();\n      // Touch devices may fire additional events for the same interaction within a short time.\n      // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n      setTimeout(function () {\n        return _this12.previousActivationEvent_ = undefined;\n      }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: 'deactivate_',\n    value: function deactivate_() {\n      var _this13 = this;\n\n      var activationState = this.activationState_;\n      // This can happen in scenarios such as when you have a keyup event that blurs the element.\n      if (!activationState.isActivated) {\n        return;\n      }\n\n      var state = /** @type {!ActivationStateType} */_extends({}, activationState);\n\n      if (activationState.isProgrammatic) {\n        requestAnimationFrame(function () {\n          return _this13.animateDeactivation_(state);\n        });\n        this.resetActivationState_();\n      } else {\n        this.deregisterDeactivationHandlers_();\n        requestAnimationFrame(function () {\n          _this13.activationState_.hasDeactivationUXRun = true;\n          _this13.animateDeactivation_(state);\n          _this13.resetActivationState_();\n        });\n      }\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.deactivate_();\n    }\n\n    /**\n     * @param {!ActivationStateType} options\n     * @private\n     */\n\n  }, {\n    key: 'animateDeactivation_',\n    value: function animateDeactivation_(_ref) {\n      var wasActivatedByPointer = _ref.wasActivatedByPointer,\n          wasElementMadeActive = _ref.wasElementMadeActive;\n\n      if (wasActivatedByPointer || wasElementMadeActive) {\n        this.runDeactivationUXLogicIfReady_();\n      }\n    }\n  }, {\n    key: 'layout',\n    value: function layout() {\n      var _this14 = this;\n\n      if (this.layoutFrame_) {\n        cancelAnimationFrame(this.layoutFrame_);\n      }\n      this.layoutFrame_ = requestAnimationFrame(function () {\n        _this14.layoutInternal_();\n        _this14.layoutFrame_ = 0;\n      });\n    }\n\n    /** @private */\n\n  }, {\n    key: 'layoutInternal_',\n    value: function layoutInternal_() {\n      var _this15 = this;\n\n      this.frame_ = this.adapter_.computeBoundingRect();\n      var maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n      // Surface diameter is treated differently for unbounded vs. bounded ripples.\n      // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n      // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n      // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n      // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n      // `overflow: hidden`.\n      var getBoundedRadius = function getBoundedRadius() {\n        var hypotenuse = Math.sqrt(Math.pow(_this15.frame_.width, 2) + Math.pow(_this15.frame_.height, 2));\n        return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n      };\n\n      this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n      // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n      this.initialSize_ = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n      this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n      this.updateLayoutCssVars_();\n    }\n\n    /** @private */\n\n  }, {\n    key: 'updateLayoutCssVars_',\n    value: function updateLayoutCssVars_() {\n      var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,\n          VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,\n          VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,\n          VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,\n          VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;\n\n\n      this.adapter_.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + 'px');\n      this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n      if (this.adapter_.isUnbounded()) {\n        this.unboundedCoords_ = {\n          left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),\n          top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)\n        };\n\n        this.adapter_.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + 'px');\n        this.adapter_.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + 'px');\n      }\n    }\n\n    /** @param {boolean} unbounded */\n\n  }, {\n    key: 'setUnbounded',\n    value: function setUnbounded(unbounded) {\n      var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n\n      if (unbounded) {\n        this.adapter_.addClass(UNBOUNDED);\n      } else {\n        this.adapter_.removeClass(UNBOUNDED);\n      }\n    }\n  }, {\n    key: 'handleFocus',\n    value: function handleFocus() {\n      var _this16 = this;\n\n      requestAnimationFrame(function () {\n        return _this16.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n      });\n    }\n  }, {\n    key: 'handleBlur',\n    value: function handleBlur() {\n      var _this17 = this;\n\n      requestAnimationFrame(function () {\n        return _this17.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n      });\n    }\n  }]);\n\n  return MDCRippleFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCRippleFoundation);\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return numbers; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'\n};\n\nvar strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'\n};\n\nvar numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300 };\n\n\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(160);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\n\nvar MDCTextFieldHelperTextFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldHelperTextFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldHelperTextFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */];\n    }\n\n    /**\n     * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldHelperTextAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldHelperTextAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          setAttr: function setAttr() {},\n          removeAttr: function removeAttr() {},\n          setContent: function setContent() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldHelperTextAdapter} adapter\n     */\n\n  }]);\n\n  function MDCTextFieldHelperTextFoundation(adapter) {\n    _classCallCheck(this, MDCTextFieldHelperTextFoundation);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this, _extends(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n\n\n  _createClass(MDCTextFieldHelperTextFoundation, [{\n    key: 'setContent',\n    value: function setContent(content) {\n      this.adapter_.setContent(content);\n    }\n\n    /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n\n  }, {\n    key: 'setPersistent',\n    value: function setPersistent(isPersistent) {\n      if (isPersistent) {\n        this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_PERSISTENT);\n      } else {\n        this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_PERSISTENT);\n      }\n    }\n\n    /**\n     * @param {boolean} isValidation True to make the helper text act as an\n     *   error validation message.\n     */\n\n  }, {\n    key: 'setValidation',\n    value: function setValidation(isValidation) {\n      if (isValidation) {\n        this.adapter_.addClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_VALIDATION_MSG);\n      } else {\n        this.adapter_.removeClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_VALIDATION_MSG);\n      }\n    }\n\n    /** Makes the helper text visible to the screen reader. */\n\n  }, {\n    key: 'showToScreenReader',\n    value: function showToScreenReader() {\n      this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */].ARIA_HIDDEN);\n    }\n\n    /**\n     * Sets the validity of the helper text based on the input validity.\n     * @param {boolean} inputIsValid\n     */\n\n  }, {\n    key: 'setValidity',\n    value: function setValidity(inputIsValid) {\n      var helperTextIsPersistent = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_PERSISTENT);\n      var helperTextIsValidationMsg = this.adapter_.hasClass(__WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */].HELPER_TEXT_VALIDATION_MSG);\n      var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n      if (validationMsgNeedsDisplay) {\n        this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */].ROLE, 'alert');\n      } else {\n        this.adapter_.removeAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */].ROLE);\n      }\n\n      if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n        this.hide_();\n      }\n    }\n\n    /**\n     * Hides the help text from screen readers.\n     * @private\n     */\n\n  }, {\n    key: 'hide_',\n    value: function hide_() {\n      this.adapter_.setAttr(__WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */].ARIA_HIDDEN, 'true');\n    }\n  }]);\n\n  return MDCTextFieldHelperTextFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCTextFieldHelperTextFoundation);\n\n/***/ }),\n\n/***/ 61:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(161);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldCharacterCounterAdapter>}\n * @final\n */\n\nvar MDCTextFieldCharacterCounterFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldCharacterCounterFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldCharacterCounterFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* cssClasses */];\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"b\" /* strings */];\n    }\n\n    /**\n     * {@see MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldCharacterCounterAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldCharacterCounterAdapter} */{\n          setContent: function setContent() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldCharacterCounterAdapter} adapter\n     */\n\n  }]);\n\n  function MDCTextFieldCharacterCounterFoundation(adapter) {\n    _classCallCheck(this, MDCTextFieldCharacterCounterFoundation);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldCharacterCounterFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldCharacterCounterFoundation)).call(this, _extends(MDCTextFieldCharacterCounterFoundation.defaultAdapter, adapter)));\n  }\n\n  /**\n   * @param {number} currentLength\n   * @param {number} maxLength\n   */\n\n\n  _createClass(MDCTextFieldCharacterCounterFoundation, [{\n    key: 'setCounterValue',\n    value: function setCounterValue(currentLength, maxLength) {\n      currentLength = Math.min(currentLength, maxLength);\n      this.adapter_.setContent(currentLength + ' / ' + maxLength);\n    }\n  }]);\n\n  return MDCTextFieldCharacterCounterFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCTextFieldCharacterCounterFoundation);\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(162);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\n\nvar MDCTextFieldIconFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldIconFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldIconFoundation, null, [{\n    key: 'strings',\n\n    /** @return enum {string} */\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* strings */];\n    }\n\n    /**\n     * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldIconAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldIconAdapter} */{\n          getAttr: function getAttr() {},\n          setAttr: function setAttr() {},\n          removeAttr: function removeAttr() {},\n          setContent: function setContent() {},\n          registerInteractionHandler: function registerInteractionHandler() {},\n          deregisterInteractionHandler: function deregisterInteractionHandler() {},\n          notifyIconAction: function notifyIconAction() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldIconAdapter} adapter\n     */\n\n  }]);\n\n  function MDCTextFieldIconFoundation(adapter) {\n    _classCallCheck(this, MDCTextFieldIconFoundation);\n\n    /** @private {string?} */\n    var _this = _possibleConstructorReturn(this, (MDCTextFieldIconFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this, _extends(MDCTextFieldIconFoundation.defaultAdapter, adapter)));\n\n    _this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    _this.interactionHandler_ = function (evt) {\n      return _this.handleInteraction(evt);\n    };\n    return _this;\n  }\n\n  _createClass(MDCTextFieldIconFoundation, [{\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);\n      });\n    }\n\n    /** @param {boolean} disabled */\n\n  }, {\n    key: 'setDisabled',\n    value: function setDisabled(disabled) {\n      if (!this.savedTabIndex_) {\n        return;\n      }\n\n      if (disabled) {\n        this.adapter_.setAttr('tabindex', '-1');\n        this.adapter_.removeAttr('role');\n      } else {\n        this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n        this.adapter_.setAttr('role', __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* strings */].ICON_ROLE);\n      }\n    }\n\n    /** @param {string} label */\n\n  }, {\n    key: 'setAriaLabel',\n    value: function setAriaLabel(label) {\n      this.adapter_.setAttr('aria-label', label);\n    }\n\n    /** @param {string} content */\n\n  }, {\n    key: 'setContent',\n    value: function setContent(content) {\n      this.adapter_.setContent(content);\n    }\n\n    /**\n     * Handles an interaction event\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'handleInteraction',\n    value: function handleInteraction(evt) {\n      if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifyIconAction();\n      }\n    }\n  }]);\n\n  return MDCTextFieldIconFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCTextFieldIconFoundation);\n\n/***/ }),\n\n/***/ 83:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return numbers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return VALIDATION_ATTR_WHITELIST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ALWAYS_FLOAT_TYPES; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nvar strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple'\n};\n\n/** @enum {string} */\nvar cssClasses = {\n  ROOT: 'mdc-text-field',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  TEXTAREA: 'mdc-text-field--textarea',\n  OUTLINED: 'mdc-text-field--outlined',\n  WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n  HELPER_LINE: 'mdc-text-field-helper-line'\n};\n\n/** @enum {number} */\nvar numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nvar VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength'];\n\n// Label should always float for these types as they show some UI even if value is empty.\nvar ALWAYS_FLOAT_TYPES = ['color', 'date', 'datetime-local', 'month', 'range', 'time', 'week'];\n\n\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDCTextFieldAdapter */\n/* unused harmony export NativeInputType */\n/* unused harmony export FoundationMapType */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helper_text_foundation__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__character_counter_foundation__ = __webpack_require__(61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__icon_foundation__ = __webpack_require__(62);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-unused-vars */\n\n\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nvar NativeInputType = void 0;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   characterCounter: (!MDCTextFieldCharacterCounterFoundation|undefined),\n *   leadingIcon: (!MDCTextFieldIconFoundation|undefined),\n *   trailingIcon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nvar FoundationMapType = void 0;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\n\nvar MDCTextFieldAdapter = function () {\n  function MDCTextFieldAdapter() {\n    _classCallCheck(this, MDCTextFieldAdapter);\n  }\n\n  _createClass(MDCTextFieldAdapter, [{\n    key: 'addClass',\n\n    /**\n     * Adds a class to the root Element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the root Element.\n     * @param {string} className\n     */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(className) {}\n\n    /**\n     * Returns true if the root element contains the given class name.\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasClass',\n    value: function hasClass(className) {}\n\n    /**\n     * Registers an event handler on the root element for a given event.\n     * @param {string} type\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'registerTextFieldInteractionHandler',\n    value: function registerTextFieldInteractionHandler(type, handler) {}\n\n    /**\n     * Deregisters an event handler on the root element for a given event.\n     * @param {string} type\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'deregisterTextFieldInteractionHandler',\n    value: function deregisterTextFieldInteractionHandler(type, handler) {}\n\n    /**\n     * Registers an event listener on the native input element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'registerInputInteractionHandler',\n    value: function registerInputInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the native input element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'deregisterInputInteractionHandler',\n    value: function deregisterInputInteractionHandler(evtType, handler) {}\n\n    /**\n     * Registers a validation attribute change listener on the input element.\n     * Handler accepts list of attribute names.\n     * @param {function(!Array<string>): undefined} handler\n     * @return {!MutationObserver}\n     */\n\n  }, {\n    key: 'registerValidationAttributeChangeHandler',\n    value: function registerValidationAttributeChangeHandler(handler) {}\n\n    /**\n     * Disconnects a validation attribute observer on the input element.\n     * @param {!MutationObserver} observer\n     */\n\n  }, {\n    key: 'deregisterValidationAttributeChangeHandler',\n    value: function deregisterValidationAttributeChangeHandler(observer) {}\n\n    /**\n     * Returns an object representing the native text input element, with a\n     * similar API shape. The object returned should include the value, disabled\n     * and badInput properties, as well as the checkValidity() function. We never\n     * alter the value within our code, however we do update the disabled\n     * property, so if you choose to duck-type the return value for this method\n     * in your implementation it's important to keep this in mind. Also note that\n     * this method can return null, which the foundation will handle gracefully.\n     * @return {?Element|?NativeInputType}\n     */\n\n  }, {\n    key: 'getNativeInput',\n    value: function getNativeInput() {}\n\n    /**\n     * Returns true if the textfield is focused.\n     * We achieve this via `document.activeElement === this.root_`.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {}\n\n    /**\n     * Activates the line ripple.\n     */\n\n  }, {\n    key: 'activateLineRipple',\n    value: function activateLineRipple() {}\n\n    /**\n     * Deactivates the line ripple.\n     */\n\n  }, {\n    key: 'deactivateLineRipple',\n    value: function deactivateLineRipple() {}\n\n    /**\n     * Sets the transform origin of the line ripple.\n     * @param {number} normalizedX\n     */\n\n  }, {\n    key: 'setLineRippleTransformOrigin',\n    value: function setLineRippleTransformOrigin(normalizedX) {}\n\n    /**\n     * Only implement if label exists.\n     * Shakes label if shouldShake is true.\n     * @param {boolean} shouldShake\n     */\n\n  }, {\n    key: 'shakeLabel',\n    value: function shakeLabel(shouldShake) {}\n\n    /**\n     * Only implement if label exists.\n     * Floats the label above the input element if shouldFloat is true.\n     * @param {boolean} shouldFloat\n     */\n\n  }, {\n    key: 'floatLabel',\n    value: function floatLabel(shouldFloat) {}\n\n    /**\n     * Returns true if label element exists, false if it doesn't.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasLabel',\n    value: function hasLabel() {}\n\n    /**\n     * Only implement if label exists.\n     * Returns width of label in pixels.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getLabelWidth',\n    value: function getLabelWidth() {}\n\n    /**\n     * Returns true if outline element exists, false if it doesn't.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasOutline',\n    value: function hasOutline() {}\n\n    /**\n     * Only implement if outline element exists.\n     * @param {number} labelWidth\n     */\n\n  }, {\n    key: 'notchOutline',\n    value: function notchOutline(labelWidth) {}\n\n    /**\n     * Only implement if outline element exists.\n     * Closes notch in outline element.\n     */\n\n  }, {\n    key: 'closeOutline',\n    value: function closeOutline() {}\n  }]);\n\n  return MDCTextFieldAdapter;\n}();\n\n\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCTextFieldHelperTextAdapter = function () {\n  function MDCTextFieldHelperTextAdapter() {\n    _classCallCheck(this, MDCTextFieldHelperTextAdapter);\n  }\n\n  _createClass(MDCTextFieldHelperTextAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the helper text element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the helper text element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Returns whether or not the helper text element contains the given class.\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(className) {}\n\n    /**\n     * Sets an attribute with a given value on the helper text element.\n     * @param {string} attr\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, value) {}\n\n    /**\n     * Removes an attribute from the helper text element.\n     * @param {string} attr\n     */\n\n  }, {\n    key: \"removeAttr\",\n    value: function removeAttr(attr) {}\n\n    /**\n     * Sets the text content for the helper text element.\n     * @param {string} content\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {}\n  }]);\n\n  return MDCTextFieldHelperTextAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCTextFieldHelperTextAdapter);\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Character Counter.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField character counter into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCTextFieldCharacterCounterAdapter = function () {\n  function MDCTextFieldCharacterCounterAdapter() {\n    _classCallCheck(this, MDCTextFieldCharacterCounterAdapter);\n  }\n\n  _createClass(MDCTextFieldCharacterCounterAdapter, [{\n    key: \"setContent\",\n\n    /**\n     * Sets the text content of character counter element.\n     * @param {string} content\n     */\n    value: function setContent(content) {}\n  }]);\n\n  return MDCTextFieldCharacterCounterAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCTextFieldCharacterCounterAdapter);\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCTextFieldIconAdapter = function () {\n  function MDCTextFieldIconAdapter() {\n    _classCallCheck(this, MDCTextFieldIconAdapter);\n  }\n\n  _createClass(MDCTextFieldIconAdapter, [{\n    key: \"getAttr\",\n\n    /**\n     * Gets the value of an attribute on the icon element.\n     * @param {string} attr\n     * @return {string}\n     */\n    value: function getAttr(attr) {}\n\n    /**\n     * Sets an attribute on the icon element.\n     * @param {string} attr\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, value) {}\n\n    /**\n     * Removes an attribute from the icon element.\n     * @param {string} attr\n     */\n\n  }, {\n    key: \"removeAttr\",\n    value: function removeAttr(attr) {}\n\n    /**\n     * Sets the text content of the icon element.\n     * @param {string} content\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {}\n\n    /**\n     * Registers an event listener on the icon element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the icon element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n\n    /**\n     * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n     */\n\n  }, {\n    key: \"notifyIconAction\",\n    value: function notifyIconAction() {}\n  }]);\n\n  return MDCTextFieldIconAdapter;\n}();\n\n/* unused harmony default export */ var _unused_webpack_default_export = (MDCTextFieldIconAdapter);\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=mdc.textfield.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/app/browser/node_modules/@material/textfield/dist/mdc.textfield.js\n");

/***/ }),

/***/ "./packages/app/browser/node_modules/material-components-web/dist/material-components-web.css":
/*!****************************************************************************************************!*\
  !*** ./packages/app/browser/node_modules/material-components-web/dist/material-components-web.css ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hcHAvYnJvd3Nlci9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvZGlzdC9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9hcHAvYnJvd3Nlci9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtY29tcG9uZW50cy13ZWIvZGlzdC9tYXRlcmlhbC1jb21wb25lbnRzLXdlYi5jc3M/YzA2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/app/browser/node_modules/material-components-web/dist/material-components-web.css\n");

/***/ }),

/***/ "./packages/app/browser/src/app.scss":
/*!*******************************************!*\
  !*** ./packages/app/browser/src/app.scss ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hcHAvYnJvd3Nlci9zcmMvYXBwLnNjc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9hcHAvYnJvd3Nlci9zcmMvYXBwLnNjc3M/Y2JlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/app/browser/src/app.scss\n");

/***/ }),

/***/ "./packages/app/browser/src/app.ts":
/*!*****************************************!*\
  !*** ./packages/app/browser/src/app.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//@ts-ignore\nconst textfield_1 = __webpack_require__(/*! @material/textfield */ \"./packages/app/browser/node_modules/@material/textfield/dist/mdc.textfield.js\");\n//@ts-ignore\nconst checkbox_1 = __webpack_require__(/*! @material/checkbox */ \"./packages/app/browser/node_modules/@material/checkbox/dist/mdc.checkbox.js\");\n__webpack_require__(/*! material-components-web/dist/material-components-web.css */ \"./packages/app/browser/node_modules/material-components-web/dist/material-components-web.css\");\n__webpack_require__(/*! ./app.scss */ \"./packages/app/browser/src/app.scss\");\ndocument.querySelectorAll(\".mdc-text-field\").forEach((d) => new textfield_1.MDCTextField(d));\ndocument.querySelectorAll(\".mdc-checkbox\").forEach((d) => new checkbox_1.MDCCheckbox(d));\nwindow.addEventListener(\"message\", (event) => {\n    if (event.data === \"app\") {\n        document.body.classList.add(\"in-app\");\n        const back = document.querySelector(\".back\");\n        back.addEventListener(\"click\", () => {\n            event.source.postMessage(\"back\", event.origin);\n        });\n    }\n});\nconst password = document.getElementById(\"password\");\nconst username = document.getElementById(\"username\");\nconst form = document.getElementById(\"login-form\");\nif (!form) {\n    throw new Error(\"No password form found\");\n}\nform.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    document.cookie = `password=${password.value}; `\n        + `path=${location.pathname.replace(/\\/login\\/?$/, \"/\")}; `\n        + `domain=${location.hostname}`;\n    document.cookie += `username=${password.value}; `\n        + `path=${location.pathname.replace(/\\/login\\/?$/, \"/\")}; `\n        + `domain=${location.hostname}`;\n    location.reload();\n});\n/**\n * Notify user on load of page if previous password was unsuccessful\n */\nconst reg = new RegExp(`password=(\\\\w+);?`);\nconst matches = document.cookie.match(reg);\nconst errorDisplay = document.getElementById(\"error-display\");\nif (document.referrer === document.location.href && matches) {\n    errorDisplay.innerText = \"Password is incorrect!\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9hcHAvYnJvd3Nlci9zcmMvYXBwLnRzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvYXBwL2Jyb3dzZXIvc3JjL2FwcC50cz8yMTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vQHRzLWlnbm9yZVxuaW1wb3J0IHsgTURDVGV4dEZpZWxkIH0gZnJvbSBcIkBtYXRlcmlhbC90ZXh0ZmllbGRcIjtcbi8vQHRzLWlnbm9yZVxuaW1wb3J0IHsgTURDQ2hlY2tib3ggfSBmcm9tIFwiQG1hdGVyaWFsL2NoZWNrYm94XCI7XG5pbXBvcnQgXCJtYXRlcmlhbC1jb21wb25lbnRzLXdlYi9kaXN0L21hdGVyaWFsLWNvbXBvbmVudHMtd2ViLmNzc1wiO1xuaW1wb3J0IFwiLi9hcHAuc2Nzc1wiO1xuXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1kYy10ZXh0LWZpZWxkXCIpLmZvckVhY2goKGQpID0+IG5ldyBNRENUZXh0RmllbGQoZCkpO1xuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tZGMtY2hlY2tib3hcIikuZm9yRWFjaCgoZCkgPT4gbmV3IE1EQ0NoZWNrYm94KGQpKTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIChldmVudCkgPT4ge1xuXHRpZiAoZXZlbnQuZGF0YSA9PT0gXCJhcHBcIikge1xuXHRcdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChcImluLWFwcFwiKTtcblxuXHRcdGNvbnN0IGJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJhY2tcIikhO1xuXHRcdGJhY2suYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcblx0XHRcdChldmVudC5zb3VyY2UgYXMgV2luZG93KS5wb3N0TWVzc2FnZShcImJhY2tcIiwgZXZlbnQub3JpZ2luKTtcblx0XHR9KTtcblx0fVxufSk7XG5cbmNvbnN0IHBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXNzd29yZFwiKSBhcyBIVE1MSW5wdXRFbGVtZW50O1xuY29uc3QgdXNlcm5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXJuYW1lXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XG5jb25zdCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dpbi1mb3JtXCIpIGFzIEhUTUxGb3JtRWxlbWVudDtcblxuaWYgKCFmb3JtKSB7XG5cdHRocm93IG5ldyBFcnJvcihcIk5vIHBhc3N3b3JkIGZvcm0gZm91bmRcIik7XG59XG5cbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuXHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdGRvY3VtZW50LmNvb2tpZSA9IGBwYXNzd29yZD0ke3Bhc3N3b3JkLnZhbHVlfTsgYFxuXHRcdCsgYHBhdGg9JHtsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9sb2dpblxcLz8kLywgXCIvXCIpfTsgYFxuXHRcdCsgYGRvbWFpbj0ke2xvY2F0aW9uLmhvc3RuYW1lfWA7XG5cdGRvY3VtZW50LmNvb2tpZSArPSBgdXNlcm5hbWU9JHtwYXNzd29yZC52YWx1ZX07IGBcblx0XHQrIGBwYXRoPSR7bG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvbG9naW5cXC8/JC8sIFwiL1wiKX07IGBcblx0XHQrIGBkb21haW49JHtsb2NhdGlvbi5ob3N0bmFtZX1gO1xuXHRsb2NhdGlvbi5yZWxvYWQoKTtcbn0pO1xuXG4vKipcbiAqIE5vdGlmeSB1c2VyIG9uIGxvYWQgb2YgcGFnZSBpZiBwcmV2aW91cyBwYXNzd29yZCB3YXMgdW5zdWNjZXNzZnVsXG4gKi9cbmNvbnN0IHJlZyA9IG5ldyBSZWdFeHAoYHBhc3N3b3JkPShcXFxcdyspOz9gKTtcbmNvbnN0IG1hdGNoZXMgPSBkb2N1bWVudC5jb29raWUubWF0Y2gocmVnKTtcbmNvbnN0IGVycm9yRGlzcGxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXJyb3ItZGlzcGxheVwiKSBhcyBIVE1MRGl2RWxlbWVudDtcblxuaWYgKGRvY3VtZW50LnJlZmVycmVyID09PSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmICYmIG1hdGNoZXMpIHtcblx0ZXJyb3JEaXNwbGF5LmlubmVyVGV4dCA9IFwiUGFzc3dvcmQgaXMgaW5jb3JyZWN0IVwiO1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/app/browser/src/app.ts\n");

/***/ }),

/***/ 0:
/*!****************************************************************************************************!*\
  !*** multi webpack-hot-middleware/client?reload=true&quiet=true ./packages/app/browser/src/app.ts ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! webpack-hot-middleware/client?reload=true&quiet=true */"./node_modules/webpack-hot-middleware/client.js?reload=true&quiet=true");
module.exports = __webpack_require__(/*! /home/coding/workspace/packages/app/browser/src/app.ts */"./packages/app/browser/src/app.ts");


/***/ })

/******/ });